

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Mar 11 15:23:19 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F27K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,noexec
    21                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	text0,global,reloc=2,class=CODE,delta=1
    27                           	psect	text1,global,reloc=2,class=CODE,delta=1
    28                           	psect	text2,global,reloc=2,class=CODE,delta=1
    29                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text4,global,reloc=2,class=CODE,delta=1
    31                           	psect	text5,global,reloc=2,class=CODE,delta=1
    32                           	psect	text6,global,reloc=2,class=CODE,delta=1
    33                           	psect	text7,global,reloc=2,class=CODE,delta=1
    34                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text9,global,reloc=2,class=CODE,delta=1
    36                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text11,global,reloc=2,class=CODE,delta=1
    38                           	psect	text12,global,reloc=2,class=CODE,delta=1
    39                           	psect	text13,global,reloc=2,class=CODE,delta=1
    40                           	psect	text14,global,reloc=2,class=CODE,delta=1
    41                           	psect	text15,global,reloc=2,class=CODE,delta=1
    42                           	psect	text16,global,reloc=2,class=CODE,delta=1
    43                           	psect	text17,global,reloc=2,class=CODE,delta=1
    44                           	psect	text18,global,reloc=2,class=CODE,delta=1
    45                           	psect	text19,global,reloc=2,class=CODE,delta=1
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1
    47                           	psect	text21,global,reloc=2,class=CODE,delta=1
    48                           	psect	text22,global,reloc=2,class=CODE,delta=1
    49                           	psect	text23,global,reloc=2,class=CODE,delta=1
    50                           	psect	text24,global,reloc=2,class=CODE,delta=1
    51                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text26,global,reloc=2,class=CODE,delta=1
    53                           	psect	text27,global,reloc=2,class=CODE,delta=1
    54                           	psect	text28,global,reloc=2,class=CODE,delta=1
    55                           	psect	text29,global,reloc=2,class=CODE,delta=1
    56                           	psect	text30,global,reloc=2,class=CODE,delta=1
    57                           	psect	text31,global,reloc=2,class=CODE,delta=1
    58                           	psect	text32,global,reloc=2,class=CODE,delta=1
    59                           	psect	text33,global,reloc=2,class=CODE,delta=1
    60                           	psect	text34,global,reloc=2,class=CODE,delta=1
    61                           	psect	text35,global,reloc=2,class=CODE,delta=1
    62                           	psect	text36,global,reloc=2,class=CODE,delta=1
    63                           	psect	text37,global,reloc=2,class=CODE,delta=1
    64                           	psect	text38,global,reloc=2,class=CODE,delta=1
    65                           	psect	text39,global,reloc=2,class=CODE,delta=1
    66                           	psect	text40,global,reloc=2,class=CODE,delta=1
    67                           	psect	text41,global,reloc=2,class=CODE,delta=1
    68                           	psect	text42,global,reloc=2,class=CODE,delta=1
    69                           	psect	text43,global,reloc=2,class=CODE,delta=1
    70                           	psect	text44,global,reloc=2,class=CODE,delta=1
    71                           	psect	text45,global,reloc=2,class=CODE,delta=1
    72                           	psect	text46,global,reloc=2,class=CODE,delta=1
    73                           	psect	text47,global,reloc=2,class=CODE,delta=1
    74                           	psect	text48,global,reloc=2,class=CODE,delta=1
    75                           	psect	text49,global,reloc=2,class=CODE,delta=1
    76                           	psect	text50,global,reloc=2,class=CODE,delta=1
    77                           	psect	text51,global,reloc=2,class=CODE,delta=1
    78                           	psect	text52,global,reloc=2,class=CODE,delta=1
    79                           	psect	text53,global,reloc=2,class=CODE,delta=1
    80                           	psect	text54,global,reloc=2,class=CODE,delta=1
    81                           	psect	text55,global,reloc=2,class=CODE,delta=1
    82                           	psect	text56,global,reloc=2,class=CODE,delta=1
    83                           	psect	text57,global,reloc=2,class=CODE,delta=1
    84                           	psect	text58,global,reloc=2,class=CODE,delta=1
    85                           	psect	text59,global,reloc=2,class=CODE,delta=1
    86                           	psect	text60,global,reloc=2,class=CODE,delta=1
    87                           	psect	text61,global,reloc=2,class=CODE,delta=1
    88                           	psect	text62,global,reloc=2,class=CODE,delta=1
    89                           	psect	text63,global,reloc=2,class=CODE,delta=1
    90                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text65,global,reloc=2,class=CODE,delta=1
    92                           	psect	text66,global,reloc=2,class=CODE,delta=1
    93                           	psect	text67,global,reloc=2,class=CODE,delta=1
    94                           	psect	text68,global,reloc=2,class=CODE,delta=1
    95                           	psect	text69,global,reloc=2,class=CODE,delta=1
    96                           	psect	text70,global,reloc=2,class=CODE,delta=1
    97                           	psect	text71,global,reloc=2,class=CODE,delta=1
    98                           	psect	text72,global,reloc=2,class=CODE,delta=1
    99                           	psect	text73,global,reloc=2,class=CODE,delta=1
   100                           	psect	text74,global,reloc=2,class=CODE,delta=1
   101                           	psect	text75,global,reloc=2,class=CODE,delta=1
   102                           	psect	text76,global,reloc=2,class=CODE,delta=1
   103                           	psect	text77,global,reloc=2,class=CODE,delta=1
   104                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text79,global,reloc=2,class=CODE,delta=1
   106                           	psect	text80,global,reloc=2,class=CODE,delta=1
   107                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text83,global,reloc=2,class=CODE,delta=1
   110                           	psect	text84,global,reloc=2,class=CODE,delta=1
   111                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=2
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   126                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=2
   127                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text102,global,reloc=2,class=CODE,delta=1
   129                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=2
   130                           	psect	text104,global,reloc=2,class=CODE,delta=1
   131                           	psect	text105,global,reloc=2,class=CODE,delta=1
   132                           	psect	text106,global,reloc=2,class=CODE,delta=1
   133                           	psect	text107,global,reloc=2,class=CODE,delta=1
   134                           	psect	text108,global,reloc=2,class=CODE,delta=1
   135                           	psect	text109,global,reloc=2,class=CODE,delta=1
   136                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=2
   137                           	psect	text111,global,reloc=2,class=CODE,delta=1
   138                           	psect	text112,global,reloc=2,class=CODE,delta=1
   139                           	psect	text113,global,reloc=2,class=CODE,delta=1
   140                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text116,global,reloc=2,class=CODE,delta=1
   143                           	psect	text117,global,reloc=2,class=CODE,delta=1
   144                           	psect	text118,global,reloc=2,class=CODE,delta=1
   145                           	psect	text119,global,reloc=2,class=CODE,delta=1
   146                           	psect	text120,global,reloc=2,class=CODE,delta=1,inline
   147                           	psect	text121,global,reloc=2,class=CODE,delta=1
   148                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   149                           	psect	text123,global,reloc=2,class=CODE,delta=1
   150                           	psect	text124,global,reloc=2,class=CODE,delta=1
   151                           	psect	text125,global,reloc=2,class=CODE,delta=1
   152                           	psect	text126,global,reloc=2,class=CODE,delta=1
   153                           	psect	text127,global,reloc=2,class=CODE,delta=1
   154                           	psect	text128,global,reloc=2,class=CODE,delta=1
   155                           	psect	text129,global,reloc=2,class=CODE,delta=1
   156                           	psect	text130,global,reloc=2,class=CODE,delta=1
   157                           	psect	text131,global,reloc=2,class=CODE,delta=1
   158                           	psect	text132,global,reloc=2,class=CODE,delta=1
   159                           	psect	text133,global,reloc=2,class=CODE,delta=1
   160                           	psect	text134,global,reloc=2,class=CODE,delta=1
   161                           	psect	text135,global,reloc=2,class=CODE,delta=1
   162                           	psect	text136,global,reloc=2,class=CODE,delta=1
   163                           	psect	text137,global,reloc=2,class=CODE,delta=1
   164                           	psect	text138,global,reloc=2,class=CODE,delta=1
   165                           	psect	text139,global,reloc=2,class=CODE,delta=1
   166                           	psect	text140,global,reloc=2,class=CODE,delta=1
   167                           	psect	text141,global,reloc=2,class=CODE,delta=1
   168                           	psect	text142,global,reloc=2,class=CODE,delta=1
   169                           	psect	text143,global,reloc=2,class=CODE,delta=1
   170                           	psect	text144,global,reloc=2,class=CODE,delta=1
   171                           	psect	text145,global,reloc=2,class=CODE,delta=1
   172                           	psect	text146,global,reloc=2,class=CODE,delta=1
   173                           	psect	text147,global,reloc=2,class=CODE,delta=1
   174                           	psect	text148,global,reloc=2,class=CODE,delta=1
   175                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   176                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   177                           	psect	text150,global,reloc=2,class=CODE,delta=1
   178                           	psect	text151,global,reloc=2,class=CODE,delta=1
   179                           	psect	text152,global,reloc=2,class=CODE,delta=1
   180                           	psect	text153,global,reloc=2,class=CODE,delta=1
   181                           	psect	text154,global,reloc=2,class=CODE,delta=1
   182                           	psect	text155,global,reloc=2,class=CODE,delta=1
   183                           	psect	text156,global,reloc=2,class=CODE,delta=1
   184                           	psect	text157,global,reloc=2,class=CODE,delta=1
   185                           	psect	text158,global,reloc=2,class=CODE,delta=1
   186                           	psect	text159,global,reloc=2,class=CODE,delta=1
   187                           	psect	text160,global,reloc=2,class=CODE,delta=1
   188                           	psect	text161,global,reloc=2,class=CODE,delta=1
   189                           	psect	text162,global,reloc=2,class=CODE,delta=1
   190                           	psect	text163,global,reloc=2,class=CODE,delta=1
   191                           	psect	text164,global,reloc=2,class=CODE,delta=1
   192                           	psect	text165,global,reloc=2,class=CODE,delta=1
   193                           	psect	text166,global,reloc=2,class=CODE,delta=1
   194                           	psect	text167,global,reloc=2,class=CODE,delta=1
   195                           	psect	text168,global,reloc=2,class=CODE,delta=1
   196                           	psect	text169,global,reloc=2,class=CODE,delta=1
   197                           	psect	text170,global,reloc=2,class=CODE,delta=1
   198                           	psect	text171,global,reloc=2,class=CODE,delta=1
   199                           	psect	text172,global,reloc=2,class=CODE,delta=1
   200                           	psect	text173,global,reloc=2,class=CODE,delta=1
   201                           	psect	text174,global,reloc=2,class=CODE,delta=1
   202                           	psect	text175,global,reloc=2,class=CODE,delta=1
   203                           	psect	text176,global,reloc=2,class=CODE,delta=1
   204                           	psect	text177,global,reloc=2,class=CODE,delta=1
   205                           	psect	text178,global,reloc=2,class=CODE,delta=1
   206                           	psect	text179,global,reloc=2,class=CODE,delta=1
   207                           	psect	text180,global,reloc=2,class=CODE,delta=1
   208                           	psect	text181,global,reloc=2,class=CODE,delta=1
   209                           	psect	text182,global,reloc=2,class=CODE,delta=1
   210                           	psect	text183,global,reloc=2,class=CODE,delta=1
   211                           	psect	text184,global,reloc=2,class=CODE,delta=1
   212                           	psect	text185,global,reloc=2,class=CODE,delta=1
   213                           	psect	text186,global,reloc=2,class=CODE,delta=1
   214                           	psect	text187,global,reloc=2,class=CODE,delta=1
   215                           	psect	text188,global,reloc=2,class=CODE,delta=1
   216                           	psect	text189,global,reloc=2,class=CODE,delta=1
   217                           	psect	text190,global,reloc=2,class=CODE,delta=1
   218                           	psect	text191,global,reloc=2,class=CODE,delta=1
   219                           	psect	text192,global,reloc=2,class=CODE,delta=1
   220                           	psect	text193,global,reloc=2,class=CODE,delta=1
   221                           	psect	text194,global,reloc=2,class=CODE,delta=1
   222                           	psect	text195,global,reloc=2,class=CODE,delta=1
   223                           	psect	text196,global,reloc=2,class=CODE,delta=1
   224                           	psect	text197,global,reloc=2,class=CODE,delta=1
   225                           	psect	text198,global,reloc=2,class=CODE,delta=1
   226                           	psect	text199,global,reloc=2,class=CODE,delta=1
   227                           	psect	text200,global,reloc=2,class=CODE,delta=1
   228                           	psect	text201,global,reloc=2,class=CODE,delta=1
   229                           	psect	text202,global,reloc=2,class=CODE,delta=1
   230                           	psect	text203,global,reloc=2,class=CODE,delta=1
   231                           	psect	text204,global,reloc=2,class=CODE,delta=1
   232                           	psect	text205,global,reloc=2,class=CODE,delta=1
   233                           	psect	text206,global,reloc=2,class=CODE,delta=1,group=2
   234                           	psect	text207,global,reloc=2,class=CODE,delta=1
   235                           	psect	text208,global,reloc=2,class=CODE,delta=1
   236                           	psect	text209,global,reloc=2,class=CODE,delta=1
   237                           	psect	text210,global,reloc=2,class=CODE,delta=1
   238                           	psect	text211,global,reloc=2,class=CODE,delta=1
   239                           	psect	text212,global,reloc=2,class=CODE,delta=1
   240                           	psect	text213,global,reloc=2,class=CODE,delta=1
   241                           	psect	text214,global,reloc=2,class=CODE,delta=1
   242                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   243                           	psect	text215,global,reloc=2,class=CODE,delta=1
   244                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   245                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   246  0000                     
   247                           ; Version 2.05
   248                           ; Generated 20/12/2018 GMT
   249                           ; 
   250                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   251                           ; All rights reserved.
   252                           ; 
   253                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   254                           ; 
   255                           ; Redistribution and use in source and binary forms, with or without modification, are
   256                           ; permitted provided that the following conditions are met:
   257                           ; 
   258                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   259                           ;        conditions and the following disclaimer.
   260                           ; 
   261                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   262                           ;        of conditions and the following disclaimer in the documentation and/or other
   263                           ;        materials provided with the distribution.
   264                           ; 
   265                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   266                           ;        software without specific prior written permission.
   267                           ; 
   268                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   269                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   270                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   271                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   272                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   273                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   274                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   275                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   276                           ; 
   277                           ; 
   278                           ; Code-generator required, PIC18F27K40 Definitions
   279                           ; 
   280                           ; SFR Addresses
   281  0000                     
   282                           	psect	idataBANK0
   283  01CB30                     __pidataBANK0:
   284                           	opt callstack 0
   285                           
   286                           ;initializer for _OLED_update_time
   287  01CB30  03                 	db	3
   288                           
   289                           ;initializer for _next_adc_channel
   290  01CB31  3C                 	db	60
   291                           
   292                           	psect	idataBANK1
   293  01C930                     __pidataBANK1:
   294                           	opt callstack 0
   295                           
   296                           ;initializer for getCauseOfResetString@strings
   297  01C930  A1                 	db	low STR_21
   298  01C931  FB                 	db	high STR_21
   299  01C932  1B                 	db	low STR_22
   300  01C933  FC                 	db	high STR_22
   301  01C934  B1                 	db	low STR_23
   302  01C935  FB                 	db	high STR_23
   303  01C936  E7                 	db	low STR_24
   304  01C937  FA                 	db	high STR_24
   305  01C938  CC                 	db	low (STR_26+9)
   306  01C939  F4                 	db	high (STR_26+9)
   307  01C93A  C3                 	db	low STR_26
   308  01C93B  F4                 	db	high STR_26
   309  01C93C  FF                 	db	low STR_27
   310  01C93D  F8                 	db	high STR_27
   311  01C93E  6F                 	db	low STR_28
   312  01C93F  FA                 	db	high STR_28
   313  01C940  2F                 	db	low STR_29
   314  01C941  FA                 	db	high STR_29
   315                           
   316                           	psect	idataBANK2
   317  01C942                     __pidataBANK2:
   318                           	opt callstack 0
   319                           
   320                           ;initializer for getCauseOfResetStringSmall@strings
   321  01C942  B9                 	db	low STR_20
   322  01C943  FE                 	db	high STR_20
   323  01C944  AF                 	db	low STR_32
   324  01C945  FE                 	db	high STR_32
   325  01C946  A5                 	db	low STR_33
   326  01C947  FE                 	db	high STR_33
   327  01C948  53                 	db	low STR_34
   328  01C949  FE                 	db	high STR_34
   329  01C94A  5F                 	db	low (STR_36+1)
   330  01C94B  FE                 	db	high (STR_36+1)
   331  01C94C  5E                 	db	low STR_36
   332  01C94D  FE                 	db	high STR_36
   333  01C94E  0C                 	db	low STR_37
   334  01C94F  FC                 	db	high STR_37
   335  01C950  3D                 	db	low STR_38
   336  01C951  FE                 	db	high STR_38
   337  01C952  48                 	db	low STR_39
   338  01C953  FE                 	db	high STR_39
   339                           
   340                           	psect	mediumconst
   341  00E5C2                     __pmediumconst:
   342                           	opt callstack 0
   343  00E5C2  00                 	db	0
   344  00E5C3                     __powers_:
   345                           	opt callstack 0
   346  00E5C3  0000               	dw	0
   347  00E5C5  3F80               	dw	16256
   348  00E5C7  0000               	dw	0
   349  00E5C9  4120               	dw	16672
   350  00E5CB  0000               	dw	0
   351  00E5CD  42C8               	dw	17096
   352  00E5CF  0000               	dw	0
   353  00E5D1  447A               	dw	17530
   354  00E5D3  4000               	dw	16384
   355  00E5D5  461C               	dw	17948
   356  00E5D7  5000               	dw	20480
   357  00E5D9  47C3               	dw	18371
   358  00E5DB  2400               	dw	9216
   359  00E5DD  4974               	dw	18804
   360  00E5DF  9680               	dw	38528
   361  00E5E1  4B18               	dw	19224
   362  00E5E3  BC20               	dw	48160
   363  00E5E5  4CBE               	dw	19646
   364  00E5E7  6B28               	dw	27432
   365  00E5E9  4E6E               	dw	20078
   366  00E5EB  02F9               	dw	761
   367  00E5ED  5015               	dw	20501
   368  00E5EF  78EC               	dw	30956
   369  00E5F1  60AD               	dw	24749
   370  00E5F3  F2CA               	dw	62154
   371  00E5F5  7149               	dw	29001
   372  00E5F7                     __end_of__powers_:
   373                           	opt callstack 0
   374  00E5F7                     __npowers_:
   375                           	opt callstack 0
   376  00E5F7  0000               	dw	0
   377  00E5F9  3F80               	dw	16256
   378  00E5FB  CCCD               	dw	52429
   379  00E5FD  3DCC               	dw	15820
   380  00E5FF  D70A               	dw	55050
   381  00E601  3C23               	dw	15395
   382  00E603  126F               	dw	4719
   383  00E605  3A83               	dw	14979
   384  00E607  B717               	dw	46871
   385  00E609  38D1               	dw	14545
   386  00E60B  C5AC               	dw	50604
   387  00E60D  3727               	dw	14119
   388  00E60F  37BD               	dw	14269
   389  00E611  3586               	dw	13702
   390  00E613  BF95               	dw	49045
   391  00E615  33D6               	dw	13270
   392  00E617  CC77               	dw	52343
   393  00E619  322B               	dw	12843
   394  00E61B  705F               	dw	28767
   395  00E61D  3089               	dw	12425
   396  00E61F  E6FF               	dw	59135
   397  00E621  2EDB               	dw	11995
   398  00E623  E508               	dw	58632
   399  00E625  1E3C               	dw	7740
   400  00E627  4260               	dw	16992
   401  00E629  0DA2               	dw	3490
   402  00E62B                     __end_of__npowers_:
   403                           	opt callstack 0
   404  00E62B                     _hexpowers:
   405                           	opt callstack 0
   406  00E62B  0001               	dw	1
   407  00E62D  0000               	dw	0
   408  00E62F  0010               	dw	16
   409  00E631  0000               	dw	0
   410  00E633  0100               	dw	256
   411  00E635  0000               	dw	0
   412  00E637  1000               	dw	4096
   413  00E639  0000               	dw	0
   414  00E63B  0000               	dw	0
   415  00E63D  0001               	dw	1
   416  00E63F  0000               	dw	0
   417  00E641  0010               	dw	16
   418  00E643  0000               	dw	0
   419  00E645  0100               	dw	256
   420  00E647  0000               	dw	0
   421  00E649  1000               	dw	4096
   422  00E64B                     __end_of_hexpowers:
   423                           	opt callstack 0
   424  00E64B                     _OledFont:
   425                           	opt callstack 0
   426  00E64B  00                 	db	0
   427  00E64C  00                 	db	0
   428  00E64D  00                 	db	0
   429  00E64E  00                 	db	0
   430  00E64F  00                 	db	0
   431  00E650  00                 	db	0
   432  00E651  00                 	db	0
   433  00E652  00                 	db	0
   434  00E653  00                 	db	0
   435  00E654  00                 	db	0
   436  00E655  5F                 	db	95
   437  00E656  00                 	db	0
   438  00E657  00                 	db	0
   439  00E658  00                 	db	0
   440  00E659  00                 	db	0
   441  00E65A  00                 	db	0
   442  00E65B  00                 	db	0
   443  00E65C  00                 	db	0
   444  00E65D  07                 	db	7
   445  00E65E  00                 	db	0
   446  00E65F  07                 	db	7
   447  00E660  00                 	db	0
   448  00E661  00                 	db	0
   449  00E662  00                 	db	0
   450  00E663  00                 	db	0
   451  00E664  14                 	db	20
   452  00E665  7F                 	db	127
   453  00E666  14                 	db	20
   454  00E667  7F                 	db	127
   455  00E668  14                 	db	20
   456  00E669  00                 	db	0
   457  00E66A  00                 	db	0
   458  00E66B  00                 	db	0
   459  00E66C  24                 	db	36
   460  00E66D  2A                 	db	42
   461  00E66E  7F                 	db	127
   462  00E66F  2A                 	db	42
   463  00E670  12                 	db	18
   464  00E671  00                 	db	0
   465  00E672  00                 	db	0
   466  00E673  00                 	db	0
   467  00E674  23                 	db	35
   468  00E675  13                 	db	19
   469  00E676  08                 	db	8
   470  00E677  64                 	db	100
   471  00E678  62                 	db	98
   472  00E679  00                 	db	0
   473  00E67A  00                 	db	0
   474  00E67B  00                 	db	0
   475  00E67C  36                 	db	54
   476  00E67D  49                 	db	73
   477  00E67E  55                 	db	85
   478  00E67F  22                 	db	34
   479  00E680  50                 	db	80
   480  00E681  00                 	db	0
   481  00E682  00                 	db	0
   482  00E683  00                 	db	0
   483  00E684  00                 	db	0
   484  00E685  05                 	db	5
   485  00E686  03                 	db	3
   486  00E687  00                 	db	0
   487  00E688  00                 	db	0
   488  00E689  00                 	db	0
   489  00E68A  00                 	db	0
   490  00E68B  00                 	db	0
   491  00E68C  1C                 	db	28
   492  00E68D  22                 	db	34
   493  00E68E  41                 	db	65
   494  00E68F  00                 	db	0
   495  00E690  00                 	db	0
   496  00E691  00                 	db	0
   497  00E692  00                 	db	0
   498  00E693  00                 	db	0
   499  00E694  41                 	db	65
   500  00E695  22                 	db	34
   501  00E696  1C                 	db	28
   502  00E697  00                 	db	0
   503  00E698  00                 	db	0
   504  00E699  00                 	db	0
   505  00E69A  00                 	db	0
   506  00E69B  00                 	db	0
   507  00E69C  08                 	db	8
   508  00E69D  2A                 	db	42
   509  00E69E  1C                 	db	28
   510  00E69F  2A                 	db	42
   511  00E6A0  08                 	db	8
   512  00E6A1  00                 	db	0
   513  00E6A2  00                 	db	0
   514  00E6A3  00                 	db	0
   515  00E6A4  08                 	db	8
   516  00E6A5  08                 	db	8
   517  00E6A6  3E                 	db	62
   518  00E6A7  08                 	db	8
   519  00E6A8  08                 	db	8
   520  00E6A9  00                 	db	0
   521  00E6AA  00                 	db	0
   522  00E6AB  00                 	db	0
   523  00E6AC  A0                 	db	160
   524  00E6AD  60                 	db	96
   525  00E6AE  00                 	db	0
   526  00E6AF  00                 	db	0
   527  00E6B0  00                 	db	0
   528  00E6B1  00                 	db	0
   529  00E6B2  00                 	db	0
   530  00E6B3  00                 	db	0
   531  00E6B4  08                 	db	8
   532  00E6B5  08                 	db	8
   533  00E6B6  08                 	db	8
   534  00E6B7  08                 	db	8
   535  00E6B8  08                 	db	8
   536  00E6B9  00                 	db	0
   537  00E6BA  00                 	db	0
   538  00E6BB  00                 	db	0
   539  00E6BC  60                 	db	96
   540  00E6BD  60                 	db	96
   541  00E6BE  00                 	db	0
   542  00E6BF  00                 	db	0
   543  00E6C0  00                 	db	0
   544  00E6C1  00                 	db	0
   545  00E6C2  00                 	db	0
   546  00E6C3  00                 	db	0
   547  00E6C4  20                 	db	32
   548  00E6C5  10                 	db	16
   549  00E6C6  08                 	db	8
   550  00E6C7  04                 	db	4
   551  00E6C8  02                 	db	2
   552  00E6C9  00                 	db	0
   553  00E6CA  00                 	db	0
   554  00E6CB  00                 	db	0
   555  00E6CC  3E                 	db	62
   556  00E6CD  51                 	db	81
   557  00E6CE  49                 	db	73
   558  00E6CF  45                 	db	69
   559  00E6D0  3E                 	db	62
   560  00E6D1  00                 	db	0
   561  00E6D2  00                 	db	0
   562  00E6D3  00                 	db	0
   563  00E6D4  00                 	db	0
   564  00E6D5  42                 	db	66
   565  00E6D6  7F                 	db	127
   566  00E6D7  40                 	db	64
   567  00E6D8  00                 	db	0
   568  00E6D9  00                 	db	0
   569  00E6DA  00                 	db	0
   570  00E6DB  00                 	db	0
   571  00E6DC  62                 	db	98
   572  00E6DD  51                 	db	81
   573  00E6DE  49                 	db	73
   574  00E6DF  49                 	db	73
   575  00E6E0  46                 	db	70
   576  00E6E1  00                 	db	0
   577  00E6E2  00                 	db	0
   578  00E6E3  00                 	db	0
   579  00E6E4  22                 	db	34
   580  00E6E5  41                 	db	65
   581  00E6E6  49                 	db	73
   582  00E6E7  49                 	db	73
   583  00E6E8  36                 	db	54
   584  00E6E9  00                 	db	0
   585  00E6EA  00                 	db	0
   586  00E6EB  00                 	db	0
   587  00E6EC  18                 	db	24
   588  00E6ED  14                 	db	20
   589  00E6EE  12                 	db	18
   590  00E6EF  7F                 	db	127
   591  00E6F0  10                 	db	16
   592  00E6F1  00                 	db	0
   593  00E6F2  00                 	db	0
   594  00E6F3  00                 	db	0
   595  00E6F4  27                 	db	39
   596  00E6F5  45                 	db	69
   597  00E6F6  45                 	db	69
   598  00E6F7  45                 	db	69
   599  00E6F8  39                 	db	57
   600  00E6F9  00                 	db	0
   601  00E6FA  00                 	db	0
   602  00E6FB  00                 	db	0
   603  00E6FC  3C                 	db	60
   604  00E6FD  4A                 	db	74
   605  00E6FE  49                 	db	73
   606  00E6FF  49                 	db	73
   607  00E700  30                 	db	48
   608  00E701  00                 	db	0
   609  00E702  00                 	db	0
   610  00E703  00                 	db	0
   611  00E704  01                 	db	1
   612  00E705  71                 	db	113
   613  00E706  09                 	db	9
   614  00E707  05                 	db	5
   615  00E708  03                 	db	3
   616  00E709  00                 	db	0
   617  00E70A  00                 	db	0
   618  00E70B  00                 	db	0
   619  00E70C  36                 	db	54
   620  00E70D  49                 	db	73
   621  00E70E  49                 	db	73
   622  00E70F  49                 	db	73
   623  00E710  36                 	db	54
   624  00E711  00                 	db	0
   625  00E712  00                 	db	0
   626  00E713  00                 	db	0
   627  00E714  06                 	db	6
   628  00E715  49                 	db	73
   629  00E716  49                 	db	73
   630  00E717  29                 	db	41
   631  00E718  1E                 	db	30
   632  00E719  00                 	db	0
   633  00E71A  00                 	db	0
   634  00E71B  00                 	db	0
   635  00E71C  00                 	db	0
   636  00E71D  36                 	db	54
   637  00E71E  36                 	db	54
   638  00E71F  00                 	db	0
   639  00E720  00                 	db	0
   640  00E721  00                 	db	0
   641  00E722  00                 	db	0
   642  00E723  00                 	db	0
   643  00E724  00                 	db	0
   644  00E725  AC                 	db	172
   645  00E726  6C                 	db	108
   646  00E727  00                 	db	0
   647  00E728  00                 	db	0
   648  00E729  00                 	db	0
   649  00E72A  00                 	db	0
   650  00E72B  00                 	db	0
   651  00E72C  08                 	db	8
   652  00E72D  14                 	db	20
   653  00E72E  22                 	db	34
   654  00E72F  41                 	db	65
   655  00E730  00                 	db	0
   656  00E731  00                 	db	0
   657  00E732  00                 	db	0
   658  00E733  00                 	db	0
   659  00E734  14                 	db	20
   660  00E735  14                 	db	20
   661  00E736  14                 	db	20
   662  00E737  14                 	db	20
   663  00E738  14                 	db	20
   664  00E739  00                 	db	0
   665  00E73A  00                 	db	0
   666  00E73B  00                 	db	0
   667  00E73C  41                 	db	65
   668  00E73D  22                 	db	34
   669  00E73E  14                 	db	20
   670  00E73F  08                 	db	8
   671  00E740  00                 	db	0
   672  00E741  00                 	db	0
   673  00E742  00                 	db	0
   674  00E743  00                 	db	0
   675  00E744  02                 	db	2
   676  00E745  01                 	db	1
   677  00E746  51                 	db	81
   678  00E747  09                 	db	9
   679  00E748  06                 	db	6
   680  00E749  00                 	db	0
   681  00E74A  00                 	db	0
   682  00E74B  00                 	db	0
   683  00E74C  32                 	db	50
   684  00E74D  49                 	db	73
   685  00E74E  79                 	db	121
   686  00E74F  41                 	db	65
   687  00E750  3E                 	db	62
   688  00E751  00                 	db	0
   689  00E752  00                 	db	0
   690  00E753  00                 	db	0
   691  00E754  7E                 	db	126
   692  00E755  09                 	db	9
   693  00E756  09                 	db	9
   694  00E757  09                 	db	9
   695  00E758  7E                 	db	126
   696  00E759  00                 	db	0
   697  00E75A  00                 	db	0
   698  00E75B  00                 	db	0
   699  00E75C  7F                 	db	127
   700  00E75D  49                 	db	73
   701  00E75E  49                 	db	73
   702  00E75F  49                 	db	73
   703  00E760  36                 	db	54
   704  00E761  00                 	db	0
   705  00E762  00                 	db	0
   706  00E763  00                 	db	0
   707  00E764  3E                 	db	62
   708  00E765  41                 	db	65
   709  00E766  41                 	db	65
   710  00E767  41                 	db	65
   711  00E768  22                 	db	34
   712  00E769  00                 	db	0
   713  00E76A  00                 	db	0
   714  00E76B  00                 	db	0
   715  00E76C  7F                 	db	127
   716  00E76D  41                 	db	65
   717  00E76E  41                 	db	65
   718  00E76F  22                 	db	34
   719  00E770  1C                 	db	28
   720  00E771  00                 	db	0
   721  00E772  00                 	db	0
   722  00E773  00                 	db	0
   723  00E774  7F                 	db	127
   724  00E775  49                 	db	73
   725  00E776  49                 	db	73
   726  00E777  49                 	db	73
   727  00E778  41                 	db	65
   728  00E779  00                 	db	0
   729  00E77A  00                 	db	0
   730  00E77B  00                 	db	0
   731  00E77C  7F                 	db	127
   732  00E77D  09                 	db	9
   733  00E77E  09                 	db	9
   734  00E77F  09                 	db	9
   735  00E780  01                 	db	1
   736  00E781  00                 	db	0
   737  00E782  00                 	db	0
   738  00E783  00                 	db	0
   739  00E784  3E                 	db	62
   740  00E785  41                 	db	65
   741  00E786  41                 	db	65
   742  00E787  51                 	db	81
   743  00E788  72                 	db	114
   744  00E789  00                 	db	0
   745  00E78A  00                 	db	0
   746  00E78B  00                 	db	0
   747  00E78C  7F                 	db	127
   748  00E78D  08                 	db	8
   749  00E78E  08                 	db	8
   750  00E78F  08                 	db	8
   751  00E790  7F                 	db	127
   752  00E791  00                 	db	0
   753  00E792  00                 	db	0
   754  00E793  00                 	db	0
   755  00E794  41                 	db	65
   756  00E795  7F                 	db	127
   757  00E796  41                 	db	65
   758  00E797  00                 	db	0
   759  00E798  00                 	db	0
   760  00E799  00                 	db	0
   761  00E79A  00                 	db	0
   762  00E79B  00                 	db	0
   763  00E79C  20                 	db	32
   764  00E79D  40                 	db	64
   765  00E79E  41                 	db	65
   766  00E79F  3F                 	db	63
   767  00E7A0  01                 	db	1
   768  00E7A1  00                 	db	0
   769  00E7A2  00                 	db	0
   770  00E7A3  00                 	db	0
   771  00E7A4  7F                 	db	127
   772  00E7A5  08                 	db	8
   773  00E7A6  14                 	db	20
   774  00E7A7  22                 	db	34
   775  00E7A8  41                 	db	65
   776  00E7A9  00                 	db	0
   777  00E7AA  00                 	db	0
   778  00E7AB  00                 	db	0
   779  00E7AC  7F                 	db	127
   780  00E7AD  40                 	db	64
   781  00E7AE  40                 	db	64
   782  00E7AF  40                 	db	64
   783  00E7B0  40                 	db	64
   784  00E7B1  00                 	db	0
   785  00E7B2  00                 	db	0
   786  00E7B3  00                 	db	0
   787  00E7B4  7F                 	db	127
   788  00E7B5  02                 	db	2
   789  00E7B6  0C                 	db	12
   790  00E7B7  02                 	db	2
   791  00E7B8  7F                 	db	127
   792  00E7B9  00                 	db	0
   793  00E7BA  00                 	db	0
   794  00E7BB  00                 	db	0
   795  00E7BC  7F                 	db	127
   796  00E7BD  04                 	db	4
   797  00E7BE  08                 	db	8
   798  00E7BF  10                 	db	16
   799  00E7C0  7F                 	db	127
   800  00E7C1  00                 	db	0
   801  00E7C2  00                 	db	0
   802  00E7C3  00                 	db	0
   803  00E7C4  3E                 	db	62
   804  00E7C5  41                 	db	65
   805  00E7C6  41                 	db	65
   806  00E7C7  41                 	db	65
   807  00E7C8  3E                 	db	62
   808  00E7C9  00                 	db	0
   809  00E7CA  00                 	db	0
   810  00E7CB  00                 	db	0
   811  00E7CC  7F                 	db	127
   812  00E7CD  09                 	db	9
   813  00E7CE  09                 	db	9
   814  00E7CF  09                 	db	9
   815  00E7D0  06                 	db	6
   816  00E7D1  00                 	db	0
   817  00E7D2  00                 	db	0
   818  00E7D3  00                 	db	0
   819  00E7D4  3E                 	db	62
   820  00E7D5  41                 	db	65
   821  00E7D6  51                 	db	81
   822  00E7D7  21                 	db	33
   823  00E7D8  5E                 	db	94
   824  00E7D9  00                 	db	0
   825  00E7DA  00                 	db	0
   826  00E7DB  00                 	db	0
   827  00E7DC  7F                 	db	127
   828  00E7DD  09                 	db	9
   829  00E7DE  19                 	db	25
   830  00E7DF  29                 	db	41
   831  00E7E0  46                 	db	70
   832  00E7E1  00                 	db	0
   833  00E7E2  00                 	db	0
   834  00E7E3  00                 	db	0
   835  00E7E4  26                 	db	38
   836  00E7E5  49                 	db	73
   837  00E7E6  49                 	db	73
   838  00E7E7  49                 	db	73
   839  00E7E8  32                 	db	50
   840  00E7E9  00                 	db	0
   841  00E7EA  00                 	db	0
   842  00E7EB  00                 	db	0
   843  00E7EC  01                 	db	1
   844  00E7ED  01                 	db	1
   845  00E7EE  7F                 	db	127
   846  00E7EF  01                 	db	1
   847  00E7F0  01                 	db	1
   848  00E7F1  00                 	db	0
   849  00E7F2  00                 	db	0
   850  00E7F3  00                 	db	0
   851  00E7F4  3F                 	db	63
   852  00E7F5  40                 	db	64
   853  00E7F6  40                 	db	64
   854  00E7F7  40                 	db	64
   855  00E7F8  3F                 	db	63
   856  00E7F9  00                 	db	0
   857  00E7FA  00                 	db	0
   858  00E7FB  00                 	db	0
   859  00E7FC  1F                 	db	31
   860  00E7FD  20                 	db	32
   861  00E7FE  40                 	db	64
   862  00E7FF  20                 	db	32
   863  00E800  1F                 	db	31
   864  00E801  00                 	db	0
   865  00E802  00                 	db	0
   866  00E803  00                 	db	0
   867  00E804  3F                 	db	63
   868  00E805  40                 	db	64
   869  00E806  38                 	db	56
   870  00E807  40                 	db	64
   871  00E808  3F                 	db	63
   872  00E809  00                 	db	0
   873  00E80A  00                 	db	0
   874  00E80B  00                 	db	0
   875  00E80C  63                 	db	99
   876  00E80D  14                 	db	20
   877  00E80E  08                 	db	8
   878  00E80F  14                 	db	20
   879  00E810  63                 	db	99
   880  00E811  00                 	db	0
   881  00E812  00                 	db	0
   882  00E813  00                 	db	0
   883  00E814  03                 	db	3
   884  00E815  04                 	db	4
   885  00E816  78                 	db	120
   886  00E817  04                 	db	4
   887  00E818  03                 	db	3
   888  00E819  00                 	db	0
   889  00E81A  00                 	db	0
   890  00E81B  00                 	db	0
   891  00E81C  61                 	db	97
   892  00E81D  51                 	db	81
   893  00E81E  49                 	db	73
   894  00E81F  45                 	db	69
   895  00E820  43                 	db	67
   896  00E821  00                 	db	0
   897  00E822  00                 	db	0
   898  00E823  00                 	db	0
   899  00E824  7F                 	db	127
   900  00E825  41                 	db	65
   901  00E826  41                 	db	65
   902  00E827  00                 	db	0
   903  00E828  00                 	db	0
   904  00E829  00                 	db	0
   905  00E82A  00                 	db	0
   906  00E82B  00                 	db	0
   907  00E82C  02                 	db	2
   908  00E82D  04                 	db	4
   909  00E82E  08                 	db	8
   910  00E82F  10                 	db	16
   911  00E830  20                 	db	32
   912  00E831  00                 	db	0
   913  00E832  00                 	db	0
   914  00E833  00                 	db	0
   915  00E834  41                 	db	65
   916  00E835  41                 	db	65
   917  00E836  7F                 	db	127
   918  00E837  00                 	db	0
   919  00E838  00                 	db	0
   920  00E839  00                 	db	0
   921  00E83A  00                 	db	0
   922  00E83B  00                 	db	0
   923  00E83C  04                 	db	4
   924  00E83D  02                 	db	2
   925  00E83E  01                 	db	1
   926  00E83F  02                 	db	2
   927  00E840  04                 	db	4
   928  00E841  00                 	db	0
   929  00E842  00                 	db	0
   930  00E843  00                 	db	0
   931  00E844  80                 	db	128
   932  00E845  80                 	db	128
   933  00E846  80                 	db	128
   934  00E847  80                 	db	128
   935  00E848  80                 	db	128
   936  00E849  00                 	db	0
   937  00E84A  00                 	db	0
   938  00E84B  00                 	db	0
   939  00E84C  01                 	db	1
   940  00E84D  02                 	db	2
   941  00E84E  04                 	db	4
   942  00E84F  00                 	db	0
   943  00E850  00                 	db	0
   944  00E851  00                 	db	0
   945  00E852  00                 	db	0
   946  00E853  00                 	db	0
   947  00E854  20                 	db	32
   948  00E855  54                 	db	84
   949  00E856  54                 	db	84
   950  00E857  54                 	db	84
   951  00E858  78                 	db	120
   952  00E859  00                 	db	0
   953  00E85A  00                 	db	0
   954  00E85B  00                 	db	0
   955  00E85C  7F                 	db	127
   956  00E85D  48                 	db	72
   957  00E85E  44                 	db	68
   958  00E85F  44                 	db	68
   959  00E860  38                 	db	56
   960  00E861  00                 	db	0
   961  00E862  00                 	db	0
   962  00E863  00                 	db	0
   963  00E864  38                 	db	56
   964  00E865  44                 	db	68
   965  00E866  44                 	db	68
   966  00E867  28                 	db	40
   967  00E868  00                 	db	0
   968  00E869  00                 	db	0
   969  00E86A  00                 	db	0
   970  00E86B  00                 	db	0
   971  00E86C  38                 	db	56
   972  00E86D  44                 	db	68
   973  00E86E  44                 	db	68
   974  00E86F  48                 	db	72
   975  00E870  7F                 	db	127
   976  00E871  00                 	db	0
   977  00E872  00                 	db	0
   978  00E873  00                 	db	0
   979  00E874  38                 	db	56
   980  00E875  54                 	db	84
   981  00E876  54                 	db	84
   982  00E877  54                 	db	84
   983  00E878  18                 	db	24
   984  00E879  00                 	db	0
   985  00E87A  00                 	db	0
   986  00E87B  00                 	db	0
   987  00E87C  08                 	db	8
   988  00E87D  7E                 	db	126
   989  00E87E  09                 	db	9
   990  00E87F  02                 	db	2
   991  00E880  00                 	db	0
   992  00E881  00                 	db	0
   993  00E882  00                 	db	0
   994  00E883  00                 	db	0
   995  00E884  18                 	db	24
   996  00E885  A4                 	db	164
   997  00E886  A4                 	db	164
   998  00E887  A4                 	db	164
   999  00E888  7C                 	db	124
  1000  00E889  00                 	db	0
  1001  00E88A  00                 	db	0
  1002  00E88B  00                 	db	0
  1003  00E88C  7F                 	db	127
  1004  00E88D  08                 	db	8
  1005  00E88E  04                 	db	4
  1006  00E88F  04                 	db	4
  1007  00E890  78                 	db	120
  1008  00E891  00                 	db	0
  1009  00E892  00                 	db	0
  1010  00E893  00                 	db	0
  1011  00E894  00                 	db	0
  1012  00E895  7D                 	db	125
  1013  00E896  00                 	db	0
  1014  00E897  00                 	db	0
  1015  00E898  00                 	db	0
  1016  00E899  00                 	db	0
  1017  00E89A  00                 	db	0
  1018  00E89B  00                 	db	0
  1019  00E89C  80                 	db	128
  1020  00E89D  84                 	db	132
  1021  00E89E  7D                 	db	125
  1022  00E89F  00                 	db	0
  1023  00E8A0  00                 	db	0
  1024  00E8A1  00                 	db	0
  1025  00E8A2  00                 	db	0
  1026  00E8A3  00                 	db	0
  1027  00E8A4  7F                 	db	127
  1028  00E8A5  10                 	db	16
  1029  00E8A6  28                 	db	40
  1030  00E8A7  44                 	db	68
  1031  00E8A8  00                 	db	0
  1032  00E8A9  00                 	db	0
  1033  00E8AA  00                 	db	0
  1034  00E8AB  00                 	db	0
  1035  00E8AC  41                 	db	65
  1036  00E8AD  7F                 	db	127
  1037  00E8AE  40                 	db	64
  1038  00E8AF  00                 	db	0
  1039  00E8B0  00                 	db	0
  1040  00E8B1  00                 	db	0
  1041  00E8B2  00                 	db	0
  1042  00E8B3  00                 	db	0
  1043  00E8B4  7C                 	db	124
  1044  00E8B5  04                 	db	4
  1045  00E8B6  18                 	db	24
  1046  00E8B7  04                 	db	4
  1047  00E8B8  78                 	db	120
  1048  00E8B9  00                 	db	0
  1049  00E8BA  00                 	db	0
  1050  00E8BB  00                 	db	0
  1051  00E8BC  7C                 	db	124
  1052  00E8BD  08                 	db	8
  1053  00E8BE  04                 	db	4
  1054  00E8BF  7C                 	db	124
  1055  00E8C0  00                 	db	0
  1056  00E8C1  00                 	db	0
  1057  00E8C2  00                 	db	0
  1058  00E8C3  00                 	db	0
  1059  00E8C4  38                 	db	56
  1060  00E8C5  44                 	db	68
  1061  00E8C6  44                 	db	68
  1062  00E8C7  38                 	db	56
  1063  00E8C8  00                 	db	0
  1064  00E8C9  00                 	db	0
  1065  00E8CA  00                 	db	0
  1066  00E8CB  00                 	db	0
  1067  00E8CC  FC                 	db	252
  1068  00E8CD  24                 	db	36
  1069  00E8CE  24                 	db	36
  1070  00E8CF  18                 	db	24
  1071  00E8D0  00                 	db	0
  1072  00E8D1  00                 	db	0
  1073  00E8D2  00                 	db	0
  1074  00E8D3  00                 	db	0
  1075  00E8D4  18                 	db	24
  1076  00E8D5  24                 	db	36
  1077  00E8D6  24                 	db	36
  1078  00E8D7  FC                 	db	252
  1079  00E8D8  00                 	db	0
  1080  00E8D9  00                 	db	0
  1081  00E8DA  00                 	db	0
  1082  00E8DB  00                 	db	0
  1083  00E8DC  00                 	db	0
  1084  00E8DD  7C                 	db	124
  1085  00E8DE  08                 	db	8
  1086  00E8DF  04                 	db	4
  1087  00E8E0  00                 	db	0
  1088  00E8E1  00                 	db	0
  1089  00E8E2  00                 	db	0
  1090  00E8E3  00                 	db	0
  1091  00E8E4  48                 	db	72
  1092  00E8E5  54                 	db	84
  1093  00E8E6  54                 	db	84
  1094  00E8E7  24                 	db	36
  1095  00E8E8  00                 	db	0
  1096  00E8E9  00                 	db	0
  1097  00E8EA  00                 	db	0
  1098  00E8EB  00                 	db	0
  1099  00E8EC  04                 	db	4
  1100  00E8ED  7F                 	db	127
  1101  00E8EE  44                 	db	68
  1102  00E8EF  00                 	db	0
  1103  00E8F0  00                 	db	0
  1104  00E8F1  00                 	db	0
  1105  00E8F2  00                 	db	0
  1106  00E8F3  00                 	db	0
  1107  00E8F4  3C                 	db	60
  1108  00E8F5  40                 	db	64
  1109  00E8F6  40                 	db	64
  1110  00E8F7  7C                 	db	124
  1111  00E8F8  00                 	db	0
  1112  00E8F9  00                 	db	0
  1113  00E8FA  00                 	db	0
  1114  00E8FB  00                 	db	0
  1115  00E8FC  1C                 	db	28
  1116  00E8FD  20                 	db	32
  1117  00E8FE  40                 	db	64
  1118  00E8FF  20                 	db	32
  1119  00E900  1C                 	db	28
  1120  00E901  00                 	db	0
  1121  00E902  00                 	db	0
  1122  00E903  00                 	db	0
  1123  00E904  3C                 	db	60
  1124  00E905  40                 	db	64
  1125  00E906  30                 	db	48
  1126  00E907  40                 	db	64
  1127  00E908  3C                 	db	60
  1128  00E909  00                 	db	0
  1129  00E90A  00                 	db	0
  1130  00E90B  00                 	db	0
  1131  00E90C  44                 	db	68
  1132  00E90D  28                 	db	40
  1133  00E90E  10                 	db	16
  1134  00E90F  28                 	db	40
  1135  00E910  44                 	db	68
  1136  00E911  00                 	db	0
  1137  00E912  00                 	db	0
  1138  00E913  00                 	db	0
  1139  00E914  1C                 	db	28
  1140  00E915  A0                 	db	160
  1141  00E916  A0                 	db	160
  1142  00E917  7C                 	db	124
  1143  00E918  00                 	db	0
  1144  00E919  00                 	db	0
  1145  00E91A  00                 	db	0
  1146  00E91B  00                 	db	0
  1147  00E91C  44                 	db	68
  1148  00E91D  64                 	db	100
  1149  00E91E  54                 	db	84
  1150  00E91F  4C                 	db	76
  1151  00E920  44                 	db	68
  1152  00E921  00                 	db	0
  1153  00E922  00                 	db	0
  1154  00E923  00                 	db	0
  1155  00E924  08                 	db	8
  1156  00E925  36                 	db	54
  1157  00E926  41                 	db	65
  1158  00E927  00                 	db	0
  1159  00E928  00                 	db	0
  1160  00E929  00                 	db	0
  1161  00E92A  00                 	db	0
  1162  00E92B  00                 	db	0
  1163  00E92C  00                 	db	0
  1164  00E92D  7F                 	db	127
  1165  00E92E  00                 	db	0
  1166  00E92F  00                 	db	0
  1167  00E930  00                 	db	0
  1168  00E931  00                 	db	0
  1169  00E932  00                 	db	0
  1170  00E933  00                 	db	0
  1171  00E934  41                 	db	65
  1172  00E935  36                 	db	54
  1173  00E936  08                 	db	8
  1174  00E937  00                 	db	0
  1175  00E938  00                 	db	0
  1176  00E939  00                 	db	0
  1177  00E93A  00                 	db	0
  1178  00E93B  00                 	db	0
  1179  00E93C  02                 	db	2
  1180  00E93D  01                 	db	1
  1181  00E93E  01                 	db	1
  1182  00E93F  02                 	db	2
  1183  00E940  01                 	db	1
  1184  00E941  00                 	db	0
  1185  00E942  00                 	db	0
  1186  00E943  00                 	db	0
  1187  00E944  02                 	db	2
  1188  00E945  05                 	db	5
  1189  00E946  05                 	db	5
  1190  00E947  02                 	db	2
  1191  00E948  00                 	db	0
  1192  00E949  00                 	db	0
  1193  00E94A  00                 	db	0
  1194  00E94B                     __end_of_OledFont:
  1195                           	opt callstack 0
  1196  00E94B                     _dpowers:
  1197                           	opt callstack 0
  1198  00E94B  0001               	dw	1
  1199  00E94D  0000               	dw	0
  1200  00E94F  000A               	dw	10
  1201  00E951  0000               	dw	0
  1202  00E953  0064               	dw	100
  1203  00E955  0000               	dw	0
  1204  00E957  03E8               	dw	1000
  1205  00E959  0000               	dw	0
  1206  00E95B  2710               	dw	10000
  1207  00E95D  0000               	dw	0
  1208  00E95F  86A0               	dw	34464
  1209  00E961  0001               	dw	1
  1210  00E963  4240               	dw	16960
  1211  00E965  000F               	dw	15
  1212  00E967  9680               	dw	38528
  1213  00E969  0098               	dw	152
  1214  00E96B  E100               	dw	57600
  1215  00E96D  05F5               	dw	1525
  1216  00E96F  CA00               	dw	51712
  1217  00E971  3B9A               	dw	15258
  1218  00E973                     __end_of_dpowers:
  1219                           	opt callstack 0
  1220  00E973  0EB8               	dw	3768
  1221  00E975  43BC               	dw	17340
  1222  00E977                     __end_of_temp_adc_offset:
  1223                           	opt callstack 0
  1224  00E977                     STR_227:
  1225  00E977  20                 	db	32
  1226  00E978  20                 	db	32
  1227  00E979  20                 	db	32
  1228  00E97A  20                 	db	32
  1229  00E97B  2A                 	db	42
  1230  00E97C  49                 	db	73	;'I'
  1231  00E97D  44                 	db	68	;'D'
  1232  00E97E  4E                 	db	78	;'N'
  1233  00E97F  3F                 	db	63	;'?'
  1234  00E980  3A                 	db	58	;':'
  1235  00E981  20                 	db	32
  1236  00E982  50                 	db	80	;'P'
  1237  00E983  72                 	db	114	;'r'
  1238  00E984  69                 	db	105	;'i'
  1239  00E985  6E                 	db	110	;'n'
  1240  00E986  74                 	db	116	;'t'
  1241  00E987  73                 	db	115	;'s'
  1242  00E988  20                 	db	32
  1243  00E989  69                 	db	105	;'i'
  1244  00E98A  64                 	db	100	;'d'
  1245  00E98B  65                 	db	101	;'e'
  1246  00E98C  6E                 	db	110	;'n'
  1247  00E98D  74                 	db	116	;'t'
  1248  00E98E  69                 	db	105	;'i'
  1249  00E98F  66                 	db	102	;'f'
  1250  00E990  69                 	db	105	;'i'
  1251  00E991  63                 	db	99	;'c'
  1252  00E992  61                 	db	97	;'a'
  1253  00E993  74                 	db	116	;'t'
  1254  00E994  69                 	db	105	;'i'
  1255  00E995  6F                 	db	111	;'o'
  1256  00E996  6E                 	db	110	;'n'
  1257  00E997  20                 	db	32
  1258  00E998  73                 	db	115	;'s'
  1259  00E999  74                 	db	116	;'t'
  1260  00E99A  72                 	db	114	;'r'
  1261  00E99B  69                 	db	105	;'i'
  1262  00E99C  6E                 	db	110	;'n'
  1263  00E99D  67                 	db	103	;'g'
  1264  00E99E  0A                 	db	10
  1265  00E99F  0D                 	db	13
  1266  00E9A0  20                 	db	32
  1267  00E9A1  20                 	db	32
  1268  00E9A2  20                 	db	32
  1269  00E9A3  20                 	db	32
  1270  00E9A4  52                 	db	82	;'R'
  1271  00E9A5  65                 	db	101	;'e'
  1272  00E9A6  73                 	db	115	;'s'
  1273  00E9A7  65                 	db	101	;'e'
  1274  00E9A8  74                 	db	116	;'t'
  1275  00E9A9  3A                 	db	58	;':'
  1276  00E9AA  20                 	db	32
  1277  00E9AB  45                 	db	69	;'E'
  1278  00E9AC  78                 	db	120	;'x'
  1279  00E9AD  65                 	db	101	;'e'
  1280  00E9AE  63                 	db	99	;'c'
  1281  00E9AF  75                 	db	117	;'u'
  1282  00E9B0  74                 	db	116	;'t'
  1283  00E9B1  65                 	db	101	;'e'
  1284  00E9B2  73                 	db	115	;'s'
  1285  00E9B3  20                 	db	32
  1286  00E9B4  73                 	db	115	;'s'
  1287  00E9B5  6F                 	db	111	;'o'
  1288  00E9B6  66                 	db	102	;'f'
  1289  00E9B7  74                 	db	116	;'t'
  1290  00E9B8  77                 	db	119	;'w'
  1291  00E9B9  61                 	db	97	;'a'
  1292  00E9BA  72                 	db	114	;'r'
  1293  00E9BB  65                 	db	101	;'e'
  1294  00E9BC  20                 	db	32
  1295  00E9BD  72                 	db	114	;'r'
  1296  00E9BE  65                 	db	101	;'e'
  1297  00E9BF  73                 	db	115	;'s'
  1298  00E9C0  65                 	db	101	;'e'
  1299  00E9C1  74                 	db	116	;'t'
  1300  00E9C2  20                 	db	32
  1301  00E9C3  69                 	db	105	;'i'
  1302  00E9C4  6E                 	db	110	;'n'
  1303  00E9C5  73                 	db	115	;'s'
  1304  00E9C6  74                 	db	116	;'t'
  1305  00E9C7  72                 	db	114	;'r'
  1306  00E9C8  75                 	db	117	;'u'
  1307  00E9C9  63                 	db	99	;'c'
  1308  00E9CA  74                 	db	116	;'t'
  1309  00E9CB  69                 	db	105	;'i'
  1310  00E9CC  6F                 	db	111	;'o'
  1311  00E9CD  6E                 	db	110	;'n'
  1312  00E9CE  0A                 	db	10
  1313  00E9CF  0D                 	db	13
  1314  00E9D0  20                 	db	32
  1315  00E9D1  20                 	db	32
  1316  00E9D2  20                 	db	32
  1317  00E9D3  20                 	db	32
  1318  00E9D4  43                 	db	67	;'C'
  1319  00E9D5  6C                 	db	108	;'l'
  1320  00E9D6  65                 	db	101	;'e'
  1321  00E9D7  61                 	db	97	;'a'
  1322  00E9D8  72                 	db	114	;'r'
  1323  00E9D9  3A                 	db	58	;':'
  1324  00E9DA  20                 	db	32
  1325  00E9DB  43                 	db	67	;'C'
  1326  00E9DC  6C                 	db	108	;'l'
  1327  00E9DD  65                 	db	101	;'e'
  1328  00E9DE  61                 	db	97	;'a'
  1329  00E9DF  72                 	db	114	;'r'
  1330  00E9E0  73                 	db	115	;'s'
  1331  00E9E1  20                 	db	32
  1332  00E9E2  74                 	db	116	;'t'
  1333  00E9E3  68                 	db	104	;'h'
  1334  00E9E4  65                 	db	101	;'e'
  1335  00E9E5  20                 	db	32
  1336  00E9E6  76                 	db	118	;'v'
  1337  00E9E7  69                 	db	105	;'i'
  1338  00E9E8  72                 	db	114	;'r'
  1339  00E9E9  74                 	db	116	;'t'
  1340  00E9EA  75                 	db	117	;'u'
  1341  00E9EB  61                 	db	97	;'a'
  1342  00E9EC  6C                 	db	108	;'l'
  1343  00E9ED  20                 	db	32
  1344  00E9EE  43                 	db	67	;'C'
  1345  00E9EF  4F                 	db	79	;'O'
  1346  00E9F0  4D                 	db	77	;'M'
  1347  00E9F1  20                 	db	32
  1348  00E9F2  70                 	db	112	;'p'
  1349  00E9F3  6F                 	db	111	;'o'
  1350  00E9F4  72                 	db	114	;'r'
  1351  00E9F5  74                 	db	116	;'t'
  1352  00E9F6  20                 	db	32
  1353  00E9F7  74                 	db	116	;'t'
  1354  00E9F8  65                 	db	101	;'e'
  1355  00E9F9  72                 	db	114	;'r'
  1356  00E9FA  6D                 	db	109	;'m'
  1357  00E9FB  69                 	db	105	;'i'
  1358  00E9FC  6E                 	db	110	;'n'
  1359  00E9FD  61                 	db	97	;'a'
  1360  00E9FE  6C                 	db	108	;'l'
  1361  00E9FF  0A                 	db	10
  1362  00EA00  0D                 	db	13
  1363  00EA01  20                 	db	32
  1364  00EA02  20                 	db	32
  1365  00EA03  20                 	db	32
  1366  00EA04  20                 	db	32
  1367  00EA05  43                 	db	67	;'C'
  1368  00EA06  75                 	db	117	;'u'
  1369  00EA07  72                 	db	114	;'r'
  1370  00EA08  72                 	db	114	;'r'
  1371  00EA09  65                 	db	101	;'e'
  1372  00EA0A  6E                 	db	110	;'n'
  1373  00EA0B  74                 	db	116	;'t'
  1374  00EA0C  20                 	db	32
  1375  00EA0D  4D                 	db	77	;'M'
  1376  00EA0E  65                 	db	101	;'e'
  1377  00EA0F  61                 	db	97	;'a'
  1378  00EA10  73                 	db	115	;'s'
  1379  00EA11  75                 	db	117	;'u'
  1380  00EA12  72                 	db	114	;'r'
  1381  00EA13  65                 	db	101	;'e'
  1382  00EA14  6D                 	db	109	;'m'
  1383  00EA15  65                 	db	101	;'e'
  1384  00EA16  6E                 	db	110	;'n'
  1385  00EA17  74                 	db	116	;'t'
  1386  00EA18  73                 	db	115	;'s'
  1387  00EA19  3F                 	db	63	;'?'
  1388  00EA1A  3A                 	db	58	;':'
  1389  00EA1B  20                 	db	32
  1390  00EA1C  50                 	db	80	;'P'
  1391  00EA1D  72                 	db	114	;'r'
  1392  00EA1E  69                 	db	105	;'i'
  1393  00EA1F  6E                 	db	110	;'n'
  1394  00EA20  74                 	db	116	;'t'
  1395  00EA21  73                 	db	115	;'s'
  1396  00EA22  20                 	db	32
  1397  00EA23  69                 	db	105	;'i'
  1398  00EA24  6E                 	db	110	;'n'
  1399  00EA25  73                 	db	115	;'s'
  1400  00EA26  74                 	db	116	;'t'
  1401  00EA27  61                 	db	97	;'a'
  1402  00EA28  6E                 	db	110	;'n'
  1403  00EA29  74                 	db	116	;'t'
  1404  00EA2A  61                 	db	97	;'a'
  1405  00EA2B  6E                 	db	110	;'n'
  1406  00EA2C  65                 	db	101	;'e'
  1407  00EA2D  6F                 	db	111	;'o'
  1408  00EA2E  75                 	db	117	;'u'
  1409  00EA2F  73                 	db	115	;'s'
  1410  00EA30  20                 	db	32
  1411  00EA31  73                 	db	115	;'s'
  1412  00EA32  79                 	db	121	;'y'
  1413  00EA33  73                 	db	115	;'s'
  1414  00EA34  74                 	db	116	;'t'
  1415  00EA35  65                 	db	101	;'e'
  1416  00EA36  6D                 	db	109	;'m'
  1417  00EA37  20                 	db	32
  1418  00EA38  6C                 	db	108	;'l'
  1419  00EA39  65                 	db	101	;'e'
  1420  00EA3A  76                 	db	118	;'v'
  1421  00EA3B  65                 	db	101	;'e'
  1422  00EA3C  6C                 	db	108	;'l'
  1423  00EA3D  20                 	db	32
  1424  00EA3E  65                 	db	101	;'e'
  1425  00EA3F  6C                 	db	108	;'l'
  1426  00EA40  65                 	db	101	;'e'
  1427  00EA41  63                 	db	99	;'c'
  1428  00EA42  74                 	db	116	;'t'
  1429  00EA43  72                 	db	114	;'r'
  1430  00EA44  69                 	db	105	;'i'
  1431  00EA45  63                 	db	99	;'c'
  1432  00EA46  61                 	db	97	;'a'
  1433  00EA47  6C                 	db	108	;'l'
  1434  00EA48  20                 	db	32
  1435  00EA49  6D                 	db	109	;'m'
  1436  00EA4A  65                 	db	101	;'e'
  1437  00EA4B  61                 	db	97	;'a'
  1438  00EA4C  73                 	db	115	;'s'
  1439  00EA4D  75                 	db	117	;'u'
  1440  00EA4E  72                 	db	114	;'r'
  1441  00EA4F  65                 	db	101	;'e'
  1442  00EA50  6D                 	db	109	;'m'
  1443  00EA51  65                 	db	101	;'e'
  1444  00EA52  6E                 	db	110	;'n'
  1445  00EA53  74                 	db	116	;'t'
  1446  00EA54  73                 	db	115	;'s'
  1447  00EA55  0A                 	db	10
  1448  00EA56  0D                 	db	13
  1449  00EA57  20                 	db	32
  1450  00EA58  20                 	db	32
  1451  00EA59  20                 	db	32
  1452  00EA5A  20                 	db	32
  1453  00EA5B  44                 	db	68	;'D'
  1454  00EA5C  65                 	db	101	;'e'
  1455  00EA5D  76                 	db	118	;'v'
  1456  00EA5E  69                 	db	105	;'i'
  1457  00EA5F  63                 	db	99	;'c'
  1458  00EA60  65                 	db	101	;'e'
  1459  00EA61  20                 	db	32
  1460  00EA62  53                 	db	83	;'S'
  1461  00EA63  74                 	db	116	;'t'
  1462  00EA64  61                 	db	97	;'a'
  1463  00EA65  74                 	db	116	;'t'
  1464  00EA66  75                 	db	117	;'u'
  1465  00EA67  73                 	db	115	;'s'
  1466  00EA68  3F                 	db	63	;'?'
  1467  00EA69  3A                 	db	58	;':'
  1468  00EA6A  20                 	db	32
  1469  00EA6B  50                 	db	80	;'P'
  1470  00EA6C  72                 	db	114	;'r'
  1471  00EA6D  69                 	db	105	;'i'
  1472  00EA6E  6E                 	db	110	;'n'
  1473  00EA6F  74                 	db	116	;'t'
  1474  00EA70  73                 	db	115	;'s'
  1475  00EA71  20                 	db	32
  1476  00EA72  64                 	db	100	;'d'
  1477  00EA73  69                 	db	105	;'i'
  1478  00EA74  67                 	db	103	;'g'
  1479  00EA75  69                 	db	105	;'i'
  1480  00EA76  74                 	db	116	;'t'
  1481  00EA77  61                 	db	97	;'a'
  1482  00EA78  6C                 	db	108	;'l'
  1483  00EA79  20                 	db	32
  1484  00EA7A  6D                 	db	109	;'m'
  1485  00EA7B  6F                 	db	111	;'o'
  1486  00EA7C  6E                 	db	110	;'n'
  1487  00EA7D  69                 	db	105	;'i'
  1488  00EA7E  74                 	db	116	;'t'
  1489  00EA7F  6F                 	db	111	;'o'
  1490  00EA80  72                 	db	114	;'r'
  1491  00EA81  69                 	db	105	;'i'
  1492  00EA82  6E                 	db	110	;'n'
  1493  00EA83  67                 	db	103	;'g'
  1494  00EA84  20                 	db	32
  1495  00EA85  6D                 	db	109	;'m'
  1496  00EA86  69                 	db	105	;'i'
  1497  00EA87  63                 	db	99	;'c'
  1498  00EA88  72                 	db	114	;'r'
  1499  00EA89  6F                 	db	111	;'o'
  1500  00EA8A  63                 	db	99	;'c'
  1501  00EA8B  6F                 	db	111	;'o'
  1502  00EA8C  6E                 	db	110	;'n'
  1503  00EA8D  74                 	db	116	;'t'
  1504  00EA8E  72                 	db	114	;'r'
  1505  00EA8F  6F                 	db	111	;'o'
  1506  00EA90  6C                 	db	108	;'l'
  1507  00EA91  6C                 	db	108	;'l'
  1508  00EA92  65                 	db	101	;'e'
  1509  00EA93  72                 	db	114	;'r'
  1510  00EA94  20                 	db	32
  1511  00EA95  64                 	db	100	;'d'
  1512  00EA96  65                 	db	101	;'e'
  1513  00EA97  76                 	db	118	;'v'
  1514  00EA98  69                 	db	105	;'i'
  1515  00EA99  63                 	db	99	;'c'
  1516  00EA9A  65                 	db	101	;'e'
  1517  00EA9B  20                 	db	32
  1518  00EA9C  73                 	db	115	;'s'
  1519  00EA9D  74                 	db	116	;'t'
  1520  00EA9E  61                 	db	97	;'a'
  1521  00EA9F  74                 	db	116	;'t'
  1522  00EAA0  75                 	db	117	;'u'
  1523  00EAA1  73                 	db	115	;'s'
  1524  00EAA2  0A                 	db	10
  1525  00EAA3  0D                 	db	13
  1526  00EAA4  20                 	db	32
  1527  00EAA5  20                 	db	32
  1528  00EAA6  20                 	db	32
  1529  00EAA7  20                 	db	32
  1530  00EAA8  45                 	db	69	;'E'
  1531  00EAA9  72                 	db	114	;'r'
  1532  00EAAA  72                 	db	114	;'r'
  1533  00EAAB  6F                 	db	111	;'o'
  1534  00EAAC  72                 	db	114	;'r'
  1535  00EAAD  20                 	db	32
  1536  00EAAE  53                 	db	83	;'S'
  1537  00EAAF  74                 	db	116	;'t'
  1538  00EAB0  61                 	db	97	;'a'
  1539  00EAB1  74                 	db	116	;'t'
  1540  00EAB2  75                 	db	117	;'u'
  1541  00EAB3  73                 	db	115	;'s'
  1542  00EAB4  3F                 	db	63	;'?'
  1543  00EAB5  20                 	db	32
  1544  00EAB6  50                 	db	80	;'P'
  1545  00EAB7  72                 	db	114	;'r'
  1546  00EAB8  69                 	db	105	;'i'
  1547  00EAB9  6E                 	db	110	;'n'
  1548  00EABA  74                 	db	116	;'t'
  1549  00EABB  73                 	db	115	;'s'
  1550  00EABC  20                 	db	32
  1551  00EABD  69                 	db	105	;'i'
  1552  00EABE  66                 	db	102	;'f'
  1553  00EABF  20                 	db	32
  1554  00EAC0  61                 	db	97	;'a'
  1555  00EAC1  6E                 	db	110	;'n'
  1556  00EAC2  79                 	db	121	;'y'
  1557  00EAC3  20                 	db	32
  1558  00EAC4  73                 	db	115	;'s'
  1559  00EAC5  79                 	db	121	;'y'
  1560  00EAC6  73                 	db	115	;'s'
  1561  00EAC7  74                 	db	116	;'t'
  1562  00EAC8  65                 	db	101	;'e'
  1563  00EAC9  6D                 	db	109	;'m'
  1564  00EACA  20                 	db	32
  1565  00EACB  66                 	db	102	;'f'
  1566  00EACC  61                 	db	97	;'a'
  1567  00EACD  75                 	db	117	;'u'
  1568  00EACE  6C                 	db	108	;'l'
  1569  00EACF  74                 	db	116	;'t'
  1570  00EAD0  73                 	db	115	;'s'
  1571  00EAD1  20                 	db	32
  1572  00EAD2  68                 	db	104	;'h'
  1573  00EAD3  61                 	db	97	;'a'
  1574  00EAD4  76                 	db	118	;'v'
  1575  00EAD5  65                 	db	101	;'e'
  1576  00EAD6  20                 	db	32
  1577  00EAD7  62                 	db	98	;'b'
  1578  00EAD8  65                 	db	101	;'e'
  1579  00EAD9  65                 	db	101	;'e'
  1580  00EADA  6E                 	db	110	;'n'
  1581  00EADB  20                 	db	32
  1582  00EADC  64                 	db	100	;'d'
  1583  00EADD  65                 	db	101	;'e'
  1584  00EADE  74                 	db	116	;'t'
  1585  00EADF  65                 	db	101	;'e'
  1586  00EAE0  63                 	db	99	;'c'
  1587  00EAE1  74                 	db	116	;'t'
  1588  00EAE2  65                 	db	101	;'e'
  1589  00EAE3  64                 	db	100	;'d'
  1590  00EAE4  0A                 	db	10
  1591  00EAE5  0D                 	db	13
  1592  00EAE6  20                 	db	32
  1593  00EAE7  20                 	db	32
  1594  00EAE8  20                 	db	32
  1595  00EAE9  20                 	db	32
  1596  00EAEA  43                 	db	67	;'C'
  1597  00EAEB  6C                 	db	108	;'l'
  1598  00EAEC  65                 	db	101	;'e'
  1599  00EAED  61                 	db	97	;'a'
  1600  00EAEE  72                 	db	114	;'r'
  1601  00EAEF  20                 	db	32
  1602  00EAF0  55                 	db	85	;'U'
  1603  00EAF1  41                 	db	65	;'A'
  1604  00EAF2  52                 	db	82	;'R'
  1605  00EAF3  54                 	db	84	;'T'
  1606  00EAF4  20                 	db	32
  1607  00EAF5  45                 	db	69	;'E'
  1608  00EAF6  72                 	db	114	;'r'
  1609  00EAF7  72                 	db	114	;'r'
  1610  00EAF8  6F                 	db	111	;'o'
  1611  00EAF9  72                 	db	114	;'r'
  1612  00EAFA  73                 	db	115	;'s'
  1613  00EAFB  3A                 	db	58	;':'
  1614  00EAFC  20                 	db	32
  1615  00EAFD  43                 	db	67	;'C'
  1616  00EAFE  6C                 	db	108	;'l'
  1617  00EAFF  65                 	db	101	;'e'
  1618  00EB00  61                 	db	97	;'a'
  1619  00EB01  72                 	db	114	;'r'
  1620  00EB02  73                 	db	115	;'s'
  1621  00EB03  20                 	db	32
  1622  00EB04  55                 	db	85	;'U'
  1623  00EB05  41                 	db	65	;'A'
  1624  00EB06  52                 	db	82	;'R'
  1625  00EB07  54                 	db	84	;'T'
  1626  00EB08  20                 	db	32
  1627  00EB09  65                 	db	101	;'e'
  1628  00EB0A  72                 	db	114	;'r'
  1629  00EB0B  72                 	db	114	;'r'
  1630  00EB0C  6F                 	db	111	;'o'
  1631  00EB0D  72                 	db	114	;'r'
  1632  00EB0E  20                 	db	32
  1633  00EB0F  66                 	db	102	;'f'
  1634  00EB10  6C                 	db	108	;'l'
  1635  00EB11  61                 	db	97	;'a'
  1636  00EB12  67                 	db	103	;'g'
  1637  00EB13  73                 	db	115	;'s'
  1638  00EB14  0A                 	db	10
  1639  00EB15  0D                 	db	13
  1640  00EB16  20                 	db	32
  1641  00EB17  20                 	db	32
  1642  00EB18  20                 	db	32
  1643  00EB19  20                 	db	32
  1644  00EB1A  43                 	db	67	;'C'
  1645  00EB1B  6C                 	db	108	;'l'
  1646  00EB1C  65                 	db	101	;'e'
  1647  00EB1D  61                 	db	97	;'a'
  1648  00EB1E  72                 	db	114	;'r'
  1649  00EB1F  20                 	db	32
  1650  00EB20  49                 	db	73	;'I'
  1651  00EB21  32                 	db	50	;'2'
  1652  00EB22  43                 	db	67	;'C'
  1653  00EB23  20                 	db	32
  1654  00EB24  45                 	db	69	;'E'
  1655  00EB25  72                 	db	114	;'r'
  1656  00EB26  72                 	db	114	;'r'
  1657  00EB27  6F                 	db	111	;'o'
  1658  00EB28  72                 	db	114	;'r'
  1659  00EB29  73                 	db	115	;'s'
  1660  00EB2A  3A                 	db	58	;':'
  1661  00EB2B  20                 	db	32
  1662  00EB2C  43                 	db	67	;'C'
  1663  00EB2D  6C                 	db	108	;'l'
  1664  00EB2E  65                 	db	101	;'e'
  1665  00EB2F  61                 	db	97	;'a'
  1666  00EB30  72                 	db	114	;'r'
  1667  00EB31  73                 	db	115	;'s'
  1668  00EB32  20                 	db	32
  1669  00EB33  49                 	db	73	;'I'
  1670  00EB34  32                 	db	50	;'2'
  1671  00EB35  43                 	db	67	;'C'
  1672  00EB36  20                 	db	32
  1673  00EB37  65                 	db	101	;'e'
  1674  00EB38  72                 	db	114	;'r'
  1675  00EB39  72                 	db	114	;'r'
  1676  00EB3A  6F                 	db	111	;'o'
  1677  00EB3B  72                 	db	114	;'r'
  1678  00EB3C  20                 	db	32
  1679  00EB3D  66                 	db	102	;'f'
  1680  00EB3E  6C                 	db	108	;'l'
  1681  00EB3F  61                 	db	97	;'a'
  1682  00EB40  67                 	db	103	;'g'
  1683  00EB41  73                 	db	115	;'s'
  1684  00EB42  0A                 	db	10
  1685  00EB43  0D                 	db	13
  1686  00EB44  20                 	db	32
  1687  00EB45  20                 	db	32
  1688  00EB46  20                 	db	32
  1689  00EB47  20                 	db	32
  1690  00EB48  43                 	db	67	;'C'
  1691  00EB49  6C                 	db	108	;'l'
  1692  00EB4A  65                 	db	101	;'e'
  1693  00EB4B  61                 	db	97	;'a'
  1694  00EB4C  72                 	db	114	;'r'
  1695  00EB4D  20                 	db	32
  1696  00EB4E  41                 	db	65	;'A'
  1697  00EB4F  44                 	db	68	;'D'
  1698  00EB50  43                 	db	67	;'C'
  1699  00EB51  20                 	db	32
  1700  00EB52  45                 	db	69	;'E'
  1701  00EB53  72                 	db	114	;'r'
  1702  00EB54  72                 	db	114	;'r'
  1703  00EB55  6F                 	db	111	;'o'
  1704  00EB56  72                 	db	114	;'r'
  1705  00EB57  73                 	db	115	;'s'
  1706  00EB58  3A                 	db	58	;':'
  1707  00EB59  20                 	db	32
  1708  00EB5A  43                 	db	67	;'C'
  1709  00EB5B  6C                 	db	108	;'l'
  1710  00EB5C  65                 	db	101	;'e'
  1711  00EB5D  61                 	db	97	;'a'
  1712  00EB5E  72                 	db	114	;'r'
  1713  00EB5F  73                 	db	115	;'s'
  1714  00EB60  20                 	db	32
  1715  00EB61  41                 	db	65	;'A'
  1716  00EB62  44                 	db	68	;'D'
  1717  00EB63  43                 	db	67	;'C'
  1718  00EB64  20                 	db	32
  1719  00EB65  65                 	db	101	;'e'
  1720  00EB66  72                 	db	114	;'r'
  1721  00EB67  72                 	db	114	;'r'
  1722  00EB68  6F                 	db	111	;'o'
  1723  00EB69  72                 	db	114	;'r'
  1724  00EB6A  20                 	db	32
  1725  00EB6B  66                 	db	102	;'f'
  1726  00EB6C  6C                 	db	108	;'l'
  1727  00EB6D  61                 	db	97	;'a'
  1728  00EB6E  67                 	db	103	;'g'
  1729  00EB6F  73                 	db	115	;'s'
  1730  00EB70  0A                 	db	10
  1731  00EB71  0D                 	db	13
  1732  00EB72  20                 	db	32
  1733  00EB73  20                 	db	32
  1734  00EB74  20                 	db	32
  1735  00EB75  20                 	db	32
  1736  00EB76  48                 	db	72	;'H'
  1737  00EB77  65                 	db	101	;'e'
  1738  00EB78  6C                 	db	108	;'l'
  1739  00EB79  70                 	db	112	;'p'
  1740  00EB7A  3A                 	db	58	;':'
  1741  00EB7B  20                 	db	32
  1742  00EB7C  4C                 	db	76	;'L'
  1743  00EB7D  69                 	db	105	;'i'
  1744  00EB7E  73                 	db	115	;'s'
  1745  00EB7F  74                 	db	116	;'t'
  1746  00EB80  73                 	db	115	;'s'
  1747  00EB81  20                 	db	32
  1748  00EB82  61                 	db	97	;'a'
  1749  00EB83  76                 	db	118	;'v'
  1750  00EB84  61                 	db	97	;'a'
  1751  00EB85  69                 	db	105	;'i'
  1752  00EB86  6C                 	db	108	;'l'
  1753  00EB87  61                 	db	97	;'a'
  1754  00EB88  62                 	db	98	;'b'
  1755  00EB89  6C                 	db	108	;'l'
  1756  00EB8A  65                 	db	101	;'e'
  1757  00EB8B  20                 	db	32
  1758  00EB8C  63                 	db	99	;'c'
  1759  00EB8D  6F                 	db	111	;'o'
  1760  00EB8E  6D                 	db	109	;'m'
  1761  00EB8F  6D                 	db	109	;'m'
  1762  00EB90  61                 	db	97	;'a'
  1763  00EB91  6E                 	db	110	;'n'
  1764  00EB92  64                 	db	100	;'d'
  1765  00EB93  73                 	db	115	;'s'
  1766  00EB94  20                 	db	32
  1767  00EB95  28                 	db	40
  1768  00EB96  74                 	db	116	;'t'
  1769  00EB97  68                 	db	104	;'h'
  1770  00EB98  69                 	db	105	;'i'
  1771  00EB99  73                 	db	115	;'s'
  1772  00EB9A  20                 	db	32
  1773  00EB9B  63                 	db	99	;'c'
  1774  00EB9C  6F                 	db	111	;'o'
  1775  00EB9D  6D                 	db	109	;'m'
  1776  00EB9E  6D                 	db	109	;'m'
  1777  00EB9F  61                 	db	97	;'a'
  1778  00EBA0  6E                 	db	110	;'n'
  1779  00EBA1  64                 	db	100	;'d'
  1780  00EBA2  29                 	db	41
  1781  00EBA3  0A                 	db	10
  1782  00EBA4  0D                 	db	13
  1783  00EBA5  00                 	db	0
  1784  00EBA6                     STR_290:
  1785  00EBA6  20                 	db	32
  1786  00EBA7  20                 	db	32
  1787  00EBA8  20                 	db	32
  1788  00EBA9  20                 	db	32
  1789  00EBAA  20                 	db	32
  1790  00EBAB  20                 	db	32
  1791  00EBAC  20                 	db	32
  1792  00EBAD  20                 	db	32
  1793  00EBAE  46                 	db	70	;'F'
  1794  00EBAF  69                 	db	105	;'i'
  1795  00EBB0  78                 	db	120	;'x'
  1796  00EBB1  65                 	db	101	;'e'
  1797  00EBB2  64                 	db	100	;'d'
  1798  00EBB3  20                 	db	32
  1799  00EBB4  56                 	db	86	;'V'
  1800  00EBB5  6F                 	db	111	;'o'
  1801  00EBB6  6C                 	db	108	;'l'
  1802  00EBB7  74                 	db	116	;'t'
  1803  00EBB8  61                 	db	97	;'a'
  1804  00EBB9  67                 	db	103	;'g'
  1805  00EBBA  65                 	db	101	;'e'
  1806  00EBBB  20                 	db	32
  1807  00EBBC  52                 	db	82	;'R'
  1808  00EBBD  65                 	db	101	;'e'
  1809  00EBBE  66                 	db	102	;'f'
  1810  00EBBF  65                 	db	101	;'e'
  1811  00EBC0  72                 	db	114	;'r'
  1812  00EBC1  65                 	db	101	;'e'
  1813  00EBC2  6E                 	db	110	;'n'
  1814  00EBC3  63                 	db	99	;'c'
  1815  00EBC4  65                 	db	101	;'e'
  1816  00EBC5  20                 	db	32
  1817  00EBC6  42                 	db	66	;'B'
  1818  00EBC7  75                 	db	117	;'u'
  1819  00EBC8  66                 	db	102	;'f'
  1820  00EBC9  66                 	db	102	;'f'
  1821  00EBCA  65                 	db	101	;'e'
  1822  00EBCB  72                 	db	114	;'r'
  1823  00EBCC  20                 	db	32
  1824  00EBCD  31                 	db	49	;'1'
  1825  00EBCE  20                 	db	32
  1826  00EBCF  6D                 	db	109	;'m'
  1827  00EBD0  65                 	db	101	;'e'
  1828  00EBD1  61                 	db	97	;'a'
  1829  00EBD2  73                 	db	115	;'s'
  1830  00EBD3  75                 	db	117	;'u'
  1831  00EBD4  72                 	db	114	;'r'
  1832  00EBD5  65                 	db	101	;'e'
  1833  00EBD6  64                 	db	100	;'d'
  1834  00EBD7  20                 	db	32
  1835  00EBD8  61                 	db	97	;'a'
  1836  00EBD9  73                 	db	115	;'s'
  1837  00EBDA  20                 	db	32
  1838  00EBDB  25                 	db	37
  1839  00EBDC  2B                 	db	43
  1840  00EBDD  2E                 	db	46
  1841  00EBDE  33                 	db	51	;'3'
  1842  00EBDF  66                 	db	102	;'f'
  1843  00EBE0  20                 	db	32
  1844  00EBE1  56                 	db	86	;'V'
  1845  00EBE2  6F                 	db	111	;'o'
  1846  00EBE3  6C                 	db	108	;'l'
  1847  00EBE4  74                 	db	116	;'t'
  1848  00EBE5  73                 	db	115	;'s'
  1849  00EBE6  2C                 	db	44
  1850  00EBE7  20                 	db	32
  1851  00EBE8  63                 	db	99	;'c'
  1852  00EBE9  61                 	db	97	;'a'
  1853  00EBEA  6C                 	db	108	;'l'
  1854  00EBEB  69                 	db	105	;'i'
  1855  00EBEC  62                 	db	98	;'b'
  1856  00EBED  72                 	db	114	;'r'
  1857  00EBEE  61                 	db	97	;'a'
  1858  00EBEF  74                 	db	116	;'t'
  1859  00EBF0  65                 	db	101	;'e'
  1860  00EBF1  64                 	db	100	;'d'
  1861  00EBF2  20                 	db	32
  1862  00EBF3  66                 	db	102	;'f'
  1863  00EBF4  6F                 	db	111	;'o'
  1864  00EBF5  72                 	db	114	;'r'
  1865  00EBF6  20                 	db	32
  1866  00EBF7  2B                 	db	43
  1867  00EBF8  34                 	db	52	;'4'
  1868  00EBF9  2E                 	db	46
  1869  00EBFA  30                 	db	48	;'0'
  1870  00EBFB  39                 	db	57	;'9'
  1871  00EBFC  36                 	db	54	;'6'
  1872  00EBFD  20                 	db	32
  1873  00EBFE  56                 	db	86	;'V'
  1874  00EBFF  6F                 	db	111	;'o'
  1875  00EC00  6C                 	db	108	;'l'
  1876  00EC01  74                 	db	116	;'t'
  1877  00EC02  73                 	db	115	;'s'
  1878  00EC03  0A                 	db	10
  1879  00EC04  0D                 	db	13
  1880  00EC05  00                 	db	0
  1881  00EC06                     STR_235:
  1882  00EC06  43                 	db	67	;'C'
  1883  00EC07  6F                 	db	111	;'o'
  1884  00EC08  6D                 	db	109	;'m'
  1885  00EC09  6D                 	db	109	;'m'
  1886  00EC0A  61                 	db	97	;'a'
  1887  00EC0B  6E                 	db	110	;'n'
  1888  00EC0C  64                 	db	100	;'d'
  1889  00EC0D  73                 	db	115	;'s'
  1890  00EC0E  20                 	db	32
  1891  00EC0F  61                 	db	97	;'a'
  1892  00EC10  72                 	db	114	;'r'
  1893  00EC11  65                 	db	101	;'e'
  1894  00EC12  20                 	db	32
  1895  00EC13  63                 	db	99	;'c'
  1896  00EC14  61                 	db	97	;'a'
  1897  00EC15  73                 	db	115	;'s'
  1898  00EC16  65                 	db	101	;'e'
  1899  00EC17  20                 	db	32
  1900  00EC18  73                 	db	115	;'s'
  1901  00EC19  65                 	db	101	;'e'
  1902  00EC1A  6E                 	db	110	;'n'
  1903  00EC1B  73                 	db	115	;'s'
  1904  00EC1C  69                 	db	105	;'i'
  1905  00EC1D  74                 	db	116	;'t'
  1906  00EC1E  69                 	db	105	;'i'
  1907  00EC1F  76                 	db	118	;'v'
  1908  00EC20  65                 	db	101	;'e'
  1909  00EC21  2C                 	db	44
  1910  00EC22  20                 	db	32
  1911  00EC23  62                 	db	98	;'b'
  1912  00EC24  61                 	db	97	;'a'
  1913  00EC25  63                 	db	99	;'c'
  1914  00EC26  6B                 	db	107	;'k'
  1915  00EC27  73                 	db	115	;'s'
  1916  00EC28  70                 	db	112	;'p'
  1917  00EC29  61                 	db	97	;'a'
  1918  00EC2A  63                 	db	99	;'c'
  1919  00EC2B  65                 	db	101	;'e'
  1920  00EC2C  20                 	db	32
  1921  00EC2D  69                 	db	105	;'i'
  1922  00EC2E  73                 	db	115	;'s'
  1923  00EC2F  20                 	db	32
  1924  00EC30  73                 	db	115	;'s'
  1925  00EC31  75                 	db	117	;'u'
  1926  00EC32  70                 	db	112	;'p'
  1927  00EC33  70                 	db	112	;'p'
  1928  00EC34  6F                 	db	111	;'o'
  1929  00EC35  72                 	db	114	;'r'
  1930  00EC36  74                 	db	116	;'t'
  1931  00EC37  65                 	db	101	;'e'
  1932  00EC38  64                 	db	100	;'d'
  1933  00EC39  2C                 	db	44
  1934  00EC3A  20                 	db	32
  1935  00EC3B  63                 	db	99	;'c'
  1936  00EC3C  6F                 	db	111	;'o'
  1937  00EC3D  6D                 	db	109	;'m'
  1938  00EC3E  6D                 	db	109	;'m'
  1939  00EC3F  61                 	db	97	;'a'
  1940  00EC40  6E                 	db	110	;'n'
  1941  00EC41  64                 	db	100	;'d'
  1942  00EC42  20                 	db	32
  1943  00EC43  68                 	db	104	;'h'
  1944  00EC44  69                 	db	105	;'i'
  1945  00EC45  73                 	db	115	;'s'
  1946  00EC46  74                 	db	116	;'t'
  1947  00EC47  6F                 	db	111	;'o'
  1948  00EC48  72                 	db	114	;'r'
  1949  00EC49  79                 	db	121	;'y'
  1950  00EC4A  20                 	db	32
  1951  00EC4B  69                 	db	105	;'i'
  1952  00EC4C  73                 	db	115	;'s'
  1953  00EC4D  20                 	db	32
  1954  00EC4E  6E                 	db	110	;'n'
  1955  00EC4F  6F                 	db	111	;'o'
  1956  00EC50  74                 	db	116	;'t'
  1957  00EC51  20                 	db	32
  1958  00EC52  73                 	db	115	;'s'
  1959  00EC53  75                 	db	117	;'u'
  1960  00EC54  70                 	db	112	;'p'
  1961  00EC55  70                 	db	112	;'p'
  1962  00EC56  6F                 	db	111	;'o'
  1963  00EC57  72                 	db	114	;'r'
  1964  00EC58  74                 	db	116	;'t'
  1965  00EC59  65                 	db	101	;'e'
  1966  00EC5A  64                 	db	100	;'d'
  1967  00EC5B  0A                 	db	10
  1968  00EC5C  0D                 	db	13
  1969  00EC5D  00                 	db	0
  1970  00EC5E                     STR_252:
  1971  00EC5E  20                 	db	32
  1972  00EC5F  20                 	db	32
  1973  00EC60  20                 	db	32
  1974  00EC61  20                 	db	32
  1975  00EC62  43                 	db	67	;'C'
  1976  00EC63  61                 	db	97	;'a'
  1977  00EC64  6C                 	db	108	;'l'
  1978  00EC65  6C                 	db	108	;'l'
  1979  00EC66  20                 	db	32
  1980  00EC67  27                 	db	39
  1981  00EC68  43                 	db	67	;'C'
  1982  00EC69  6C                 	db	108	;'l'
  1983  00EC6A  65                 	db	101	;'e'
  1984  00EC6B  61                 	db	97	;'a'
  1985  00EC6C  72                 	db	114	;'r'
  1986  00EC6D  20                 	db	32
  1987  00EC6E  55                 	db	85	;'U'
  1988  00EC6F  41                 	db	65	;'A'
  1989  00EC70  52                 	db	82	;'R'
  1990  00EC71  54                 	db	84	;'T'
  1991  00EC72  20                 	db	32
  1992  00EC73  45                 	db	69	;'E'
  1993  00EC74  72                 	db	114	;'r'
  1994  00EC75  72                 	db	114	;'r'
  1995  00EC76  6F                 	db	111	;'o'
  1996  00EC77  72                 	db	114	;'r'
  1997  00EC78  73                 	db	115	;'s'
  1998  00EC79  27                 	db	39
  1999  00EC7A  20                 	db	32
  2000  00EC7B  74                 	db	116	;'t'
  2001  00EC7C  6F                 	db	111	;'o'
  2002  00EC7D  20                 	db	32
  2003  00EC7E  63                 	db	99	;'c'
  2004  00EC7F  6C                 	db	108	;'l'
  2005  00EC80  65                 	db	101	;'e'
  2006  00EC81  61                 	db	97	;'a'
  2007  00EC82  72                 	db	114	;'r'
  2008  00EC83  20                 	db	32
  2009  00EC84  63                 	db	99	;'c'
  2010  00EC85  6F                 	db	111	;'o'
  2011  00EC86  6D                 	db	109	;'m'
  2012  00EC87  6D                 	db	109	;'m'
  2013  00EC88  75                 	db	117	;'u'
  2014  00EC89  6E                 	db	110	;'n'
  2015  00EC8A  69                 	db	105	;'i'
  2016  00EC8B  63                 	db	99	;'c'
  2017  00EC8C  61                 	db	97	;'a'
  2018  00EC8D  74                 	db	116	;'t'
  2019  00EC8E  69                 	db	105	;'i'
  2020  00EC8F  6F                 	db	111	;'o'
  2021  00EC90  6E                 	db	110	;'n'
  2022  00EC91  73                 	db	115	;'s'
  2023  00EC92  20                 	db	32
  2024  00EC93  65                 	db	101	;'e'
  2025  00EC94  72                 	db	114	;'r'
  2026  00EC95  72                 	db	114	;'r'
  2027  00EC96  6F                 	db	111	;'o'
  2028  00EC97  72                 	db	114	;'r'
  2029  00EC98  28                 	db	40
  2030  00EC99  73                 	db	115	;'s'
  2031  00EC9A  29                 	db	41
  2032  00EC9B  0A                 	db	10
  2033  00EC9C  0D                 	db	13
  2034  00EC9D  00                 	db	0
  2035  00EC9E                     STR_249:
  2036  00EC9E  20                 	db	32
  2037  00EC9F  20                 	db	32
  2038  00ECA0  20                 	db	32
  2039  00ECA1  20                 	db	32
  2040  00ECA2  43                 	db	67	;'C'
  2041  00ECA3  61                 	db	97	;'a'
  2042  00ECA4  6C                 	db	108	;'l'
  2043  00ECA5  6C                 	db	108	;'l'
  2044  00ECA6  20                 	db	32
  2045  00ECA7  27                 	db	39
  2046  00ECA8  43                 	db	67	;'C'
  2047  00ECA9  6C                 	db	108	;'l'
  2048  00ECAA  65                 	db	101	;'e'
  2049  00ECAB  61                 	db	97	;'a'
  2050  00ECAC  72                 	db	114	;'r'
  2051  00ECAD  20                 	db	32
  2052  00ECAE  49                 	db	73	;'I'
  2053  00ECAF  32                 	db	50	;'2'
  2054  00ECB0  43                 	db	67	;'C'
  2055  00ECB1  20                 	db	32
  2056  00ECB2  45                 	db	69	;'E'
  2057  00ECB3  72                 	db	114	;'r'
  2058  00ECB4  72                 	db	114	;'r'
  2059  00ECB5  6F                 	db	111	;'o'
  2060  00ECB6  72                 	db	114	;'r'
  2061  00ECB7  73                 	db	115	;'s'
  2062  00ECB8  27                 	db	39
  2063  00ECB9  20                 	db	32
  2064  00ECBA  74                 	db	116	;'t'
  2065  00ECBB  6F                 	db	111	;'o'
  2066  00ECBC  20                 	db	32
  2067  00ECBD  63                 	db	99	;'c'
  2068  00ECBE  6C                 	db	108	;'l'
  2069  00ECBF  65                 	db	101	;'e'
  2070  00ECC0  61                 	db	97	;'a'
  2071  00ECC1  72                 	db	114	;'r'
  2072  00ECC2  20                 	db	32
  2073  00ECC3  63                 	db	99	;'c'
  2074  00ECC4  6F                 	db	111	;'o'
  2075  00ECC5  6D                 	db	109	;'m'
  2076  00ECC6  6D                 	db	109	;'m'
  2077  00ECC7  75                 	db	117	;'u'
  2078  00ECC8  6E                 	db	110	;'n'
  2079  00ECC9  69                 	db	105	;'i'
  2080  00ECCA  63                 	db	99	;'c'
  2081  00ECCB  61                 	db	97	;'a'
  2082  00ECCC  74                 	db	116	;'t'
  2083  00ECCD  69                 	db	105	;'i'
  2084  00ECCE  6F                 	db	111	;'o'
  2085  00ECCF  6E                 	db	110	;'n'
  2086  00ECD0  73                 	db	115	;'s'
  2087  00ECD1  20                 	db	32
  2088  00ECD2  65                 	db	101	;'e'
  2089  00ECD3  72                 	db	114	;'r'
  2090  00ECD4  72                 	db	114	;'r'
  2091  00ECD5  6F                 	db	111	;'o'
  2092  00ECD6  72                 	db	114	;'r'
  2093  00ECD7  28                 	db	40
  2094  00ECD8  73                 	db	115	;'s'
  2095  00ECD9  29                 	db	41
  2096  00ECDA  0A                 	db	10
  2097  00ECDB  0D                 	db	13
  2098  00ECDC  00                 	db	0
  2099  00ECDD                     STR_279:
  2100  00ECDD  20                 	db	32
  2101  00ECDE  20                 	db	32
  2102  00ECDF  20                 	db	32
  2103  00ECE0  20                 	db	32
  2104  00ECE1  20                 	db	32
  2105  00ECE2  20                 	db	32
  2106  00ECE3  20                 	db	32
  2107  00ECE4  20                 	db	32
  2108  00ECE5  43                 	db	67	;'C'
  2109  00ECE6  75                 	db	117	;'u'
  2110  00ECE7  72                 	db	114	;'r'
  2111  00ECE8  72                 	db	114	;'r'
  2112  00ECE9  65                 	db	101	;'e'
  2113  00ECEA  6E                 	db	110	;'n'
  2114  00ECEB  74                 	db	116	;'t'
  2115  00ECEC  20                 	db	32
  2116  00ECED  2B                 	db	43
  2117  00ECEE  35                 	db	53	;'5'
  2118  00ECEF  56                 	db	86	;'V'
  2119  00ECF0  20                 	db	32
  2120  00ECF1  53                 	db	83	;'S'
  2121  00ECF2  77                 	db	119	;'w'
  2122  00ECF3  69                 	db	105	;'i'
  2123  00ECF4  74                 	db	116	;'t'
  2124  00ECF5  63                 	db	99	;'c'
  2125  00ECF6  68                 	db	104	;'h'
  2126  00ECF7  69                 	db	105	;'i'
  2127  00ECF8  6E                 	db	110	;'n'
  2128  00ECF9  67                 	db	103	;'g'
  2129  00ECFA  20                 	db	32
  2130  00ECFB  46                 	db	70	;'F'
  2131  00ECFC  72                 	db	114	;'r'
  2132  00ECFD  65                 	db	101	;'e'
  2133  00ECFE  71                 	db	113	;'q'
  2134  00ECFF  75                 	db	117	;'u'
  2135  00ED00  65                 	db	101	;'e'
  2136  00ED01  6E                 	db	110	;'n'
  2137  00ED02  63                 	db	99	;'c'
  2138  00ED03  79                 	db	121	;'y'
  2139  00ED04  20                 	db	32
  2140  00ED05  6D                 	db	109	;'m'
  2141  00ED06  65                 	db	101	;'e'
  2142  00ED07  61                 	db	97	;'a'
  2143  00ED08  73                 	db	115	;'s'
  2144  00ED09  75                 	db	117	;'u'
  2145  00ED0A  72                 	db	114	;'r'
  2146  00ED0B  65                 	db	101	;'e'
  2147  00ED0C  64                 	db	100	;'d'
  2148  00ED0D  20                 	db	32
  2149  00ED0E  61                 	db	97	;'a'
  2150  00ED0F  73                 	db	115	;'s'
  2151  00ED10  20                 	db	32
  2152  00ED11  25                 	db	37
  2153  00ED12  2E                 	db	46
  2154  00ED13  31                 	db	49	;'1'
  2155  00ED14  66                 	db	102	;'f'
  2156  00ED15  20                 	db	32
  2157  00ED16  4D                 	db	77	;'M'
  2158  00ED17  48                 	db	72	;'H'
  2159  00ED18  7A                 	db	122	;'z'
  2160  00ED19  0A                 	db	10
  2161  00ED1A  0D                 	db	13
  2162  00ED1B  00                 	db	0
  2163  00ED1C                     STR_289:
  2164  00ED1C  20                 	db	32
  2165  00ED1D  20                 	db	32
  2166  00ED1E  20                 	db	32
  2167  00ED1F  20                 	db	32
  2168  00ED20  20                 	db	32
  2169  00ED21  20                 	db	32
  2170  00ED22  20                 	db	32
  2171  00ED23  20                 	db	32
  2172  00ED24  4D                 	db	77	;'M'
  2173  00ED25  69                 	db	105	;'i'
  2174  00ED26  63                 	db	99	;'c'
  2175  00ED27  72                 	db	114	;'r'
  2176  00ED28  6F                 	db	111	;'o'
  2177  00ED29  63                 	db	99	;'c'
  2178  00ED2A  6F                 	db	111	;'o'
  2179  00ED2B  6E                 	db	110	;'n'
  2180  00ED2C  74                 	db	116	;'t'
  2181  00ED2D  72                 	db	114	;'r'
  2182  00ED2E  6F                 	db	111	;'o'
  2183  00ED2F  6C                 	db	108	;'l'
  2184  00ED30  6C                 	db	108	;'l'
  2185  00ED31  65                 	db	101	;'e'
  2186  00ED32  72                 	db	114	;'r'
  2187  00ED33  20                 	db	32
  2188  00ED34  44                 	db	68	;'D'
  2189  00ED35  69                 	db	105	;'i'
  2190  00ED36  65                 	db	101	;'e'
  2191  00ED37  20                 	db	32
  2192  00ED38  54                 	db	84	;'T'
  2193  00ED39  65                 	db	101	;'e'
  2194  00ED3A  6D                 	db	109	;'m'
  2195  00ED3B  70                 	db	112	;'p'
  2196  00ED3C  65                 	db	101	;'e'
  2197  00ED3D  72                 	db	114	;'r'
  2198  00ED3E  61                 	db	97	;'a'
  2199  00ED3F  74                 	db	116	;'t'
  2200  00ED40  75                 	db	117	;'u'
  2201  00ED41  72                 	db	114	;'r'
  2202  00ED42  65                 	db	101	;'e'
  2203  00ED43  20                 	db	32
  2204  00ED44  6D                 	db	109	;'m'
  2205  00ED45  65                 	db	101	;'e'
  2206  00ED46  61                 	db	97	;'a'
  2207  00ED47  73                 	db	115	;'s'
  2208  00ED48  75                 	db	117	;'u'
  2209  00ED49  72                 	db	114	;'r'
  2210  00ED4A  65                 	db	101	;'e'
  2211  00ED4B  64                 	db	100	;'d'
  2212  00ED4C  20                 	db	32
  2213  00ED4D  61                 	db	97	;'a'
  2214  00ED4E  73                 	db	115	;'s'
  2215  00ED4F  20                 	db	32
  2216  00ED50  25                 	db	37
  2217  00ED51  2B                 	db	43
  2218  00ED52  2E                 	db	46
  2219  00ED53  33                 	db	51	;'3'
  2220  00ED54  66                 	db	102	;'f'
  2221  00ED55  20                 	db	32
  2222  00ED56  43                 	db	67	;'C'
  2223  00ED57  0A                 	db	10
  2224  00ED58  0D                 	db	13
  2225  00ED59  00                 	db	0
  2226  00ED5A                     STR_203:
  2227  00ED5A  20                 	db	32
  2228  00ED5B  20                 	db	32
  2229  00ED5C  20                 	db	32
  2230  00ED5D  20                 	db	32
  2231  00ED5E  44                 	db	68	;'D'
  2232  00ED5F  65                 	db	101	;'e'
  2233  00ED60  76                 	db	118	;'v'
  2234  00ED61  69                 	db	105	;'i'
  2235  00ED62  63                 	db	99	;'c'
  2236  00ED63  65                 	db	101	;'e'
  2237  00ED64  20                 	db	32
  2238  00ED65  73                 	db	115	;'s'
  2239  00ED66  69                 	db	105	;'i'
  2240  00ED67  6C                 	db	108	;'l'
  2241  00ED68  69                 	db	105	;'i'
  2242  00ED69  63                 	db	99	;'c'
  2243  00ED6A  6F                 	db	111	;'o'
  2244  00ED6B  6E                 	db	110	;'n'
  2245  00ED6C  20                 	db	32
  2246  00ED6D  72                 	db	114	;'r'
  2247  00ED6E  65                 	db	101	;'e'
  2248  00ED6F  76                 	db	118	;'v'
  2249  00ED70  69                 	db	105	;'i'
  2250  00ED71  73                 	db	115	;'s'
  2251  00ED72  69                 	db	105	;'i'
  2252  00ED73  6F                 	db	111	;'o'
  2253  00ED74  6E                 	db	110	;'n'
  2254  00ED75  20                 	db	32
  2255  00ED76  49                 	db	73	;'I'
  2256  00ED77  44                 	db	68	;'D'
  2257  00ED78  20                 	db	32
  2258  00ED79  72                 	db	114	;'r'
  2259  00ED7A  65                 	db	101	;'e'
  2260  00ED7B  74                 	db	116	;'t'
  2261  00ED7C  72                 	db	114	;'r'
  2262  00ED7D  69                 	db	105	;'i'
  2263  00ED7E  65                 	db	101	;'e'
  2264  00ED7F  76                 	db	118	;'v'
  2265  00ED80  65                 	db	101	;'e'
  2266  00ED81  64                 	db	100	;'d'
  2267  00ED82  20                 	db	32
  2268  00ED83  66                 	db	102	;'f'
  2269  00ED84  72                 	db	114	;'r'
  2270  00ED85  6F                 	db	111	;'o'
  2271  00ED86  6D                 	db	109	;'m'
  2272  00ED87  20                 	db	32
  2273  00ED88  66                 	db	102	;'f'
  2274  00ED89  6C                 	db	108	;'l'
  2275  00ED8A  61                 	db	97	;'a'
  2276  00ED8B  73                 	db	115	;'s'
  2277  00ED8C  68                 	db	104	;'h'
  2278  00ED8D  3A                 	db	58	;':'
  2279  00ED8E  20                 	db	32
  2280  00ED8F  25                 	db	37
  2281  00ED90  63                 	db	99	;'c'
  2282  00ED91  25                 	db	37
  2283  00ED92  30                 	db	48	;'0'
  2284  00ED93  33                 	db	51	;'3'
  2285  00ED94  64                 	db	100	;'d'
  2286  00ED95  0A                 	db	10
  2287  00ED96  0D                 	db	13
  2288  00ED97  00                 	db	0
  2289  00ED98                     STR_6:
  2290  00ED98  53                 	db	83	;'S'
  2291  00ED99  79                 	db	121	;'y'
  2292  00ED9A  73                 	db	115	;'s'
  2293  00ED9B  74                 	db	116	;'t'
  2294  00ED9C  65                 	db	101	;'e'
  2295  00ED9D  6D                 	db	109	;'m'
  2296  00ED9E  20                 	db	32
  2297  00ED9F  70                 	db	112	;'p'
  2298  00EDA0  61                 	db	97	;'a'
  2299  00EDA1  72                 	db	114	;'r'
  2300  00EDA2  61                 	db	97	;'a'
  2301  00EDA3  6D                 	db	109	;'m'
  2302  00EDA4  65                 	db	101	;'e'
  2303  00EDA5  74                 	db	116	;'t'
  2304  00EDA6  65                 	db	101	;'e'
  2305  00EDA7  72                 	db	114	;'r'
  2306  00EDA8  73                 	db	115	;'s'
  2307  00EDA9  20                 	db	32
  2308  00EDAA  61                 	db	97	;'a'
  2309  00EDAB  6E                 	db	110	;'n'
  2310  00EDAC  64                 	db	100	;'d'
  2311  00EDAD  20                 	db	32
  2312  00EDAE  61                 	db	97	;'a'
  2313  00EDAF  66                 	db	102	;'f'
  2314  00EDB0  66                 	db	102	;'f'
  2315  00EDB1  69                 	db	105	;'i'
  2316  00EDB2  72                 	db	114	;'r'
  2317  00EDB3  6D                 	db	109	;'m'
  2318  00EDB4  61                 	db	97	;'a'
  2319  00EDB5  74                 	db	116	;'t'
  2320  00EDB6  69                 	db	105	;'i'
  2321  00EDB7  76                 	db	118	;'v'
  2322  00EDB8  65                 	db	101	;'e'
  2323  00EDB9  20                 	db	32
  2324  00EDBA  72                 	db	114	;'r'
  2325  00EDBB  65                 	db	101	;'e'
  2326  00EDBC  73                 	db	115	;'s'
  2327  00EDBD  70                 	db	112	;'p'
  2328  00EDBE  6F                 	db	111	;'o'
  2329  00EDBF  6E                 	db	110	;'n'
  2330  00EDC0  73                 	db	115	;'s'
  2331  00EDC1  65                 	db	101	;'e'
  2332  00EDC2  73                 	db	115	;'s'
  2333  00EDC3  20                 	db	32
  2334  00EDC4  61                 	db	97	;'a'
  2335  00EDC5  70                 	db	112	;'p'
  2336  00EDC6  70                 	db	112	;'p'
  2337  00EDC7  65                 	db	101	;'e'
  2338  00EDC8  61                 	db	97	;'a'
  2339  00EDC9  72                 	db	114	;'r'
  2340  00EDCA  20                 	db	32
  2341  00EDCB  69                 	db	105	;'i'
  2342  00EDCC  6E                 	db	110	;'n'
  2343  00EDCD  20                 	db	32
  2344  00EDCE  67                 	db	103	;'g'
  2345  00EDCF  72                 	db	114	;'r'
  2346  00EDD0  65                 	db	101	;'e'
  2347  00EDD1  65                 	db	101	;'e'
  2348  00EDD2  6E                 	db	110	;'n'
  2349  00EDD3  0A                 	db	10
  2350  00EDD4  0D                 	db	13
  2351  00EDD5  00                 	db	0
  2352  00EDD6                     STR_205:
  2353  00EDD6  20                 	db	32
  2354  00EDD7  20                 	db	32
  2355  00EDD8  20                 	db	32
  2356  00EDD9  20                 	db	32
  2357  00EDDA  54                 	db	84	;'T'
  2358  00EDDB  68                 	db	104	;'h'
  2359  00EDDC  65                 	db	101	;'e'
  2360  00EDDD  20                 	db	32
  2361  00EDDE  66                 	db	102	;'f'
  2362  00EDDF  6F                 	db	111	;'o'
  2363  00EDE0  6C                 	db	108	;'l'
  2364  00EDE1  6C                 	db	108	;'l'
  2365  00EDE2  6F                 	db	111	;'o'
  2366  00EDE3  77                 	db	119	;'w'
  2367  00EDE4  69                 	db	105	;'i'
  2368  00EDE5  6E                 	db	110	;'n'
  2369  00EDE6  67                 	db	103	;'g'
  2370  00EDE7  20                 	db	32
  2371  00EDE8  55                 	db	85	;'U'
  2372  00EDE9  73                 	db	115	;'s'
  2373  00EDEA  65                 	db	101	;'e'
  2374  00EDEB  72                 	db	114	;'r'
  2375  00EDEC  20                 	db	32
  2376  00EDED  49                 	db	73	;'I'
  2377  00EDEE  44                 	db	68	;'D'
  2378  00EDEF  73                 	db	115	;'s'
  2379  00EDF0  20                 	db	32
  2380  00EDF1  68                 	db	104	;'h'
  2381  00EDF2  61                 	db	97	;'a'
  2382  00EDF3  76                 	db	118	;'v'
  2383  00EDF4  65                 	db	101	;'e'
  2384  00EDF5  20                 	db	32
  2385  00EDF6  62                 	db	98	;'b'
  2386  00EDF7  65                 	db	101	;'e'
  2387  00EDF8  65                 	db	101	;'e'
  2388  00EDF9  6E                 	db	110	;'n'
  2389  00EDFA  20                 	db	32
  2390  00EDFB  72                 	db	114	;'r'
  2391  00EDFC  65                 	db	101	;'e'
  2392  00EDFD  74                 	db	116	;'t'
  2393  00EDFE  72                 	db	114	;'r'
  2394  00EDFF  69                 	db	105	;'i'
  2395  00EE00  65                 	db	101	;'e'
  2396  00EE01  76                 	db	118	;'v'
  2397  00EE02  65                 	db	101	;'e'
  2398  00EE03  64                 	db	100	;'d'
  2399  00EE04  20                 	db	32
  2400  00EE05  66                 	db	102	;'f'
  2401  00EE06  72                 	db	114	;'r'
  2402  00EE07  6F                 	db	111	;'o'
  2403  00EE08  6D                 	db	109	;'m'
  2404  00EE09  20                 	db	32
  2405  00EE0A  66                 	db	102	;'f'
  2406  00EE0B  6C                 	db	108	;'l'
  2407  00EE0C  61                 	db	97	;'a'
  2408  00EE0D  73                 	db	115	;'s'
  2409  00EE0E  68                 	db	104	;'h'
  2410  00EE0F  3A                 	db	58	;':'
  2411  00EE10  0A                 	db	10
  2412  00EE11  0D                 	db	13
  2413  00EE12  00                 	db	0
  2414  00EE13                     STR_275:
  2415  00EE13  20                 	db	32
  2416  00EE14  20                 	db	32
  2417  00EE15  20                 	db	32
  2418  00EE16  20                 	db	32
  2419  00EE17  43                 	db	67	;'C'
  2420  00EE18  68                 	db	104	;'h'
  2421  00EE19  61                 	db	97	;'a'
  2422  00EE1A  72                 	db	114	;'r'
  2423  00EE1B  67                 	db	103	;'g'
  2424  00EE1C  65                 	db	101	;'e'
  2425  00EE1D  20                 	db	32
  2426  00EE1E  63                 	db	99	;'c'
  2427  00EE1F  6F                 	db	111	;'o'
  2428  00EE20  6E                 	db	110	;'n'
  2429  00EE21  73                 	db	115	;'s'
  2430  00EE22  75                 	db	117	;'u'
  2431  00EE23  6D                 	db	109	;'m'
  2432  00EE24  65                 	db	101	;'e'
  2433  00EE25  64                 	db	100	;'d'
  2434  00EE26  20                 	db	32
  2435  00EE27  62                 	db	98	;'b'
  2436  00EE28  79                 	db	121	;'y'
  2437  00EE29  20                 	db	32
  2438  00EE2A  74                 	db	116	;'t'
  2439  00EE2B  68                 	db	104	;'h'
  2440  00EE2C  65                 	db	101	;'e'
  2441  00EE2D  20                 	db	32
  2442  00EE2E  6C                 	db	108	;'l'
  2443  00EE2F  6F                 	db	111	;'o'
  2444  00EE30  61                 	db	97	;'a'
  2445  00EE31  64                 	db	100	;'d'
  2446  00EE32  20                 	db	32
  2447  00EE33  77                 	db	119	;'w'
  2448  00EE34  68                 	db	104	;'h'
  2449  00EE35  69                 	db	105	;'i'
  2450  00EE36  6C                 	db	108	;'l'
  2451  00EE37  65                 	db	101	;'e'
  2452  00EE38  20                 	db	32
  2453  00EE39  63                 	db	99	;'c'
  2454  00EE3A  68                 	db	104	;'h'
  2455  00EE3B  61                 	db	97	;'a'
  2456  00EE3C  72                 	db	114	;'r'
  2457  00EE3D  67                 	db	103	;'g'
  2458  00EE3E  69                 	db	105	;'i'
  2459  00EE3F  6E                 	db	110	;'n'
  2460  00EE40  67                 	db	103	;'g'
  2461  00EE41  3A                 	db	58	;':'
  2462  00EE42  20                 	db	32
  2463  00EE43  25                 	db	37
  2464  00EE44  73                 	db	115	;'s'
  2465  00EE45  43                 	db	67	;'C'
  2466  00EE46  6F                 	db	111	;'o'
  2467  00EE47  75                 	db	117	;'u'
  2468  00EE48  6C                 	db	108	;'l'
  2469  00EE49  6F                 	db	111	;'o'
  2470  00EE4A  6D                 	db	109	;'m'
  2471  00EE4B  62                 	db	98	;'b'
  2472  00EE4C  73                 	db	115	;'s'
  2473  00EE4D  0A                 	db	10
  2474  00EE4E  0D                 	db	13
  2475  00EE4F  00                 	db	0
  2476  00EE50  46                 	db	70	;'F'
  2477  00EE51  69                 	db	105	;'i'
  2478  00EE52  6E                 	db	110	;'n'
  2479  00EE53  69                 	db	105	;'i'
  2480  00EE54  73                 	db	115	;'s'
  2481  00EE55  68                 	db	104	;'h'
  2482  00EE56  65                 	db	101	;'e'
  2483  00EE57  64                 	db	100	;'d'
  2484  00EE58  20                 	db	32
  2485  00EE59  74                 	db	116	;'t'
  2486  00EE5A  65                 	db	101	;'e'
  2487  00EE5B  73                 	db	115	;'s'
  2488  00EE5C  74                 	db	116	;'t'
  2489  00EE5D  20                 	db	32
  2490  00EE5E  6D                 	db	109	;'m'
  2491  00EE5F  65                 	db	101	;'e'
  2492  00EE60  73                 	db	115	;'s'
  2493  00EE61  73                 	db	115	;'s'
  2494  00EE62  61                 	db	97	;'a'
  2495  00EE63  67                 	db	103	;'g'
  2496  00EE64  65                 	db	101	;'e'
  2497  00EE65  2C                 	db	44
  2498  00EE66  20                 	db	32
  2499  00EE67  74                 	db	116	;'t'
  2500  00EE68  79                 	db	121	;'y'
  2501  00EE69  70                 	db	112	;'p'
  2502  00EE6A  65                 	db	101	;'e'
  2503  00EE6B  20                 	db	32
  2504  00EE6C  27                 	db	39
  2505  00EE6D  48                 	db	72	;'H'
  2506  00EE6E  65                 	db	101	;'e'
  2507  00EE6F  6C                 	db	108	;'l'
  2508  00EE70  70                 	db	112	;'p'
  2509  00EE71  27                 	db	39
  2510  00EE72  20                 	db	32
  2511  00EE73  66                 	db	102	;'f'
  2512  00EE74  6F                 	db	111	;'o'
  2513  00EE75  72                 	db	114	;'r'
  2514  00EE76  20                 	db	32
  2515  00EE77  6C                 	db	108	;'l'
  2516  00EE78  69                 	db	105	;'i'
  2517  00EE79  73                 	db	115	;'s'
  2518  00EE7A  74                 	db	116	;'t'
  2519  00EE7B  20                 	db	32
  2520  00EE7C  6F                 	db	111	;'o'
  2521  00EE7D  66                 	db	102	;'f'
  2522  00EE7E  20                 	db	32
  2523  00EE7F  63                 	db	99	;'c'
  2524  00EE80  6F                 	db	111	;'o'
  2525  00EE81  6D                 	db	109	;'m'
  2526  00EE82  6D                 	db	109	;'m'
  2527  00EE83  61                 	db	97	;'a'
  2528  00EE84  6E                 	db	110	;'n'
  2529  00EE85  64                 	db	100	;'d'
  2530  00EE86  73                 	db	115	;'s'
  2531  00EE87  0A                 	db	10
  2532  00EE88  0D                 	db	13
  2533  00EE89  0A                 	db	10
  2534  00EE8A  0D                 	db	13
  2535  00EE8B  00                 	db	0
  2536  00EE8C                     STR_206:
  2537  00EE8C  20                 	db	32
  2538  00EE8D  20                 	db	32
  2539  00EE8E  20                 	db	32
  2540  00EE8F  20                 	db	32
  2541  00EE90  20                 	db	32
  2542  00EE91  20                 	db	32
  2543  00EE92  20                 	db	32
  2544  00EE93  20                 	db	32
  2545  00EE94  55                 	db	85	;'U'
  2546  00EE95  73                 	db	115	;'s'
  2547  00EE96  65                 	db	101	;'e'
  2548  00EE97  72                 	db	114	;'r'
  2549  00EE98  20                 	db	32
  2550  00EE99  49                 	db	73	;'I'
  2551  00EE9A  44                 	db	68	;'D'
  2552  00EE9B  20                 	db	32
  2553  00EE9C  57                 	db	87	;'W'
  2554  00EE9D  6F                 	db	111	;'o'
  2555  00EE9E  72                 	db	114	;'r'
  2556  00EE9F  64                 	db	100	;'d'
  2557  00EEA0  20                 	db	32
  2558  00EEA1  25                 	db	37
  2559  00EEA2  64                 	db	100	;'d'
  2560  00EEA3  20                 	db	32
  2561  00EEA4  28                 	db	40
  2562  00EEA5  46                 	db	70	;'F'
  2563  00EEA6  6C                 	db	108	;'l'
  2564  00EEA7  61                 	db	97	;'a'
  2565  00EEA8  73                 	db	115	;'s'
  2566  00EEA9  68                 	db	104	;'h'
  2567  00EEAA  20                 	db	32
  2568  00EEAB  61                 	db	97	;'a'
  2569  00EEAC  64                 	db	100	;'d'
  2570  00EEAD  64                 	db	100	;'d'
  2571  00EEAE  72                 	db	114	;'r'
  2572  00EEAF  65                 	db	101	;'e'
  2573  00EEB0  73                 	db	115	;'s'
  2574  00EEB1  73                 	db	115	;'s'
  2575  00EEB2  20                 	db	32
  2576  00EEB3  30                 	db	48	;'0'
  2577  00EEB4  78                 	db	120	;'x'
  2578  00EEB5  32                 	db	50	;'2'
  2579  00EEB6  30                 	db	48	;'0'
  2580  00EEB7  30                 	db	48	;'0'
  2581  00EEB8  30                 	db	48	;'0'
  2582  00EEB9  30                 	db	48	;'0'
  2583  00EEBA  25                 	db	37
  2584  00EEBB  58                 	db	88	;'X'
  2585  00EEBC  29                 	db	41
  2586  00EEBD  3A                 	db	58	;':'
  2587  00EEBE  20                 	db	32
  2588  00EEBF  30                 	db	48	;'0'
  2589  00EEC0  78                 	db	120	;'x'
  2590  00EEC1  25                 	db	37
  2591  00EEC2  30                 	db	48	;'0'
  2592  00EEC3  34                 	db	52	;'4'
  2593  00EEC4  58                 	db	88	;'X'
  2594  00EEC5  0A                 	db	10
  2595  00EEC6  0D                 	db	13
  2596  00EEC7  00                 	db	0
  2597  00EEC8                     STR_273:
  2598  00EEC8  20                 	db	32
  2599  00EEC9  20                 	db	32
  2600  00EECA  20                 	db	32
  2601  00EECB  20                 	db	32
  2602  00EECC  45                 	db	69	;'E'
  2603  00EECD  6E                 	db	110	;'n'
  2604  00EECE  65                 	db	101	;'e'
  2605  00EECF  72                 	db	114	;'r'
  2606  00EED0  67                 	db	103	;'g'
  2607  00EED1  79                 	db	121	;'y'
  2608  00EED2  20                 	db	32
  2609  00EED3  63                 	db	99	;'c'
  2610  00EED4  6F                 	db	111	;'o'
  2611  00EED5  6E                 	db	110	;'n'
  2612  00EED6  73                 	db	115	;'s'
  2613  00EED7  75                 	db	117	;'u'
  2614  00EED8  6D                 	db	109	;'m'
  2615  00EED9  65                 	db	101	;'e'
  2616  00EEDA  64                 	db	100	;'d'
  2617  00EEDB  20                 	db	32
  2618  00EEDC  62                 	db	98	;'b'
  2619  00EEDD  79                 	db	121	;'y'
  2620  00EEDE  20                 	db	32
  2621  00EEDF  74                 	db	116	;'t'
  2622  00EEE0  68                 	db	104	;'h'
  2623  00EEE1  65                 	db	101	;'e'
  2624  00EEE2  20                 	db	32
  2625  00EEE3  6C                 	db	108	;'l'
  2626  00EEE4  6F                 	db	111	;'o'
  2627  00EEE5  61                 	db	97	;'a'
  2628  00EEE6  64                 	db	100	;'d'
  2629  00EEE7  20                 	db	32
  2630  00EEE8  77                 	db	119	;'w'
  2631  00EEE9  68                 	db	104	;'h'
  2632  00EEEA  69                 	db	105	;'i'
  2633  00EEEB  6C                 	db	108	;'l'
  2634  00EEEC  65                 	db	101	;'e'
  2635  00EEED  20                 	db	32
  2636  00EEEE  63                 	db	99	;'c'
  2637  00EEEF  68                 	db	104	;'h'
  2638  00EEF0  61                 	db	97	;'a'
  2639  00EEF1  72                 	db	114	;'r'
  2640  00EEF2  67                 	db	103	;'g'
  2641  00EEF3  69                 	db	105	;'i'
  2642  00EEF4  6E                 	db	110	;'n'
  2643  00EEF5  67                 	db	103	;'g'
  2644  00EEF6  3A                 	db	58	;':'
  2645  00EEF7  20                 	db	32
  2646  00EEF8  25                 	db	37
  2647  00EEF9  73                 	db	115	;'s'
  2648  00EEFA  4A                 	db	74	;'J'
  2649  00EEFB  6F                 	db	111	;'o'
  2650  00EEFC  75                 	db	117	;'u'
  2651  00EEFD  6C                 	db	108	;'l'
  2652  00EEFE  65                 	db	101	;'e'
  2653  00EEFF  73                 	db	115	;'s'
  2654  00EF00  0A                 	db	10
  2655  00EF01  0D                 	db	13
  2656  00EF02  00                 	db	0
  2657  00EF03                     STR_268:
  2658  00EF03  20                 	db	32
  2659  00EF04  20                 	db	32
  2660  00EF05  20                 	db	32
  2661  00EF06  20                 	db	32
  2662  00EF07  20                 	db	32
  2663  00EF08  20                 	db	32
  2664  00EF09  20                 	db	32
  2665  00EF0A  20                 	db	32
  2666  00EF0B  45                 	db	69	;'E'
  2667  00EF0C  6C                 	db	108	;'l'
  2668  00EF0D  65                 	db	101	;'e'
  2669  00EF0E  63                 	db	99	;'c'
  2670  00EF0F  74                 	db	116	;'t'
  2671  00EF10  72                 	db	114	;'r'
  2672  00EF11  69                 	db	105	;'i'
  2673  00EF12  63                 	db	99	;'c'
  2674  00EF13  61                 	db	97	;'a'
  2675  00EF14  6C                 	db	108	;'l'
  2676  00EF15  20                 	db	32
  2677  00EF16  49                 	db	73	;'I'
  2678  00EF17  6E                 	db	110	;'n'
  2679  00EF18  70                 	db	112	;'p'
  2680  00EF19  75                 	db	117	;'u'
  2681  00EF1A  74                 	db	116	;'t'
  2682  00EF1B  20                 	db	32
  2683  00EF1C  50                 	db	80	;'P'
  2684  00EF1D  6F                 	db	111	;'o'
  2685  00EF1E  77                 	db	119	;'w'
  2686  00EF1F  65                 	db	101	;'e'
  2687  00EF20  72                 	db	114	;'r'
  2688  00EF21  20                 	db	32
  2689  00EF22  63                 	db	99	;'c'
  2690  00EF23  61                 	db	97	;'a'
  2691  00EF24  6C                 	db	108	;'l'
  2692  00EF25  63                 	db	99	;'c'
  2693  00EF26  75                 	db	117	;'u'
  2694  00EF27  6C                 	db	108	;'l'
  2695  00EF28  61                 	db	97	;'a'
  2696  00EF29  74                 	db	116	;'t'
  2697  00EF2A  65                 	db	101	;'e'
  2698  00EF2B  64                 	db	100	;'d'
  2699  00EF2C  20                 	db	32
  2700  00EF2D  61                 	db	97	;'a'
  2701  00EF2E  73                 	db	115	;'s'
  2702  00EF2F  20                 	db	32
  2703  00EF30  25                 	db	37
  2704  00EF31  2B                 	db	43
  2705  00EF32  2E                 	db	46
  2706  00EF33  33                 	db	51	;'3'
  2707  00EF34  66                 	db	102	;'f'
  2708  00EF35  20                 	db	32
  2709  00EF36  57                 	db	87	;'W'
  2710  00EF37  61                 	db	97	;'a'
  2711  00EF38  74                 	db	116	;'t'
  2712  00EF39  74                 	db	116	;'t'
  2713  00EF3A  73                 	db	115	;'s'
  2714  00EF3B  0A                 	db	10
  2715  00EF3C  0D                 	db	13
  2716  00EF3D  00                 	db	0
  2717  00EF3E                     STR_255:
  2718  00EF3E  20                 	db	32
  2719  00EF3F  20                 	db	32
  2720  00EF40  20                 	db	32
  2721  00EF41  20                 	db	32
  2722  00EF42  51                 	db	81	;'Q'
  2723  00EF43  49                 	db	73	;'I'
  2724  00EF44  20                 	db	32
  2725  00EF45  77                 	db	119	;'w'
  2726  00EF46  69                 	db	105	;'i'
  2727  00EF47  72                 	db	114	;'r'
  2728  00EF48  65                 	db	101	;'e'
  2729  00EF49  6C                 	db	108	;'l'
  2730  00EF4A  65                 	db	101	;'e'
  2731  00EF4B  73                 	db	115	;'s'
  2732  00EF4C  73                 	db	115	;'s'
  2733  00EF4D  20                 	db	32
  2734  00EF4E  70                 	db	112	;'p'
  2735  00EF4F  6F                 	db	111	;'o'
  2736  00EF50  77                 	db	119	;'w'
  2737  00EF51  65                 	db	101	;'e'
  2738  00EF52  72                 	db	114	;'r'
  2739  00EF53  20                 	db	32
  2740  00EF54  63                 	db	99	;'c'
  2741  00EF55  6F                 	db	111	;'o'
  2742  00EF56  6E                 	db	110	;'n'
  2743  00EF57  76                 	db	118	;'v'
  2744  00EF58  65                 	db	101	;'e'
  2745  00EF59  72                 	db	114	;'r'
  2746  00EF5A  74                 	db	116	;'t'
  2747  00EF5B  65                 	db	101	;'e'
  2748  00EF5C  72                 	db	114	;'r'
  2749  00EF5D  20                 	db	32
  2750  00EF5E  68                 	db	104	;'h'
  2751  00EF5F  61                 	db	97	;'a'
  2752  00EF60  73                 	db	115	;'s'
  2753  00EF61  20                 	db	32
  2754  00EF62  66                 	db	102	;'f'
  2755  00EF63  75                 	db	117	;'u'
  2756  00EF64  6C                 	db	108	;'l'
  2757  00EF65  6C                 	db	108	;'l'
  2758  00EF66  79                 	db	121	;'y'
  2759  00EF67  20                 	db	32
  2760  00EF68  63                 	db	99	;'c'
  2761  00EF69  68                 	db	104	;'h'
  2762  00EF6A  61                 	db	97	;'a'
  2763  00EF6B  72                 	db	114	;'r'
  2764  00EF6C  67                 	db	103	;'g'
  2765  00EF6D  65                 	db	101	;'e'
  2766  00EF6E  64                 	db	100	;'d'
  2767  00EF6F  20                 	db	32
  2768  00EF70  70                 	db	112	;'p'
  2769  00EF71  68                 	db	104	;'h'
  2770  00EF72  6F                 	db	111	;'o'
  2771  00EF73  6E                 	db	110	;'n'
  2772  00EF74  65                 	db	101	;'e'
  2773  00EF75  0A                 	db	10
  2774  00EF76  0D                 	db	13
  2775  00EF77  00                 	db	0
  2776  00EF78                     STR_269:
  2777  00EF78  20                 	db	32
  2778  00EF79  20                 	db	32
  2779  00EF7A  20                 	db	32
  2780  00EF7B  20                 	db	32
  2781  00EF7C  20                 	db	32
  2782  00EF7D  20                 	db	32
  2783  00EF7E  20                 	db	32
  2784  00EF7F  20                 	db	32
  2785  00EF80  57                 	db	87	;'W'
  2786  00EF81  69                 	db	105	;'i'
  2787  00EF82  72                 	db	114	;'r'
  2788  00EF83  65                 	db	101	;'e'
  2789  00EF84  6C                 	db	108	;'l'
  2790  00EF85  65                 	db	101	;'e'
  2791  00EF86  73                 	db	115	;'s'
  2792  00EF87  73                 	db	115	;'s'
  2793  00EF88  20                 	db	32
  2794  00EF89  4F                 	db	79	;'O'
  2795  00EF8A  75                 	db	117	;'u'
  2796  00EF8B  74                 	db	116	;'t'
  2797  00EF8C  70                 	db	112	;'p'
  2798  00EF8D  75                 	db	117	;'u'
  2799  00EF8E  74                 	db	116	;'t'
  2800  00EF8F  20                 	db	32
  2801  00EF90  50                 	db	80	;'P'
  2802  00EF91  6F                 	db	111	;'o'
  2803  00EF92  77                 	db	119	;'w'
  2804  00EF93  65                 	db	101	;'e'
  2805  00EF94  72                 	db	114	;'r'
  2806  00EF95  20                 	db	32
  2807  00EF96  63                 	db	99	;'c'
  2808  00EF97  61                 	db	97	;'a'
  2809  00EF98  6C                 	db	108	;'l'
  2810  00EF99  63                 	db	99	;'c'
  2811  00EF9A  75                 	db	117	;'u'
  2812  00EF9B  6C                 	db	108	;'l'
  2813  00EF9C  61                 	db	97	;'a'
  2814  00EF9D  74                 	db	116	;'t'
  2815  00EF9E  65                 	db	101	;'e'
  2816  00EF9F  64                 	db	100	;'d'
  2817  00EFA0  20                 	db	32
  2818  00EFA1  61                 	db	97	;'a'
  2819  00EFA2  73                 	db	115	;'s'
  2820  00EFA3  20                 	db	32
  2821  00EFA4  25                 	db	37
  2822  00EFA5  2B                 	db	43
  2823  00EFA6  2E                 	db	46
  2824  00EFA7  33                 	db	51	;'3'
  2825  00EFA8  66                 	db	102	;'f'
  2826  00EFA9  20                 	db	32
  2827  00EFAA  57                 	db	87	;'W'
  2828  00EFAB  61                 	db	97	;'a'
  2829  00EFAC  74                 	db	116	;'t'
  2830  00EFAD  74                 	db	116	;'t'
  2831  00EFAE  73                 	db	115	;'s'
  2832  00EFAF  0A                 	db	10
  2833  00EFB0  0D                 	db	13
  2834  00EFB1  00                 	db	0
  2835  00EFB2                     STR_281:
  2836  00EFB2  20                 	db	32
  2837  00EFB3  20                 	db	32
  2838  00EFB4  20                 	db	32
  2839  00EFB5  20                 	db	32
  2840  00EFB6  20                 	db	32
  2841  00EFB7  20                 	db	32
  2842  00EFB8  20                 	db	32
  2843  00EFB9  20                 	db	32
  2844  00EFBA  43                 	db	67	;'C'
  2845  00EFBB  75                 	db	117	;'u'
  2846  00EFBC  72                 	db	114	;'r'
  2847  00EFBD  72                 	db	114	;'r'
  2848  00EFBE  65                 	db	101	;'e'
  2849  00EFBF  6E                 	db	110	;'n'
  2850  00EFC0  74                 	db	116	;'t'
  2851  00EFC1  20                 	db	32
  2852  00EFC2  51                 	db	81	;'Q'
  2853  00EFC3  49                 	db	73	;'I'
  2854  00EFC4  20                 	db	32
  2855  00EFC5  53                 	db	83	;'S'
  2856  00EFC6  77                 	db	119	;'w'
  2857  00EFC7  69                 	db	105	;'i'
  2858  00EFC8  74                 	db	116	;'t'
  2859  00EFC9  63                 	db	99	;'c'
  2860  00EFCA  68                 	db	104	;'h'
  2861  00EFCB  69                 	db	105	;'i'
  2862  00EFCC  6E                 	db	110	;'n'
  2863  00EFCD  67                 	db	103	;'g'
  2864  00EFCE  20                 	db	32
  2865  00EFCF  46                 	db	70	;'F'
  2866  00EFD0  72                 	db	114	;'r'
  2867  00EFD1  65                 	db	101	;'e'
  2868  00EFD2  71                 	db	113	;'q'
  2869  00EFD3  75                 	db	117	;'u'
  2870  00EFD4  65                 	db	101	;'e'
  2871  00EFD5  6E                 	db	110	;'n'
  2872  00EFD6  63                 	db	99	;'c'
  2873  00EFD7  79                 	db	121	;'y'
  2874  00EFD8  20                 	db	32
  2875  00EFD9  6D                 	db	109	;'m'
  2876  00EFDA  65                 	db	101	;'e'
  2877  00EFDB  61                 	db	97	;'a'
  2878  00EFDC  73                 	db	115	;'s'
  2879  00EFDD  75                 	db	117	;'u'
  2880  00EFDE  72                 	db	114	;'r'
  2881  00EFDF  65                 	db	101	;'e'
  2882  00EFE0  64                 	db	100	;'d'
  2883  00EFE1  20                 	db	32
  2884  00EFE2  61                 	db	97	;'a'
  2885  00EFE3  73                 	db	115	;'s'
  2886  00EFE4  20                 	db	32
  2887  00EFE5  25                 	db	37
  2888  00EFE6  73                 	db	115	;'s'
  2889  00EFE7  48                 	db	72	;'H'
  2890  00EFE8  7A                 	db	122	;'z'
  2891  00EFE9  0A                 	db	10
  2892  00EFEA  0D                 	db	13
  2893  00EFEB  00                 	db	0
  2894  00EFEC                     STR_5:
  2895  00EFEC  0A                 	db	10
  2896  00EFED  0D                 	db	13
  2897  00EFEE  48                 	db	72	;'H'
  2898  00EFEF  65                 	db	101	;'e'
  2899  00EFF0  6C                 	db	108	;'l'
  2900  00EFF1  70                 	db	112	;'p'
  2901  00EFF2  20                 	db	32
  2902  00EFF3  6D                 	db	109	;'m'
  2903  00EFF4  65                 	db	101	;'e'
  2904  00EFF5  73                 	db	115	;'s'
  2905  00EFF6  73                 	db	115	;'s'
  2906  00EFF7  61                 	db	97	;'a'
  2907  00EFF8  67                 	db	103	;'g'
  2908  00EFF9  65                 	db	101	;'e'
  2909  00EFFA  73                 	db	115	;'s'
  2910  00EFFB  20                 	db	32
  2911  00EFFC  61                 	db	97	;'a'
  2912  00EFFD  6E                 	db	110	;'n'
  2913  00EFFE  64                 	db	100	;'d'
  2914  00EFFF  20                 	db	32
  2915  00F000  6E                 	db	110	;'n'
  2916  00F001  65                 	db	101	;'e'
  2917  00F002  75                 	db	117	;'u'
  2918  00F003  74                 	db	116	;'t'
  2919  00F004  72                 	db	114	;'r'
  2920  00F005  61                 	db	97	;'a'
  2921  00F006  6C                 	db	108	;'l'
  2922  00F007  20                 	db	32
  2923  00F008  72                 	db	114	;'r'
  2924  00F009  65                 	db	101	;'e'
  2925  00F00A  73                 	db	115	;'s'
  2926  00F00B  70                 	db	112	;'p'
  2927  00F00C  6F                 	db	111	;'o'
  2928  00F00D  6E                 	db	110	;'n'
  2929  00F00E  73                 	db	115	;'s'
  2930  00F00F  65                 	db	101	;'e'
  2931  00F010  73                 	db	115	;'s'
  2932  00F011  20                 	db	32
  2933  00F012  61                 	db	97	;'a'
  2934  00F013  70                 	db	112	;'p'
  2935  00F014  70                 	db	112	;'p'
  2936  00F015  65                 	db	101	;'e'
  2937  00F016  61                 	db	97	;'a'
  2938  00F017  72                 	db	114	;'r'
  2939  00F018  20                 	db	32
  2940  00F019  69                 	db	105	;'i'
  2941  00F01A  6E                 	db	110	;'n'
  2942  00F01B  20                 	db	32
  2943  00F01C  79                 	db	121	;'y'
  2944  00F01D  65                 	db	101	;'e'
  2945  00F01E  6C                 	db	108	;'l'
  2946  00F01F  6C                 	db	108	;'l'
  2947  00F020  6F                 	db	111	;'o'
  2948  00F021  77                 	db	119	;'w'
  2949  00F022  0A                 	db	10
  2950  00F023  0D                 	db	13
  2951  00F024  00                 	db	0
  2952  00F025                     STR_285:
  2953  00F025  20                 	db	32
  2954  00F026  20                 	db	32
  2955  00F027  20                 	db	32
  2956  00F028  20                 	db	32
  2957  00F029  20                 	db	32
  2958  00F02A  20                 	db	32
  2959  00F02B  20                 	db	32
  2960  00F02C  20                 	db	32
  2961  00F02D  2B                 	db	43
  2962  00F02E  35                 	db	53	;'5'
  2963  00F02F  56                 	db	86	;'V'
  2964  00F030  20                 	db	32
  2965  00F031  43                 	db	67	;'C'
  2966  00F032  6F                 	db	111	;'o'
  2967  00F033  6E                 	db	110	;'n'
  2968  00F034  76                 	db	118	;'v'
  2969  00F035  65                 	db	101	;'e'
  2970  00F036  72                 	db	114	;'r'
  2971  00F037  74                 	db	116	;'t'
  2972  00F038  65                 	db	101	;'e'
  2973  00F039  72                 	db	114	;'r'
  2974  00F03A  20                 	db	32
  2975  00F03B  54                 	db	84	;'T'
  2976  00F03C  65                 	db	101	;'e'
  2977  00F03D  6D                 	db	109	;'m'
  2978  00F03E  70                 	db	112	;'p'
  2979  00F03F  65                 	db	101	;'e'
  2980  00F040  72                 	db	114	;'r'
  2981  00F041  61                 	db	97	;'a'
  2982  00F042  74                 	db	116	;'t'
  2983  00F043  75                 	db	117	;'u'
  2984  00F044  72                 	db	114	;'r'
  2985  00F045  65                 	db	101	;'e'
  2986  00F046  20                 	db	32
  2987  00F047  6D                 	db	109	;'m'
  2988  00F048  65                 	db	101	;'e'
  2989  00F049  61                 	db	97	;'a'
  2990  00F04A  73                 	db	115	;'s'
  2991  00F04B  75                 	db	117	;'u'
  2992  00F04C  72                 	db	114	;'r'
  2993  00F04D  65                 	db	101	;'e'
  2994  00F04E  64                 	db	100	;'d'
  2995  00F04F  20                 	db	32
  2996  00F050  61                 	db	97	;'a'
  2997  00F051  73                 	db	115	;'s'
  2998  00F052  20                 	db	32
  2999  00F053  25                 	db	37
  3000  00F054  2B                 	db	43
  3001  00F055  2E                 	db	46
  3002  00F056  33                 	db	51	;'3'
  3003  00F057  66                 	db	102	;'f'
  3004  00F058  20                 	db	32
  3005  00F059  43                 	db	67	;'C'
  3006  00F05A  0A                 	db	10
  3007  00F05B  0D                 	db	13
  3008  00F05C  00                 	db	0
  3009  00F05D                     STR_208:
  3010  00F05D  20                 	db	32
  3011  00F05E  20                 	db	32
  3012  00F05F  20                 	db	32
  3013  00F060  20                 	db	32
  3014  00F061  54                 	db	84	;'T'
  3015  00F062  68                 	db	104	;'h'
  3016  00F063  65                 	db	101	;'e'
  3017  00F064  20                 	db	32
  3018  00F065  63                 	db	99	;'c'
  3019  00F066  61                 	db	97	;'a'
  3020  00F067  75                 	db	117	;'u'
  3021  00F068  73                 	db	115	;'s'
  3022  00F069  65                 	db	101	;'e'
  3023  00F06A  20                 	db	32
  3024  00F06B  6F                 	db	111	;'o'
  3025  00F06C  66                 	db	102	;'f'
  3026  00F06D  20                 	db	32
  3027  00F06E  74                 	db	116	;'t'
  3028  00F06F  68                 	db	104	;'h'
  3029  00F070  65                 	db	101	;'e'
  3030  00F071  20                 	db	32
  3031  00F072  6D                 	db	109	;'m'
  3032  00F073  6F                 	db	111	;'o'
  3033  00F074  73                 	db	115	;'s'
  3034  00F075  74                 	db	116	;'t'
  3035  00F076  20                 	db	32
  3036  00F077  72                 	db	114	;'r'
  3037  00F078  65                 	db	101	;'e'
  3038  00F079  63                 	db	99	;'c'
  3039  00F07A  65                 	db	101	;'e'
  3040  00F07B  6E                 	db	110	;'n'
  3041  00F07C  74                 	db	116	;'t'
  3042  00F07D  20                 	db	32
  3043  00F07E  64                 	db	100	;'d'
  3044  00F07F  65                 	db	101	;'e'
  3045  00F080  76                 	db	118	;'v'
  3046  00F081  69                 	db	105	;'i'
  3047  00F082  63                 	db	99	;'c'
  3048  00F083  65                 	db	101	;'e'
  3049  00F084  20                 	db	32
  3050  00F085  72                 	db	114	;'r'
  3051  00F086  65                 	db	101	;'e'
  3052  00F087  73                 	db	115	;'s'
  3053  00F088  65                 	db	101	;'e'
  3054  00F089  74                 	db	116	;'t'
  3055  00F08A  20                 	db	32
  3056  00F08B  77                 	db	119	;'w'
  3057  00F08C  61                 	db	97	;'a'
  3058  00F08D  73                 	db	115	;'s'
  3059  00F08E  3A                 	db	58	;':'
  3060  00F08F  20                 	db	32
  3061  00F090  25                 	db	37
  3062  00F091  73                 	db	115	;'s'
  3063  00F092  0A                 	db	10
  3064  00F093  0D                 	db	13
  3065  00F094  00                 	db	0
  3066  00F095                     STR_284:
  3067  00F095  20                 	db	32
  3068  00F096  20                 	db	32
  3069  00F097  20                 	db	32
  3070  00F098  20                 	db	32
  3071  00F099  20                 	db	32
  3072  00F09A  20                 	db	32
  3073  00F09B  20                 	db	32
  3074  00F09C  20                 	db	32
  3075  00F09D  51                 	db	81	;'Q'
  3076  00F09E  49                 	db	73	;'I'
  3077  00F09F  20                 	db	32
  3078  00F0A0  43                 	db	67	;'C'
  3079  00F0A1  6F                 	db	111	;'o'
  3080  00F0A2  6E                 	db	110	;'n'
  3081  00F0A3  76                 	db	118	;'v'
  3082  00F0A4  65                 	db	101	;'e'
  3083  00F0A5  72                 	db	114	;'r'
  3084  00F0A6  74                 	db	116	;'t'
  3085  00F0A7  65                 	db	101	;'e'
  3086  00F0A8  72                 	db	114	;'r'
  3087  00F0A9  20                 	db	32
  3088  00F0AA  54                 	db	84	;'T'
  3089  00F0AB  65                 	db	101	;'e'
  3090  00F0AC  6D                 	db	109	;'m'
  3091  00F0AD  70                 	db	112	;'p'
  3092  00F0AE  65                 	db	101	;'e'
  3093  00F0AF  72                 	db	114	;'r'
  3094  00F0B0  61                 	db	97	;'a'
  3095  00F0B1  74                 	db	116	;'t'
  3096  00F0B2  75                 	db	117	;'u'
  3097  00F0B3  72                 	db	114	;'r'
  3098  00F0B4  65                 	db	101	;'e'
  3099  00F0B5  20                 	db	32
  3100  00F0B6  6D                 	db	109	;'m'
  3101  00F0B7  65                 	db	101	;'e'
  3102  00F0B8  61                 	db	97	;'a'
  3103  00F0B9  73                 	db	115	;'s'
  3104  00F0BA  75                 	db	117	;'u'
  3105  00F0BB  72                 	db	114	;'r'
  3106  00F0BC  65                 	db	101	;'e'
  3107  00F0BD  64                 	db	100	;'d'
  3108  00F0BE  20                 	db	32
  3109  00F0BF  61                 	db	97	;'a'
  3110  00F0C0  73                 	db	115	;'s'
  3111  00F0C1  20                 	db	32
  3112  00F0C2  25                 	db	37
  3113  00F0C3  2B                 	db	43
  3114  00F0C4  2E                 	db	46
  3115  00F0C5  33                 	db	51	;'3'
  3116  00F0C6  66                 	db	102	;'f'
  3117  00F0C7  20                 	db	32
  3118  00F0C8  43                 	db	67	;'C'
  3119  00F0C9  0A                 	db	10
  3120  00F0CA  0D                 	db	13
  3121  00F0CB  00                 	db	0
  3122  00F0CC                     STR_196:
  3123  00F0CC  51                 	db	81	;'Q'
  3124  00F0CD  49                 	db	73	;'I'
  3125  00F0CE  20                 	db	32
  3126  00F0CF  43                 	db	67	;'C'
  3127  00F0D0  68                 	db	104	;'h'
  3128  00F0D1  61                 	db	97	;'a'
  3129  00F0D2  72                 	db	114	;'r'
  3130  00F0D3  67                 	db	103	;'g'
  3131  00F0D4  65                 	db	101	;'e'
  3132  00F0D5  72                 	db	114	;'r'
  3133  00F0D6  20                 	db	32
  3134  00F0D7  77                 	db	119	;'w'
  3135  00F0D8  69                 	db	105	;'i'
  3136  00F0D9  74                 	db	116	;'t'
  3137  00F0DA  68                 	db	104	;'h'
  3138  00F0DB  20                 	db	32
  3139  00F0DC  44                 	db	68	;'D'
  3140  00F0DD  69                 	db	105	;'i'
  3141  00F0DE  67                 	db	103	;'g'
  3142  00F0DF  69                 	db	105	;'i'
  3143  00F0E0  74                 	db	116	;'t'
  3144  00F0E1  61                 	db	97	;'a'
  3145  00F0E2  6C                 	db	108	;'l'
  3146  00F0E3  20                 	db	32
  3147  00F0E4  4D                 	db	77	;'M'
  3148  00F0E5  6F                 	db	111	;'o'
  3149  00F0E6  6E                 	db	110	;'n'
  3150  00F0E7  69                 	db	105	;'i'
  3151  00F0E8  74                 	db	116	;'t'
  3152  00F0E9  6F                 	db	111	;'o'
  3153  00F0EA  72                 	db	114	;'r'
  3154  00F0EB  69                 	db	105	;'i'
  3155  00F0EC  6E                 	db	110	;'n'
  3156  00F0ED  67                 	db	103	;'g'
  3157  00F0EE  2C                 	db	44
  3158  00F0EF  20                 	db	32
  3159  00F0F0  62                 	db	98	;'b'
  3160  00F0F1  79                 	db	121	;'y'
  3161  00F0F2  20                 	db	32
  3162  00F0F3  44                 	db	68	;'D'
  3163  00F0F4  72                 	db	114	;'r'
  3164  00F0F5  65                 	db	101	;'e'
  3165  00F0F6  77                 	db	119	;'w'
  3166  00F0F7  20                 	db	32
  3167  00F0F8  4D                 	db	77	;'M'
  3168  00F0F9  61                 	db	97	;'a'
  3169  00F0FA  61                 	db	97	;'a'
  3170  00F0FB  74                 	db	116	;'t'
  3171  00F0FC  6D                 	db	109	;'m'
  3172  00F0FD  61                 	db	97	;'a'
  3173  00F0FE  6E                 	db	110	;'n'
  3174  00F0FF  0A                 	db	10
  3175  00F100  0D                 	db	13
  3176  00F101  00                 	db	0
  3177  00F102                     STR_210:
  3178  00F102  20                 	db	32
  3179  00F103  20                 	db	32
  3180  00F104  20                 	db	32
  3181  00F105  20                 	db	32
  3182  00F106  44                 	db	68	;'D'
  3183  00F107  65                 	db	101	;'e'
  3184  00F108  76                 	db	118	;'v'
  3185  00F109  69                 	db	105	;'i'
  3186  00F10A  63                 	db	99	;'c'
  3187  00F10B  65                 	db	101	;'e'
  3188  00F10C  20                 	db	32
  3189  00F10D  6F                 	db	111	;'o'
  3190  00F10E  6E                 	db	110	;'n'
  3191  00F10F  20                 	db	32
  3192  00F110  74                 	db	116	;'t'
  3193  00F111  69                 	db	105	;'i'
  3194  00F112  6D                 	db	109	;'m'
  3195  00F113  65                 	db	101	;'e'
  3196  00F114  20                 	db	32
  3197  00F115  73                 	db	115	;'s'
  3198  00F116  69                 	db	105	;'i'
  3199  00F117  6E                 	db	110	;'n'
  3200  00F118  63                 	db	99	;'c'
  3201  00F119  65                 	db	101	;'e'
  3202  00F11A  20                 	db	32
  3203  00F11B  6C                 	db	108	;'l'
  3204  00F11C  61                 	db	97	;'a'
  3205  00F11D  73                 	db	115	;'s'
  3206  00F11E  74                 	db	116	;'t'
  3207  00F11F  20                 	db	32
  3208  00F120  72                 	db	114	;'r'
  3209  00F121  65                 	db	101	;'e'
  3210  00F122  73                 	db	115	;'s'
  3211  00F123  65                 	db	101	;'e'
  3212  00F124  74                 	db	116	;'t'
  3213  00F125  20                 	db	32
  3214  00F126  63                 	db	99	;'c'
  3215  00F127  6F                 	db	111	;'o'
  3216  00F128  6E                 	db	110	;'n'
  3217  00F129  64                 	db	100	;'d'
  3218  00F12A  69                 	db	105	;'i'
  3219  00F12B  74                 	db	116	;'t'
  3220  00F12C  69                 	db	105	;'i'
  3221  00F12D  6F                 	db	111	;'o'
  3222  00F12E  6E                 	db	110	;'n'
  3223  00F12F  20                 	db	32
  3224  00F130  69                 	db	105	;'i'
  3225  00F131  73                 	db	115	;'s'
  3226  00F132  20                 	db	32
  3227  00F133  25                 	db	37
  3228  00F134  73                 	db	115	;'s'
  3229  00F135  0A                 	db	10
  3230  00F136  0D                 	db	13
  3231  00F137  00                 	db	0
  3232  00F138                     STR_265:
  3233  00F138  20                 	db	32
  3234  00F139  20                 	db	32
  3235  00F13A  20                 	db	32
  3236  00F13B  20                 	db	32
  3237  00F13C  20                 	db	32
  3238  00F13D  20                 	db	32
  3239  00F13E  20                 	db	32
  3240  00F13F  20                 	db	32
  3241  00F140  51                 	db	81	;'Q'
  3242  00F141  49                 	db	73	;'I'
  3243  00F142  20                 	db	32
  3244  00F143  63                 	db	99	;'c'
  3245  00F144  6F                 	db	111	;'o'
  3246  00F145  6E                 	db	110	;'n'
  3247  00F146  76                 	db	118	;'v'
  3248  00F147  65                 	db	101	;'e'
  3249  00F148  72                 	db	114	;'r'
  3250  00F149  74                 	db	116	;'t'
  3251  00F14A  65                 	db	101	;'e'
  3252  00F14B  72                 	db	114	;'r'
  3253  00F14C  20                 	db	32
  3254  00F14D  63                 	db	99	;'c'
  3255  00F14E  75                 	db	117	;'u'
  3256  00F14F  72                 	db	114	;'r'
  3257  00F150  72                 	db	114	;'r'
  3258  00F151  65                 	db	101	;'e'
  3259  00F152  6E                 	db	110	;'n'
  3260  00F153  74                 	db	116	;'t'
  3261  00F154  20                 	db	32
  3262  00F155  6D                 	db	109	;'m'
  3263  00F156  65                 	db	101	;'e'
  3264  00F157  61                 	db	97	;'a'
  3265  00F158  73                 	db	115	;'s'
  3266  00F159  75                 	db	117	;'u'
  3267  00F15A  72                 	db	114	;'r'
  3268  00F15B  65                 	db	101	;'e'
  3269  00F15C  64                 	db	100	;'d'
  3270  00F15D  20                 	db	32
  3271  00F15E  61                 	db	97	;'a'
  3272  00F15F  73                 	db	115	;'s'
  3273  00F160  20                 	db	32
  3274  00F161  25                 	db	37
  3275  00F162  2B                 	db	43
  3276  00F163  2E                 	db	46
  3277  00F164  33                 	db	51	;'3'
  3278  00F165  66                 	db	102	;'f'
  3279  00F166  20                 	db	32
  3280  00F167  41                 	db	65	;'A'
  3281  00F168  6D                 	db	109	;'m'
  3282  00F169  70                 	db	112	;'p'
  3283  00F16A  73                 	db	115	;'s'
  3284  00F16B  0A                 	db	10
  3285  00F16C  0D                 	db	13
  3286  00F16D  00                 	db	0
  3287  00F16E                     STR_241:
  3288  00F16E  20                 	db	32
  3289  00F16F  20                 	db	32
  3290  00F170  20                 	db	32
  3291  00F171  20                 	db	32
  3292  00F172  43                 	db	67	;'C'
  3293  00F173  61                 	db	97	;'a'
  3294  00F174  6C                 	db	108	;'l'
  3295  00F175  6C                 	db	108	;'l'
  3296  00F176  20                 	db	32
  3297  00F177  27                 	db	39
  3298  00F178  43                 	db	67	;'C'
  3299  00F179  6C                 	db	108	;'l'
  3300  00F17A  65                 	db	101	;'e'
  3301  00F17B  61                 	db	97	;'a'
  3302  00F17C  72                 	db	114	;'r'
  3303  00F17D  20                 	db	32
  3304  00F17E  41                 	db	65	;'A'
  3305  00F17F  44                 	db	68	;'D'
  3306  00F180  43                 	db	67	;'C'
  3307  00F181  20                 	db	32
  3308  00F182  45                 	db	69	;'E'
  3309  00F183  72                 	db	114	;'r'
  3310  00F184  72                 	db	114	;'r'
  3311  00F185  6F                 	db	111	;'o'
  3312  00F186  72                 	db	114	;'r'
  3313  00F187  73                 	db	115	;'s'
  3314  00F188  27                 	db	39
  3315  00F189  20                 	db	32
  3316  00F18A  74                 	db	116	;'t'
  3317  00F18B  6F                 	db	111	;'o'
  3318  00F18C  20                 	db	32
  3319  00F18D  63                 	db	99	;'c'
  3320  00F18E  6C                 	db	108	;'l'
  3321  00F18F  65                 	db	101	;'e'
  3322  00F190  61                 	db	97	;'a'
  3323  00F191  72                 	db	114	;'r'
  3324  00F192  20                 	db	32
  3325  00F193  41                 	db	65	;'A'
  3326  00F194  44                 	db	68	;'D'
  3327  00F195  43                 	db	67	;'C'
  3328  00F196  20                 	db	32
  3329  00F197  65                 	db	101	;'e'
  3330  00F198  72                 	db	114	;'r'
  3331  00F199  72                 	db	114	;'r'
  3332  00F19A  6F                 	db	111	;'o'
  3333  00F19B  72                 	db	114	;'r'
  3334  00F19C  28                 	db	40
  3335  00F19D  73                 	db	115	;'s'
  3336  00F19E  29                 	db	41
  3337  00F19F  0A                 	db	10
  3338  00F1A0  0D                 	db	13
  3339  00F1A1  00                 	db	0
  3340  00F1A2                     STR_264:
  3341  00F1A2  20                 	db	32
  3342  00F1A3  20                 	db	32
  3343  00F1A4  20                 	db	32
  3344  00F1A5  20                 	db	32
  3345  00F1A6  20                 	db	32
  3346  00F1A7  20                 	db	32
  3347  00F1A8  20                 	db	32
  3348  00F1A9  20                 	db	32
  3349  00F1AA  2B                 	db	43
  3350  00F1AB  31                 	db	49	;'1'
  3351  00F1AC  32                 	db	50	;'2'
  3352  00F1AD  56                 	db	86	;'V'
  3353  00F1AE  20                 	db	32
  3354  00F1AF  69                 	db	105	;'i'
  3355  00F1B0  6E                 	db	110	;'n'
  3356  00F1B1  70                 	db	112	;'p'
  3357  00F1B2  75                 	db	117	;'u'
  3358  00F1B3  74                 	db	116	;'t'
  3359  00F1B4  20                 	db	32
  3360  00F1B5  63                 	db	99	;'c'
  3361  00F1B6  75                 	db	117	;'u'
  3362  00F1B7  72                 	db	114	;'r'
  3363  00F1B8  72                 	db	114	;'r'
  3364  00F1B9  65                 	db	101	;'e'
  3365  00F1BA  6E                 	db	110	;'n'
  3366  00F1BB  74                 	db	116	;'t'
  3367  00F1BC  20                 	db	32
  3368  00F1BD  6D                 	db	109	;'m'
  3369  00F1BE  65                 	db	101	;'e'
  3370  00F1BF  61                 	db	97	;'a'
  3371  00F1C0  73                 	db	115	;'s'
  3372  00F1C1  75                 	db	117	;'u'
  3373  00F1C2  72                 	db	114	;'r'
  3374  00F1C3  65                 	db	101	;'e'
  3375  00F1C4  64                 	db	100	;'d'
  3376  00F1C5  20                 	db	32
  3377  00F1C6  61                 	db	97	;'a'
  3378  00F1C7  73                 	db	115	;'s'
  3379  00F1C8  20                 	db	32
  3380  00F1C9  25                 	db	37
  3381  00F1CA  2B                 	db	43
  3382  00F1CB  2E                 	db	46
  3383  00F1CC  33                 	db	51	;'3'
  3384  00F1CD  66                 	db	102	;'f'
  3385  00F1CE  20                 	db	32
  3386  00F1CF  41                 	db	65	;'A'
  3387  00F1D0  6D                 	db	109	;'m'
  3388  00F1D1  70                 	db	112	;'p'
  3389  00F1D2  73                 	db	115	;'s'
  3390  00F1D3  0A                 	db	10
  3391  00F1D4  0D                 	db	13
  3392  00F1D5  00                 	db	0
  3393  00F1D6                     STR_2:
  3394  00F1D6  51                 	db	81	;'Q'
  3395  00F1D7  49                 	db	73	;'I'
  3396  00F1D8  20                 	db	32
  3397  00F1D9  43                 	db	67	;'C'
  3398  00F1DA  68                 	db	104	;'h'
  3399  00F1DB  61                 	db	97	;'a'
  3400  00F1DC  72                 	db	114	;'r'
  3401  00F1DD  67                 	db	103	;'g'
  3402  00F1DE  65                 	db	101	;'e'
  3403  00F1DF  72                 	db	114	;'r'
  3404  00F1E0  20                 	db	32
  3405  00F1E1  77                 	db	119	;'w'
  3406  00F1E2  69                 	db	105	;'i'
  3407  00F1E3  74                 	db	116	;'t'
  3408  00F1E4  68                 	db	104	;'h'
  3409  00F1E5  20                 	db	32
  3410  00F1E6  44                 	db	68	;'D'
  3411  00F1E7  69                 	db	105	;'i'
  3412  00F1E8  67                 	db	103	;'g'
  3413  00F1E9  69                 	db	105	;'i'
  3414  00F1EA  74                 	db	116	;'t'
  3415  00F1EB  61                 	db	97	;'a'
  3416  00F1EC  6C                 	db	108	;'l'
  3417  00F1ED  20                 	db	32
  3418  00F1EE  4D                 	db	77	;'M'
  3419  00F1EF  6F                 	db	111	;'o'
  3420  00F1F0  6E                 	db	110	;'n'
  3421  00F1F1  69                 	db	105	;'i'
  3422  00F1F2  74                 	db	116	;'t'
  3423  00F1F3  6F                 	db	111	;'o'
  3424  00F1F4  72                 	db	114	;'r'
  3425  00F1F5  69                 	db	105	;'i'
  3426  00F1F6  6E                 	db	110	;'n'
  3427  00F1F7  67                 	db	103	;'g'
  3428  00F1F8  0A                 	db	10
  3429  00F1F9  0D                 	db	13
  3430  00F1FA  42                 	db	66	;'B'
  3431  00F1FB  6F                 	db	111	;'o'
  3432  00F1FC  6F                 	db	111	;'o'
  3433  00F1FD  74                 	db	116	;'t'
  3434  00F1FE  20                 	db	32
  3435  00F1FF  43                 	db	67	;'C'
  3436  00F200  6F                 	db	111	;'o'
  3437  00F201  6D                 	db	109	;'m'
  3438  00F202  70                 	db	112	;'p'
  3439  00F203  6C                 	db	108	;'l'
  3440  00F204  65                 	db	101	;'e'
  3441  00F205  74                 	db	116	;'t'
  3442  00F206  65                 	db	101	;'e'
  3443  00F207  0A                 	db	10
  3444  00F208  0D                 	db	13
  3445  00F209  00                 	db	0
  3446  00F20A                     STR_201:
  3447  00F20A  20                 	db	32
  3448  00F20B  20                 	db	32
  3449  00F20C  20                 	db	32
  3450  00F20D  20                 	db	32
  3451  00F20E  44                 	db	68	;'D'
  3452  00F20F  65                 	db	101	;'e'
  3453  00F210  76                 	db	118	;'v'
  3454  00F211  69                 	db	105	;'i'
  3455  00F212  63                 	db	99	;'c'
  3456  00F213  65                 	db	101	;'e'
  3457  00F214  20                 	db	32
  3458  00F215  49                 	db	73	;'I'
  3459  00F216  44                 	db	68	;'D'
  3460  00F217  20                 	db	32
  3461  00F218  72                 	db	114	;'r'
  3462  00F219  65                 	db	101	;'e'
  3463  00F21A  74                 	db	116	;'t'
  3464  00F21B  72                 	db	114	;'r'
  3465  00F21C  69                 	db	105	;'i'
  3466  00F21D  65                 	db	101	;'e'
  3467  00F21E  76                 	db	118	;'v'
  3468  00F21F  65                 	db	101	;'e'
  3469  00F220  64                 	db	100	;'d'
  3470  00F221  20                 	db	32
  3471  00F222  66                 	db	102	;'f'
  3472  00F223  72                 	db	114	;'r'
  3473  00F224  6F                 	db	111	;'o'
  3474  00F225  6D                 	db	109	;'m'
  3475  00F226  20                 	db	32
  3476  00F227  66                 	db	102	;'f'
  3477  00F228  6C                 	db	108	;'l'
  3478  00F229  61                 	db	97	;'a'
  3479  00F22A  73                 	db	115	;'s'
  3480  00F22B  68                 	db	104	;'h'
  3481  00F22C  3A                 	db	58	;':'
  3482  00F22D  20                 	db	32
  3483  00F22E  25                 	db	37
  3484  00F22F  73                 	db	115	;'s'
  3485  00F230  20                 	db	32
  3486  00F231  28                 	db	40
  3487  00F232  30                 	db	48	;'0'
  3488  00F233  78                 	db	120	;'x'
  3489  00F234  25                 	db	37
  3490  00F235  30                 	db	48	;'0'
  3491  00F236  34                 	db	52	;'4'
  3492  00F237  58                 	db	88	;'X'
  3493  00F238  29                 	db	41
  3494  00F239  0A                 	db	10
  3495  00F23A  0D                 	db	13
  3496  00F23B  00                 	db	0
  3497  00F23C                     STR_238:
  3498  00F23C  20                 	db	32
  3499  00F23D  20                 	db	32
  3500  00F23E  20                 	db	32
  3501  00F23F  20                 	db	32
  3502  00F240  54                 	db	84	;'T'
  3503  00F241  68                 	db	104	;'h'
  3504  00F242  65                 	db	101	;'e'
  3505  00F243  20                 	db	32
  3506  00F244  66                 	db	102	;'f'
  3507  00F245  6F                 	db	111	;'o'
  3508  00F246  6C                 	db	108	;'l'
  3509  00F247  6C                 	db	108	;'l'
  3510  00F248  6F                 	db	111	;'o'
  3511  00F249  77                 	db	119	;'w'
  3512  00F24A  69                 	db	105	;'i'
  3513  00F24B  6E                 	db	110	;'n'
  3514  00F24C  67                 	db	103	;'g'
  3515  00F24D  20                 	db	32
  3516  00F24E  63                 	db	99	;'c'
  3517  00F24F  68                 	db	104	;'h'
  3518  00F250  61                 	db	97	;'a'
  3519  00F251  6E                 	db	110	;'n'
  3520  00F252  6E                 	db	110	;'n'
  3521  00F253  65                 	db	101	;'e'
  3522  00F254  6C                 	db	108	;'l'
  3523  00F255  73                 	db	115	;'s'
  3524  00F256  20                 	db	32
  3525  00F257  63                 	db	99	;'c'
  3526  00F258  61                 	db	97	;'a'
  3527  00F259  75                 	db	117	;'u'
  3528  00F25A  73                 	db	115	;'s'
  3529  00F25B  65                 	db	101	;'e'
  3530  00F25C  64                 	db	100	;'d'
  3531  00F25D  20                 	db	32
  3532  00F25E  61                 	db	97	;'a'
  3533  00F25F  6E                 	db	110	;'n'
  3534  00F260  20                 	db	32
  3535  00F261  41                 	db	65	;'A'
  3536  00F262  44                 	db	68	;'D'
  3537  00F263  43                 	db	67	;'C'
  3538  00F264  20                 	db	32
  3539  00F265  65                 	db	101	;'e'
  3540  00F266  72                 	db	114	;'r'
  3541  00F267  72                 	db	114	;'r'
  3542  00F268  6F                 	db	111	;'o'
  3543  00F269  72                 	db	114	;'r'
  3544  00F26A  3A                 	db	58	;':'
  3545  00F26B  0A                 	db	10
  3546  00F26C  0D                 	db	13
  3547  00F26D  00                 	db	0
  3548  00F26E                     STR_286:
  3549  00F26E  20                 	db	32
  3550  00F26F  20                 	db	32
  3551  00F270  20                 	db	32
  3552  00F271  20                 	db	32
  3553  00F272  20                 	db	32
  3554  00F273  20                 	db	32
  3555  00F274  20                 	db	32
  3556  00F275  20                 	db	32
  3557  00F276  41                 	db	65	;'A'
  3558  00F277  6D                 	db	109	;'m'
  3559  00F278  62                 	db	98	;'b'
  3560  00F279  69                 	db	105	;'i'
  3561  00F27A  65                 	db	101	;'e'
  3562  00F27B  6E                 	db	110	;'n'
  3563  00F27C  74                 	db	116	;'t'
  3564  00F27D  20                 	db	32
  3565  00F27E  54                 	db	84	;'T'
  3566  00F27F  65                 	db	101	;'e'
  3567  00F280  6D                 	db	109	;'m'
  3568  00F281  70                 	db	112	;'p'
  3569  00F282  65                 	db	101	;'e'
  3570  00F283  72                 	db	114	;'r'
  3571  00F284  61                 	db	97	;'a'
  3572  00F285  74                 	db	116	;'t'
  3573  00F286  75                 	db	117	;'u'
  3574  00F287  72                 	db	114	;'r'
  3575  00F288  65                 	db	101	;'e'
  3576  00F289  20                 	db	32
  3577  00F28A  6D                 	db	109	;'m'
  3578  00F28B  65                 	db	101	;'e'
  3579  00F28C  61                 	db	97	;'a'
  3580  00F28D  73                 	db	115	;'s'
  3581  00F28E  75                 	db	117	;'u'
  3582  00F28F  72                 	db	114	;'r'
  3583  00F290  65                 	db	101	;'e'
  3584  00F291  64                 	db	100	;'d'
  3585  00F292  20                 	db	32
  3586  00F293  61                 	db	97	;'a'
  3587  00F294  73                 	db	115	;'s'
  3588  00F295  20                 	db	32
  3589  00F296  25                 	db	37
  3590  00F297  2B                 	db	43
  3591  00F298  2E                 	db	46
  3592  00F299  33                 	db	51	;'3'
  3593  00F29A  66                 	db	102	;'f'
  3594  00F29B  20                 	db	32
  3595  00F29C  43                 	db	67	;'C'
  3596  00F29D  0A                 	db	10
  3597  00F29E  0D                 	db	13
  3598  00F29F  00                 	db	0
  3599  00F2A0                     STR_256:
  3600  00F2A0  20                 	db	32
  3601  00F2A1  20                 	db	32
  3602  00F2A2  20                 	db	32
  3603  00F2A3  20                 	db	32
  3604  00F2A4  51                 	db	81	;'Q'
  3605  00F2A5  49                 	db	73	;'I'
  3606  00F2A6  20                 	db	32
  3607  00F2A7  77                 	db	119	;'w'
  3608  00F2A8  69                 	db	105	;'i'
  3609  00F2A9  72                 	db	114	;'r'
  3610  00F2AA  65                 	db	101	;'e'
  3611  00F2AB  6C                 	db	108	;'l'
  3612  00F2AC  65                 	db	101	;'e'
  3613  00F2AD  73                 	db	115	;'s'
  3614  00F2AE  73                 	db	115	;'s'
  3615  00F2AF  20                 	db	32
  3616  00F2B0  70                 	db	112	;'p'
  3617  00F2B1  6F                 	db	111	;'o'
  3618  00F2B2  77                 	db	119	;'w'
  3619  00F2B3  65                 	db	101	;'e'
  3620  00F2B4  72                 	db	114	;'r'
  3621  00F2B5  20                 	db	32
  3622  00F2B6  63                 	db	99	;'c'
  3623  00F2B7  6F                 	db	111	;'o'
  3624  00F2B8  6E                 	db	110	;'n'
  3625  00F2B9  76                 	db	118	;'v'
  3626  00F2BA  65                 	db	101	;'e'
  3627  00F2BB  72                 	db	114	;'r'
  3628  00F2BC  74                 	db	116	;'t'
  3629  00F2BD  65                 	db	101	;'e'
  3630  00F2BE  72                 	db	114	;'r'
  3631  00F2BF  20                 	db	32
  3632  00F2C0  69                 	db	105	;'i'
  3633  00F2C1  73                 	db	115	;'s'
  3634  00F2C2  20                 	db	32
  3635  00F2C3  63                 	db	99	;'c'
  3636  00F2C4  75                 	db	117	;'u'
  3637  00F2C5  72                 	db	114	;'r'
  3638  00F2C6  72                 	db	114	;'r'
  3639  00F2C7  65                 	db	101	;'e'
  3640  00F2C8  6E                 	db	110	;'n'
  3641  00F2C9  74                 	db	116	;'t'
  3642  00F2CA  6C                 	db	108	;'l'
  3643  00F2CB  79                 	db	121	;'y'
  3644  00F2CC  20                 	db	32
  3645  00F2CD  25                 	db	37
  3646  00F2CE  73                 	db	115	;'s'
  3647  00F2CF  0A                 	db	10
  3648  00F2D0  0D                 	db	13
  3649  00F2D1  00                 	db	0
  3650  00F2D2                     STR_258:
  3651  00F2D2  20                 	db	32
  3652  00F2D3  20                 	db	32
  3653  00F2D4  20                 	db	32
  3654  00F2D5  20                 	db	32
  3655  00F2D6  53                 	db	83	;'S'
  3656  00F2D7  79                 	db	121	;'y'
  3657  00F2D8  73                 	db	115	;'s'
  3658  00F2D9  74                 	db	116	;'t'
  3659  00F2DA  65                 	db	101	;'e'
  3660  00F2DB  6D                 	db	109	;'m'
  3661  00F2DC  20                 	db	32
  3662  00F2DD  68                 	db	104	;'h'
  3663  00F2DE  61                 	db	97	;'a'
  3664  00F2DF  73                 	db	115	;'s'
  3665  00F2E0  20                 	db	32
  3666  00F2E1  62                 	db	98	;'b'
  3667  00F2E2  65                 	db	101	;'e'
  3668  00F2E3  65                 	db	101	;'e'
  3669  00F2E4  6E                 	db	110	;'n'
  3670  00F2E5  20                 	db	32
  3671  00F2E6  63                 	db	99	;'c'
  3672  00F2E7  68                 	db	104	;'h'
  3673  00F2E8  61                 	db	97	;'a'
  3674  00F2E9  72                 	db	114	;'r'
  3675  00F2EA  67                 	db	103	;'g'
  3676  00F2EB  69                 	db	105	;'i'
  3677  00F2EC  6E                 	db	110	;'n'
  3678  00F2ED  67                 	db	103	;'g'
  3679  00F2EE  20                 	db	32
  3680  00F2EF  61                 	db	97	;'a'
  3681  00F2F0  20                 	db	32
  3682  00F2F1  70                 	db	112	;'p'
  3683  00F2F2  68                 	db	104	;'h'
  3684  00F2F3  6F                 	db	111	;'o'
  3685  00F2F4  6E                 	db	110	;'n'
  3686  00F2F5  65                 	db	101	;'e'
  3687  00F2F6  20                 	db	32
  3688  00F2F7  66                 	db	102	;'f'
  3689  00F2F8  6F                 	db	111	;'o'
  3690  00F2F9  72                 	db	114	;'r'
  3691  00F2FA  20                 	db	32
  3692  00F2FB  25                 	db	37
  3693  00F2FC  73                 	db	115	;'s'
  3694  00F2FD  0A                 	db	10
  3695  00F2FE  0D                 	db	13
  3696  00F2FF  0A                 	db	10
  3697  00F300  0D                 	db	13
  3698  00F301  00                 	db	0
  3699  00F302                     STR_222:
  3700  00F302  53                 	db	83	;'S'
  3701  00F303  79                 	db	121	;'y'
  3702  00F304  73                 	db	115	;'s'
  3703  00F305  74                 	db	116	;'t'
  3704  00F306  65                 	db	101	;'e'
  3705  00F307  6D                 	db	109	;'m'
  3706  00F308  20                 	db	32
  3707  00F309  4D                 	db	77	;'M'
  3708  00F30A  65                 	db	101	;'e'
  3709  00F30B  61                 	db	97	;'a'
  3710  00F30C  73                 	db	115	;'s'
  3711  00F30D  75                 	db	117	;'u'
  3712  00F30E  72                 	db	114	;'r'
  3713  00F30F  65                 	db	101	;'e'
  3714  00F310  6D                 	db	109	;'m'
  3715  00F311  65                 	db	101	;'e'
  3716  00F312  6E                 	db	110	;'n'
  3717  00F313  74                 	db	116	;'t'
  3718  00F314  73                 	db	115	;'s'
  3719  00F315  20                 	db	32
  3720  00F316  61                 	db	97	;'a'
  3721  00F317  74                 	db	116	;'t'
  3722  00F318  20                 	db	32
  3723  00F319  74                 	db	116	;'t'
  3724  00F31A  69                 	db	105	;'i'
  3725  00F31B  6D                 	db	109	;'m'
  3726  00F31C  65                 	db	101	;'e'
  3727  00F31D  20                 	db	32
  3728  00F31E  6F                 	db	111	;'o'
  3729  00F31F  66                 	db	102	;'f'
  3730  00F320  20                 	db	32
  3731  00F321  63                 	db	99	;'c'
  3732  00F322  6F                 	db	111	;'o'
  3733  00F323  6D                 	db	109	;'m'
  3734  00F324  6D                 	db	109	;'m'
  3735  00F325  61                 	db	97	;'a'
  3736  00F326  6E                 	db	110	;'n'
  3737  00F327  64                 	db	100	;'d'
  3738  00F328  20                 	db	32
  3739  00F329  63                 	db	99	;'c'
  3740  00F32A  61                 	db	97	;'a'
  3741  00F32B  6C                 	db	108	;'l'
  3742  00F32C  6C                 	db	108	;'l'
  3743  00F32D  3A                 	db	58	;':'
  3744  00F32E  0A                 	db	10
  3745  00F32F  0D                 	db	13
  3746  00F330  00                 	db	0
  3747  00F331                     STR_10:
  3748  00F331  0A                 	db	10
  3749  00F332  0D                 	db	13
  3750  00F333  43                 	db	67	;'C'
  3751  00F334  61                 	db	97	;'a'
  3752  00F335  6C                 	db	108	;'l'
  3753  00F336  6C                 	db	108	;'l'
  3754  00F337  20                 	db	32
  3755  00F338  27                 	db	39
  3756  00F339  48                 	db	72	;'H'
  3757  00F33A  65                 	db	101	;'e'
  3758  00F33B  6C                 	db	108	;'l'
  3759  00F33C  70                 	db	112	;'p'
  3760  00F33D  27                 	db	39
  3761  00F33E  20                 	db	32
  3762  00F33F  66                 	db	102	;'f'
  3763  00F340  6F                 	db	111	;'o'
  3764  00F341  72                 	db	114	;'r'
  3765  00F342  20                 	db	32
  3766  00F343  6C                 	db	108	;'l'
  3767  00F344  69                 	db	105	;'i'
  3768  00F345  73                 	db	115	;'s'
  3769  00F346  74                 	db	116	;'t'
  3770  00F347  20                 	db	32
  3771  00F348  6F                 	db	111	;'o'
  3772  00F349  66                 	db	102	;'f'
  3773  00F34A  20                 	db	32
  3774  00F34B  73                 	db	115	;'s'
  3775  00F34C  75                 	db	117	;'u'
  3776  00F34D  70                 	db	112	;'p'
  3777  00F34E  70                 	db	112	;'p'
  3778  00F34F  6F                 	db	111	;'o'
  3779  00F350  72                 	db	114	;'r'
  3780  00F351  74                 	db	116	;'t'
  3781  00F352  65                 	db	101	;'e'
  3782  00F353  64                 	db	100	;'d'
  3783  00F354  20                 	db	32
  3784  00F355  63                 	db	99	;'c'
  3785  00F356  6F                 	db	111	;'o'
  3786  00F357  6D                 	db	109	;'m'
  3787  00F358  6D                 	db	109	;'m'
  3788  00F359  61                 	db	97	;'a'
  3789  00F35A  6E                 	db	110	;'n'
  3790  00F35B  64                 	db	100	;'d'
  3791  00F35C  73                 	db	115	;'s'
  3792  00F35D  0A                 	db	10
  3793  00F35E  0D                 	db	13
  3794  00F35F  00                 	db	0
  3795  00F360                     STR_243:
  3796  00F360  20                 	db	32
  3797  00F361  20                 	db	32
  3798  00F362  20                 	db	32
  3799  00F363  20                 	db	32
  3800  00F364  54                 	db	84	;'T'
  3801  00F365  68                 	db	104	;'h'
  3802  00F366  65                 	db	101	;'e'
  3803  00F367  20                 	db	32
  3804  00F368  66                 	db	102	;'f'
  3805  00F369  6F                 	db	111	;'o'
  3806  00F36A  6C                 	db	108	;'l'
  3807  00F36B  6C                 	db	108	;'l'
  3808  00F36C  6F                 	db	111	;'o'
  3809  00F36D  77                 	db	119	;'w'
  3810  00F36E  69                 	db	105	;'i'
  3811  00F36F  6E                 	db	110	;'n'
  3812  00F370  67                 	db	103	;'g'
  3813  00F371  20                 	db	32
  3814  00F372  49                 	db	73	;'I'
  3815  00F373  32                 	db	50	;'2'
  3816  00F374  43                 	db	67	;'C'
  3817  00F375  20                 	db	32
  3818  00F376  45                 	db	69	;'E'
  3819  00F377  72                 	db	114	;'r'
  3820  00F378  72                 	db	114	;'r'
  3821  00F379  6F                 	db	111	;'o'
  3822  00F37A  72                 	db	114	;'r'
  3823  00F37B  73                 	db	115	;'s'
  3824  00F37C  20                 	db	32
  3825  00F37D  77                 	db	119	;'w'
  3826  00F37E  65                 	db	101	;'e'
  3827  00F37F  72                 	db	114	;'r'
  3828  00F380  65                 	db	101	;'e'
  3829  00F381  20                 	db	32
  3830  00F382  64                 	db	100	;'d'
  3831  00F383  65                 	db	101	;'e'
  3832  00F384  74                 	db	116	;'t'
  3833  00F385  65                 	db	101	;'e'
  3834  00F386  63                 	db	99	;'c'
  3835  00F387  74                 	db	116	;'t'
  3836  00F388  65                 	db	101	;'e'
  3837  00F389  64                 	db	100	;'d'
  3838  00F38A  3A                 	db	58	;':'
  3839  00F38B  0A                 	db	10
  3840  00F38C  0D                 	db	13
  3841  00F38D  00                 	db	0
  3842  00F38E                     STR_8:
  3843  00F38E  45                 	db	69	;'E'
  3844  00F38F  72                 	db	114	;'r'
  3845  00F390  72                 	db	114	;'r'
  3846  00F391  6F                 	db	111	;'o'
  3847  00F392  72                 	db	114	;'r'
  3848  00F393  73                 	db	115	;'s'
  3849  00F394  20                 	db	32
  3850  00F395  61                 	db	97	;'a'
  3851  00F396  6E                 	db	110	;'n'
  3852  00F397  64                 	db	100	;'d'
  3853  00F398  20                 	db	32
  3854  00F399  6E                 	db	110	;'n'
  3855  00F39A  65                 	db	101	;'e'
  3856  00F39B  67                 	db	103	;'g'
  3857  00F39C  61                 	db	97	;'a'
  3858  00F39D  74                 	db	116	;'t'
  3859  00F39E  69                 	db	105	;'i'
  3860  00F39F  76                 	db	118	;'v'
  3861  00F3A0  65                 	db	101	;'e'
  3862  00F3A1  20                 	db	32
  3863  00F3A2  72                 	db	114	;'r'
  3864  00F3A3  65                 	db	101	;'e'
  3865  00F3A4  73                 	db	115	;'s'
  3866  00F3A5  70                 	db	112	;'p'
  3867  00F3A6  6F                 	db	111	;'o'
  3868  00F3A7  6E                 	db	110	;'n'
  3869  00F3A8  73                 	db	115	;'s'
  3870  00F3A9  65                 	db	101	;'e'
  3871  00F3AA  73                 	db	115	;'s'
  3872  00F3AB  20                 	db	32
  3873  00F3AC  61                 	db	97	;'a'
  3874  00F3AD  70                 	db	112	;'p'
  3875  00F3AE  70                 	db	112	;'p'
  3876  00F3AF  65                 	db	101	;'e'
  3877  00F3B0  61                 	db	97	;'a'
  3878  00F3B1  72                 	db	114	;'r'
  3879  00F3B2  20                 	db	32
  3880  00F3B3  69                 	db	105	;'i'
  3881  00F3B4  6E                 	db	110	;'n'
  3882  00F3B5  20                 	db	32
  3883  00F3B6  72                 	db	114	;'r'
  3884  00F3B7  65                 	db	101	;'e'
  3885  00F3B8  64                 	db	100	;'d'
  3886  00F3B9  0A                 	db	10
  3887  00F3BA  0D                 	db	13
  3888  00F3BB  00                 	db	0
  3889  00F3BC                     STR_271:
  3890  00F3BC  20                 	db	32
  3891  00F3BD  20                 	db	32
  3892  00F3BE  20                 	db	32
  3893  00F3BF  20                 	db	32
  3894  00F3C0  53                 	db	83	;'S'
  3895  00F3C1  79                 	db	121	;'y'
  3896  00F3C2  73                 	db	115	;'s'
  3897  00F3C3  74                 	db	116	;'t'
  3898  00F3C4  65                 	db	101	;'e'
  3899  00F3C5  6D                 	db	109	;'m'
  3900  00F3C6  20                 	db	32
  3901  00F3C7  45                 	db	69	;'E'
  3902  00F3C8  66                 	db	102	;'f'
  3903  00F3C9  66                 	db	102	;'f'
  3904  00F3CA  69                 	db	105	;'i'
  3905  00F3CB  63                 	db	99	;'c'
  3906  00F3CC  69                 	db	105	;'i'
  3907  00F3CD  65                 	db	101	;'e'
  3908  00F3CE  6E                 	db	110	;'n'
  3909  00F3CF  63                 	db	99	;'c'
  3910  00F3D0  79                 	db	121	;'y'
  3911  00F3D1  20                 	db	32
  3912  00F3D2  63                 	db	99	;'c'
  3913  00F3D3  61                 	db	97	;'a'
  3914  00F3D4  6C                 	db	108	;'l'
  3915  00F3D5  63                 	db	99	;'c'
  3916  00F3D6  75                 	db	117	;'u'
  3917  00F3D7  6C                 	db	108	;'l'
  3918  00F3D8  61                 	db	97	;'a'
  3919  00F3D9  74                 	db	116	;'t'
  3920  00F3DA  65                 	db	101	;'e'
  3921  00F3DB  64                 	db	100	;'d'
  3922  00F3DC  20                 	db	32
  3923  00F3DD  61                 	db	97	;'a'
  3924  00F3DE  73                 	db	115	;'s'
  3925  00F3DF  20                 	db	32
  3926  00F3E0  25                 	db	37
  3927  00F3E1  2E                 	db	46
  3928  00F3E2  33                 	db	51	;'3'
  3929  00F3E3  66                 	db	102	;'f'
  3930  00F3E4  25                 	db	37
  3931  00F3E5  25                 	db	37
  3932  00F3E6  0A                 	db	10
  3933  00F3E7  0D                 	db	13
  3934  00F3E8  00                 	db	0
  3935  00F3E9                     STR_199:
  3936  00F3E9  44                 	db	68	;'D'
  3937  00F3EA  69                 	db	105	;'i'
  3938  00F3EB  67                 	db	103	;'g'
  3939  00F3EC  69                 	db	105	;'i'
  3940  00F3ED  74                 	db	116	;'t'
  3941  00F3EE  61                 	db	97	;'a'
  3942  00F3EF  6C                 	db	108	;'l'
  3943  00F3F0  20                 	db	32
  3944  00F3F1  4D                 	db	77	;'M'
  3945  00F3F2  6F                 	db	111	;'o'
  3946  00F3F3  6E                 	db	110	;'n'
  3947  00F3F4  69                 	db	105	;'i'
  3948  00F3F5  74                 	db	116	;'t'
  3949  00F3F6  6F                 	db	111	;'o'
  3950  00F3F7  72                 	db	114	;'r'
  3951  00F3F8  69                 	db	105	;'i'
  3952  00F3F9  6E                 	db	110	;'n'
  3953  00F3FA  67                 	db	103	;'g'
  3954  00F3FB  20                 	db	32
  3955  00F3FC  4D                 	db	77	;'M'
  3956  00F3FD  69                 	db	105	;'i'
  3957  00F3FE  63                 	db	99	;'c'
  3958  00F3FF  72                 	db	114	;'r'
  3959  00F400  6F                 	db	111	;'o'
  3960  00F401  63                 	db	99	;'c'
  3961  00F402  6F                 	db	111	;'o'
  3962  00F403  6E                 	db	110	;'n'
  3963  00F404  74                 	db	116	;'t'
  3964  00F405  72                 	db	114	;'r'
  3965  00F406  6F                 	db	111	;'o'
  3966  00F407  6C                 	db	108	;'l'
  3967  00F408  6C                 	db	108	;'l'
  3968  00F409  65                 	db	101	;'e'
  3969  00F40A  72                 	db	114	;'r'
  3970  00F40B  20                 	db	32
  3971  00F40C  53                 	db	83	;'S'
  3972  00F40D  74                 	db	116	;'t'
  3973  00F40E  61                 	db	97	;'a'
  3974  00F40F  74                 	db	116	;'t'
  3975  00F410  75                 	db	117	;'u'
  3976  00F411  73                 	db	115	;'s'
  3977  00F412  3A                 	db	58	;':'
  3978  00F413  0A                 	db	10
  3979  00F414  0D                 	db	13
  3980  00F415  00                 	db	0
  3981  00F416                     STR_260:
  3982  00F416  20                 	db	32
  3983  00F417  20                 	db	32
  3984  00F418  20                 	db	32
  3985  00F419  20                 	db	32
  3986  00F41A  20                 	db	32
  3987  00F41B  20                 	db	32
  3988  00F41C  20                 	db	32
  3989  00F41D  20                 	db	32
  3990  00F41E  2B                 	db	43
  3991  00F41F  31                 	db	49	;'1'
  3992  00F420  32                 	db	50	;'2'
  3993  00F421  56                 	db	86	;'V'
  3994  00F422  20                 	db	32
  3995  00F423  72                 	db	114	;'r'
  3996  00F424  61                 	db	97	;'a'
  3997  00F425  69                 	db	105	;'i'
  3998  00F426  6C                 	db	108	;'l'
  3999  00F427  20                 	db	32
  4000  00F428  6D                 	db	109	;'m'
  4001  00F429  65                 	db	101	;'e'
  4002  00F42A  61                 	db	97	;'a'
  4003  00F42B  73                 	db	115	;'s'
  4004  00F42C  75                 	db	117	;'u'
  4005  00F42D  72                 	db	114	;'r'
  4006  00F42E  65                 	db	101	;'e'
  4007  00F42F  64                 	db	100	;'d'
  4008  00F430  20                 	db	32
  4009  00F431  61                 	db	97	;'a'
  4010  00F432  73                 	db	115	;'s'
  4011  00F433  20                 	db	32
  4012  00F434  25                 	db	37
  4013  00F435  2B                 	db	43
  4014  00F436  2E                 	db	46
  4015  00F437  33                 	db	51	;'3'
  4016  00F438  66                 	db	102	;'f'
  4017  00F439  20                 	db	32
  4018  00F43A  56                 	db	86	;'V'
  4019  00F43B  6F                 	db	111	;'o'
  4020  00F43C  6C                 	db	108	;'l'
  4021  00F43D  74                 	db	116	;'t'
  4022  00F43E  73                 	db	115	;'s'
  4023  00F43F  0A                 	db	10
  4024  00F440  0D                 	db	13
  4025  00F441  00                 	db	0
  4026  00F442                     STR_3:
  4027  00F442  43                 	db	67	;'C'
  4028  00F443  61                 	db	97	;'a'
  4029  00F444  75                 	db	117	;'u'
  4030  00F445  73                 	db	115	;'s'
  4031  00F446  65                 	db	101	;'e'
  4032  00F447  20                 	db	32
  4033  00F448  6F                 	db	111	;'o'
  4034  00F449  66                 	db	102	;'f'
  4035  00F44A  20                 	db	32
  4036  00F44B  6D                 	db	109	;'m'
  4037  00F44C  6F                 	db	111	;'o'
  4038  00F44D  73                 	db	115	;'s'
  4039  00F44E  74                 	db	116	;'t'
  4040  00F44F  20                 	db	32
  4041  00F450  72                 	db	114	;'r'
  4042  00F451  65                 	db	101	;'e'
  4043  00F452  63                 	db	99	;'c'
  4044  00F453  65                 	db	101	;'e'
  4045  00F454  6E                 	db	110	;'n'
  4046  00F455  74                 	db	116	;'t'
  4047  00F456  20                 	db	32
  4048  00F457  64                 	db	100	;'d'
  4049  00F458  65                 	db	101	;'e'
  4050  00F459  76                 	db	118	;'v'
  4051  00F45A  69                 	db	105	;'i'
  4052  00F45B  63                 	db	99	;'c'
  4053  00F45C  65                 	db	101	;'e'
  4054  00F45D  20                 	db	32
  4055  00F45E  72                 	db	114	;'r'
  4056  00F45F  65                 	db	101	;'e'
  4057  00F460  73                 	db	115	;'s'
  4058  00F461  65                 	db	101	;'e'
  4059  00F462  74                 	db	116	;'t'
  4060  00F463  20                 	db	32
  4061  00F464  77                 	db	119	;'w'
  4062  00F465  61                 	db	97	;'a'
  4063  00F466  73                 	db	115	;'s'
  4064  00F467  3A                 	db	58	;':'
  4065  00F468  20                 	db	32
  4066  00F469  25                 	db	37
  4067  00F46A  73                 	db	115	;'s'
  4068  00F46B  0A                 	db	10
  4069  00F46C  0D                 	db	13
  4070  00F46D  00                 	db	0
  4071  00F46E                     STR_261:
  4072  00F46E  20                 	db	32
  4073  00F46F  20                 	db	32
  4074  00F470  20                 	db	32
  4075  00F471  20                 	db	32
  4076  00F472  20                 	db	32
  4077  00F473  20                 	db	32
  4078  00F474  20                 	db	32
  4079  00F475  20                 	db	32
  4080  00F476  2B                 	db	43
  4081  00F477  35                 	db	53	;'5'
  4082  00F478  56                 	db	86	;'V'
  4083  00F479  20                 	db	32
  4084  00F47A  72                 	db	114	;'r'
  4085  00F47B  61                 	db	97	;'a'
  4086  00F47C  69                 	db	105	;'i'
  4087  00F47D  6C                 	db	108	;'l'
  4088  00F47E  20                 	db	32
  4089  00F47F  6D                 	db	109	;'m'
  4090  00F480  65                 	db	101	;'e'
  4091  00F481  61                 	db	97	;'a'
  4092  00F482  73                 	db	115	;'s'
  4093  00F483  75                 	db	117	;'u'
  4094  00F484  72                 	db	114	;'r'
  4095  00F485  65                 	db	101	;'e'
  4096  00F486  64                 	db	100	;'d'
  4097  00F487  20                 	db	32
  4098  00F488  61                 	db	97	;'a'
  4099  00F489  73                 	db	115	;'s'
  4100  00F48A  20                 	db	32
  4101  00F48B  25                 	db	37
  4102  00F48C  2B                 	db	43
  4103  00F48D  2E                 	db	46
  4104  00F48E  33                 	db	51	;'3'
  4105  00F48F  66                 	db	102	;'f'
  4106  00F490  20                 	db	32
  4107  00F491  56                 	db	86	;'V'
  4108  00F492  6F                 	db	111	;'o'
  4109  00F493  6C                 	db	108	;'l'
  4110  00F494  74                 	db	116	;'t'
  4111  00F495  73                 	db	115	;'s'
  4112  00F496  0A                 	db	10
  4113  00F497  0D                 	db	13
  4114  00F498  00                 	db	0
  4115  00F499                     STR_278:
  4116  00F499  20                 	db	32
  4117  00F49A  20                 	db	32
  4118  00F49B  20                 	db	32
  4119  00F49C  20                 	db	32
  4120  00F49D  20                 	db	32
  4121  00F49E  20                 	db	32
  4122  00F49F  20                 	db	32
  4123  00F4A0  20                 	db	32
  4124  00F4A1  50                 	db	80	;'P'
  4125  00F4A2  4F                 	db	79	;'O'
  4126  00F4A3  53                 	db	83	;'S'
  4127  00F4A4  35                 	db	53	;'5'
  4128  00F4A5  20                 	db	32
  4129  00F4A6  43                 	db	67	;'C'
  4130  00F4A7  6F                 	db	111	;'o'
  4131  00F4A8  6E                 	db	110	;'n'
  4132  00F4A9  76                 	db	118	;'v'
  4133  00F4AA  65                 	db	101	;'e'
  4134  00F4AB  72                 	db	114	;'r'
  4135  00F4AC  74                 	db	116	;'t'
  4136  00F4AD  65                 	db	101	;'e'
  4137  00F4AE  72                 	db	114	;'r'
  4138  00F4AF  20                 	db	32
  4139  00F4B0  69                 	db	105	;'i'
  4140  00F4B1  73                 	db	115	;'s'
  4141  00F4B2  20                 	db	32
  4142  00F4B3  69                 	db	105	;'i'
  4143  00F4B4  6E                 	db	110	;'n'
  4144  00F4B5  20                 	db	32
  4145  00F4B6  42                 	db	66	;'B'
  4146  00F4B7  75                 	db	117	;'u'
  4147  00F4B8  72                 	db	114	;'r'
  4148  00F4B9  73                 	db	115	;'s'
  4149  00F4BA  74                 	db	116	;'t'
  4150  00F4BB  20                 	db	32
  4151  00F4BC  4D                 	db	77	;'M'
  4152  00F4BD  6F                 	db	111	;'o'
  4153  00F4BE  64                 	db	100	;'d'
  4154  00F4BF  65                 	db	101	;'e'
  4155  00F4C0  0A                 	db	10
  4156  00F4C1  0D                 	db	13
  4157  00F4C2  00                 	db	0
  4158  00F4C3                     STR_26:
  4159  00F4C3  57                 	db	87	;'W'
  4160  00F4C4  69                 	db	105	;'i'
  4161  00F4C5  6E                 	db	110	;'n'
  4162  00F4C6  64                 	db	100	;'d'
  4163  00F4C7  6F                 	db	111	;'o'
  4164  00F4C8  77                 	db	119	;'w'
  4165  00F4C9  65                 	db	101	;'e'
  4166  00F4CA  64                 	db	100	;'d'
  4167  00F4CB  20                 	db	32
  4168  00F4CC  57                 	db	87	;'W'
  4169  00F4CD  61                 	db	97	;'a'
  4170  00F4CE  74                 	db	116	;'t'
  4171  00F4CF  63                 	db	99	;'c'
  4172  00F4D0  68                 	db	104	;'h'
  4173  00F4D1  20                 	db	32
  4174  00F4D2  44                 	db	68	;'D'
  4175  00F4D3  6F                 	db	111	;'o'
  4176  00F4D4  67                 	db	103	;'g'
  4177  00F4D5  20                 	db	32
  4178  00F4D6  54                 	db	84	;'T'
  4179  00F4D7  69                 	db	105	;'i'
  4180  00F4D8  6D                 	db	109	;'m'
  4181  00F4D9  65                 	db	101	;'e'
  4182  00F4DA  72                 	db	114	;'r'
  4183  00F4DB  20                 	db	32
  4184  00F4DC  56                 	db	86	;'V'
  4185  00F4DD  69                 	db	105	;'i'
  4186  00F4DE  6F                 	db	111	;'o'
  4187  00F4DF  6C                 	db	108	;'l'
  4188  00F4E0  61                 	db	97	;'a'
  4189  00F4E1  74                 	db	116	;'t'
  4190  00F4E2  69                 	db	105	;'i'
  4191  00F4E3  6F                 	db	111	;'o'
  4192  00F4E4  6E                 	db	110	;'n'
  4193  00F4E5  20                 	db	32
  4194  00F4E6  52                 	db	82	;'R'
  4195  00F4E7  65                 	db	101	;'e'
  4196  00F4E8  73                 	db	115	;'s'
  4197  00F4E9  65                 	db	101	;'e'
  4198  00F4EA  74                 	db	116	;'t'
  4199  00F4EB  00                 	db	0
  4200  00F4EC                     STR_280:
  4201  00F4EC  20                 	db	32
  4202  00F4ED  20                 	db	32
  4203  00F4EE  20                 	db	32
  4204  00F4EF  20                 	db	32
  4205  00F4F0  20                 	db	32
  4206  00F4F1  20                 	db	32
  4207  00F4F2  20                 	db	32
  4208  00F4F3  20                 	db	32
  4209  00F4F4  51                 	db	81	;'Q'
  4210  00F4F5  49                 	db	73	;'I'
  4211  00F4F6  20                 	db	32
  4212  00F4F7  43                 	db	67	;'C'
  4213  00F4F8  6F                 	db	111	;'o'
  4214  00F4F9  6E                 	db	110	;'n'
  4215  00F4FA  76                 	db	118	;'v'
  4216  00F4FB  65                 	db	101	;'e'
  4217  00F4FC  72                 	db	114	;'r'
  4218  00F4FD  74                 	db	116	;'t'
  4219  00F4FE  65                 	db	101	;'e'
  4220  00F4FF  72                 	db	114	;'r'
  4221  00F500  20                 	db	32
  4222  00F501  69                 	db	105	;'i'
  4223  00F502  73                 	db	115	;'s'
  4224  00F503  20                 	db	32
  4225  00F504  69                 	db	105	;'i'
  4226  00F505  6E                 	db	110	;'n'
  4227  00F506  20                 	db	32
  4228  00F507  42                 	db	66	;'B'
  4229  00F508  75                 	db	117	;'u'
  4230  00F509  72                 	db	114	;'r'
  4231  00F50A  73                 	db	115	;'s'
  4232  00F50B  74                 	db	116	;'t'
  4233  00F50C  20                 	db	32
  4234  00F50D  4D                 	db	77	;'M'
  4235  00F50E  6F                 	db	111	;'o'
  4236  00F50F  64                 	db	100	;'d'
  4237  00F510  65                 	db	101	;'e'
  4238  00F511  0A                 	db	10
  4239  00F512  0D                 	db	13
  4240  00F513  00                 	db	0
  4241  00F514                     STR_245:
  4242  00F514  20                 	db	32
  4243  00F515  20                 	db	32
  4244  00F516  20                 	db	32
  4245  00F517  20                 	db	32
  4246  00F518  20                 	db	32
  4247  00F519  20                 	db	32
  4248  00F51A  20                 	db	32
  4249  00F51B  20                 	db	32
  4250  00F51C  49                 	db	73	;'I'
  4251  00F51D  32                 	db	50	;'2'
  4252  00F51E  43                 	db	67	;'C'
  4253  00F51F  20                 	db	32
  4254  00F520  41                 	db	65	;'A'
  4255  00F521  6D                 	db	109	;'m'
  4256  00F522  62                 	db	98	;'b'
  4257  00F523  69                 	db	105	;'i'
  4258  00F524  65                 	db	101	;'e'
  4259  00F525  6E                 	db	110	;'n'
  4260  00F526  74                 	db	116	;'t'
  4261  00F527  20                 	db	32
  4262  00F528  54                 	db	84	;'T'
  4263  00F529  65                 	db	101	;'e'
  4264  00F52A  6D                 	db	109	;'m'
  4265  00F52B  70                 	db	112	;'p'
  4266  00F52C  20                 	db	32
  4267  00F52D  53                 	db	83	;'S'
  4268  00F52E  65                 	db	101	;'e'
  4269  00F52F  6E                 	db	110	;'n'
  4270  00F530  73                 	db	115	;'s'
  4271  00F531  6F                 	db	111	;'o'
  4272  00F532  72                 	db	114	;'r'
  4273  00F533  20                 	db	32
  4274  00F534  45                 	db	69	;'E'
  4275  00F535  72                 	db	114	;'r'
  4276  00F536  72                 	db	114	;'r'
  4277  00F537  6F                 	db	111	;'o'
  4278  00F538  72                 	db	114	;'r'
  4279  00F539  0A                 	db	10
  4280  00F53A  0D                 	db	13
  4281  00F53B  00                 	db	0
  4282  00F53C                     STR_291:
  4283  00F53C  20                 	db	32
  4284  00F53D  20                 	db	32
  4285  00F53E  20                 	db	32
  4286  00F53F  20                 	db	32
  4287  00F540  20                 	db	32
  4288  00F541  20                 	db	32
  4289  00F542  20                 	db	32
  4290  00F543  20                 	db	32
  4291  00F544  41                 	db	65	;'A'
  4292  00F545  56                 	db	86	;'V'
  4293  00F546  53                 	db	83	;'S'
  4294  00F547  53                 	db	83	;'S'
  4295  00F548  20                 	db	32
  4296  00F549  6D                 	db	109	;'m'
  4297  00F54A  65                 	db	101	;'e'
  4298  00F54B  61                 	db	97	;'a'
  4299  00F54C  73                 	db	115	;'s'
  4300  00F54D  75                 	db	117	;'u'
  4301  00F54E  72                 	db	114	;'r'
  4302  00F54F  65                 	db	101	;'e'
  4303  00F550  64                 	db	100	;'d'
  4304  00F551  20                 	db	32
  4305  00F552  61                 	db	97	;'a'
  4306  00F553  73                 	db	115	;'s'
  4307  00F554  20                 	db	32
  4308  00F555  25                 	db	37
  4309  00F556  2B                 	db	43
  4310  00F557  2E                 	db	46
  4311  00F558  33                 	db	51	;'3'
  4312  00F559  66                 	db	102	;'f'
  4313  00F55A  20                 	db	32
  4314  00F55B  56                 	db	86	;'V'
  4315  00F55C  6F                 	db	111	;'o'
  4316  00F55D  6C                 	db	108	;'l'
  4317  00F55E  74                 	db	116	;'t'
  4318  00F55F  73                 	db	115	;'s'
  4319  00F560  0A                 	db	10
  4320  00F561  0D                 	db	13
  4321  00F562  00                 	db	0
  4322  00F563                     STR_4:
  4323  00F563  51                 	db	81	;'Q'
  4324  00F564  49                 	db	73	;'I'
  4325  00F565  20                 	db	32
  4326  00F566  57                 	db	87	;'W'
  4327  00F567  69                 	db	105	;'i'
  4328  00F568  72                 	db	114	;'r'
  4329  00F569  65                 	db	101	;'e'
  4330  00F56A  6C                 	db	108	;'l'
  4331  00F56B  65                 	db	101	;'e'
  4332  00F56C  73                 	db	115	;'s'
  4333  00F56D  73                 	db	115	;'s'
  4334  00F56E  20                 	db	32
  4335  00F56F  50                 	db	80	;'P'
  4336  00F570  6F                 	db	111	;'o'
  4337  00F571  77                 	db	119	;'w'
  4338  00F572  65                 	db	101	;'e'
  4339  00F573  72                 	db	114	;'r'
  4340  00F574  20                 	db	32
  4341  00F575  43                 	db	67	;'C'
  4342  00F576  6F                 	db	111	;'o'
  4343  00F577  6E                 	db	110	;'n'
  4344  00F578  76                 	db	118	;'v'
  4345  00F579  65                 	db	101	;'e'
  4346  00F57A  72                 	db	114	;'r'
  4347  00F57B  73                 	db	115	;'s'
  4348  00F57C  69                 	db	105	;'i'
  4349  00F57D  6F                 	db	111	;'o'
  4350  00F57E  6E                 	db	110	;'n'
  4351  00F57F  20                 	db	32
  4352  00F580  45                 	db	69	;'E'
  4353  00F581  6E                 	db	110	;'n'
  4354  00F582  61                 	db	97	;'a'
  4355  00F583  62                 	db	98	;'b'
  4356  00F584  6C                 	db	108	;'l'
  4357  00F585  65                 	db	101	;'e'
  4358  00F586  64                 	db	100	;'d'
  4359  00F587  0A                 	db	10
  4360  00F588  0D                 	db	13
  4361  00F589  00                 	db	0
  4362  00F58A                     STR_7:
  4363  00F58A  4D                 	db	77	;'M'
  4364  00F58B  65                 	db	101	;'e'
  4365  00F58C  61                 	db	97	;'a'
  4366  00F58D  73                 	db	115	;'s'
  4367  00F58E  75                 	db	117	;'u'
  4368  00F58F  72                 	db	114	;'r'
  4369  00F590  65                 	db	101	;'e'
  4370  00F591  6D                 	db	109	;'m'
  4371  00F592  65                 	db	101	;'e'
  4372  00F593  6E                 	db	110	;'n'
  4373  00F594  74                 	db	116	;'t'
  4374  00F595  20                 	db	32
  4375  00F596  72                 	db	114	;'r'
  4376  00F597  65                 	db	101	;'e'
  4377  00F598  73                 	db	115	;'s'
  4378  00F599  70                 	db	112	;'p'
  4379  00F59A  6F                 	db	111	;'o'
  4380  00F59B  6E                 	db	110	;'n'
  4381  00F59C  73                 	db	115	;'s'
  4382  00F59D  65                 	db	101	;'e'
  4383  00F59E  73                 	db	115	;'s'
  4384  00F59F  20                 	db	32
  4385  00F5A0  61                 	db	97	;'a'
  4386  00F5A1  70                 	db	112	;'p'
  4387  00F5A2  70                 	db	112	;'p'
  4388  00F5A3  65                 	db	101	;'e'
  4389  00F5A4  61                 	db	97	;'a'
  4390  00F5A5  72                 	db	114	;'r'
  4391  00F5A6  20                 	db	32
  4392  00F5A7  69                 	db	105	;'i'
  4393  00F5A8  6E                 	db	110	;'n'
  4394  00F5A9  20                 	db	32
  4395  00F5AA  63                 	db	99	;'c'
  4396  00F5AB  79                 	db	121	;'y'
  4397  00F5AC  61                 	db	97	;'a'
  4398  00F5AD  6E                 	db	110	;'n'
  4399  00F5AE  0A                 	db	10
  4400  00F5AF  0D                 	db	13
  4401  00F5B0  00                 	db	0
  4402  00F5B1  54                 	db	84	;'T'
  4403  00F5B2  68                 	db	104	;'h'
  4404  00F5B3  69                 	db	105	;'i'
  4405  00F5B4  73                 	db	115	;'s'
  4406  00F5B5  20                 	db	32
  4407  00F5B6  74                 	db	116	;'t'
  4408  00F5B7  65                 	db	101	;'e'
  4409  00F5B8  78                 	db	120	;'x'
  4410  00F5B9  74                 	db	116	;'t'
  4411  00F5BA  20                 	db	32
  4412  00F5BB  68                 	db	104	;'h'
  4413  00F5BC  61                 	db	97	;'a'
  4414  00F5BD  73                 	db	115	;'s'
  4415  00F5BE  20                 	db	32
  4416  00F5BF  61                 	db	97	;'a'
  4417  00F5C0  20                 	db	32
  4418  00F5C1  6D                 	db	109	;'m'
  4419  00F5C2  61                 	db	97	;'a'
  4420  00F5C3  67                 	db	103	;'g'
  4421  00F5C4  65                 	db	101	;'e'
  4422  00F5C5  6E                 	db	110	;'n'
  4423  00F5C6  74                 	db	116	;'t'
  4424  00F5C7  61                 	db	97	;'a'
  4425  00F5C8  20                 	db	32
  4426  00F5C9  62                 	db	98	;'b'
  4427  00F5CA  61                 	db	97	;'a'
  4428  00F5CB  63                 	db	99	;'c'
  4429  00F5CC  6B                 	db	107	;'k'
  4430  00F5CD  67                 	db	103	;'g'
  4431  00F5CE  72                 	db	114	;'r'
  4432  00F5CF  6F                 	db	111	;'o'
  4433  00F5D0  75                 	db	117	;'u'
  4434  00F5D1  6E                 	db	110	;'n'
  4435  00F5D2  64                 	db	100	;'d'
  4436  00F5D3  0A                 	db	10
  4437  00F5D4  0D                 	db	13
  4438  00F5D5  00                 	db	0
  4439  00F5D6                     STR_234:
  4440  00F5D6  55                 	db	85	;'U'
  4441  00F5D7  6E                 	db	110	;'n'
  4442  00F5D8  73                 	db	115	;'s'
  4443  00F5D9  75                 	db	117	;'u'
  4444  00F5DA  70                 	db	112	;'p'
  4445  00F5DB  70                 	db	112	;'p'
  4446  00F5DC  6F                 	db	111	;'o'
  4447  00F5DD  72                 	db	114	;'r'
  4448  00F5DE  74                 	db	116	;'t'
  4449  00F5DF  65                 	db	101	;'e'
  4450  00F5E0  64                 	db	100	;'d'
  4451  00F5E1  20                 	db	32
  4452  00F5E2  6F                 	db	111	;'o'
  4453  00F5E3  72                 	db	114	;'r'
  4454  00F5E4  20                 	db	32
  4455  00F5E5  6D                 	db	109	;'m'
  4456  00F5E6  69                 	db	105	;'i'
  4457  00F5E7  73                 	db	115	;'s'
  4458  00F5E8  2D                 	db	45
  4459  00F5E9  65                 	db	101	;'e'
  4460  00F5EA  6E                 	db	110	;'n'
  4461  00F5EB  74                 	db	116	;'t'
  4462  00F5EC  65                 	db	101	;'e'
  4463  00F5ED  72                 	db	114	;'r'
  4464  00F5EE  65                 	db	101	;'e'
  4465  00F5EF  64                 	db	100	;'d'
  4466  00F5F0  20                 	db	32
  4467  00F5F1  63                 	db	99	;'c'
  4468  00F5F2  6F                 	db	111	;'o'
  4469  00F5F3  6D                 	db	109	;'m'
  4470  00F5F4  6D                 	db	109	;'m'
  4471  00F5F5  61                 	db	97	;'a'
  4472  00F5F6  6E                 	db	110	;'n'
  4473  00F5F7  64                 	db	100	;'d'
  4474  00F5F8  0A                 	db	10
  4475  00F5F9  0D                 	db	13
  4476  00F5FA  00                 	db	0
  4477  00F5FB                     STR_246:
  4478  00F5FB  20                 	db	32
  4479  00F5FC  20                 	db	32
  4480  00F5FD  20                 	db	32
  4481  00F5FE  20                 	db	32
  4482  00F5FF  20                 	db	32
  4483  00F600  20                 	db	32
  4484  00F601  20                 	db	32
  4485  00F602  20                 	db	32
  4486  00F603  49                 	db	73	;'I'
  4487  00F604  32                 	db	50	;'2'
  4488  00F605  43                 	db	67	;'C'
  4489  00F606  20                 	db	32
  4490  00F607  50                 	db	80	;'P'
  4491  00F608  4F                 	db	79	;'O'
  4492  00F609  53                 	db	83	;'S'
  4493  00F60A  35                 	db	53	;'5'
  4494  00F60B  20                 	db	32
  4495  00F60C  54                 	db	84	;'T'
  4496  00F60D  65                 	db	101	;'e'
  4497  00F60E  6D                 	db	109	;'m'
  4498  00F60F  70                 	db	112	;'p'
  4499  00F610  20                 	db	32
  4500  00F611  53                 	db	83	;'S'
  4501  00F612  65                 	db	101	;'e'
  4502  00F613  6E                 	db	110	;'n'
  4503  00F614  73                 	db	115	;'s'
  4504  00F615  6F                 	db	111	;'o'
  4505  00F616  72                 	db	114	;'r'
  4506  00F617  20                 	db	32
  4507  00F618  45                 	db	69	;'E'
  4508  00F619  72                 	db	114	;'r'
  4509  00F61A  72                 	db	114	;'r'
  4510  00F61B  6F                 	db	111	;'o'
  4511  00F61C  72                 	db	114	;'r'
  4512  00F61D  0A                 	db	10
  4513  00F61E  0D                 	db	13
  4514  00F61F  00                 	db	0
  4515  00F620  54                 	db	84	;'T'
  4516  00F621  68                 	db	104	;'h'
  4517  00F622  69                 	db	105	;'i'
  4518  00F623  73                 	db	115	;'s'
  4519  00F624  20                 	db	32
  4520  00F625  74                 	db	116	;'t'
  4521  00F626  65                 	db	101	;'e'
  4522  00F627  78                 	db	120	;'x'
  4523  00F628  74                 	db	116	;'t'
  4524  00F629  20                 	db	32
  4525  00F62A  68                 	db	104	;'h'
  4526  00F62B  61                 	db	97	;'a'
  4527  00F62C  73                 	db	115	;'s'
  4528  00F62D  20                 	db	32
  4529  00F62E  61                 	db	97	;'a'
  4530  00F62F  20                 	db	32
  4531  00F630  79                 	db	121	;'y'
  4532  00F631  65                 	db	101	;'e'
  4533  00F632  6C                 	db	108	;'l'
  4534  00F633  6C                 	db	108	;'l'
  4535  00F634  6F                 	db	111	;'o'
  4536  00F635  77                 	db	119	;'w'
  4537  00F636  20                 	db	32
  4538  00F637  62                 	db	98	;'b'
  4539  00F638  61                 	db	97	;'a'
  4540  00F639  63                 	db	99	;'c'
  4541  00F63A  6B                 	db	107	;'k'
  4542  00F63B  67                 	db	103	;'g'
  4543  00F63C  72                 	db	114	;'r'
  4544  00F63D  6F                 	db	111	;'o'
  4545  00F63E  75                 	db	117	;'u'
  4546  00F63F  6E                 	db	110	;'n'
  4547  00F640  64                 	db	100	;'d'
  4548  00F641  0A                 	db	10
  4549  00F642  0D                 	db	13
  4550  00F643  00                 	db	0
  4551  00F644                     STR_277:
  4552  00F644  20                 	db	32
  4553  00F645  20                 	db	32
  4554  00F646  20                 	db	32
  4555  00F647  20                 	db	32
  4556  00F648  53                 	db	83	;'S'
  4557  00F649  79                 	db	121	;'y'
  4558  00F64A  73                 	db	115	;'s'
  4559  00F64B  74                 	db	116	;'t'
  4560  00F64C  65                 	db	101	;'e'
  4561  00F64D  6D                 	db	109	;'m'
  4562  00F64E  20                 	db	32
  4563  00F64F  53                 	db	83	;'S'
  4564  00F650  77                 	db	119	;'w'
  4565  00F651  69                 	db	105	;'i'
  4566  00F652  74                 	db	116	;'t'
  4567  00F653  63                 	db	99	;'c'
  4568  00F654  68                 	db	104	;'h'
  4569  00F655  69                 	db	105	;'i'
  4570  00F656  6E                 	db	110	;'n'
  4571  00F657  67                 	db	103	;'g'
  4572  00F658  20                 	db	32
  4573  00F659  46                 	db	70	;'F'
  4574  00F65A  72                 	db	114	;'r'
  4575  00F65B  65                 	db	101	;'e'
  4576  00F65C  71                 	db	113	;'q'
  4577  00F65D  75                 	db	117	;'u'
  4578  00F65E  65                 	db	101	;'e'
  4579  00F65F  6E                 	db	110	;'n'
  4580  00F660  63                 	db	99	;'c'
  4581  00F661  69                 	db	105	;'i'
  4582  00F662  65                 	db	101	;'e'
  4583  00F663  73                 	db	115	;'s'
  4584  00F664  3A                 	db	58	;':'
  4585  00F665  0A                 	db	10
  4586  00F666  0D                 	db	13
  4587  00F667  00                 	db	0
  4588  00F668  54                 	db	84	;'T'
  4589  00F669  68                 	db	104	;'h'
  4590  00F66A  69                 	db	105	;'i'
  4591  00F66B  73                 	db	115	;'s'
  4592  00F66C  20                 	db	32
  4593  00F66D  74                 	db	116	;'t'
  4594  00F66E  65                 	db	101	;'e'
  4595  00F66F  78                 	db	120	;'x'
  4596  00F670  74                 	db	116	;'t'
  4597  00F671  20                 	db	32
  4598  00F672  68                 	db	104	;'h'
  4599  00F673  61                 	db	97	;'a'
  4600  00F674  73                 	db	115	;'s'
  4601  00F675  20                 	db	32
  4602  00F676  61                 	db	97	;'a'
  4603  00F677  20                 	db	32
  4604  00F678  77                 	db	119	;'w'
  4605  00F679  68                 	db	104	;'h'
  4606  00F67A  69                 	db	105	;'i'
  4607  00F67B  74                 	db	116	;'t'
  4608  00F67C  65                 	db	101	;'e'
  4609  00F67D  20                 	db	32
  4610  00F67E  62                 	db	98	;'b'
  4611  00F67F  61                 	db	97	;'a'
  4612  00F680  63                 	db	99	;'c'
  4613  00F681  6B                 	db	107	;'k'
  4614  00F682  67                 	db	103	;'g'
  4615  00F683  72                 	db	114	;'r'
  4616  00F684  6F                 	db	111	;'o'
  4617  00F685  75                 	db	117	;'u'
  4618  00F686  6E                 	db	110	;'n'
  4619  00F687  64                 	db	100	;'d'
  4620  00F688  0A                 	db	10
  4621  00F689  0D                 	db	13
  4622  00F68A  00                 	db	0
  4623  00F68B  54                 	db	84	;'T'
  4624  00F68C  68                 	db	104	;'h'
  4625  00F68D  69                 	db	105	;'i'
  4626  00F68E  73                 	db	115	;'s'
  4627  00F68F  20                 	db	32
  4628  00F690  74                 	db	116	;'t'
  4629  00F691  65                 	db	101	;'e'
  4630  00F692  78                 	db	120	;'x'
  4631  00F693  74                 	db	116	;'t'
  4632  00F694  20                 	db	32
  4633  00F695  68                 	db	104	;'h'
  4634  00F696  61                 	db	97	;'a'
  4635  00F697  73                 	db	115	;'s'
  4636  00F698  20                 	db	32
  4637  00F699  61                 	db	97	;'a'
  4638  00F69A  20                 	db	32
  4639  00F69B  62                 	db	98	;'b'
  4640  00F69C  6C                 	db	108	;'l'
  4641  00F69D  61                 	db	97	;'a'
  4642  00F69E  63                 	db	99	;'c'
  4643  00F69F  6B                 	db	107	;'k'
  4644  00F6A0  20                 	db	32
  4645  00F6A1  62                 	db	98	;'b'
  4646  00F6A2  61                 	db	97	;'a'
  4647  00F6A3  63                 	db	99	;'c'
  4648  00F6A4  6B                 	db	107	;'k'
  4649  00F6A5  67                 	db	103	;'g'
  4650  00F6A6  72                 	db	114	;'r'
  4651  00F6A7  6F                 	db	111	;'o'
  4652  00F6A8  75                 	db	117	;'u'
  4653  00F6A9  6E                 	db	110	;'n'
  4654  00F6AA  64                 	db	100	;'d'
  4655  00F6AB  0A                 	db	10
  4656  00F6AC  0D                 	db	13
  4657  00F6AD  00                 	db	0
  4658  00F6AE  54                 	db	84	;'T'
  4659  00F6AF  68                 	db	104	;'h'
  4660  00F6B0  69                 	db	105	;'i'
  4661  00F6B1  73                 	db	115	;'s'
  4662  00F6B2  20                 	db	32
  4663  00F6B3  74                 	db	116	;'t'
  4664  00F6B4  65                 	db	101	;'e'
  4665  00F6B5  78                 	db	120	;'x'
  4666  00F6B6  74                 	db	116	;'t'
  4667  00F6B7  20                 	db	32
  4668  00F6B8  68                 	db	104	;'h'
  4669  00F6B9  61                 	db	97	;'a'
  4670  00F6BA  73                 	db	115	;'s'
  4671  00F6BB  20                 	db	32
  4672  00F6BC  61                 	db	97	;'a'
  4673  00F6BD  20                 	db	32
  4674  00F6BE  67                 	db	103	;'g'
  4675  00F6BF  72                 	db	114	;'r'
  4676  00F6C0  65                 	db	101	;'e'
  4677  00F6C1  65                 	db	101	;'e'
  4678  00F6C2  6E                 	db	110	;'n'
  4679  00F6C3  20                 	db	32
  4680  00F6C4  62                 	db	98	;'b'
  4681  00F6C5  61                 	db	97	;'a'
  4682  00F6C6  63                 	db	99	;'c'
  4683  00F6C7  6B                 	db	107	;'k'
  4684  00F6C8  67                 	db	103	;'g'
  4685  00F6C9  72                 	db	114	;'r'
  4686  00F6CA  6F                 	db	111	;'o'
  4687  00F6CB  75                 	db	117	;'u'
  4688  00F6CC  6E                 	db	110	;'n'
  4689  00F6CD  64                 	db	100	;'d'
  4690  00F6CE  0A                 	db	10
  4691  00F6CF  0D                 	db	13
  4692  00F6D0  00                 	db	0
  4693  00F6D1                     STR_254:
  4694  00F6D1  20                 	db	32
  4695  00F6D2  20                 	db	32
  4696  00F6D3  20                 	db	32
  4697  00F6D4  20                 	db	32
  4698  00F6D5  51                 	db	81	;'Q'
  4699  00F6D6  49                 	db	73	;'I'
  4700  00F6D7  20                 	db	32
  4701  00F6D8  43                 	db	67	;'C'
  4702  00F6D9  68                 	db	104	;'h'
  4703  00F6DA  61                 	db	97	;'a'
  4704  00F6DB  72                 	db	114	;'r'
  4705  00F6DC  67                 	db	103	;'g'
  4706  00F6DD  65                 	db	101	;'e'
  4707  00F6DE  72                 	db	114	;'r'
  4708  00F6DF  20                 	db	32
  4709  00F6E0  69                 	db	105	;'i'
  4710  00F6E1  73                 	db	115	;'s'
  4711  00F6E2  20                 	db	32
  4712  00F6E3  69                 	db	105	;'i'
  4713  00F6E4  6E                 	db	110	;'n'
  4714  00F6E5  20                 	db	32
  4715  00F6E6  45                 	db	69	;'E'
  4716  00F6E7  72                 	db	114	;'r'
  4717  00F6E8  72                 	db	114	;'r'
  4718  00F6E9  6F                 	db	111	;'o'
  4719  00F6EA  72                 	db	114	;'r'
  4720  00F6EB  20                 	db	32
  4721  00F6EC  53                 	db	83	;'S'
  4722  00F6ED  74                 	db	116	;'t'
  4723  00F6EE  61                 	db	97	;'a'
  4724  00F6EF  74                 	db	116	;'t'
  4725  00F6F0  65                 	db	101	;'e'
  4726  00F6F1  0A                 	db	10
  4727  00F6F2  0D                 	db	13
  4728  00F6F3  00                 	db	0
  4729  00F6F4                     STR_247:
  4730  00F6F4  20                 	db	32
  4731  00F6F5  20                 	db	32
  4732  00F6F6  20                 	db	32
  4733  00F6F7  20                 	db	32
  4734  00F6F8  20                 	db	32
  4735  00F6F9  20                 	db	32
  4736  00F6FA  20                 	db	32
  4737  00F6FB  20                 	db	32
  4738  00F6FC  49                 	db	73	;'I'
  4739  00F6FD  32                 	db	50	;'2'
  4740  00F6FE  43                 	db	67	;'C'
  4741  00F6FF  20                 	db	32
  4742  00F700  51                 	db	81	;'Q'
  4743  00F701  49                 	db	73	;'I'
  4744  00F702  20                 	db	32
  4745  00F703  54                 	db	84	;'T'
  4746  00F704  65                 	db	101	;'e'
  4747  00F705  6D                 	db	109	;'m'
  4748  00F706  70                 	db	112	;'p'
  4749  00F707  20                 	db	32
  4750  00F708  53                 	db	83	;'S'
  4751  00F709  65                 	db	101	;'e'
  4752  00F70A  6E                 	db	110	;'n'
  4753  00F70B  73                 	db	115	;'s'
  4754  00F70C  6F                 	db	111	;'o'
  4755  00F70D  72                 	db	114	;'r'
  4756  00F70E  20                 	db	32
  4757  00F70F  45                 	db	69	;'E'
  4758  00F710  72                 	db	114	;'r'
  4759  00F711  72                 	db	114	;'r'
  4760  00F712  6F                 	db	111	;'o'
  4761  00F713  72                 	db	114	;'r'
  4762  00F714  0A                 	db	10
  4763  00F715  0D                 	db	13
  4764  00F716  00                 	db	0
  4765  00F717  54                 	db	84	;'T'
  4766  00F718  68                 	db	104	;'h'
  4767  00F719  69                 	db	105	;'i'
  4768  00F71A  73                 	db	115	;'s'
  4769  00F71B  20                 	db	32
  4770  00F71C  74                 	db	116	;'t'
  4771  00F71D  65                 	db	101	;'e'
  4772  00F71E  78                 	db	120	;'x'
  4773  00F71F  74                 	db	116	;'t'
  4774  00F720  20                 	db	32
  4775  00F721  68                 	db	104	;'h'
  4776  00F722  61                 	db	97	;'a'
  4777  00F723  73                 	db	115	;'s'
  4778  00F724  20                 	db	32
  4779  00F725  61                 	db	97	;'a'
  4780  00F726  20                 	db	32
  4781  00F727  62                 	db	98	;'b'
  4782  00F728  6C                 	db	108	;'l'
  4783  00F729  75                 	db	117	;'u'
  4784  00F72A  65                 	db	101	;'e'
  4785  00F72B  20                 	db	32
  4786  00F72C  62                 	db	98	;'b'
  4787  00F72D  61                 	db	97	;'a'
  4788  00F72E  63                 	db	99	;'c'
  4789  00F72F  6B                 	db	107	;'k'
  4790  00F730  67                 	db	103	;'g'
  4791  00F731  72                 	db	114	;'r'
  4792  00F732  6F                 	db	111	;'o'
  4793  00F733  75                 	db	117	;'u'
  4794  00F734  6E                 	db	110	;'n'
  4795  00F735  64                 	db	100	;'d'
  4796  00F736  0A                 	db	10
  4797  00F737  0D                 	db	13
  4798  00F738  00                 	db	0
  4799  00F739  54                 	db	84	;'T'
  4800  00F73A  68                 	db	104	;'h'
  4801  00F73B  69                 	db	105	;'i'
  4802  00F73C  73                 	db	115	;'s'
  4803  00F73D  20                 	db	32
  4804  00F73E  74                 	db	116	;'t'
  4805  00F73F  65                 	db	101	;'e'
  4806  00F740  78                 	db	120	;'x'
  4807  00F741  74                 	db	116	;'t'
  4808  00F742  20                 	db	32
  4809  00F743  68                 	db	104	;'h'
  4810  00F744  61                 	db	97	;'a'
  4811  00F745  73                 	db	115	;'s'
  4812  00F746  20                 	db	32
  4813  00F747  61                 	db	97	;'a'
  4814  00F748  20                 	db	32
  4815  00F749  63                 	db	99	;'c'
  4816  00F74A  79                 	db	121	;'y'
  4817  00F74B  61                 	db	97	;'a'
  4818  00F74C  6E                 	db	110	;'n'
  4819  00F74D  20                 	db	32
  4820  00F74E  62                 	db	98	;'b'
  4821  00F74F  61                 	db	97	;'a'
  4822  00F750  63                 	db	99	;'c'
  4823  00F751  6B                 	db	107	;'k'
  4824  00F752  67                 	db	103	;'g'
  4825  00F753  72                 	db	114	;'r'
  4826  00F754  6F                 	db	111	;'o'
  4827  00F755  75                 	db	117	;'u'
  4828  00F756  6E                 	db	110	;'n'
  4829  00F757  64                 	db	100	;'d'
  4830  00F758  0A                 	db	10
  4831  00F759  0D                 	db	13
  4832  00F75A  00                 	db	0
  4833  00F75B                     STR_288:
  4834  00F75B  20                 	db	32
  4835  00F75C  20                 	db	32
  4836  00F75D  20                 	db	32
  4837  00F75E  20                 	db	32
  4838  00F75F  4D                 	db	77	;'M'
  4839  00F760  69                 	db	105	;'i'
  4840  00F761  63                 	db	99	;'c'
  4841  00F762  72                 	db	114	;'r'
  4842  00F763  6F                 	db	111	;'o'
  4843  00F764  63                 	db	99	;'c'
  4844  00F765  6F                 	db	111	;'o'
  4845  00F766  6E                 	db	110	;'n'
  4846  00F767  74                 	db	116	;'t'
  4847  00F768  72                 	db	114	;'r'
  4848  00F769  6F                 	db	111	;'o'
  4849  00F76A  6C                 	db	108	;'l'
  4850  00F76B  6C                 	db	108	;'l'
  4851  00F76C  65                 	db	101	;'e'
  4852  00F76D  72                 	db	114	;'r'
  4853  00F76E  20                 	db	32
  4854  00F76F  50                 	db	80	;'P'
  4855  00F770  61                 	db	97	;'a'
  4856  00F771  72                 	db	114	;'r'
  4857  00F772  61                 	db	97	;'a'
  4858  00F773  6D                 	db	109	;'m'
  4859  00F774  65                 	db	101	;'e'
  4860  00F775  74                 	db	116	;'t'
  4861  00F776  65                 	db	101	;'e'
  4862  00F777  72                 	db	114	;'r'
  4863  00F778  73                 	db	115	;'s'
  4864  00F779  3A                 	db	58	;':'
  4865  00F77A  0A                 	db	10
  4866  00F77B  0D                 	db	13
  4867  00F77C  00                 	db	0
  4868  00F77D  54                 	db	84	;'T'
  4869  00F77E  68                 	db	104	;'h'
  4870  00F77F  69                 	db	105	;'i'
  4871  00F780  73                 	db	115	;'s'
  4872  00F781  20                 	db	32
  4873  00F782  74                 	db	116	;'t'
  4874  00F783  65                 	db	101	;'e'
  4875  00F784  78                 	db	120	;'x'
  4876  00F785  74                 	db	116	;'t'
  4877  00F786  20                 	db	32
  4878  00F787  68                 	db	104	;'h'
  4879  00F788  61                 	db	97	;'a'
  4880  00F789  73                 	db	115	;'s'
  4881  00F78A  20                 	db	32
  4882  00F78B  61                 	db	97	;'a'
  4883  00F78C  20                 	db	32
  4884  00F78D  72                 	db	114	;'r'
  4885  00F78E  65                 	db	101	;'e'
  4886  00F78F  64                 	db	100	;'d'
  4887  00F790  20                 	db	32
  4888  00F791  62                 	db	98	;'b'
  4889  00F792  61                 	db	97	;'a'
  4890  00F793  63                 	db	99	;'c'
  4891  00F794  6B                 	db	107	;'k'
  4892  00F795  67                 	db	103	;'g'
  4893  00F796  72                 	db	114	;'r'
  4894  00F797  6F                 	db	111	;'o'
  4895  00F798  75                 	db	117	;'u'
  4896  00F799  6E                 	db	110	;'n'
  4897  00F79A  64                 	db	100	;'d'
  4898  00F79B  0A                 	db	10
  4899  00F79C  0D                 	db	13
  4900  00F79D  00                 	db	0
  4901  00F79E                     STR_248:
  4902  00F79E  20                 	db	32
  4903  00F79F  20                 	db	32
  4904  00F7A0  20                 	db	32
  4905  00F7A1  20                 	db	32
  4906  00F7A2  20                 	db	32
  4907  00F7A3  20                 	db	32
  4908  00F7A4  20                 	db	32
  4909  00F7A5  20                 	db	32
  4910  00F7A6  49                 	db	73	;'I'
  4911  00F7A7  32                 	db	50	;'2'
  4912  00F7A8  43                 	db	67	;'C'
  4913  00F7A9  20                 	db	32
  4914  00F7AA  4F                 	db	79	;'O'
  4915  00F7AB  4C                 	db	76	;'L'
  4916  00F7AC  45                 	db	69	;'E'
  4917  00F7AD  44                 	db	68	;'D'
  4918  00F7AE  20                 	db	32
  4919  00F7AF  44                 	db	68	;'D'
  4920  00F7B0  69                 	db	105	;'i'
  4921  00F7B1  73                 	db	115	;'s'
  4922  00F7B2  70                 	db	112	;'p'
  4923  00F7B3  6C                 	db	108	;'l'
  4924  00F7B4  61                 	db	97	;'a'
  4925  00F7B5  79                 	db	121	;'y'
  4926  00F7B6  20                 	db	32
  4927  00F7B7  45                 	db	69	;'E'
  4928  00F7B8  72                 	db	114	;'r'
  4929  00F7B9  72                 	db	114	;'r'
  4930  00F7BA  6F                 	db	111	;'o'
  4931  00F7BB  72                 	db	114	;'r'
  4932  00F7BC  0A                 	db	10
  4933  00F7BD  0D                 	db	13
  4934  00F7BE  00                 	db	0
  4935  00F7BF                     STR_253:
  4936  00F7BF  20                 	db	32
  4937  00F7C0  20                 	db	32
  4938  00F7C1  20                 	db	32
  4939  00F7C2  20                 	db	32
  4940  00F7C3  4E                 	db	78	;'N'
  4941  00F7C4  6F                 	db	111	;'o'
  4942  00F7C5  20                 	db	32
  4943  00F7C6  55                 	db	85	;'U'
  4944  00F7C7  41                 	db	65	;'A'
  4945  00F7C8  52                 	db	82	;'R'
  4946  00F7C9  54                 	db	84	;'T'
  4947  00F7CA  20                 	db	32
  4948  00F7CB  65                 	db	101	;'e'
  4949  00F7CC  72                 	db	114	;'r'
  4950  00F7CD  72                 	db	114	;'r'
  4951  00F7CE  6F                 	db	111	;'o'
  4952  00F7CF  72                 	db	114	;'r'
  4953  00F7D0  28                 	db	40
  4954  00F7D1  73                 	db	115	;'s'
  4955  00F7D2  29                 	db	41
  4956  00F7D3  20                 	db	32
  4957  00F7D4  64                 	db	100	;'d'
  4958  00F7D5  65                 	db	101	;'e'
  4959  00F7D6  74                 	db	116	;'t'
  4960  00F7D7  65                 	db	101	;'e'
  4961  00F7D8  63                 	db	99	;'c'
  4962  00F7D9  74                 	db	116	;'t'
  4963  00F7DA  65                 	db	101	;'e'
  4964  00F7DB  64                 	db	100	;'d'
  4965  00F7DC  0A                 	db	10
  4966  00F7DD  0D                 	db	13
  4967  00F7DE  00                 	db	0
  4968  00F7DF                     STR_250:
  4969  00F7DF  20                 	db	32
  4970  00F7E0  20                 	db	32
  4971  00F7E1  20                 	db	32
  4972  00F7E2  20                 	db	32
  4973  00F7E3  4E                 	db	78	;'N'
  4974  00F7E4  6F                 	db	111	;'o'
  4975  00F7E5  20                 	db	32
  4976  00F7E6  49                 	db	73	;'I'
  4977  00F7E7  32                 	db	50	;'2'
  4978  00F7E8  43                 	db	67	;'C'
  4979  00F7E9  20                 	db	32
  4980  00F7EA  65                 	db	101	;'e'
  4981  00F7EB  72                 	db	114	;'r'
  4982  00F7EC  72                 	db	114	;'r'
  4983  00F7ED  6F                 	db	111	;'o'
  4984  00F7EE  72                 	db	114	;'r'
  4985  00F7EF  28                 	db	40
  4986  00F7F0  73                 	db	115	;'s'
  4987  00F7F1  29                 	db	41
  4988  00F7F2  20                 	db	32
  4989  00F7F3  64                 	db	100	;'d'
  4990  00F7F4  65                 	db	101	;'e'
  4991  00F7F5  74                 	db	116	;'t'
  4992  00F7F6  65                 	db	101	;'e'
  4993  00F7F7  63                 	db	99	;'c'
  4994  00F7F8  74                 	db	116	;'t'
  4995  00F7F9  65                 	db	101	;'e'
  4996  00F7FA  64                 	db	100	;'d'
  4997  00F7FB  0A                 	db	10
  4998  00F7FC  0D                 	db	13
  4999  00F7FD  00                 	db	0
  5000  00F7FE                     STR_242:
  5001  00F7FE  20                 	db	32
  5002  00F7FF  20                 	db	32
  5003  00F800  20                 	db	32
  5004  00F801  20                 	db	32
  5005  00F802  4E                 	db	78	;'N'
  5006  00F803  6F                 	db	111	;'o'
  5007  00F804  20                 	db	32
  5008  00F805  41                 	db	65	;'A'
  5009  00F806  44                 	db	68	;'D'
  5010  00F807  43                 	db	67	;'C'
  5011  00F808  20                 	db	32
  5012  00F809  65                 	db	101	;'e'
  5013  00F80A  72                 	db	114	;'r'
  5014  00F80B  72                 	db	114	;'r'
  5015  00F80C  6F                 	db	111	;'o'
  5016  00F80D  72                 	db	114	;'r'
  5017  00F80E  28                 	db	40
  5018  00F80F  73                 	db	115	;'s'
  5019  00F810  29                 	db	41
  5020  00F811  20                 	db	32
  5021  00F812  64                 	db	100	;'d'
  5022  00F813  65                 	db	101	;'e'
  5023  00F814  74                 	db	116	;'t'
  5024  00F815  65                 	db	101	;'e'
  5025  00F816  63                 	db	99	;'c'
  5026  00F817  74                 	db	116	;'t'
  5027  00F818  65                 	db	101	;'e'
  5028  00F819  64                 	db	100	;'d'
  5029  00F81A  0A                 	db	10
  5030  00F81B  0D                 	db	13
  5031  00F81C  00                 	db	0
  5032  00F81D                     STR_251:
  5033  00F81D  20                 	db	32
  5034  00F81E  20                 	db	32
  5035  00F81F  20                 	db	32
  5036  00F820  20                 	db	32
  5037  00F821  55                 	db	85	;'U'
  5038  00F822  53                 	db	83	;'S'
  5039  00F823  42                 	db	66	;'B'
  5040  00F824  20                 	db	32
  5041  00F825  55                 	db	85	;'U'
  5042  00F826  41                 	db	65	;'A'
  5043  00F827  52                 	db	82	;'R'
  5044  00F828  54                 	db	84	;'T'
  5045  00F829  20                 	db	32
  5046  00F82A  45                 	db	69	;'E'
  5047  00F82B  72                 	db	114	;'r'
  5048  00F82C  72                 	db	114	;'r'
  5049  00F82D  6F                 	db	111	;'o'
  5050  00F82E  72                 	db	114	;'r'
  5051  00F82F  20                 	db	32
  5052  00F830  44                 	db	68	;'D'
  5053  00F831  65                 	db	101	;'e'
  5054  00F832  74                 	db	116	;'t'
  5055  00F833  65                 	db	101	;'e'
  5056  00F834  63                 	db	99	;'c'
  5057  00F835  74                 	db	116	;'t'
  5058  00F836  65                 	db	101	;'e'
  5059  00F837  64                 	db	100	;'d'
  5060  00F838  0A                 	db	10
  5061  00F839  0D                 	db	13
  5062  00F83A  00                 	db	0
  5063  00F83B                     STR_9:
  5064  00F83B  55                 	db	85	;'U'
  5065  00F83C  73                 	db	115	;'s'
  5066  00F83D  65                 	db	101	;'e'
  5067  00F83E  72                 	db	114	;'r'
  5068  00F83F  20                 	db	32
  5069  00F840  69                 	db	105	;'i'
  5070  00F841  6E                 	db	110	;'n'
  5071  00F842  70                 	db	112	;'p'
  5072  00F843  75                 	db	117	;'u'
  5073  00F844  74                 	db	116	;'t'
  5074  00F845  20                 	db	32
  5075  00F846  61                 	db	97	;'a'
  5076  00F847  70                 	db	112	;'p'
  5077  00F848  70                 	db	112	;'p'
  5078  00F849  65                 	db	101	;'e'
  5079  00F84A  61                 	db	97	;'a'
  5080  00F84B  72                 	db	114	;'r'
  5081  00F84C  73                 	db	115	;'s'
  5082  00F84D  20                 	db	32
  5083  00F84E  69                 	db	105	;'i'
  5084  00F84F  6E                 	db	110	;'n'
  5085  00F850  20                 	db	32
  5086  00F851  77                 	db	119	;'w'
  5087  00F852  68                 	db	104	;'h'
  5088  00F853  69                 	db	105	;'i'
  5089  00F854  74                 	db	116	;'t'
  5090  00F855  65                 	db	101	;'e'
  5091  00F856  0A                 	db	10
  5092  00F857  0D                 	db	13
  5093  00F858  00                 	db	0
  5094  00F859                     STR_237:
  5095  00F859  20                 	db	32
  5096  00F85A  20                 	db	32
  5097  00F85B  20                 	db	32
  5098  00F85C  20                 	db	32
  5099  00F85D  41                 	db	65	;'A'
  5100  00F85E  44                 	db	68	;'D'
  5101  00F85F  43                 	db	67	;'C'
  5102  00F860  20                 	db	32
  5103  00F861  65                 	db	101	;'e'
  5104  00F862  72                 	db	114	;'r'
  5105  00F863  72                 	db	114	;'r'
  5106  00F864  6F                 	db	111	;'o'
  5107  00F865  72                 	db	114	;'r'
  5108  00F866  28                 	db	40
  5109  00F867  73                 	db	115	;'s'
  5110  00F868  29                 	db	41
  5111  00F869  20                 	db	32
  5112  00F86A  64                 	db	100	;'d'
  5113  00F86B  65                 	db	101	;'e'
  5114  00F86C  74                 	db	116	;'t'
  5115  00F86D  65                 	db	101	;'e'
  5116  00F86E  63                 	db	99	;'c'
  5117  00F86F  74                 	db	116	;'t'
  5118  00F870  65                 	db	101	;'e'
  5119  00F871  64                 	db	100	;'d'
  5120  00F872  21                 	db	33
  5121  00F873  0A                 	db	10
  5122  00F874  0D                 	db	13
  5123  00F875  00                 	db	0
  5124  00F876                     STR_244:
  5125  00F876  20                 	db	32
  5126  00F877  20                 	db	32
  5127  00F878  20                 	db	32
  5128  00F879  20                 	db	32
  5129  00F87A  20                 	db	32
  5130  00F87B  20                 	db	32
  5131  00F87C  20                 	db	32
  5132  00F87D  20                 	db	32
  5133  00F87E  49                 	db	73	;'I'
  5134  00F87F  32                 	db	50	;'2'
  5135  00F880  43                 	db	67	;'C'
  5136  00F881  20                 	db	32
  5137  00F882  47                 	db	71	;'G'
  5138  00F883  65                 	db	101	;'e'
  5139  00F884  6E                 	db	110	;'n'
  5140  00F885  65                 	db	101	;'e'
  5141  00F886  72                 	db	114	;'r'
  5142  00F887  61                 	db	97	;'a'
  5143  00F888  6C                 	db	108	;'l'
  5144  00F889  20                 	db	32
  5145  00F88A  45                 	db	69	;'E'
  5146  00F88B  72                 	db	114	;'r'
  5147  00F88C  72                 	db	114	;'r'
  5148  00F88D  6F                 	db	111	;'o'
  5149  00F88E  72                 	db	114	;'r'
  5150  00F88F  0A                 	db	10
  5151  00F890  0D                 	db	13
  5152  00F891  00                 	db	0
  5153  00F892                     STR_239:
  5154  00F892  20                 	db	32
  5155  00F893  20                 	db	32
  5156  00F894  20                 	db	32
  5157  00F895  20                 	db	32
  5158  00F896  20                 	db	32
  5159  00F897  20                 	db	32
  5160  00F898  20                 	db	32
  5161  00F899  20                 	db	32
  5162  00F89A  47                 	db	71	;'G'
  5163  00F89B  65                 	db	101	;'e'
  5164  00F89C  6E                 	db	110	;'n'
  5165  00F89D  65                 	db	101	;'e'
  5166  00F89E  72                 	db	114	;'r'
  5167  00F89F  61                 	db	97	;'a'
  5168  00F8A0  6C                 	db	108	;'l'
  5169  00F8A1  20                 	db	32
  5170  00F8A2  41                 	db	65	;'A'
  5171  00F8A3  44                 	db	68	;'D'
  5172  00F8A4  43                 	db	67	;'C'
  5173  00F8A5  20                 	db	32
  5174  00F8A6  65                 	db	101	;'e'
  5175  00F8A7  72                 	db	114	;'r'
  5176  00F8A8  72                 	db	114	;'r'
  5177  00F8A9  6F                 	db	111	;'o'
  5178  00F8AA  72                 	db	114	;'r'
  5179  00F8AB  0A                 	db	10
  5180  00F8AC  0D                 	db	13
  5181  00F8AD  00                 	db	0
  5182  00F8AE  54                 	db	84	;'T'
  5183  00F8AF  65                 	db	101	;'e'
  5184  00F8B0  73                 	db	115	;'s'
  5185  00F8B1  74                 	db	116	;'t'
  5186  00F8B2  69                 	db	105	;'i'
  5187  00F8B3  6E                 	db	110	;'n'
  5188  00F8B4  67                 	db	103	;'g'
  5189  00F8B5  20                 	db	32
  5190  00F8B6  74                 	db	116	;'t'
  5191  00F8B7  65                 	db	101	;'e'
  5192  00F8B8  78                 	db	120	;'x'
  5193  00F8B9  74                 	db	116	;'t'
  5194  00F8BA  20                 	db	32
  5195  00F8BB  61                 	db	97	;'a'
  5196  00F8BC  74                 	db	116	;'t'
  5197  00F8BD  74                 	db	116	;'t'
  5198  00F8BE  72                 	db	114	;'r'
  5199  00F8BF  69                 	db	105	;'i'
  5200  00F8C0  62                 	db	98	;'b'
  5201  00F8C1  75                 	db	117	;'u'
  5202  00F8C2  74                 	db	116	;'t'
  5203  00F8C3  65                 	db	101	;'e'
  5204  00F8C4  73                 	db	115	;'s'
  5205  00F8C5  3A                 	db	58	;':'
  5206  00F8C6  0A                 	db	10
  5207  00F8C7  0D                 	db	13
  5208  00F8C8  00                 	db	0
  5209  00F8C9  54                 	db	84	;'T'
  5210  00F8CA  68                 	db	104	;'h'
  5211  00F8CB  69                 	db	105	;'i'
  5212  00F8CC  73                 	db	115	;'s'
  5213  00F8CD  20                 	db	32
  5214  00F8CE  74                 	db	116	;'t'
  5215  00F8CF  65                 	db	101	;'e'
  5216  00F8D0  78                 	db	120	;'x'
  5217  00F8D1  74                 	db	116	;'t'
  5218  00F8D2  20                 	db	32
  5219  00F8D3  69                 	db	105	;'i'
  5220  00F8D4  73                 	db	115	;'s'
  5221  00F8D5  20                 	db	32
  5222  00F8D6  75                 	db	117	;'u'
  5223  00F8D7  6E                 	db	110	;'n'
  5224  00F8D8  64                 	db	100	;'d'
  5225  00F8D9  65                 	db	101	;'e'
  5226  00F8DA  72                 	db	114	;'r'
  5227  00F8DB  73                 	db	115	;'s'
  5228  00F8DC  63                 	db	99	;'c'
  5229  00F8DD  6F                 	db	111	;'o'
  5230  00F8DE  72                 	db	114	;'r'
  5231  00F8DF  65                 	db	101	;'e'
  5232  00F8E0  64                 	db	100	;'d'
  5233  00F8E1  0A                 	db	10
  5234  00F8E2  0D                 	db	13
  5235  00F8E3  00                 	db	0
  5236  00F8E4                     STR_283:
  5237  00F8E4  20                 	db	32
  5238  00F8E5  20                 	db	32
  5239  00F8E6  20                 	db	32
  5240  00F8E7  20                 	db	32
  5241  00F8E8  53                 	db	83	;'S'
  5242  00F8E9  79                 	db	121	;'y'
  5243  00F8EA  73                 	db	115	;'s'
  5244  00F8EB  74                 	db	116	;'t'
  5245  00F8EC  65                 	db	101	;'e'
  5246  00F8ED  6D                 	db	109	;'m'
  5247  00F8EE  20                 	db	32
  5248  00F8EF  54                 	db	84	;'T'
  5249  00F8F0  65                 	db	101	;'e'
  5250  00F8F1  6D                 	db	109	;'m'
  5251  00F8F2  70                 	db	112	;'p'
  5252  00F8F3  65                 	db	101	;'e'
  5253  00F8F4  72                 	db	114	;'r'
  5254  00F8F5  61                 	db	97	;'a'
  5255  00F8F6  74                 	db	116	;'t'
  5256  00F8F7  75                 	db	117	;'u'
  5257  00F8F8  72                 	db	114	;'r'
  5258  00F8F9  65                 	db	101	;'e'
  5259  00F8FA  73                 	db	115	;'s'
  5260  00F8FB  3A                 	db	58	;':'
  5261  00F8FC  0A                 	db	10
  5262  00F8FD  0D                 	db	13
  5263  00F8FE  00                 	db	0
  5264  00F8FF                     STR_27:
  5265  00F8FF  52                 	db	82	;'R'
  5266  00F900  45                 	db	69	;'E'
  5267  00F901  53                 	db	83	;'S'
  5268  00F902  45                 	db	69	;'E'
  5269  00F903  54                 	db	84	;'T'
  5270  00F904  20                 	db	32
  5271  00F905  49                 	db	73	;'I'
  5272  00F906  6E                 	db	110	;'n'
  5273  00F907  73                 	db	115	;'s'
  5274  00F908  74                 	db	116	;'t'
  5275  00F909  72                 	db	114	;'r'
  5276  00F90A  75                 	db	117	;'u'
  5277  00F90B  63                 	db	99	;'c'
  5278  00F90C  74                 	db	116	;'t'
  5279  00F90D  69                 	db	105	;'i'
  5280  00F90E  6F                 	db	111	;'o'
  5281  00F90F  6E                 	db	110	;'n'
  5282  00F910  20                 	db	32
  5283  00F911  45                 	db	69	;'E'
  5284  00F912  78                 	db	120	;'x'
  5285  00F913  65                 	db	101	;'e'
  5286  00F914  63                 	db	99	;'c'
  5287  00F915  75                 	db	117	;'u'
  5288  00F916  74                 	db	116	;'t'
  5289  00F917  65                 	db	101	;'e'
  5290  00F918  64                 	db	100	;'d'
  5291  00F919  00                 	db	0
  5292  00F91A                     STR_356:
  5293  00F91A  54                 	db	84	;'T'
  5294  00F91B  68                 	db	104	;'h'
  5295  00F91C  69                 	db	105	;'i'
  5296  00F91D  73                 	db	115	;'s'
  5297  00F91E  20                 	db	32
  5298  00F91F  74                 	db	116	;'t'
  5299  00F920  65                 	db	101	;'e'
  5300  00F921  78                 	db	120	;'x'
  5301  00F922  74                 	db	116	;'t'
  5302  00F923  20                 	db	32
  5303  00F924  69                 	db	105	;'i'
  5304  00F925  73                 	db	115	;'s'
  5305  00F926  20                 	db	32
  5306  00F927  6E                 	db	110	;'n'
  5307  00F928  6F                 	db	111	;'o'
  5308  00F929  72                 	db	114	;'r'
  5309  00F92A  6D                 	db	109	;'m'
  5310  00F92B  61                 	db	97	;'a'
  5311  00F92C  6C                 	db	108	;'l'
  5312  00F92D  0A                 	db	10
  5313  00F92E  0D                 	db	13
  5314  00F92F  0A                 	db	10
  5315  00F930  0D                 	db	13
  5316  00F931  00                 	db	0
  5317  00F932  54                 	db	84	;'T'
  5318  00F933  68                 	db	104	;'h'
  5319  00F934  69                 	db	105	;'i'
  5320  00F935  73                 	db	115	;'s'
  5321  00F936  20                 	db	32
  5322  00F937  74                 	db	116	;'t'
  5323  00F938  65                 	db	101	;'e'
  5324  00F939  78                 	db	120	;'x'
  5325  00F93A  74                 	db	116	;'t'
  5326  00F93B  20                 	db	32
  5327  00F93C  69                 	db	105	;'i'
  5328  00F93D  73                 	db	115	;'s'
  5329  00F93E  20                 	db	32
  5330  00F93F  72                 	db	114	;'r'
  5331  00F940  65                 	db	101	;'e'
  5332  00F941  76                 	db	118	;'v'
  5333  00F942  65                 	db	101	;'e'
  5334  00F943  72                 	db	114	;'r'
  5335  00F944  73                 	db	115	;'s'
  5336  00F945  65                 	db	101	;'e'
  5337  00F946  64                 	db	100	;'d'
  5338  00F947  0A                 	db	10
  5339  00F948  0D                 	db	13
  5340  00F949  00                 	db	0
  5341  00F94A  54                 	db	84	;'T'
  5342  00F94B  68                 	db	104	;'h'
  5343  00F94C  69                 	db	105	;'i'
  5344  00F94D  73                 	db	115	;'s'
  5345  00F94E  20                 	db	32
  5346  00F94F  74                 	db	116	;'t'
  5347  00F950  65                 	db	101	;'e'
  5348  00F951  78                 	db	120	;'x'
  5349  00F952  74                 	db	116	;'t'
  5350  00F953  20                 	db	32
  5351  00F954  69                 	db	105	;'i'
  5352  00F955  73                 	db	115	;'s'
  5353  00F956  20                 	db	32
  5354  00F957  62                 	db	98	;'b'
  5355  00F958  6C                 	db	108	;'l'
  5356  00F959  69                 	db	105	;'i'
  5357  00F95A  6E                 	db	110	;'n'
  5358  00F95B  6B                 	db	107	;'k'
  5359  00F95C  69                 	db	105	;'i'
  5360  00F95D  6E                 	db	110	;'n'
  5361  00F95E  67                 	db	103	;'g'
  5362  00F95F  0A                 	db	10
  5363  00F960  0D                 	db	13
  5364  00F961  00                 	db	0
  5365  00F962                     STR_218:
  5366  00F962  55                 	db	85	;'U'
  5367  00F963  41                 	db	65	;'A'
  5368  00F964  52                 	db	82	;'R'
  5369  00F965  54                 	db	84	;'T'
  5370  00F966  20                 	db	32
  5371  00F967  65                 	db	101	;'e'
  5372  00F968  72                 	db	114	;'r'
  5373  00F969  72                 	db	114	;'r'
  5374  00F96A  6F                 	db	111	;'o'
  5375  00F96B  72                 	db	114	;'r'
  5376  00F96C  28                 	db	40
  5377  00F96D  73                 	db	115	;'s'
  5378  00F96E  29                 	db	41
  5379  00F96F  20                 	db	32
  5380  00F970  63                 	db	99	;'c'
  5381  00F971  6C                 	db	108	;'l'
  5382  00F972  65                 	db	101	;'e'
  5383  00F973  61                 	db	97	;'a'
  5384  00F974  72                 	db	114	;'r'
  5385  00F975  65                 	db	101	;'e'
  5386  00F976  64                 	db	100	;'d'
  5387  00F977  0A                 	db	10
  5388  00F978  0D                 	db	13
  5389  00F979  00                 	db	0
  5390  00F97A  54                 	db	84	;'T'
  5391  00F97B  68                 	db	104	;'h'
  5392  00F97C  69                 	db	105	;'i'
  5393  00F97D  73                 	db	115	;'s'
  5394  00F97E  20                 	db	32
  5395  00F97F  74                 	db	116	;'t'
  5396  00F980  65                 	db	101	;'e'
  5397  00F981  78                 	db	120	;'x'
  5398  00F982  74                 	db	116	;'t'
  5399  00F983  20                 	db	32
  5400  00F984  69                 	db	105	;'i'
  5401  00F985  73                 	db	115	;'s'
  5402  00F986  20                 	db	32
  5403  00F987  6D                 	db	109	;'m'
  5404  00F988  61                 	db	97	;'a'
  5405  00F989  67                 	db	103	;'g'
  5406  00F98A  65                 	db	101	;'e'
  5407  00F98B  6E                 	db	110	;'n'
  5408  00F98C  74                 	db	116	;'t'
  5409  00F98D  61                 	db	97	;'a'
  5410  00F98E  0A                 	db	10
  5411  00F98F  0D                 	db	13
  5412  00F990  00                 	db	0
  5413  00F991                     STR_259:
  5414  00F991  20                 	db	32
  5415  00F992  20                 	db	32
  5416  00F993  20                 	db	32
  5417  00F994  20                 	db	32
  5418  00F995  53                 	db	83	;'S'
  5419  00F996  79                 	db	121	;'y'
  5420  00F997  73                 	db	115	;'s'
  5421  00F998  74                 	db	116	;'t'
  5422  00F999  65                 	db	101	;'e'
  5423  00F99A  6D                 	db	109	;'m'
  5424  00F99B  20                 	db	32
  5425  00F99C  56                 	db	86	;'V'
  5426  00F99D  6F                 	db	111	;'o'
  5427  00F99E  6C                 	db	108	;'l'
  5428  00F99F  74                 	db	116	;'t'
  5429  00F9A0  61                 	db	97	;'a'
  5430  00F9A1  67                 	db	103	;'g'
  5431  00F9A2  65                 	db	101	;'e'
  5432  00F9A3  73                 	db	115	;'s'
  5433  00F9A4  3A                 	db	58	;':'
  5434  00F9A5  0A                 	db	10
  5435  00F9A6  0D                 	db	13
  5436  00F9A7  00                 	db	0
  5437  00F9A8                     STR_263:
  5438  00F9A8  20                 	db	32
  5439  00F9A9  20                 	db	32
  5440  00F9AA  20                 	db	32
  5441  00F9AB  20                 	db	32
  5442  00F9AC  53                 	db	83	;'S'
  5443  00F9AD  79                 	db	121	;'y'
  5444  00F9AE  73                 	db	115	;'s'
  5445  00F9AF  74                 	db	116	;'t'
  5446  00F9B0  65                 	db	101	;'e'
  5447  00F9B1  6D                 	db	109	;'m'
  5448  00F9B2  20                 	db	32
  5449  00F9B3  43                 	db	67	;'C'
  5450  00F9B4  75                 	db	117	;'u'
  5451  00F9B5  72                 	db	114	;'r'
  5452  00F9B6  72                 	db	114	;'r'
  5453  00F9B7  65                 	db	101	;'e'
  5454  00F9B8  6E                 	db	110	;'n'
  5455  00F9B9  74                 	db	116	;'t'
  5456  00F9BA  73                 	db	115	;'s'
  5457  00F9BB  3A                 	db	58	;':'
  5458  00F9BC  0A                 	db	10
  5459  00F9BD  0D                 	db	13
  5460  00F9BE  00                 	db	0
  5461  00F9BF                     STR_214:
  5462  00F9BF  41                 	db	65	;'A'
  5463  00F9C0  44                 	db	68	;'D'
  5464  00F9C1  43                 	db	67	;'C'
  5465  00F9C2  20                 	db	32
  5466  00F9C3  45                 	db	69	;'E'
  5467  00F9C4  72                 	db	114	;'r'
  5468  00F9C5  72                 	db	114	;'r'
  5469  00F9C6  6F                 	db	111	;'o'
  5470  00F9C7  72                 	db	114	;'r'
  5471  00F9C8  28                 	db	40
  5472  00F9C9  73                 	db	115	;'s'
  5473  00F9CA  29                 	db	41
  5474  00F9CB  20                 	db	32
  5475  00F9CC  63                 	db	99	;'c'
  5476  00F9CD  6C                 	db	108	;'l'
  5477  00F9CE  65                 	db	101	;'e'
  5478  00F9CF  61                 	db	97	;'a'
  5479  00F9D0  72                 	db	114	;'r'
  5480  00F9D1  65                 	db	101	;'e'
  5481  00F9D2  64                 	db	100	;'d'
  5482  00F9D3  0A                 	db	10
  5483  00F9D4  0D                 	db	13
  5484  00F9D5  00                 	db	0
  5485  00F9D6                     STR_216:
  5486  00F9D6  49                 	db	73	;'I'
  5487  00F9D7  32                 	db	50	;'2'
  5488  00F9D8  43                 	db	67	;'C'
  5489  00F9D9  20                 	db	32
  5490  00F9DA  65                 	db	101	;'e'
  5491  00F9DB  72                 	db	114	;'r'
  5492  00F9DC  72                 	db	114	;'r'
  5493  00F9DD  6F                 	db	111	;'o'
  5494  00F9DE  72                 	db	114	;'r'
  5495  00F9DF  28                 	db	40
  5496  00F9E0  73                 	db	115	;'s'
  5497  00F9E1  29                 	db	41
  5498  00F9E2  20                 	db	32
  5499  00F9E3  63                 	db	99	;'c'
  5500  00F9E4  6C                 	db	108	;'l'
  5501  00F9E5  65                 	db	101	;'e'
  5502  00F9E6  61                 	db	97	;'a'
  5503  00F9E7  72                 	db	114	;'r'
  5504  00F9E8  65                 	db	101	;'e'
  5505  00F9E9  64                 	db	100	;'d'
  5506  00F9EA  0A                 	db	10
  5507  00F9EB  0D                 	db	13
  5508  00F9EC  00                 	db	0
  5509  00F9ED  54                 	db	84	;'T'
  5510  00F9EE  68                 	db	104	;'h'
  5511  00F9EF  69                 	db	105	;'i'
  5512  00F9F0  73                 	db	115	;'s'
  5513  00F9F1  20                 	db	32
  5514  00F9F2  74                 	db	116	;'t'
  5515  00F9F3  65                 	db	101	;'e'
  5516  00F9F4  78                 	db	120	;'x'
  5517  00F9F5  74                 	db	116	;'t'
  5518  00F9F6  20                 	db	32
  5519  00F9F7  69                 	db	105	;'i'
  5520  00F9F8  73                 	db	115	;'s'
  5521  00F9F9  20                 	db	32
  5522  00F9FA  79                 	db	121	;'y'
  5523  00F9FB  65                 	db	101	;'e'
  5524  00F9FC  6C                 	db	108	;'l'
  5525  00F9FD  6C                 	db	108	;'l'
  5526  00F9FE  6F                 	db	111	;'o'
  5527  00F9FF  77                 	db	119	;'w'
  5528  00FA00  0A                 	db	10
  5529  00FA01  0D                 	db	13
  5530  00FA02  00                 	db	0
  5531  00FA03                     STR_226:
  5532  00FA03  41                 	db	65	;'A'
  5533  00FA04  76                 	db	118	;'v'
  5534  00FA05  61                 	db	97	;'a'
  5535  00FA06  69                 	db	105	;'i'
  5536  00FA07  6C                 	db	108	;'l'
  5537  00FA08  61                 	db	97	;'a'
  5538  00FA09  62                 	db	98	;'b'
  5539  00FA0A  6C                 	db	108	;'l'
  5540  00FA0B  65                 	db	101	;'e'
  5541  00FA0C  20                 	db	32
  5542  00FA0D  43                 	db	67	;'C'
  5543  00FA0E  6F                 	db	111	;'o'
  5544  00FA0F  6D                 	db	109	;'m'
  5545  00FA10  6D                 	db	109	;'m'
  5546  00FA11  61                 	db	97	;'a'
  5547  00FA12  6E                 	db	110	;'n'
  5548  00FA13  64                 	db	100	;'d'
  5549  00FA14  73                 	db	115	;'s'
  5550  00FA15  3A                 	db	58	;':'
  5551  00FA16  0A                 	db	10
  5552  00FA17  0D                 	db	13
  5553  00FA18  00                 	db	0
  5554  00FA19                     STR_220:
  5555  00FA19  43                 	db	67	;'C'
  5556  00FA1A  75                 	db	117	;'u'
  5557  00FA1B  72                 	db	114	;'r'
  5558  00FA1C  72                 	db	114	;'r'
  5559  00FA1D  65                 	db	101	;'e'
  5560  00FA1E  6E                 	db	110	;'n'
  5561  00FA1F  74                 	db	116	;'t'
  5562  00FA20  20                 	db	32
  5563  00FA21  4D                 	db	77	;'M'
  5564  00FA22  65                 	db	101	;'e'
  5565  00FA23  61                 	db	97	;'a'
  5566  00FA24  73                 	db	115	;'s'
  5567  00FA25  75                 	db	117	;'u'
  5568  00FA26  72                 	db	114	;'r'
  5569  00FA27  65                 	db	101	;'e'
  5570  00FA28  6D                 	db	109	;'m'
  5571  00FA29  65                 	db	101	;'e'
  5572  00FA2A  6E                 	db	110	;'n'
  5573  00FA2B  74                 	db	116	;'t'
  5574  00FA2C  73                 	db	115	;'s'
  5575  00FA2D  3F                 	db	63	;'?'
  5576  00FA2E  00                 	db	0
  5577  00FA2F                     STR_29:
  5578  00FA2F  53                 	db	83	;'S'
  5579  00FA30  74                 	db	116	;'t'
  5580  00FA31  61                 	db	97	;'a'
  5581  00FA32  63                 	db	99	;'c'
  5582  00FA33  6B                 	db	107	;'k'
  5583  00FA34  20                 	db	32
  5584  00FA35  55                 	db	85	;'U'
  5585  00FA36  6E                 	db	110	;'n'
  5586  00FA37  64                 	db	100	;'d'
  5587  00FA38  65                 	db	101	;'e'
  5588  00FA39  72                 	db	114	;'r'
  5589  00FA3A  66                 	db	102	;'f'
  5590  00FA3B  6C                 	db	108	;'l'
  5591  00FA3C  6F                 	db	111	;'o'
  5592  00FA3D  77                 	db	119	;'w'
  5593  00FA3E  20                 	db	32
  5594  00FA3F  52                 	db	82	;'R'
  5595  00FA40  65                 	db	101	;'e'
  5596  00FA41  73                 	db	115	;'s'
  5597  00FA42  65                 	db	101	;'e'
  5598  00FA43  74                 	db	116	;'t'
  5599  00FA44  00                 	db	0
  5600  00FA45  54                 	db	84	;'T'
  5601  00FA46  68                 	db	104	;'h'
  5602  00FA47  69                 	db	105	;'i'
  5603  00FA48  73                 	db	115	;'s'
  5604  00FA49  20                 	db	32
  5605  00FA4A  74                 	db	116	;'t'
  5606  00FA4B  65                 	db	101	;'e'
  5607  00FA4C  78                 	db	120	;'x'
  5608  00FA4D  74                 	db	116	;'t'
  5609  00FA4E  20                 	db	32
  5610  00FA4F  69                 	db	105	;'i'
  5611  00FA50  73                 	db	115	;'s'
  5612  00FA51  20                 	db	32
  5613  00FA52  62                 	db	98	;'b'
  5614  00FA53  6C                 	db	108	;'l'
  5615  00FA54  61                 	db	97	;'a'
  5616  00FA55  63                 	db	99	;'c'
  5617  00FA56  6B                 	db	107	;'k'
  5618  00FA57  0A                 	db	10
  5619  00FA58  0D                 	db	13
  5620  00FA59  00                 	db	0
  5621  00FA5A  54                 	db	84	;'T'
  5622  00FA5B  68                 	db	104	;'h'
  5623  00FA5C  69                 	db	105	;'i'
  5624  00FA5D  73                 	db	115	;'s'
  5625  00FA5E  20                 	db	32
  5626  00FA5F  74                 	db	116	;'t'
  5627  00FA60  65                 	db	101	;'e'
  5628  00FA61  78                 	db	120	;'x'
  5629  00FA62  74                 	db	116	;'t'
  5630  00FA63  20                 	db	32
  5631  00FA64  69                 	db	105	;'i'
  5632  00FA65  73                 	db	115	;'s'
  5633  00FA66  20                 	db	32
  5634  00FA67  67                 	db	103	;'g'
  5635  00FA68  72                 	db	114	;'r'
  5636  00FA69  65                 	db	101	;'e'
  5637  00FA6A  65                 	db	101	;'e'
  5638  00FA6B  6E                 	db	110	;'n'
  5639  00FA6C  0A                 	db	10
  5640  00FA6D  0D                 	db	13
  5641  00FA6E  00                 	db	0
  5642  00FA6F                     STR_28:
  5643  00FA6F  53                 	db	83	;'S'
  5644  00FA70  74                 	db	116	;'t'
  5645  00FA71  61                 	db	97	;'a'
  5646  00FA72  63                 	db	99	;'c'
  5647  00FA73  6B                 	db	107	;'k'
  5648  00FA74  20                 	db	32
  5649  00FA75  4F                 	db	79	;'O'
  5650  00FA76  76                 	db	118	;'v'
  5651  00FA77  65                 	db	101	;'e'
  5652  00FA78  72                 	db	114	;'r'
  5653  00FA79  66                 	db	102	;'f'
  5654  00FA7A  6C                 	db	108	;'l'
  5655  00FA7B  6F                 	db	111	;'o'
  5656  00FA7C  77                 	db	119	;'w'
  5657  00FA7D  20                 	db	32
  5658  00FA7E  52                 	db	82	;'R'
  5659  00FA7F  65                 	db	101	;'e'
  5660  00FA80  73                 	db	115	;'s'
  5661  00FA81  65                 	db	101	;'e'
  5662  00FA82  74                 	db	116	;'t'
  5663  00FA83  00                 	db	0
  5664  00FA84  54                 	db	84	;'T'
  5665  00FA85  68                 	db	104	;'h'
  5666  00FA86  69                 	db	105	;'i'
  5667  00FA87  73                 	db	115	;'s'
  5668  00FA88  20                 	db	32
  5669  00FA89  74                 	db	116	;'t'
  5670  00FA8A  65                 	db	101	;'e'
  5671  00FA8B  78                 	db	120	;'x'
  5672  00FA8C  74                 	db	116	;'t'
  5673  00FA8D  20                 	db	32
  5674  00FA8E  69                 	db	105	;'i'
  5675  00FA8F  73                 	db	115	;'s'
  5676  00FA90  20                 	db	32
  5677  00FA91  62                 	db	98	;'b'
  5678  00FA92  6F                 	db	111	;'o'
  5679  00FA93  6C                 	db	108	;'l'
  5680  00FA94  64                 	db	100	;'d'
  5681  00FA95  0A                 	db	10
  5682  00FA96  0D                 	db	13
  5683  00FA97  00                 	db	0
  5684  00FA98  54                 	db	84	;'T'
  5685  00FA99  68                 	db	104	;'h'
  5686  00FA9A  69                 	db	105	;'i'
  5687  00FA9B  73                 	db	115	;'s'
  5688  00FA9C  20                 	db	32
  5689  00FA9D  74                 	db	116	;'t'
  5690  00FA9E  65                 	db	101	;'e'
  5691  00FA9F  78                 	db	120	;'x'
  5692  00FAA0  74                 	db	116	;'t'
  5693  00FAA1  20                 	db	32
  5694  00FAA2  69                 	db	105	;'i'
  5695  00FAA3  73                 	db	115	;'s'
  5696  00FAA4  20                 	db	32
  5697  00FAA5  62                 	db	98	;'b'
  5698  00FAA6  6C                 	db	108	;'l'
  5699  00FAA7  75                 	db	117	;'u'
  5700  00FAA8  65                 	db	101	;'e'
  5701  00FAA9  0A                 	db	10
  5702  00FAAA  0D                 	db	13
  5703  00FAAB  00                 	db	0
  5704  00FAAC  54                 	db	84	;'T'
  5705  00FAAD  68                 	db	104	;'h'
  5706  00FAAE  69                 	db	105	;'i'
  5707  00FAAF  73                 	db	115	;'s'
  5708  00FAB0  20                 	db	32
  5709  00FAB1  74                 	db	116	;'t'
  5710  00FAB2  65                 	db	101	;'e'
  5711  00FAB3  78                 	db	120	;'x'
  5712  00FAB4  74                 	db	116	;'t'
  5713  00FAB5  20                 	db	32
  5714  00FAB6  69                 	db	105	;'i'
  5715  00FAB7  73                 	db	115	;'s'
  5716  00FAB8  20                 	db	32
  5717  00FAB9  63                 	db	99	;'c'
  5718  00FABA  79                 	db	121	;'y'
  5719  00FABB  61                 	db	97	;'a'
  5720  00FABC  6E                 	db	110	;'n'
  5721  00FABD  0A                 	db	10
  5722  00FABE  0D                 	db	13
  5723  00FABF  00                 	db	0
  5724  00FAC0                     STR_267:
  5725  00FAC0  20                 	db	32
  5726  00FAC1  20                 	db	32
  5727  00FAC2  20                 	db	32
  5728  00FAC3  20                 	db	32
  5729  00FAC4  53                 	db	83	;'S'
  5730  00FAC5  79                 	db	121	;'y'
  5731  00FAC6  73                 	db	115	;'s'
  5732  00FAC7  74                 	db	116	;'t'
  5733  00FAC8  65                 	db	101	;'e'
  5734  00FAC9  6D                 	db	109	;'m'
  5735  00FACA  20                 	db	32
  5736  00FACB  50                 	db	80	;'P'
  5737  00FACC  6F                 	db	111	;'o'
  5738  00FACD  77                 	db	119	;'w'
  5739  00FACE  65                 	db	101	;'e'
  5740  00FACF  72                 	db	114	;'r'
  5741  00FAD0  3A                 	db	58	;':'
  5742  00FAD1  0A                 	db	10
  5743  00FAD2  0D                 	db	13
  5744  00FAD3  00                 	db	0
  5745  00FAD4  54                 	db	84	;'T'
  5746  00FAD5  68                 	db	104	;'h'
  5747  00FAD6  69                 	db	105	;'i'
  5748  00FAD7  73                 	db	115	;'s'
  5749  00FAD8  20                 	db	32
  5750  00FAD9  74                 	db	116	;'t'
  5751  00FADA  65                 	db	101	;'e'
  5752  00FADB  78                 	db	120	;'x'
  5753  00FADC  74                 	db	116	;'t'
  5754  00FADD  20                 	db	32
  5755  00FADE  69                 	db	105	;'i'
  5756  00FADF  73                 	db	115	;'s'
  5757  00FAE0  20                 	db	32
  5758  00FAE1  72                 	db	114	;'r'
  5759  00FAE2  65                 	db	101	;'e'
  5760  00FAE3  64                 	db	100	;'d'
  5761  00FAE4  0A                 	db	10
  5762  00FAE5  0D                 	db	13
  5763  00FAE6  00                 	db	0
  5764  00FAE7                     STR_24:
  5765  00FAE7  4D                 	db	77	;'M'
  5766  00FAE8  61                 	db	97	;'a'
  5767  00FAE9  73                 	db	115	;'s'
  5768  00FAEA  74                 	db	116	;'t'
  5769  00FAEB  65                 	db	101	;'e'
  5770  00FAEC  72                 	db	114	;'r'
  5771  00FAED  20                 	db	32
  5772  00FAEE  43                 	db	67	;'C'
  5773  00FAEF  6C                 	db	108	;'l'
  5774  00FAF0  65                 	db	101	;'e'
  5775  00FAF1  61                 	db	97	;'a'
  5776  00FAF2  72                 	db	114	;'r'
  5777  00FAF3  20                 	db	32
  5778  00FAF4  52                 	db	82	;'R'
  5779  00FAF5  65                 	db	101	;'e'
  5780  00FAF6  73                 	db	115	;'s'
  5781  00FAF7  65                 	db	101	;'e'
  5782  00FAF8  74                 	db	116	;'t'
  5783  00FAF9  00                 	db	0
  5784  00FAFA  55                 	db	85	;'U'
  5785  00FAFB  53                 	db	83	;'S'
  5786  00FAFC  42                 	db	66	;'B'
  5787  00FAFD  20                 	db	32
  5788  00FAFE  55                 	db	85	;'U'
  5789  00FAFF  41                 	db	65	;'A'
  5790  00FB00  52                 	db	82	;'R'
  5791  00FB01  54                 	db	84	;'T'
  5792  00FB02  20                 	db	32
  5793  00FB03  54                 	db	84	;'T'
  5794  00FB04  65                 	db	101	;'e'
  5795  00FB05  73                 	db	115	;'s'
  5796  00FB06  74                 	db	116	;'t'
  5797  00FB07  0A                 	db	10
  5798  00FB08  0D                 	db	13
  5799  00FB09  0A                 	db	10
  5800  00FB0A  0D                 	db	13
  5801  00FB0B  00                 	db	0
  5802  00FB0C                     STR_217:
  5803  00FB0C  43                 	db	67	;'C'
  5804  00FB0D  6C                 	db	108	;'l'
  5805  00FB0E  65                 	db	101	;'e'
  5806  00FB0F  61                 	db	97	;'a'
  5807  00FB10  72                 	db	114	;'r'
  5808  00FB11  20                 	db	32
  5809  00FB12  55                 	db	85	;'U'
  5810  00FB13  41                 	db	65	;'A'
  5811  00FB14  52                 	db	82	;'R'
  5812  00FB15  54                 	db	84	;'T'
  5813  00FB16  20                 	db	32
  5814  00FB17  45                 	db	69	;'E'
  5815  00FB18  72                 	db	114	;'r'
  5816  00FB19  72                 	db	114	;'r'
  5817  00FB1A  6F                 	db	111	;'o'
  5818  00FB1B  72                 	db	114	;'r'
  5819  00FB1C  73                 	db	115	;'s'
  5820  00FB1D  00                 	db	0
  5821  00FB1E                     STR_359:
  5822  00FB1E  30                 	db	48	;'0'
  5823  00FB1F  31                 	db	49	;'1'
  5824  00FB20  32                 	db	50	;'2'
  5825  00FB21  33                 	db	51	;'3'
  5826  00FB22  34                 	db	52	;'4'
  5827  00FB23  35                 	db	53	;'5'
  5828  00FB24  36                 	db	54	;'6'
  5829  00FB25  37                 	db	55	;'7'
  5830  00FB26  38                 	db	56	;'8'
  5831  00FB27  39                 	db	57	;'9'
  5832  00FB28  41                 	db	65	;'A'
  5833  00FB29  42                 	db	66	;'B'
  5834  00FB2A  43                 	db	67	;'C'
  5835  00FB2B  44                 	db	68	;'D'
  5836  00FB2C  45                 	db	69	;'E'
  5837  00FB2D  46                 	db	70	;'F'
  5838  00FB2E  00                 	db	0
  5839  00FB2F                     STR_215:
  5840  00FB2F  43                 	db	67	;'C'
  5841  00FB30  6C                 	db	108	;'l'
  5842  00FB31  65                 	db	101	;'e'
  5843  00FB32  61                 	db	97	;'a'
  5844  00FB33  72                 	db	114	;'r'
  5845  00FB34  20                 	db	32
  5846  00FB35  49                 	db	73	;'I'
  5847  00FB36  32                 	db	50	;'2'
  5848  00FB37  43                 	db	67	;'C'
  5849  00FB38  20                 	db	32
  5850  00FB39  45                 	db	69	;'E'
  5851  00FB3A  72                 	db	114	;'r'
  5852  00FB3B  72                 	db	114	;'r'
  5853  00FB3C  6F                 	db	111	;'o'
  5854  00FB3D  72                 	db	114	;'r'
  5855  00FB3E  73                 	db	115	;'s'
  5856  00FB3F  00                 	db	0
  5857  00FB40                     STR_213:
  5858  00FB40  43                 	db	67	;'C'
  5859  00FB41  6C                 	db	108	;'l'
  5860  00FB42  65                 	db	101	;'e'
  5861  00FB43  61                 	db	97	;'a'
  5862  00FB44  72                 	db	114	;'r'
  5863  00FB45  20                 	db	32
  5864  00FB46  41                 	db	65	;'A'
  5865  00FB47  44                 	db	68	;'D'
  5866  00FB48  43                 	db	67	;'C'
  5867  00FB49  20                 	db	32
  5868  00FB4A  45                 	db	69	;'E'
  5869  00FB4B  72                 	db	114	;'r'
  5870  00FB4C  72                 	db	114	;'r'
  5871  00FB4D  6F                 	db	111	;'o'
  5872  00FB4E  72                 	db	114	;'r'
  5873  00FB4F  73                 	db	115	;'s'
  5874  00FB50  00                 	db	0
  5875  00FB51                     STR_74:
  5876  00FB51  76                 	db	118	;'v'
  5877  00FB52  69                 	db	105	;'i'
  5878  00FB53  61                 	db	97	;'a'
  5879  00FB54  20                 	db	32
  5880  00FB55  55                 	db	85	;'U'
  5881  00FB56  53                 	db	83	;'S'
  5882  00FB57  42                 	db	66	;'B'
  5883  00FB58  2C                 	db	44
  5884  00FB59  20                 	db	32
  5885  00FB5A  27                 	db	39
  5886  00FB5B  48                 	db	72	;'H'
  5887  00FB5C  65                 	db	101	;'e'
  5888  00FB5D  6C                 	db	108	;'l'
  5889  00FB5E  70                 	db	112	;'p'
  5890  00FB5F  27                 	db	39
  5891  00FB60  00                 	db	0
  5892  00FB61                     STR_67:
  5893  00FB61  43                 	db	67	;'C'
  5894  00FB62  4F                 	db	79	;'O'
  5895  00FB63  4D                 	db	77	;'M'
  5896  00FB64  20                 	db	32
  5897  00FB65  50                 	db	80	;'P'
  5898  00FB66  6F                 	db	111	;'o'
  5899  00FB67  72                 	db	114	;'r'
  5900  00FB68  74                 	db	116	;'t'
  5901  00FB69  20                 	db	32
  5902  00FB6A  53                 	db	83	;'S'
  5903  00FB6B  65                 	db	101	;'e'
  5904  00FB6C  74                 	db	116	;'t'
  5905  00FB6D  75                 	db	117	;'u'
  5906  00FB6E  70                 	db	112	;'p'
  5907  00FB6F  3A                 	db	58	;':'
  5908  00FB70  00                 	db	0
  5909  00FB71                     STR_62:
  5910  00FB71  43                 	db	67	;'C'
  5911  00FB72  61                 	db	97	;'a'
  5912  00FB73  75                 	db	117	;'u'
  5913  00FB74  73                 	db	115	;'s'
  5914  00FB75  65                 	db	101	;'e'
  5915  00FB76  20                 	db	32
  5916  00FB77  6F                 	db	111	;'o'
  5917  00FB78  66                 	db	102	;'f'
  5918  00FB79  20                 	db	32
  5919  00FB7A  52                 	db	82	;'R'
  5920  00FB7B  65                 	db	101	;'e'
  5921  00FB7C  73                 	db	115	;'s'
  5922  00FB7D  65                 	db	101	;'e'
  5923  00FB7E  74                 	db	116	;'t'
  5924  00FB7F  3A                 	db	58	;':'
  5925  00FB80  00                 	db	0
  5926  00FB81                     STR_61:
  5927  00FB81  44                 	db	68	;'D'
  5928  00FB82  69                 	db	105	;'i'
  5929  00FB83  67                 	db	103	;'g'
  5930  00FB84  69                 	db	105	;'i'
  5931  00FB85  74                 	db	116	;'t'
  5932  00FB86  61                 	db	97	;'a'
  5933  00FB87  6C                 	db	108	;'l'
  5934  00FB88  20                 	db	32
  5935  00FB89  4D                 	db	77	;'M'
  5936  00FB8A  6F                 	db	111	;'o'
  5937  00FB8B  6E                 	db	110	;'n'
  5938  00FB8C  69                 	db	105	;'i'
  5939  00FB8D  74                 	db	116	;'t'
  5940  00FB8E  6F                 	db	111	;'o'
  5941  00FB8F  72                 	db	114	;'r'
  5942  00FB90  00                 	db	0
  5943  00FB91                     STR_69:
  5944  00FB91  38                 	db	56	;'8'
  5945  00FB92  62                 	db	98	;'b'
  5946  00FB93  69                 	db	105	;'i'
  5947  00FB94  74                 	db	116	;'t'
  5948  00FB95  2C                 	db	44
  5949  00FB96  20                 	db	32
  5950  00FB97  6E                 	db	110	;'n'
  5951  00FB98  6F                 	db	111	;'o'
  5952  00FB99  20                 	db	32
  5953  00FB9A  70                 	db	112	;'p'
  5954  00FB9B  61                 	db	97	;'a'
  5955  00FB9C  72                 	db	114	;'r'
  5956  00FB9D  69                 	db	105	;'i'
  5957  00FB9E  74                 	db	116	;'t'
  5958  00FB9F  79                 	db	121	;'y'
  5959  00FBA0  00                 	db	0
  5960  00FBA1                     STR_21:
  5961  00FBA1  55                 	db	85	;'U'
  5962  00FBA2  6E                 	db	110	;'n'
  5963  00FBA3  64                 	db	100	;'d'
  5964  00FBA4  65                 	db	101	;'e'
  5965  00FBA5  66                 	db	102	;'f'
  5966  00FBA6  69                 	db	105	;'i'
  5967  00FBA7  6E                 	db	110	;'n'
  5968  00FBA8  65                 	db	101	;'e'
  5969  00FBA9  64                 	db	100	;'d'
  5970  00FBAA  20                 	db	32
  5971  00FBAB  52                 	db	82	;'R'
  5972  00FBAC  65                 	db	101	;'e'
  5973  00FBAD  73                 	db	115	;'s'
  5974  00FBAE  65                 	db	101	;'e'
  5975  00FBAF  74                 	db	116	;'t'
  5976  00FBB0  00                 	db	0
  5977  00FBB1                     STR_23:
  5978  00FBB1  42                 	db	66	;'B'
  5979  00FBB2  72                 	db	114	;'r'
  5980  00FBB3  6F                 	db	111	;'o'
  5981  00FBB4  77                 	db	119	;'w'
  5982  00FBB5  6E                 	db	110	;'n'
  5983  00FBB6  20                 	db	32
  5984  00FBB7  4F                 	db	79	;'O'
  5985  00FBB8  75                 	db	117	;'u'
  5986  00FBB9  74                 	db	116	;'t'
  5987  00FBBA  20                 	db	32
  5988  00FBBB  52                 	db	82	;'R'
  5989  00FBBC  65                 	db	101	;'e'
  5990  00FBBD  73                 	db	115	;'s'
  5991  00FBBE  65                 	db	101	;'e'
  5992  00FBBF  74                 	db	116	;'t'
  5993  00FBC0  00                 	db	0
  5994  00FBC1                     STR_197:
  5995  00FBC1  44                 	db	68	;'D'
  5996  00FBC2  65                 	db	101	;'e'
  5997  00FBC3  76                 	db	118	;'v'
  5998  00FBC4  69                 	db	105	;'i'
  5999  00FBC5  63                 	db	99	;'c'
  6000  00FBC6  65                 	db	101	;'e'
  6001  00FBC7  20                 	db	32
  6002  00FBC8  53                 	db	83	;'S'
  6003  00FBC9  74                 	db	116	;'t'
  6004  00FBCA  61                 	db	97	;'a'
  6005  00FBCB  74                 	db	116	;'t'
  6006  00FBCC  75                 	db	117	;'u'
  6007  00FBCD  73                 	db	115	;'s'
  6008  00FBCE  3F                 	db	63	;'?'
  6009  00FBCF  00                 	db	0
  6010  00FBD0                     STR_164:
  6011  00FBD0  4F                 	db	79	;'O'
  6012  00FBD1  75                 	db	117	;'u'
  6013  00FBD2  74                 	db	116	;'t'
  6014  00FBD3  70                 	db	112	;'p'
  6015  00FBD4  75                 	db	117	;'u'
  6016  00FBD5  74                 	db	116	;'t'
  6017  00FBD6  20                 	db	32
  6018  00FBD7  43                 	db	67	;'C'
  6019  00FBD8  68                 	db	104	;'h'
  6020  00FBD9  61                 	db	97	;'a'
  6021  00FBDA  72                 	db	114	;'r'
  6022  00FBDB  67                 	db	103	;'g'
  6023  00FBDC  65                 	db	101	;'e'
  6024  00FBDD  3A                 	db	58	;':'
  6025  00FBDE  00                 	db	0
  6026  00FBDF                     STR_75:
  6027  00FBDF  43                 	db	67	;'C'
  6028  00FBE0  68                 	db	104	;'h'
  6029  00FBE1  61                 	db	97	;'a'
  6030  00FBE2  72                 	db	114	;'r'
  6031  00FBE3  67                 	db	103	;'g'
  6032  00FBE4  65                 	db	101	;'e'
  6033  00FBE5  20                 	db	32
  6034  00FBE6  53                 	db	83	;'S'
  6035  00FBE7  74                 	db	116	;'t'
  6036  00FBE8  61                 	db	97	;'a'
  6037  00FBE9  74                 	db	116	;'t'
  6038  00FBEA  75                 	db	117	;'u'
  6039  00FBEB  73                 	db	115	;'s'
  6040  00FBEC  3A                 	db	58	;':'
  6041  00FBED  00                 	db	0
  6042  00FBEE                     STR_169:
  6043  00FBEE  4F                 	db	79	;'O'
  6044  00FBEF  75                 	db	117	;'u'
  6045  00FBF0  74                 	db	116	;'t'
  6046  00FBF1  70                 	db	112	;'p'
  6047  00FBF2  75                 	db	117	;'u'
  6048  00FBF3  74                 	db	116	;'t'
  6049  00FBF4  20                 	db	32
  6050  00FBF5  45                 	db	69	;'E'
  6051  00FBF6  6E                 	db	110	;'n'
  6052  00FBF7  65                 	db	101	;'e'
  6053  00FBF8  72                 	db	114	;'r'
  6054  00FBF9  67                 	db	103	;'g'
  6055  00FBFA  79                 	db	121	;'y'
  6056  00FBFB  3A                 	db	58	;':'
  6057  00FBFC  00                 	db	0
  6058  00FBFD                     STR_70:
  6059  00FBFD  31                 	db	49	;'1'
  6060  00FBFE  20                 	db	32
  6061  00FBFF  73                 	db	115	;'s'
  6062  00FC00  74                 	db	116	;'t'
  6063  00FC01  70                 	db	112	;'p'
  6064  00FC02  2C                 	db	44
  6065  00FC03  20                 	db	32
  6066  00FC04  6E                 	db	110	;'n'
  6067  00FC05  6F                 	db	111	;'o'
  6068  00FC06  20                 	db	32
  6069  00FC07  66                 	db	102	;'f'
  6070  00FC08  6C                 	db	108	;'l'
  6071  00FC09  6F                 	db	111	;'o'
  6072  00FC0A  77                 	db	119	;'w'
  6073  00FC0B  00                 	db	0
  6074  00FC0C                     STR_37:
  6075  00FC0C  52                 	db	82	;'R'
  6076  00FC0D  45                 	db	69	;'E'
  6077  00FC0E  53                 	db	83	;'S'
  6078  00FC0F  45                 	db	69	;'E'
  6079  00FC10  54                 	db	84	;'T'
  6080  00FC11  20                 	db	32
  6081  00FC12  45                 	db	69	;'E'
  6082  00FC13  78                 	db	120	;'x'
  6083  00FC14  65                 	db	101	;'e'
  6084  00FC15  63                 	db	99	;'c'
  6085  00FC16  75                 	db	117	;'u'
  6086  00FC17  74                 	db	116	;'t'
  6087  00FC18  65                 	db	101	;'e'
  6088  00FC19  64                 	db	100	;'d'
  6089  00FC1A  00                 	db	0
  6090  00FC1B                     STR_22:
  6091  00FC1B  50                 	db	80	;'P'
  6092  00FC1C  6F                 	db	111	;'o'
  6093  00FC1D  77                 	db	119	;'w'
  6094  00FC1E  65                 	db	101	;'e'
  6095  00FC1F  72                 	db	114	;'r'
  6096  00FC20  20                 	db	32
  6097  00FC21  4F                 	db	79	;'O'
  6098  00FC22  6E                 	db	110	;'n'
  6099  00FC23  20                 	db	32
  6100  00FC24  52                 	db	82	;'R'
  6101  00FC25  65                 	db	101	;'e'
  6102  00FC26  73                 	db	115	;'s'
  6103  00FC27  65                 	db	101	;'e'
  6104  00FC28  74                 	db	116	;'t'
  6105  00FC29  00                 	db	0
  6106  00FC2A                     STR_240:
  6107  00FC2A  20                 	db	32
  6108  00FC2B  20                 	db	32
  6109  00FC2C  20                 	db	32
  6110  00FC2D  20                 	db	32
  6111  00FC2E  20                 	db	32
  6112  00FC2F  20                 	db	32
  6113  00FC30  20                 	db	32
  6114  00FC31  20                 	db	32
  6115  00FC32  46                 	db	70	;'F'
  6116  00FC33  56                 	db	86	;'V'
  6117  00FC34  52                 	db	82	;'R'
  6118  00FC35  0A                 	db	10
  6119  00FC36  0D                 	db	13
  6120  00FC37  00                 	db	0
  6121  00FC38                     STR_219:
  6122  00FC38  45                 	db	69	;'E'
  6123  00FC39  72                 	db	114	;'r'
  6124  00FC3A  72                 	db	114	;'r'
  6125  00FC3B  6F                 	db	111	;'o'
  6126  00FC3C  72                 	db	114	;'r'
  6127  00FC3D  20                 	db	32
  6128  00FC3E  53                 	db	83	;'S'
  6129  00FC3F  74                 	db	116	;'t'
  6130  00FC40  61                 	db	97	;'a'
  6131  00FC41  74                 	db	116	;'t'
  6132  00FC42  75                 	db	117	;'u'
  6133  00FC43  73                 	db	115	;'s'
  6134  00FC44  3F                 	db	63	;'?'
  6135  00FC45  00                 	db	0
  6136  00FC46                     STR_60:
  6137  00FC46  51                 	db	81	;'Q'
  6138  00FC47  49                 	db	73	;'I'
  6139  00FC48  20                 	db	32
  6140  00FC49  43                 	db	67	;'C'
  6141  00FC4A  68                 	db	104	;'h'
  6142  00FC4B  61                 	db	97	;'a'
  6143  00FC4C  72                 	db	114	;'r'
  6144  00FC4D  67                 	db	103	;'g'
  6145  00FC4E  65                 	db	101	;'e'
  6146  00FC4F  72                 	db	114	;'r'
  6147  00FC50  20                 	db	32
  6148  00FC51  77                 	db	119	;'w'
  6149  00FC52  2F                 	db	47
  6150  00FC53  00                 	db	0
  6151  00FC54                     STR_78:
  6152  00FC54  2B                 	db	43
  6153  00FC55  31                 	db	49	;'1'
  6154  00FC56  32                 	db	50	;'2'
  6155  00FC57  56                 	db	86	;'V'
  6156  00FC58  20                 	db	32
  6157  00FC59  56                 	db	86	;'V'
  6158  00FC5A  6F                 	db	111	;'o'
  6159  00FC5B  6C                 	db	108	;'l'
  6160  00FC5C  74                 	db	116	;'t'
  6161  00FC5D  61                 	db	97	;'a'
  6162  00FC5E  67                 	db	103	;'g'
  6163  00FC5F  65                 	db	101	;'e'
  6164  00FC60  3A                 	db	58	;':'
  6165  00FC61  00                 	db	0
  6166  00FC62                     STR_135:
  6167  00FC62  44                 	db	68	;'D'
  6168  00FC63  65                 	db	101	;'e'
  6169  00FC64  76                 	db	118	;'v'
  6170  00FC65  2E                 	db	46
  6171  00FC66  20                 	db	32
  6172  00FC67  4F                 	db	79	;'O'
  6173  00FC68  6E                 	db	110	;'n'
  6174  00FC69  20                 	db	32
  6175  00FC6A  54                 	db	84	;'T'
  6176  00FC6B  69                 	db	105	;'i'
  6177  00FC6C  6D                 	db	109	;'m'
  6178  00FC6D  65                 	db	101	;'e'
  6179  00FC6E  3A                 	db	58	;':'
  6180  00FC6F  00                 	db	0
  6181  00FC70                     STR_117:
  6182  00FC70  41                 	db	65	;'A'
  6183  00FC71  6D                 	db	109	;'m'
  6184  00FC72  62                 	db	98	;'b'
  6185  00FC73  69                 	db	105	;'i'
  6186  00FC74  65                 	db	101	;'e'
  6187  00FC75  6E                 	db	110	;'n'
  6188  00FC76  74                 	db	116	;'t'
  6189  00FC77  20                 	db	32
  6190  00FC78  54                 	db	84	;'T'
  6191  00FC79  65                 	db	101	;'e'
  6192  00FC7A  6D                 	db	109	;'m'
  6193  00FC7B  70                 	db	112	;'p'
  6194  00FC7C  3A                 	db	58	;':'
  6195  00FC7D  00                 	db	0
  6196  00FC7E                     STR_125:
  6197  00FC7E  2B                 	db	43
  6198  00FC7F  35                 	db	53	;'5'
  6199  00FC80  56                 	db	86	;'V'
  6200  00FC81  20                 	db	32
  6201  00FC82  53                 	db	83	;'S'
  6202  00FC83  77                 	db	119	;'w'
  6203  00FC84  2E                 	db	46
  6204  00FC85  20                 	db	32
  6205  00FC86  46                 	db	70	;'F'
  6206  00FC87  72                 	db	114	;'r'
  6207  00FC88  65                 	db	101	;'e'
  6208  00FC89  71                 	db	113	;'q'
  6209  00FC8A  3A                 	db	58	;':'
  6210  00FC8B  00                 	db	0
  6211  00FC8C                     STR_99:
  6212  00FC8C  4F                 	db	79	;'O'
  6213  00FC8D  75                 	db	117	;'u'
  6214  00FC8E  74                 	db	116	;'t'
  6215  00FC8F  70                 	db	112	;'p'
  6216  00FC90  75                 	db	117	;'u'
  6217  00FC91  74                 	db	116	;'t'
  6218  00FC92  20                 	db	32
  6219  00FC93  50                 	db	80	;'P'
  6220  00FC94  6F                 	db	111	;'o'
  6221  00FC95  77                 	db	119	;'w'
  6222  00FC96  65                 	db	101	;'e'
  6223  00FC97  72                 	db	114	;'r'
  6224  00FC98  3A                 	db	58	;':'
  6225  00FC99  00                 	db	0
  6226  00FC9A                     STR_86:
  6227  00FC9A  2B                 	db	43
  6228  00FC9B  31                 	db	49	;'1'
  6229  00FC9C  32                 	db	50	;'2'
  6230  00FC9D  56                 	db	86	;'V'
  6231  00FC9E  20                 	db	32
  6232  00FC9F  43                 	db	67	;'C'
  6233  00FCA0  75                 	db	117	;'u'
  6234  00FCA1  72                 	db	114	;'r'
  6235  00FCA2  72                 	db	114	;'r'
  6236  00FCA3  65                 	db	101	;'e'
  6237  00FCA4  6E                 	db	110	;'n'
  6238  00FCA5  74                 	db	116	;'t'
  6239  00FCA6  3A                 	db	58	;':'
  6240  00FCA7  00                 	db	0
  6241  00FCA8                     STR_71:
  6242  00FCA8  42                 	db	66	;'B'
  6243  00FCA9  6F                 	db	111	;'o'
  6244  00FCAA  6F                 	db	111	;'o'
  6245  00FCAB  74                 	db	116	;'t'
  6246  00FCAC  20                 	db	32
  6247  00FCAD  43                 	db	67	;'C'
  6248  00FCAE  6F                 	db	111	;'o'
  6249  00FCAF  6D                 	db	109	;'m'
  6250  00FCB0  70                 	db	112	;'p'
  6251  00FCB1  6C                 	db	108	;'l'
  6252  00FCB2  65                 	db	101	;'e'
  6253  00FCB3  74                 	db	116	;'t'
  6254  00FCB4  65                 	db	101	;'e'
  6255  00FCB5  00                 	db	0
  6256  00FCB6                     STR_73:
  6257  00FCB6  4D                 	db	77	;'M'
  6258  00FCB7  6F                 	db	111	;'o'
  6259  00FCB8  72                 	db	114	;'r'
  6260  00FCB9  65                 	db	101	;'e'
  6261  00FCBA  20                 	db	32
  6262  00FCBB  53                 	db	83	;'S'
  6263  00FCBC  65                 	db	101	;'e'
  6264  00FCBD  74                 	db	116	;'t'
  6265  00FCBE  74                 	db	116	;'t'
  6266  00FCBF  69                 	db	105	;'i'
  6267  00FCC0  6E                 	db	110	;'n'
  6268  00FCC1  67                 	db	103	;'g'
  6269  00FCC2  73                 	db	115	;'s'
  6270  00FCC3  00                 	db	0
  6271  00FCC4                     STR_18:
  6272  00FCC4  46                 	db	70	;'F'
  6273  00FCC5  75                 	db	117	;'u'
  6274  00FCC6  6C                 	db	108	;'l'
  6275  00FCC7  6C                 	db	108	;'l'
  6276  00FCC8  79                 	db	121	;'y'
  6277  00FCC9  20                 	db	32
  6278  00FCCA  43                 	db	67	;'C'
  6279  00FCCB  68                 	db	104	;'h'
  6280  00FCCC  61                 	db	97	;'a'
  6281  00FCCD  72                 	db	114	;'r'
  6282  00FCCE  67                 	db	103	;'g'
  6283  00FCCF  65                 	db	101	;'e'
  6284  00FCD0  64                 	db	100	;'d'
  6285  00FCD1  00                 	db	0
  6286  00FCD2                     STR_13:
  6287  00FCD2  66                 	db	102	;'f'
  6288  00FCD3  75                 	db	117	;'u'
  6289  00FCD4  6C                 	db	108	;'l'
  6290  00FCD5  6C                 	db	108	;'l'
  6291  00FCD6  79                 	db	121	;'y'
  6292  00FCD7  20                 	db	32
  6293  00FCD8  63                 	db	99	;'c'
  6294  00FCD9  68                 	db	104	;'h'
  6295  00FCDA  61                 	db	97	;'a'
  6296  00FCDB  72                 	db	114	;'r'
  6297  00FCDC  67                 	db	103	;'g'
  6298  00FCDD  65                 	db	101	;'e'
  6299  00FCDE  64                 	db	100	;'d'
  6300  00FCDF  00                 	db	0
  6301  00FCE0                     STR_65:
  6302  00FCE0  52                 	db	82	;'R'
  6303  00FCE1  65                 	db	101	;'e'
  6304  00FCE2  76                 	db	118	;'v'
  6305  00FCE3  69                 	db	105	;'i'
  6306  00FCE4  73                 	db	115	;'s'
  6307  00FCE5  69                 	db	105	;'i'
  6308  00FCE6  6F                 	db	111	;'o'
  6309  00FCE7  6E                 	db	110	;'n'
  6310  00FCE8  20                 	db	32
  6311  00FCE9  49                 	db	73	;'I'
  6312  00FCEA  44                 	db	68	;'D'
  6313  00FCEB  3A                 	db	58	;':'
  6314  00FCEC  00                 	db	0
  6315  00FCED                     STR_82:
  6316  00FCED  2B                 	db	43
  6317  00FCEE  35                 	db	53	;'5'
  6318  00FCEF  56                 	db	86	;'V'
  6319  00FCF0  20                 	db	32
  6320  00FCF1  56                 	db	86	;'V'
  6321  00FCF2  6F                 	db	111	;'o'
  6322  00FCF3  6C                 	db	108	;'l'
  6323  00FCF4  74                 	db	116	;'t'
  6324  00FCF5  61                 	db	97	;'a'
  6325  00FCF6  67                 	db	103	;'g'
  6326  00FCF7  65                 	db	101	;'e'
  6327  00FCF8  3A                 	db	58	;':'
  6328  00FCF9  00                 	db	0
  6329  00FCFA                     STR_151:
  6330  00FCFA  43                 	db	67	;'C'
  6331  00FCFB  68                 	db	104	;'h'
  6332  00FCFC  61                 	db	97	;'a'
  6333  00FCFD  72                 	db	114	;'r'
  6334  00FCFE  67                 	db	103	;'g'
  6335  00FCFF  65                 	db	101	;'e'
  6336  00FD00  20                 	db	32
  6337  00FD01  54                 	db	84	;'T'
  6338  00FD02  69                 	db	105	;'i'
  6339  00FD03  6D                 	db	109	;'m'
  6340  00FD04  65                 	db	101	;'e'
  6341  00FD05  3A                 	db	58	;':'
  6342  00FD06  00                 	db	0
  6343  00FD07                     STR_130:
  6344  00FD07  51                 	db	81	;'Q'
  6345  00FD08  49                 	db	73	;'I'
  6346  00FD09  20                 	db	32
  6347  00FD0A  53                 	db	83	;'S'
  6348  00FD0B  77                 	db	119	;'w'
  6349  00FD0C  2E                 	db	46
  6350  00FD0D  20                 	db	32
  6351  00FD0E  46                 	db	70	;'F'
  6352  00FD0F  72                 	db	114	;'r'
  6353  00FD10  65                 	db	101	;'e'
  6354  00FD11  71                 	db	113	;'q'
  6355  00FD12  3A                 	db	58	;':'
  6356  00FD13  00                 	db	0
  6357  00FD14                     STR_95:
  6358  00FD14  49                 	db	73	;'I'
  6359  00FD15  6E                 	db	110	;'n'
  6360  00FD16  70                 	db	112	;'p'
  6361  00FD17  75                 	db	117	;'u'
  6362  00FD18  74                 	db	116	;'t'
  6363  00FD19  20                 	db	32
  6364  00FD1A  50                 	db	80	;'P'
  6365  00FD1B  6F                 	db	111	;'o'
  6366  00FD1C  77                 	db	119	;'w'
  6367  00FD1D  65                 	db	101	;'e'
  6368  00FD1E  72                 	db	114	;'r'
  6369  00FD1F  3A                 	db	58	;':'
  6370  00FD20  00                 	db	0
  6371  00FD21                     STR_91:
  6372  00FD21  4E                 	db	78	;'N'
  6373  00FD22  6F                 	db	111	;'o'
  6374  00FD23  74                 	db	116	;'t'
  6375  00FD24  20                 	db	32
  6376  00FD25  43                 	db	67	;'C'
  6377  00FD26  68                 	db	104	;'h'
  6378  00FD27  61                 	db	97	;'a'
  6379  00FD28  72                 	db	114	;'r'
  6380  00FD29  67                 	db	103	;'g'
  6381  00FD2A  69                 	db	105	;'i'
  6382  00FD2B  6E                 	db	110	;'n'
  6383  00FD2C  67                 	db	103	;'g'
  6384  00FD2D  00                 	db	0
  6385  00FD2E                     STR_187:
  6386  00FD2E  44                 	db	68	;'D'
  6387  00FD2F  72                 	db	114	;'r'
  6388  00FD30  65                 	db	101	;'e'
  6389  00FD31  77                 	db	119	;'w'
  6390  00FD32  20                 	db	32
  6391  00FD33  4D                 	db	77	;'M'
  6392  00FD34  61                 	db	97	;'a'
  6393  00FD35  61                 	db	97	;'a'
  6394  00FD36  74                 	db	116	;'t'
  6395  00FD37  6D                 	db	109	;'m'
  6396  00FD38  61                 	db	97	;'a'
  6397  00FD39  6E                 	db	110	;'n'
  6398  00FD3A  00                 	db	0
  6399  00FD3B                     STR_55:
  6400  00FD3B  25                 	db	37
  6401  00FD3C  64                 	db	100	;'d'
  6402  00FD3D  20                 	db	32
  6403  00FD3E  6D                 	db	109	;'m'
  6404  00FD3F  69                 	db	105	;'i'
  6405  00FD40  6E                 	db	110	;'n'
  6406  00FD41  75                 	db	117	;'u'
  6407  00FD42  74                 	db	116	;'t'
  6408  00FD43  65                 	db	101	;'e'
  6409  00FD44  73                 	db	115	;'s'
  6410  00FD45  2C                 	db	44
  6411  00FD46  20                 	db	32
  6412  00FD47  00                 	db	0
  6413  00FD48                     STR_45:
  6414  00FD48  50                 	db	80	;'P'
  6415  00FD49  49                 	db	73	;'I'
  6416  00FD4A  43                 	db	67	;'C'
  6417  00FD4B  31                 	db	49	;'1'
  6418  00FD4C  38                 	db	56	;'8'
  6419  00FD4D  4C                 	db	76	;'L'
  6420  00FD4E  46                 	db	70	;'F'
  6421  00FD4F  32                 	db	50	;'2'
  6422  00FD50  37                 	db	55	;'7'
  6423  00FD51  4B                 	db	75	;'K'
  6424  00FD52  34                 	db	52	;'4'
  6425  00FD53  30                 	db	48	;'0'
  6426  00FD54  00                 	db	0
  6427  00FD55                     STR_46:
  6428  00FD55  50                 	db	80	;'P'
  6429  00FD56  49                 	db	73	;'I'
  6430  00FD57  43                 	db	67	;'C'
  6431  00FD58  31                 	db	49	;'1'
  6432  00FD59  38                 	db	56	;'8'
  6433  00FD5A  4C                 	db	76	;'L'
  6434  00FD5B  46                 	db	70	;'F'
  6435  00FD5C  34                 	db	52	;'4'
  6436  00FD5D  37                 	db	55	;'7'
  6437  00FD5E  4B                 	db	75	;'K'
  6438  00FD5F  34                 	db	52	;'4'
  6439  00FD60  30                 	db	48	;'0'
  6440  00FD61  00                 	db	0
  6441  00FD62                     STR_42:
  6442  00FD62  50                 	db	80	;'P'
  6443  00FD63  49                 	db	73	;'I'
  6444  00FD64  43                 	db	67	;'C'
  6445  00FD65  31                 	db	49	;'1'
  6446  00FD66  38                 	db	56	;'8'
  6447  00FD67  4C                 	db	76	;'L'
  6448  00FD68  46                 	db	70	;'F'
  6449  00FD69  36                 	db	54	;'6'
  6450  00FD6A  37                 	db	55	;'7'
  6451  00FD6B  4B                 	db	75	;'K'
  6452  00FD6C  34                 	db	52	;'4'
  6453  00FD6D  30                 	db	48	;'0'
  6454  00FD6E  00                 	db	0
  6455  00FD6F                     STR_188:
  6456  00FD6F  53                 	db	83	;'S'
  6457  00FD70  70                 	db	112	;'p'
  6458  00FD71  72                 	db	114	;'r'
  6459  00FD72  69                 	db	105	;'i'
  6460  00FD73  6E                 	db	110	;'n'
  6461  00FD74  67                 	db	103	;'g'
  6462  00FD75  20                 	db	32
  6463  00FD76  32                 	db	50	;'2'
  6464  00FD77  30                 	db	48	;'0'
  6465  00FD78  31                 	db	49	;'1'
  6466  00FD79  39                 	db	57	;'9'
  6467  00FD7A  00                 	db	0
  6468  00FD7B                     STR_121:
  6469  00FD7B  4D                 	db	77	;'M'
  6470  00FD7C  69                 	db	105	;'i'
  6471  00FD7D  63                 	db	99	;'c'
  6472  00FD7E  72                 	db	114	;'r'
  6473  00FD7F  6F                 	db	111	;'o'
  6474  00FD80  20                 	db	32
  6475  00FD81  54                 	db	84	;'T'
  6476  00FD82  65                 	db	101	;'e'
  6477  00FD83  6D                 	db	109	;'m'
  6478  00FD84  70                 	db	112	;'p'
  6479  00FD85  3A                 	db	58	;':'
  6480  00FD86  00                 	db	0
  6481  00FD87                     STR_90:
  6482  00FD87  51                 	db	81	;'Q'
  6483  00FD88  49                 	db	73	;'I'
  6484  00FD89  20                 	db	32
  6485  00FD8A  43                 	db	67	;'C'
  6486  00FD8B  75                 	db	117	;'u'
  6487  00FD8C  72                 	db	114	;'r'
  6488  00FD8D  72                 	db	114	;'r'
  6489  00FD8E  65                 	db	101	;'e'
  6490  00FD8F  6E                 	db	110	;'n'
  6491  00FD90  74                 	db	116	;'t'
  6492  00FD91  3A                 	db	58	;':'
  6493  00FD92  00                 	db	0
  6494  00FD93                     STR_104:
  6495  00FD93  45                 	db	69	;'E'
  6496  00FD94  66                 	db	102	;'f'
  6497  00FD95  66                 	db	102	;'f'
  6498  00FD96  69                 	db	105	;'i'
  6499  00FD97  63                 	db	99	;'c'
  6500  00FD98  69                 	db	105	;'i'
  6501  00FD99  65                 	db	101	;'e'
  6502  00FD9A  6E                 	db	110	;'n'
  6503  00FD9B  63                 	db	99	;'c'
  6504  00FD9C  79                 	db	121	;'y'
  6505  00FD9D  3A                 	db	58	;':'
  6506  00FD9E  00                 	db	0
  6507  00FD9F                     STR_54:
  6508  00FD9F  25                 	db	37
  6509  00FDA0  64                 	db	100	;'d'
  6510  00FDA1  20                 	db	32
  6511  00FDA2  6D                 	db	109	;'m'
  6512  00FDA3  69                 	db	105	;'i'
  6513  00FDA4  6E                 	db	110	;'n'
  6514  00FDA5  75                 	db	117	;'u'
  6515  00FDA6  74                 	db	116	;'t'
  6516  00FDA7  65                 	db	101	;'e'
  6517  00FDA8  2C                 	db	44
  6518  00FDA9  20                 	db	32
  6519  00FDAA  00                 	db	0
  6520  00FDAB                     STR_43:
  6521  00FDAB  50                 	db	80	;'P'
  6522  00FDAC  49                 	db	73	;'I'
  6523  00FDAD  43                 	db	67	;'C'
  6524  00FDAE  31                 	db	49	;'1'
  6525  00FDAF  38                 	db	56	;'8'
  6526  00FDB0  46                 	db	70	;'F'
  6527  00FDB1  32                 	db	50	;'2'
  6528  00FDB2  37                 	db	55	;'7'
  6529  00FDB3  4B                 	db	75	;'K'
  6530  00FDB4  34                 	db	52	;'4'
  6531  00FDB5  30                 	db	48	;'0'
  6532  00FDB6  00                 	db	0
  6533  00FDB7                     STR_44:
  6534  00FDB7  50                 	db	80	;'P'
  6535  00FDB8  49                 	db	73	;'I'
  6536  00FDB9  43                 	db	67	;'C'
  6537  00FDBA  31                 	db	49	;'1'
  6538  00FDBB  38                 	db	56	;'8'
  6539  00FDBC  46                 	db	70	;'F'
  6540  00FDBD  34                 	db	52	;'4'
  6541  00FDBE  37                 	db	55	;'7'
  6542  00FDBF  4B                 	db	75	;'K'
  6543  00FDC0  34                 	db	52	;'4'
  6544  00FDC1  30                 	db	48	;'0'
  6545  00FDC2  00                 	db	0
  6546  00FDC3                     STR_41:
  6547  00FDC3  50                 	db	80	;'P'
  6548  00FDC4  49                 	db	73	;'I'
  6549  00FDC5  43                 	db	67	;'C'
  6550  00FDC6  31                 	db	49	;'1'
  6551  00FDC7  38                 	db	56	;'8'
  6552  00FDC8  46                 	db	70	;'F'
  6553  00FDC9  36                 	db	54	;'6'
  6554  00FDCA  37                 	db	55	;'7'
  6555  00FDCB  4B                 	db	75	;'K'
  6556  00FDCC  34                 	db	52	;'4'
  6557  00FDCD  30                 	db	48	;'0'
  6558  00FDCE  00                 	db	0
  6559  00FDCF  25                 	db	37
  6560  00FDD0  6C                 	db	108	;'l'
  6561  00FDD1  75                 	db	117	;'u'
  6562  00FDD2  2E                 	db	46
  6563  00FDD3  25                 	db	37
  6564  00FDD4  36                 	db	54	;'6'
  6565  00FDD5  2E                 	db	46
  6566  00FDD6  36                 	db	54	;'6'
  6567  00FDD7  6C                 	db	108	;'l'
  6568  00FDD8  75                 	db	117	;'u'
  6569  00FDD9  00                 	db	0
  6570  00FDDA                     STR_334:
  6571  00FDDA  1B                 	db	27
  6572  00FDDB  5B                 	db	91	;'['
  6573  00FDDC  30                 	db	48	;'0'
  6574  00FDDD  3B                 	db	59	;';'
  6575  00FDDE  33                 	db	51	;'3'
  6576  00FDDF  37                 	db	55	;'7'
  6577  00FDE0  3B                 	db	59	;';'
  6578  00FDE1  34                 	db	52	;'4'
  6579  00FDE2  30                 	db	48	;'0'
  6580  00FDE3  6D                 	db	109	;'m'
  6581  00FDE4  00                 	db	0
  6582  00FDE5                     STR_63:
  6583  00FDE5  44                 	db	68	;'D'
  6584  00FDE6  65                 	db	101	;'e'
  6585  00FDE7  76                 	db	118	;'v'
  6586  00FDE8  69                 	db	105	;'i'
  6587  00FDE9  63                 	db	99	;'c'
  6588  00FDEA  65                 	db	101	;'e'
  6589  00FDEB  20                 	db	32
  6590  00FDEC  49                 	db	73	;'I'
  6591  00FDED  44                 	db	68	;'D'
  6592  00FDEE  3A                 	db	58	;':'
  6593  00FDEF  00                 	db	0
  6594  00FDF0                     STR_72:
  6595  00FDF0  51                 	db	81	;'Q'
  6596  00FDF1  49                 	db	73	;'I'
  6597  00FDF2  20                 	db	32
  6598  00FDF3  45                 	db	69	;'E'
  6599  00FDF4  6E                 	db	110	;'n'
  6600  00FDF5  61                 	db	97	;'a'
  6601  00FDF6  62                 	db	98	;'b'
  6602  00FDF7  6C                 	db	108	;'l'
  6603  00FDF8  65                 	db	101	;'e'
  6604  00FDF9  64                 	db	100	;'d'
  6605  00FDFA  00                 	db	0
  6606  00FDFB                     STR_126:
  6607  00FDFB  42                 	db	66	;'B'
  6608  00FDFC  75                 	db	117	;'u'
  6609  00FDFD  72                 	db	114	;'r'
  6610  00FDFE  73                 	db	115	;'s'
  6611  00FDFF  74                 	db	116	;'t'
  6612  00FE00  20                 	db	32
  6613  00FE01  4D                 	db	77	;'M'
  6614  00FE02  6F                 	db	111	;'o'
  6615  00FE03  64                 	db	100	;'d'
  6616  00FE04  65                 	db	101	;'e'
  6617  00FE05  00                 	db	0
  6618  00FE06                     STR_144:
  6619  00FE06  25                 	db	37
  6620  00FE07  75                 	db	117	;'u'
  6621  00FE08  20                 	db	32
  6622  00FE09  73                 	db	115	;'s'
  6623  00FE0A  65                 	db	101	;'e'
  6624  00FE0B  63                 	db	99	;'c'
  6625  00FE0C  6F                 	db	111	;'o'
  6626  00FE0D  6E                 	db	110	;'n'
  6627  00FE0E  64                 	db	100	;'d'
  6628  00FE0F  73                 	db	115	;'s'
  6629  00FE10  00                 	db	0
  6630  00FE11                     STR_141:
  6631  00FE11  25                 	db	37
  6632  00FE12  75                 	db	117	;'u'
  6633  00FE13  20                 	db	32
  6634  00FE14  6D                 	db	109	;'m'
  6635  00FE15  69                 	db	105	;'i'
  6636  00FE16  6E                 	db	110	;'n'
  6637  00FE17  75                 	db	117	;'u'
  6638  00FE18  74                 	db	116	;'t'
  6639  00FE19  65                 	db	101	;'e'
  6640  00FE1A  73                 	db	115	;'s'
  6641  00FE1B  00                 	db	0
  6642  00FE1C                     STR_49:
  6643  00FE1C  25                 	db	37
  6644  00FE1D  64                 	db	100	;'d'
  6645  00FE1E  20                 	db	32
  6646  00FE1F  79                 	db	121	;'y'
  6647  00FE20  65                 	db	101	;'e'
  6648  00FE21  61                 	db	97	;'a'
  6649  00FE22  72                 	db	114	;'r'
  6650  00FE23  73                 	db	115	;'s'
  6651  00FE24  2C                 	db	44
  6652  00FE25  20                 	db	32
  6653  00FE26  00                 	db	0
  6654  00FE27                     STR_53:
  6655  00FE27  25                 	db	37
  6656  00FE28  64                 	db	100	;'d'
  6657  00FE29  20                 	db	32
  6658  00FE2A  68                 	db	104	;'h'
  6659  00FE2B  6F                 	db	111	;'o'
  6660  00FE2C  75                 	db	117	;'u'
  6661  00FE2D  72                 	db	114	;'r'
  6662  00FE2E  73                 	db	115	;'s'
  6663  00FE2F  2C                 	db	44
  6664  00FE30  20                 	db	32
  6665  00FE31  00                 	db	0
  6666  00FE32                     STR_57:
  6667  00FE32  25                 	db	37
  6668  00FE33  64                 	db	100	;'d'
  6669  00FE34  20                 	db	32
  6670  00FE35  73                 	db	115	;'s'
  6671  00FE36  65                 	db	101	;'e'
  6672  00FE37  63                 	db	99	;'c'
  6673  00FE38  6F                 	db	111	;'o'
  6674  00FE39  6E                 	db	110	;'n'
  6675  00FE3A  64                 	db	100	;'d'
  6676  00FE3B  73                 	db	115	;'s'
  6677  00FE3C  00                 	db	0
  6678  00FE3D                     STR_38:
  6679  00FE3D  53                 	db	83	;'S'
  6680  00FE3E  54                 	db	84	;'T'
  6681  00FE3F  4F                 	db	79	;'O'
  6682  00FE40  46                 	db	70	;'F'
  6683  00FE41  20                 	db	32
  6684  00FE42  52                 	db	82	;'R'
  6685  00FE43  65                 	db	101	;'e'
  6686  00FE44  73                 	db	115	;'s'
  6687  00FE45  65                 	db	101	;'e'
  6688  00FE46  74                 	db	116	;'t'
  6689  00FE47  00                 	db	0
  6690  00FE48                     STR_39:
  6691  00FE48  53                 	db	83	;'S'
  6692  00FE49  54                 	db	84	;'T'
  6693  00FE4A  55                 	db	85	;'U'
  6694  00FE4B  46                 	db	70	;'F'
  6695  00FE4C  20                 	db	32
  6696  00FE4D  52                 	db	82	;'R'
  6697  00FE4E  65                 	db	101	;'e'
  6698  00FE4F  73                 	db	115	;'s'
  6699  00FE50  65                 	db	101	;'e'
  6700  00FE51  74                 	db	116	;'t'
  6701  00FE52  00                 	db	0
  6702  00FE53                     STR_34:
  6703  00FE53  4D                 	db	77	;'M'
  6704  00FE54  43                 	db	67	;'C'
  6705  00FE55  4C                 	db	76	;'L'
  6706  00FE56  52                 	db	82	;'R'
  6707  00FE57  20                 	db	32
  6708  00FE58  52                 	db	82	;'R'
  6709  00FE59  65                 	db	101	;'e'
  6710  00FE5A  73                 	db	115	;'s'
  6711  00FE5B  65                 	db	101	;'e'
  6712  00FE5C  74                 	db	116	;'t'
  6713  00FE5D  00                 	db	0
  6714  00FE5E                     STR_36:
  6715  00FE5E  57                 	db	87	;'W'
  6716  00FE5F  57                 	db	87	;'W'
  6717  00FE60  44                 	db	68	;'D'
  6718  00FE61  54                 	db	84	;'T'
  6719  00FE62  20                 	db	32
  6720  00FE63  52                 	db	82	;'R'
  6721  00FE64  65                 	db	101	;'e'
  6722  00FE65  73                 	db	115	;'s'
  6723  00FE66  65                 	db	101	;'e'
  6724  00FE67  74                 	db	116	;'t'
  6725  00FE68  00                 	db	0
  6726  00FE69                     STR_113:
  6727  00FE69  2B                 	db	43
  6728  00FE6A  35                 	db	53	;'5'
  6729  00FE6B  56                 	db	86	;'V'
  6730  00FE6C  20                 	db	32
  6731  00FE6D  54                 	db	84	;'T'
  6732  00FE6E  65                 	db	101	;'e'
  6733  00FE6F  6D                 	db	109	;'m'
  6734  00FE70  70                 	db	112	;'p'
  6735  00FE71  3A                 	db	58	;':'
  6736  00FE72  00                 	db	0
  6737  00FE73                     STR_68:
  6738  00FE73  31                 	db	49	;'1'
  6739  00FE74  31                 	db	49	;'1'
  6740  00FE75  35                 	db	53	;'5'
  6741  00FE76  2E                 	db	46
  6742  00FE77  32                 	db	50	;'2'
  6743  00FE78  20                 	db	32
  6744  00FE79  6B                 	db	107	;'k'
  6745  00FE7A  62                 	db	98	;'b'
  6746  00FE7B  73                 	db	115	;'s'
  6747  00FE7C  00                 	db	0
  6748  00FE7D                     STR_48:
  6749  00FE7D  25                 	db	37
  6750  00FE7E  64                 	db	100	;'d'
  6751  00FE7F  20                 	db	32
  6752  00FE80  79                 	db	121	;'y'
  6753  00FE81  65                 	db	101	;'e'
  6754  00FE82  61                 	db	97	;'a'
  6755  00FE83  72                 	db	114	;'r'
  6756  00FE84  2C                 	db	44
  6757  00FE85  20                 	db	32
  6758  00FE86  00                 	db	0
  6759  00FE87                     STR_52:
  6760  00FE87  25                 	db	37
  6761  00FE88  64                 	db	100	;'d'
  6762  00FE89  20                 	db	32
  6763  00FE8A  68                 	db	104	;'h'
  6764  00FE8B  6F                 	db	111	;'o'
  6765  00FE8C  75                 	db	117	;'u'
  6766  00FE8D  72                 	db	114	;'r'
  6767  00FE8E  2C                 	db	44
  6768  00FE8F  20                 	db	32
  6769  00FE90  00                 	db	0
  6770  00FE91                     STR_51:
  6771  00FE91  25                 	db	37
  6772  00FE92  64                 	db	100	;'d'
  6773  00FE93  20                 	db	32
  6774  00FE94  64                 	db	100	;'d'
  6775  00FE95  61                 	db	97	;'a'
  6776  00FE96  79                 	db	121	;'y'
  6777  00FE97  73                 	db	115	;'s'
  6778  00FE98  2C                 	db	44
  6779  00FE99  20                 	db	32
  6780  00FE9A  00                 	db	0
  6781  00FE9B                     STR_56:
  6782  00FE9B  25                 	db	37
  6783  00FE9C  64                 	db	100	;'d'
  6784  00FE9D  20                 	db	32
  6785  00FE9E  73                 	db	115	;'s'
  6786  00FE9F  65                 	db	101	;'e'
  6787  00FEA0  63                 	db	99	;'c'
  6788  00FEA1  6F                 	db	111	;'o'
  6789  00FEA2  6E                 	db	110	;'n'
  6790  00FEA3  64                 	db	100	;'d'
  6791  00FEA4  00                 	db	0
  6792  00FEA5                     STR_33:
  6793  00FEA5  42                 	db	66	;'B'
  6794  00FEA6  4F                 	db	79	;'O'
  6795  00FEA7  52                 	db	82	;'R'
  6796  00FEA8  20                 	db	32
  6797  00FEA9  52                 	db	82	;'R'
  6798  00FEAA  65                 	db	101	;'e'
  6799  00FEAB  73                 	db	115	;'s'
  6800  00FEAC  65                 	db	101	;'e'
  6801  00FEAD  74                 	db	116	;'t'
  6802  00FEAE  00                 	db	0
  6803  00FEAF                     STR_32:
  6804  00FEAF  50                 	db	80	;'P'
  6805  00FEB0  4F                 	db	79	;'O'
  6806  00FEB1  52                 	db	82	;'R'
  6807  00FEB2  20                 	db	32
  6808  00FEB3  52                 	db	82	;'R'
  6809  00FEB4  65                 	db	101	;'e'
  6810  00FEB5  73                 	db	115	;'s'
  6811  00FEB6  65                 	db	101	;'e'
  6812  00FEB7  74                 	db	116	;'t'
  6813  00FEB8  00                 	db	0
  6814  00FEB9                     STR_20:
  6815  00FEB9  55                 	db	85	;'U'
  6816  00FEBA  6E                 	db	110	;'n'
  6817  00FEBB  64                 	db	100	;'d'
  6818  00FEBC  65                 	db	101	;'e'
  6819  00FEBD  66                 	db	102	;'f'
  6820  00FEBE  69                 	db	105	;'i'
  6821  00FEBF  6E                 	db	110	;'n'
  6822  00FEC0  65                 	db	101	;'e'
  6823  00FEC1  64                 	db	100	;'d'
  6824  00FEC2  00                 	db	0
  6825  00FEC3                     STR_15:
  6826  00FEC3  75                 	db	117	;'u'
  6827  00FEC4  6E                 	db	110	;'n'
  6828  00FEC5  64                 	db	100	;'d'
  6829  00FEC6  65                 	db	101	;'e'
  6830  00FEC7  66                 	db	102	;'f'
  6831  00FEC8  69                 	db	105	;'i'
  6832  00FEC9  6E                 	db	110	;'n'
  6833  00FECA  65                 	db	101	;'e'
  6834  00FECB  64                 	db	100	;'d'
  6835  00FECC  00                 	db	0
  6836  00FECD                     STR_293:
  6837  00FECD  2B                 	db	43
  6838  00FECE  25                 	db	37
  6839  00FECF  30                 	db	48	;'0'
  6840  00FED0  2E                 	db	46
  6841  00FED1  33                 	db	51	;'3'
  6842  00FED2  66                 	db	102	;'f'
  6843  00FED3  20                 	db	32
  6844  00FED4  4D                 	db	77	;'M'
  6845  00FED5  00                 	db	0
  6846  00FED6                     STR_294:
  6847  00FED6  2B                 	db	43
  6848  00FED7  25                 	db	37
  6849  00FED8  30                 	db	48	;'0'
  6850  00FED9  2E                 	db	46
  6851  00FEDA  33                 	db	51	;'3'
  6852  00FEDB  66                 	db	102	;'f'
  6853  00FEDC  20                 	db	32
  6854  00FEDD  6B                 	db	107	;'k'
  6855  00FEDE  00                 	db	0
  6856  00FEDF                     STR_296:
  6857  00FEDF  2B                 	db	43
  6858  00FEE0  25                 	db	37
  6859  00FEE1  30                 	db	48	;'0'
  6860  00FEE2  2E                 	db	46
  6861  00FEE3  33                 	db	51	;'3'
  6862  00FEE4  66                 	db	102	;'f'
  6863  00FEE5  20                 	db	32
  6864  00FEE6  6D                 	db	109	;'m'
  6865  00FEE7  00                 	db	0
  6866  00FEE8                     STR_298:
  6867  00FEE8  2B                 	db	43
  6868  00FEE9  25                 	db	37
  6869  00FEEA  30                 	db	48	;'0'
  6870  00FEEB  2E                 	db	46
  6871  00FEEC  33                 	db	51	;'3'
  6872  00FEED  66                 	db	102	;'f'
  6873  00FEEE  20                 	db	32
  6874  00FEEF  6E                 	db	110	;'n'
  6875  00FEF0  00                 	db	0
  6876  00FEF1                     STR_297:
  6877  00FEF1  2B                 	db	43
  6878  00FEF2  25                 	db	37
  6879  00FEF3  30                 	db	48	;'0'
  6880  00FEF4  2E                 	db	46
  6881  00FEF5  33                 	db	51	;'3'
  6882  00FEF6  66                 	db	102	;'f'
  6883  00FEF7  20                 	db	32
  6884  00FEF8  75                 	db	117	;'u'
  6885  00FEF9  00                 	db	0
  6886  00FEFA                     STR_106:
  6887  00FEFA  25                 	db	37
  6888  00FEFB  2B                 	db	43
  6889  00FEFC  2E                 	db	46
  6890  00FEFD  33                 	db	51	;'3'
  6891  00FEFE  66                 	db	102	;'f'
  6892  00FEFF  20                 	db	32
  6893  00FF00  25                 	db	37
  6894  00FF01  25                 	db	37
  6895  00FF02  00                 	db	0
  6896  00FF03                     STR_109:
  6897  00FF03  51                 	db	81	;'Q'
  6898  00FF04  49                 	db	73	;'I'
  6899  00FF05  20                 	db	32
  6900  00FF06  54                 	db	84	;'T'
  6901  00FF07  65                 	db	101	;'e'
  6902  00FF08  6D                 	db	109	;'m'
  6903  00FF09  70                 	db	112	;'p'
  6904  00FF0A  3A                 	db	58	;':'
  6905  00FF0B  00                 	db	0
  6906  00FF0C                     STR_136:
  6907  00FF0C  25                 	db	37
  6908  00FF0D  75                 	db	117	;'u'
  6909  00FF0E  20                 	db	32
  6910  00FF0F  79                 	db	121	;'y'
  6911  00FF10  65                 	db	101	;'e'
  6912  00FF11  61                 	db	97	;'a'
  6913  00FF12  72                 	db	114	;'r'
  6914  00FF13  73                 	db	115	;'s'
  6915  00FF14  00                 	db	0
  6916  00FF15                     STR_138:
  6917  00FF15  25                 	db	37
  6918  00FF16  75                 	db	117	;'u'
  6919  00FF17  20                 	db	32
  6920  00FF18  68                 	db	104	;'h'
  6921  00FF19  6F                 	db	111	;'o'
  6922  00FF1A  75                 	db	117	;'u'
  6923  00FF1B  72                 	db	114	;'r'
  6924  00FF1C  73                 	db	115	;'s'
  6925  00FF1D  00                 	db	0
  6926  00FF1E                     STR_127:
  6927  00FF1E  2B                 	db	43
  6928  00FF1F  32                 	db	50	;'2'
  6929  00FF20  2E                 	db	46
  6930  00FF21  35                 	db	53	;'5'
  6931  00FF22  20                 	db	32
  6932  00FF23  4D                 	db	77	;'M'
  6933  00FF24  48                 	db	72	;'H'
  6934  00FF25  7A                 	db	122	;'z'
  6935  00FF26  00                 	db	0
  6936  00FF27                     STR_50:
  6937  00FF27  25                 	db	37
  6938  00FF28  64                 	db	100	;'d'
  6939  00FF29  20                 	db	32
  6940  00FF2A  64                 	db	100	;'d'
  6941  00FF2B  61                 	db	97	;'a'
  6942  00FF2C  79                 	db	121	;'y'
  6943  00FF2D  2C                 	db	44
  6944  00FF2E  20                 	db	32
  6945  00FF2F  00                 	db	0
  6946  00FF30                     STR_12:
  6947  00FF30  63                 	db	99	;'c'
  6948  00FF31  68                 	db	104	;'h'
  6949  00FF32  61                 	db	97	;'a'
  6950  00FF33  72                 	db	114	;'r'
  6951  00FF34  67                 	db	103	;'g'
  6952  00FF35  69                 	db	105	;'i'
  6953  00FF36  6E                 	db	110	;'n'
  6954  00FF37  67                 	db	103	;'g'
  6955  00FF38  00                 	db	0
  6956  00FF39                     STR_295:
  6957  00FF39  2B                 	db	43
  6958  00FF3A  25                 	db	37
  6959  00FF3B  30                 	db	48	;'0'
  6960  00FF3C  2E                 	db	46
  6961  00FF3D  33                 	db	51	;'3'
  6962  00FF3E  66                 	db	102	;'f'
  6963  00FF3F  20                 	db	32
  6964  00FF40  00                 	db	0
  6965  00FF41                     STR_87:
  6966  00FF41  25                 	db	37
  6967  00FF42  2B                 	db	43
  6968  00FF43  2E                 	db	46
  6969  00FF44  33                 	db	51	;'3'
  6970  00FF45  66                 	db	102	;'f'
  6971  00FF46  20                 	db	32
  6972  00FF47  41                 	db	65	;'A'
  6973  00FF48  00                 	db	0
  6974  00FF49                     STR_110:
  6975  00FF49  25                 	db	37
  6976  00FF4A  2B                 	db	43
  6977  00FF4B  2E                 	db	46
  6978  00FF4C  33                 	db	51	;'3'
  6979  00FF4D  66                 	db	102	;'f'
  6980  00FF4E  20                 	db	32
  6981  00FF4F  43                 	db	67	;'C'
  6982  00FF50  00                 	db	0
  6983  00FF51                     STR_79:
  6984  00FF51  25                 	db	37
  6985  00FF52  2B                 	db	43
  6986  00FF53  2E                 	db	46
  6987  00FF54  33                 	db	51	;'3'
  6988  00FF55  66                 	db	102	;'f'
  6989  00FF56  20                 	db	32
  6990  00FF57  56                 	db	86	;'V'
  6991  00FF58  00                 	db	0
  6992  00FF59                     STR_96:
  6993  00FF59  25                 	db	37
  6994  00FF5A  2B                 	db	43
  6995  00FF5B  2E                 	db	46
  6996  00FF5C  33                 	db	51	;'3'
  6997  00FF5D  66                 	db	102	;'f'
  6998  00FF5E  20                 	db	32
  6999  00FF5F  57                 	db	87	;'W'
  7000  00FF60  00                 	db	0
  7001  00FF61                     STR_137:
  7002  00FF61  25                 	db	37
  7003  00FF62  75                 	db	117	;'u'
  7004  00FF63  20                 	db	32
  7005  00FF64  64                 	db	100	;'d'
  7006  00FF65  61                 	db	97	;'a'
  7007  00FF66  79                 	db	121	;'y'
  7008  00FF67  73                 	db	115	;'s'
  7009  00FF68  00                 	db	0
  7010  00FF69                     STR_358:
  7011  00FF69  28                 	db	40
  7012  00FF6A  6E                 	db	110	;'n'
  7013  00FF6B  75                 	db	117	;'u'
  7014  00FF6C  6C                 	db	108	;'l'
  7015  00FF6D  6C                 	db	108	;'l'
  7016  00FF6E  29                 	db	41
  7017  00FF6F  00                 	db	0
  7018  00FF70                     STR_66:
  7019  00FF70  25                 	db	37
  7020  00FF71  63                 	db	99	;'c'
  7021  00FF72  25                 	db	37
  7022  00FF73  30                 	db	48	;'0'
  7023  00FF74  33                 	db	51	;'3'
  7024  00FF75  64                 	db	100	;'d'
  7025  00FF76  00                 	db	0
  7026  00FF77                     STR_195:
  7027  00FF77  2A                 	db	42
  7028  00FF78  49                 	db	73	;'I'
  7029  00FF79  44                 	db	68	;'D'
  7030  00FF7A  4E                 	db	78	;'N'
  7031  00FF7B  3F                 	db	63	;'?'
  7032  00FF7C  00                 	db	0
  7033  00FF7D                     STR_192:
  7034  00FF7D  43                 	db	67	;'C'
  7035  00FF7E  6C                 	db	108	;'l'
  7036  00FF7F  65                 	db	101	;'e'
  7037  00FF80  61                 	db	97	;'a'
  7038  00FF81  72                 	db	114	;'r'
  7039  00FF82  00                 	db	0
  7040  00FF83                     STR_19:
  7041  00FF83  45                 	db	69	;'E'
  7042  00FF84  72                 	db	114	;'r'
  7043  00FF85  72                 	db	114	;'r'
  7044  00FF86  6F                 	db	111	;'o'
  7045  00FF87  72                 	db	114	;'r'
  7046  00FF88  00                 	db	0
  7047  00FF89                     STR_14:
  7048  00FF89  65                 	db	101	;'e'
  7049  00FF8A  72                 	db	114	;'r'
  7050  00FF8B  72                 	db	114	;'r'
  7051  00FF8C  6F                 	db	111	;'o'
  7052  00FF8D  72                 	db	114	;'r'
  7053  00FF8E  00                 	db	0
  7054  00FF8F                     STR_299:
  7055  00FF8F  30                 	db	48	;'0'
  7056  00FF90  2E                 	db	46
  7057  00FF91  30                 	db	48	;'0'
  7058  00FF92  20                 	db	32
  7059  00FF93  00                 	db	0
  7060  00FF94                     STR_190:
  7061  00FF94  1B                 	db	27
  7062  00FF95  5B                 	db	91	;'['
  7063  00FF96  32                 	db	50	;'2'
  7064  00FF97  4A                 	db	74	;'J'
  7065  00FF98  00                 	db	0
  7066  00FF99                     STR_224:
  7067  00FF99  48                 	db	72	;'H'
  7068  00FF9A  65                 	db	101	;'e'
  7069  00FF9B  6C                 	db	108	;'l'
  7070  00FF9C  70                 	db	112	;'p'
  7071  00FF9D  00                 	db	0
  7072  00FF9E                     STR_64:
  7073  00FF9E  30                 	db	48	;'0'
  7074  00FF9F  78                 	db	120	;'x'
  7075  00FFA0  25                 	db	37
  7076  00FFA1  58                 	db	88	;'X'
  7077  00FFA2  00                 	db	0
  7078  00FFA3                     STR_132:
  7079  00FFA3  25                 	db	37
  7080  00FFA4  73                 	db	115	;'s'
  7081  00FFA5  48                 	db	72	;'H'
  7082  00FFA6  7A                 	db	122	;'z'
  7083  00FFA7  00                 	db	0
  7084  00FFA8                     STR_16:
  7085  00FFA8  49                 	db	73	;'I'
  7086  00FFA9  64                 	db	100	;'d'
  7087  00FFAA  6C                 	db	108	;'l'
  7088  00FFAB  65                 	db	101	;'e'
  7089  00FFAC  00                 	db	0
  7090  00FFAD                     STR_11:
  7091  00FFAD  69                 	db	105	;'i'
  7092  00FFAE  64                 	db	100	;'d'
  7093  00FFAF  6C                 	db	108	;'l'
  7094  00FFB0  65                 	db	101	;'e'
  7095  00FFB1  00                 	db	0
  7096  00FFB2  1B                 	db	27
  7097  00FFB3  5B                 	db	91	;'['
  7098  00FFB4  73                 	db	115	;'s'
  7099  00FFB5  00                 	db	0
  7100  00FFB6  1B                 	db	27
  7101  00FFB7  5B                 	db	91	;'['
  7102  00FFB8  75                 	db	117	;'u'
  7103  00FFB9  00                 	db	0
  7104  00FFBA                     STR_191:
  7105  00FFBA  1B                 	db	27
  7106  00FFBB  5B                 	db	91	;'['
  7107  00FFBC  48                 	db	72	;'H'
  7108  00FFBD  00                 	db	0
  7109  00FFBE                     STR_166:
  7110  00FFBE  25                 	db	37
  7111  00FFBF  73                 	db	115	;'s'
  7112  00FFC0  43                 	db	67	;'C'
  7113  00FFC1  00                 	db	0
  7114  00FFC2                     STR_171:
  7115  00FFC2  25                 	db	37
  7116  00FFC3  73                 	db	115	;'s'
  7117  00FFC4  4A                 	db	74	;'J'
  7118  00FFC5  00                 	db	0
  7119  00FFC6                     STR_1:
  7120  00FFC6  1B                 	db	27
  7121  00FFC7  5B                 	db	91	;'['
  7122  00FFC8  4B                 	db	75	;'K'
  7123  00FFC9  00                 	db	0
  7124  00FFCA                     STR_314:
  7125  00FFCA  33                 	db	51	;'3'
  7126  00FFCB  30                 	db	48	;'0'
  7127  00FFCC  00                 	db	0
  7128  00FFCD                     STR_315:
  7129  00FFCD  33                 	db	51	;'3'
  7130  00FFCE  31                 	db	49	;'1'
  7131  00FFCF  00                 	db	0
  7132  00FFD0                     STR_325:
  7133  00FFD0  34                 	db	52	;'4'
  7134  00FFD1  31                 	db	49	;'1'
  7135  00FFD2  00                 	db	0
  7136  00FFD3                     STR_316:
  7137  00FFD3  33                 	db	51	;'3'
  7138  00FFD4  32                 	db	50	;'2'
  7139  00FFD5  00                 	db	0
  7140  00FFD6                     STR_326:
  7141  00FFD6  34                 	db	52	;'4'
  7142  00FFD7  32                 	db	50	;'2'
  7143  00FFD8  00                 	db	0
  7144  00FFD9                     STR_317:
  7145  00FFD9  33                 	db	51	;'3'
  7146  00FFDA  33                 	db	51	;'3'
  7147  00FFDB  00                 	db	0
  7148  00FFDC                     STR_327:
  7149  00FFDC  34                 	db	52	;'4'
  7150  00FFDD  33                 	db	51	;'3'
  7151  00FFDE  00                 	db	0
  7152  00FFDF                     STR_318:
  7153  00FFDF  33                 	db	51	;'3'
  7154  00FFE0  34                 	db	52	;'4'
  7155  00FFE1  00                 	db	0
  7156  00FFE2                     STR_328:
  7157  00FFE2  34                 	db	52	;'4'
  7158  00FFE3  34                 	db	52	;'4'
  7159  00FFE4  00                 	db	0
  7160  00FFE5                     STR_319:
  7161  00FFE5  33                 	db	51	;'3'
  7162  00FFE6  35                 	db	53	;'5'
  7163  00FFE7  00                 	db	0
  7164  00FFE8                     STR_329:
  7165  00FFE8  34                 	db	52	;'4'
  7166  00FFE9  35                 	db	53	;'5'
  7167  00FFEA  00                 	db	0
  7168  00FFEB                     STR_320:
  7169  00FFEB  33                 	db	51	;'3'
  7170  00FFEC  36                 	db	54	;'6'
  7171  00FFED  00                 	db	0
  7172  00FFEE                     STR_330:
  7173  00FFEE  34                 	db	52	;'4'
  7174  00FFEF  36                 	db	54	;'6'
  7175  00FFF0  00                 	db	0
  7176  00FFF1                     STR_321:
  7177  00FFF1  33                 	db	51	;'3'
  7178  00FFF2  37                 	db	55	;'7'
  7179  00FFF3  00                 	db	0
  7180  00FFF4                     STR_331:
  7181  00FFF4  34                 	db	52	;'4'
  7182  00FFF5  37                 	db	55	;'7'
  7183  00FFF6  00                 	db	0
  7184  00FFF7                     STR_305:
  7185  00FFF7  1B                 	db	27
  7186  00FFF8  5B                 	db	91	;'['
  7187  00FFF9  00                 	db	0
  7188  00FFFA                     STR_311:
  7189  00FFFA  38                 	db	56	;'8'
  7190  00FFFB  00                 	db	0
  7191  00FFFC                     STR_313:
  7192  00FFFC  3B                 	db	59	;';'
  7193  00FFFD  00                 	db	0
  7194  0000                     
  7195                           ; #config settings
  7196  00FFFE  00                 	db	0	; dummy byte at the end
  7197  0000                     
  7198                           	psect	nvBANK2
  7199  0002FF                     __pnvBANK2:
  7200                           	opt callstack 0
  7201  0002FF                     _reset_cause:
  7202                           	opt callstack 0
  7203  0002FF                     	ds	1
  7204  0000                     _SSP2BUF	set	3730
  7205  0000                     _SSP2CON2bits	set	3735
  7206  0000                     _SSP2CON1bits	set	3734
  7207  0000                     _SSP2ADD	set	3731
  7208  0000                     _SSP2CON3	set	3736
  7209  0000                     _SSP2CON1	set	3734
  7210  0000                     _SSP2STAT	set	3733
  7211  0000                     _PIR7bits	set	3793
  7212  0000                     _SSP2CLKPPS	set	3727
  7213  0000                     _RX2PPS	set	3725
  7214  0000                     _INT1PPS	set	3746
  7215  0000                     _INT2PPS	set	3747
  7216  0000                     _RB4PPS	set	3827
  7217  0000                     _RC4PPS	set	3835
  7218  0000                     _RB5PPS	set	3828
  7219  0000                     _SSP2DATPPS	set	3728
  7220  0000                     _CCP2PPS	set	3760
  7221  0000                     _PMD5	set	3814
  7222  0000                     _PMD4	set	3813
  7223  0000                     _PMD3	set	3812
  7224  0000                     _PMD2	set	3811
  7225  0000                     _PMD1	set	3810
  7226  0000                     _PMD0	set	3809
  7227  0000                     _OSCTUNE	set	3805
  7228  0000                     _OSCFRQ	set	3806
  7229  0000                     _OSCEN	set	3804
  7230  0000                     _OSCCON3	set	3802
  7231  0000                     _OSCCON1	set	3800
  7232  0000                     _PIR6bits	set	3792
  7233  0000                     _PIE6bits	set	3784
  7234  0000                     _PIR1bits	set	3787
  7235  0000                     _PIE1bits	set	3779
  7236  0000                     _PIR3bits	set	3789
  7237  0000                     _PIR4bits	set	3790
  7238  0000                     _PIE4bits	set	3782
  7239  0000                     _IPR6bits	set	3776
  7240  0000                     _IPR1bits	set	3771
  7241  0000                     _IPR3bits	set	3773
  7242  0000                     _IPR0bits	set	3770
  7243  0000                     _IPR4bits	set	3774
  7244  0000                     _RC2REG	set	3737
  7245  0000                     _RC2STAbits	set	3741
  7246  0000                     _TX2REG	set	3738
  7247  0000                     _TX2STAbits	set	3742
  7248  0000                     _SP2BRGH	set	3740
  7249  0000                     _SP2BRGL	set	3739
  7250  0000                     _TX2STA	set	3742
  7251  0000                     _RC2STA	set	3741
  7252  0000                     _BAUD2CON	set	3743
  7253  0000                     _PIE3bits	set	3781
  7254  0000                     _PIE0bits	set	3778
  7255  0000                     _PIR0bits	set	3786
  7256  0000                     _FVRCONbits	set	3889
  7257  0000                     _FVRCON	set	3889
  7258  0000                     _ADCON1bits	set	3929
  7259  0000                     _ADCON2bits	set	3930
  7260  0000                     _ADPRE	set	3934
  7261  0000                     _ADCON3bits	set	3931
  7262  0000                     _ADACQ	set	3932
  7263  0000                     _ADCLK	set	3927
  7264  0000                     _ADACT	set	3926
  7265  0000                     _ADREF	set	3928
  7266  0000                     _ADCON3	set	3931
  7267  0000                     _ADCON2	set	3930
  7268  0000                     _ADCON1	set	3929
  7269  0000                     _ADCAP	set	3933
  7270  0000                     _ADPCH	set	3935
  7271  0000                     _IOCBPbits	set	3860
  7272  0000                     _IOCBNbits	set	3859
  7273  0000                     _IOCBFbits	set	3858
  7274  0000                     _SLRCONC	set	3870
  7275  0000                     _SLRCONB	set	3862
  7276  0000                     _SLRCONA	set	3854
  7277  0000                     _ODCONC	set	3871
  7278  0000                     _ODCONB	set	3863
  7279  0000                     _ODCONA	set	3855
  7280  0000                     _WPUC	set	3872
  7281  0000                     _WPUA	set	3856
  7282  0000                     _WPUB	set	3864
  7283  0000                     _WPUE	set	3885
  7284  0000                     _ANSELA	set	3857
  7285  0000                     _ANSELB	set	3865
  7286  0000                     _ANSELC	set	3873
  7287  0000                     _T1GCONbits	set	4048
  7288  0000                     _T1CONbits	set	4047
  7289  0000                     _T1CON	set	4047
  7290  0000                     _TMR1L	set	4045
  7291  0000                     _TMR1H	set	4046
  7292  0000                     _T1CLK	set	4050
  7293  0000                     _T1GATE	set	4049
  7294  0000                     _T1GCON	set	4048
  7295  0000                     _CCP2CONbits	set	4008
  7296  0000                     _LATBbits	set	3972
  7297  0000                     _PCON0bits	set	4055
  7298  0000                     _PORTBbits	set	3982
  7299  0000                     _LATCbits	set	3973
  7300  0000                     _T5GCONbits	set	4036
  7301  0000                     _T5CON	set	4035
  7302  0000                     _T5CLK	set	4038
  7303  0000                     _T5GATE	set	4037
  7304  0000                     _T5GCON	set	4036
  7305  0000                     _T5CONbits	set	4035
  7306  0000                     _TMR5L	set	4033
  7307  0000                     _TMR5H	set	4034
  7308  0000                     _CCPTMRSbits	set	4014
  7309  0000                     _CCPR2L	set	4006
  7310  0000                     _CCPR2H	set	4007
  7311  0000                     _CCP2CAP	set	4009
  7312  0000                     _CCP2CON	set	4008
  7313  0000                     _T3GCONbits	set	4042
  7314  0000                     _T3CONbits	set	4041
  7315  0000                     _T3CON	set	4041
  7316  0000                     _TMR3L	set	4039
  7317  0000                     _TMR3H	set	4040
  7318  0000                     _T3CLK	set	4044
  7319  0000                     _T3GATE	set	4043
  7320  0000                     _T3GCON	set	4042
  7321  0000                     _PR2	set	4028
  7322  0000                     _TMR2	set	4027
  7323  0000                     _T2CONbits	set	4029
  7324  0000                     _T2RSTbits	set	4032
  7325  0000                     _T2HLTbits	set	4030
  7326  0000                     _T2CON	set	4029
  7327  0000                     _T2TMR	set	4027
  7328  0000                     _T2PR	set	4028
  7329  0000                     _T2RST	set	4032
  7330  0000                     _T2HLT	set	4030
  7331  0000                     _T2CLKCON	set	4031
  7332  0000                     _NVMDAT	set	3968
  7333  0000                     _NVMADRL	set	3966
  7334  0000                     _NVMADRH	set	3967
  7335  0000                     _NVMCON2	set	3970
  7336  0000                     _TABLAT	set	4085
  7337  0000                     _TBLPTRL	set	4086
  7338  0000                     _TBLPTRH	set	4087
  7339  0000                     _TBLPTRU	set	4088
  7340  0000                     _NVMCON1bits	set	3969
  7341  0000                     _T0CON0bits	set	4053
  7342  0000                     _T0CON0	set	4053
  7343  0000                     _TMR0L	set	4051
  7344  0000                     _TMR0H	set	4052
  7345  0000                     _T0CON1	set	4054
  7346  0000                     _ADERRL	set	3950
  7347  0000                     _ADERRH	set	3951
  7348  0000                     _ADPREVL	set	3937
  7349  0000                     _ADPREVH	set	3938
  7350  0000                     _ADFLTRL	set	3954
  7351  0000                     _ADFLTRH	set	3955
  7352  0000                     _ADSTATbits	set	3941
  7353  0000                     _ADACCL	set	3952
  7354  0000                     _ADACCH	set	3953
  7355  0000                     _ADCNT	set	3943
  7356  0000                     _ADRESL	set	3939
  7357  0000                     _ADRESH	set	3940
  7358  0000                     _ADCON0bits	set	3936
  7359  0000                     _ADCON0	set	3936
  7360  0000                     _ADSTAT	set	3941
  7361  0000                     _ADRPT	set	3942
  7362  0000                     _ADSTPTH	set	3945
  7363  0000                     _ADSTPTL	set	3944
  7364  0000                     _ADUTHH	set	3949
  7365  0000                     _ADUTHL	set	3948
  7366  0000                     _ADLTHH	set	3947
  7367  0000                     _ADLTHL	set	3946
  7368  0000                     _TRISC	set	3978
  7369  0000                     _TRISB	set	3977
  7370  0000                     _TRISA	set	3976
  7371  0000                     _LATC	set	3973
  7372  0000                     _LATB	set	3972
  7373  0000                     _LATA	set	3971
  7374  0000                     _INTCONbits	set	4082
  7375                           
  7376                           	psect	cinit
  7377  01ACE6                     __pcinit:
  7378                           	opt callstack 0
  7379  01ACE6                     start_initialization:
  7380                           	opt callstack 0
  7381  01ACE6                     __initialization:
  7382                           	opt callstack 0
  7383                           
  7384                           ; Initialize objects allocated to BANK2 (18 bytes)
  7385                           ; load TBLPTR registers with __pidataBANK2
  7386  01ACE6  0E42               	movlw	low __pidataBANK2
  7387  01ACE8  6EF6               	movwf	tblptrl,c
  7388  01ACEA  0EC9               	movlw	high __pidataBANK2
  7389  01ACEC  6EF7               	movwf	tblptrh,c
  7390  01ACEE  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  7391  01ACF0  6EF8               	movwf	tblptru,c
  7392  01ACF2  EE02  F0ED         	lfsr	0,__pdataBANK2
  7393  01ACF6  EE10 F012          	lfsr	1,18
  7394  01ACFA                     copy_data0:
  7395  01ACFA  0009               	tblrd		*+
  7396  01ACFC  CFF5 FFEE          	movff	tablat,postinc0
  7397  01AD00  50E5               	movf	postdec1,w,c
  7398  01AD02  50E1               	movf	fsr1l,w,c
  7399  01AD04  E1FA               	bnz	copy_data0
  7400                           
  7401                           ; Initialize objects allocated to BANK1 (18 bytes)
  7402                           ; load TBLPTR registers with __pidataBANK1
  7403  01AD06  0E30               	movlw	low __pidataBANK1
  7404  01AD08  6EF6               	movwf	tblptrl,c
  7405  01AD0A  0EC9               	movlw	high __pidataBANK1
  7406  01AD0C  6EF7               	movwf	tblptrh,c
  7407  01AD0E  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  7408  01AD10  6EF8               	movwf	tblptru,c
  7409  01AD12  EE01  F0A3         	lfsr	0,__pdataBANK1
  7410  01AD16  EE10 F012          	lfsr	1,18
  7411  01AD1A                     copy_data1:
  7412  01AD1A  0009               	tblrd		*+
  7413  01AD1C  CFF5 FFEE          	movff	tablat,postinc0
  7414  01AD20  50E5               	movf	postdec1,w,c
  7415  01AD22  50E1               	movf	fsr1l,w,c
  7416  01AD24  E1FA               	bnz	copy_data1
  7417                           
  7418                           ; Initialize objects allocated to BANK0 (2 bytes)
  7419                           ; load TBLPTR registers with __pidataBANK0
  7420  01AD26  0E30               	movlw	low __pidataBANK0
  7421  01AD28  6EF6               	movwf	tblptrl,c
  7422  01AD2A  0ECB               	movlw	high __pidataBANK0
  7423  01AD2C  6EF7               	movwf	tblptrh,c
  7424  01AD2E  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  7425  01AD30  6EF8               	movwf	tblptru,c
  7426  01AD32  0009               	tblrd		*+	;fetch initializer
  7427  01AD34  CFF5 F0FD          	movff	tablat,__pdataBANK0
  7428  01AD38  0009               	tblrd		*+	;fetch initializer
  7429  01AD3A  CFF5 F0FE          	movff	tablat,__pdataBANK0+1
  7430                           
  7431                           ; Clear objects allocated to BANK4 (256 bytes)
  7432  01AD3E  EE04  F000         	lfsr	0,__pbssBANK4
  7433  01AD42  EE11 F000          	lfsr	1,256
  7434  01AD46                     clear_0:
  7435  01AD46  6AEE               	clrf	postinc0,c
  7436  01AD48  50E5               	movf	postdec1,w,c
  7437  01AD4A  50E1               	movf	fsr1l,w,c
  7438  01AD4C  E1FC               	bnz	clear_0
  7439  01AD4E  50E2               	movf	fsr1h,w,c
  7440  01AD50  E1FA               	bnz	clear_0
  7441                           
  7442                           ; Clear objects allocated to BANK3 (209 bytes)
  7443  01AD52  EE03  F000         	lfsr	0,__pbssBANK3
  7444  01AD56  0ED1               	movlw	209
  7445  01AD58                     clear_1:
  7446  01AD58  6AEE               	clrf	postinc0,c
  7447  01AD5A  06E8               	decf	wreg,f,c
  7448  01AD5C  E1FD               	bnz	clear_1
  7449                           
  7450                           ; Clear objects allocated to BANK2 (46 bytes)
  7451  01AD5E  EE02  F0BF         	lfsr	0,__pbssBANK2
  7452  01AD62  0E2E               	movlw	46
  7453  01AD64                     clear_2:
  7454  01AD64  6AEE               	clrf	postinc0,c
  7455  01AD66  06E8               	decf	wreg,f,c
  7456  01AD68  E1FD               	bnz	clear_2
  7457                           
  7458                           ; Clear objects allocated to BANK1 (66 bytes)
  7459  01AD6A  EE01  F061         	lfsr	0,__pbssBANK1
  7460  01AD6E  0E42               	movlw	66
  7461  01AD70                     clear_3:
  7462  01AD70  6AEE               	clrf	postinc0,c
  7463  01AD72  06E8               	decf	wreg,f,c
  7464  01AD74  E1FD               	bnz	clear_3
  7465                           
  7466                           ; Clear objects allocated to BITBANK0 (1 bytes)
  7467  01AD76  0100               	movlb	0
  7468  01AD78  6BFF               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
  7469                           
  7470                           ; Clear objects allocated to BANK0 (68 bytes)
  7471  01AD7A  EE00  F0B9         	lfsr	0,__pbssBANK0
  7472  01AD7E  0E44               	movlw	68
  7473  01AD80                     clear_4:
  7474  01AD80  6AEE               	clrf	postinc0,c
  7475  01AD82  06E8               	decf	wreg,f,c
  7476  01AD84  E1FD               	bnz	clear_4
  7477  01AD86                     end_of_initialization:
  7478                           	opt callstack 0
  7479  01AD86                     __end_of__initialization:
  7480                           	opt callstack 0
  7481  01AD86  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  7482  01AD88  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7483  01AD8A  0100               	movlb	0
  7484  01AD8C  EF56  F0C6         	goto	_main	;jump to C main() function
  7485                           
  7486                           	psect	bitbssBANK0
  7487  0007F8                     __pbitbssBANK0:
  7488                           	opt callstack 0
  7489  0007F8                     _eusart2RxStringReady:
  7490                           	opt callstack 0
  7491  0007F8                     	ds	1
  7492                           
  7493                           	psect	bssBANK0
  7494  0000B9                     __pbssBANK0:
  7495                           	opt callstack 0
  7496  0000B9                     _error_handler:
  7497                           	opt callstack 0
  7498  0000B9                     	ds	8
  7499  0000C1                     _adc_result_scaling:
  7500                           	opt callstack 0
  7501  0000C1                     	ds	4
  7502  0000C5                     _device_on_time:
  7503                           	opt callstack 0
  7504  0000C5                     	ds	4
  7505  0000C9                     _TMR0_InterruptHandler:
  7506                           	opt callstack 0
  7507  0000C9                     	ds	3
  7508  0000CC                     _ADCC_ADTI_InterruptHandler:
  7509                           	opt callstack 0
  7510  0000CC                     	ds	3
  7511  0000CF                     _EUSART2_RxDefaultInterruptHandler:
  7512                           	opt callstack 0
  7513  0000CF                     	ds	3
  7514  0000D2                     I2C2_ISR@pi2c_buf_ptr:
  7515                           	opt callstack 0
  7516  0000D2                     	ds	2
  7517  0000D4                     _p_i2c2_current:
  7518                           	opt callstack 0
  7519  0000D4                     	ds	2
  7520  0000D6                     _p_i2c2_trb_current:
  7521                           	opt callstack 0
  7522  0000D6                     	ds	2
  7523  0000D8                     _qi_isns_average_index:
  7524                           	opt callstack 0
  7525  0000D8                     	ds	1
  7526  0000D9                     _pos12_isns_average_index:
  7527                           	opt callstack 0
  7528  0000D9                     	ds	1
  7529  0000DA                     I2C2_ISR@i2c_10bit_address_restart:
  7530                           	opt callstack 0
  7531  0000DA                     	ds	1
  7532  0000DB                     I2C2_ISR@i2c_bytes_left:
  7533                           	opt callstack 0
  7534  0000DB                     	ds	1
  7535  0000DC                     _i2c2_trb_count:
  7536                           	opt callstack 0
  7537  0000DC                     	ds	1
  7538  0000DD                     _i2c2_state:
  7539                           	opt callstack 0
  7540  0000DD                     	ds	1
  7541  0000DE                     _eusart2RxHead:
  7542                           	opt callstack 0
  7543  0000DE                     	ds	1
  7544  0000DF                     _adc_results:
  7545                           	opt callstack 0
  7546  0000DF                     	ds	28
  7547  0000FB                     I2C2_ISR@i2c_address:
  7548                           	opt callstack 0
  7549  0000FB                     	ds	2
  7550                           
  7551                           	psect	dataBANK0
  7552  0000FD                     __pdataBANK0:
  7553                           	opt callstack 0
  7554  0000FD                     _OLED_update_time:
  7555                           	opt callstack 0
  7556  0000FD                     	ds	1
  7557  0000FE                     _next_adc_channel:
  7558                           	opt callstack 0
  7559  0000FE                     	ds	1
  7560                           
  7561                           	psect	bssBANK1
  7562  000161                     __pbssBANK1:
  7563                           	opt callstack 0
  7564  000161                     _i2c2_object:
  7565                           	opt callstack 0
  7566  000161                     	ds	7
  7567  000168                     _freq_meas_results:
  7568                           	opt callstack 0
  7569  000168                     	ds	6
  7570  00016E                     _TMR1_InterruptHandler:
  7571                           	opt callstack 0
  7572  00016E                     	ds	3
  7573  000171                     _TMR3_InterruptHandler:
  7574                           	opt callstack 0
  7575  000171                     	ds	3
  7576  000174                     _TMR2_InterruptHandler:
  7577                           	opt callstack 0
  7578  000174                     	ds	3
  7579  000177                     _IOCBF3_InterruptHandler:
  7580                           	opt callstack 0
  7581  000177                     	ds	3
  7582  00017A                     _IOCBF2_InterruptHandler:
  7583                           	opt callstack 0
  7584  00017A                     	ds	3
  7585  00017D                     _EUSART2_TxDefaultInterruptHandler:
  7586                           	opt callstack 0
  7587  00017D                     	ds	3
  7588  000180                     _INT2_InterruptHandler:
  7589                           	opt callstack 0
  7590  000180                     	ds	3
  7591  000183                     _INT1_InterruptHandler:
  7592                           	opt callstack 0
  7593  000183                     	ds	3
  7594  000186                     _timer1ReloadVal:
  7595                           	opt callstack 0
  7596  000186                     	ds	2
  7597  000188                     _timer5ReloadVal:
  7598                           	opt callstack 0
  7599  000188                     	ds	2
  7600  00018A                     _timer3ReloadVal:
  7601                           	opt callstack 0
  7602  00018A                     	ds	2
  7603  00018C                     _nxq_charge_state:
  7604                           	opt callstack 0
  7605  00018C                     	ds	1
  7606  00018D                     _QI_current_edge:
  7607                           	opt callstack 0
  7608  00018D                     	ds	1
  7609  00018E                     _eusart2RxCount:
  7610                           	opt callstack 0
  7611  00018E                     	ds	1
  7612  00018F                     _eusart2RxTail:
  7613                           	opt callstack 0
  7614  00018F                     	ds	1
  7615  000190                     _eusart2TxBufferRemaining:
  7616                           	opt callstack 0
  7617  000190                     	ds	1
  7618  000191                     _eusart2TxTail:
  7619                           	opt callstack 0
  7620  000191                     	ds	1
  7621  000192                     _eusart2TxHead:
  7622                           	opt callstack 0
  7623  000192                     	ds	1
  7624  000193                     I2C2_MasterRead@trBlock:
  7625                           	opt callstack 0
  7626  000193                     	ds	5
  7627  000198                     I2C2_MasterWrite@trBlock:
  7628                           	opt callstack 0
  7629  000198                     	ds	5
  7630  00019D                     _i2c2_tr_queue:
  7631                           	opt callstack 0
  7632  00019D                     	ds	5
  7633  0001A2                     _I2C_STATUS:
  7634                           	opt callstack 0
  7635  0001A2                     	ds	1
  7636                           
  7637                           	psect	dataBANK1
  7638  0001A3                     __pdataBANK1:
  7639                           	opt callstack 0
  7640  0001A3                     getCauseOfResetString@strings:
  7641                           	opt callstack 0
  7642  0001A3                     	ds	18
  7643                           
  7644                           	psect	bssBANK2
  7645  0002BF                     __pbssBANK2:
  7646                           	opt callstack 0
  7647  0002BF                     _adc_calculations:
  7648                           	opt callstack 0
  7649  0002BF                     	ds	20
  7650  0002D3                     _QI_charge_time:
  7651                           	opt callstack 0
  7652  0002D3                     	ds	4
  7653  0002D7                     _OLED_update_flag:
  7654                           	opt callstack 0
  7655  0002D7                     	ds	1
  7656  0002D8                     _OLED_Frame:
  7657                           	opt callstack 0
  7658  0002D8                     	ds	1
  7659  0002D9                     _LM73_start_flag:
  7660                           	opt callstack 0
  7661  0002D9                     	ds	1
  7662  0002DA                     _freq_meas_start_flag:
  7663                           	opt callstack 0
  7664  0002DA                     	ds	1
  7665  0002DB                     _LM73_temp_results:
  7666                           	opt callstack 0
  7667  0002DB                     	ds	18
  7668                           
  7669                           	psect	dataBANK2
  7670  0002ED                     __pdataBANK2:
  7671                           	opt callstack 0
  7672  0002ED                     getCauseOfResetStringSmall@strings:
  7673                           	opt callstack 0
  7674  0002ED                     	ds	18
  7675                           
  7676                           	psect	bssBANK3
  7677  000300                     __pbssBANK3:
  7678                           	opt callstack 0
  7679  000300                     _OLED_RAM_Buffer:
  7680                           	opt callstack 0
  7681  000300                     	ds	68
  7682  000344                     _line:
  7683                           	opt callstack 0
  7684  000344                     	ds	64
  7685  000384                     getStringSecondsAsTime@return_string:
  7686                           	opt callstack 0
  7687  000384                     	ds	40
  7688  0003AC                     floatToEngineeringFormat@result:
  7689                           	opt callstack 0
  7690  0003AC                     	ds	20
  7691  0003C0                     ftoa@buf:
  7692                           	opt callstack 0
  7693  0003C0                     	ds	17
  7694                           
  7695                           	psect	bssBANK4
  7696  000400                     __pbssBANK4:
  7697                           	opt callstack 0
  7698  000400                     _qi_isns_average_buffer:
  7699                           	opt callstack 0
  7700  000400                     	ds	64
  7701  000440                     _pos12_isns_average_buffer:
  7702                           	opt callstack 0
  7703  000440                     	ds	64
  7704  000480                     _eusart2RxBuffer:
  7705                           	opt callstack 0
  7706  000480                     	ds	64
  7707  0004C0                     _eusart2TxBuffer:
  7708                           	opt callstack 0
  7709  0004C0                     	ds	64
  7710                           
  7711                           	psect	cstackBANK5
  7712  000500                     __pcstackBANK5:
  7713                           	opt callstack 0
  7714  000500                     terminalTextAttributes@foreground_color:
  7715                           	opt callstack 0
  7716                           
  7717                           ; 1 bytes @ 0x0
  7718  000500                     	ds	1
  7719  000501                     terminalTextAttributes@print_string:
  7720                           	opt callstack 0
  7721                           
  7722                           ; 16 bytes @ 0x1
  7723  000501                     	ds	16
  7724  000511                     terminalTextAttributes@i:
  7725                           	opt callstack 0
  7726                           
  7727                           ; 1 bytes @ 0x11
  7728  000511                     	ds	1
  7729  000512                     terminal_ringBufferPull@charNumber:
  7730                           	opt callstack 0
  7731                           
  7732                           ; 2 bytes @ 0x12
  7733  000512                     	ds	2
  7734  000514                     terminal_ringBufferPull@index_4555:
  7735                           	opt callstack 0
  7736                           
  7737                           ; 2 bytes @ 0x14
  7738  000514                     	ds	2
  7739  000516                     terminal_ringBufferPull@index:
  7740                           	opt callstack 0
  7741                           
  7742                           ; 2 bytes @ 0x16
  7743  000516                     	ds	2
  7744                           
  7745                           	psect	cstackBANK3
  7746  0003D1                     __pcstackBANK3:
  7747                           	opt callstack 0
  7748  0003D1                     OLED_updateHandler@dev_id_str:
  7749                           	opt callstack 0
  7750  0003D1                     getStringSecondsAsTime@buff:
  7751                           	opt callstack 0
  7752                           
  7753                           ; 20 bytes @ 0x0
  7754  0003D1                     	ds	17
  7755  0003E2                     OLED_updateHandler@rev_id_str:
  7756                           	opt callstack 0
  7757                           
  7758                           ; 17 bytes @ 0x11
  7759  0003E2                     	ds	3
  7760  0003E5                     getStringSecondsAsTime@i:
  7761                           	opt callstack 0
  7762                           
  7763                           ; 1 bytes @ 0x14
  7764  0003E5                     	ds	1
  7765  0003E6                     getStringSecondsAsTime@seconds:
  7766                           	opt callstack 0
  7767                           
  7768                           ; 1 bytes @ 0x15
  7769  0003E6                     	ds	1
  7770  0003E7                     getStringSecondsAsTime@years:
  7771                           	opt callstack 0
  7772                           
  7773                           ; 1 bytes @ 0x16
  7774  0003E7                     	ds	1
  7775  0003E8                     getStringSecondsAsTime@days:
  7776                           	opt callstack 0
  7777                           
  7778                           ; 1 bytes @ 0x17
  7779  0003E8                     	ds	1
  7780  0003E9                     getStringSecondsAsTime@hours:
  7781                           	opt callstack 0
  7782                           
  7783                           ; 1 bytes @ 0x18
  7784  0003E9                     	ds	1
  7785  0003EA                     getStringSecondsAsTime@minutes:
  7786                           	opt callstack 0
  7787                           
  7788                           ; 1 bytes @ 0x19
  7789  0003EA                     	ds	1
  7790  0003EB                     ?_printf:
  7791                           	opt callstack 0
  7792  0003EB                     printf@f:
  7793                           	opt callstack 0
  7794                           
  7795                           ; 2 bytes @ 0x1A
  7796  0003EB                     	ds	8
  7797  0003F3                     printf@ap:
  7798                           	opt callstack 0
  7799  0003F3                     _OLED_updateHandler$6024:
  7800                           	opt callstack 0
  7801                           
  7802                           ; 2 bytes @ 0x22
  7803  0003F3                     	ds	2
  7804  0003F5                     printf@pb:
  7805                           	opt callstack 0
  7806                           
  7807                           ; 5 bytes @ 0x24
  7808  0003F5                     	ds	5
  7809  0003FA                     ringBufferLUT@userID:
  7810                           	opt callstack 0
  7811                           
  7812                           ; 2 bytes @ 0x29
  7813  0003FA                     	ds	2
  7814  0003FC                     ??_terminal_ringBufferPull:
  7815                           
  7816                           ; 1 bytes @ 0x2B
  7817  0003FC                     	ds	1
  7818  0003FD                     ??_main:
  7819                           
  7820                           ; 1 bytes @ 0x2C
  7821  0003FD                     	ds	2
  7822                           
  7823                           	psect	cstackBANK2
  7824  000200                     __pcstackBANK2:
  7825                           	opt callstack 0
  7826  000200                     ??_TMR5_Initialize:
  7827  000200                     ??_updateErrorLEDs:
  7828  000200                     ??_isdigit:
  7829  000200                     ?_getCauseOfResetString:
  7830                           	opt callstack 0
  7831  000200                     ?_getNXQChargeStateString:
  7832                           	opt callstack 0
  7833  000200                     ?_getNXQChargeStateStringCaps:
  7834                           	opt callstack 0
  7835  000200                     ?_getCauseOfResetStringSmall:
  7836                           	opt callstack 0
  7837  000200                     ?_strlen:
  7838                           	opt callstack 0
  7839  000200                     ?_strcmp:
  7840                           	opt callstack 0
  7841  000200                     ?___wmul:
  7842                           	opt callstack 0
  7843  000200                     ?___awmod:
  7844                           	opt callstack 0
  7845  000200                     ?___lwmod:
  7846                           	opt callstack 0
  7847  000200                     ?__tdiv_to_l_:
  7848                           	opt callstack 0
  7849  000200                     ?__div_to_l_:
  7850                           	opt callstack 0
  7851  000200                     ?___lldiv:
  7852                           	opt callstack 0
  7853  000200                     ?___flneg:
  7854                           	opt callstack 0
  7855  000200                     EUSART2_Read@readValue:
  7856                           	opt callstack 0
  7857  000200                     EUSART2_Write@txData:
  7858                           	opt callstack 0
  7859  000200                     getCauseOfReset@return_reset_cause:
  7860                           	opt callstack 0
  7861  000200                     TMR3_WriteTimer@timerVal:
  7862                           	opt callstack 0
  7863  000200                     I2C2_MasterTRBInsert@ptrb_list:
  7864                           	opt callstack 0
  7865  000200                     I2C2_MasterReadTRBBuild@ptrb:
  7866                           	opt callstack 0
  7867  000200                     I2C2_MasterWriteTRBBuild@ptrb:
  7868                           	opt callstack 0
  7869  000200                     TMR5_WriteTimer@timerVal:
  7870                           	opt callstack 0
  7871  000200                     TMR1_WriteTimer@timerVal:
  7872                           	opt callstack 0
  7873  000200                     ___wmul@multiplier:
  7874                           	opt callstack 0
  7875  000200                     ___awmod@dividend:
  7876                           	opt callstack 0
  7877  000200                     ___lwmod@dividend:
  7878                           	opt callstack 0
  7879  000200                     memmove@d1:
  7880                           	opt callstack 0
  7881  000200                     strcat@to:
  7882                           	opt callstack 0
  7883  000200                     strcmp@s1:
  7884                           	opt callstack 0
  7885  000200                     strlen@s:
  7886                           	opt callstack 0
  7887  000200                     strncpy@to:
  7888                           	opt callstack 0
  7889  000200                     INT1_SetInterruptHandler@InterruptHandler:
  7890                           	opt callstack 0
  7891  000200                     INT2_SetInterruptHandler@InterruptHandler:
  7892                           	opt callstack 0
  7893  000200                     EUSART2_SetTxInterruptHandler@interruptHandler:
  7894                           	opt callstack 0
  7895  000200                     EUSART2_SetRxInterruptHandler@interruptHandler:
  7896                           	opt callstack 0
  7897  000200                     IOCBF2_SetInterruptHandler@InterruptHandler:
  7898                           	opt callstack 0
  7899  000200                     IOCBF3_SetInterruptHandler@InterruptHandler:
  7900                           	opt callstack 0
  7901  000200                     ADCC_SetADTIInterruptHandler@InterruptHandler:
  7902                           	opt callstack 0
  7903  000200                     TMR0_SetInterruptHandler@InterruptHandler:
  7904                           	opt callstack 0
  7905  000200                     TMR2_SetInterruptHandler@InterruptHandler:
  7906                           	opt callstack 0
  7907  000200                     TMR3_SetInterruptHandler@InterruptHandler:
  7908                           	opt callstack 0
  7909  000200                     TMR1_SetInterruptHandler@InterruptHandler:
  7910                           	opt callstack 0
  7911  000200                     FLASH_ReadByte@flashAddr:
  7912                           	opt callstack 0
  7913  000200                     ___lldiv@dividend:
  7914                           	opt callstack 0
  7915  000200                     __div_to_l_@f1:
  7916                           	opt callstack 0
  7917  000200                     ___fleq@ff1:
  7918                           	opt callstack 0
  7919  000200                     ___flneg@f1:
  7920                           	opt callstack 0
  7921  000200                     __tdiv_to_l_@f1:
  7922                           	opt callstack 0
  7923                           
  7924                           ; 4 bytes @ 0x0
  7925  000200                     	ds	1
  7926  000201                     putch@txData:
  7927                           	opt callstack 0
  7928  000201                     _isdigit$5450:
  7929                           	opt callstack 0
  7930                           
  7931                           ; 1 bytes @ 0x1
  7932  000201                     	ds	1
  7933  000202                     getCauseOfResetString@r:
  7934                           	opt callstack 0
  7935  000202                     getCauseOfResetStringSmall@r:
  7936                           	opt callstack 0
  7937  000202                     isdigit@c:
  7938                           	opt callstack 0
  7939  000202                     I2C2_MasterTRBInsert@pflag:
  7940                           	opt callstack 0
  7941  000202                     I2C2_MasterReadTRBBuild@pdata:
  7942                           	opt callstack 0
  7943  000202                     I2C2_MasterWriteTRBBuild@pdata:
  7944                           	opt callstack 0
  7945  000202                     ___wmul@multiplicand:
  7946                           	opt callstack 0
  7947  000202                     ___awmod@divisor:
  7948                           	opt callstack 0
  7949  000202                     ___lwmod@divisor:
  7950                           	opt callstack 0
  7951  000202                     memmove@s1:
  7952                           	opt callstack 0
  7953  000202                     strcat@from:
  7954                           	opt callstack 0
  7955  000202                     strcmp@s2:
  7956                           	opt callstack 0
  7957  000202                     strlen@cp:
  7958                           	opt callstack 0
  7959  000202                     strncpy@from:
  7960                           	opt callstack 0
  7961                           
  7962                           ; 2 bytes @ 0x2
  7963  000202                     	ds	1
  7964  000203                     ??_TMR3_Initialize:
  7965  000203                     ??_TMR1_Initialize:
  7966  000203                     strcpy@to:
  7967                           	opt callstack 0
  7968                           
  7969                           ; 2 bytes @ 0x3
  7970  000203                     	ds	1
  7971  000204                     ??_strcmp:
  7972  000204                     ?_FLASH_ReadWord:
  7973                           	opt callstack 0
  7974  000204                     I2C2_MasterReadTRBBuild@length:
  7975                           	opt callstack 0
  7976  000204                     I2C2_MasterWriteTRBBuild@length:
  7977                           	opt callstack 0
  7978  000204                     ___awmod@counter:
  7979                           	opt callstack 0
  7980  000204                     ___lwmod@counter:
  7981                           	opt callstack 0
  7982  000204                     ___wmul@product:
  7983                           	opt callstack 0
  7984  000204                     memmove@n:
  7985                           	opt callstack 0
  7986  000204                     strcat@cp:
  7987                           	opt callstack 0
  7988  000204                     strncpy@size:
  7989                           	opt callstack 0
  7990  000204                     FLASH_ReadWord@flashAddr:
  7991                           	opt callstack 0
  7992  000204                     ___lldiv@divisor:
  7993                           	opt callstack 0
  7994  000204                     __div_to_l_@f2:
  7995                           	opt callstack 0
  7996  000204                     ___fleq@ff2:
  7997                           	opt callstack 0
  7998  000204                     __tdiv_to_l_@f2:
  7999                           	opt callstack 0
  8000                           
  8001                           ; 4 bytes @ 0x4
  8002  000204                     	ds	1
  8003  000205                     ?___lwdiv:
  8004                           	opt callstack 0
  8005  000205                     I2C2_MasterTRBInsert@count:
  8006                           	opt callstack 0
  8007  000205                     ___awmod@sign:
  8008                           	opt callstack 0
  8009  000205                     I2C2_MasterReadTRBBuild@address:
  8010                           	opt callstack 0
  8011  000205                     I2C2_MasterWriteTRBBuild@address:
  8012                           	opt callstack 0
  8013  000205                     ___lwdiv@dividend:
  8014                           	opt callstack 0
  8015  000205                     strcpy@from:
  8016                           	opt callstack 0
  8017                           
  8018                           ; 2 bytes @ 0x5
  8019  000205                     	ds	1
  8020  000206                     ??_memmove:
  8021  000206                     ?___awdiv:
  8022                           	opt callstack 0
  8023  000206                     strcmp@r:
  8024                           	opt callstack 0
  8025  000206                     ___awdiv@dividend:
  8026                           	opt callstack 0
  8027  000206                     strncpy@cp:
  8028                           	opt callstack 0
  8029                           
  8030                           ; 2 bytes @ 0x6
  8031  000206                     	ds	1
  8032  000207                     ??_I2C2_MasterWriteTRBBuild:
  8033  000207                     ??_I2C2_MasterReadTRBBuild:
  8034  000207                     ___lwdiv@divisor:
  8035                           	opt callstack 0
  8036  000207                     strcpy@cp:
  8037                           	opt callstack 0
  8038                           
  8039                           ; 2 bytes @ 0x7
  8040  000207                     	ds	1
  8041  000208                     ??__tdiv_to_l_:
  8042  000208                     ??_FLASH_ReadWord:
  8043  000208                     ??___fleq:
  8044  000208                     ___awdiv@divisor:
  8045                           	opt callstack 0
  8046  000208                     memmove@d:
  8047                           	opt callstack 0
  8048  000208                     ___lldiv@quotient:
  8049                           	opt callstack 0
  8050  000208                     __div_to_l_@quot:
  8051                           	opt callstack 0
  8052                           
  8053                           ; 4 bytes @ 0x8
  8054  000208                     	ds	1
  8055  000209                     ___lwdiv@counter:
  8056                           	opt callstack 0
  8057  000209                     I2C2_MasterWrite@pdata:
  8058                           	opt callstack 0
  8059  000209                     I2C2_MasterRead@pdata:
  8060                           	opt callstack 0
  8061                           
  8062                           ; 2 bytes @ 0x9
  8063  000209                     	ds	1
  8064  00020A                     ___awdiv@counter:
  8065                           	opt callstack 0
  8066  00020A                     ___lwdiv@quotient:
  8067                           	opt callstack 0
  8068  00020A                     memmove@s:
  8069                           	opt callstack 0
  8070                           
  8071                           ; 2 bytes @ 0xA
  8072  00020A                     	ds	1
  8073  00020B                     ??_getMajorRevisionID:
  8074  00020B                     ?_getDeviceID:
  8075                           	opt callstack 0
  8076  00020B                     ?_getUserID:
  8077                           	opt callstack 0
  8078  00020B                     I2C2_MasterWrite@length:
  8079                           	opt callstack 0
  8080  00020B                     I2C2_MasterRead@length:
  8081                           	opt callstack 0
  8082  00020B                     ___awdiv@sign:
  8083                           	opt callstack 0
  8084  00020B                     getMinorRevisionID@REVID_RAW:
  8085                           	opt callstack 0
  8086  00020B                     __tdiv_to_l_@quot:
  8087                           	opt callstack 0
  8088                           
  8089                           ; 4 bytes @ 0xB
  8090  00020B                     	ds	1
  8091  00020C                     ___lldiv@counter:
  8092                           	opt callstack 0
  8093  00020C                     __div_to_l_@cntr:
  8094                           	opt callstack 0
  8095  00020C                     I2C2_MasterWrite@address:
  8096                           	opt callstack 0
  8097  00020C                     I2C2_MasterRead@address:
  8098                           	opt callstack 0
  8099  00020C                     ___awdiv@quotient:
  8100                           	opt callstack 0
  8101                           
  8102                           ; 2 bytes @ 0xC
  8103  00020C                     	ds	1
  8104  00020D                     ?_getDeviceIDString:
  8105                           	opt callstack 0
  8106  00020D                     ?___llmod:
  8107                           	opt callstack 0
  8108  00020D                     __div_to_l_@exp1:
  8109                           	opt callstack 0
  8110  00020D                     getDeviceIDString@inputDevID:
  8111                           	opt callstack 0
  8112  00020D                     getYearsFromOnTime@input_seconds:
  8113                           	opt callstack 0
  8114  00020D                     getDaysFromOnTime@input_seconds:
  8115                           	opt callstack 0
  8116  00020D                     getHoursFromOnTime@input_seconds:
  8117                           	opt callstack 0
  8118  00020D                     getMinutesFromOnTime@input_seconds:
  8119                           	opt callstack 0
  8120  00020D                     getSecondsFromOnTime@input_seconds:
  8121                           	opt callstack 0
  8122  00020D                     ___llmod@dividend:
  8123                           	opt callstack 0
  8124                           
  8125                           ; 4 bytes @ 0xD
  8126  00020D                     	ds	1
  8127  00020E                     ?___flmul:
  8128                           	opt callstack 0
  8129  00020E                     I2C2_MasterWrite@pflag:
  8130                           	opt callstack 0
  8131  00020E                     I2C2_MasterRead@pflag:
  8132                           	opt callstack 0
  8133  00020E                     getMajorRevisionID@REVID_RAW:
  8134                           	opt callstack 0
  8135  00020E                     ___flmul@b:
  8136                           	opt callstack 0
  8137                           
  8138                           ; 4 bytes @ 0xE
  8139  00020E                     	ds	1
  8140  00020F                     ??_getDeviceIDString:
  8141  00020F                     __tdiv_to_l_@cntr:
  8142                           	opt callstack 0
  8143                           
  8144                           ; 1 bytes @ 0xF
  8145  00020F                     	ds	1
  8146  000210                     ??_OLED_PutChar:
  8147  000210                     OLED_Command@temp:
  8148                           	opt callstack 0
  8149  000210                     __tdiv_to_l_@exp1:
  8150                           	opt callstack 0
  8151  000210                     LM73TempSensorInitialize@output_data_array:
  8152                           	opt callstack 0
  8153                           
  8154                           ; 2 bytes @ 0x10
  8155  000210                     	ds	1
  8156  000211                     ??_getDaysFromOnTime:
  8157  000211                     ??_getHoursFromOnTime:
  8158  000211                     ??_getMinutesFromOnTime:
  8159  000211                     ??_getSecondsFromOnTime:
  8160  000211                     getUserID@inputUserID:
  8161                           	opt callstack 0
  8162  000211                     getYearsFromOnTime@years:
  8163                           	opt callstack 0
  8164  000211                     ___llmod@divisor:
  8165                           	opt callstack 0
  8166                           
  8167                           ; 4 bytes @ 0x11
  8168  000211                     	ds	1
  8169  000212                     getUserID@IDOffset:
  8170                           	opt callstack 0
  8171  000212                     OLED_Command@data_array:
  8172                           	opt callstack 0
  8173  000212                     ___flmul@a:
  8174                           	opt callstack 0
  8175                           
  8176                           ; 4 bytes @ 0x12
  8177  000212                     	ds	2
  8178  000214                     OLED_YX@Column:
  8179                           	opt callstack 0
  8180  000214                     OLED_PutChar@data_array:
  8181                           	opt callstack 0
  8182                           
  8183                           ; 9 bytes @ 0x14
  8184  000214                     	ds	1
  8185  000215                     ??_OLED_YX:
  8186  000215                     getDaysFromOnTime@days:
  8187                           	opt callstack 0
  8188  000215                     getHoursFromOnTime@hours:
  8189                           	opt callstack 0
  8190  000215                     getMinutesFromOnTime@minutes:
  8191                           	opt callstack 0
  8192  000215                     getSecondsFromOnTime@seconds:
  8193                           	opt callstack 0
  8194  000215                     ___llmod@counter:
  8195                           	opt callstack 0
  8196                           
  8197                           ; 1 bytes @ 0x15
  8198  000215                     	ds	1
  8199  000216                     ??___flmul:
  8200  000216                     getDaysFromOnTime@years:
  8201                           	opt callstack 0
  8202  000216                     getHoursFromOnTime@years:
  8203                           	opt callstack 0
  8204  000216                     getMinutesFromOnTime@years:
  8205                           	opt callstack 0
  8206  000216                     getSecondsFromOnTime@years:
  8207                           	opt callstack 0
  8208                           
  8209                           ; 1 bytes @ 0x16
  8210  000216                     	ds	1
  8211  000217                     getHoursFromOnTime@days:
  8212                           	opt callstack 0
  8213  000217                     getMinutesFromOnTime@days:
  8214                           	opt callstack 0
  8215  000217                     getSecondsFromOnTime@days:
  8216                           	opt callstack 0
  8217                           
  8218                           ; 1 bytes @ 0x17
  8219  000217                     	ds	1
  8220  000218                     getMinutesFromOnTime@hours:
  8221                           	opt callstack 0
  8222  000218                     getSecondsFromOnTime@hours:
  8223                           	opt callstack 0
  8224  000218                     OLED_YX@Row:
  8225                           	opt callstack 0
  8226                           
  8227                           ; 1 bytes @ 0x18
  8228  000218                     	ds	1
  8229  000219                     getSecondsFromOnTime@minutes:
  8230                           	opt callstack 0
  8231                           
  8232                           ; 1 bytes @ 0x19
  8233  000219                     	ds	1
  8234  00021A                     ___flmul@sign:
  8235                           	opt callstack 0
  8236                           
  8237                           ; 1 bytes @ 0x1A
  8238  00021A                     	ds	1
  8239  00021B                     ___flmul@aexp:
  8240                           	opt callstack 0
  8241                           
  8242                           ; 1 bytes @ 0x1B
  8243  00021B                     	ds	1
  8244  00021C                     ___flmul@grs:
  8245                           	opt callstack 0
  8246                           
  8247                           ; 4 bytes @ 0x1C
  8248  00021C                     	ds	1
  8249  00021D                     OLED_PutChar@input_base:
  8250                           	opt callstack 0
  8251                           
  8252                           ; 2 bytes @ 0x1D
  8253  00021D                     	ds	3
  8254  000220                     OLED_PutChar@ch:
  8255                           	opt callstack 0
  8256  000220                     ___flmul@bexp:
  8257                           	opt callstack 0
  8258                           
  8259                           ; 1 bytes @ 0x20
  8260  000220                     	ds	1
  8261  000221                     OLED_Clear@row:
  8262                           	opt callstack 0
  8263  000221                     OLED_WriteString@s:
  8264                           	opt callstack 0
  8265  000221                     ___flmul@prod:
  8266                           	opt callstack 0
  8267                           
  8268                           ; 4 bytes @ 0x21
  8269  000221                     	ds	2
  8270  000223                     OLED_UpdateFromRAMBuffer@char_index:
  8271                           	opt callstack 0
  8272  000223                     OLED_Clear@col:
  8273                           	opt callstack 0
  8274                           
  8275                           ; 2 bytes @ 0x23
  8276  000223                     	ds	1
  8277  000224                     OLED_UpdateFromRAMBuffer@char_index_4111:
  8278                           	opt callstack 0
  8279                           
  8280                           ; 1 bytes @ 0x24
  8281  000224                     	ds	1
  8282  000225                     OLED_UpdateFromRAMBuffer@char_index_4112:
  8283                           	opt callstack 0
  8284  000225                     ___flmul@temp:
  8285                           	opt callstack 0
  8286                           
  8287                           ; 2 bytes @ 0x25
  8288  000225                     	ds	1
  8289  000226                     OLED_UpdateFromRAMBuffer@char_index_4113:
  8290                           	opt callstack 0
  8291                           
  8292                           ; 1 bytes @ 0x26
  8293  000226                     	ds	1
  8294  000227                     ?___fldiv:
  8295                           	opt callstack 0
  8296  000227                     ?_fround:
  8297                           	opt callstack 0
  8298  000227                     ?_scale:
  8299                           	opt callstack 0
  8300  000227                     ___fldiv@b:
  8301                           	opt callstack 0
  8302                           
  8303                           ; 4 bytes @ 0x27
  8304  000227                     	ds	4
  8305  00022B                     ___fldiv@a:
  8306                           	opt callstack 0
  8307  00022B                     _fround$6027:
  8308                           	opt callstack 0
  8309  00022B                     _scale$6028:
  8310                           	opt callstack 0
  8311                           
  8312                           ; 4 bytes @ 0x2B
  8313  00022B                     	ds	4
  8314  00022F                     ??___fldiv:
  8315  00022F                     scale@scl:
  8316                           	opt callstack 0
  8317  00022F                     _fround$6026:
  8318                           	opt callstack 0
  8319                           
  8320                           ; 4 bytes @ 0x2F
  8321  00022F                     	ds	1
  8322  000230                     ?___fltol:
  8323                           	opt callstack 0
  8324  000230                     ___fltol@f1:
  8325                           	opt callstack 0
  8326                           
  8327                           ; 4 bytes @ 0x30
  8328  000230                     	ds	3
  8329  000233                     fround@prec:
  8330                           	opt callstack 0
  8331  000233                     ___fldiv@rem:
  8332                           	opt callstack 0
  8333                           
  8334                           ; 4 bytes @ 0x33
  8335  000233                     	ds	1
  8336  000234                     ??___fltol:
  8337  000234                     ?___fladd:
  8338                           	opt callstack 0
  8339  000234                     ___fladd@b:
  8340                           	opt callstack 0
  8341                           
  8342                           ; 4 bytes @ 0x34
  8343  000234                     	ds	3
  8344  000237                     ___fldiv@sign:
  8345                           	opt callstack 0
  8346                           
  8347                           ; 1 bytes @ 0x37
  8348  000237                     	ds	1
  8349  000238                     ___fltol@sign1:
  8350                           	opt callstack 0
  8351  000238                     ___fldiv@new_exp:
  8352                           	opt callstack 0
  8353  000238                     ___fladd@a:
  8354                           	opt callstack 0
  8355                           
  8356                           ; 4 bytes @ 0x38
  8357  000238                     	ds	1
  8358  000239                     ___fltol@exp1:
  8359                           	opt callstack 0
  8360                           
  8361                           ; 1 bytes @ 0x39
  8362  000239                     	ds	1
  8363  00023A                     ?_abs:
  8364                           	opt callstack 0
  8365  00023A                     abs@a:
  8366                           	opt callstack 0
  8367  00023A                     ___fldiv@grs:
  8368                           	opt callstack 0
  8369                           
  8370                           ; 4 bytes @ 0x3A
  8371  00023A                     	ds	2
  8372  00023C                     ??_abs:
  8373  00023C                     ??___fladd:
  8374                           
  8375                           ; 1 bytes @ 0x3C
  8376  00023C                     	ds	2
  8377  00023E                     ?___xxtofl:
  8378                           	opt callstack 0
  8379  00023E                     ___fldiv@bexp:
  8380                           	opt callstack 0
  8381  00023E                     ___xxtofl@val:
  8382                           	opt callstack 0
  8383                           
  8384                           ; 4 bytes @ 0x3E
  8385  00023E                     	ds	1
  8386  00023F                     ___fldiv@aexp:
  8387                           	opt callstack 0
  8388                           
  8389                           ; 1 bytes @ 0x3F
  8390  00023F                     	ds	1
  8391  000240                     ___fladd@signs:
  8392                           	opt callstack 0
  8393                           
  8394                           ; 1 bytes @ 0x40
  8395  000240                     	ds	1
  8396  000241                     ___fladd@aexp:
  8397                           	opt callstack 0
  8398                           
  8399                           ; 1 bytes @ 0x41
  8400  000241                     	ds	1
  8401  000242                     ??___xxtofl:
  8402  000242                     ___fladd@bexp:
  8403                           	opt callstack 0
  8404                           
  8405                           ; 1 bytes @ 0x42
  8406  000242                     	ds	1
  8407  000243                     ___fladd@grs:
  8408                           	opt callstack 0
  8409                           
  8410                           ; 1 bytes @ 0x43
  8411  000243                     	ds	3
  8412  000246                     ___xxtofl@sign:
  8413                           	opt callstack 0
  8414                           
  8415                           ; 1 bytes @ 0x46
  8416  000246                     	ds	1
  8417  000247                     ___xxtofl@exp:
  8418                           	opt callstack 0
  8419                           
  8420                           ; 1 bytes @ 0x47
  8421  000247                     	ds	1
  8422  000248                     ___xxtofl@arg:
  8423                           	opt callstack 0
  8424                           
  8425                           ; 4 bytes @ 0x48
  8426  000248                     	ds	4
  8427  00024C                     ??_LM73Convert:
  8428  00024C                     ?___flsub:
  8429                           	opt callstack 0
  8430  00024C                     ___flge@ff1:
  8431                           	opt callstack 0
  8432  00024C                     ___flsub@b:
  8433                           	opt callstack 0
  8434                           
  8435                           ; 4 bytes @ 0x4C
  8436  00024C                     	ds	3
  8437  00024F                     LM73Convert@QI_Conv:
  8438                           	opt callstack 0
  8439                           
  8440                           ; 2 bytes @ 0x4F
  8441  00024F                     	ds	1
  8442  000250                     ___flge@ff2:
  8443                           	opt callstack 0
  8444  000250                     ___flsub@a:
  8445                           	opt callstack 0
  8446                           
  8447                           ; 4 bytes @ 0x50
  8448  000250                     	ds	1
  8449  000251                     LM73Convert@POS5_Conv:
  8450                           	opt callstack 0
  8451                           
  8452                           ; 2 bytes @ 0x51
  8453  000251                     	ds	2
  8454  000253                     LM73Convert@Ambient_Conv:
  8455                           	opt callstack 0
  8456                           
  8457                           ; 2 bytes @ 0x53
  8458  000253                     	ds	1
  8459  000254                     ??___flge:
  8460                           
  8461                           ; 1 bytes @ 0x54
  8462  000254                     	ds	1
  8463  000255                     
  8464                           ; 1 bytes @ 0x55
  8465  000255                     	ds	3
  8466  000258                     ?__doprnt:
  8467                           	opt callstack 0
  8468  000258                     __doprnt@pb:
  8469                           	opt callstack 0
  8470                           
  8471                           ; 2 bytes @ 0x58
  8472  000258                     	ds	2
  8473  00025A                     __doprnt@f:
  8474                           	opt callstack 0
  8475                           
  8476                           ; 2 bytes @ 0x5A
  8477  00025A                     	ds	2
  8478  00025C                     __doprnt@ap:
  8479                           	opt callstack 0
  8480                           
  8481                           ; 2 bytes @ 0x5C
  8482  00025C                     	ds	2
  8483  00025E                     ??__doprnt:
  8484                           
  8485                           ; 1 bytes @ 0x5E
  8486  00025E                     	ds	4
  8487  000262                     __doprnt$6029:
  8488                           	opt callstack 0
  8489                           
  8490                           ; 4 bytes @ 0x62
  8491  000262                     	ds	4
  8492  000266                     __doprnt@idx:
  8493                           	opt callstack 0
  8494                           
  8495                           ; 1 bytes @ 0x66
  8496  000266                     	ds	1
  8497  000267                     __doprnt$4976:
  8498                           	opt callstack 0
  8499                           
  8500                           ; 2 bytes @ 0x67
  8501  000267                     	ds	2
  8502  000269                     __doprnt$4977:
  8503                           	opt callstack 0
  8504                           
  8505                           ; 2 bytes @ 0x69
  8506  000269                     	ds	2
  8507  00026B                     __doprnt$4978:
  8508                           	opt callstack 0
  8509                           
  8510                           ; 2 bytes @ 0x6B
  8511  00026B                     	ds	2
  8512  00026D                     __doprnt$4979:
  8513                           	opt callstack 0
  8514                           
  8515                           ; 2 bytes @ 0x6D
  8516  00026D                     	ds	2
  8517  00026F                     __doprnt$4980:
  8518                           	opt callstack 0
  8519                           
  8520                           ; 2 bytes @ 0x6F
  8521  00026F                     	ds	2
  8522  000271                     __doprnt$4981:
  8523                           	opt callstack 0
  8524                           
  8525                           ; 2 bytes @ 0x71
  8526  000271                     	ds	2
  8527  000273                     __doprnt$4982:
  8528                           	opt callstack 0
  8529                           
  8530                           ; 2 bytes @ 0x73
  8531  000273                     	ds	2
  8532  000275                     __doprnt$4983:
  8533                           	opt callstack 0
  8534                           
  8535                           ; 2 bytes @ 0x75
  8536  000275                     	ds	2
  8537  000277                     __doprnt@cp:
  8538                           	opt callstack 0
  8539                           
  8540                           ; 2 bytes @ 0x77
  8541  000277                     	ds	2
  8542  000279                     __doprnt@len:
  8543                           	opt callstack 0
  8544                           
  8545                           ; 2 bytes @ 0x79
  8546  000279                     	ds	2
  8547  00027B                     __doprnt@eexp:
  8548                           	opt callstack 0
  8549                           
  8550                           ; 2 bytes @ 0x7B
  8551  00027B                     	ds	2
  8552  00027D                     __doprnt@tmpval:
  8553                           	opt callstack 0
  8554                           
  8555                           ; 4 bytes @ 0x7D
  8556  00027D                     	ds	4
  8557  000281                     __doprnt@fval:
  8558                           	opt callstack 0
  8559                           
  8560                           ; 4 bytes @ 0x81
  8561  000281                     	ds	4
  8562  000285                     __doprnt@val:
  8563                           	opt callstack 0
  8564                           
  8565                           ; 4 bytes @ 0x85
  8566  000285                     	ds	4
  8567  000289                     __doprnt@width:
  8568                           	opt callstack 0
  8569                           
  8570                           ; 2 bytes @ 0x89
  8571  000289                     	ds	2
  8572  00028B                     __doprnt@prec:
  8573                           	opt callstack 0
  8574                           
  8575                           ; 2 bytes @ 0x8B
  8576  00028B                     	ds	2
  8577  00028D                     __doprnt@flag:
  8578                           	opt callstack 0
  8579                           
  8580                           ; 2 bytes @ 0x8D
  8581  00028D                     	ds	2
  8582  00028F                     __doprnt@c:
  8583                           	opt callstack 0
  8584                           
  8585                           ; 1 bytes @ 0x8F
  8586  00028F                     	ds	1
  8587  000290                     ?_sprintf:
  8588                           	opt callstack 0
  8589  000290                     sprintf@wh:
  8590                           	opt callstack 0
  8591                           
  8592                           ; 2 bytes @ 0x90
  8593  000290                     	ds	2
  8594  000292                     sprintf@f:
  8595                           	opt callstack 0
  8596                           
  8597                           ; 2 bytes @ 0x92
  8598  000292                     	ds	10
  8599  00029C                     sprintf@ap:
  8600                           	opt callstack 0
  8601                           
  8602                           ; 2 bytes @ 0x9C
  8603  00029C                     	ds	2
  8604  00029E                     sprintf@pb:
  8605                           	opt callstack 0
  8606                           
  8607                           ; 5 bytes @ 0x9E
  8608  00029E                     	ds	5
  8609  0002A3                     ?_getStringSecondsAsTime:
  8610                           	opt callstack 0
  8611  0002A3                     ?_floatToEngineeringFormat:
  8612                           	opt callstack 0
  8613  0002A3                     getStringSecondsAsTime@input_seconds:
  8614                           	opt callstack 0
  8615  0002A3                     floatToEngineeringFormat@input_value:
  8616                           	opt callstack 0
  8617                           
  8618                           ; 4 bytes @ 0xA3
  8619  0002A3                     	ds	4
  8620  0002A7                     ??_getStringSecondsAsTime:
  8621  0002A7                     _floatToEngineeringFormat$4522:
  8622                           	opt callstack 0
  8623                           
  8624                           ; 4 bytes @ 0xA7
  8625  0002A7                     	ds	4
  8626  0002AB                     _floatToEngineeringFormat$4523:
  8627                           	opt callstack 0
  8628                           
  8629                           ; 4 bytes @ 0xAB
  8630  0002AB                     	ds	4
  8631  0002AF                     floatToEngineeringFormat@sign:
  8632                           	opt callstack 0
  8633                           
  8634                           ; 4 bytes @ 0xAF
  8635  0002AF                     	ds	4
  8636  0002B3                     floatToEngineeringFormat@res:
  8637                           	opt callstack 0
  8638                           
  8639                           ; 2 bytes @ 0xB3
  8640  0002B3                     	ds	2
  8641  0002B5                     _floatToEngineeringFormat$6025:
  8642                           	opt callstack 0
  8643                           
  8644                           ; 4 bytes @ 0xB5
  8645  0002B5                     	ds	4
  8646  0002B9                     ??_OLED_updateHandler:
  8647  0002B9                     terminalTextAttributes@background_color:
  8648                           	opt callstack 0
  8649                           
  8650                           ; 1 bytes @ 0xB9
  8651  0002B9                     	ds	1
  8652  0002BA                     terminalTextAttributes@input_attribute:
  8653                           	opt callstack 0
  8654                           
  8655                           ; 1 bytes @ 0xBA
  8656  0002BA                     	ds	1
  8657  0002BB                     ringBufferLUT@line:
  8658                           	opt callstack 0
  8659                           
  8660                           ; 2 bytes @ 0xBB
  8661  0002BB                     	ds	2
  8662  0002BD                     ??_ringBufferLUT:
  8663                           
  8664                           ; 1 bytes @ 0xBD
  8665  0002BD                     	ds	2
  8666                           
  8667                           	psect	cstackBANK1
  8668  000100                     __pcstackBANK1:
  8669                           	opt callstack 0
  8670  000100                     ??_I2C2_Stop:
  8671  000100                     ?i1___xxtofl:
  8672                           	opt callstack 0
  8673  000100                     ADCC_StartConversion@channel:
  8674                           	opt callstack 0
  8675  000100                     i1TMR3_WriteTimer@timerVal:
  8676                           	opt callstack 0
  8677  000100                     i1___xxtofl@val:
  8678                           	opt callstack 0
  8679                           
  8680                           ; 4 bytes @ 0x0
  8681  000100                     	ds	1
  8682  000101                     
  8683                           ; 1 bytes @ 0x1
  8684  000101                     	ds	1
  8685  000102                     I2C2_Stop@completion_code:
  8686                           	opt callstack 0
  8687                           
  8688                           ; 1 bytes @ 0x2
  8689  000102                     	ds	1
  8690  000103                     ??_I2C2_ISR:
  8691                           
  8692                           ; 1 bytes @ 0x3
  8693  000103                     	ds	1
  8694  000104                     ??i1___xxtofl:
  8695                           
  8696                           ; 1 bytes @ 0x4
  8697  000104                     	ds	4
  8698  000108                     i1___xxtofl@sign:
  8699                           	opt callstack 0
  8700                           
  8701                           ; 1 bytes @ 0x8
  8702  000108                     	ds	1
  8703  000109                     i1___xxtofl@exp:
  8704                           	opt callstack 0
  8705                           
  8706                           ; 1 bytes @ 0x9
  8707  000109                     	ds	1
  8708  00010A                     i1___xxtofl@arg:
  8709                           	opt callstack 0
  8710                           
  8711                           ; 4 bytes @ 0xA
  8712  00010A                     	ds	4
  8713  00010E                     ?i1___fladd:
  8714                           	opt callstack 0
  8715  00010E                     i1___fladd@b:
  8716                           	opt callstack 0
  8717                           
  8718                           ; 4 bytes @ 0xE
  8719  00010E                     	ds	4
  8720  000112                     i1___fladd@a:
  8721                           	opt callstack 0
  8722                           
  8723                           ; 4 bytes @ 0x12
  8724  000112                     	ds	4
  8725  000116                     ??i1___fladd:
  8726                           
  8727                           ; 1 bytes @ 0x16
  8728  000116                     	ds	4
  8729  00011A                     i1___fladd@signs:
  8730                           	opt callstack 0
  8731                           
  8732                           ; 1 bytes @ 0x1A
  8733  00011A                     	ds	1
  8734  00011B                     i1___fladd@aexp:
  8735                           	opt callstack 0
  8736                           
  8737                           ; 1 bytes @ 0x1B
  8738  00011B                     	ds	1
  8739  00011C                     i1___fladd@bexp:
  8740                           	opt callstack 0
  8741                           
  8742                           ; 1 bytes @ 0x1C
  8743  00011C                     	ds	1
  8744  00011D                     i1___fladd@grs:
  8745                           	opt callstack 0
  8746                           
  8747                           ; 1 bytes @ 0x1D
  8748  00011D                     	ds	1
  8749  00011E                     ?i1___fldiv:
  8750                           	opt callstack 0
  8751  00011E                     i1___fldiv@b:
  8752                           	opt callstack 0
  8753                           
  8754                           ; 4 bytes @ 0x1E
  8755  00011E                     	ds	4
  8756  000122                     i1___fldiv@a:
  8757                           	opt callstack 0
  8758                           
  8759                           ; 4 bytes @ 0x22
  8760  000122                     	ds	4
  8761  000126                     ??i1___fldiv:
  8762                           
  8763                           ; 1 bytes @ 0x26
  8764  000126                     	ds	4
  8765  00012A                     i1___fldiv@rem:
  8766                           	opt callstack 0
  8767                           
  8768                           ; 4 bytes @ 0x2A
  8769  00012A                     	ds	4
  8770  00012E                     i1___fldiv@sign:
  8771                           	opt callstack 0
  8772                           
  8773                           ; 1 bytes @ 0x2E
  8774  00012E                     	ds	1
  8775  00012F                     i1___fldiv@new_exp:
  8776                           	opt callstack 0
  8777                           
  8778                           ; 2 bytes @ 0x2F
  8779  00012F                     	ds	2
  8780  000131                     i1___fldiv@grs:
  8781                           	opt callstack 0
  8782                           
  8783                           ; 4 bytes @ 0x31
  8784  000131                     	ds	4
  8785  000135                     i1___fldiv@bexp:
  8786                           	opt callstack 0
  8787                           
  8788                           ; 1 bytes @ 0x35
  8789  000135                     	ds	1
  8790  000136                     i1___fldiv@aexp:
  8791                           	opt callstack 0
  8792                           
  8793                           ; 1 bytes @ 0x36
  8794  000136                     	ds	1
  8795  000137                     ?i1___flmul:
  8796                           	opt callstack 0
  8797  000137                     i1___flmul@b:
  8798                           	opt callstack 0
  8799                           
  8800                           ; 4 bytes @ 0x37
  8801  000137                     	ds	4
  8802  00013B                     i1___flmul@a:
  8803                           	opt callstack 0
  8804                           
  8805                           ; 4 bytes @ 0x3B
  8806  00013B                     	ds	4
  8807  00013F                     ??i1___flmul:
  8808                           
  8809                           ; 1 bytes @ 0x3F
  8810  00013F                     	ds	4
  8811  000143                     i1___flmul@sign:
  8812                           	opt callstack 0
  8813                           
  8814                           ; 1 bytes @ 0x43
  8815  000143                     	ds	1
  8816  000144                     i1___flmul@grs:
  8817                           	opt callstack 0
  8818                           
  8819                           ; 4 bytes @ 0x44
  8820  000144                     	ds	4
  8821  000148                     i1___flmul@aexp:
  8822                           	opt callstack 0
  8823                           
  8824                           ; 1 bytes @ 0x48
  8825  000148                     	ds	1
  8826  000149                     i1___flmul@bexp:
  8827                           	opt callstack 0
  8828                           
  8829                           ; 1 bytes @ 0x49
  8830  000149                     	ds	1
  8831  00014A                     i1___flmul@prod:
  8832                           	opt callstack 0
  8833                           
  8834                           ; 4 bytes @ 0x4A
  8835  00014A                     	ds	4
  8836  00014E                     i1___flmul@temp:
  8837                           	opt callstack 0
  8838                           
  8839                           ; 2 bytes @ 0x4E
  8840  00014E                     	ds	2
  8841  000150                     freqMeasConvert@qi_period:
  8842                           	opt callstack 0
  8843                           
  8844                           ; 4 bytes @ 0x50
  8845  000150                     	ds	4
  8846  000154                     CCP2_CallBack@capturedValue:
  8847                           	opt callstack 0
  8848                           
  8849                           ; 2 bytes @ 0x54
  8850  000154                     	ds	2
  8851  000156                     CCP2_CaptureISR@module:
  8852                           	opt callstack 0
  8853                           
  8854                           ; 2 bytes @ 0x56
  8855  000156                     	ds	2
  8856  000158                     ??_INTERRUPT_InterruptManagerLow:
  8857                           
  8858                           ; 1 bytes @ 0x58
  8859  000158                     	ds	9
  8860                           
  8861                           	psect	cstackBANK0
  8862  000060                     __pcstackBANK0:
  8863                           	opt callstack 0
  8864  000060                     i2___fladd@signs:
  8865                           	opt callstack 0
  8866                           
  8867                           ; 1 bytes @ 0x0
  8868  000060                     	ds	1
  8869  000061                     i2___fladd@aexp:
  8870                           	opt callstack 0
  8871                           
  8872                           ; 1 bytes @ 0x1
  8873  000061                     	ds	1
  8874  000062                     i2___fladd@bexp:
  8875                           	opt callstack 0
  8876                           
  8877                           ; 1 bytes @ 0x2
  8878  000062                     	ds	1
  8879  000063                     i2___fladd@grs:
  8880                           	opt callstack 0
  8881                           
  8882                           ; 1 bytes @ 0x3
  8883  000063                     	ds	1
  8884  000064                     ?i2___flsub:
  8885                           	opt callstack 0
  8886  000064                     i2___flsub@b:
  8887                           	opt callstack 0
  8888                           
  8889                           ; 4 bytes @ 0x4
  8890  000064                     	ds	4
  8891  000068                     i2___flsub@a:
  8892                           	opt callstack 0
  8893                           
  8894                           ; 4 bytes @ 0x8
  8895  000068                     	ds	4
  8896  00006C                     ?i2__doprnt:
  8897                           	opt callstack 0
  8898  00006C                     i2__doprnt@pb:
  8899                           	opt callstack 0
  8900  00006C                     _ADC_PostProcessingHandler$6409:
  8901                           	opt callstack 0
  8902                           
  8903                           ; 4 bytes @ 0xC
  8904  00006C                     	ds	2
  8905  00006E                     i2__doprnt@f:
  8906                           	opt callstack 0
  8907                           
  8908                           ; 2 bytes @ 0xE
  8909  00006E                     	ds	2
  8910  000070                     i2__doprnt@ap:
  8911                           	opt callstack 0
  8912  000070                     _ADC_PostProcessingHandler$6410:
  8913                           	opt callstack 0
  8914                           
  8915                           ; 4 bytes @ 0x10
  8916  000070                     	ds	2
  8917  000072                     ??i2__doprnt:
  8918                           
  8919                           ; 1 bytes @ 0x12
  8920  000072                     	ds	2
  8921  000074                     _ADC_PostProcessingHandler$6411:
  8922                           	opt callstack 0
  8923                           
  8924                           ; 4 bytes @ 0x14
  8925  000074                     	ds	2
  8926  000076                     i2__doprnt$6415:
  8927                           	opt callstack 0
  8928                           
  8929                           ; 4 bytes @ 0x16
  8930  000076                     	ds	2
  8931  000078                     ADC_PostProcessingHandler@current_adc_channel:
  8932                           	opt callstack 0
  8933                           
  8934                           ; 1 bytes @ 0x18
  8935  000078                     	ds	1
  8936  000079                     ADC_PostProcessingHandler@i:
  8937                           	opt callstack 0
  8938                           
  8939                           ; 1 bytes @ 0x19
  8940  000079                     	ds	1
  8941  00007A                     ADC_PostProcessingHandler@i_3369:
  8942                           	opt callstack 0
  8943  00007A                     i2__doprnt@idx:
  8944                           	opt callstack 0
  8945                           
  8946                           ; 1 bytes @ 0x1A
  8947  00007A                     	ds	1
  8948  00007B                     i2__doprnt$4976:
  8949                           	opt callstack 0
  8950  00007B                     _ADC_PostProcessingHandler$6407:
  8951                           	opt callstack 0
  8952                           
  8953                           ; 4 bytes @ 0x1B
  8954  00007B                     	ds	2
  8955  00007D                     i2__doprnt$4977:
  8956                           	opt callstack 0
  8957                           
  8958                           ; 2 bytes @ 0x1D
  8959  00007D                     	ds	2
  8960  00007F                     i2__doprnt$4978:
  8961                           	opt callstack 0
  8962  00007F                     _ADC_PostProcessingHandler$6408:
  8963                           	opt callstack 0
  8964                           
  8965                           ; 4 bytes @ 0x1F
  8966  00007F                     	ds	2
  8967  000081                     i2__doprnt$4979:
  8968                           	opt callstack 0
  8969                           
  8970                           ; 2 bytes @ 0x21
  8971  000081                     	ds	2
  8972  000083                     i2__doprnt$4980:
  8973                           	opt callstack 0
  8974                           
  8975                           ; 2 bytes @ 0x23
  8976  000083                     	ds	2
  8977  000085                     i2__doprnt$4981:
  8978                           	opt callstack 0
  8979                           
  8980                           ; 2 bytes @ 0x25
  8981  000085                     	ds	2
  8982  000087                     i2__doprnt$4982:
  8983                           	opt callstack 0
  8984                           
  8985                           ; 2 bytes @ 0x27
  8986  000087                     	ds	2
  8987  000089                     i2__doprnt$4983:
  8988                           	opt callstack 0
  8989                           
  8990                           ; 2 bytes @ 0x29
  8991  000089                     	ds	2
  8992  00008B                     i2__doprnt@cp:
  8993                           	opt callstack 0
  8994                           
  8995                           ; 2 bytes @ 0x2B
  8996  00008B                     	ds	2
  8997  00008D                     i2__doprnt@len:
  8998                           	opt callstack 0
  8999                           
  9000                           ; 2 bytes @ 0x2D
  9001  00008D                     	ds	2
  9002  00008F                     i2__doprnt@eexp:
  9003                           	opt callstack 0
  9004                           
  9005                           ; 2 bytes @ 0x2F
  9006  00008F                     	ds	2
  9007  000091                     i2__doprnt@tmpval:
  9008                           	opt callstack 0
  9009                           
  9010                           ; 4 bytes @ 0x31
  9011  000091                     	ds	4
  9012  000095                     i2__doprnt@fval:
  9013                           	opt callstack 0
  9014                           
  9015                           ; 4 bytes @ 0x35
  9016  000095                     	ds	4
  9017  000099                     i2__doprnt@val:
  9018                           	opt callstack 0
  9019                           
  9020                           ; 4 bytes @ 0x39
  9021  000099                     	ds	4
  9022  00009D                     i2__doprnt@width:
  9023                           	opt callstack 0
  9024                           
  9025                           ; 2 bytes @ 0x3D
  9026  00009D                     	ds	2
  9027  00009F                     i2__doprnt@prec:
  9028                           	opt callstack 0
  9029                           
  9030                           ; 2 bytes @ 0x3F
  9031  00009F                     	ds	2
  9032  0000A1                     i2__doprnt@flag:
  9033                           	opt callstack 0
  9034                           
  9035                           ; 2 bytes @ 0x41
  9036  0000A1                     	ds	2
  9037  0000A3                     i2__doprnt@c:
  9038                           	opt callstack 0
  9039                           
  9040                           ; 1 bytes @ 0x43
  9041  0000A3                     	ds	1
  9042  0000A4                     ?i2_printf:
  9043                           	opt callstack 0
  9044  0000A4                     i2printf@f:
  9045                           	opt callstack 0
  9046                           
  9047                           ; 2 bytes @ 0x44
  9048  0000A4                     	ds	2
  9049  0000A6                     i2printf@ap:
  9050                           	opt callstack 0
  9051                           
  9052                           ; 2 bytes @ 0x46
  9053  0000A6                     	ds	2
  9054  0000A8                     i2printf@pb:
  9055                           	opt callstack 0
  9056                           
  9057                           ; 5 bytes @ 0x48
  9058  0000A8                     	ds	5
  9059  0000AD                     ??_INTERRUPT_InterruptManagerHigh:
  9060                           
  9061                           ; 1 bytes @ 0x4D
  9062  0000AD                     	ds	12
  9063                           
  9064                           	psect	cstackCOMRAM
  9065  000001                     __pcstackCOMRAM:
  9066                           	opt callstack 0
  9067  000001                     ??i2_isdigit:
  9068  000001                     ?_ADCC_GetConversionResult:
  9069                           	opt callstack 0
  9070  000001                     ?_ADCC_GetFilterValue:
  9071                           	opt callstack 0
  9072  000001                     ?i2___wmul:
  9073                           	opt callstack 0
  9074  000001                     ?i2___awmod:
  9075                           	opt callstack 0
  9076  000001                     ?i2___lwmod:
  9077                           	opt callstack 0
  9078  000001                     ?i2___lldiv:
  9079                           	opt callstack 0
  9080  000001                     ?i2__div_to_l_:
  9081                           	opt callstack 0
  9082  000001                     ?i2___flneg:
  9083                           	opt callstack 0
  9084  000001                     ?i2__tdiv_to_l_:
  9085                           	opt callstack 0
  9086  000001                     i2EUSART2_Write@txData:
  9087                           	opt callstack 0
  9088  000001                     i2TMR3_WriteTimer@timerVal:
  9089                           	opt callstack 0
  9090  000001                     i2TMR1_WriteTimer@timerVal:
  9091                           	opt callstack 0
  9092  000001                     i2___wmul@multiplier:
  9093                           	opt callstack 0
  9094  000001                     i2___awmod@dividend:
  9095                           	opt callstack 0
  9096  000001                     i2___lwmod@dividend:
  9097                           	opt callstack 0
  9098  000001                     i2___lldiv@dividend:
  9099                           	opt callstack 0
  9100  000001                     i2__div_to_l_@f1:
  9101                           	opt callstack 0
  9102  000001                     i2___fleq@ff1:
  9103                           	opt callstack 0
  9104  000001                     i2___flge@ff1:
  9105                           	opt callstack 0
  9106  000001                     i2___flneg@f1:
  9107                           	opt callstack 0
  9108  000001                     i2__tdiv_to_l_@f1:
  9109                           	opt callstack 0
  9110                           
  9111                           ; 4 bytes @ 0x0
  9112  000001                     	ds	1
  9113  000002                     i2putch@txData:
  9114                           	opt callstack 0
  9115  000002                     i2_isdigit$5450:
  9116                           	opt callstack 0
  9117                           
  9118                           ; 1 bytes @ 0x1
  9119  000002                     	ds	1
  9120  000003                     ??_ADCC_GetConversionResult:
  9121  000003                     ??_ADCC_GetFilterValue:
  9122  000003                     i2isdigit@c:
  9123                           	opt callstack 0
  9124  000003                     i2___wmul@multiplicand:
  9125                           	opt callstack 0
  9126  000003                     i2___awmod@divisor:
  9127                           	opt callstack 0
  9128  000003                     i2___lwmod@divisor:
  9129                           	opt callstack 0
  9130                           
  9131                           ; 2 bytes @ 0x2
  9132  000003                     	ds	2
  9133  000005                     ?_fabs:
  9134                           	opt callstack 0
  9135  000005                     ?i2___xxtofl:
  9136                           	opt callstack 0
  9137  000005                     i2___awmod@counter:
  9138                           	opt callstack 0
  9139  000005                     i2___lwmod@counter:
  9140                           	opt callstack 0
  9141  000005                     i2___wmul@product:
  9142                           	opt callstack 0
  9143  000005                     fabs@d:
  9144                           	opt callstack 0
  9145  000005                     i2___lldiv@divisor:
  9146                           	opt callstack 0
  9147  000005                     i2__div_to_l_@f2:
  9148                           	opt callstack 0
  9149  000005                     i2___fleq@ff2:
  9150                           	opt callstack 0
  9151  000005                     i2___flge@ff2:
  9152                           	opt callstack 0
  9153  000005                     i2__tdiv_to_l_@f2:
  9154                           	opt callstack 0
  9155  000005                     i2___xxtofl@val:
  9156                           	opt callstack 0
  9157                           
  9158                           ; 4 bytes @ 0x4
  9159  000005                     	ds	1
  9160  000006                     ?i2___lwdiv:
  9161                           	opt callstack 0
  9162  000006                     i2___awmod@sign:
  9163                           	opt callstack 0
  9164  000006                     i2___lwdiv@dividend:
  9165                           	opt callstack 0
  9166                           
  9167                           ; 2 bytes @ 0x5
  9168  000006                     	ds	1
  9169  000007                     ?i2___awdiv:
  9170                           	opt callstack 0
  9171  000007                     i2___awdiv@dividend:
  9172                           	opt callstack 0
  9173                           
  9174                           ; 2 bytes @ 0x6
  9175  000007                     	ds	1
  9176  000008                     i2___lwdiv@divisor:
  9177                           	opt callstack 0
  9178                           
  9179                           ; 2 bytes @ 0x7
  9180  000008                     	ds	1
  9181  000009                     ??i2___fleq:
  9182  000009                     ??i2___flge:
  9183  000009                     ??i2__tdiv_to_l_:
  9184  000009                     ??i2___xxtofl:
  9185  000009                     i2___awdiv@divisor:
  9186                           	opt callstack 0
  9187  000009                     i2___lldiv@quotient:
  9188                           	opt callstack 0
  9189  000009                     i2__div_to_l_@quot:
  9190                           	opt callstack 0
  9191                           
  9192                           ; 4 bytes @ 0x8
  9193  000009                     	ds	1
  9194  00000A                     i2___lwdiv@counter:
  9195                           	opt callstack 0
  9196                           
  9197                           ; 1 bytes @ 0x9
  9198  00000A                     	ds	1
  9199  00000B                     i2___awdiv@counter:
  9200                           	opt callstack 0
  9201  00000B                     i2___lwdiv@quotient:
  9202                           	opt callstack 0
  9203                           
  9204                           ; 2 bytes @ 0xA
  9205  00000B                     	ds	1
  9206  00000C                     i2___awdiv@sign:
  9207                           	opt callstack 0
  9208  00000C                     i2__tdiv_to_l_@quot:
  9209                           	opt callstack 0
  9210                           
  9211                           ; 4 bytes @ 0xB
  9212  00000C                     	ds	1
  9213  00000D                     i2___lldiv@counter:
  9214                           	opt callstack 0
  9215  00000D                     i2__div_to_l_@cntr:
  9216                           	opt callstack 0
  9217  00000D                     i2___xxtofl@sign:
  9218                           	opt callstack 0
  9219  00000D                     i2___awdiv@quotient:
  9220                           	opt callstack 0
  9221                           
  9222                           ; 2 bytes @ 0xC
  9223  00000D                     	ds	1
  9224  00000E                     ?i2___llmod:
  9225                           	opt callstack 0
  9226  00000E                     i2__div_to_l_@exp1:
  9227                           	opt callstack 0
  9228  00000E                     i2___xxtofl@exp:
  9229                           	opt callstack 0
  9230  00000E                     i2___llmod@dividend:
  9231                           	opt callstack 0
  9232                           
  9233                           ; 4 bytes @ 0xD
  9234  00000E                     	ds	1
  9235  00000F                     i2___xxtofl@arg:
  9236                           	opt callstack 0
  9237                           
  9238                           ; 4 bytes @ 0xE
  9239  00000F                     	ds	1
  9240  000010                     i2__tdiv_to_l_@cntr:
  9241                           	opt callstack 0
  9242                           
  9243                           ; 1 bytes @ 0xF
  9244  000010                     	ds	1
  9245  000011                     i2__tdiv_to_l_@exp1:
  9246                           	opt callstack 0
  9247                           
  9248                           ; 1 bytes @ 0x10
  9249  000011                     	ds	1
  9250  000012                     i2___llmod@divisor:
  9251                           	opt callstack 0
  9252                           
  9253                           ; 4 bytes @ 0x11
  9254  000012                     	ds	1
  9255  000013                     ?i2___fldiv:
  9256                           	opt callstack 0
  9257  000013                     i2___fldiv@b:
  9258                           	opt callstack 0
  9259                           
  9260                           ; 4 bytes @ 0x12
  9261  000013                     	ds	3
  9262  000016                     i2___llmod@counter:
  9263                           	opt callstack 0
  9264                           
  9265                           ; 1 bytes @ 0x15
  9266  000016                     	ds	1
  9267  000017                     i2___fldiv@a:
  9268                           	opt callstack 0
  9269                           
  9270                           ; 4 bytes @ 0x16
  9271  000017                     	ds	4
  9272  00001B                     ??i2___fldiv:
  9273                           
  9274                           ; 1 bytes @ 0x1A
  9275  00001B                     	ds	4
  9276  00001F                     i2___fldiv@rem:
  9277                           	opt callstack 0
  9278                           
  9279                           ; 4 bytes @ 0x1E
  9280  00001F                     	ds	4
  9281  000023                     i2___fldiv@sign:
  9282                           	opt callstack 0
  9283                           
  9284                           ; 1 bytes @ 0x22
  9285  000023                     	ds	1
  9286  000024                     i2___fldiv@new_exp:
  9287                           	opt callstack 0
  9288                           
  9289                           ; 2 bytes @ 0x23
  9290  000024                     	ds	2
  9291  000026                     i2___fldiv@grs:
  9292                           	opt callstack 0
  9293                           
  9294                           ; 4 bytes @ 0x25
  9295  000026                     	ds	4
  9296  00002A                     i2___fldiv@bexp:
  9297                           	opt callstack 0
  9298                           
  9299                           ; 1 bytes @ 0x29
  9300  00002A                     	ds	1
  9301  00002B                     i2___fldiv@aexp:
  9302                           	opt callstack 0
  9303                           
  9304                           ; 1 bytes @ 0x2A
  9305  00002B                     	ds	1
  9306  00002C                     ?i2___flmul:
  9307                           	opt callstack 0
  9308  00002C                     i2___flmul@b:
  9309                           	opt callstack 0
  9310                           
  9311                           ; 4 bytes @ 0x2B
  9312  00002C                     	ds	4
  9313  000030                     i2___flmul@a:
  9314                           	opt callstack 0
  9315                           
  9316                           ; 4 bytes @ 0x2F
  9317  000030                     	ds	4
  9318  000034                     ??i2___flmul:
  9319                           
  9320                           ; 1 bytes @ 0x33
  9321  000034                     	ds	4
  9322  000038                     i2___flmul@sign:
  9323                           	opt callstack 0
  9324                           
  9325                           ; 1 bytes @ 0x37
  9326  000038                     	ds	1
  9327  000039                     i2___flmul@aexp:
  9328                           	opt callstack 0
  9329                           
  9330                           ; 1 bytes @ 0x38
  9331  000039                     	ds	1
  9332  00003A                     i2___flmul@grs:
  9333                           	opt callstack 0
  9334                           
  9335                           ; 4 bytes @ 0x39
  9336  00003A                     	ds	4
  9337  00003E                     i2___flmul@bexp:
  9338                           	opt callstack 0
  9339                           
  9340                           ; 1 bytes @ 0x3D
  9341  00003E                     	ds	1
  9342  00003F                     i2___flmul@prod:
  9343                           	opt callstack 0
  9344                           
  9345                           ; 4 bytes @ 0x3E
  9346  00003F                     	ds	4
  9347  000043                     i2___flmul@temp:
  9348                           	opt callstack 0
  9349                           
  9350                           ; 2 bytes @ 0x42
  9351  000043                     	ds	2
  9352  000045                     ?i2_fround:
  9353                           	opt callstack 0
  9354  000045                     ?i2_scale:
  9355                           	opt callstack 0
  9356                           
  9357                           ; 4 bytes @ 0x44
  9358  000045                     	ds	4
  9359  000049                     i2_fround$6413:
  9360                           	opt callstack 0
  9361  000049                     i2_scale$6414:
  9362                           	opt callstack 0
  9363                           
  9364                           ; 4 bytes @ 0x48
  9365  000049                     	ds	4
  9366  00004D                     i2scale@scl:
  9367                           	opt callstack 0
  9368  00004D                     i2_fround$6412:
  9369                           	opt callstack 0
  9370                           
  9371                           ; 4 bytes @ 0x4C
  9372  00004D                     	ds	1
  9373  00004E                     ?i2___fltol:
  9374                           	opt callstack 0
  9375  00004E                     i2___fltol@f1:
  9376                           	opt callstack 0
  9377                           
  9378                           ; 4 bytes @ 0x4D
  9379  00004E                     	ds	3
  9380  000051                     i2fround@prec:
  9381                           	opt callstack 0
  9382                           
  9383                           ; 1 bytes @ 0x50
  9384  000051                     	ds	1
  9385  000052                     ??i2___fltol:
  9386  000052                     ?i2___fladd:
  9387                           	opt callstack 0
  9388  000052                     i2___fladd@b:
  9389                           	opt callstack 0
  9390                           
  9391                           ; 4 bytes @ 0x51
  9392  000052                     	ds	4
  9393  000056                     i2___fltol@sign1:
  9394                           	opt callstack 0
  9395  000056                     i2___fladd@a:
  9396                           	opt callstack 0
  9397                           
  9398                           ; 4 bytes @ 0x55
  9399  000056                     	ds	1
  9400  000057                     i2___fltol@exp1:
  9401                           	opt callstack 0
  9402                           
  9403                           ; 1 bytes @ 0x56
  9404  000057                     	ds	3
  9405  00005A                     ??i2___fladd:
  9406                           
  9407                           ; 1 bytes @ 0x59
  9408  00005A                     	ds	4
  9409  00005E                     ??_heartbeatTimerHandler:
  9410  00005E                     
  9411                           ; 1 bytes @ 0x5D
  9412  00005E                     	ds	1
  9413  00005F                     
  9414                           ; 1 bytes @ 0x5E
  9415 ;;
  9416 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  9417 ;;
  9418 ;; *************** function _main *****************
  9419 ;; Defined at:
  9420 ;;		line 76 in file "main.c"
  9421 ;; Parameters:    Size  Location     Type
  9422 ;;		None
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;		None
  9425 ;; Return value:  Size  Location     Type
  9426 ;;                  1    wreg      void 
  9427 ;; Registers used:
  9428 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9429 ;; Tracked objects:
  9430 ;;		On entry : 0/0
  9431 ;;		On exit  : 0/0
  9432 ;;		Unchanged: 0/0
  9433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9436 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
  9437 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
  9438 ;;Total ram usage:        2 bytes
  9439 ;; Hardware stack levels required when called:   19
  9440 ;; This function calls:
  9441 ;;		_ADCC_SetADTIInterruptHandler
  9442 ;;		_INT1_SetInterruptHandler
  9443 ;;		_INT2_SetInterruptHandler
  9444 ;;		_IOCBF2_SetInterruptHandler
  9445 ;;		_IOCBF3_SetInterruptHandler
  9446 ;;		_LM73AcquisitionHandler
  9447 ;;		_LM73TempSensorInitialize
  9448 ;;		_OLED_Clear
  9449 ;;		_OLED_Init
  9450 ;;		_OLED_updateHandler
  9451 ;;		_SYSTEM_Initialize
  9452 ;;		_TMR0_SetInterruptHandler
  9453 ;;		_TMR1_Reload
  9454 ;;		_TMR1_SetInterruptHandler
  9455 ;;		_TMR1_StopTimer
  9456 ;;		_TMR2_SetInterruptHandler
  9457 ;;		_TMR3_Reload
  9458 ;;		_TMR3_SetInterruptHandler
  9459 ;;		_TMR3_StopTimer
  9460 ;;		_TMR5_StopTimer
  9461 ;;		_TMR5_WriteTimer
  9462 ;;		_freqMeasStartCaptures
  9463 ;;		_getCauseOfReset
  9464 ;;		_getCauseOfResetString
  9465 ;;		_printf
  9466 ;;		_terminalClearScreen
  9467 ;;		_terminalSetCursorHome
  9468 ;;		_terminalTextAttributes
  9469 ;;		_terminalTextAttributesReset
  9470 ;;		_terminal_ringBufferPull
  9471 ;;		_updateErrorLEDs
  9472 ;; This function is called by:
  9473 ;;		Startup code after reset
  9474 ;; This function uses a non-reentrant model
  9475 ;;
  9476                           
  9477                           	psect	text0
  9478  018CAC                     __ptext0:
  9479                           	opt callstack 0
  9480  018CAC                     _main:
  9481                           	opt callstack 12
  9482                           
  9483                           ;main.c: 80: reset_cause = getCauseOfReset();
  9484                           
  9485                           ;incstack = 0
  9486  018CAC  EC5A  F0DC         	call	_getCauseOfReset	;wreg free
  9487  018CB0  0102               	movlb	2	; () banked
  9488  018CB2  6FFF               	movwf	_reset_cause& (0+255),b
  9489                           
  9490                           ; BSR set to: 2
  9491                           ;main.c: 83: _delay((unsigned long)((250)*(64000000/4000.0)));
  9492  018CB4  0E15               	movlw	21
  9493  018CB6  0103               	movlb	3	; () banked
  9494  018CB8  6FFE               	movwf	(??_main+1)& (0+255),b
  9495  018CBA  0E4B               	movlw	75
  9496  018CBC  6FFD               	movwf	??_main& (0+255),b
  9497  018CBE  0EBE               	movlw	190
  9498  018CC0                     u29157:
  9499  018CC0  2EE8               	decfsz	wreg,f,c
  9500  018CC2  D7FE               	bra	u29157
  9501  018CC4  2FFD               	decfsz	??_main& (0+255),f,b
  9502  018CC6  D7FC               	bra	u29157
  9503  018CC8  2FFE               	decfsz	(??_main+1)& (0+255),f,b
  9504  018CCA  D7FA               	bra	u29157
  9505  018CCC  F000               	nop	
  9506                           
  9507                           ;main.c: 87: SYSTEM_Initialize();
  9508  018CCE  EC16  F0E0         	call	_SYSTEM_Initialize	;wreg free
  9509                           
  9510                           ;main.c: 90: TMR0_SetInterruptHandler(heartbeatTimerHandler);
  9511  018CD2  0EC0               	movlw	low _heartbeatTimerHandler
  9512  018CD4  0102               	movlb	2	; () banked
  9513  018CD6  6F00               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  9514  018CD8  0E9A               	movlw	high _heartbeatTimerHandler
  9515  018CDA  6F01               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9516  018CDC  0E01               	movlw	low (_heartbeatTimerHandler shr (0+16))
  9517  018CDE  6F02               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9518  018CE0  ECED  F0E4         	call	_TMR0_SetInterruptHandler	;wreg free
  9519                           
  9520                           ;main.c: 93: TMR2_SetInterruptHandler(ADC_acquisitionTimerHandler);
  9521  018CE4  0E0E               	movlw	low _ADC_acquisitionTimerHandler
  9522  018CE6  0102               	movlb	2	; () banked
  9523  018CE8  6F00               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  9524  018CEA  0EC8               	movlw	high _ADC_acquisitionTimerHandler
  9525  018CEC  6F01               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9526  018CEE  0E01               	movlw	low (_ADC_acquisitionTimerHandler shr (0+16))
  9527  018CF0  6F02               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9528  018CF2  ECDF  F0E4         	call	_TMR2_SetInterruptHandler	;wreg free
  9529                           
  9530                           ;main.c: 96: ADCC_SetADTIInterruptHandler(ADC_PostProcessingHandler);
  9531  018CF6  0E82               	movlw	low _ADC_PostProcessingHandler
  9532  018CF8  0102               	movlb	2	; () banked
  9533  018CFA  6F00               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
  9534  018CFC  0E40               	movlw	high _ADC_PostProcessingHandler
  9535  018CFE  6F01               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
  9536  018D00  0E01               	movlw	low (_ADC_PostProcessingHandler shr (0+16))
  9537  018D02  6F02               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
  9538  018D04  EC1E  F0E5         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  9539                           
  9540                           ;main.c: 99: INT1_SetInterruptHandler(leftCapTouchHandler);
  9541  018D08  0EB6               	movlw	low _leftCapTouchHandler
  9542  018D0A  0102               	movlb	2	; () banked
  9543  018D0C  6F00               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  9544  018D0E  0EC8               	movlw	high _leftCapTouchHandler
  9545  018D10  6F01               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9546  018D12  0E01               	movlw	low (_leftCapTouchHandler shr (0+16))
  9547  018D14  6F02               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9548  018D16  EC09  F0E5         	call	_INT1_SetInterruptHandler	;wreg free
  9549                           
  9550                           ;main.c: 102: INT2_SetInterruptHandler(rightCapTouchHandler);
  9551  018D1A  0EA0               	movlw	low _rightCapTouchHandler
  9552  018D1C  0102               	movlb	2	; () banked
  9553  018D1E  6F00               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  9554  018D20  0EC8               	movlw	high _rightCapTouchHandler
  9555  018D22  6F01               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9556  018D24  0E01               	movlw	low (_rightCapTouchHandler shr (0+16))
  9557  018D26  6F02               	movwf	(INT2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9558  018D28  EC02  F0E5         	call	_INT2_SetInterruptHandler	;wreg free
  9559                           
  9560                           ;main.c: 105: IOCBF2_SetInterruptHandler(QIIdleIOCHandler);
  9561  018D2C  0EF4               	movlw	low _QIIdleIOCHandler
  9562  018D2E  0102               	movlb	2	; () banked
  9563  018D30  6F00               	movwf	IOCBF2_SetInterruptHandler@InterruptHandler& (0+255),b
  9564  018D32  0EC8               	movlw	high _QIIdleIOCHandler
  9565  018D34  6F01               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9566  018D36  0E01               	movlw	low (_QIIdleIOCHandler shr (0+16))
  9567  018D38  6F02               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9568  018D3A  ECFB  F0E4         	call	_IOCBF2_SetInterruptHandler	;wreg free
  9569                           
  9570                           ;main.c: 108: IOCBF3_SetInterruptHandler(QIChargeIOCHandler);
  9571  018D3E  0EA0               	movlw	low _QIChargeIOCHandler
  9572  018D40  0102               	movlb	2	; () banked
  9573  018D42  6F00               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler& (0+255),b
  9574  018D44  0EC7               	movlw	high _QIChargeIOCHandler
  9575  018D46  6F01               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9576  018D48  0E01               	movlw	low (_QIChargeIOCHandler shr (0+16))
  9577  018D4A  6F02               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9578  018D4C  ECF4  F0E4         	call	_IOCBF3_SetInterruptHandler	;wreg free
  9579                           
  9580                           ;main.c: 111: TMR3_SetInterruptHandler(QIIdleChargedTimerHandler);
  9581  018D50  0E0A               	movlw	low _QIIdleChargedTimerHandler
  9582  018D52  0102               	movlb	2	; () banked
  9583  018D54  6F00               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  9584  018D56  0EC7               	movlw	high _QIIdleChargedTimerHandler
  9585  018D58  6F01               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9586  018D5A  0E01               	movlw	low (_QIIdleChargedTimerHandler shr (0+16))
  9587  018D5C  6F02               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9588  018D5E  ECD8  F0E4         	call	_TMR3_SetInterruptHandler	;wreg free
  9589                           
  9590                           ;main.c: 112: TMR3_StopTimer();
  9591  018D62  EC84  F0E5         	call	_TMR3_StopTimer	;wreg free
  9592                           
  9593                           ;main.c: 113: TMR3_Reload();
  9594  018D66  ECCA  F0E4         	call	_TMR3_Reload	;wreg free
  9595                           
  9596                           ;main.c: 116: TMR1_SetInterruptHandler(QIErrorTimerHandler);
  9597  018D6A  0E8A               	movlw	low _QIErrorTimerHandler
  9598  018D6C  0102               	movlb	2	; () banked
  9599  018D6E  6F00               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  9600  018D70  0EC8               	movlw	high _QIErrorTimerHandler
  9601  018D72  6F01               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9602  018D74  0E01               	movlw	low (_QIErrorTimerHandler shr (0+16))
  9603  018D76  6F02               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9604  018D78  ECE6  F0E4         	call	_TMR1_SetInterruptHandler	;wreg free
  9605                           
  9606                           ;main.c: 117: TMR1_StopTimer();
  9607  018D7C  EC86  F0E5         	call	_TMR1_StopTimer	;wreg free
  9608                           
  9609                           ;main.c: 118: TMR1_Reload();
  9610  018D80  ECD1  F0E4         	call	_TMR1_Reload	;wreg free
  9611                           
  9612                           ;main.c: 122: TMR5_StopTimer();
  9613  018D84  EC82  F0E5         	call	_TMR5_StopTimer	;wreg free
  9614                           
  9615                           ;main.c: 123: TMR5_WriteTimer(0);
  9616  018D88  0E00               	movlw	0
  9617  018D8A  0102               	movlb	2	; () banked
  9618  018D8C  6F01               	movwf	(TMR5_WriteTimer@timerVal+1)& (0+255),b
  9619  018D8E  0E00               	movlw	0
  9620  018D90  6F00               	movwf	TMR5_WriteTimer@timerVal& (0+255),b
  9621  018D92  EC35  F0E3         	call	_TMR5_WriteTimer	;wreg free
  9622                           
  9623                           ;main.c: 126: (INTCONbits.GIEH = 1);
  9624  018D96  8EF2               	bsf	4082,7,c	;volatile
  9625                           
  9626                           ;main.c: 129: (INTCONbits.GIEL = 1);
  9627  018D98  8CF2               	bsf	4082,6,c	;volatile
  9628                           
  9629                           ;main.c: 132: terminalClearScreen();
  9630  018D9A  ECC2  F0E4         	call	_terminalClearScreen	;wreg free
  9631                           
  9632                           ;main.c: 133: terminalSetCursorHome();
  9633  018D9E  ECBA  F0E4         	call	_terminalSetCursorHome	;wreg free
  9634                           
  9635                           ;main.c: 135: OLED_Init();
  9636  018DA2  EC07  F0D8         	call	_OLED_Init	;wreg free
  9637                           
  9638                           ;main.c: 136: OLED_Clear();
  9639  018DA6  EC35  F0E0         	call	_OLED_Clear	;wreg free
  9640                           
  9641                           ;main.c: 139: OLED_Frame = OLED_Boot_Frame_1;
  9642  018DAA  0E00               	movlw	0
  9643  018DAC  0102               	movlb	2	; () banked
  9644  018DAE  6FD8               	movwf	_OLED_Frame& (0+255),b
  9645                           
  9646                           ; BSR set to: 2
  9647                           ;main.c: 140: OLED_updateHandler();
  9648  018DB0  EC1E  F097         	call	_OLED_updateHandler	;wreg free
  9649                           
  9650                           ;main.c: 143: LM73TempSensorInitialize();
  9651  018DB4  ECCF  F0C8         	call	_LM73TempSensorInitialize	;wreg free
  9652                           
  9653                           ;main.c: 146: terminalTextAttributes(GREEN, BLACK, NORMAL);
  9654  018DB8  0E00               	movlw	0
  9655  018DBA  0102               	movlb	2	; () banked
  9656  018DBC  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
  9657  018DBE  0E00               	movlw	0
  9658  018DC0  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9659  018DC2  0E02               	movlw	2
  9660  018DC4  EC49  F0B3         	call	_terminalTextAttributes
  9661                           
  9662                           ;main.c: 147: printf("QI Charger with Digital Monitoring\n\r";main.c: 148: "Boot Complet
      +                          e\n\r");
  9663  018DC8  0ED6               	movlw	low STR_2
  9664  018DCA  0103               	movlb	3	; () banked
  9665  018DCC  6FEB               	movwf	printf@f& (0+255),b
  9666  018DCE  0EF1               	movlw	high STR_2
  9667  018DD0  6FEC               	movwf	(printf@f+1)& (0+255),b
  9668  018DD2  ECF7  F0DF         	call	_printf	;wreg free
  9669                           
  9670                           ;main.c: 151: if ( reset_cause != Power_On_Reset) {
  9671  018DD6  0102               	movlb	2	; () banked
  9672  018DD8  05FF               	decf	_reset_cause& (0+255),w,b
  9673  018DDA  B4D8               	btfsc	status,2,c
  9674  018DDC  D008               	goto	l22534
  9675                           
  9676                           ; BSR set to: 2
  9677                           ;main.c: 153: terminalTextAttributes(RED, BLACK, NORMAL);
  9678  018DDE  0E00               	movlw	0
  9679  018DE0  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
  9680  018DE2  0E00               	movlw	0
  9681  018DE4  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9682  018DE6  0E01               	movlw	1
  9683  018DE8  EC49  F0B3         	call	_terminalTextAttributes
  9684                           
  9685                           ;main.c: 155: }
  9686  018DEC  D007               	goto	l1269
  9687  018DEE                     l22534:
  9688                           
  9689                           ; BSR set to: 2
  9690                           ;main.c: 157: else {;main.c: 159: terminalTextAttributes(GREEN, BLACK, NORMAL);
  9691  018DEE  0E00               	movlw	0
  9692  018DF0  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
  9693  018DF2  0E00               	movlw	0
  9694  018DF4  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9695  018DF6  0E02               	movlw	2
  9696  018DF8  EC49  F0B3         	call	_terminalTextAttributes
  9697  018DFC                     l1269:
  9698                           
  9699                           ;main.c: 161: };main.c: 164: printf("Cause of most recent device reset was: %s\n\r", get
      +                          CauseOfResetString(reset_cause));
  9700  018DFC  0E42               	movlw	low STR_3
  9701  018DFE  0103               	movlb	3	; () banked
  9702  018E00  6FEB               	movwf	printf@f& (0+255),b
  9703  018E02  0EF4               	movlw	high STR_3
  9704  018E04  6FEC               	movwf	(printf@f+1)& (0+255),b
  9705  018E06  0102               	movlb	2	; () banked
  9706  018E08  51FF               	movf	_reset_cause& (0+255),w,b
  9707  018E0A  EC83  F0E1         	call	_getCauseOfResetString
  9708  018E0E  C200  F3ED         	movff	?_getCauseOfResetString,?_printf+2
  9709  018E12  C201  F3EE         	movff	?_getCauseOfResetString+1,?_printf+3
  9710  018E16  ECF7  F0DF         	call	_printf	;wreg free
  9711                           
  9712                           ;main.c: 166: terminalTextAttributes(GREEN, BLACK, NORMAL);
  9713  018E1A  0E00               	movlw	0
  9714  018E1C  0102               	movlb	2	; () banked
  9715  018E1E  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
  9716  018E20  0E00               	movlw	0
  9717  018E22  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9718  018E24  0E02               	movlw	2
  9719  018E26  EC49  F0B3         	call	_terminalTextAttributes
  9720                           
  9721                           ;main.c: 168: LATCbits.LATC2 = 0;
  9722  018E2A  9485               	bcf	3973,2,c	;volatile
  9723                           
  9724                           ;main.c: 169: printf("QI Wireless Power Conversion Enabled\n\r");
  9725  018E2C  0E63               	movlw	low STR_4
  9726  018E2E  0103               	movlb	3	; () banked
  9727  018E30  6FEB               	movwf	printf@f& (0+255),b
  9728  018E32  0EF5               	movlw	high STR_4
  9729  018E34  6FEC               	movwf	(printf@f+1)& (0+255),b
  9730  018E36  ECF7  F0DF         	call	_printf	;wreg free
  9731                           
  9732                           ;main.c: 171: terminalTextAttributes(YELLOW, BLACK, NORMAL);
  9733  018E3A  0E00               	movlw	0
  9734  018E3C  0102               	movlb	2	; () banked
  9735  018E3E  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
  9736  018E40  0E00               	movlw	0
  9737  018E42  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9738  018E44  0E03               	movlw	3
  9739  018E46  EC49  F0B3         	call	_terminalTextAttributes
  9740                           
  9741                           ;main.c: 172: printf("\n\rHelp messages and neutral responses appear in yellow\n\r");
  9742  018E4A  0EEC               	movlw	low STR_5
  9743  018E4C  0103               	movlb	3	; () banked
  9744  018E4E  6FEB               	movwf	printf@f& (0+255),b
  9745  018E50  0EEF               	movlw	high STR_5
  9746  018E52  6FEC               	movwf	(printf@f+1)& (0+255),b
  9747  018E54  ECF7  F0DF         	call	_printf	;wreg free
  9748                           
  9749                           ;main.c: 173: terminalTextAttributes(GREEN, BLACK, NORMAL);
  9750  018E58  0E00               	movlw	0
  9751  018E5A  0102               	movlb	2	; () banked
  9752  018E5C  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
  9753  018E5E  0E00               	movlw	0
  9754  018E60  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9755  018E62  0E02               	movlw	2
  9756  018E64  EC49  F0B3         	call	_terminalTextAttributes
  9757                           
  9758                           ;main.c: 174: printf("System parameters and affirmative responses appear in green\n\r");
  9759  018E68  0E98               	movlw	low STR_6
  9760  018E6A  0103               	movlb	3	; () banked
  9761  018E6C  6FEB               	movwf	printf@f& (0+255),b
  9762  018E6E  0EED               	movlw	high STR_6
  9763  018E70  6FEC               	movwf	(printf@f+1)& (0+255),b
  9764  018E72  ECF7  F0DF         	call	_printf	;wreg free
  9765                           
  9766                           ;main.c: 175: terminalTextAttributes(CYAN, BLACK, NORMAL);
  9767  018E76  0E00               	movlw	0
  9768  018E78  0102               	movlb	2	; () banked
  9769  018E7A  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
  9770  018E7C  0E00               	movlw	0
  9771  018E7E  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9772  018E80  0E06               	movlw	6
  9773  018E82  EC49  F0B3         	call	_terminalTextAttributes
  9774                           
  9775                           ;main.c: 176: printf("Measurement responses appear in cyan\n\r");
  9776  018E86  0E8A               	movlw	low STR_7
  9777  018E88  0103               	movlb	3	; () banked
  9778  018E8A  6FEB               	movwf	printf@f& (0+255),b
  9779  018E8C  0EF5               	movlw	high STR_7
  9780  018E8E  6FEC               	movwf	(printf@f+1)& (0+255),b
  9781  018E90  ECF7  F0DF         	call	_printf	;wreg free
  9782                           
  9783                           ;main.c: 177: terminalTextAttributes(RED, BLACK, NORMAL);
  9784  018E94  0E00               	movlw	0
  9785  018E96  0102               	movlb	2	; () banked
  9786  018E98  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
  9787  018E9A  0E00               	movlw	0
  9788  018E9C  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9789  018E9E  0E01               	movlw	1
  9790  018EA0  EC49  F0B3         	call	_terminalTextAttributes
  9791                           
  9792                           ;main.c: 178: printf("Errors and negative responses appear in red\n\r");
  9793  018EA4  0E8E               	movlw	low STR_8
  9794  018EA6  0103               	movlb	3	; () banked
  9795  018EA8  6FEB               	movwf	printf@f& (0+255),b
  9796  018EAA  0EF3               	movlw	high STR_8
  9797  018EAC  6FEC               	movwf	(printf@f+1)& (0+255),b
  9798  018EAE  ECF7  F0DF         	call	_printf	;wreg free
  9799                           
  9800                           ;main.c: 179: terminalTextAttributesReset();
  9801  018EB2  ECAA  F0E4         	call	_terminalTextAttributesReset	;wreg free
  9802                           
  9803                           ;main.c: 180: printf("User input appears in white\n\r");
  9804  018EB6  0E3B               	movlw	low STR_9
  9805  018EB8  0103               	movlb	3	; () banked
  9806  018EBA  6FEB               	movwf	printf@f& (0+255),b
  9807  018EBC  0EF8               	movlw	high STR_9
  9808  018EBE  6FEC               	movwf	(printf@f+1)& (0+255),b
  9809  018EC0  ECF7  F0DF         	call	_printf	;wreg free
  9810                           
  9811                           ;main.c: 181: terminalTextAttributes(YELLOW, BLACK, NORMAL);
  9812  018EC4  0E00               	movlw	0
  9813  018EC6  0102               	movlb	2	; () banked
  9814  018EC8  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
  9815  018ECA  0E00               	movlw	0
  9816  018ECC  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9817  018ECE  0E03               	movlw	3
  9818  018ED0  EC49  F0B3         	call	_terminalTextAttributes
  9819                           
  9820                           ;main.c: 182: printf("\n\rCall 'Help' for list of supported commands\n\r");
  9821  018ED4  0E31               	movlw	low STR_10
  9822  018ED6  0103               	movlb	3	; () banked
  9823  018ED8  6FEB               	movwf	printf@f& (0+255),b
  9824  018EDA  0EF3               	movlw	high STR_10
  9825  018EDC  6FEC               	movwf	(printf@f+1)& (0+255),b
  9826  018EDE  ECF7  F0DF         	call	_printf	;wreg free
  9827                           
  9828                           ;main.c: 185: terminalTextAttributesReset();
  9829  018EE2  ECAA  F0E4         	call	_terminalTextAttributesReset	;wreg free
  9830                           
  9831                           ;main.c: 188: if (PORTBbits.RB3 == 0 && PORTBbits.RB2 == 0) nxq_charge_state = QI_Idle;
  9832  018EE6  A68E               	btfss	3982,3,c	;volatile
  9833  018EE8  B48E               	btfsc	3982,2,c	;volatile
  9834  018EEA  D002               	goto	l1270
  9835  018EEC  0E00               	movlw	0
  9836  018EEE  D004               	goto	L1
  9837  018EF0                     l1270:
  9838                           
  9839                           ;main.c: 189: else if (PORTBbits.RB3 == 1 && PORTBbits.RB2 == 1) nxq_charge_state = QI_F
      +                          ully_Charged;
  9840  018EF0  B68E               	btfsc	3982,3,c	;volatile
  9841  018EF2  A48E               	btfss	3982,2,c	;volatile
  9842  018EF4  D003               	goto	l22548
  9843  018EF6  0E02               	movlw	2
  9844  018EF8                     L1:
  9845  018EF8  0101               	movlb	1	; () banked
  9846  018EFA  6F8C               	movwf	_nxq_charge_state& (0+255),b
  9847  018EFC                     l22548:
  9848                           
  9849                           ;main.c: 195: if (eusart2RxStringReady) terminal_ringBufferPull();
  9850  018EFC  0100               	movlb	0	; () banked
  9851  018EFE  B1FF               	btfsc	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  9852                           
  9853                           ; BSR set to: 0
  9854  018F00  ECF7  F0D1         	call	_terminal_ringBufferPull	;wreg free
  9855                           
  9856                           ;main.c: 198: if (OLED_update_flag) OLED_updateHandler();
  9857  018F04  0102               	movlb	2	; () banked
  9858  018F06  51D7               	movf	_OLED_update_flag& (0+255),w,b
  9859  018F08  A4D8               	btfss	status,2,c
  9860                           
  9861                           ; BSR set to: 2
  9862  018F0A  EC1E  F097         	call	_OLED_updateHandler	;wreg free
  9863                           
  9864                           ;main.c: 201: if (LM73_start_flag) LM73AcquisitionHandler();
  9865  018F0E  0102               	movlb	2	; () banked
  9866  018F10  51D9               	movf	_LM73_start_flag& (0+255),w,b
  9867  018F12  A4D8               	btfss	status,2,c
  9868                           
  9869                           ; BSR set to: 2
  9870  018F14  ECEB  F0C9         	call	_LM73AcquisitionHandler	;wreg free
  9871                           
  9872                           ;main.c: 204: if (freq_meas_start_flag) freqMeasStartCaptures();
  9873  018F18  0102               	movlb	2	; () banked
  9874  018F1A  51DA               	movf	_freq_meas_start_flag& (0+255),w,b
  9875  018F1C  A4D8               	btfss	status,2,c
  9876                           
  9877                           ; BSR set to: 2
  9878  018F1E  EC59  F0E5         	call	_freqMeasStartCaptures	;wreg free
  9879                           
  9880                           ;main.c: 207: updateErrorLEDs();
  9881  018F22  EC87  F0DE         	call	_updateErrorLEDs	;wreg free
  9882  018F26  D7EA               	goto	l22548
  9883  018F28                     __end_of_main:
  9884                           	opt callstack 0
  9885                           
  9886 ;; *************** function _terminal_ringBufferPull *****************
  9887 ;; Defined at:
  9888 ;;		line 6 in file "ring_buffer_interface.c"
  9889 ;; Parameters:    Size  Location     Type
  9890 ;;		None
  9891 ;; Auto vars:     Size  Location     Type
  9892 ;;  index           2   20[BANK5 ] int 
  9893 ;;  index           2   22[BANK5 ] int 
  9894 ;;  charNumber      2   18[BANK5 ] int 
  9895 ;; Return value:  Size  Location     Type
  9896 ;;                  1    wreg      void 
  9897 ;; Registers used:
  9898 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9899 ;; Tracked objects:
  9900 ;;		On entry : 0/0
  9901 ;;		On exit  : 0/0
  9902 ;;		Unchanged: 0/0
  9903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9905 ;;      Locals:         0       0       0       0       0       0       6       0       0       0       0       0       
      +0       0       0       0
  9906 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
  9907 ;;      Totals:         0       0       0       0       1       0       6       0       0       0       0       0       
      +0       0       0       0
  9908 ;;Total ram usage:        7 bytes
  9909 ;; Hardware stack levels used:    1
  9910 ;; Hardware stack levels required when called:   18
  9911 ;; This function calls:
  9912 ;;		_EUSART2_Read
  9913 ;;		_ringBufferLUT
  9914 ;;		_strlen
  9915 ;; This function is called by:
  9916 ;;		_main
  9917 ;; This function uses a non-reentrant model
  9918 ;;
  9919                           
  9920                           	psect	text1
  9921  01A3EE                     __ptext1:
  9922                           	opt callstack 0
  9923  01A3EE                     _terminal_ringBufferPull:
  9924                           	opt callstack 12
  9925                           
  9926                           ;ring_buffer_interface.c: 8: int charNumber = eusart2RxCount;
  9927                           
  9928                           ;incstack = 0
  9929  01A3EE  C18E  F512         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
  9930  01A3F2  0105               	movlb	5	; () banked
  9931  01A3F4  6B13               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
  9932                           
  9933                           ; BSR set to: 5
  9934                           ;ring_buffer_interface.c: 11: for (int index = 0; index < 64; index++) {
  9935  01A3F6  0E00               	movlw	0
  9936  01A3F8  6F17               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
  9937  01A3FA  0E00               	movlw	0
  9938  01A3FC  6F16               	movwf	terminal_ringBufferPull@index& (0+255),b
  9939  01A3FE                     l22266:
  9940                           
  9941                           ; BSR set to: 5
  9942                           ;ring_buffer_interface.c: 13: line[index] = '\0';
  9943  01A3FE  0E44               	movlw	low _line
  9944  01A400  2516               	addwf	terminal_ringBufferPull@index& (0+255),w,b
  9945  01A402  6ED9               	movwf	fsr2l,c
  9946  01A404  0E03               	movlw	high _line
  9947  01A406  2117               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
  9948  01A408  6EDA               	movwf	fsr2h,c
  9949  01A40A  0E00               	movlw	0
  9950  01A40C  6EDF               	movwf	indf2,c
  9951                           
  9952                           ; BSR set to: 5
  9953  01A40E  4B16               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
  9954  01A410  2B17               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
  9955                           
  9956                           ; BSR set to: 5
  9957  01A412  BF17               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
  9958  01A414  D7F4               	goto	l22266
  9959  01A416  5117               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
  9960  01A418  E104               	bnz	u28290
  9961  01A41A  0E40               	movlw	64
  9962  01A41C  5D16               	subwf	terminal_ringBufferPull@index& (0+255),w,b
  9963  01A41E  A0D8               	btfss	status,0,c
  9964  01A420  D7EE               	goto	l22266
  9965  01A422                     u28290:
  9966                           
  9967                           ; BSR set to: 5
  9968                           ;ring_buffer_interface.c: 15: };ring_buffer_interface.c: 18: for(int index = 0; index < 
      +                          charNumber; index++){
  9969  01A422  0E00               	movlw	0
  9970  01A424  6F15               	movwf	(terminal_ringBufferPull@index_4555+1)& (0+255),b
  9971  01A426  0E00               	movlw	0
  9972  01A428  6F14               	movwf	terminal_ringBufferPull@index_4555& (0+255),b
  9973  01A42A  D00F               	goto	l22278
  9974  01A42C                     l22274:
  9975                           
  9976                           ; BSR set to: 3
  9977                           ;ring_buffer_interface.c: 20: line[index] = EUSART2_Read();
  9978  01A42C  ECD8  F0DF         	call	_EUSART2_Read	;wreg free
  9979  01A430  0103               	movlb	3	; () banked
  9980  01A432  6FFC               	movwf	??_terminal_ringBufferPull& (0+255),b
  9981  01A434  0E44               	movlw	low _line
  9982  01A436  0105               	movlb	5	; () banked
  9983  01A438  2514               	addwf	terminal_ringBufferPull@index_4555& (0+255),w,b
  9984  01A43A  6ED9               	movwf	fsr2l,c
  9985  01A43C  0E03               	movlw	high _line
  9986  01A43E  2115               	addwfc	(terminal_ringBufferPull@index_4555+1)& (0+255),w,b
  9987  01A440  6EDA               	movwf	fsr2h,c
  9988  01A442  C3FC  FFDF         	movff	??_terminal_ringBufferPull,indf2
  9989                           
  9990                           ; BSR set to: 5
  9991  01A446  4B14               	infsnz	terminal_ringBufferPull@index_4555& (0+255),f,b
  9992  01A448  2B15               	incf	(terminal_ringBufferPull@index_4555+1)& (0+255),f,b
  9993  01A44A                     l22278:
  9994                           
  9995                           ; BSR set to: 5
  9996  01A44A  5112               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
  9997  01A44C  5D14               	subwf	terminal_ringBufferPull@index_4555& (0+255),w,b
  9998  01A44E  5115               	movf	(terminal_ringBufferPull@index_4555+1)& (0+255),w,b
  9999  01A450  0A80               	xorlw	128
 10000  01A452  0103               	movlb	3	; () banked
 10001  01A454  6FFC               	movwf	??_terminal_ringBufferPull& (0+255),b
 10002  01A456  0105               	movlb	5	; () banked
 10003  01A458  5113               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
 10004  01A45A  0A80               	xorlw	128
 10005  01A45C  0103               	movlb	3	; () banked
 10006  01A45E  59FC               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
 10007  01A460  A0D8               	btfss	status,0,c
 10008  01A462  D7E4               	goto	l22274
 10009                           
 10010                           ; BSR set to: 3
 10011                           ;ring_buffer_interface.c: 22: };ring_buffer_interface.c: 25: eusart2RxTail = eusart2RxHe
      +                          ad;
 10012  01A464  C0DE  F18F         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
 10013                           
 10014                           ;ring_buffer_interface.c: 28: while((line[strlen(line) - 1] == (int) '\n') ||;ring_buffe
      +                          r_interface.c: 29: (line[strlen(line) - 1] == (int) '\r')) {
 10015  01A468  D00F               	goto	l2204
 10016  01A46A                     l22280:
 10017                           
 10018                           ; BSR set to: 2
 10019                           ;ring_buffer_interface.c: 32: line[strlen(line) - 1] = '\0';
 10020  01A46A  0E44               	movlw	low _line
 10021  01A46C  6F00               	movwf	strlen@s& (0+255),b
 10022  01A46E  0E03               	movlw	high _line
 10023  01A470  6F01               	movwf	(strlen@s+1)& (0+255),b
 10024  01A472  ECE3  F0E1         	call	_strlen	;wreg free
 10025  01A476  0E43               	movlw	low (_line+65535)
 10026  01A478  0102               	movlb	2	; () banked
 10027  01A47A  2500               	addwf	?_strlen& (0+255),w,b
 10028  01A47C  6ED9               	movwf	fsr2l,c
 10029  01A47E  0E03               	movlw	high (_line+65535)
 10030  01A480  2101               	addwfc	(?_strlen+1)& (0+255),w,b
 10031  01A482  6EDA               	movwf	fsr2h,c
 10032  01A484  0E00               	movlw	0
 10033  01A486  6EDF               	movwf	indf2,c
 10034  01A488                     l2204:
 10035  01A488  0E44               	movlw	low _line
 10036  01A48A  0102               	movlb	2	; () banked
 10037  01A48C  6F00               	movwf	strlen@s& (0+255),b
 10038  01A48E  0E03               	movlw	high _line
 10039  01A490  6F01               	movwf	(strlen@s+1)& (0+255),b
 10040  01A492  ECE3  F0E1         	call	_strlen	;wreg free
 10041  01A496  0E43               	movlw	low (_line+65535)
 10042  01A498  0102               	movlb	2	; () banked
 10043  01A49A  2500               	addwf	?_strlen& (0+255),w,b
 10044  01A49C  6ED9               	movwf	fsr2l,c
 10045  01A49E  0E03               	movlw	high (_line+65535)
 10046  01A4A0  2101               	addwfc	(?_strlen+1)& (0+255),w,b
 10047  01A4A2  6EDA               	movwf	fsr2h,c
 10048  01A4A4  0E0A               	movlw	10
 10049  01A4A6  18DE               	xorwf	postinc2,w,c
 10050  01A4A8  B4D8               	btfsc	status,2,c
 10051  01A4AA  D7DF               	goto	l22280
 10052                           
 10053                           ; BSR set to: 2
 10054  01A4AC  0E44               	movlw	low _line
 10055  01A4AE  6F00               	movwf	strlen@s& (0+255),b
 10056  01A4B0  0E03               	movlw	high _line
 10057  01A4B2  6F01               	movwf	(strlen@s+1)& (0+255),b
 10058  01A4B4  ECE3  F0E1         	call	_strlen	;wreg free
 10059  01A4B8  0E43               	movlw	low (_line+65535)
 10060  01A4BA  0102               	movlb	2	; () banked
 10061  01A4BC  2500               	addwf	?_strlen& (0+255),w,b
 10062  01A4BE  6ED9               	movwf	fsr2l,c
 10063  01A4C0  0E03               	movlw	high (_line+65535)
 10064  01A4C2  2101               	addwfc	(?_strlen+1)& (0+255),w,b
 10065  01A4C4  6EDA               	movwf	fsr2h,c
 10066  01A4C6  0E0D               	movlw	13
 10067  01A4C8  18DE               	xorwf	postinc2,w,c
 10068  01A4CA  B4D8               	btfsc	status,2,c
 10069  01A4CC  D7CE               	goto	l22280
 10070                           
 10071                           ; BSR set to: 2
 10072                           ;ring_buffer_interface.c: 34: };ring_buffer_interface.c: 38: eusart2RxStringReady = 0;
 10073  01A4CE  0100               	movlb	0	; () banked
 10074  01A4D0  91FF               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 10075                           
 10076                           ; BSR set to: 0
 10077                           ;ring_buffer_interface.c: 41: ringBufferLUT(line);
 10078  01A4D2  0E44               	movlw	low _line
 10079  01A4D4  0102               	movlb	2	; () banked
 10080  01A4D6  6FBB               	movwf	ringBufferLUT@line& (0+255),b
 10081  01A4D8  0E03               	movlw	high _line
 10082  01A4DA  6FBC               	movwf	(ringBufferLUT@line+1)& (0+255),b
 10083  01A4DC  ECBD  F0AA         	call	_ringBufferLUT	;wreg free
 10084  01A4E0  0012               	return		;funcret
 10085  01A4E2                     __end_of_terminal_ringBufferPull:
 10086                           	opt callstack 0
 10087                           
 10088 ;; *************** function _ringBufferLUT *****************
 10089 ;; Defined at:
 10090 ;;		line 20 in file "ring_buffer_LUT.c"
 10091 ;; Parameters:    Size  Location     Type
 10092 ;;  line            2  187[BANK2 ] PTR unsigned char 
 10093 ;;		 -> line(64), 
 10094 ;; Auto vars:     Size  Location     Type
 10095 ;;  userID          2   41[BANK3 ] int 
 10096 ;; Return value:  Size  Location     Type
 10097 ;;                  1    wreg      void 
 10098 ;; Registers used:
 10099 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10100 ;; Tracked objects:
 10101 ;;		On entry : 0/0
 10102 ;;		On exit  : 0/0
 10103 ;;		Unchanged: 0/0
 10104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10105 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10106 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
 10107 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10108 ;;      Totals:         0       0       0       4       2       0       0       0       0       0       0       0       
      +0       0       0       0
 10109 ;;Total ram usage:        6 bytes
 10110 ;; Hardware stack levels used:    1
 10111 ;; Hardware stack levels required when called:   17
 10112 ;; This function calls:
 10113 ;;		_clearADCErrors
 10114 ;;		_clearI2CErrors
 10115 ;;		_clearUARTErrors
 10116 ;;		_getCauseOfResetString
 10117 ;;		_getDeviceID
 10118 ;;		_getDeviceIDString
 10119 ;;		_getMajorRevisionID
 10120 ;;		_getMinorRevisionID
 10121 ;;		_getStringSecondsAsTime
 10122 ;;		_getUserID
 10123 ;;		_printCurrentMeasurements
 10124 ;;		_printErrorHandlerStatus
 10125 ;;		_printf
 10126 ;;		_strcmp
 10127 ;;		_strlen
 10128 ;;		_terminalTextAttributes
 10129 ;;		_terminalTextAttributesReset
 10130 ;; This function is called by:
 10131 ;;		_terminal_ringBufferPull
 10132 ;; This function uses a non-reentrant model
 10133 ;;
 10134                           
 10135                           	psect	text2
 10136  01557A                     __ptext2:
 10137                           	opt callstack 0
 10138  01557A                     _ringBufferLUT:
 10139                           	opt callstack 12
 10140                           
 10141                           ;ring_buffer_LUT.c: 26: if((0 == strcmp(line, "Reset"))) {
 10142                           
 10143                           ;incstack = 0
 10144  01557A  C2BB  F200         	movff	ringBufferLUT@line,strcmp@s1
 10145  01557E  C2BC  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10146  015582  0E42               	movlw	low (STR_38+5)
 10147  015584  0102               	movlb	2	; () banked
 10148  015586  6F02               	movwf	strcmp@s2& (0+255),b
 10149  015588  0EFE               	movlw	high (STR_38+5)
 10150  01558A  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10151  01558C  EC2F  F0DD         	call	_strcmp	;wreg free
 10152  015590  0102               	movlb	2	; () banked
 10153  015592  5100               	movf	?_strcmp& (0+255),w,b
 10154  015594  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10155  015596  A4D8               	btfss	status,2,c
 10156  015598  D010               	goto	l21262
 10157                           
 10158                           ; BSR set to: 2
 10159                           ;ring_buffer_LUT.c: 29: printf("\033[2J");
 10160  01559A  0E94               	movlw	low STR_190
 10161  01559C  0103               	movlb	3	; () banked
 10162  01559E  6FEB               	movwf	printf@f& (0+255),b
 10163  0155A0  0EFF               	movlw	high STR_190
 10164  0155A2  6FEC               	movwf	(printf@f+1)& (0+255),b
 10165  0155A4  ECF7  F0DF         	call	_printf	;wreg free
 10166                           
 10167                           ;ring_buffer_LUT.c: 32: printf("\033[H");
 10168  0155A8  0EBA               	movlw	low STR_191
 10169  0155AA  0103               	movlb	3	; () banked
 10170  0155AC  6FEB               	movwf	printf@f& (0+255),b
 10171  0155AE  0EFF               	movlw	high STR_191
 10172  0155B0  6FEC               	movwf	(printf@f+1)& (0+255),b
 10173  0155B2  ECF7  F0DF         	call	_printf	;wreg free
 10174  0155B6  00FF               	reset		;# 
 10175                           
 10176                           ;ring_buffer_LUT.c: 37: }
 10177  0155B8  0012               	return	
 10178  0155BA                     l21262:
 10179                           
 10180                           ; BSR set to: 2
 10181                           ;ring_buffer_LUT.c: 40: else if((0 == strcmp(line, "Clear"))) {
 10182  0155BA  C2BB  F200         	movff	ringBufferLUT@line,strcmp@s1
 10183  0155BE  C2BC  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10184  0155C2  0E7D               	movlw	low STR_192
 10185  0155C4  6F02               	movwf	strcmp@s2& (0+255),b
 10186  0155C6  0EFF               	movlw	high STR_192
 10187  0155C8  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10188  0155CA  EC2F  F0DD         	call	_strcmp	;wreg free
 10189  0155CE  0102               	movlb	2	; () banked
 10190  0155D0  5100               	movf	?_strcmp& (0+255),w,b
 10191  0155D2  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10192  0155D4  A4D8               	btfss	status,2,c
 10193  0155D6  D00F               	goto	l21266
 10194                           
 10195                           ; BSR set to: 2
 10196                           ;ring_buffer_LUT.c: 43: printf("\033[2J");
 10197  0155D8  0E94               	movlw	low STR_190
 10198  0155DA  0103               	movlb	3	; () banked
 10199  0155DC  6FEB               	movwf	printf@f& (0+255),b
 10200  0155DE  0EFF               	movlw	high STR_190
 10201  0155E0  6FEC               	movwf	(printf@f+1)& (0+255),b
 10202  0155E2  ECF7  F0DF         	call	_printf	;wreg free
 10203                           
 10204                           ;ring_buffer_LUT.c: 46: printf("\033[H");
 10205  0155E6  0EBA               	movlw	low STR_191
 10206  0155E8  0103               	movlb	3	; () banked
 10207  0155EA  6FEB               	movwf	printf@f& (0+255),b
 10208  0155EC  0EFF               	movlw	high STR_191
 10209  0155EE  6FEC               	movwf	(printf@f+1)& (0+255),b
 10210  0155F0  ECF7  F0DF         	call	_printf	;wreg free
 10211                           
 10212                           ;ring_buffer_LUT.c: 48: }
 10213  0155F4  0012               	return	
 10214  0155F6                     l21266:
 10215                           
 10216                           ; BSR set to: 2
 10217                           ;ring_buffer_LUT.c: 51: else if((0 == strcmp(line, "*IDN?"))) {
 10218  0155F6  C2BB  F200         	movff	ringBufferLUT@line,strcmp@s1
 10219  0155FA  C2BC  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10220  0155FE  0E77               	movlw	low STR_195
 10221  015600  6F02               	movwf	strcmp@s2& (0+255),b
 10222  015602  0EFF               	movlw	high STR_195
 10223  015604  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10224  015606  EC2F  F0DD         	call	_strcmp	;wreg free
 10225  01560A  0102               	movlb	2	; () banked
 10226  01560C  5100               	movf	?_strcmp& (0+255),w,b
 10227  01560E  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10228  015610  A4D8               	btfss	status,2,c
 10229  015612  D011               	goto	l21270
 10230                           
 10231                           ; BSR set to: 2
 10232                           ;ring_buffer_LUT.c: 53: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10233  015614  0E00               	movlw	0
 10234  015616  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 10235  015618  0E00               	movlw	0
 10236  01561A  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10237  01561C  0E02               	movlw	2
 10238  01561E  EC49  F0B3         	call	_terminalTextAttributes
 10239                           
 10240                           ;ring_buffer_LUT.c: 54: printf("QI Charger with Digital Monitoring, by Drew Maatman\n\r"
      +                          );
 10241  015622  0ECC               	movlw	low STR_196
 10242  015624  0103               	movlb	3	; () banked
 10243  015626  6FEB               	movwf	printf@f& (0+255),b
 10244  015628  0EF0               	movlw	high STR_196
 10245  01562A  6FEC               	movwf	(printf@f+1)& (0+255),b
 10246  01562C  ECF7  F0DF         	call	_printf	;wreg free
 10247                           
 10248                           ;ring_buffer_LUT.c: 55: terminalTextAttributesReset();
 10249  015630  ECAA  F0E4         	call	_terminalTextAttributesReset	;wreg free
 10250                           
 10251                           ;ring_buffer_LUT.c: 57: }
 10252  015634  0012               	return	
 10253  015636                     l21270:
 10254                           
 10255                           ; BSR set to: 2
 10256                           ;ring_buffer_LUT.c: 60: else if (0 == strcmp(line, "Device Status?")) {
 10257  015636  C2BB  F200         	movff	ringBufferLUT@line,strcmp@s1
 10258  01563A  C2BC  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10259  01563E  0EC1               	movlw	low STR_197
 10260  015640  6F02               	movwf	strcmp@s2& (0+255),b
 10261  015642  0EFB               	movlw	high STR_197
 10262  015644  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10263  015646  EC2F  F0DD         	call	_strcmp	;wreg free
 10264  01564A  0102               	movlb	2	; () banked
 10265  01564C  5100               	movf	?_strcmp& (0+255),w,b
 10266  01564E  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10267  015650  A4D8               	btfss	status,2,c
 10268  015652  D0D5               	goto	l21288
 10269                           
 10270                           ; BSR set to: 2
 10271                           ;ring_buffer_LUT.c: 62: printf("\n\r");
 10272  015654  0E2F               	movlw	low (STR_356+21)
 10273  015656  0103               	movlb	3	; () banked
 10274  015658  6FEB               	movwf	printf@f& (0+255),b
 10275  01565A  0EF9               	movlw	high (STR_356+21)
 10276  01565C  6FEC               	movwf	(printf@f+1)& (0+255),b
 10277  01565E  ECF7  F0DF         	call	_printf	;wreg free
 10278                           
 10279                           ;ring_buffer_LUT.c: 64: terminalTextAttributes(GREEN, BLACK, BOLD);
 10280  015662  0E00               	movlw	0
 10281  015664  0102               	movlb	2	; () banked
 10282  015666  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 10283  015668  0E01               	movlw	1
 10284  01566A  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10285  01566C  0E02               	movlw	2
 10286  01566E  EC49  F0B3         	call	_terminalTextAttributes
 10287                           
 10288                           ;ring_buffer_LUT.c: 66: printf("Digital Monitoring Microcontroller Status:\n\r");
 10289  015672  0EE9               	movlw	low STR_199
 10290  015674  0103               	movlb	3	; () banked
 10291  015676  6FEB               	movwf	printf@f& (0+255),b
 10292  015678  0EF3               	movlw	high STR_199
 10293  01567A  6FEC               	movwf	(printf@f+1)& (0+255),b
 10294  01567C  ECF7  F0DF         	call	_printf	;wreg free
 10295                           
 10296                           ;ring_buffer_LUT.c: 68: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10297  015680  0E00               	movlw	0
 10298  015682  0102               	movlb	2	; () banked
 10299  015684  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 10300  015686  0E00               	movlw	0
 10301  015688  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10302  01568A  0E02               	movlw	2
 10303  01568C  EC49  F0B3         	call	_terminalTextAttributes
 10304                           
 10305                           ;ring_buffer_LUT.c: 70: printf("\n\r");
 10306  015690  0E2F               	movlw	low (STR_356+21)
 10307  015692  0103               	movlb	3	; () banked
 10308  015694  6FEB               	movwf	printf@f& (0+255),b
 10309  015696  0EF9               	movlw	high (STR_356+21)
 10310  015698  6FEC               	movwf	(printf@f+1)& (0+255),b
 10311  01569A  ECF7  F0DF         	call	_printf	;wreg free
 10312                           
 10313                           ;ring_buffer_LUT.c: 73: printf("    Device ID retrieved from flash: %s (0x%04X)\n\r",;ri
      +                          ng_buffer_LUT.c: 74: getDeviceIDString(getDeviceID()),;ring_buffer_LUT.c: 75: getDeviceI
      +                          D());
 10314  01569E  0E0A               	movlw	low STR_201
 10315  0156A0  0103               	movlb	3	; () banked
 10316  0156A2  6FEB               	movwf	printf@f& (0+255),b
 10317  0156A4  0EF2               	movlw	high STR_201
 10318  0156A6  6FEC               	movwf	(printf@f+1)& (0+255),b
 10319  0156A8  EC75  F0E3         	call	_getDeviceID	;wreg free
 10320  0156AC  C20B  F20D         	movff	?_getDeviceID,getDeviceIDString@inputDevID
 10321  0156B0  C20C  F20E         	movff	?_getDeviceID+1,getDeviceIDString@inputDevID+1
 10322  0156B4  ECBB  F0D7         	call	_getDeviceIDString	;wreg free
 10323  0156B8  C20D  F3ED         	movff	?_getDeviceIDString,?_printf+2
 10324  0156BC  C20E  F3EE         	movff	?_getDeviceIDString+1,?_printf+3
 10325  0156C0  EC75  F0E3         	call	_getDeviceID	;wreg free
 10326  0156C4  C20B  F3EF         	movff	?_getDeviceID,?_printf+4
 10327  0156C8  C20C  F3F0         	movff	?_getDeviceID+1,?_printf+5
 10328  0156CC  ECF7  F0DF         	call	_printf	;wreg free
 10329                           
 10330                           ;ring_buffer_LUT.c: 77: printf("\n\r");
 10331  0156D0  0E2F               	movlw	low (STR_356+21)
 10332  0156D2  0103               	movlb	3	; () banked
 10333  0156D4  6FEB               	movwf	printf@f& (0+255),b
 10334  0156D6  0EF9               	movlw	high (STR_356+21)
 10335  0156D8  6FEC               	movwf	(printf@f+1)& (0+255),b
 10336  0156DA  ECF7  F0DF         	call	_printf	;wreg free
 10337                           
 10338                           ;ring_buffer_LUT.c: 79: printf("    Device silicon revision ID retrieved from flash: %c%
      +                          03d\n\r",;ring_buffer_LUT.c: 80: ((char) getMajorRevisionID() + 65),getMinorRevisionID()
      +                          );
 10339  0156DE  0E5A               	movlw	low STR_203
 10340  0156E0  0103               	movlb	3	; () banked
 10341  0156E2  6FEB               	movwf	printf@f& (0+255),b
 10342  0156E4  0EED               	movlw	high STR_203
 10343  0156E6  6FEC               	movwf	(printf@f+1)& (0+255),b
 10344  0156E8  EC72  F0E0         	call	_getMajorRevisionID	;wreg free
 10345  0156EC  0102               	movlb	2	; () banked
 10346  0156EE  6FBD               	movwf	??_ringBufferLUT& (0+255),b
 10347  0156F0  0E41               	movlw	65
 10348  0156F2  25BD               	addwf	??_ringBufferLUT& (0+255),w,b
 10349  0156F4  0103               	movlb	3	; () banked
 10350  0156F6  6FED               	movwf	(?_printf+2)& (0+255),b
 10351  0156F8  6BEE               	clrf	(?_printf+3)& (0+255),b
 10352  0156FA  0E00               	movlw	0
 10353  0156FC  23EE               	addwfc	(?_printf+3)& (0+255),f,b
 10354  0156FE  ECC9  F0E2         	call	_getMinorRevisionID	;wreg free
 10355  015702  0102               	movlb	2	; () banked
 10356  015704  6FBE               	movwf	(??_ringBufferLUT+1)& (0+255),b
 10357  015706  51BE               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 10358  015708  0103               	movlb	3	; () banked
 10359  01570A  6FEF               	movwf	(?_printf+4)& (0+255),b
 10360  01570C  6BF0               	clrf	(?_printf+5)& (0+255),b
 10361  01570E  ECF7  F0DF         	call	_printf	;wreg free
 10362                           
 10363                           ;ring_buffer_LUT.c: 82: printf("\n\r");
 10364  015712  0E2F               	movlw	low (STR_356+21)
 10365  015714  0103               	movlb	3	; () banked
 10366  015716  6FEB               	movwf	printf@f& (0+255),b
 10367  015718  0EF9               	movlw	high (STR_356+21)
 10368  01571A  6FEC               	movwf	(printf@f+1)& (0+255),b
 10369  01571C  ECF7  F0DF         	call	_printf	;wreg free
 10370                           
 10371                           ;ring_buffer_LUT.c: 84: printf("    The following User IDs have been retrieved from flas
      +                          h:\n\r");
 10372  015720  0ED6               	movlw	low STR_205
 10373  015722  0103               	movlb	3	; () banked
 10374  015724  6FEB               	movwf	printf@f& (0+255),b
 10375  015726  0EED               	movlw	high STR_205
 10376  015728  6FEC               	movwf	(printf@f+1)& (0+255),b
 10377  01572A  ECF7  F0DF         	call	_printf	;wreg free
 10378                           
 10379                           ;ring_buffer_LUT.c: 87: for (int userID = 0; userID <= 7; userID++) {
 10380  01572E  0E00               	movlw	0
 10381  015730  0103               	movlb	3	; () banked
 10382  015732  6FFB               	movwf	(ringBufferLUT@userID+1)& (0+255),b
 10383  015734  0E00               	movlw	0
 10384  015736  6FFA               	movwf	ringBufferLUT@userID& (0+255),b
 10385  015738                     l21280:
 10386                           
 10387                           ; BSR set to: 3
 10388                           ;ring_buffer_LUT.c: 89: printf("        User ID Word %d (Flash address 0x20000%X): 0x%04
      +                          X\n\r",;ring_buffer_LUT.c: 90: userID,;ring_buffer_LUT.c: 91: (2 * userID),;ring_buffer_
      +                          LUT.c: 92: getUserID(userID));
 10389  015738  0E8C               	movlw	low STR_206
 10390  01573A  6FEB               	movwf	printf@f& (0+255),b
 10391  01573C  0EEE               	movlw	high STR_206
 10392  01573E  6FEC               	movwf	(printf@f+1)& (0+255),b
 10393  015740  C3FA  F3ED         	movff	ringBufferLUT@userID,?_printf+2
 10394  015744  C3FB  F3EE         	movff	ringBufferLUT@userID+1,?_printf+3
 10395  015748  90D8               	bcf	status,0,c
 10396  01574A  35FA               	rlcf	ringBufferLUT@userID& (0+255),w,b
 10397  01574C  6FEF               	movwf	(?_printf+4)& (0+255),b
 10398  01574E  35FB               	rlcf	(ringBufferLUT@userID+1)& (0+255),w,b
 10399  015750  6FF0               	movwf	(?_printf+5)& (0+255),b
 10400  015752  51FA               	movf	ringBufferLUT@userID& (0+255),w,b
 10401  015754  EC03  F0E1         	call	_getUserID
 10402  015758  C20B  F3F1         	movff	?_getUserID,?_printf+6
 10403  01575C  C20C  F3F2         	movff	?_getUserID+1,?_printf+7
 10404  015760  ECF7  F0DF         	call	_printf	;wreg free
 10405  015764  0103               	movlb	3	; () banked
 10406  015766  4BFA               	infsnz	ringBufferLUT@userID& (0+255),f,b
 10407  015768  2BFB               	incf	(ringBufferLUT@userID+1)& (0+255),f,b
 10408                           
 10409                           ; BSR set to: 3
 10410  01576A  BFFB               	btfsc	(ringBufferLUT@userID+1)& (0+255),7,b
 10411  01576C  D7E5               	goto	l21280
 10412  01576E  51FB               	movf	(ringBufferLUT@userID+1)& (0+255),w,b
 10413  015770  E104               	bnz	u27330
 10414  015772  0E08               	movlw	8
 10415  015774  5DFA               	subwf	ringBufferLUT@userID& (0+255),w,b
 10416  015776  A0D8               	btfss	status,0,c
 10417  015778  D7DF               	goto	l21280
 10418  01577A                     u27330:
 10419                           
 10420                           ; BSR set to: 3
 10421                           ;ring_buffer_LUT.c: 94: };ring_buffer_LUT.c: 96: printf("\n\r");
 10422  01577A  0E2F               	movlw	low (STR_356+21)
 10423  01577C  6FEB               	movwf	printf@f& (0+255),b
 10424  01577E  0EF9               	movlw	high (STR_356+21)
 10425  015780  6FEC               	movwf	(printf@f+1)& (0+255),b
 10426  015782  ECF7  F0DF         	call	_printf	;wreg free
 10427                           
 10428                           ;ring_buffer_LUT.c: 98: printf("    The cause of the most recent device reset was: %s\n\
      +                          r",;ring_buffer_LUT.c: 99: getCauseOfResetString(reset_cause));
 10429  015786  0E5D               	movlw	low STR_208
 10430  015788  0103               	movlb	3	; () banked
 10431  01578A  6FEB               	movwf	printf@f& (0+255),b
 10432  01578C  0EF0               	movlw	high STR_208
 10433  01578E  6FEC               	movwf	(printf@f+1)& (0+255),b
 10434  015790  0102               	movlb	2	; () banked
 10435  015792  51FF               	movf	_reset_cause& (0+255),w,b
 10436  015794  EC83  F0E1         	call	_getCauseOfResetString
 10437  015798  C200  F3ED         	movff	?_getCauseOfResetString,?_printf+2
 10438  01579C  C201  F3EE         	movff	?_getCauseOfResetString+1,?_printf+3
 10439  0157A0  ECF7  F0DF         	call	_printf	;wreg free
 10440                           
 10441                           ;ring_buffer_LUT.c: 101: printf("\n\r");
 10442  0157A4  0E2F               	movlw	low (STR_356+21)
 10443  0157A6  0103               	movlb	3	; () banked
 10444  0157A8  6FEB               	movwf	printf@f& (0+255),b
 10445  0157AA  0EF9               	movlw	high (STR_356+21)
 10446  0157AC  6FEC               	movwf	(printf@f+1)& (0+255),b
 10447  0157AE  ECF7  F0DF         	call	_printf	;wreg free
 10448                           
 10449                           ;ring_buffer_LUT.c: 103: printf("    Device on time since last reset condition is %s\n\r
      +                          ", getStringSecondsAsTime(device_on_time));
 10450  0157B2  0E02               	movlw	low STR_210
 10451  0157B4  0103               	movlb	3	; () banked
 10452  0157B6  6FEB               	movwf	printf@f& (0+255),b
 10453  0157B8  0EF1               	movlw	high STR_210
 10454  0157BA  6FEC               	movwf	(printf@f+1)& (0+255),b
 10455  0157BC  C0C5  F2A3         	movff	_device_on_time,getStringSecondsAsTime@input_seconds
 10456  0157C0  C0C6  F2A4         	movff	_device_on_time+1,getStringSecondsAsTime@input_seconds+1
 10457  0157C4  C0C7  F2A5         	movff	_device_on_time+2,getStringSecondsAsTime@input_seconds+2
 10458  0157C8  C0C8  F2A6         	movff	_device_on_time+3,getStringSecondsAsTime@input_seconds+3
 10459  0157CC  EC76  F0B1         	call	_getStringSecondsAsTime	;wreg free
 10460  0157D0  C2A3  F3ED         	movff	?_getStringSecondsAsTime,?_printf+2
 10461  0157D4  C2A4  F3EE         	movff	?_getStringSecondsAsTime+1,?_printf+3
 10462  0157D8  ECF7  F0DF         	call	_printf	;wreg free
 10463                           
 10464                           ;ring_buffer_LUT.c: 105: printf("\n\r");
 10465  0157DC  0E2F               	movlw	low (STR_356+21)
 10466  0157DE  0103               	movlb	3	; () banked
 10467  0157E0  6FEB               	movwf	printf@f& (0+255),b
 10468  0157E2  0EF9               	movlw	high (STR_356+21)
 10469  0157E4  6FEC               	movwf	(printf@f+1)& (0+255),b
 10470  0157E6  ECF7  F0DF         	call	_printf	;wreg free
 10471                           
 10472                           ;ring_buffer_LUT.c: 107: printErrorHandlerStatus();
 10473  0157EA  EC01  F0CB         	call	_printErrorHandlerStatus	;wreg free
 10474                           
 10475                           ;ring_buffer_LUT.c: 109: printf("\n\r");
 10476  0157EE  0E2F               	movlw	low (STR_356+21)
 10477  0157F0  0103               	movlb	3	; () banked
 10478  0157F2  6FEB               	movwf	printf@f& (0+255),b
 10479  0157F4  0EF9               	movlw	high (STR_356+21)
 10480  0157F6  6FEC               	movwf	(printf@f+1)& (0+255),b
 10481  0157F8  ECF7  F0DF         	call	_printf	;wreg free
 10482                           
 10483                           ;ring_buffer_LUT.c: 111: }
 10484  0157FC  0012               	return	
 10485  0157FE                     l21288:
 10486                           
 10487                           ; BSR set to: 2
 10488                           ;ring_buffer_LUT.c: 114: else if((0 == strcmp(line, "Clear ADC Errors"))) {
 10489  0157FE  C2BB  F200         	movff	ringBufferLUT@line,strcmp@s1
 10490  015802  C2BC  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10491  015806  0E40               	movlw	low STR_213
 10492  015808  6F02               	movwf	strcmp@s2& (0+255),b
 10493  01580A  0EFB               	movlw	high STR_213
 10494  01580C  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10495  01580E  EC2F  F0DD         	call	_strcmp	;wreg free
 10496  015812  0102               	movlb	2	; () banked
 10497  015814  5100               	movf	?_strcmp& (0+255),w,b
 10498  015816  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10499  015818  A4D8               	btfss	status,2,c
 10500  01581A  D014               	goto	l21298
 10501                           
 10502                           ; BSR set to: 2
 10503                           ;ring_buffer_LUT.c: 116: clearADCErrors();
 10504  01581C  ECB2  F0E4         	call	_clearADCErrors	;wreg free
 10505                           
 10506                           ;ring_buffer_LUT.c: 118: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10507  015820  0E00               	movlw	0
 10508  015822  0102               	movlb	2	; () banked
 10509  015824  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 10510  015826  0E00               	movlw	0
 10511  015828  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10512  01582A  0E02               	movlw	2
 10513  01582C  EC49  F0B3         	call	_terminalTextAttributes
 10514                           
 10515                           ;ring_buffer_LUT.c: 119: printf("ADC Error(s) cleared\n\r");
 10516  015830  0EBF               	movlw	low STR_214
 10517  015832  0103               	movlb	3	; () banked
 10518  015834  6FEB               	movwf	printf@f& (0+255),b
 10519  015836  0EF9               	movlw	high STR_214
 10520  015838  6FEC               	movwf	(printf@f+1)& (0+255),b
 10521  01583A  ECF7  F0DF         	call	_printf	;wreg free
 10522  01583E                     l21296:
 10523                           
 10524                           ;ring_buffer_LUT.c: 120: terminalTextAttributesReset();
 10525  01583E  ECAA  F0E4         	call	_terminalTextAttributesReset	;wreg free
 10526                           
 10527                           ;ring_buffer_LUT.c: 122: }
 10528  015842  0012               	return	
 10529  015844                     l21298:
 10530                           
 10531                           ; BSR set to: 2
 10532                           ;ring_buffer_LUT.c: 125: else if((0 == strcmp(line, "Clear I2C Errors"))) {
 10533  015844  C2BB  F200         	movff	ringBufferLUT@line,strcmp@s1
 10534  015848  C2BC  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10535  01584C  0E2F               	movlw	low STR_215
 10536  01584E  6F02               	movwf	strcmp@s2& (0+255),b
 10537  015850  0EFB               	movlw	high STR_215
 10538  015852  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10539  015854  EC2F  F0DD         	call	_strcmp	;wreg free
 10540  015858  0102               	movlb	2	; () banked
 10541  01585A  5100               	movf	?_strcmp& (0+255),w,b
 10542  01585C  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10543  01585E  A4D8               	btfss	status,2,c
 10544  015860  D012               	goto	l21308
 10545                           
 10546                           ; BSR set to: 2
 10547                           ;ring_buffer_LUT.c: 127: clearI2CErrors();
 10548  015862  ECB4  F0E3         	call	_clearI2CErrors	;wreg free
 10549                           
 10550                           ;ring_buffer_LUT.c: 129: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10551  015866  0E00               	movlw	0
 10552  015868  0102               	movlb	2	; () banked
 10553  01586A  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 10554  01586C  0E00               	movlw	0
 10555  01586E  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10556  015870  0E02               	movlw	2
 10557  015872  EC49  F0B3         	call	_terminalTextAttributes
 10558                           
 10559                           ;ring_buffer_LUT.c: 130: printf("I2C error(s) cleared\n\r");
 10560  015876  0ED6               	movlw	low STR_216
 10561  015878  0103               	movlb	3	; () banked
 10562  01587A  6FEB               	movwf	printf@f& (0+255),b
 10563  01587C  0EF9               	movlw	high STR_216
 10564  01587E  6FEC               	movwf	(printf@f+1)& (0+255),b
 10565  015880  ECF7  F0DF         	call	_printf	;wreg free
 10566  015884  D7DC               	goto	l21296
 10567  015886                     l21308:
 10568                           
 10569                           ; BSR set to: 2
 10570                           ;ring_buffer_LUT.c: 136: else if((0 == strcmp(line, "Clear UART Errors"))) {
 10571  015886  C2BB  F200         	movff	ringBufferLUT@line,strcmp@s1
 10572  01588A  C2BC  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10573  01588E  0E0C               	movlw	low STR_217
 10574  015890  6F02               	movwf	strcmp@s2& (0+255),b
 10575  015892  0EFB               	movlw	high STR_217
 10576  015894  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10577  015896  EC2F  F0DD         	call	_strcmp	;wreg free
 10578  01589A  0102               	movlb	2	; () banked
 10579  01589C  5100               	movf	?_strcmp& (0+255),w,b
 10580  01589E  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10581  0158A0  A4D8               	btfss	status,2,c
 10582  0158A2  D012               	goto	l21318
 10583                           
 10584                           ; BSR set to: 2
 10585                           ;ring_buffer_LUT.c: 138: clearUARTErrors();
 10586  0158A4  EC41  F0E5         	call	_clearUARTErrors	;wreg free
 10587                           
 10588                           ;ring_buffer_LUT.c: 140: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10589  0158A8  0E00               	movlw	0
 10590  0158AA  0102               	movlb	2	; () banked
 10591  0158AC  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 10592  0158AE  0E00               	movlw	0
 10593  0158B0  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10594  0158B2  0E02               	movlw	2
 10595  0158B4  EC49  F0B3         	call	_terminalTextAttributes
 10596                           
 10597                           ;ring_buffer_LUT.c: 141: printf("UART error(s) cleared\n\r");
 10598  0158B8  0E62               	movlw	low STR_218
 10599  0158BA  0103               	movlb	3	; () banked
 10600  0158BC  6FEB               	movwf	printf@f& (0+255),b
 10601  0158BE  0EF9               	movlw	high STR_218
 10602  0158C0  6FEC               	movwf	(printf@f+1)& (0+255),b
 10603  0158C2  ECF7  F0DF         	call	_printf	;wreg free
 10604  0158C6  D7BB               	goto	l21296
 10605  0158C8                     l21318:
 10606                           
 10607                           ; BSR set to: 2
 10608                           ;ring_buffer_LUT.c: 146: else if ((0 == strcmp(line, "Error Status?"))) {
 10609  0158C8  C2BB  F200         	movff	ringBufferLUT@line,strcmp@s1
 10610  0158CC  C2BC  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10611  0158D0  0E38               	movlw	low STR_219
 10612  0158D2  6F02               	movwf	strcmp@s2& (0+255),b
 10613  0158D4  0EFC               	movlw	high STR_219
 10614  0158D6  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10615  0158D8  EC2F  F0DD         	call	_strcmp	;wreg free
 10616  0158DC  0102               	movlb	2	; () banked
 10617  0158DE  5100               	movf	?_strcmp& (0+255),w,b
 10618  0158E0  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10619  0158E2  A4D8               	btfss	status,2,c
 10620  0158E4  D003               	goto	l21322
 10621                           
 10622                           ; BSR set to: 2
 10623                           ;ring_buffer_LUT.c: 148: printErrorHandlerStatus();
 10624  0158E6  EC01  F0CB         	call	_printErrorHandlerStatus	;wreg free
 10625                           
 10626                           ;ring_buffer_LUT.c: 150: }
 10627  0158EA  0012               	return	
 10628  0158EC                     l21322:
 10629                           
 10630                           ; BSR set to: 2
 10631                           ;ring_buffer_LUT.c: 153: else if (0 == strcmp(line, "Current Measurements?")) {
 10632  0158EC  C2BB  F200         	movff	ringBufferLUT@line,strcmp@s1
 10633  0158F0  C2BC  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10634  0158F4  0E19               	movlw	low STR_220
 10635  0158F6  6F02               	movwf	strcmp@s2& (0+255),b
 10636  0158F8  0EFA               	movlw	high STR_220
 10637  0158FA  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10638  0158FC  EC2F  F0DD         	call	_strcmp	;wreg free
 10639  015900  0102               	movlb	2	; () banked
 10640  015902  5100               	movf	?_strcmp& (0+255),w,b
 10641  015904  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10642  015906  A4D8               	btfss	status,2,c
 10643  015908  D020               	goto	l21326
 10644                           
 10645                           ; BSR set to: 2
 10646                           ;ring_buffer_LUT.c: 155: printf("\n\r");
 10647  01590A  0E2F               	movlw	low (STR_356+21)
 10648  01590C  0103               	movlb	3	; () banked
 10649  01590E  6FEB               	movwf	printf@f& (0+255),b
 10650  015910  0EF9               	movlw	high (STR_356+21)
 10651  015912  6FEC               	movwf	(printf@f+1)& (0+255),b
 10652  015914  ECF7  F0DF         	call	_printf	;wreg free
 10653                           
 10654                           ;ring_buffer_LUT.c: 157: terminalTextAttributes(GREEN, BLACK, BOLD);
 10655  015918  0E00               	movlw	0
 10656  01591A  0102               	movlb	2	; () banked
 10657  01591C  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 10658  01591E  0E01               	movlw	1
 10659  015920  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10660  015922  0E02               	movlw	2
 10661  015924  EC49  F0B3         	call	_terminalTextAttributes
 10662                           
 10663                           ;ring_buffer_LUT.c: 158: printf("System Measurements at time of command call:\n\r");
 10664  015928  0E02               	movlw	low STR_222
 10665  01592A  0103               	movlb	3	; () banked
 10666  01592C  6FEB               	movwf	printf@f& (0+255),b
 10667  01592E  0EF3               	movlw	high STR_222
 10668  015930  6FEC               	movwf	(printf@f+1)& (0+255),b
 10669  015932  ECF7  F0DF         	call	_printf	;wreg free
 10670                           
 10671                           ;ring_buffer_LUT.c: 160: printf("\n\r");
 10672  015936  0E2F               	movlw	low (STR_356+21)
 10673  015938  0103               	movlb	3	; () banked
 10674  01593A  6FEB               	movwf	printf@f& (0+255),b
 10675  01593C  0EF9               	movlw	high (STR_356+21)
 10676  01593E  6FEC               	movwf	(printf@f+1)& (0+255),b
 10677  015940  ECF7  F0DF         	call	_printf	;wreg free
 10678                           
 10679                           ;ring_buffer_LUT.c: 162: printCurrentMeasurements();
 10680  015944  EC1D  F0A8         	call	_printCurrentMeasurements	;wreg free
 10681                           
 10682                           ;ring_buffer_LUT.c: 164: }
 10683  015948  0012               	return	
 10684  01594A                     l21326:
 10685                           
 10686                           ; BSR set to: 2
 10687                           ;ring_buffer_LUT.c: 167: else if((0 == strcmp(line, "Help"))) {
 10688  01594A  C2BB  F200         	movff	ringBufferLUT@line,strcmp@s1
 10689  01594E  C2BC  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10690  015952  0E99               	movlw	low STR_224
 10691  015954  6F02               	movwf	strcmp@s2& (0+255),b
 10692  015956  0EFF               	movlw	high STR_224
 10693  015958  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10694  01595A  EC2F  F0DD         	call	_strcmp	;wreg free
 10695  01595E  0102               	movlb	2	; () banked
 10696  015960  5100               	movf	?_strcmp& (0+255),w,b
 10697  015962  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10698  015964  A4D8               	btfss	status,2,c
 10699  015966  D06A               	goto	l21330
 10700                           
 10701                           ; BSR set to: 2
 10702                           ;ring_buffer_LUT.c: 169: printf("\n\r");
 10703  015968  0E2F               	movlw	low (STR_356+21)
 10704  01596A  0103               	movlb	3	; () banked
 10705  01596C  6FEB               	movwf	printf@f& (0+255),b
 10706  01596E  0EF9               	movlw	high (STR_356+21)
 10707  015970  6FEC               	movwf	(printf@f+1)& (0+255),b
 10708  015972  ECF7  F0DF         	call	_printf	;wreg free
 10709                           
 10710                           ;ring_buffer_LUT.c: 171: terminalTextAttributes(YELLOW, BLACK, BOLD);
 10711  015976  0E00               	movlw	0
 10712  015978  0102               	movlb	2	; () banked
 10713  01597A  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 10714  01597C  0E01               	movlw	1
 10715  01597E  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10716  015980  0E03               	movlw	3
 10717  015982  EC49  F0B3         	call	_terminalTextAttributes
 10718                           
 10719                           ;ring_buffer_LUT.c: 173: printf("Available Commands:\n\r");
 10720  015986  0E03               	movlw	low STR_226
 10721  015988  0103               	movlb	3	; () banked
 10722  01598A  6FEB               	movwf	printf@f& (0+255),b
 10723  01598C  0EFA               	movlw	high STR_226
 10724  01598E  6FEC               	movwf	(printf@f+1)& (0+255),b
 10725  015990  ECF7  F0DF         	call	_printf	;wreg free
 10726                           
 10727                           ;ring_buffer_LUT.c: 175: terminalTextAttributes(YELLOW, BLACK, NORMAL);
 10728  015994  0E00               	movlw	0
 10729  015996  0102               	movlb	2	; () banked
 10730  015998  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 10731  01599A  0E00               	movlw	0
 10732  01599C  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10733  01599E  0E03               	movlw	3
 10734  0159A0  EC49  F0B3         	call	_terminalTextAttributes
 10735                           
 10736                           ;ring_buffer_LUT.c: 177: printf( "    *IDN?: Prints identification string\n\r";ring_buff
      +                          er_LUT.c: 178: "    Reset: Executes software reset instruction\n\r";ring_buffer_LUT.c: 1
      +                          79: "    Clear: Clears the virtual COM port terminal\n\r";ring_buffer_LUT.c: 180: "    C
      +                          urrent Measurements?: Prints instantaneous system level electrical measurements\n\r";rin
      +                          g_buffer_LUT.c: 181: "    Device Status?: Prints digital monitoring microcontroller devi
      +                          ce status\n\r";ring_buffer_LUT.c: 182: "    Error Status? Prints if any system faults ha
      +                          ve been detected\n\r"
 10737  0159A4  0E77               	movlw	low STR_227
 10738  0159A6  0103               	movlb	3	; () banked
 10739  0159A8  6FEB               	movwf	printf@f& (0+255),b
 10740  0159AA  0EE9               	movlw	high STR_227
 10741  0159AC  6FEC               	movwf	(printf@f+1)& (0+255),b
 10742  0159AE  ECF7  F0DF         	call	_printf	;wreg free
 10743                           
 10744                           ;ring_buffer_LUT.c: 189: printf("\n\rHelp messages and neutral responses appear in yello
      +                          w\n\r");
 10745  0159B2  0EEC               	movlw	low STR_5
 10746  0159B4  0103               	movlb	3	; () banked
 10747  0159B6  6FEB               	movwf	printf@f& (0+255),b
 10748  0159B8  0EEF               	movlw	high STR_5
 10749  0159BA  6FEC               	movwf	(printf@f+1)& (0+255),b
 10750  0159BC  ECF7  F0DF         	call	_printf	;wreg free
 10751                           
 10752                           ;ring_buffer_LUT.c: 191: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10753  0159C0  0E00               	movlw	0
 10754  0159C2  0102               	movlb	2	; () banked
 10755  0159C4  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 10756  0159C6  0E00               	movlw	0
 10757  0159C8  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10758  0159CA  0E02               	movlw	2
 10759  0159CC  EC49  F0B3         	call	_terminalTextAttributes
 10760                           
 10761                           ;ring_buffer_LUT.c: 192: printf("System parameters and affirmative responses appear in g
      +                          reen\n\r");
 10762  0159D0  0E98               	movlw	low STR_6
 10763  0159D2  0103               	movlb	3	; () banked
 10764  0159D4  6FEB               	movwf	printf@f& (0+255),b
 10765  0159D6  0EED               	movlw	high STR_6
 10766  0159D8  6FEC               	movwf	(printf@f+1)& (0+255),b
 10767  0159DA  ECF7  F0DF         	call	_printf	;wreg free
 10768                           
 10769                           ;ring_buffer_LUT.c: 193: terminalTextAttributes(CYAN, BLACK, NORMAL);
 10770  0159DE  0E00               	movlw	0
 10771  0159E0  0102               	movlb	2	; () banked
 10772  0159E2  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 10773  0159E4  0E00               	movlw	0
 10774  0159E6  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10775  0159E8  0E06               	movlw	6
 10776  0159EA  EC49  F0B3         	call	_terminalTextAttributes
 10777                           
 10778                           ;ring_buffer_LUT.c: 194: printf("Measurement responses appear in cyan\n\r");
 10779  0159EE  0E8A               	movlw	low STR_7
 10780  0159F0  0103               	movlb	3	; () banked
 10781  0159F2  6FEB               	movwf	printf@f& (0+255),b
 10782  0159F4  0EF5               	movlw	high STR_7
 10783  0159F6  6FEC               	movwf	(printf@f+1)& (0+255),b
 10784  0159F8  ECF7  F0DF         	call	_printf	;wreg free
 10785                           
 10786                           ;ring_buffer_LUT.c: 195: terminalTextAttributes(RED, BLACK, NORMAL);
 10787  0159FC  0E00               	movlw	0
 10788  0159FE  0102               	movlb	2	; () banked
 10789  015A00  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 10790  015A02  0E00               	movlw	0
 10791  015A04  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10792  015A06  0E01               	movlw	1
 10793  015A08  EC49  F0B3         	call	_terminalTextAttributes
 10794                           
 10795                           ;ring_buffer_LUT.c: 196: printf("Errors and negative responses appear in red\n\r");
 10796  015A0C  0E8E               	movlw	low STR_8
 10797  015A0E  0103               	movlb	3	; () banked
 10798  015A10  6FEB               	movwf	printf@f& (0+255),b
 10799  015A12  0EF3               	movlw	high STR_8
 10800  015A14  6FEC               	movwf	(printf@f+1)& (0+255),b
 10801  015A16  ECF7  F0DF         	call	_printf	;wreg free
 10802                           
 10803                           ;ring_buffer_LUT.c: 197: terminalTextAttributesReset();
 10804  015A1A  ECAA  F0E4         	call	_terminalTextAttributesReset	;wreg free
 10805                           
 10806                           ;ring_buffer_LUT.c: 198: printf("User input appears in white\n\r");
 10807  015A1E  0E3B               	movlw	low STR_9
 10808  015A20  0103               	movlb	3	; () banked
 10809  015A22  6FEB               	movwf	printf@f& (0+255),b
 10810  015A24  0EF8               	movlw	high STR_9
 10811  015A26  6FEC               	movwf	(printf@f+1)& (0+255),b
 10812  015A28  ECF7  F0DF         	call	_printf	;wreg free
 10813                           
 10814                           ;ring_buffer_LUT.c: 200: printf("\n\r");
 10815  015A2C  0E2F               	movlw	low (STR_356+21)
 10816  015A2E  0103               	movlb	3	; () banked
 10817  015A30  6FEB               	movwf	printf@f& (0+255),b
 10818  015A32  0EF9               	movlw	high (STR_356+21)
 10819  015A34  6FEC               	movwf	(printf@f+1)& (0+255),b
 10820  015A36  ECF7  F0DF         	call	_printf	;wreg free
 10821                           
 10822                           ;ring_buffer_LUT.c: 202: }
 10823  015A3A  0012               	return	
 10824  015A3C                     l21330:
 10825                           
 10826                           ; BSR set to: 2
 10827                           ;ring_buffer_LUT.c: 205: else {;ring_buffer_LUT.c: 207: if (strlen(line) >= 1) {
 10828  015A3C  C2BB  F200         	movff	ringBufferLUT@line,strlen@s
 10829  015A40  C2BC  F201         	movff	ringBufferLUT@line+1,strlen@s+1
 10830  015A44  ECE3  F0E1         	call	_strlen	;wreg free
 10831  015A48  0102               	movlb	2	; () banked
 10832  015A4A  5100               	movf	?_strlen& (0+255),w,b
 10833  015A4C  1101               	iorwf	(?_strlen+1)& (0+255),w,b
 10834  015A4E  B4D8               	btfsc	status,2,c
 10835  015A50  0012               	return	
 10836                           
 10837                           ; BSR set to: 2
 10838                           ;ring_buffer_LUT.c: 209: terminalTextAttributes(RED, BLACK, NORMAL);
 10839  015A52  0E00               	movlw	0
 10840  015A54  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 10841  015A56  0E00               	movlw	0
 10842  015A58  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10843  015A5A  0E01               	movlw	1
 10844  015A5C  EC49  F0B3         	call	_terminalTextAttributes
 10845                           
 10846                           ;ring_buffer_LUT.c: 210: printf("Unsupported or mis-entered command\n\r");
 10847  015A60  0ED6               	movlw	low STR_234
 10848  015A62  0103               	movlb	3	; () banked
 10849  015A64  6FEB               	movwf	printf@f& (0+255),b
 10850  015A66  0EF5               	movlw	high STR_234
 10851  015A68  6FEC               	movwf	(printf@f+1)& (0+255),b
 10852  015A6A  ECF7  F0DF         	call	_printf	;wreg free
 10853                           
 10854                           ;ring_buffer_LUT.c: 211: terminalTextAttributes(YELLOW, BLACK, NORMAL);
 10855  015A6E  0E00               	movlw	0
 10856  015A70  0102               	movlb	2	; () banked
 10857  015A72  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 10858  015A74  0E00               	movlw	0
 10859  015A76  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10860  015A78  0E03               	movlw	3
 10861  015A7A  EC49  F0B3         	call	_terminalTextAttributes
 10862                           
 10863                           ;ring_buffer_LUT.c: 212: printf("Commands are case sensitive, backspace is supported, co
      +                          mmand history is not supported\n\r");
 10864  015A7E  0E06               	movlw	low STR_235
 10865  015A80  0103               	movlb	3	; () banked
 10866  015A82  6FEB               	movwf	printf@f& (0+255),b
 10867  015A84  0EEC               	movlw	high STR_235
 10868  015A86  6FEC               	movwf	(printf@f+1)& (0+255),b
 10869  015A88  ECF7  F0DF         	call	_printf	;wreg free
 10870                           
 10871                           ;ring_buffer_LUT.c: 213: printf("Call 'Help' for list of supported commands\n\r");
 10872  015A8C  0E33               	movlw	low (STR_10+2)
 10873  015A8E  0103               	movlb	3	; () banked
 10874  015A90  6FEB               	movwf	printf@f& (0+255),b
 10875  015A92  0EF3               	movlw	high (STR_10+2)
 10876  015A94  6FEC               	movwf	(printf@f+1)& (0+255),b
 10877  015A96  ECF7  F0DF         	call	_printf	;wreg free
 10878                           
 10879                           ;ring_buffer_LUT.c: 214: terminalTextAttributesReset();
 10880  015A9A  ECAA  F0E4         	call	_terminalTextAttributesReset	;wreg free
 10881  015A9E  0012               	return	
 10882  015AA0                     __end_of_ringBufferLUT:
 10883                           	opt callstack 0
 10884                           
 10885 ;; *************** function _strcmp *****************
 10886 ;; Defined at:
 10887 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcmp.c"
 10888 ;; Parameters:    Size  Location     Type
 10889 ;;  s1              2    0[BANK2 ] PTR const unsigned char 
 10890 ;;		 -> line(64), 
 10891 ;;  s2              2    2[BANK2 ] PTR const unsigned char 
 10892 ;;		 -> STR_224(5), STR_220(22), STR_219(14), STR_217(18), 
 10893 ;;		 -> STR_215(17), STR_213(17), STR_197(15), STR_195(6), 
 10894 ;;		 -> STR_192(6), STR_189(6), 
 10895 ;; Auto vars:     Size  Location     Type
 10896 ;;  r               1    6[BANK2 ] char 
 10897 ;; Return value:  Size  Location     Type
 10898 ;;                  2    0[BANK2 ] int 
 10899 ;; Registers used:
 10900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10901 ;; Tracked objects:
 10902 ;;		On entry : 0/0
 10903 ;;		On exit  : 0/0
 10904 ;;		Unchanged: 0/0
 10905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10906 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10907 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10908 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10909 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10910 ;;Total ram usage:        7 bytes
 10911 ;; Hardware stack levels used:    1
 10912 ;; Hardware stack levels required when called:   11
 10913 ;; This function calls:
 10914 ;;		Nothing
 10915 ;; This function is called by:
 10916 ;;		_ringBufferLUT
 10917 ;; This function uses a non-reentrant model
 10918 ;;
 10919                           
 10920                           	psect	text3
 10921  01BA5E                     __ptext3:
 10922                           	opt callstack 0
 10923  01BA5E                     _strcmp:
 10924                           	opt callstack 17
 10925                           
 10926                           ;incstack = 0
 10927  01BA5E  D004               	goto	l20032
 10928  01BA60                     l20030:
 10929                           
 10930                           ; BSR set to: 2
 10931  01BA60  4B00               	infsnz	strcmp@s1& (0+255),f,b
 10932  01BA62  2B01               	incf	(strcmp@s1+1)& (0+255),f,b
 10933  01BA64  4B02               	infsnz	strcmp@s2& (0+255),f,b
 10934  01BA66  2B03               	incf	(strcmp@s2+1)& (0+255),f,b
 10935  01BA68                     l20032:
 10936  01BA68  C202  FFF6         	movff	strcmp@s2,tblptrl
 10937  01BA6C  C203  FFF7         	movff	strcmp@s2+1,tblptrh
 10938  01BA70                     	if	0	;tblptru may be non-zero
 10939  01BA70                     	endif
 10940  01BA70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10941  01BA70  0E00               	movlw	low (__mediumconst shr (0+16))
 10942  01BA72  6EF8               	movwf	tblptru,c
 10943  01BA74                     	endif
 10944  01BA74  0008               	tblrd		*
 10945  01BA76  CFF5 F204          	movff	tablat,??_strcmp
 10946  01BA7A  C200  FFD9         	movff	strcmp@s1,fsr2l
 10947  01BA7E  C201  FFDA         	movff	strcmp@s1+1,fsr2h
 10948  01BA82  50DF               	movf	indf2,w,c
 10949  01BA84  0102               	movlb	2	; () banked
 10950  01BA86  6F05               	movwf	(??_strcmp+1)& (0+255),b
 10951  01BA88  5104               	movf	??_strcmp& (0+255),w,b
 10952  01BA8A  5D05               	subwf	(??_strcmp+1)& (0+255),w,b
 10953  01BA8C  6F06               	movwf	strcmp@r& (0+255),b
 10954  01BA8E  5106               	movf	strcmp@r& (0+255),w,b
 10955  01BA90  A4D8               	btfss	status,2,c
 10956  01BA92  D007               	goto	u25410
 10957                           
 10958                           ; BSR set to: 2
 10959  01BA94  C200  FFD9         	movff	strcmp@s1,fsr2l
 10960  01BA98  C201  FFDA         	movff	strcmp@s1+1,fsr2h
 10961  01BA9C  50DF               	movf	indf2,w,c
 10962  01BA9E  A4D8               	btfss	status,2,c
 10963  01BAA0  D7DF               	goto	l20030
 10964  01BAA2                     u25410:
 10965                           
 10966                           ; BSR set to: 2
 10967  01BAA2  5106               	movf	strcmp@r& (0+255),w,b
 10968  01BAA4  6F00               	movwf	?_strcmp& (0+255),b
 10969  01BAA6  6B01               	clrf	(?_strcmp+1)& (0+255),b
 10970  01BAA8  BF00               	btfsc	?_strcmp& (0+255),7,b
 10971  01BAAA  0701               	decf	(?_strcmp+1)& (0+255),f,b
 10972                           
 10973                           ; BSR set to: 2
 10974  01BAAC  0012               	return		;funcret
 10975  01BAAE                     __end_of_strcmp:
 10976                           	opt callstack 0
 10977                           
 10978 ;; *************** function _printErrorHandlerStatus *****************
 10979 ;; Defined at:
 10980 ;;		line 223 in file "ring_buffer_LUT.c"
 10981 ;; Parameters:    Size  Location     Type
 10982 ;;		None
 10983 ;; Auto vars:     Size  Location     Type
 10984 ;;		None
 10985 ;; Return value:  Size  Location     Type
 10986 ;;                  1    wreg      void 
 10987 ;; Registers used:
 10988 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10989 ;; Tracked objects:
 10990 ;;		On entry : 0/0
 10991 ;;		On exit  : 0/0
 10992 ;;		Unchanged: 0/0
 10993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10998 ;;Total ram usage:        0 bytes
 10999 ;; Hardware stack levels used:    1
 11000 ;; Hardware stack levels required when called:   16
 11001 ;; This function calls:
 11002 ;;		_getADCError
 11003 ;;		_getI2CError
 11004 ;;		_getUARTError
 11005 ;;		_printf
 11006 ;;		_terminalTextAttributes
 11007 ;;		_terminalTextAttributesReset
 11008 ;; This function is called by:
 11009 ;;		_ringBufferLUT
 11010 ;; This function uses a non-reentrant model
 11011 ;;
 11012                           
 11013                           	psect	text4
 11014  019602                     __ptext4:
 11015                           	opt callstack 0
 11016  019602                     _printErrorHandlerStatus:
 11017                           	opt callstack 12
 11018                           
 11019                           ;ring_buffer_LUT.c: 225: if (getADCError()) {
 11020                           
 11021                           ; BSR set to: 2
 11022                           ;incstack = 0
 11023  019602  EC3A  F0E4         	call	_getADCError	;wreg free
 11024  019606  0900               	iorlw	0
 11025  019608  B4D8               	btfsc	status,2,c
 11026  01960A  D03E               	goto	l20052
 11027                           
 11028                           ;ring_buffer_LUT.c: 227: terminalTextAttributes(RED, BLACK, NORMAL);
 11029  01960C  0E00               	movlw	0
 11030  01960E  0102               	movlb	2	; () banked
 11031  019610  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11032  019612  0E00               	movlw	0
 11033  019614  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11034  019616  0E01               	movlw	1
 11035  019618  EC49  F0B3         	call	_terminalTextAttributes
 11036                           
 11037                           ;ring_buffer_LUT.c: 228: printf("    ADC error(s) detected!\n\r");
 11038  01961C  0E59               	movlw	low STR_237
 11039  01961E  0103               	movlb	3	; () banked
 11040  019620  6FEB               	movwf	printf@f& (0+255),b
 11041  019622  0EF8               	movlw	high STR_237
 11042  019624  6FEC               	movwf	(printf@f+1)& (0+255),b
 11043  019626  ECF7  F0DF         	call	_printf	;wreg free
 11044                           
 11045                           ;ring_buffer_LUT.c: 229: printf("    The following channels caused an ADC error:\n\r");
 11046  01962A  0E3C               	movlw	low STR_238
 11047  01962C  0103               	movlb	3	; () banked
 11048  01962E  6FEB               	movwf	printf@f& (0+255),b
 11049  019630  0EF2               	movlw	high STR_238
 11050  019632  6FEC               	movwf	(printf@f+1)& (0+255),b
 11051  019634  ECF7  F0DF         	call	_printf	;wreg free
 11052                           
 11053                           ;ring_buffer_LUT.c: 231: if (error_handler.ADC_general_error_flag) {
 11054  019638  0100               	movlb	0	; () banked
 11055  01963A  51BA               	movf	(_error_handler+1)& (0+255),w,b
 11056  01963C  B4D8               	btfsc	status,2,c
 11057  01963E  D007               	goto	l20048
 11058                           
 11059                           ; BSR set to: 0
 11060                           ;ring_buffer_LUT.c: 232: printf("        General ADC error\n\r");
 11061  019640  0E92               	movlw	low STR_239
 11062  019642  0103               	movlb	3	; () banked
 11063  019644  6FEB               	movwf	printf@f& (0+255),b
 11064  019646  0EF8               	movlw	high STR_239
 11065  019648  6FEC               	movwf	(printf@f+1)& (0+255),b
 11066  01964A  ECF7  F0DF         	call	_printf	;wreg free
 11067  01964E                     l20048:
 11068                           
 11069                           ;ring_buffer_LUT.c: 233: };ring_buffer_LUT.c: 235: if (error_handler.FVR_ADC_error_flag)
      +                           {
 11070  01964E  0100               	movlb	0	; () banked
 11071  019650  51B9               	movf	_error_handler& (0+255),w,b
 11072  019652  B4D8               	btfsc	status,2,c
 11073  019654  D007               	goto	l2119
 11074                           
 11075                           ; BSR set to: 0
 11076                           ;ring_buffer_LUT.c: 236: printf("        FVR\n\r");
 11077  019656  0E2A               	movlw	low STR_240
 11078  019658  0103               	movlb	3	; () banked
 11079  01965A  6FEB               	movwf	printf@f& (0+255),b
 11080  01965C  0EFC               	movlw	high STR_240
 11081  01965E  6FEC               	movwf	(printf@f+1)& (0+255),b
 11082  019660  ECF7  F0DF         	call	_printf	;wreg free
 11083  019664                     l2119:
 11084                           
 11085                           ;ring_buffer_LUT.c: 237: };ring_buffer_LUT.c: 239: terminalTextAttributes(YELLOW, BLACK,
      +                           NORMAL);
 11086  019664  0E00               	movlw	0
 11087  019666  0102               	movlb	2	; () banked
 11088  019668  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11089  01966A  0E00               	movlw	0
 11090  01966C  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11091  01966E  0E03               	movlw	3
 11092  019670  EC49  F0B3         	call	_terminalTextAttributes
 11093                           
 11094                           ;ring_buffer_LUT.c: 240: printf("    Call 'Clear ADC Errors' to clear ADC error(s)\n\r")
      +                          ;
 11095  019674  0E6E               	movlw	low STR_241
 11096  019676  0103               	movlb	3	; () banked
 11097  019678  6FEB               	movwf	printf@f& (0+255),b
 11098  01967A  0EF1               	movlw	high STR_241
 11099  01967C  6FEC               	movwf	(printf@f+1)& (0+255),b
 11100  01967E  ECF7  F0DF         	call	_printf	;wreg free
 11101                           
 11102                           ;ring_buffer_LUT.c: 241: terminalTextAttributesReset();
 11103  019682  ECAA  F0E4         	call	_terminalTextAttributesReset	;wreg free
 11104                           
 11105                           ;ring_buffer_LUT.c: 243: }
 11106  019686  D011               	goto	l20054
 11107  019688                     l20052:
 11108                           
 11109                           ;ring_buffer_LUT.c: 245: else {;ring_buffer_LUT.c: 247: terminalTextAttributes(GREEN, BL
      +                          ACK, NORMAL);
 11110  019688  0E00               	movlw	0
 11111  01968A  0102               	movlb	2	; () banked
 11112  01968C  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11113  01968E  0E00               	movlw	0
 11114  019690  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11115  019692  0E02               	movlw	2
 11116  019694  EC49  F0B3         	call	_terminalTextAttributes
 11117                           
 11118                           ;ring_buffer_LUT.c: 248: printf("    No ADC error(s) detected\n\r");
 11119  019698  0EFE               	movlw	low STR_242
 11120  01969A  0103               	movlb	3	; () banked
 11121  01969C  6FEB               	movwf	printf@f& (0+255),b
 11122  01969E  0EF7               	movlw	high STR_242
 11123  0196A0  6FEC               	movwf	(printf@f+1)& (0+255),b
 11124  0196A2  ECF7  F0DF         	call	_printf	;wreg free
 11125                           
 11126                           ;ring_buffer_LUT.c: 249: terminalTextAttributesReset();
 11127  0196A6  ECAA  F0E4         	call	_terminalTextAttributesReset	;wreg free
 11128  0196AA                     l20054:
 11129                           
 11130                           ;ring_buffer_LUT.c: 251: };ring_buffer_LUT.c: 253: if (getI2CError()) {
 11131  0196AA  EC65  F0E2         	call	_getI2CError	;wreg free
 11132  0196AE  0900               	iorlw	0
 11133  0196B0  B4D8               	btfsc	status,2,c
 11134  0196B2  D058               	goto	l20078
 11135                           
 11136                           ;ring_buffer_LUT.c: 255: terminalTextAttributes(RED, BLACK, NORMAL);
 11137  0196B4  0E00               	movlw	0
 11138  0196B6  0102               	movlb	2	; () banked
 11139  0196B8  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11140  0196BA  0E00               	movlw	0
 11141  0196BC  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11142  0196BE  0E01               	movlw	1
 11143  0196C0  EC49  F0B3         	call	_terminalTextAttributes
 11144                           
 11145                           ;ring_buffer_LUT.c: 256: printf("    The following I2C Errors were detected:\n\r");
 11146  0196C4  0E60               	movlw	low STR_243
 11147  0196C6  0103               	movlb	3	; () banked
 11148  0196C8  6FEB               	movwf	printf@f& (0+255),b
 11149  0196CA  0EF3               	movlw	high STR_243
 11150  0196CC  6FEC               	movwf	(printf@f+1)& (0+255),b
 11151  0196CE  ECF7  F0DF         	call	_printf	;wreg free
 11152                           
 11153                           ;ring_buffer_LUT.c: 258: if (error_handler.I2C_General_error_flag) {
 11154  0196D2  0100               	movlb	0	; () banked
 11155  0196D4  51BB               	movf	(_error_handler+2)& (0+255),w,b
 11156  0196D6  B4D8               	btfsc	status,2,c
 11157  0196D8  D007               	goto	l20062
 11158                           
 11159                           ; BSR set to: 0
 11160                           ;ring_buffer_LUT.c: 259: printf("        I2C General Error\n\r");
 11161  0196DA  0E76               	movlw	low STR_244
 11162  0196DC  0103               	movlb	3	; () banked
 11163  0196DE  6FEB               	movwf	printf@f& (0+255),b
 11164  0196E0  0EF8               	movlw	high STR_244
 11165  0196E2  6FEC               	movwf	(printf@f+1)& (0+255),b
 11166  0196E4  ECF7  F0DF         	call	_printf	;wreg free
 11167  0196E8                     l20062:
 11168                           
 11169                           ;ring_buffer_LUT.c: 260: };ring_buffer_LUT.c: 262: if (error_handler.I2C_Ambient_Temp_Se
      +                          nse_error_flag) {
 11170  0196E8  0100               	movlb	0	; () banked
 11171  0196EA  51BF               	movf	(_error_handler+6)& (0+255),w,b
 11172  0196EC  B4D8               	btfsc	status,2,c
 11173  0196EE  D007               	goto	l20066
 11174                           
 11175                           ; BSR set to: 0
 11176                           ;ring_buffer_LUT.c: 263: printf("        I2C Ambient Temp Sensor Error\n\r");
 11177  0196F0  0E14               	movlw	low STR_245
 11178  0196F2  0103               	movlb	3	; () banked
 11179  0196F4  6FEB               	movwf	printf@f& (0+255),b
 11180  0196F6  0EF5               	movlw	high STR_245
 11181  0196F8  6FEC               	movwf	(printf@f+1)& (0+255),b
 11182  0196FA  ECF7  F0DF         	call	_printf	;wreg free
 11183  0196FE                     l20066:
 11184                           
 11185                           ;ring_buffer_LUT.c: 264: };ring_buffer_LUT.c: 266: if (error_handler.I2C_POS5_Temp_Sense
      +                          _error_flag) {
 11186  0196FE  0100               	movlb	0	; () banked
 11187  019700  51BE               	movf	(_error_handler+5)& (0+255),w,b
 11188  019702  B4D8               	btfsc	status,2,c
 11189  019704  D007               	goto	l20070
 11190                           
 11191                           ; BSR set to: 0
 11192                           ;ring_buffer_LUT.c: 267: printf("        I2C POS5 Temp Sensor Error\n\r");
 11193  019706  0EFB               	movlw	low STR_246
 11194  019708  0103               	movlb	3	; () banked
 11195  01970A  6FEB               	movwf	printf@f& (0+255),b
 11196  01970C  0EF5               	movlw	high STR_246
 11197  01970E  6FEC               	movwf	(printf@f+1)& (0+255),b
 11198  019710  ECF7  F0DF         	call	_printf	;wreg free
 11199  019714                     l20070:
 11200                           
 11201                           ;ring_buffer_LUT.c: 268: };ring_buffer_LUT.c: 270: if (error_handler.I2C_QI_Temp_Sense_e
      +                          rror_flag) {
 11202  019714  0100               	movlb	0	; () banked
 11203  019716  51BD               	movf	(_error_handler+4)& (0+255),w,b
 11204  019718  B4D8               	btfsc	status,2,c
 11205  01971A  D007               	goto	l20074
 11206                           
 11207                           ; BSR set to: 0
 11208                           ;ring_buffer_LUT.c: 271: printf("        I2C QI Temp Sensor Error\n\r");
 11209  01971C  0EF4               	movlw	low STR_247
 11210  01971E  0103               	movlb	3	; () banked
 11211  019720  6FEB               	movwf	printf@f& (0+255),b
 11212  019722  0EF6               	movlw	high STR_247
 11213  019724  6FEC               	movwf	(printf@f+1)& (0+255),b
 11214  019726  ECF7  F0DF         	call	_printf	;wreg free
 11215  01972A                     l20074:
 11216                           
 11217                           ;ring_buffer_LUT.c: 272: };ring_buffer_LUT.c: 274: if (error_handler.I2C_OLED_error_flag
      +                          ) {
 11218  01972A  0100               	movlb	0	; () banked
 11219  01972C  51BC               	movf	(_error_handler+3)& (0+255),w,b
 11220  01972E  B4D8               	btfsc	status,2,c
 11221  019730  D007               	goto	l2126
 11222                           
 11223                           ; BSR set to: 0
 11224                           ;ring_buffer_LUT.c: 275: printf("        I2C OLED Display Error\n\r");
 11225  019732  0E9E               	movlw	low STR_248
 11226  019734  0103               	movlb	3	; () banked
 11227  019736  6FEB               	movwf	printf@f& (0+255),b
 11228  019738  0EF7               	movlw	high STR_248
 11229  01973A  6FEC               	movwf	(printf@f+1)& (0+255),b
 11230  01973C  ECF7  F0DF         	call	_printf	;wreg free
 11231  019740                     l2126:
 11232                           
 11233                           ;ring_buffer_LUT.c: 276: };ring_buffer_LUT.c: 278: terminalTextAttributes(YELLOW, BLACK,
      +                           NORMAL);
 11234  019740  0E00               	movlw	0
 11235  019742  0102               	movlb	2	; () banked
 11236  019744  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11237  019746  0E00               	movlw	0
 11238  019748  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11239  01974A  0E03               	movlw	3
 11240  01974C  EC49  F0B3         	call	_terminalTextAttributes
 11241                           
 11242                           ;ring_buffer_LUT.c: 279: printf("    Call 'Clear I2C Errors' to clear communications err
      +                          or(s)\n\r");
 11243  019750  0E9E               	movlw	low STR_249
 11244  019752  0103               	movlb	3	; () banked
 11245  019754  6FEB               	movwf	printf@f& (0+255),b
 11246  019756  0EEC               	movlw	high STR_249
 11247  019758  6FEC               	movwf	(printf@f+1)& (0+255),b
 11248  01975A  ECF7  F0DF         	call	_printf	;wreg free
 11249                           
 11250                           ;ring_buffer_LUT.c: 280: terminalTextAttributesReset();
 11251  01975E  ECAA  F0E4         	call	_terminalTextAttributesReset	;wreg free
 11252                           
 11253                           ;ring_buffer_LUT.c: 282: }
 11254  019762  D011               	goto	l20080
 11255  019764                     l20078:
 11256                           
 11257                           ;ring_buffer_LUT.c: 284: else {;ring_buffer_LUT.c: 286: terminalTextAttributes(GREEN, BL
      +                          ACK, NORMAL);
 11258  019764  0E00               	movlw	0
 11259  019766  0102               	movlb	2	; () banked
 11260  019768  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11261  01976A  0E00               	movlw	0
 11262  01976C  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11263  01976E  0E02               	movlw	2
 11264  019770  EC49  F0B3         	call	_terminalTextAttributes
 11265                           
 11266                           ;ring_buffer_LUT.c: 287: printf("    No I2C error(s) detected\n\r");
 11267  019774  0EDF               	movlw	low STR_250
 11268  019776  0103               	movlb	3	; () banked
 11269  019778  6FEB               	movwf	printf@f& (0+255),b
 11270  01977A  0EF7               	movlw	high STR_250
 11271  01977C  6FEC               	movwf	(printf@f+1)& (0+255),b
 11272  01977E  ECF7  F0DF         	call	_printf	;wreg free
 11273                           
 11274                           ;ring_buffer_LUT.c: 288: terminalTextAttributesReset();
 11275  019782  ECAA  F0E4         	call	_terminalTextAttributesReset	;wreg free
 11276  019786                     l20080:
 11277                           
 11278                           ;ring_buffer_LUT.c: 290: };ring_buffer_LUT.c: 292: if (getUARTError()) {
 11279  019786  EC76  F0E5         	call	_getUARTError	;wreg free
 11280  01978A  0900               	iorlw	0
 11281  01978C  B4D8               	btfsc	status,2,c
 11282  01978E  D021               	goto	l20084
 11283                           
 11284                           ;ring_buffer_LUT.c: 294: terminalTextAttributes(RED, BLACK, NORMAL);
 11285  019790  0E00               	movlw	0
 11286  019792  0102               	movlb	2	; () banked
 11287  019794  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11288  019796  0E00               	movlw	0
 11289  019798  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11290  01979A  0E01               	movlw	1
 11291  01979C  EC49  F0B3         	call	_terminalTextAttributes
 11292                           
 11293                           ;ring_buffer_LUT.c: 295: printf("    USB UART Error Detected\n\r");
 11294  0197A0  0E1D               	movlw	low STR_251
 11295  0197A2  0103               	movlb	3	; () banked
 11296  0197A4  6FEB               	movwf	printf@f& (0+255),b
 11297  0197A6  0EF8               	movlw	high STR_251
 11298  0197A8  6FEC               	movwf	(printf@f+1)& (0+255),b
 11299  0197AA  ECF7  F0DF         	call	_printf	;wreg free
 11300                           
 11301                           ;ring_buffer_LUT.c: 297: terminalTextAttributes(YELLOW, BLACK, NORMAL);
 11302  0197AE  0E00               	movlw	0
 11303  0197B0  0102               	movlb	2	; () banked
 11304  0197B2  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11305  0197B4  0E00               	movlw	0
 11306  0197B6  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11307  0197B8  0E03               	movlw	3
 11308  0197BA  EC49  F0B3         	call	_terminalTextAttributes
 11309                           
 11310                           ;ring_buffer_LUT.c: 298: printf("    Call 'Clear UART Errors' to clear communications er
      +                          ror(s)\n\r");
 11311  0197BE  0E5E               	movlw	low STR_252
 11312  0197C0  0103               	movlb	3	; () banked
 11313  0197C2  6FEB               	movwf	printf@f& (0+255),b
 11314  0197C4  0EEC               	movlw	high STR_252
 11315  0197C6  6FEC               	movwf	(printf@f+1)& (0+255),b
 11316  0197C8  ECF7  F0DF         	call	_printf	;wreg free
 11317                           
 11318                           ;ring_buffer_LUT.c: 299: terminalTextAttributesReset();
 11319  0197CC  ECAA  F0E4         	call	_terminalTextAttributesReset	;wreg free
 11320                           
 11321                           ;ring_buffer_LUT.c: 301: }
 11322  0197D0  0012               	return	
 11323  0197D2                     l20084:
 11324                           
 11325                           ;ring_buffer_LUT.c: 303: else {;ring_buffer_LUT.c: 305: terminalTextAttributes(GREEN, BL
      +                          ACK, NORMAL);
 11326  0197D2  0E00               	movlw	0
 11327  0197D4  0102               	movlb	2	; () banked
 11328  0197D6  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11329  0197D8  0E00               	movlw	0
 11330  0197DA  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11331  0197DC  0E02               	movlw	2
 11332  0197DE  EC49  F0B3         	call	_terminalTextAttributes
 11333                           
 11334                           ;ring_buffer_LUT.c: 306: printf("    No UART error(s) detected\n\r");
 11335  0197E2  0EBF               	movlw	low STR_253
 11336  0197E4  0103               	movlb	3	; () banked
 11337  0197E6  6FEB               	movwf	printf@f& (0+255),b
 11338  0197E8  0EF7               	movlw	high STR_253
 11339  0197EA  6FEC               	movwf	(printf@f+1)& (0+255),b
 11340  0197EC  ECF7  F0DF         	call	_printf	;wreg free
 11341                           
 11342                           ;ring_buffer_LUT.c: 307: terminalTextAttributesReset();
 11343  0197F0  ECAA  F0E4         	call	_terminalTextAttributesReset	;wreg free
 11344  0197F4  0012               	return		;funcret
 11345  0197F6                     __end_of_printErrorHandlerStatus:
 11346                           	opt callstack 0
 11347                           
 11348 ;; *************** function _printCurrentMeasurements *****************
 11349 ;; Defined at:
 11350 ;;		line 314 in file "ring_buffer_LUT.c"
 11351 ;; Parameters:    Size  Location     Type
 11352 ;;		None
 11353 ;; Auto vars:     Size  Location     Type
 11354 ;;		None
 11355 ;; Return value:  Size  Location     Type
 11356 ;;                  1    wreg      void 
 11357 ;; Registers used:
 11358 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11359 ;; Tracked objects:
 11360 ;;		On entry : 0/0
 11361 ;;		On exit  : 0/0
 11362 ;;		Unchanged: 0/0
 11363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11368 ;;Total ram usage:        0 bytes
 11369 ;; Hardware stack levels used:    1
 11370 ;; Hardware stack levels required when called:   16
 11371 ;; This function calls:
 11372 ;;		___flge
 11373 ;;		_floatToEngineeringFormat
 11374 ;;		_getNXQChargeStateString
 11375 ;;		_getStringSecondsAsTime
 11376 ;;		_printf
 11377 ;;		_terminalTextAttributes
 11378 ;;		_terminalTextAttributesReset
 11379 ;; This function is called by:
 11380 ;;		_ringBufferLUT
 11381 ;; This function uses a non-reentrant model
 11382 ;;
 11383                           
 11384                           	psect	text5
 11385  01503A                     __ptext5:
 11386                           	opt callstack 0
 11387  01503A                     _printCurrentMeasurements:
 11388                           	opt callstack 12
 11389                           
 11390                           ;ring_buffer_LUT.c: 316: if (nxq_charge_state == QI_Error) {
 11391                           
 11392                           ;incstack = 0
 11393  01503A  0E03               	movlw	3
 11394  01503C  0101               	movlb	1	; () banked
 11395  01503E  198C               	xorwf	_nxq_charge_state& (0+255),w,b
 11396  015040  A4D8               	btfss	status,2,c
 11397  015042  D010               	goto	l20090
 11398                           
 11399                           ; BSR set to: 1
 11400                           ;ring_buffer_LUT.c: 317: terminalTextAttributes(RED, BLACK, NORMAL);
 11401  015044  0E00               	movlw	0
 11402  015046  0102               	movlb	2	; () banked
 11403  015048  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11404  01504A  0E00               	movlw	0
 11405  01504C  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11406  01504E  0E01               	movlw	1
 11407  015050  EC49  F0B3         	call	_terminalTextAttributes
 11408                           
 11409                           ;ring_buffer_LUT.c: 318: printf("    QI Charger is in Error State\n\r");
 11410  015054  0ED1               	movlw	low STR_254
 11411  015056  0103               	movlb	3	; () banked
 11412  015058  6FEB               	movwf	printf@f& (0+255),b
 11413  01505A  0EF6               	movlw	high STR_254
 11414  01505C  6FEC               	movwf	(printf@f+1)& (0+255),b
 11415  01505E  ECF7  F0DF         	call	_printf	;wreg free
 11416                           
 11417                           ;ring_buffer_LUT.c: 319: }
 11418  015062  D029               	goto	l2134
 11419  015064                     l20090:
 11420                           
 11421                           ; BSR set to: 1
 11422                           ;ring_buffer_LUT.c: 320: else if (nxq_charge_state == QI_Fully_Charged) {
 11423  015064  0E02               	movlw	2
 11424  015066  198C               	xorwf	_nxq_charge_state& (0+255),w,b
 11425  015068  A4D8               	btfss	status,2,c
 11426  01506A  D010               	goto	l20094
 11427                           
 11428                           ; BSR set to: 1
 11429                           ;ring_buffer_LUT.c: 321: terminalTextAttributes(GREEN, BLACK, NORMAL);
 11430  01506C  0E00               	movlw	0
 11431  01506E  0102               	movlb	2	; () banked
 11432  015070  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11433  015072  0E00               	movlw	0
 11434  015074  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11435  015076  0E02               	movlw	2
 11436  015078  EC49  F0B3         	call	_terminalTextAttributes
 11437                           
 11438                           ;ring_buffer_LUT.c: 322: printf("    QI wireless power converter has fully charged phone
      +                          \n\r");
 11439  01507C  0E3E               	movlw	low STR_255
 11440  01507E  0103               	movlb	3	; () banked
 11441  015080  6FEB               	movwf	printf@f& (0+255),b
 11442  015082  0EEF               	movlw	high STR_255
 11443  015084  6FEC               	movwf	(printf@f+1)& (0+255),b
 11444  015086  ECF7  F0DF         	call	_printf	;wreg free
 11445                           
 11446                           ;ring_buffer_LUT.c: 323: }
 11447  01508A  D015               	goto	l2134
 11448  01508C                     l20094:
 11449                           
 11450                           ; BSR set to: 1
 11451                           ;ring_buffer_LUT.c: 324: else {;ring_buffer_LUT.c: 325: terminalTextAttributes(GREEN, BL
      +                          ACK, NORMAL);
 11452  01508C  0E00               	movlw	0
 11453  01508E  0102               	movlb	2	; () banked
 11454  015090  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11455  015092  0E00               	movlw	0
 11456  015094  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11457  015096  0E02               	movlw	2
 11458  015098  EC49  F0B3         	call	_terminalTextAttributes
 11459                           
 11460                           ;ring_buffer_LUT.c: 326: printf("    QI wireless power converter is currently %s\n\r", g
      +                          etNXQChargeStateString());
 11461  01509C  0EA0               	movlw	low STR_256
 11462  01509E  0103               	movlb	3	; () banked
 11463  0150A0  6FEB               	movwf	printf@f& (0+255),b
 11464  0150A2  0EF2               	movlw	high STR_256
 11465  0150A4  6FEC               	movwf	(printf@f+1)& (0+255),b
 11466  0150A6  ECFE  F0DB         	call	_getNXQChargeStateString	;wreg free
 11467  0150AA  C200  F3ED         	movff	?_getNXQChargeStateString,?_printf+2
 11468  0150AE  C201  F3EE         	movff	?_getNXQChargeStateString+1,?_printf+3
 11469  0150B2  ECF7  F0DF         	call	_printf	;wreg free
 11470  0150B6                     l2134:
 11471                           
 11472                           ;ring_buffer_LUT.c: 327: };ring_buffer_LUT.c: 329: printf("\n\r");
 11473  0150B6  0E2F               	movlw	low (STR_356+21)
 11474  0150B8  0103               	movlb	3	; () banked
 11475  0150BA  6FEB               	movwf	printf@f& (0+255),b
 11476  0150BC  0EF9               	movlw	high (STR_356+21)
 11477  0150BE  6FEC               	movwf	(printf@f+1)& (0+255),b
 11478  0150C0  ECF7  F0DF         	call	_printf	;wreg free
 11479                           
 11480                           ;ring_buffer_LUT.c: 331: terminalTextAttributes(GREEN, BLACK, NORMAL);
 11481  0150C4  0E00               	movlw	0
 11482  0150C6  0102               	movlb	2	; () banked
 11483  0150C8  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11484  0150CA  0E00               	movlw	0
 11485  0150CC  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11486  0150CE  0E02               	movlw	2
 11487  0150D0  EC49  F0B3         	call	_terminalTextAttributes
 11488                           
 11489                           ;ring_buffer_LUT.c: 332: if (QI_charge_time > 0) printf("    System has been charging a 
      +                          phone for %s\n\r\n\r", getStringSecondsAsTime(QI_charge_time));
 11490  0150D4  0102               	movlb	2	; () banked
 11491  0150D6  51D3               	movf	_QI_charge_time& (0+255),w,b
 11492  0150D8  11D4               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 11493  0150DA  11D5               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 11494  0150DC  11D6               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 11495  0150DE  B4D8               	btfsc	status,2,c
 11496  0150E0  D015               	goto	l2137
 11497                           
 11498                           ; BSR set to: 2
 11499  0150E2  0ED2               	movlw	low STR_258
 11500  0150E4  0103               	movlb	3	; () banked
 11501  0150E6  6FEB               	movwf	printf@f& (0+255),b
 11502  0150E8  0EF2               	movlw	high STR_258
 11503  0150EA  6FEC               	movwf	(printf@f+1)& (0+255),b
 11504  0150EC  C2D3  F2A3         	movff	_QI_charge_time,getStringSecondsAsTime@input_seconds
 11505  0150F0  C2D4  F2A4         	movff	_QI_charge_time+1,getStringSecondsAsTime@input_seconds+1
 11506  0150F4  C2D5  F2A5         	movff	_QI_charge_time+2,getStringSecondsAsTime@input_seconds+2
 11507  0150F8  C2D6  F2A6         	movff	_QI_charge_time+3,getStringSecondsAsTime@input_seconds+3
 11508  0150FC  EC76  F0B1         	call	_getStringSecondsAsTime	;wreg free
 11509  015100  C2A3  F3ED         	movff	?_getStringSecondsAsTime,?_printf+2
 11510  015104  C2A4  F3EE         	movff	?_getStringSecondsAsTime+1,?_printf+3
 11511  015108  ECF7  F0DF         	call	_printf	;wreg free
 11512  01510C                     l2137:
 11513                           
 11514                           ;ring_buffer_LUT.c: 334: terminalTextAttributes(CYAN, BLACK, BOLD);
 11515  01510C  0E00               	movlw	0
 11516  01510E  0102               	movlb	2	; () banked
 11517  015110  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11518  015112  0E01               	movlw	1
 11519  015114  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11520  015116  0E06               	movlw	6
 11521  015118  EC49  F0B3         	call	_terminalTextAttributes
 11522                           
 11523                           ;ring_buffer_LUT.c: 335: printf("    System Voltages:\n\r");
 11524  01511C  0E91               	movlw	low STR_259
 11525  01511E  0103               	movlb	3	; () banked
 11526  015120  6FEB               	movwf	printf@f& (0+255),b
 11527  015122  0EF9               	movlw	high STR_259
 11528  015124  6FEC               	movwf	(printf@f+1)& (0+255),b
 11529  015126  ECF7  F0DF         	call	_printf	;wreg free
 11530                           
 11531                           ;ring_buffer_LUT.c: 336: terminalTextAttributes(CYAN, BLACK, NORMAL);
 11532  01512A  0E00               	movlw	0
 11533  01512C  0102               	movlb	2	; () banked
 11534  01512E  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11535  015130  0E00               	movlw	0
 11536  015132  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11537  015134  0E06               	movlw	6
 11538  015136  EC49  F0B3         	call	_terminalTextAttributes
 11539                           
 11540                           ;ring_buffer_LUT.c: 337: printf("        +12V rail measured as %+.3f Volts\n\r", adc_res
      +                          ults.pos12_adc_result);
 11541  01513A  0E16               	movlw	low STR_260
 11542  01513C  0103               	movlb	3	; () banked
 11543  01513E  6FEB               	movwf	printf@f& (0+255),b
 11544  015140  0EF4               	movlw	high STR_260
 11545  015142  6FEC               	movwf	(printf@f+1)& (0+255),b
 11546  015144  C0EB  F3ED         	movff	_adc_results+12,?_printf+2
 11547  015148  C0EC  F3EE         	movff	_adc_results+13,?_printf+3
 11548  01514C  C0ED  F3EF         	movff	_adc_results+14,?_printf+4
 11549  015150  C0EE  F3F0         	movff	_adc_results+15,?_printf+5
 11550  015154  ECF7  F0DF         	call	_printf	;wreg free
 11551                           
 11552                           ;ring_buffer_LUT.c: 338: printf("        +5V rail measured as %+.3f Volts\n\r", adc_resu
      +                          lts.pos5_adc_result);
 11553  015158  0E6E               	movlw	low STR_261
 11554  01515A  0103               	movlb	3	; () banked
 11555  01515C  6FEB               	movwf	printf@f& (0+255),b
 11556  01515E  0EF4               	movlw	high STR_261
 11557  015160  6FEC               	movwf	(printf@f+1)& (0+255),b
 11558  015162  C0E7  F3ED         	movff	_adc_results+8,?_printf+2
 11559  015166  C0E8  F3EE         	movff	_adc_results+9,?_printf+3
 11560  01516A  C0E9  F3EF         	movff	_adc_results+10,?_printf+4
 11561  01516E  C0EA  F3F0         	movff	_adc_results+11,?_printf+5
 11562  015172  ECF7  F0DF         	call	_printf	;wreg free
 11563                           
 11564                           ;ring_buffer_LUT.c: 340: printf("\n\r");
 11565  015176  0E2F               	movlw	low (STR_356+21)
 11566  015178  0103               	movlb	3	; () banked
 11567  01517A  6FEB               	movwf	printf@f& (0+255),b
 11568  01517C  0EF9               	movlw	high (STR_356+21)
 11569  01517E  6FEC               	movwf	(printf@f+1)& (0+255),b
 11570  015180  ECF7  F0DF         	call	_printf	;wreg free
 11571                           
 11572                           ;ring_buffer_LUT.c: 342: terminalTextAttributes(CYAN, BLACK, BOLD);
 11573  015184  0E00               	movlw	0
 11574  015186  0102               	movlb	2	; () banked
 11575  015188  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11576  01518A  0E01               	movlw	1
 11577  01518C  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11578  01518E  0E06               	movlw	6
 11579  015190  EC49  F0B3         	call	_terminalTextAttributes
 11580                           
 11581                           ;ring_buffer_LUT.c: 343: printf("    System Currents:\n\r");
 11582  015194  0EA8               	movlw	low STR_263
 11583  015196  0103               	movlb	3	; () banked
 11584  015198  6FEB               	movwf	printf@f& (0+255),b
 11585  01519A  0EF9               	movlw	high STR_263
 11586  01519C  6FEC               	movwf	(printf@f+1)& (0+255),b
 11587  01519E  ECF7  F0DF         	call	_printf	;wreg free
 11588                           
 11589                           ;ring_buffer_LUT.c: 344: terminalTextAttributes(CYAN, BLACK, NORMAL);
 11590  0151A2  0E00               	movlw	0
 11591  0151A4  0102               	movlb	2	; () banked
 11592  0151A6  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11593  0151A8  0E00               	movlw	0
 11594  0151AA  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11595  0151AC  0E06               	movlw	6
 11596  0151AE  EC49  F0B3         	call	_terminalTextAttributes
 11597                           
 11598                           ;ring_buffer_LUT.c: 345: printf("        +12V input current measured as %+.3f Amps\n\r",
      +                           adc_results.pos12_isns_adc_result);
 11599  0151B2  0EA2               	movlw	low STR_264
 11600  0151B4  0103               	movlb	3	; () banked
 11601  0151B6  6FEB               	movwf	printf@f& (0+255),b
 11602  0151B8  0EF1               	movlw	high STR_264
 11603  0151BA  6FEC               	movwf	(printf@f+1)& (0+255),b
 11604  0151BC  C0EF  F3ED         	movff	_adc_results+16,?_printf+2
 11605  0151C0  C0F0  F3EE         	movff	_adc_results+17,?_printf+3
 11606  0151C4  C0F1  F3EF         	movff	_adc_results+18,?_printf+4
 11607  0151C8  C0F2  F3F0         	movff	_adc_results+19,?_printf+5
 11608  0151CC  ECF7  F0DF         	call	_printf	;wreg free
 11609                           
 11610                           ;ring_buffer_LUT.c: 346: printf("        QI converter current measured as %+.3f Amps\n\r
      +                          ", adc_results.qi_isns_adc_result);
 11611  0151D0  0E38               	movlw	low STR_265
 11612  0151D2  0103               	movlb	3	; () banked
 11613  0151D4  6FEB               	movwf	printf@f& (0+255),b
 11614  0151D6  0EF1               	movlw	high STR_265
 11615  0151D8  6FEC               	movwf	(printf@f+1)& (0+255),b
 11616  0151DA  C0F3  F3ED         	movff	_adc_results+20,?_printf+2
 11617  0151DE  C0F4  F3EE         	movff	_adc_results+21,?_printf+3
 11618  0151E2  C0F5  F3EF         	movff	_adc_results+22,?_printf+4
 11619  0151E6  C0F6  F3F0         	movff	_adc_results+23,?_printf+5
 11620  0151EA  ECF7  F0DF         	call	_printf	;wreg free
 11621                           
 11622                           ;ring_buffer_LUT.c: 348: printf("\n\r");
 11623  0151EE  0E2F               	movlw	low (STR_356+21)
 11624  0151F0  0103               	movlb	3	; () banked
 11625  0151F2  6FEB               	movwf	printf@f& (0+255),b
 11626  0151F4  0EF9               	movlw	high (STR_356+21)
 11627  0151F6  6FEC               	movwf	(printf@f+1)& (0+255),b
 11628  0151F8  ECF7  F0DF         	call	_printf	;wreg free
 11629                           
 11630                           ;ring_buffer_LUT.c: 350: terminalTextAttributes(CYAN, BLACK, BOLD);
 11631  0151FC  0E00               	movlw	0
 11632  0151FE  0102               	movlb	2	; () banked
 11633  015200  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11634  015202  0E01               	movlw	1
 11635  015204  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11636  015206  0E06               	movlw	6
 11637  015208  EC49  F0B3         	call	_terminalTextAttributes
 11638                           
 11639                           ;ring_buffer_LUT.c: 351: printf("    System Power:\n\r");
 11640  01520C  0EC0               	movlw	low STR_267
 11641  01520E  0103               	movlb	3	; () banked
 11642  015210  6FEB               	movwf	printf@f& (0+255),b
 11643  015212  0EFA               	movlw	high STR_267
 11644  015214  6FEC               	movwf	(printf@f+1)& (0+255),b
 11645  015216  ECF7  F0DF         	call	_printf	;wreg free
 11646                           
 11647                           ;ring_buffer_LUT.c: 352: terminalTextAttributes(CYAN, BLACK, NORMAL);
 11648  01521A  0E00               	movlw	0
 11649  01521C  0102               	movlb	2	; () banked
 11650  01521E  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11651  015220  0E00               	movlw	0
 11652  015222  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11653  015224  0E06               	movlw	6
 11654  015226  EC49  F0B3         	call	_terminalTextAttributes
 11655                           
 11656                           ;ring_buffer_LUT.c: 353: printf("        Electrical Input Power calculated as %+.3f Watt
      +                          s\n\r", adc_calculations.input_power);
 11657  01522A  0E03               	movlw	low STR_268
 11658  01522C  0103               	movlb	3	; () banked
 11659  01522E  6FEB               	movwf	printf@f& (0+255),b
 11660  015230  0EEF               	movlw	high STR_268
 11661  015232  6FEC               	movwf	(printf@f+1)& (0+255),b
 11662  015234  C2BF  F3ED         	movff	_adc_calculations,?_printf+2
 11663  015238  C2C0  F3EE         	movff	_adc_calculations+1,?_printf+3
 11664  01523C  C2C1  F3EF         	movff	_adc_calculations+2,?_printf+4
 11665  015240  C2C2  F3F0         	movff	_adc_calculations+3,?_printf+5
 11666  015244  ECF7  F0DF         	call	_printf	;wreg free
 11667                           
 11668                           ;ring_buffer_LUT.c: 354: printf("        Wireless Output Power calculated as %+.3f Watts
      +                          \n\r", adc_calculations.output_power);
 11669  015248  0E78               	movlw	low STR_269
 11670  01524A  0103               	movlb	3	; () banked
 11671  01524C  6FEB               	movwf	printf@f& (0+255),b
 11672  01524E  0EEF               	movlw	high STR_269
 11673  015250  6FEC               	movwf	(printf@f+1)& (0+255),b
 11674  015252  C2C3  F3ED         	movff	_adc_calculations+4,?_printf+2
 11675  015256  C2C4  F3EE         	movff	_adc_calculations+5,?_printf+3
 11676  01525A  C2C5  F3EF         	movff	_adc_calculations+6,?_printf+4
 11677  01525E  C2C6  F3F0         	movff	_adc_calculations+7,?_printf+5
 11678  015262  ECF7  F0DF         	call	_printf	;wreg free
 11679                           
 11680                           ;ring_buffer_LUT.c: 356: printf("\n\r");
 11681  015266  0E2F               	movlw	low (STR_356+21)
 11682  015268  0103               	movlb	3	; () banked
 11683  01526A  6FEB               	movwf	printf@f& (0+255),b
 11684  01526C  0EF9               	movlw	high (STR_356+21)
 11685  01526E  6FEC               	movwf	(printf@f+1)& (0+255),b
 11686  015270  ECF7  F0DF         	call	_printf	;wreg free
 11687                           
 11688                           ;ring_buffer_LUT.c: 358: terminalTextAttributes(CYAN, BLACK, BOLD);
 11689  015274  0E00               	movlw	0
 11690  015276  0102               	movlb	2	; () banked
 11691  015278  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11692  01527A  0E01               	movlw	1
 11693  01527C  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11694  01527E  0E06               	movlw	6
 11695  015280  EC49  F0B3         	call	_terminalTextAttributes
 11696                           
 11697                           ;ring_buffer_LUT.c: 359: printf("    System Efficiency calculated as %.3f%%\n\r", adc_ca
      +                          lculations.efficiency);
 11698  015284  0EBC               	movlw	low STR_271
 11699  015286  0103               	movlb	3	; () banked
 11700  015288  6FEB               	movwf	printf@f& (0+255),b
 11701  01528A  0EF3               	movlw	high STR_271
 11702  01528C  6FEC               	movwf	(printf@f+1)& (0+255),b
 11703  01528E  C2C7  F3ED         	movff	_adc_calculations+8,?_printf+2
 11704  015292  C2C8  F3EE         	movff	_adc_calculations+9,?_printf+3
 11705  015296  C2C9  F3EF         	movff	_adc_calculations+10,?_printf+4
 11706  01529A  C2CA  F3F0         	movff	_adc_calculations+11,?_printf+5
 11707  01529E  ECF7  F0DF         	call	_printf	;wreg free
 11708                           
 11709                           ;ring_buffer_LUT.c: 361: printf("\n\r");
 11710  0152A2  0E2F               	movlw	low (STR_356+21)
 11711  0152A4  0103               	movlb	3	; () banked
 11712  0152A6  6FEB               	movwf	printf@f& (0+255),b
 11713  0152A8  0EF9               	movlw	high (STR_356+21)
 11714  0152AA  6FEC               	movwf	(printf@f+1)& (0+255),b
 11715  0152AC  ECF7  F0DF         	call	_printf	;wreg free
 11716                           
 11717                           ;ring_buffer_LUT.c: 363: if (adc_calculations.output_energy > 0.0) {
 11718  0152B0  0E00               	movlw	0
 11719  0152B2  0102               	movlb	2	; () banked
 11720  0152B4  6F4C               	movwf	___flge@ff1& (0+255),b
 11721  0152B6  0E00               	movlw	0
 11722  0152B8  6F4D               	movwf	(___flge@ff1+1)& (0+255),b
 11723  0152BA  0E00               	movlw	0
 11724  0152BC  6F4E               	movwf	(___flge@ff1+2)& (0+255),b
 11725  0152BE  0E00               	movlw	0
 11726  0152C0  6F4F               	movwf	(___flge@ff1+3)& (0+255),b
 11727  0152C2  C2CF  F250         	movff	_adc_calculations+16,___flge@ff2
 11728  0152C6  C2D0  F251         	movff	_adc_calculations+17,___flge@ff2+1
 11729  0152CA  C2D1  F252         	movff	_adc_calculations+18,___flge@ff2+2
 11730  0152CE  C2D2  F253         	movff	_adc_calculations+19,___flge@ff2+3
 11731  0152D2  EC63  F0D3         	call	___flge	;wreg free
 11732  0152D6  0102               	movlb	2	; () banked
 11733  0152D8  B0D8               	btfsc	status,0,c
 11734  0152DA  D023               	goto	l20104
 11735                           
 11736                           ; BSR set to: 2
 11737                           ;ring_buffer_LUT.c: 365: terminalTextAttributes(CYAN, BLACK, BOLD);
 11738  0152DC  0E00               	movlw	0
 11739  0152DE  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11740  0152E0  0E01               	movlw	1
 11741  0152E2  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11742  0152E4  0E06               	movlw	6
 11743  0152E6  EC49  F0B3         	call	_terminalTextAttributes
 11744                           
 11745                           ;ring_buffer_LUT.c: 366: printf("    Energy consumed by the load while charging: %sJoule
      +                          s\n\r", floatToEngineeringFormat(adc_calculations.output_energy));
 11746  0152EA  0EC8               	movlw	low STR_273
 11747  0152EC  0103               	movlb	3	; () banked
 11748  0152EE  6FEB               	movwf	printf@f& (0+255),b
 11749  0152F0  0EEE               	movlw	high STR_273
 11750  0152F2  6FEC               	movwf	(printf@f+1)& (0+255),b
 11751  0152F4  C2CF  F2A3         	movff	_adc_calculations+16,floatToEngineeringFormat@input_value
 11752  0152F8  C2D0  F2A4         	movff	_adc_calculations+17,floatToEngineeringFormat@input_value+1
 11753  0152FC  C2D1  F2A5         	movff	_adc_calculations+18,floatToEngineeringFormat@input_value+2
 11754  015300  C2D2  F2A6         	movff	_adc_calculations+19,floatToEngineeringFormat@input_value+3
 11755  015304  ECFB  F0A4         	call	_floatToEngineeringFormat	;wreg free
 11756  015308  C2A3  F3ED         	movff	?_floatToEngineeringFormat,?_printf+2
 11757  01530C  C2A4  F3EE         	movff	?_floatToEngineeringFormat+1,?_printf+3
 11758  015310  ECF7  F0DF         	call	_printf	;wreg free
 11759                           
 11760                           ;ring_buffer_LUT.c: 368: printf("\n\r");
 11761  015314  0E2F               	movlw	low (STR_356+21)
 11762  015316  0103               	movlb	3	; () banked
 11763  015318  6FEB               	movwf	printf@f& (0+255),b
 11764  01531A  0EF9               	movlw	high (STR_356+21)
 11765  01531C  6FEC               	movwf	(printf@f+1)& (0+255),b
 11766  01531E  ECF7  F0DF         	call	_printf	;wreg free
 11767  015322                     l20104:
 11768                           
 11769                           ;ring_buffer_LUT.c: 370: };ring_buffer_LUT.c: 372: if (adc_calculations.output_charge > 
      +                          0.0) {
 11770  015322  0E00               	movlw	0
 11771  015324  0102               	movlb	2	; () banked
 11772  015326  6F4C               	movwf	___flge@ff1& (0+255),b
 11773  015328  0E00               	movlw	0
 11774  01532A  6F4D               	movwf	(___flge@ff1+1)& (0+255),b
 11775  01532C  0E00               	movlw	0
 11776  01532E  6F4E               	movwf	(___flge@ff1+2)& (0+255),b
 11777  015330  0E00               	movlw	0
 11778  015332  6F4F               	movwf	(___flge@ff1+3)& (0+255),b
 11779  015334  C2CB  F250         	movff	_adc_calculations+12,___flge@ff2
 11780  015338  C2CC  F251         	movff	_adc_calculations+13,___flge@ff2+1
 11781  01533C  C2CD  F252         	movff	_adc_calculations+14,___flge@ff2+2
 11782  015340  C2CE  F253         	movff	_adc_calculations+15,___flge@ff2+3
 11783  015344  EC63  F0D3         	call	___flge	;wreg free
 11784  015348  0102               	movlb	2	; () banked
 11785  01534A  B0D8               	btfsc	status,0,c
 11786  01534C  D023               	goto	l2139
 11787                           
 11788                           ; BSR set to: 2
 11789                           ;ring_buffer_LUT.c: 374: terminalTextAttributes(CYAN, BLACK, BOLD);
 11790  01534E  0E00               	movlw	0
 11791  015350  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11792  015352  0E01               	movlw	1
 11793  015354  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11794  015356  0E06               	movlw	6
 11795  015358  EC49  F0B3         	call	_terminalTextAttributes
 11796                           
 11797                           ;ring_buffer_LUT.c: 375: printf("    Charge consumed by the load while charging: %sCoulo
      +                          mbs\n\r", floatToEngineeringFormat(adc_calculations.output_charge));
 11798  01535C  0E13               	movlw	low STR_275
 11799  01535E  0103               	movlb	3	; () banked
 11800  015360  6FEB               	movwf	printf@f& (0+255),b
 11801  015362  0EEE               	movlw	high STR_275
 11802  015364  6FEC               	movwf	(printf@f+1)& (0+255),b
 11803  015366  C2CB  F2A3         	movff	_adc_calculations+12,floatToEngineeringFormat@input_value
 11804  01536A  C2CC  F2A4         	movff	_adc_calculations+13,floatToEngineeringFormat@input_value+1
 11805  01536E  C2CD  F2A5         	movff	_adc_calculations+14,floatToEngineeringFormat@input_value+2
 11806  015372  C2CE  F2A6         	movff	_adc_calculations+15,floatToEngineeringFormat@input_value+3
 11807  015376  ECFB  F0A4         	call	_floatToEngineeringFormat	;wreg free
 11808  01537A  C2A3  F3ED         	movff	?_floatToEngineeringFormat,?_printf+2
 11809  01537E  C2A4  F3EE         	movff	?_floatToEngineeringFormat+1,?_printf+3
 11810  015382  ECF7  F0DF         	call	_printf	;wreg free
 11811                           
 11812                           ;ring_buffer_LUT.c: 377: printf("\n\r");
 11813  015386  0E2F               	movlw	low (STR_356+21)
 11814  015388  0103               	movlb	3	; () banked
 11815  01538A  6FEB               	movwf	printf@f& (0+255),b
 11816  01538C  0EF9               	movlw	high (STR_356+21)
 11817  01538E  6FEC               	movwf	(printf@f+1)& (0+255),b
 11818  015390  ECF7  F0DF         	call	_printf	;wreg free
 11819  015394                     l2139:
 11820                           
 11821                           ;ring_buffer_LUT.c: 379: };ring_buffer_LUT.c: 381: printf("    System Switching Frequenc
      +                          ies:\n\r");
 11822  015394  0E44               	movlw	low STR_277
 11823  015396  0103               	movlb	3	; () banked
 11824  015398  6FEB               	movwf	printf@f& (0+255),b
 11825  01539A  0EF6               	movlw	high STR_277
 11826  01539C  6FEC               	movwf	(printf@f+1)& (0+255),b
 11827  01539E  ECF7  F0DF         	call	_printf	;wreg free
 11828                           
 11829                           ;ring_buffer_LUT.c: 382: terminalTextAttributes(CYAN, BLACK, NORMAL);
 11830  0153A2  0E00               	movlw	0
 11831  0153A4  0102               	movlb	2	; () banked
 11832  0153A6  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11833  0153A8  0E00               	movlw	0
 11834  0153AA  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11835  0153AC  0E06               	movlw	6
 11836  0153AE  EC49  F0B3         	call	_terminalTextAttributes
 11837                           
 11838                           ;ring_buffer_LUT.c: 383: if (nxq_charge_state == QI_Idle || nxq_charge_state == QI_Error
      +                          ) printf("        POS5 Converter is in Burst Mode\n\r");
 11839  0153B2  0101               	movlb	1	; () banked
 11840  0153B4  518C               	movf	_nxq_charge_state& (0+255),w,b
 11841  0153B6  B4D8               	btfsc	status,2,c
 11842  0153B8  D004               	goto	u25580
 11843                           
 11844                           ; BSR set to: 1
 11845  0153BA  0E03               	movlw	3
 11846  0153BC  198C               	xorwf	_nxq_charge_state& (0+255),w,b
 11847  0153BE  A4D8               	btfss	status,2,c
 11848  0153C0  D008               	goto	l20114
 11849  0153C2                     u25580:
 11850                           
 11851                           ; BSR set to: 1
 11852  0153C2  0E99               	movlw	low STR_278
 11853  0153C4  0103               	movlb	3	; () banked
 11854  0153C6  6FEB               	movwf	printf@f& (0+255),b
 11855  0153C8  0EF4               	movlw	high STR_278
 11856  0153CA  6FEC               	movwf	(printf@f+1)& (0+255),b
 11857  0153CC  ECF7  F0DF         	call	_printf	;wreg free
 11858  0153D0  D00F               	goto	l20116
 11859  0153D2                     l20114:
 11860                           
 11861                           ; BSR set to: 1
 11862                           ;ring_buffer_LUT.c: 384: else printf("        Current +5V Switching Frequency measured a
      +                          s %.1f MHz\n\r", 2.5);
 11863  0153D2  0EDD               	movlw	low STR_279
 11864  0153D4  0103               	movlb	3	; () banked
 11865  0153D6  6FEB               	movwf	printf@f& (0+255),b
 11866  0153D8  0EEC               	movlw	high STR_279
 11867  0153DA  6FEC               	movwf	(printf@f+1)& (0+255),b
 11868  0153DC  0E00               	movlw	0
 11869  0153DE  6FED               	movwf	(?_printf+2)& (0+255),b
 11870  0153E0  0E00               	movlw	0
 11871  0153E2  6FEE               	movwf	(?_printf+3)& (0+255),b
 11872  0153E4  0E20               	movlw	32
 11873  0153E6  6FEF               	movwf	(?_printf+4)& (0+255),b
 11874  0153E8  0E40               	movlw	64
 11875  0153EA  6FF0               	movwf	(?_printf+5)& (0+255),b
 11876  0153EC  ECF7  F0DF         	call	_printf	;wreg free
 11877  0153F0                     l20116:
 11878                           
 11879                           ;ring_buffer_LUT.c: 385: if (nxq_charge_state == QI_Idle || nxq_charge_state == QI_Error
      +                          ) printf("        QI Converter is in Burst Mode\n\r");
 11880  0153F0  0101               	movlb	1	; () banked
 11881  0153F2  518C               	movf	_nxq_charge_state& (0+255),w,b
 11882  0153F4  B4D8               	btfsc	status,2,c
 11883  0153F6  D004               	goto	u25600
 11884                           
 11885                           ; BSR set to: 1
 11886  0153F8  0E03               	movlw	3
 11887  0153FA  198C               	xorwf	_nxq_charge_state& (0+255),w,b
 11888  0153FC  A4D8               	btfss	status,2,c
 11889  0153FE  D008               	goto	l20122
 11890  015400                     u25600:
 11891                           
 11892                           ; BSR set to: 1
 11893  015400  0EEC               	movlw	low STR_280
 11894  015402  0103               	movlb	3	; () banked
 11895  015404  6FEB               	movwf	printf@f& (0+255),b
 11896  015406  0EF4               	movlw	high STR_280
 11897  015408  6FEC               	movwf	(printf@f+1)& (0+255),b
 11898  01540A  ECF7  F0DF         	call	_printf	;wreg free
 11899  01540E  D015               	goto	l2147
 11900  015410                     l20122:
 11901                           
 11902                           ; BSR set to: 1
 11903                           ;ring_buffer_LUT.c: 386: else printf("        Current QI Switching Frequency measured as
      +                           %sHz\n\r", floatToEngineeringFormat(freq_meas_results.QI_Freq_Meas));
 11904  015410  0EB2               	movlw	low STR_281
 11905  015412  0103               	movlb	3	; () banked
 11906  015414  6FEB               	movwf	printf@f& (0+255),b
 11907  015416  0EEF               	movlw	high STR_281
 11908  015418  6FEC               	movwf	(printf@f+1)& (0+255),b
 11909  01541A  C168  F2A3         	movff	_freq_meas_results,floatToEngineeringFormat@input_value
 11910  01541E  C169  F2A4         	movff	_freq_meas_results+1,floatToEngineeringFormat@input_value+1
 11911  015422  C16A  F2A5         	movff	_freq_meas_results+2,floatToEngineeringFormat@input_value+2
 11912  015426  C16B  F2A6         	movff	_freq_meas_results+3,floatToEngineeringFormat@input_value+3
 11913  01542A  ECFB  F0A4         	call	_floatToEngineeringFormat	;wreg free
 11914  01542E  C2A3  F3ED         	movff	?_floatToEngineeringFormat,?_printf+2
 11915  015432  C2A4  F3EE         	movff	?_floatToEngineeringFormat+1,?_printf+3
 11916  015436  ECF7  F0DF         	call	_printf	;wreg free
 11917  01543A                     l2147:
 11918                           
 11919                           ;ring_buffer_LUT.c: 388: printf("\n\r");
 11920  01543A  0E2F               	movlw	low (STR_356+21)
 11921  01543C  0103               	movlb	3	; () banked
 11922  01543E  6FEB               	movwf	printf@f& (0+255),b
 11923  015440  0EF9               	movlw	high (STR_356+21)
 11924  015442  6FEC               	movwf	(printf@f+1)& (0+255),b
 11925  015444  ECF7  F0DF         	call	_printf	;wreg free
 11926                           
 11927                           ;ring_buffer_LUT.c: 390: terminalTextAttributes(CYAN, BLACK, BOLD);
 11928  015448  0E00               	movlw	0
 11929  01544A  0102               	movlb	2	; () banked
 11930  01544C  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11931  01544E  0E01               	movlw	1
 11932  015450  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11933  015452  0E06               	movlw	6
 11934  015454  EC49  F0B3         	call	_terminalTextAttributes
 11935                           
 11936                           ;ring_buffer_LUT.c: 391: printf("    System Temperatures:\n\r");
 11937  015458  0EE4               	movlw	low STR_283
 11938  01545A  0103               	movlb	3	; () banked
 11939  01545C  6FEB               	movwf	printf@f& (0+255),b
 11940  01545E  0EF8               	movlw	high STR_283
 11941  015460  6FEC               	movwf	(printf@f+1)& (0+255),b
 11942  015462  ECF7  F0DF         	call	_printf	;wreg free
 11943                           
 11944                           ;ring_buffer_LUT.c: 392: terminalTextAttributes(CYAN, BLACK, NORMAL);
 11945  015466  0E00               	movlw	0
 11946  015468  0102               	movlb	2	; () banked
 11947  01546A  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11948  01546C  0E00               	movlw	0
 11949  01546E  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11950  015470  0E06               	movlw	6
 11951  015472  EC49  F0B3         	call	_terminalTextAttributes
 11952                           
 11953                           ;ring_buffer_LUT.c: 393: printf("        QI Converter Temperature measured as %+.3f C\n\
      +                          r", LM73_temp_results.QI_temp_result);
 11954  015476  0E95               	movlw	low STR_284
 11955  015478  0103               	movlb	3	; () banked
 11956  01547A  6FEB               	movwf	printf@f& (0+255),b
 11957  01547C  0EF0               	movlw	high STR_284
 11958  01547E  6FEC               	movwf	(printf@f+1)& (0+255),b
 11959  015480  C2DB  F3ED         	movff	_LM73_temp_results,?_printf+2
 11960  015484  C2DC  F3EE         	movff	_LM73_temp_results+1,?_printf+3
 11961  015488  C2DD  F3EF         	movff	_LM73_temp_results+2,?_printf+4
 11962  01548C  C2DE  F3F0         	movff	_LM73_temp_results+3,?_printf+5
 11963  015490  ECF7  F0DF         	call	_printf	;wreg free
 11964                           
 11965                           ;ring_buffer_LUT.c: 394: printf("        +5V Converter Temperature measured as %+.3f C\n
      +                          \r", LM73_temp_results.POS5_temp_result);
 11966  015494  0E25               	movlw	low STR_285
 11967  015496  0103               	movlb	3	; () banked
 11968  015498  6FEB               	movwf	printf@f& (0+255),b
 11969  01549A  0EF0               	movlw	high STR_285
 11970  01549C  6FEC               	movwf	(printf@f+1)& (0+255),b
 11971  01549E  C2DF  F3ED         	movff	_LM73_temp_results+4,?_printf+2
 11972  0154A2  C2E0  F3EE         	movff	_LM73_temp_results+5,?_printf+3
 11973  0154A6  C2E1  F3EF         	movff	_LM73_temp_results+6,?_printf+4
 11974  0154AA  C2E2  F3F0         	movff	_LM73_temp_results+7,?_printf+5
 11975  0154AE  ECF7  F0DF         	call	_printf	;wreg free
 11976                           
 11977                           ;ring_buffer_LUT.c: 395: printf("        Ambient Temperature measured as %+.3f C\n\r", L
      +                          M73_temp_results.Ambient_temp_result);
 11978  0154B2  0E6E               	movlw	low STR_286
 11979  0154B4  0103               	movlb	3	; () banked
 11980  0154B6  6FEB               	movwf	printf@f& (0+255),b
 11981  0154B8  0EF2               	movlw	high STR_286
 11982  0154BA  6FEC               	movwf	(printf@f+1)& (0+255),b
 11983  0154BC  C2E3  F3ED         	movff	_LM73_temp_results+8,?_printf+2
 11984  0154C0  C2E4  F3EE         	movff	_LM73_temp_results+9,?_printf+3
 11985  0154C4  C2E5  F3EF         	movff	_LM73_temp_results+10,?_printf+4
 11986  0154C8  C2E6  F3F0         	movff	_LM73_temp_results+11,?_printf+5
 11987  0154CC  ECF7  F0DF         	call	_printf	;wreg free
 11988                           
 11989                           ;ring_buffer_LUT.c: 397: printf("\n\r");
 11990  0154D0  0E2F               	movlw	low (STR_356+21)
 11991  0154D2  0103               	movlb	3	; () banked
 11992  0154D4  6FEB               	movwf	printf@f& (0+255),b
 11993  0154D6  0EF9               	movlw	high (STR_356+21)
 11994  0154D8  6FEC               	movwf	(printf@f+1)& (0+255),b
 11995  0154DA  ECF7  F0DF         	call	_printf	;wreg free
 11996                           
 11997                           ;ring_buffer_LUT.c: 399: terminalTextAttributes(CYAN, BLACK, BOLD);
 11998  0154DE  0E00               	movlw	0
 11999  0154E0  0102               	movlb	2	; () banked
 12000  0154E2  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 12001  0154E4  0E01               	movlw	1
 12002  0154E6  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12003  0154E8  0E06               	movlw	6
 12004  0154EA  EC49  F0B3         	call	_terminalTextAttributes
 12005                           
 12006                           ;ring_buffer_LUT.c: 400: printf("    Microcontroller Parameters:\n\r");
 12007  0154EE  0E5B               	movlw	low STR_288
 12008  0154F0  0103               	movlb	3	; () banked
 12009  0154F2  6FEB               	movwf	printf@f& (0+255),b
 12010  0154F4  0EF7               	movlw	high STR_288
 12011  0154F6  6FEC               	movwf	(printf@f+1)& (0+255),b
 12012  0154F8  ECF7  F0DF         	call	_printf	;wreg free
 12013                           
 12014                           ;ring_buffer_LUT.c: 401: terminalTextAttributes(CYAN, BLACK, NORMAL);
 12015  0154FC  0E00               	movlw	0
 12016  0154FE  0102               	movlb	2	; () banked
 12017  015500  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 12018  015502  0E00               	movlw	0
 12019  015504  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12020  015506  0E06               	movlw	6
 12021  015508  EC49  F0B3         	call	_terminalTextAttributes
 12022                           
 12023                           ;ring_buffer_LUT.c: 402: printf("        Microcontroller Die Temperature measured as %+.
      +                          3f C\n\r", adc_results.die_temp_adc_result);
 12024  01550C  0E1C               	movlw	low STR_289
 12025  01550E  0103               	movlb	3	; () banked
 12026  015510  6FEB               	movwf	printf@f& (0+255),b
 12027  015512  0EED               	movlw	high STR_289
 12028  015514  6FEC               	movwf	(printf@f+1)& (0+255),b
 12029  015516  C0F7  F3ED         	movff	_adc_results+24,?_printf+2
 12030  01551A  C0F8  F3EE         	movff	_adc_results+25,?_printf+3
 12031  01551E  C0F9  F3EF         	movff	_adc_results+26,?_printf+4
 12032  015522  C0FA  F3F0         	movff	_adc_results+27,?_printf+5
 12033  015526  ECF7  F0DF         	call	_printf	;wreg free
 12034                           
 12035                           ;ring_buffer_LUT.c: 403: printf("        Fixed Voltage Reference Buffer 1 measured as %+
      +                          .3f Volts, calibrated for +4.096 Volts\n\r", adc_results.fvr_adc_result);
 12036  01552A  0EA6               	movlw	low STR_290
 12037  01552C  0103               	movlb	3	; () banked
 12038  01552E  6FEB               	movwf	printf@f& (0+255),b
 12039  015530  0EEB               	movlw	high STR_290
 12040  015532  6FEC               	movwf	(printf@f+1)& (0+255),b
 12041  015534  C0E3  F3ED         	movff	_adc_results+4,?_printf+2
 12042  015538  C0E4  F3EE         	movff	_adc_results+5,?_printf+3
 12043  01553C  C0E5  F3EF         	movff	_adc_results+6,?_printf+4
 12044  015540  C0E6  F3F0         	movff	_adc_results+7,?_printf+5
 12045  015544  ECF7  F0DF         	call	_printf	;wreg free
 12046                           
 12047                           ;ring_buffer_LUT.c: 404: printf("        AVSS measured as %+.3f Volts\n\r", adc_results.
      +                          avss_adc_result);
 12048  015548  0E3C               	movlw	low STR_291
 12049  01554A  0103               	movlb	3	; () banked
 12050  01554C  6FEB               	movwf	printf@f& (0+255),b
 12051  01554E  0EF5               	movlw	high STR_291
 12052  015550  6FEC               	movwf	(printf@f+1)& (0+255),b
 12053  015552  C0DF  F3ED         	movff	_adc_results,?_printf+2
 12054  015556  C0E0  F3EE         	movff	_adc_results+1,?_printf+3
 12055  01555A  C0E1  F3EF         	movff	_adc_results+2,?_printf+4
 12056  01555E  C0E2  F3F0         	movff	_adc_results+3,?_printf+5
 12057  015562  ECF7  F0DF         	call	_printf	;wreg free
 12058                           
 12059                           ;ring_buffer_LUT.c: 406: printf("\n\r");
 12060  015566  0E2F               	movlw	low (STR_356+21)
 12061  015568  0103               	movlb	3	; () banked
 12062  01556A  6FEB               	movwf	printf@f& (0+255),b
 12063  01556C  0EF9               	movlw	high (STR_356+21)
 12064  01556E  6FEC               	movwf	(printf@f+1)& (0+255),b
 12065  015570  ECF7  F0DF         	call	_printf	;wreg free
 12066                           
 12067                           ;ring_buffer_LUT.c: 408: terminalTextAttributesReset();
 12068  015574  ECAA  F0E4         	call	_terminalTextAttributesReset	;wreg free
 12069  015578  0012               	return		;funcret
 12070  01557A                     __end_of_printCurrentMeasurements:
 12071                           	opt callstack 0
 12072                           
 12073 ;; *************** function _terminalTextAttributesReset *****************
 12074 ;; Defined at:
 12075 ;;		line 164 in file "terminal_control.c"
 12076 ;; Parameters:    Size  Location     Type
 12077 ;;		None
 12078 ;; Auto vars:     Size  Location     Type
 12079 ;;		None
 12080 ;; Return value:  Size  Location     Type
 12081 ;;                  1    wreg      void 
 12082 ;; Registers used:
 12083 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12084 ;; Tracked objects:
 12085 ;;		On entry : 0/0
 12086 ;;		On exit  : 0/0
 12087 ;;		Unchanged: 0/0
 12088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12093 ;;Total ram usage:        0 bytes
 12094 ;; Hardware stack levels used:    1
 12095 ;; Hardware stack levels required when called:   15
 12096 ;; This function calls:
 12097 ;;		_printf
 12098 ;; This function is called by:
 12099 ;;		_main
 12100 ;;		_ringBufferLUT
 12101 ;;		_printErrorHandlerStatus
 12102 ;;		_printCurrentMeasurements
 12103 ;;		_terminalPrintTestMessage
 12104 ;; This function uses a non-reentrant model
 12105 ;;
 12106                           
 12107                           	psect	text6
 12108  01C954                     __ptext6:
 12109                           	opt callstack 0
 12110  01C954                     _terminalTextAttributesReset:
 12111                           	opt callstack 13
 12112                           
 12113                           ;terminal_control.c: 167: printf("\033[0;37;40m");
 12114                           
 12115                           ;incstack = 0
 12116  01C954  0EDA               	movlw	low STR_334
 12117  01C956  0103               	movlb	3	; () banked
 12118  01C958  6FEB               	movwf	printf@f& (0+255),b
 12119  01C95A  0EFD               	movlw	high STR_334
 12120  01C95C  6FEC               	movwf	(printf@f+1)& (0+255),b
 12121  01C95E  ECF7  F0DF         	call	_printf	;wreg free
 12122  01C962  0012               	return		;funcret
 12123  01C964                     __end_of_terminalTextAttributesReset:
 12124                           	opt callstack 0
 12125                           
 12126 ;; *************** function _terminalTextAttributes *****************
 12127 ;; Defined at:
 12128 ;;		line 47 in file "terminal_control.c"
 12129 ;; Parameters:    Size  Location     Type
 12130 ;;  foreground_c    1    wreg     enum E9584
 12131 ;;  background_c    1  185[BANK2 ] enum E9584
 12132 ;;  input_attrib    1  186[BANK2 ] enum E9576
 12133 ;; Auto vars:     Size  Location     Type
 12134 ;;  foreground_c    1    0[BANK5 ] enum E9584
 12135 ;;  print_string   16    1[BANK5 ] unsigned char [16]
 12136 ;;  i               1   17[BANK5 ] unsigned char 
 12137 ;; Return value:  Size  Location     Type
 12138 ;;                  1    wreg      void 
 12139 ;; Registers used:
 12140 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12141 ;; Tracked objects:
 12142 ;;		On entry : 0/0
 12143 ;;		On exit  : 0/0
 12144 ;;		Unchanged: 0/0
 12145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12146 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12147 ;;      Locals:         0       0       0       0       0       0      18       0       0       0       0       0       
      +0       0       0       0
 12148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12149 ;;      Totals:         0       0       0       2       0       0      18       0       0       0       0       0       
      +0       0       0       0
 12150 ;;Total ram usage:       20 bytes
 12151 ;; Hardware stack levels used:    1
 12152 ;; Hardware stack levels required when called:   15
 12153 ;; This function calls:
 12154 ;;		_printf
 12155 ;;		_strcat
 12156 ;;		_strncpy
 12157 ;; This function is called by:
 12158 ;;		_main
 12159 ;;		_ringBufferLUT
 12160 ;;		_printErrorHandlerStatus
 12161 ;;		_printCurrentMeasurements
 12162 ;;		_terminalPrintTestMessage
 12163 ;; This function uses a non-reentrant model
 12164 ;;
 12165                           
 12166                           	psect	text7
 12167  016692                     __ptext7:
 12168                           	opt callstack 0
 12169  016692                     _terminalTextAttributes:
 12170                           	opt callstack 13
 12171                           
 12172                           ;incstack = 0
 12173                           ;terminalTextAttributes@foreground_color stored from wreg
 12174  016692  0105               	movlb	5	; () banked
 12175  016694  6F00               	movwf	terminalTextAttributes@foreground_color& (0+255),b
 12176                           
 12177                           ;terminal_control.c: 51: char print_string[16];;terminal_control.c: 54: uint8_t i;;termi
      +                          nal_control.c: 55: for (i = 0; i < sizeof(print_string); i++) {
 12178  016696  0E00               	movlw	0
 12179  016698  0105               	movlb	5	; () banked
 12180  01669A  6F11               	movwf	terminalTextAttributes@i& (0+255),b
 12181  01669C                     l19194:
 12182                           
 12183                           ; BSR set to: 5
 12184                           ;terminal_control.c: 57: print_string[i] = '\0';
 12185  01669C  0E01               	movlw	low terminalTextAttributes@print_string
 12186  01669E  2511               	addwf	terminalTextAttributes@i& (0+255),w,b
 12187  0166A0  6ED9               	movwf	fsr2l,c
 12188  0166A2  6ADA               	clrf	fsr2h,c
 12189  0166A4  0E05               	movlw	high terminalTextAttributes@print_string
 12190  0166A6  22DA               	addwfc	fsr2h,f,c
 12191  0166A8  0E00               	movlw	0
 12192  0166AA  6EDF               	movwf	indf2,c
 12193                           
 12194                           ; BSR set to: 5
 12195  0166AC  2B11               	incf	terminalTextAttributes@i& (0+255),f,b
 12196                           
 12197                           ; BSR set to: 5
 12198  0166AE  0E0F               	movlw	15
 12199  0166B0  6511               	cpfsgt	terminalTextAttributes@i& (0+255),b
 12200  0166B2  D7F4               	goto	l19194
 12201                           
 12202                           ; BSR set to: 5
 12203                           ;terminal_control.c: 59: };terminal_control.c: 61: strncpy(print_string, "\033[", sizeof
      +                          (print_string));
 12204  0166B4  0E01               	movlw	low terminalTextAttributes@print_string
 12205  0166B6  0102               	movlb	2	; () banked
 12206  0166B8  6F00               	movwf	strncpy@to& (0+255),b
 12207  0166BA  0E05               	movlw	high terminalTextAttributes@print_string
 12208  0166BC  6F01               	movwf	(strncpy@to+1)& (0+255),b
 12209  0166BE  0EF7               	movlw	low STR_305
 12210  0166C0  6F02               	movwf	strncpy@from& (0+255),b
 12211  0166C2  0EFF               	movlw	high STR_305
 12212  0166C4  6F03               	movwf	(strncpy@from+1)& (0+255),b
 12213  0166C6  0E00               	movlw	0
 12214  0166C8  6F05               	movwf	(strncpy@size+1)& (0+255),b
 12215  0166CA  0E10               	movlw	16
 12216  0166CC  6F04               	movwf	strncpy@size& (0+255),b
 12217  0166CE  ECD3  F0DA         	call	_strncpy	;wreg free
 12218                           
 12219                           ;terminal_control.c: 63: switch (input_attribute) {
 12220  0166D2  D04D               	goto	l19218
 12221  0166D4                     l19202:
 12222                           
 12223                           ; BSR set to: 2
 12224                           ;terminal_control.c: 66: strcat(print_string,"0");
 12225  0166D4  0E01               	movlw	low terminalTextAttributes@print_string
 12226  0166D6  6F00               	movwf	strcat@to& (0+255),b
 12227  0166D8  0E05               	movlw	high terminalTextAttributes@print_string
 12228  0166DA  6F01               	movwf	(strcat@to+1)& (0+255),b
 12229  0166DC  0ECB               	movlw	low (STR_314+1)
 12230  0166DE  6F02               	movwf	strcat@from& (0+255),b
 12231  0166E0  0EFF               	movlw	high (STR_314+1)
 12232  0166E2  6F03               	movwf	(strcat@from+1)& (0+255),b
 12233  0166E4  ECCF  F0DB         	call	_strcat	;wreg free
 12234                           
 12235                           ;terminal_control.c: 67: break;
 12236  0166E8  D057               	goto	l19220
 12237  0166EA                     l19204:
 12238                           
 12239                           ; BSR set to: 2
 12240                           ;terminal_control.c: 69: strcat(print_string,"1");
 12241  0166EA  0E01               	movlw	low terminalTextAttributes@print_string
 12242  0166EC  6F00               	movwf	strcat@to& (0+255),b
 12243  0166EE  0E05               	movlw	high terminalTextAttributes@print_string
 12244  0166F0  6F01               	movwf	(strcat@to+1)& (0+255),b
 12245  0166F2  0ECE               	movlw	low (STR_315+1)
 12246  0166F4  6F02               	movwf	strcat@from& (0+255),b
 12247  0166F6  0EFF               	movlw	high (STR_315+1)
 12248  0166F8  6F03               	movwf	(strcat@from+1)& (0+255),b
 12249  0166FA  ECCF  F0DB         	call	_strcat	;wreg free
 12250                           
 12251                           ;terminal_control.c: 70: break;
 12252  0166FE  D04C               	goto	l19220
 12253  016700                     l19206:
 12254                           
 12255                           ; BSR set to: 2
 12256                           ;terminal_control.c: 72: strcat(print_string,"4");
 12257  016700  0E01               	movlw	low terminalTextAttributes@print_string
 12258  016702  6F00               	movwf	strcat@to& (0+255),b
 12259  016704  0E05               	movlw	high terminalTextAttributes@print_string
 12260  016706  6F01               	movwf	(strcat@to+1)& (0+255),b
 12261  016708  0EE0               	movlw	low (STR_318+1)
 12262  01670A  6F02               	movwf	strcat@from& (0+255),b
 12263  01670C  0EFF               	movlw	high (STR_318+1)
 12264  01670E  6F03               	movwf	(strcat@from+1)& (0+255),b
 12265  016710  ECCF  F0DB         	call	_strcat	;wreg free
 12266                           
 12267                           ;terminal_control.c: 73: break;
 12268  016714  D041               	goto	l19220
 12269  016716                     l19208:
 12270                           
 12271                           ; BSR set to: 2
 12272                           ;terminal_control.c: 75: strcat(print_string,"5");
 12273  016716  0E01               	movlw	low terminalTextAttributes@print_string
 12274  016718  6F00               	movwf	strcat@to& (0+255),b
 12275  01671A  0E05               	movlw	high terminalTextAttributes@print_string
 12276  01671C  6F01               	movwf	(strcat@to+1)& (0+255),b
 12277  01671E  0EE6               	movlw	low (STR_319+1)
 12278  016720  6F02               	movwf	strcat@from& (0+255),b
 12279  016722  0EFF               	movlw	high (STR_319+1)
 12280  016724  6F03               	movwf	(strcat@from+1)& (0+255),b
 12281  016726  ECCF  F0DB         	call	_strcat	;wreg free
 12282                           
 12283                           ;terminal_control.c: 76: break;
 12284  01672A  D036               	goto	l19220
 12285  01672C                     l19210:
 12286                           
 12287                           ; BSR set to: 2
 12288                           ;terminal_control.c: 78: strcat(print_string,"7");
 12289  01672C  0E01               	movlw	low terminalTextAttributes@print_string
 12290  01672E  6F00               	movwf	strcat@to& (0+255),b
 12291  016730  0E05               	movlw	high terminalTextAttributes@print_string
 12292  016732  6F01               	movwf	(strcat@to+1)& (0+255),b
 12293  016734  0EF2               	movlw	low (STR_321+1)
 12294  016736  6F02               	movwf	strcat@from& (0+255),b
 12295  016738  0EFF               	movlw	high (STR_321+1)
 12296  01673A  6F03               	movwf	(strcat@from+1)& (0+255),b
 12297  01673C  ECCF  F0DB         	call	_strcat	;wreg free
 12298                           
 12299                           ;terminal_control.c: 79: break;
 12300  016740  D02B               	goto	l19220
 12301  016742                     l19212:
 12302                           
 12303                           ; BSR set to: 2
 12304                           ;terminal_control.c: 81: strcat(print_string,"8");
 12305  016742  0E01               	movlw	low terminalTextAttributes@print_string
 12306  016744  6F00               	movwf	strcat@to& (0+255),b
 12307  016746  0E05               	movlw	high terminalTextAttributes@print_string
 12308  016748  6F01               	movwf	(strcat@to+1)& (0+255),b
 12309  01674A  0EFA               	movlw	low STR_311
 12310  01674C  6F02               	movwf	strcat@from& (0+255),b
 12311  01674E  0EFF               	movlw	high STR_311
 12312  016750  6F03               	movwf	(strcat@from+1)& (0+255),b
 12313  016752  ECCF  F0DB         	call	_strcat	;wreg free
 12314                           
 12315                           ;terminal_control.c: 82: break;
 12316  016756  D020               	goto	l19220
 12317  016758                     l19214:
 12318                           
 12319                           ; BSR set to: 2
 12320                           ;terminal_control.c: 85: strcat(print_string,"0");
 12321  016758  0E01               	movlw	low terminalTextAttributes@print_string
 12322  01675A  6F00               	movwf	strcat@to& (0+255),b
 12323  01675C  0E05               	movlw	high terminalTextAttributes@print_string
 12324  01675E  6F01               	movwf	(strcat@to+1)& (0+255),b
 12325  016760  0ECB               	movlw	low (STR_314+1)
 12326  016762  6F02               	movwf	strcat@from& (0+255),b
 12327  016764  0EFF               	movlw	high (STR_314+1)
 12328  016766  6F03               	movwf	(strcat@from+1)& (0+255),b
 12329  016768  ECCF  F0DB         	call	_strcat	;wreg free
 12330                           
 12331                           ;terminal_control.c: 86: break;
 12332  01676C  D015               	goto	l19220
 12333  01676E                     l19218:
 12334  01676E  0102               	movlb	2	; () banked
 12335  016770  51BA               	movf	terminalTextAttributes@input_attribute& (0+255),w,b
 12336                           
 12337                           ; Switch size 1, requested type "simple"
 12338                           ; Number of cases is 6, Range of values is 0 to 5
 12339                           ; switch strategies available:
 12340                           ; Name         Instructions Cycles
 12341                           ; simple_byte           19    10 (average)
 12342                           ;	Chosen strategy is simple_byte
 12343  016772  0A00               	xorlw	0	; case 0
 12344  016774  B4D8               	btfsc	status,2,c
 12345  016776  D7AE               	goto	l19202
 12346  016778  0A01               	xorlw	1	; case 1
 12347  01677A  B4D8               	btfsc	status,2,c
 12348  01677C  D7B6               	goto	l19204
 12349  01677E  0A03               	xorlw	3	; case 2
 12350  016780  B4D8               	btfsc	status,2,c
 12351  016782  D7BE               	goto	l19206
 12352  016784  0A01               	xorlw	1	; case 3
 12353  016786  B4D8               	btfsc	status,2,c
 12354  016788  D7C6               	goto	l19208
 12355  01678A  0A07               	xorlw	7	; case 4
 12356  01678C  B4D8               	btfsc	status,2,c
 12357  01678E  D7CE               	goto	l19210
 12358  016790  0A01               	xorlw	1	; case 5
 12359  016792  B4D8               	btfsc	status,2,c
 12360  016794  D7D6               	goto	l19212
 12361  016796  D7E0               	goto	l19214
 12362  016798                     l19220:
 12363                           
 12364                           ;terminal_control.c: 89: strcat(print_string,";");
 12365  016798  0E01               	movlw	low terminalTextAttributes@print_string
 12366  01679A  0102               	movlb	2	; () banked
 12367  01679C  6F00               	movwf	strcat@to& (0+255),b
 12368  01679E  0E05               	movlw	high terminalTextAttributes@print_string
 12369  0167A0  6F01               	movwf	(strcat@to+1)& (0+255),b
 12370  0167A2  0EFC               	movlw	low STR_313
 12371  0167A4  6F02               	movwf	strcat@from& (0+255),b
 12372  0167A6  0EFF               	movlw	high STR_313
 12373  0167A8  6F03               	movwf	(strcat@from+1)& (0+255),b
 12374  0167AA  ECCF  F0DB         	call	_strcat	;wreg free
 12375                           
 12376                           ;terminal_control.c: 91: switch (foreground_color) {
 12377  0167AE  D06C               	goto	l19242
 12378  0167B0                     l19222:
 12379                           
 12380                           ; BSR set to: 5
 12381                           ;terminal_control.c: 94: strcat(print_string,"30");
 12382  0167B0  0E01               	movlw	low terminalTextAttributes@print_string
 12383  0167B2  0102               	movlb	2	; () banked
 12384  0167B4  6F00               	movwf	strcat@to& (0+255),b
 12385  0167B6  0E05               	movlw	high terminalTextAttributes@print_string
 12386  0167B8  6F01               	movwf	(strcat@to+1)& (0+255),b
 12387  0167BA  0ECA               	movlw	low STR_314
 12388  0167BC  6F02               	movwf	strcat@from& (0+255),b
 12389  0167BE  0EFF               	movlw	high STR_314
 12390  0167C0  6F03               	movwf	(strcat@from+1)& (0+255),b
 12391  0167C2  ECCF  F0DB         	call	_strcat	;wreg free
 12392                           
 12393                           ;terminal_control.c: 95: break;
 12394  0167C6  D07B               	goto	l19244
 12395  0167C8                     l19224:
 12396                           
 12397                           ; BSR set to: 5
 12398                           ;terminal_control.c: 97: strcat(print_string,"31");
 12399  0167C8  0E01               	movlw	low terminalTextAttributes@print_string
 12400  0167CA  0102               	movlb	2	; () banked
 12401  0167CC  6F00               	movwf	strcat@to& (0+255),b
 12402  0167CE  0E05               	movlw	high terminalTextAttributes@print_string
 12403  0167D0  6F01               	movwf	(strcat@to+1)& (0+255),b
 12404  0167D2  0ECD               	movlw	low STR_315
 12405  0167D4  6F02               	movwf	strcat@from& (0+255),b
 12406  0167D6  0EFF               	movlw	high STR_315
 12407  0167D8  6F03               	movwf	(strcat@from+1)& (0+255),b
 12408  0167DA  ECCF  F0DB         	call	_strcat	;wreg free
 12409                           
 12410                           ;terminal_control.c: 98: break;
 12411  0167DE  D06F               	goto	l19244
 12412  0167E0                     l19226:
 12413                           
 12414                           ; BSR set to: 5
 12415                           ;terminal_control.c: 100: strcat(print_string,"32");
 12416  0167E0  0E01               	movlw	low terminalTextAttributes@print_string
 12417  0167E2  0102               	movlb	2	; () banked
 12418  0167E4  6F00               	movwf	strcat@to& (0+255),b
 12419  0167E6  0E05               	movlw	high terminalTextAttributes@print_string
 12420  0167E8  6F01               	movwf	(strcat@to+1)& (0+255),b
 12421  0167EA  0ED3               	movlw	low STR_316
 12422  0167EC  6F02               	movwf	strcat@from& (0+255),b
 12423  0167EE  0EFF               	movlw	high STR_316
 12424  0167F0  6F03               	movwf	(strcat@from+1)& (0+255),b
 12425  0167F2  ECCF  F0DB         	call	_strcat	;wreg free
 12426                           
 12427                           ;terminal_control.c: 101: break;
 12428  0167F6  D063               	goto	l19244
 12429  0167F8                     l19228:
 12430                           
 12431                           ; BSR set to: 5
 12432                           ;terminal_control.c: 103: strcat(print_string,"33");
 12433  0167F8  0E01               	movlw	low terminalTextAttributes@print_string
 12434  0167FA  0102               	movlb	2	; () banked
 12435  0167FC  6F00               	movwf	strcat@to& (0+255),b
 12436  0167FE  0E05               	movlw	high terminalTextAttributes@print_string
 12437  016800  6F01               	movwf	(strcat@to+1)& (0+255),b
 12438  016802  0ED9               	movlw	low STR_317
 12439  016804  6F02               	movwf	strcat@from& (0+255),b
 12440  016806  0EFF               	movlw	high STR_317
 12441  016808  6F03               	movwf	(strcat@from+1)& (0+255),b
 12442  01680A  ECCF  F0DB         	call	_strcat	;wreg free
 12443                           
 12444                           ;terminal_control.c: 104: break;
 12445  01680E  D057               	goto	l19244
 12446  016810                     l19230:
 12447                           
 12448                           ; BSR set to: 5
 12449                           ;terminal_control.c: 106: strcat(print_string,"34");
 12450  016810  0E01               	movlw	low terminalTextAttributes@print_string
 12451  016812  0102               	movlb	2	; () banked
 12452  016814  6F00               	movwf	strcat@to& (0+255),b
 12453  016816  0E05               	movlw	high terminalTextAttributes@print_string
 12454  016818  6F01               	movwf	(strcat@to+1)& (0+255),b
 12455  01681A  0EDF               	movlw	low STR_318
 12456  01681C  6F02               	movwf	strcat@from& (0+255),b
 12457  01681E  0EFF               	movlw	high STR_318
 12458  016820  6F03               	movwf	(strcat@from+1)& (0+255),b
 12459  016822  ECCF  F0DB         	call	_strcat	;wreg free
 12460                           
 12461                           ;terminal_control.c: 107: break;
 12462  016826  D04B               	goto	l19244
 12463  016828                     l19232:
 12464                           
 12465                           ; BSR set to: 5
 12466                           ;terminal_control.c: 109: strcat(print_string,"35");
 12467  016828  0E01               	movlw	low terminalTextAttributes@print_string
 12468  01682A  0102               	movlb	2	; () banked
 12469  01682C  6F00               	movwf	strcat@to& (0+255),b
 12470  01682E  0E05               	movlw	high terminalTextAttributes@print_string
 12471  016830  6F01               	movwf	(strcat@to+1)& (0+255),b
 12472  016832  0EE5               	movlw	low STR_319
 12473  016834  6F02               	movwf	strcat@from& (0+255),b
 12474  016836  0EFF               	movlw	high STR_319
 12475  016838  6F03               	movwf	(strcat@from+1)& (0+255),b
 12476  01683A  ECCF  F0DB         	call	_strcat	;wreg free
 12477                           
 12478                           ;terminal_control.c: 110: break;
 12479  01683E  D03F               	goto	l19244
 12480  016840                     l19234:
 12481                           
 12482                           ; BSR set to: 5
 12483                           ;terminal_control.c: 112: strcat(print_string,"36");
 12484  016840  0E01               	movlw	low terminalTextAttributes@print_string
 12485  016842  0102               	movlb	2	; () banked
 12486  016844  6F00               	movwf	strcat@to& (0+255),b
 12487  016846  0E05               	movlw	high terminalTextAttributes@print_string
 12488  016848  6F01               	movwf	(strcat@to+1)& (0+255),b
 12489  01684A  0EEB               	movlw	low STR_320
 12490  01684C  6F02               	movwf	strcat@from& (0+255),b
 12491  01684E  0EFF               	movlw	high STR_320
 12492  016850  6F03               	movwf	(strcat@from+1)& (0+255),b
 12493  016852  ECCF  F0DB         	call	_strcat	;wreg free
 12494                           
 12495                           ;terminal_control.c: 113: break;
 12496  016856  D033               	goto	l19244
 12497  016858                     l19236:
 12498                           
 12499                           ; BSR set to: 5
 12500                           ;terminal_control.c: 115: strcat(print_string,"37");
 12501  016858  0E01               	movlw	low terminalTextAttributes@print_string
 12502  01685A  0102               	movlb	2	; () banked
 12503  01685C  6F00               	movwf	strcat@to& (0+255),b
 12504  01685E  0E05               	movlw	high terminalTextAttributes@print_string
 12505  016860  6F01               	movwf	(strcat@to+1)& (0+255),b
 12506  016862  0EF1               	movlw	low STR_321
 12507  016864  6F02               	movwf	strcat@from& (0+255),b
 12508  016866  0EFF               	movlw	high STR_321
 12509  016868  6F03               	movwf	(strcat@from+1)& (0+255),b
 12510  01686A  ECCF  F0DB         	call	_strcat	;wreg free
 12511                           
 12512                           ;terminal_control.c: 116: break;
 12513  01686E  D027               	goto	l19244
 12514  016870                     l19238:
 12515                           
 12516                           ; BSR set to: 5
 12517                           ;terminal_control.c: 119: strcat(print_string,"37");
 12518  016870  0E01               	movlw	low terminalTextAttributes@print_string
 12519  016872  0102               	movlb	2	; () banked
 12520  016874  6F00               	movwf	strcat@to& (0+255),b
 12521  016876  0E05               	movlw	high terminalTextAttributes@print_string
 12522  016878  6F01               	movwf	(strcat@to+1)& (0+255),b
 12523  01687A  0EF1               	movlw	low STR_321
 12524  01687C  6F02               	movwf	strcat@from& (0+255),b
 12525  01687E  0EFF               	movlw	high STR_321
 12526  016880  6F03               	movwf	(strcat@from+1)& (0+255),b
 12527  016882  ECCF  F0DB         	call	_strcat	;wreg free
 12528                           
 12529                           ;terminal_control.c: 120: break;
 12530  016886  D01B               	goto	l19244
 12531  016888                     l19242:
 12532  016888  0105               	movlb	5	; () banked
 12533  01688A  5100               	movf	terminalTextAttributes@foreground_color& (0+255),w,b
 12534                           
 12535                           ; Switch size 1, requested type "simple"
 12536                           ; Number of cases is 8, Range of values is 0 to 7
 12537                           ; switch strategies available:
 12538                           ; Name         Instructions Cycles
 12539                           ; simple_byte           25    13 (average)
 12540                           ;	Chosen strategy is simple_byte
 12541  01688C  0A00               	xorlw	0	; case 0
 12542  01688E  B4D8               	btfsc	status,2,c
 12543  016890  D78F               	goto	l19222
 12544  016892  0A01               	xorlw	1	; case 1
 12545  016894  B4D8               	btfsc	status,2,c
 12546  016896  D798               	goto	l19224
 12547  016898  0A03               	xorlw	3	; case 2
 12548  01689A  B4D8               	btfsc	status,2,c
 12549  01689C  D7A1               	goto	l19226
 12550  01689E  0A01               	xorlw	1	; case 3
 12551  0168A0  B4D8               	btfsc	status,2,c
 12552  0168A2  D7AA               	goto	l19228
 12553  0168A4  0A07               	xorlw	7	; case 4
 12554  0168A6  B4D8               	btfsc	status,2,c
 12555  0168A8  D7B3               	goto	l19230
 12556  0168AA  0A01               	xorlw	1	; case 5
 12557  0168AC  B4D8               	btfsc	status,2,c
 12558  0168AE  D7BC               	goto	l19232
 12559  0168B0  0A03               	xorlw	3	; case 6
 12560  0168B2  B4D8               	btfsc	status,2,c
 12561  0168B4  D7C5               	goto	l19234
 12562  0168B6  0A01               	xorlw	1	; case 7
 12563  0168B8  B4D8               	btfsc	status,2,c
 12564  0168BA  D7CE               	goto	l19236
 12565  0168BC  D7D9               	goto	l19238
 12566  0168BE                     l19244:
 12567                           
 12568                           ;terminal_control.c: 123: strcat(print_string,";");
 12569  0168BE  0E01               	movlw	low terminalTextAttributes@print_string
 12570  0168C0  0102               	movlb	2	; () banked
 12571  0168C2  6F00               	movwf	strcat@to& (0+255),b
 12572  0168C4  0E05               	movlw	high terminalTextAttributes@print_string
 12573  0168C6  6F01               	movwf	(strcat@to+1)& (0+255),b
 12574  0168C8  0EFC               	movlw	low STR_313
 12575  0168CA  6F02               	movwf	strcat@from& (0+255),b
 12576  0168CC  0EFF               	movlw	high STR_313
 12577  0168CE  6F03               	movwf	(strcat@from+1)& (0+255),b
 12578  0168D0  ECCF  F0DB         	call	_strcat	;wreg free
 12579                           
 12580                           ;terminal_control.c: 125: switch (background_color) {
 12581  0168D4  D063               	goto	l19266
 12582  0168D6                     l19246:
 12583                           
 12584                           ; BSR set to: 2
 12585                           ;terminal_control.c: 128: strcat(print_string,"40");
 12586  0168D6  0E01               	movlw	low terminalTextAttributes@print_string
 12587  0168D8  6F00               	movwf	strcat@to& (0+255),b
 12588  0168DA  0E05               	movlw	high terminalTextAttributes@print_string
 12589  0168DC  6F01               	movwf	(strcat@to+1)& (0+255),b
 12590  0168DE  0EB4               	movlw	low (STR_43+9)
 12591  0168E0  6F02               	movwf	strcat@from& (0+255),b
 12592  0168E2  0EFD               	movlw	high (STR_43+9)
 12593  0168E4  6F03               	movwf	(strcat@from+1)& (0+255),b
 12594  0168E6  ECCF  F0DB         	call	_strcat	;wreg free
 12595                           
 12596                           ;terminal_control.c: 129: break;
 12597  0168EA  D073               	goto	l19268
 12598  0168EC                     l19248:
 12599                           
 12600                           ; BSR set to: 2
 12601                           ;terminal_control.c: 131: strcat(print_string,"41");
 12602  0168EC  0E01               	movlw	low terminalTextAttributes@print_string
 12603  0168EE  6F00               	movwf	strcat@to& (0+255),b
 12604  0168F0  0E05               	movlw	high terminalTextAttributes@print_string
 12605  0168F2  6F01               	movwf	(strcat@to+1)& (0+255),b
 12606  0168F4  0ED0               	movlw	low STR_325
 12607  0168F6  6F02               	movwf	strcat@from& (0+255),b
 12608  0168F8  0EFF               	movlw	high STR_325
 12609  0168FA  6F03               	movwf	(strcat@from+1)& (0+255),b
 12610  0168FC  ECCF  F0DB         	call	_strcat	;wreg free
 12611                           
 12612                           ;terminal_control.c: 132: break;
 12613  016900  D068               	goto	l19268
 12614  016902                     l19250:
 12615                           
 12616                           ; BSR set to: 2
 12617                           ;terminal_control.c: 134: strcat(print_string,"42");
 12618  016902  0E01               	movlw	low terminalTextAttributes@print_string
 12619  016904  6F00               	movwf	strcat@to& (0+255),b
 12620  016906  0E05               	movlw	high terminalTextAttributes@print_string
 12621  016908  6F01               	movwf	(strcat@to+1)& (0+255),b
 12622  01690A  0ED6               	movlw	low STR_326
 12623  01690C  6F02               	movwf	strcat@from& (0+255),b
 12624  01690E  0EFF               	movlw	high STR_326
 12625  016910  6F03               	movwf	(strcat@from+1)& (0+255),b
 12626  016912  ECCF  F0DB         	call	_strcat	;wreg free
 12627                           
 12628                           ;terminal_control.c: 135: break;
 12629  016916  D05D               	goto	l19268
 12630  016918                     l19252:
 12631                           
 12632                           ; BSR set to: 2
 12633                           ;terminal_control.c: 137: strcat(print_string,"43");
 12634  016918  0E01               	movlw	low terminalTextAttributes@print_string
 12635  01691A  6F00               	movwf	strcat@to& (0+255),b
 12636  01691C  0E05               	movlw	high terminalTextAttributes@print_string
 12637  01691E  6F01               	movwf	(strcat@to+1)& (0+255),b
 12638  016920  0EDC               	movlw	low STR_327
 12639  016922  6F02               	movwf	strcat@from& (0+255),b
 12640  016924  0EFF               	movlw	high STR_327
 12641  016926  6F03               	movwf	(strcat@from+1)& (0+255),b
 12642  016928  ECCF  F0DB         	call	_strcat	;wreg free
 12643                           
 12644                           ;terminal_control.c: 138: break;
 12645  01692C  D052               	goto	l19268
 12646  01692E                     l19254:
 12647                           
 12648                           ; BSR set to: 2
 12649                           ;terminal_control.c: 140: strcat(print_string,"44");
 12650  01692E  0E01               	movlw	low terminalTextAttributes@print_string
 12651  016930  6F00               	movwf	strcat@to& (0+255),b
 12652  016932  0E05               	movlw	high terminalTextAttributes@print_string
 12653  016934  6F01               	movwf	(strcat@to+1)& (0+255),b
 12654  016936  0EE2               	movlw	low STR_328
 12655  016938  6F02               	movwf	strcat@from& (0+255),b
 12656  01693A  0EFF               	movlw	high STR_328
 12657  01693C  6F03               	movwf	(strcat@from+1)& (0+255),b
 12658  01693E  ECCF  F0DB         	call	_strcat	;wreg free
 12659                           
 12660                           ;terminal_control.c: 141: break;
 12661  016942  D047               	goto	l19268
 12662  016944                     l19256:
 12663                           
 12664                           ; BSR set to: 2
 12665                           ;terminal_control.c: 143: strcat(print_string,"45");
 12666  016944  0E01               	movlw	low terminalTextAttributes@print_string
 12667  016946  6F00               	movwf	strcat@to& (0+255),b
 12668  016948  0E05               	movlw	high terminalTextAttributes@print_string
 12669  01694A  6F01               	movwf	(strcat@to+1)& (0+255),b
 12670  01694C  0EE8               	movlw	low STR_329
 12671  01694E  6F02               	movwf	strcat@from& (0+255),b
 12672  016950  0EFF               	movlw	high STR_329
 12673  016952  6F03               	movwf	(strcat@from+1)& (0+255),b
 12674  016954  ECCF  F0DB         	call	_strcat	;wreg free
 12675                           
 12676                           ;terminal_control.c: 144: break;
 12677  016958  D03C               	goto	l19268
 12678  01695A                     l19258:
 12679                           
 12680                           ; BSR set to: 2
 12681                           ;terminal_control.c: 146: strcat(print_string,"46");
 12682  01695A  0E01               	movlw	low terminalTextAttributes@print_string
 12683  01695C  6F00               	movwf	strcat@to& (0+255),b
 12684  01695E  0E05               	movlw	high terminalTextAttributes@print_string
 12685  016960  6F01               	movwf	(strcat@to+1)& (0+255),b
 12686  016962  0EEE               	movlw	low STR_330
 12687  016964  6F02               	movwf	strcat@from& (0+255),b
 12688  016966  0EFF               	movlw	high STR_330
 12689  016968  6F03               	movwf	(strcat@from+1)& (0+255),b
 12690  01696A  ECCF  F0DB         	call	_strcat	;wreg free
 12691                           
 12692                           ;terminal_control.c: 147: break;
 12693  01696E  D031               	goto	l19268
 12694  016970                     l19260:
 12695                           
 12696                           ; BSR set to: 2
 12697                           ;terminal_control.c: 149: strcat(print_string,"47");
 12698  016970  0E01               	movlw	low terminalTextAttributes@print_string
 12699  016972  6F00               	movwf	strcat@to& (0+255),b
 12700  016974  0E05               	movlw	high terminalTextAttributes@print_string
 12701  016976  6F01               	movwf	(strcat@to+1)& (0+255),b
 12702  016978  0EF4               	movlw	low STR_331
 12703  01697A  6F02               	movwf	strcat@from& (0+255),b
 12704  01697C  0EFF               	movlw	high STR_331
 12705  01697E  6F03               	movwf	(strcat@from+1)& (0+255),b
 12706  016980  ECCF  F0DB         	call	_strcat	;wreg free
 12707                           
 12708                           ;terminal_control.c: 150: break;
 12709  016984  D026               	goto	l19268
 12710  016986                     l19262:
 12711                           
 12712                           ; BSR set to: 2
 12713                           ;terminal_control.c: 153: strcat(print_string,"40");
 12714  016986  0E01               	movlw	low terminalTextAttributes@print_string
 12715  016988  6F00               	movwf	strcat@to& (0+255),b
 12716  01698A  0E05               	movlw	high terminalTextAttributes@print_string
 12717  01698C  6F01               	movwf	(strcat@to+1)& (0+255),b
 12718  01698E  0EB4               	movlw	low (STR_43+9)
 12719  016990  6F02               	movwf	strcat@from& (0+255),b
 12720  016992  0EFD               	movlw	high (STR_43+9)
 12721  016994  6F03               	movwf	(strcat@from+1)& (0+255),b
 12722  016996  ECCF  F0DB         	call	_strcat	;wreg free
 12723                           
 12724                           ;terminal_control.c: 154: break;
 12725  01699A  D01B               	goto	l19268
 12726  01699C                     l19266:
 12727  01699C  0102               	movlb	2	; () banked
 12728  01699E  51B9               	movf	terminalTextAttributes@background_color& (0+255),w,b
 12729                           
 12730                           ; Switch size 1, requested type "simple"
 12731                           ; Number of cases is 8, Range of values is 0 to 7
 12732                           ; switch strategies available:
 12733                           ; Name         Instructions Cycles
 12734                           ; simple_byte           25    13 (average)
 12735                           ;	Chosen strategy is simple_byte
 12736  0169A0  0A00               	xorlw	0	; case 0
 12737  0169A2  B4D8               	btfsc	status,2,c
 12738  0169A4  D798               	goto	l19246
 12739  0169A6  0A01               	xorlw	1	; case 1
 12740  0169A8  B4D8               	btfsc	status,2,c
 12741  0169AA  D7A0               	goto	l19248
 12742  0169AC  0A03               	xorlw	3	; case 2
 12743  0169AE  B4D8               	btfsc	status,2,c
 12744  0169B0  D7A8               	goto	l19250
 12745  0169B2  0A01               	xorlw	1	; case 3
 12746  0169B4  B4D8               	btfsc	status,2,c
 12747  0169B6  D7B0               	goto	l19252
 12748  0169B8  0A07               	xorlw	7	; case 4
 12749  0169BA  B4D8               	btfsc	status,2,c
 12750  0169BC  D7B8               	goto	l19254
 12751  0169BE  0A01               	xorlw	1	; case 5
 12752  0169C0  B4D8               	btfsc	status,2,c
 12753  0169C2  D7C0               	goto	l19256
 12754  0169C4  0A03               	xorlw	3	; case 6
 12755  0169C6  B4D8               	btfsc	status,2,c
 12756  0169C8  D7C8               	goto	l19258
 12757  0169CA  0A01               	xorlw	1	; case 7
 12758  0169CC  B4D8               	btfsc	status,2,c
 12759  0169CE  D7D0               	goto	l19260
 12760  0169D0  D7DA               	goto	l19262
 12761  0169D2                     l19268:
 12762                           
 12763                           ;terminal_control.c: 157: strcat(print_string,"m");
 12764  0169D2  0E01               	movlw	low terminalTextAttributes@print_string
 12765  0169D4  0102               	movlb	2	; () banked
 12766  0169D6  6F00               	movwf	strcat@to& (0+255),b
 12767  0169D8  0E05               	movlw	high terminalTextAttributes@print_string
 12768  0169DA  6F01               	movwf	(strcat@to+1)& (0+255),b
 12769  0169DC  0EE6               	movlw	low (STR_296+7)
 12770  0169DE  6F02               	movwf	strcat@from& (0+255),b
 12771  0169E0  0EFE               	movlw	high (STR_296+7)
 12772  0169E2  6F03               	movwf	(strcat@from+1)& (0+255),b
 12773  0169E4  ECCF  F0DB         	call	_strcat	;wreg free
 12774                           
 12775                           ;terminal_control.c: 159: printf(print_string);
 12776  0169E8  0E01               	movlw	low terminalTextAttributes@print_string
 12777  0169EA  0103               	movlb	3	; () banked
 12778  0169EC  6FEB               	movwf	printf@f& (0+255),b
 12779  0169EE  0E05               	movlw	high terminalTextAttributes@print_string
 12780  0169F0  6FEC               	movwf	(printf@f+1)& (0+255),b
 12781  0169F2  ECF7  F0DF         	call	_printf	;wreg free
 12782  0169F6  0012               	return		;funcret
 12783  0169F8                     __end_of_terminalTextAttributes:
 12784                           	opt callstack 0
 12785                           
 12786 ;; *************** function _strncpy *****************
 12787 ;; Defined at:
 12788 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strncpy.c"
 12789 ;; Parameters:    Size  Location     Type
 12790 ;;  to              2    0[BANK2 ] PTR unsigned char 
 12791 ;;		 -> terminalTextAttributes@print_string(16), 
 12792 ;;  from            2    2[BANK2 ] PTR const unsigned char 
 12793 ;;		 -> STR_305(3), 
 12794 ;;  size            2    4[BANK2 ] unsigned int 
 12795 ;; Auto vars:     Size  Location     Type
 12796 ;;  cp              2    6[BANK2 ] PTR unsigned char 
 12797 ;;		 -> terminalTextAttributes@print_string(16), 
 12798 ;; Return value:  Size  Location     Type
 12799 ;;                  2    0[BANK2 ] PTR unsigned char 
 12800 ;; Registers used:
 12801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12802 ;; Tracked objects:
 12803 ;;		On entry : 0/0
 12804 ;;		On exit  : 0/0
 12805 ;;		Unchanged: 0/0
 12806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12807 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12808 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12810 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12811 ;;Total ram usage:        8 bytes
 12812 ;; Hardware stack levels used:    1
 12813 ;; Hardware stack levels required when called:   11
 12814 ;; This function calls:
 12815 ;;		Nothing
 12816 ;; This function is called by:
 12817 ;;		_terminalTextAttributes
 12818 ;; This function uses a non-reentrant model
 12819 ;;
 12820                           
 12821                           	psect	text8
 12822  01B5A6                     __ptext8:
 12823                           	opt callstack 0
 12824  01B5A6                     _strncpy:
 12825                           	opt callstack 16
 12826                           
 12827                           ;incstack = 0
 12828  01B5A6  C200  F206         	movff	strncpy@to,strncpy@cp
 12829  01B5AA  C201  F207         	movff	strncpy@to+1,strncpy@cp+1
 12830  01B5AE  D017               	goto	l18570
 12831  01B5B0                     l18564:
 12832                           
 12833                           ; BSR set to: 2
 12834  01B5B0  0704               	decf	strncpy@size& (0+255),f,b
 12835  01B5B2  A0D8               	btfss	status,0,c
 12836  01B5B4  0705               	decf	(strncpy@size+1)& (0+255),f,b
 12837                           
 12838                           ; BSR set to: 2
 12839  01B5B6  C202  FFF6         	movff	strncpy@from,tblptrl
 12840  01B5BA  C203  FFF7         	movff	strncpy@from+1,tblptrh
 12841  01B5BE  4B02               	infsnz	strncpy@from& (0+255),f,b
 12842  01B5C0  2B03               	incf	(strncpy@from+1)& (0+255),f,b
 12843  01B5C2                     	if	0	;tblptru may be non-zero
 12844  01B5C2                     	endif
 12845  01B5C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12846  01B5C2  0E00               	movlw	low (__mediumconst shr (0+16))
 12847  01B5C4  6EF8               	movwf	tblptru,c
 12848  01B5C6                     	endif
 12849  01B5C6  C206  FFD9         	movff	strncpy@cp,fsr2l
 12850  01B5CA  C207  FFDA         	movff	strncpy@cp+1,fsr2h
 12851  01B5CE  4B06               	infsnz	strncpy@cp& (0+255),f,b
 12852  01B5D0  2B07               	incf	(strncpy@cp+1)& (0+255),f,b
 12853  01B5D2  0008               	tblrd		*
 12854  01B5D4  CFF5 FFDF          	movff	tablat,indf2
 12855  01B5D8  50DF               	movf	indf2,w,c
 12856  01B5DA  B4D8               	btfsc	status,2,c
 12857  01B5DC  D00E               	goto	l18576
 12858  01B5DE                     l18570:
 12859  01B5DE  0102               	movlb	2	; () banked
 12860  01B5E0  5104               	movf	strncpy@size& (0+255),w,b
 12861  01B5E2  1105               	iorwf	(strncpy@size+1)& (0+255),w,b
 12862  01B5E4  B4D8               	btfsc	status,2,c
 12863  01B5E6  D009               	goto	l18576
 12864  01B5E8  D7E3               	goto	l18564
 12865  01B5EA                     l18572:
 12866                           
 12867                           ; BSR set to: 2
 12868  01B5EA  C206  FFD9         	movff	strncpy@cp,fsr2l
 12869  01B5EE  C207  FFDA         	movff	strncpy@cp+1,fsr2h
 12870  01B5F2  0E00               	movlw	0
 12871  01B5F4  6EDF               	movwf	indf2,c
 12872                           
 12873                           ; BSR set to: 2
 12874  01B5F6  4B06               	infsnz	strncpy@cp& (0+255),f,b
 12875  01B5F8  2B07               	incf	(strncpy@cp+1)& (0+255),f,b
 12876  01B5FA                     l18576:
 12877                           
 12878                           ; BSR set to: 2
 12879  01B5FA  0704               	decf	strncpy@size& (0+255),f,b
 12880  01B5FC  A0D8               	btfss	status,0,c
 12881  01B5FE  0705               	decf	(strncpy@size+1)& (0+255),f,b
 12882  01B600  2904               	incf	strncpy@size& (0+255),w,b
 12883  01B602  E1F3               	bnz	l18572
 12884  01B604  2905               	incf	(strncpy@size+1)& (0+255),w,b
 12885  01B606  B4D8               	btfsc	status,2,c
 12886  01B608  0012               	return	
 12887  01B60A  D7EF               	goto	l18572
 12888  01B60C                     __end_of_strncpy:
 12889                           	opt callstack 0
 12890                           
 12891 ;; *************** function _getStringSecondsAsTime *****************
 12892 ;; Defined at:
 12893 ;;		line 56 in file "heartbeat_timer.c"
 12894 ;; Parameters:    Size  Location     Type
 12895 ;;  input_second    4  163[BANK2 ] unsigned long 
 12896 ;; Auto vars:     Size  Location     Type
 12897 ;;  buff           20    0[BANK3 ] unsigned char [20]
 12898 ;;  minutes         1   25[BANK3 ] unsigned char 
 12899 ;;  hours           1   24[BANK3 ] unsigned char 
 12900 ;;  days            1   23[BANK3 ] unsigned char 
 12901 ;;  years           1   22[BANK3 ] unsigned char 
 12902 ;;  seconds         1   21[BANK3 ] unsigned char 
 12903 ;;  i               1   20[BANK3 ] unsigned char 
 12904 ;;  remainder       1    0        unsigned char 
 12905 ;; Return value:  Size  Location     Type
 12906 ;;                  2  163[BANK2 ] PTR unsigned char 
 12907 ;; Registers used:
 12908 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12909 ;; Tracked objects:
 12910 ;;		On entry : 0/0
 12911 ;;		On exit  : 0/0
 12912 ;;		Unchanged: 0/0
 12913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12914 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12915 ;;      Locals:         0       0       0       0      26       0       0       0       0       0       0       0       
      +0       0       0       0
 12916 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12917 ;;      Totals:         0       0       0       8      26       0       0       0       0       0       0       0       
      +0       0       0       0
 12918 ;;Total ram usage:       34 bytes
 12919 ;; Hardware stack levels used:    1
 12920 ;; Hardware stack levels required when called:   15
 12921 ;; This function calls:
 12922 ;;		___lldiv
 12923 ;;		___wmul
 12924 ;;		_sprintf
 12925 ;;		_strcat
 12926 ;;		_strlen
 12927 ;; This function is called by:
 12928 ;;		_ringBufferLUT
 12929 ;;		_printCurrentMeasurements
 12930 ;; This function uses a non-reentrant model
 12931 ;;
 12932                           
 12933                           	psect	text9
 12934  0162EC                     __ptext9:
 12935                           	opt callstack 0
 12936  0162EC                     _getStringSecondsAsTime:
 12937                           	opt callstack 12
 12938                           
 12939                           ;heartbeat_timer.c: 58: uint8_t years, days, hours, minutes, seconds, remainder;;heartbe
      +                          at_timer.c: 59: static char return_string[40];;heartbeat_timer.c: 62: uint8_t i;;heartbe
      +                          at_timer.c: 63: for (i = 0; i < strlen(return_string); i++) {
 12940                           
 12941                           ; BSR set to: 2
 12942                           ;incstack = 0
 12943  0162EC  0E00               	movlw	0
 12944  0162EE  0103               	movlb	3	; () banked
 12945  0162F0  6FE5               	movwf	getStringSecondsAsTime@i& (0+255),b
 12946  0162F2  D00A               	goto	l19318
 12947  0162F4                     l19314:
 12948                           
 12949                           ; BSR set to: 2
 12950                           ;heartbeat_timer.c: 65: return_string[i] = '\0';
 12951  0162F4  0E84               	movlw	low getStringSecondsAsTime@return_string
 12952  0162F6  0103               	movlb	3	; () banked
 12953  0162F8  25E5               	addwf	getStringSecondsAsTime@i& (0+255),w,b
 12954  0162FA  6ED9               	movwf	fsr2l,c
 12955  0162FC  6ADA               	clrf	fsr2h,c
 12956  0162FE  0E03               	movlw	high getStringSecondsAsTime@return_string
 12957  016300  22DA               	addwfc	fsr2h,f,c
 12958  016302  0E00               	movlw	0
 12959  016304  6EDF               	movwf	indf2,c
 12960                           
 12961                           ; BSR set to: 3
 12962  016306  2BE5               	incf	getStringSecondsAsTime@i& (0+255),f,b
 12963  016308                     l19318:
 12964                           
 12965                           ; BSR set to: 3
 12966  016308  0E84               	movlw	low getStringSecondsAsTime@return_string
 12967  01630A  0102               	movlb	2	; () banked
 12968  01630C  6F00               	movwf	strlen@s& (0+255),b
 12969  01630E  0E03               	movlw	high getStringSecondsAsTime@return_string
 12970  016310  6F01               	movwf	(strlen@s+1)& (0+255),b
 12971  016312  ECE3  F0E1         	call	_strlen	;wreg free
 12972  016316  0103               	movlb	3	; () banked
 12973  016318  51E5               	movf	getStringSecondsAsTime@i& (0+255),w,b
 12974  01631A  0102               	movlb	2	; () banked
 12975  01631C  6FA7               	movwf	??_getStringSecondsAsTime& (0+255),b
 12976  01631E  6BA8               	clrf	(??_getStringSecondsAsTime+1)& (0+255),b
 12977  016320  5100               	movf	?_strlen& (0+255),w,b
 12978  016322  5DA7               	subwf	??_getStringSecondsAsTime& (0+255),w,b
 12979  016324  5101               	movf	(?_strlen+1)& (0+255),w,b
 12980  016326  59A8               	subwfb	(??_getStringSecondsAsTime+1)& (0+255),w,b
 12981  016328  A0D8               	btfss	status,0,c
 12982  01632A  D7E4               	goto	l19314
 12983                           
 12984                           ; BSR set to: 2
 12985                           ;heartbeat_timer.c: 67: };heartbeat_timer.c: 69: char buff[20];;heartbeat_timer.c: 71: y
      +                          ears = input_seconds / (60 * 60 * 24 * 365);
 12986  01632C  C2A3  F200         	movff	getStringSecondsAsTime@input_seconds,___lldiv@dividend
 12987  016330  C2A4  F201         	movff	getStringSecondsAsTime@input_seconds+1,___lldiv@dividend+1
 12988  016334  C2A5  F202         	movff	getStringSecondsAsTime@input_seconds+2,___lldiv@dividend+2
 12989  016338  C2A6  F203         	movff	getStringSecondsAsTime@input_seconds+3,___lldiv@dividend+3
 12990  01633C  0E80               	movlw	128
 12991  01633E  6F04               	movwf	___lldiv@divisor& (0+255),b
 12992  016340  0E33               	movlw	51
 12993  016342  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 12994  016344  0E00               	movlw	0
 12995  016346  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 12996  016348  0E00               	movlw	0
 12997  01634A  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 12998  01634C  EC69  F0D9         	call	___lldiv	;wreg free
 12999  016350  0102               	movlb	2	; () banked
 13000  016352  5100               	movf	?___lldiv& (0+255),w,b
 13001  016354  0103               	movlb	3	; () banked
 13002  016356  6FE7               	movwf	getStringSecondsAsTime@years& (0+255),b
 13003                           
 13004                           ; BSR set to: 3
 13005                           ;heartbeat_timer.c: 72: input_seconds -= years * (60 * 60 * 24 * 365);
 13006  016358  C3E7  F200         	movff	getStringSecondsAsTime@years,___wmul@multiplier
 13007  01635C  0102               	movlb	2	; () banked
 13008  01635E  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 13009  016360  0E33               	movlw	51
 13010  016362  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13011  016364  0E80               	movlw	128
 13012  016366  6F02               	movwf	___wmul@multiplicand& (0+255),b
 13013  016368  EC79  F0E2         	call	___wmul	;wreg free
 13014  01636C  0102               	movlb	2	; () banked
 13015  01636E  C200  F2A7         	movff	?___wmul,??_getStringSecondsAsTime
 13016  016372  C201  F2A8         	movff	?___wmul+1,??_getStringSecondsAsTime+1
 13017  016376  0E00               	movlw	0
 13018  016378  BFA8               	btfsc	(??_getStringSecondsAsTime+1)& (0+255),7,b
 13019  01637A  0EFF               	movlw	255
 13020  01637C  6FA9               	movwf	(??_getStringSecondsAsTime+2)& (0+255),b
 13021  01637E  6FAA               	movwf	(??_getStringSecondsAsTime+3)& (0+255),b
 13022  016380  51A7               	movf	??_getStringSecondsAsTime& (0+255),w,b
 13023  016382  5FA3               	subwf	getStringSecondsAsTime@input_seconds& (0+255),f,b
 13024  016384  51A8               	movf	(??_getStringSecondsAsTime+1)& (0+255),w,b
 13025  016386  5BA4               	subwfb	(getStringSecondsAsTime@input_seconds+1)& (0+255),f,b
 13026  016388  51A9               	movf	(??_getStringSecondsAsTime+2)& (0+255),w,b
 13027  01638A  5BA5               	subwfb	(getStringSecondsAsTime@input_seconds+2)& (0+255),f,b
 13028  01638C  51AA               	movf	(??_getStringSecondsAsTime+3)& (0+255),w,b
 13029  01638E  5BA6               	subwfb	(getStringSecondsAsTime@input_seconds+3)& (0+255),f,b
 13030                           
 13031                           ; BSR set to: 2
 13032                           ;heartbeat_timer.c: 73: days = input_seconds / (60 * 60 * 24);
 13033  016390  C2A3  F200         	movff	getStringSecondsAsTime@input_seconds,___lldiv@dividend
 13034  016394  C2A4  F201         	movff	getStringSecondsAsTime@input_seconds+1,___lldiv@dividend+1
 13035  016398  C2A5  F202         	movff	getStringSecondsAsTime@input_seconds+2,___lldiv@dividend+2
 13036  01639C  C2A6  F203         	movff	getStringSecondsAsTime@input_seconds+3,___lldiv@dividend+3
 13037  0163A0  0E80               	movlw	128
 13038  0163A2  6F04               	movwf	___lldiv@divisor& (0+255),b
 13039  0163A4  0E51               	movlw	81
 13040  0163A6  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 13041  0163A8  0E00               	movlw	0
 13042  0163AA  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 13043  0163AC  0E00               	movlw	0
 13044  0163AE  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 13045  0163B0  EC69  F0D9         	call	___lldiv	;wreg free
 13046  0163B4  0102               	movlb	2	; () banked
 13047  0163B6  5100               	movf	?___lldiv& (0+255),w,b
 13048  0163B8  0103               	movlb	3	; () banked
 13049  0163BA  6FE8               	movwf	getStringSecondsAsTime@days& (0+255),b
 13050                           
 13051                           ;heartbeat_timer.c: 74: input_seconds -= days * (60 * 60 * 24);
 13052  0163BC  C3E8  F200         	movff	getStringSecondsAsTime@days,___wmul@multiplier
 13053  0163C0  0102               	movlb	2	; () banked
 13054  0163C2  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 13055  0163C4  0E51               	movlw	81
 13056  0163C6  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13057  0163C8  0E80               	movlw	128
 13058  0163CA  6F02               	movwf	___wmul@multiplicand& (0+255),b
 13059  0163CC  EC79  F0E2         	call	___wmul	;wreg free
 13060  0163D0  0102               	movlb	2	; () banked
 13061  0163D2  C200  F2A7         	movff	?___wmul,??_getStringSecondsAsTime
 13062  0163D6  C201  F2A8         	movff	?___wmul+1,??_getStringSecondsAsTime+1
 13063  0163DA  0E00               	movlw	0
 13064  0163DC  BFA8               	btfsc	(??_getStringSecondsAsTime+1)& (0+255),7,b
 13065  0163DE  0EFF               	movlw	255
 13066  0163E0  6FA9               	movwf	(??_getStringSecondsAsTime+2)& (0+255),b
 13067  0163E2  6FAA               	movwf	(??_getStringSecondsAsTime+3)& (0+255),b
 13068  0163E4  51A7               	movf	??_getStringSecondsAsTime& (0+255),w,b
 13069  0163E6  5FA3               	subwf	getStringSecondsAsTime@input_seconds& (0+255),f,b
 13070  0163E8  51A8               	movf	(??_getStringSecondsAsTime+1)& (0+255),w,b
 13071  0163EA  5BA4               	subwfb	(getStringSecondsAsTime@input_seconds+1)& (0+255),f,b
 13072  0163EC  51A9               	movf	(??_getStringSecondsAsTime+2)& (0+255),w,b
 13073  0163EE  5BA5               	subwfb	(getStringSecondsAsTime@input_seconds+2)& (0+255),f,b
 13074  0163F0  51AA               	movf	(??_getStringSecondsAsTime+3)& (0+255),w,b
 13075  0163F2  5BA6               	subwfb	(getStringSecondsAsTime@input_seconds+3)& (0+255),f,b
 13076                           
 13077                           ; BSR set to: 2
 13078                           ;heartbeat_timer.c: 75: hours = input_seconds / (60 * 60);
 13079  0163F4  C2A3  F200         	movff	getStringSecondsAsTime@input_seconds,___lldiv@dividend
 13080  0163F8  C2A4  F201         	movff	getStringSecondsAsTime@input_seconds+1,___lldiv@dividend+1
 13081  0163FC  C2A5  F202         	movff	getStringSecondsAsTime@input_seconds+2,___lldiv@dividend+2
 13082  016400  C2A6  F203         	movff	getStringSecondsAsTime@input_seconds+3,___lldiv@dividend+3
 13083  016404  0E10               	movlw	16
 13084  016406  6F04               	movwf	___lldiv@divisor& (0+255),b
 13085  016408  0E0E               	movlw	14
 13086  01640A  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 13087  01640C  0E00               	movlw	0
 13088  01640E  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 13089  016410  0E00               	movlw	0
 13090  016412  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 13091  016414  EC69  F0D9         	call	___lldiv	;wreg free
 13092  016418  0102               	movlb	2	; () banked
 13093  01641A  5100               	movf	?___lldiv& (0+255),w,b
 13094  01641C  0103               	movlb	3	; () banked
 13095  01641E  6FE9               	movwf	getStringSecondsAsTime@hours& (0+255),b
 13096                           
 13097                           ; BSR set to: 3
 13098                           ;heartbeat_timer.c: 76: input_seconds -= hours * (60 * 60);
 13099  016420  C3E9  F200         	movff	getStringSecondsAsTime@hours,___wmul@multiplier
 13100  016424  0102               	movlb	2	; () banked
 13101  016426  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 13102  016428  0E0E               	movlw	14
 13103  01642A  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13104  01642C  0E10               	movlw	16
 13105  01642E  6F02               	movwf	___wmul@multiplicand& (0+255),b
 13106  016430  EC79  F0E2         	call	___wmul	;wreg free
 13107  016434  0102               	movlb	2	; () banked
 13108  016436  C200  F2A7         	movff	?___wmul,??_getStringSecondsAsTime
 13109  01643A  C201  F2A8         	movff	?___wmul+1,??_getStringSecondsAsTime+1
 13110  01643E  0E00               	movlw	0
 13111  016440  BFA8               	btfsc	(??_getStringSecondsAsTime+1)& (0+255),7,b
 13112  016442  0EFF               	movlw	255
 13113  016444  6FA9               	movwf	(??_getStringSecondsAsTime+2)& (0+255),b
 13114  016446  6FAA               	movwf	(??_getStringSecondsAsTime+3)& (0+255),b
 13115  016448  51A7               	movf	??_getStringSecondsAsTime& (0+255),w,b
 13116  01644A  5FA3               	subwf	getStringSecondsAsTime@input_seconds& (0+255),f,b
 13117  01644C  51A8               	movf	(??_getStringSecondsAsTime+1)& (0+255),w,b
 13118  01644E  5BA4               	subwfb	(getStringSecondsAsTime@input_seconds+1)& (0+255),f,b
 13119  016450  51A9               	movf	(??_getStringSecondsAsTime+2)& (0+255),w,b
 13120  016452  5BA5               	subwfb	(getStringSecondsAsTime@input_seconds+2)& (0+255),f,b
 13121  016454  51AA               	movf	(??_getStringSecondsAsTime+3)& (0+255),w,b
 13122  016456  5BA6               	subwfb	(getStringSecondsAsTime@input_seconds+3)& (0+255),f,b
 13123                           
 13124                           ;heartbeat_timer.c: 77: minutes = input_seconds / 60;
 13125  016458  C2A3  F200         	movff	getStringSecondsAsTime@input_seconds,___lldiv@dividend
 13126  01645C  C2A4  F201         	movff	getStringSecondsAsTime@input_seconds+1,___lldiv@dividend+1
 13127  016460  C2A5  F202         	movff	getStringSecondsAsTime@input_seconds+2,___lldiv@dividend+2
 13128  016464  C2A6  F203         	movff	getStringSecondsAsTime@input_seconds+3,___lldiv@dividend+3
 13129  016468  0E3C               	movlw	60
 13130  01646A  6F04               	movwf	___lldiv@divisor& (0+255),b
 13131  01646C  0E00               	movlw	0
 13132  01646E  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 13133  016470  0E00               	movlw	0
 13134  016472  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 13135  016474  0E00               	movlw	0
 13136  016476  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 13137  016478  EC69  F0D9         	call	___lldiv	;wreg free
 13138  01647C  0102               	movlb	2	; () banked
 13139  01647E  5100               	movf	?___lldiv& (0+255),w,b
 13140  016480  0103               	movlb	3	; () banked
 13141  016482  6FEA               	movwf	getStringSecondsAsTime@minutes& (0+255),b
 13142                           
 13143                           ; BSR set to: 3
 13144                           ;heartbeat_timer.c: 78: input_seconds -= minutes * 60;
 13145  016484  51EA               	movf	getStringSecondsAsTime@minutes& (0+255),w,b
 13146  016486  0D3C               	mullw	60
 13147  016488  CFF3 F2A7          	movff	prodl,??_getStringSecondsAsTime
 13148  01648C  CFF4 F2A8          	movff	prodh,??_getStringSecondsAsTime+1
 13149  016490  0E00               	movlw	0
 13150  016492  0102               	movlb	2	; () banked
 13151  016494  BFA8               	btfsc	(??_getStringSecondsAsTime+1)& (0+255),7,b
 13152  016496  0EFF               	movlw	255
 13153  016498  6FA9               	movwf	(??_getStringSecondsAsTime+2)& (0+255),b
 13154  01649A  6FAA               	movwf	(??_getStringSecondsAsTime+3)& (0+255),b
 13155  01649C  51A7               	movf	??_getStringSecondsAsTime& (0+255),w,b
 13156  01649E  5FA3               	subwf	getStringSecondsAsTime@input_seconds& (0+255),f,b
 13157  0164A0  51A8               	movf	(??_getStringSecondsAsTime+1)& (0+255),w,b
 13158  0164A2  5BA4               	subwfb	(getStringSecondsAsTime@input_seconds+1)& (0+255),f,b
 13159  0164A4  51A9               	movf	(??_getStringSecondsAsTime+2)& (0+255),w,b
 13160  0164A6  5BA5               	subwfb	(getStringSecondsAsTime@input_seconds+2)& (0+255),f,b
 13161  0164A8  51AA               	movf	(??_getStringSecondsAsTime+3)& (0+255),w,b
 13162  0164AA  5BA6               	subwfb	(getStringSecondsAsTime@input_seconds+3)& (0+255),f,b
 13163                           
 13164                           ; BSR set to: 2
 13165                           ;heartbeat_timer.c: 79: seconds = input_seconds;
 13166  0164AC  C2A3  F3E6         	movff	getStringSecondsAsTime@input_seconds,getStringSecondsAsTime@seconds
 13167                           
 13168                           ; BSR set to: 2
 13169                           ;heartbeat_timer.c: 81: if (years > 0) {
 13170  0164B0  0103               	movlb	3	; () banked
 13171  0164B2  51E7               	movf	getStringSecondsAsTime@years& (0+255),w,b
 13172  0164B4  B4D8               	btfsc	status,2,c
 13173  0164B6  D02B               	goto	l19344
 13174                           
 13175                           ; BSR set to: 3
 13176                           ;heartbeat_timer.c: 83: if (years == 1) {
 13177  0164B8  05E7               	decf	getStringSecondsAsTime@years& (0+255),w,b
 13178  0164BA  A4D8               	btfss	status,2,c
 13179  0164BC  D00F               	goto	l19340
 13180                           
 13181                           ; BSR set to: 3
 13182                           ;heartbeat_timer.c: 85: sprintf(buff, "%d year, ", years);
 13183  0164BE  0ED1               	movlw	low getStringSecondsAsTime@buff
 13184  0164C0  0102               	movlb	2	; () banked
 13185  0164C2  6F90               	movwf	sprintf@wh& (0+255),b
 13186  0164C4  0E03               	movlw	high getStringSecondsAsTime@buff
 13187  0164C6  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 13188  0164C8  0E7D               	movlw	low STR_48
 13189  0164CA  6F92               	movwf	sprintf@f& (0+255),b
 13190  0164CC  0EFE               	movlw	high STR_48
 13191  0164CE  6F93               	movwf	(sprintf@f+1)& (0+255),b
 13192  0164D0  C3E7  F294         	movff	getStringSecondsAsTime@years,?_sprintf+4
 13193  0164D4  6B95               	clrf	(?_sprintf+5)& (0+255),b
 13194  0164D6  EC1B  F0DE         	call	_sprintf	;wreg free
 13195                           
 13196                           ;heartbeat_timer.c: 87: }
 13197  0164DA  D00E               	goto	l19342
 13198  0164DC                     l19340:
 13199                           
 13200                           ; BSR set to: 3
 13201                           ;heartbeat_timer.c: 89: else {;heartbeat_timer.c: 91: sprintf(buff, "%d years, ", years)
      +                          ;
 13202  0164DC  0ED1               	movlw	low getStringSecondsAsTime@buff
 13203  0164DE  0102               	movlb	2	; () banked
 13204  0164E0  6F90               	movwf	sprintf@wh& (0+255),b
 13205  0164E2  0E03               	movlw	high getStringSecondsAsTime@buff
 13206  0164E4  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 13207  0164E6  0E1C               	movlw	low STR_49
 13208  0164E8  6F92               	movwf	sprintf@f& (0+255),b
 13209  0164EA  0EFE               	movlw	high STR_49
 13210  0164EC  6F93               	movwf	(sprintf@f+1)& (0+255),b
 13211  0164EE  C3E7  F294         	movff	getStringSecondsAsTime@years,?_sprintf+4
 13212  0164F2  6B95               	clrf	(?_sprintf+5)& (0+255),b
 13213  0164F4  EC1B  F0DE         	call	_sprintf	;wreg free
 13214  0164F8                     l19342:
 13215                           
 13216                           ;heartbeat_timer.c: 93: };heartbeat_timer.c: 95: strcat(return_string, buff);
 13217  0164F8  0E84               	movlw	low getStringSecondsAsTime@return_string
 13218  0164FA  0102               	movlb	2	; () banked
 13219  0164FC  6F00               	movwf	strcat@to& (0+255),b
 13220  0164FE  0E03               	movlw	high getStringSecondsAsTime@return_string
 13221  016500  6F01               	movwf	(strcat@to+1)& (0+255),b
 13222  016502  0ED1               	movlw	low getStringSecondsAsTime@buff
 13223  016504  6F02               	movwf	strcat@from& (0+255),b
 13224  016506  0E03               	movlw	high getStringSecondsAsTime@buff
 13225  016508  6F03               	movwf	(strcat@from+1)& (0+255),b
 13226  01650A  ECCF  F0DB         	call	_strcat	;wreg free
 13227  01650E                     l19344:
 13228                           
 13229                           ;heartbeat_timer.c: 97: };heartbeat_timer.c: 99: if (days > 0) {
 13230  01650E  0103               	movlb	3	; () banked
 13231  016510  51E8               	movf	getStringSecondsAsTime@days& (0+255),w,b
 13232  016512  B4D8               	btfsc	status,2,c
 13233  016514  D02B               	goto	l19354
 13234                           
 13235                           ; BSR set to: 3
 13236                           ;heartbeat_timer.c: 101: if (days == 1) {
 13237  016516  05E8               	decf	getStringSecondsAsTime@days& (0+255),w,b
 13238  016518  A4D8               	btfss	status,2,c
 13239  01651A  D00F               	goto	l19350
 13240                           
 13241                           ; BSR set to: 3
 13242                           ;heartbeat_timer.c: 103: sprintf(buff, "%d day, ", days);
 13243  01651C  0ED1               	movlw	low getStringSecondsAsTime@buff
 13244  01651E  0102               	movlb	2	; () banked
 13245  016520  6F90               	movwf	sprintf@wh& (0+255),b
 13246  016522  0E03               	movlw	high getStringSecondsAsTime@buff
 13247  016524  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 13248  016526  0E27               	movlw	low STR_50
 13249  016528  6F92               	movwf	sprintf@f& (0+255),b
 13250  01652A  0EFF               	movlw	high STR_50
 13251  01652C  6F93               	movwf	(sprintf@f+1)& (0+255),b
 13252  01652E  C3E8  F294         	movff	getStringSecondsAsTime@days,?_sprintf+4
 13253  016532  6B95               	clrf	(?_sprintf+5)& (0+255),b
 13254  016534  EC1B  F0DE         	call	_sprintf	;wreg free
 13255                           
 13256                           ;heartbeat_timer.c: 105: }
 13257  016538  D00E               	goto	l19352
 13258  01653A                     l19350:
 13259                           
 13260                           ; BSR set to: 3
 13261                           ;heartbeat_timer.c: 107: else {;heartbeat_timer.c: 109: sprintf(buff, "%d days, ", days)
      +                          ;
 13262  01653A  0ED1               	movlw	low getStringSecondsAsTime@buff
 13263  01653C  0102               	movlb	2	; () banked
 13264  01653E  6F90               	movwf	sprintf@wh& (0+255),b
 13265  016540  0E03               	movlw	high getStringSecondsAsTime@buff
 13266  016542  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 13267  016544  0E91               	movlw	low STR_51
 13268  016546  6F92               	movwf	sprintf@f& (0+255),b
 13269  016548  0EFE               	movlw	high STR_51
 13270  01654A  6F93               	movwf	(sprintf@f+1)& (0+255),b
 13271  01654C  C3E8  F294         	movff	getStringSecondsAsTime@days,?_sprintf+4
 13272  016550  6B95               	clrf	(?_sprintf+5)& (0+255),b
 13273  016552  EC1B  F0DE         	call	_sprintf	;wreg free
 13274  016556                     l19352:
 13275                           
 13276                           ;heartbeat_timer.c: 111: };heartbeat_timer.c: 113: strcat(return_string, buff);
 13277  016556  0E84               	movlw	low getStringSecondsAsTime@return_string
 13278  016558  0102               	movlb	2	; () banked
 13279  01655A  6F00               	movwf	strcat@to& (0+255),b
 13280  01655C  0E03               	movlw	high getStringSecondsAsTime@return_string
 13281  01655E  6F01               	movwf	(strcat@to+1)& (0+255),b
 13282  016560  0ED1               	movlw	low getStringSecondsAsTime@buff
 13283  016562  6F02               	movwf	strcat@from& (0+255),b
 13284  016564  0E03               	movlw	high getStringSecondsAsTime@buff
 13285  016566  6F03               	movwf	(strcat@from+1)& (0+255),b
 13286  016568  ECCF  F0DB         	call	_strcat	;wreg free
 13287  01656C                     l19354:
 13288                           
 13289                           ;heartbeat_timer.c: 114: };heartbeat_timer.c: 116: if (hours > 0) {
 13290  01656C  0103               	movlb	3	; () banked
 13291  01656E  51E9               	movf	getStringSecondsAsTime@hours& (0+255),w,b
 13292  016570  B4D8               	btfsc	status,2,c
 13293  016572  D02B               	goto	l19364
 13294                           
 13295                           ; BSR set to: 3
 13296                           ;heartbeat_timer.c: 118: if (hours == 1) {
 13297  016574  05E9               	decf	getStringSecondsAsTime@hours& (0+255),w,b
 13298  016576  A4D8               	btfss	status,2,c
 13299  016578  D00F               	goto	l19360
 13300                           
 13301                           ; BSR set to: 3
 13302                           ;heartbeat_timer.c: 120: sprintf(buff, "%d hour, ", hours);
 13303  01657A  0ED1               	movlw	low getStringSecondsAsTime@buff
 13304  01657C  0102               	movlb	2	; () banked
 13305  01657E  6F90               	movwf	sprintf@wh& (0+255),b
 13306  016580  0E03               	movlw	high getStringSecondsAsTime@buff
 13307  016582  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 13308  016584  0E87               	movlw	low STR_52
 13309  016586  6F92               	movwf	sprintf@f& (0+255),b
 13310  016588  0EFE               	movlw	high STR_52
 13311  01658A  6F93               	movwf	(sprintf@f+1)& (0+255),b
 13312  01658C  C3E9  F294         	movff	getStringSecondsAsTime@hours,?_sprintf+4
 13313  016590  6B95               	clrf	(?_sprintf+5)& (0+255),b
 13314  016592  EC1B  F0DE         	call	_sprintf	;wreg free
 13315                           
 13316                           ;heartbeat_timer.c: 122: }
 13317  016596  D00E               	goto	l19362
 13318  016598                     l19360:
 13319                           
 13320                           ; BSR set to: 3
 13321                           ;heartbeat_timer.c: 124: else {;heartbeat_timer.c: 126: sprintf(buff, "%d hours, ", hour
      +                          s);
 13322  016598  0ED1               	movlw	low getStringSecondsAsTime@buff
 13323  01659A  0102               	movlb	2	; () banked
 13324  01659C  6F90               	movwf	sprintf@wh& (0+255),b
 13325  01659E  0E03               	movlw	high getStringSecondsAsTime@buff
 13326  0165A0  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 13327  0165A2  0E27               	movlw	low STR_53
 13328  0165A4  6F92               	movwf	sprintf@f& (0+255),b
 13329  0165A6  0EFE               	movlw	high STR_53
 13330  0165A8  6F93               	movwf	(sprintf@f+1)& (0+255),b
 13331  0165AA  C3E9  F294         	movff	getStringSecondsAsTime@hours,?_sprintf+4
 13332  0165AE  6B95               	clrf	(?_sprintf+5)& (0+255),b
 13333  0165B0  EC1B  F0DE         	call	_sprintf	;wreg free
 13334  0165B4                     l19362:
 13335                           
 13336                           ;heartbeat_timer.c: 128: };heartbeat_timer.c: 130: strcat(return_string, buff);
 13337  0165B4  0E84               	movlw	low getStringSecondsAsTime@return_string
 13338  0165B6  0102               	movlb	2	; () banked
 13339  0165B8  6F00               	movwf	strcat@to& (0+255),b
 13340  0165BA  0E03               	movlw	high getStringSecondsAsTime@return_string
 13341  0165BC  6F01               	movwf	(strcat@to+1)& (0+255),b
 13342  0165BE  0ED1               	movlw	low getStringSecondsAsTime@buff
 13343  0165C0  6F02               	movwf	strcat@from& (0+255),b
 13344  0165C2  0E03               	movlw	high getStringSecondsAsTime@buff
 13345  0165C4  6F03               	movwf	(strcat@from+1)& (0+255),b
 13346  0165C6  ECCF  F0DB         	call	_strcat	;wreg free
 13347  0165CA                     l19364:
 13348                           
 13349                           ;heartbeat_timer.c: 132: };heartbeat_timer.c: 134: if (minutes > 0) {
 13350  0165CA  0103               	movlb	3	; () banked
 13351  0165CC  51EA               	movf	getStringSecondsAsTime@minutes& (0+255),w,b
 13352  0165CE  B4D8               	btfsc	status,2,c
 13353  0165D0  D02B               	goto	l19374
 13354                           
 13355                           ; BSR set to: 3
 13356                           ;heartbeat_timer.c: 136: if (minutes == 1) {
 13357  0165D2  05EA               	decf	getStringSecondsAsTime@minutes& (0+255),w,b
 13358  0165D4  A4D8               	btfss	status,2,c
 13359  0165D6  D00F               	goto	l19370
 13360                           
 13361                           ; BSR set to: 3
 13362                           ;heartbeat_timer.c: 138: sprintf(buff, "%d minute, ", minutes);
 13363  0165D8  0ED1               	movlw	low getStringSecondsAsTime@buff
 13364  0165DA  0102               	movlb	2	; () banked
 13365  0165DC  6F90               	movwf	sprintf@wh& (0+255),b
 13366  0165DE  0E03               	movlw	high getStringSecondsAsTime@buff
 13367  0165E0  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 13368  0165E2  0E9F               	movlw	low STR_54
 13369  0165E4  6F92               	movwf	sprintf@f& (0+255),b
 13370  0165E6  0EFD               	movlw	high STR_54
 13371  0165E8  6F93               	movwf	(sprintf@f+1)& (0+255),b
 13372  0165EA  C3EA  F294         	movff	getStringSecondsAsTime@minutes,?_sprintf+4
 13373  0165EE  6B95               	clrf	(?_sprintf+5)& (0+255),b
 13374  0165F0  EC1B  F0DE         	call	_sprintf	;wreg free
 13375                           
 13376                           ;heartbeat_timer.c: 140: }
 13377  0165F4  D00E               	goto	l19372
 13378  0165F6                     l19370:
 13379                           
 13380                           ; BSR set to: 3
 13381                           ;heartbeat_timer.c: 142: else {;heartbeat_timer.c: 144: sprintf(buff, "%d minutes, ", mi
      +                          nutes);
 13382  0165F6  0ED1               	movlw	low getStringSecondsAsTime@buff
 13383  0165F8  0102               	movlb	2	; () banked
 13384  0165FA  6F90               	movwf	sprintf@wh& (0+255),b
 13385  0165FC  0E03               	movlw	high getStringSecondsAsTime@buff
 13386  0165FE  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 13387  016600  0E3B               	movlw	low STR_55
 13388  016602  6F92               	movwf	sprintf@f& (0+255),b
 13389  016604  0EFD               	movlw	high STR_55
 13390  016606  6F93               	movwf	(sprintf@f+1)& (0+255),b
 13391  016608  C3EA  F294         	movff	getStringSecondsAsTime@minutes,?_sprintf+4
 13392  01660C  6B95               	clrf	(?_sprintf+5)& (0+255),b
 13393  01660E  EC1B  F0DE         	call	_sprintf	;wreg free
 13394  016612                     l19372:
 13395                           
 13396                           ;heartbeat_timer.c: 146: };heartbeat_timer.c: 148: strcat(return_string, buff);
 13397  016612  0E84               	movlw	low getStringSecondsAsTime@return_string
 13398  016614  0102               	movlb	2	; () banked
 13399  016616  6F00               	movwf	strcat@to& (0+255),b
 13400  016618  0E03               	movlw	high getStringSecondsAsTime@return_string
 13401  01661A  6F01               	movwf	(strcat@to+1)& (0+255),b
 13402  01661C  0ED1               	movlw	low getStringSecondsAsTime@buff
 13403  01661E  6F02               	movwf	strcat@from& (0+255),b
 13404  016620  0E03               	movlw	high getStringSecondsAsTime@buff
 13405  016622  6F03               	movwf	(strcat@from+1)& (0+255),b
 13406  016624  ECCF  F0DB         	call	_strcat	;wreg free
 13407  016628                     l19374:
 13408                           
 13409                           ;heartbeat_timer.c: 150: };heartbeat_timer.c: 152: if (seconds > 0) {
 13410  016628  0103               	movlb	3	; () banked
 13411  01662A  51E6               	movf	getStringSecondsAsTime@seconds& (0+255),w,b
 13412  01662C  B4D8               	btfsc	status,2,c
 13413  01662E  D02B               	goto	l19384
 13414                           
 13415                           ; BSR set to: 3
 13416                           ;heartbeat_timer.c: 154: if (seconds == 1) {
 13417  016630  05E6               	decf	getStringSecondsAsTime@seconds& (0+255),w,b
 13418  016632  A4D8               	btfss	status,2,c
 13419  016634  D00F               	goto	l19380
 13420                           
 13421                           ; BSR set to: 3
 13422                           ;heartbeat_timer.c: 156: sprintf(buff, "%d second", seconds);
 13423  016636  0ED1               	movlw	low getStringSecondsAsTime@buff
 13424  016638  0102               	movlb	2	; () banked
 13425  01663A  6F90               	movwf	sprintf@wh& (0+255),b
 13426  01663C  0E03               	movlw	high getStringSecondsAsTime@buff
 13427  01663E  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 13428  016640  0E9B               	movlw	low STR_56
 13429  016642  6F92               	movwf	sprintf@f& (0+255),b
 13430  016644  0EFE               	movlw	high STR_56
 13431  016646  6F93               	movwf	(sprintf@f+1)& (0+255),b
 13432  016648  C3E6  F294         	movff	getStringSecondsAsTime@seconds,?_sprintf+4
 13433  01664C  6B95               	clrf	(?_sprintf+5)& (0+255),b
 13434  01664E  EC1B  F0DE         	call	_sprintf	;wreg free
 13435                           
 13436                           ;heartbeat_timer.c: 158: }
 13437  016652  D00E               	goto	l19382
 13438  016654                     l19380:
 13439                           
 13440                           ; BSR set to: 3
 13441                           ;heartbeat_timer.c: 160: else {;heartbeat_timer.c: 162: sprintf(buff, "%d seconds", seco
      +                          nds);
 13442  016654  0ED1               	movlw	low getStringSecondsAsTime@buff
 13443  016656  0102               	movlb	2	; () banked
 13444  016658  6F90               	movwf	sprintf@wh& (0+255),b
 13445  01665A  0E03               	movlw	high getStringSecondsAsTime@buff
 13446  01665C  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 13447  01665E  0E32               	movlw	low STR_57
 13448  016660  6F92               	movwf	sprintf@f& (0+255),b
 13449  016662  0EFE               	movlw	high STR_57
 13450  016664  6F93               	movwf	(sprintf@f+1)& (0+255),b
 13451  016666  C3E6  F294         	movff	getStringSecondsAsTime@seconds,?_sprintf+4
 13452  01666A  6B95               	clrf	(?_sprintf+5)& (0+255),b
 13453  01666C  EC1B  F0DE         	call	_sprintf	;wreg free
 13454  016670                     l19382:
 13455                           
 13456                           ;heartbeat_timer.c: 164: };heartbeat_timer.c: 166: strcat(return_string, buff);
 13457  016670  0E84               	movlw	low getStringSecondsAsTime@return_string
 13458  016672  0102               	movlb	2	; () banked
 13459  016674  6F00               	movwf	strcat@to& (0+255),b
 13460  016676  0E03               	movlw	high getStringSecondsAsTime@return_string
 13461  016678  6F01               	movwf	(strcat@to+1)& (0+255),b
 13462  01667A  0ED1               	movlw	low getStringSecondsAsTime@buff
 13463  01667C  6F02               	movwf	strcat@from& (0+255),b
 13464  01667E  0E03               	movlw	high getStringSecondsAsTime@buff
 13465  016680  6F03               	movwf	(strcat@from+1)& (0+255),b
 13466  016682  ECCF  F0DB         	call	_strcat	;wreg free
 13467  016686                     l19384:
 13468                           
 13469                           ;heartbeat_timer.c: 168: };heartbeat_timer.c: 170: return return_string;
 13470  016686  0E84               	movlw	low getStringSecondsAsTime@return_string
 13471  016688  0102               	movlb	2	; () banked
 13472  01668A  6FA3               	movwf	?_getStringSecondsAsTime& (0+255),b
 13473  01668C  0E03               	movlw	high getStringSecondsAsTime@return_string
 13474  01668E  6FA4               	movwf	(?_getStringSecondsAsTime+1)& (0+255),b
 13475                           
 13476                           ; BSR set to: 2
 13477  016690  0012               	return		;funcret
 13478  016692                     __end_of_getStringSecondsAsTime:
 13479                           	opt callstack 0
 13480                           
 13481 ;; *************** function _strcat *****************
 13482 ;; Defined at:
 13483 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcat.c"
 13484 ;; Parameters:    Size  Location     Type
 13485 ;;  to              2    0[BANK2 ] PTR unsigned char 
 13486 ;;		 -> terminalTextAttributes@print_string(16), getStringSecondsAsTime@return_string(40), 
 13487 ;;  from            2    2[BANK2 ] PTR const unsigned char 
 13488 ;;		 -> STR_333(2), STR_332(3), STR_331(3), STR_330(3), 
 13489 ;;		 -> STR_329(3), STR_328(3), STR_327(3), STR_326(3), 
 13490 ;;		 -> STR_325(3), STR_324(3), STR_323(2), STR_322(3), 
 13491 ;;		 -> STR_321(3), STR_320(3), STR_319(3), STR_318(3), 
 13492 ;;		 -> STR_317(3), STR_316(3), STR_315(3), STR_314(3), 
 13493 ;;		 -> STR_313(2), STR_312(2), STR_311(2), STR_310(2), 
 13494 ;;		 -> STR_309(2), STR_308(2), STR_307(2), STR_306(2), 
 13495 ;;		 -> getStringSecondsAsTime@buff(20), 
 13496 ;; Auto vars:     Size  Location     Type
 13497 ;;  cp              2    4[BANK2 ] PTR unsigned char 
 13498 ;;		 -> terminalTextAttributes@print_string(16), getStringSecondsAsTime@return_string(40), 
 13499 ;; Return value:  Size  Location     Type
 13500 ;;                  2    0[BANK2 ] PTR unsigned char 
 13501 ;; Registers used:
 13502 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13503 ;; Tracked objects:
 13504 ;;		On entry : 0/0
 13505 ;;		On exit  : 0/0
 13506 ;;		Unchanged: 0/0
 13507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13508 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13509 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13511 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13512 ;;Total ram usage:        6 bytes
 13513 ;; Hardware stack levels used:    1
 13514 ;; Hardware stack levels required when called:   11
 13515 ;; This function calls:
 13516 ;;		Nothing
 13517 ;; This function is called by:
 13518 ;;		_getStringSecondsAsTime
 13519 ;;		_terminalTextAttributes
 13520 ;; This function uses a non-reentrant model
 13521 ;;
 13522                           
 13523                           	psect	text10
 13524  01B79E                     __ptext10:
 13525                           	opt callstack 0
 13526  01B79E                     _strcat:
 13527                           	opt callstack 16
 13528                           
 13529                           ; BSR set to: 2
 13530                           ;incstack = 0
 13531  01B79E  C200  F204         	movff	strcat@to,strcat@cp
 13532  01B7A2  C201  F205         	movff	strcat@to+1,strcat@cp+1
 13533  01B7A6  D003               	goto	l18532
 13534  01B7A8                     l18530:
 13535  01B7A8  0102               	movlb	2	; () banked
 13536  01B7AA  4B04               	infsnz	strcat@cp& (0+255),f,b
 13537  01B7AC  2B05               	incf	(strcat@cp+1)& (0+255),f,b
 13538  01B7AE                     l18532:
 13539  01B7AE  C204  FFD9         	movff	strcat@cp,fsr2l
 13540  01B7B2  C205  FFDA         	movff	strcat@cp+1,fsr2h
 13541  01B7B6  50DF               	movf	indf2,w,c
 13542  01B7B8  B4D8               	btfsc	status,2,c
 13543  01B7BA  D006               	goto	l18536
 13544  01B7BC  D7F5               	goto	l18530
 13545  01B7BE                     l18534:
 13546  01B7BE  0102               	movlb	2	; () banked
 13547  01B7C0  4B04               	infsnz	strcat@cp& (0+255),f,b
 13548  01B7C2  2B05               	incf	(strcat@cp+1)& (0+255),f,b
 13549  01B7C4  4B02               	infsnz	strcat@from& (0+255),f,b
 13550  01B7C6  2B03               	incf	(strcat@from+1)& (0+255),f,b
 13551  01B7C8                     l18536:
 13552  01B7C8  C202  FFF6         	movff	strcat@from,tblptrl
 13553  01B7CC  C203  FFF7         	movff	strcat@from+1,tblptrh
 13554  01B7D0  0E00               	movlw	low (__mediumconst shr (0+16))
 13555  01B7D2  6EF8               	movwf	tblptru,c
 13556  01B7D4  C204  FFD9         	movff	strcat@cp,fsr2l
 13557  01B7D8  C205  FFDA         	movff	strcat@cp+1,fsr2h
 13558  01B7DC  0E0E               	movlw	(high __ramtop+-1)
 13559  01B7DE  64F7               	cpfsgt	tblptrh,c
 13560  01B7E0  D003               	bra	u23287
 13561  01B7E2  0008               	tblrd		*
 13562  01B7E4  50F5               	movf	tablat,w,c
 13563  01B7E6  D005               	bra	u23280
 13564  01B7E8                     u23287:
 13565  01B7E8  CFF6 FFE9          	movff	tblptrl,fsr0l
 13566  01B7EC  CFF7 FFEA          	movff	tblptrh,fsr0h
 13567  01B7F0  50EF               	movf	indf0,w,c
 13568  01B7F2                     u23280:
 13569  01B7F2  6EDF               	movwf	indf2,c
 13570  01B7F4  50DF               	movf	indf2,w,c
 13571  01B7F6  B4D8               	btfsc	status,2,c
 13572  01B7F8  0012               	return	
 13573  01B7FA  D7E1               	goto	l18534
 13574  01B7FC                     __end_of_strcat:
 13575                           	opt callstack 0
 13576                           
 13577 ;; *************** function _getNXQChargeStateString *****************
 13578 ;; Defined at:
 13579 ;;		line 9 in file "NXQ_charge_state.c"
 13580 ;; Parameters:    Size  Location     Type
 13581 ;;		None
 13582 ;; Auto vars:     Size  Location     Type
 13583 ;;		None
 13584 ;; Return value:  Size  Location     Type
 13585 ;;                  2    0[BANK2 ] PTR unsigned char 
 13586 ;; Registers used:
 13587 ;;		wreg, status,2, status,0
 13588 ;; Tracked objects:
 13589 ;;		On entry : 0/0
 13590 ;;		On exit  : 0/0
 13591 ;;		Unchanged: 0/0
 13592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13593 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13596 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13597 ;;Total ram usage:        2 bytes
 13598 ;; Hardware stack levels used:    1
 13599 ;; Hardware stack levels required when called:   11
 13600 ;; This function calls:
 13601 ;;		Nothing
 13602 ;; This function is called by:
 13603 ;;		_printCurrentMeasurements
 13604 ;; This function uses a non-reentrant model
 13605 ;;
 13606                           
 13607                           	psect	text11
 13608  01B7FC                     __ptext11:
 13609                           	opt callstack 0
 13610  01B7FC                     _getNXQChargeStateString:
 13611                           	opt callstack 16
 13612                           
 13613                           ;NXQ_charge_state.c: 11: switch (nxq_charge_state) {
 13614                           
 13615                           ;incstack = 0
 13616  01B7FC  D01E               	goto	l19310
 13617  01B7FE                     l19278:
 13618                           
 13619                           ; BSR set to: 1
 13620                           ;NXQ_charge_state.c: 14: return "idle";
 13621  01B7FE  0EAD               	movlw	low STR_11
 13622  01B800  0102               	movlb	2	; () banked
 13623  01B802  6F00               	movwf	?_getNXQChargeStateString& (0+255),b
 13624  01B804  0EFF               	movlw	high STR_11
 13625  01B806  6F01               	movwf	(?_getNXQChargeStateString+1)& (0+255),b
 13626  01B808  0012               	return	
 13627  01B80A                     l19284:
 13628                           
 13629                           ; BSR set to: 1
 13630                           ;NXQ_charge_state.c: 18: return "charging";
 13631  01B80A  0E30               	movlw	low STR_12
 13632  01B80C  0102               	movlb	2	; () banked
 13633  01B80E  6F00               	movwf	?_getNXQChargeStateString& (0+255),b
 13634  01B810  0EFF               	movlw	high STR_12
 13635  01B812  6F01               	movwf	(?_getNXQChargeStateString+1)& (0+255),b
 13636  01B814  0012               	return	
 13637  01B816                     l19290:
 13638                           
 13639                           ; BSR set to: 1
 13640                           ;NXQ_charge_state.c: 22: return "fully charged";
 13641  01B816  0ED2               	movlw	low STR_13
 13642  01B818  0102               	movlb	2	; () banked
 13643  01B81A  6F00               	movwf	?_getNXQChargeStateString& (0+255),b
 13644  01B81C  0EFC               	movlw	high STR_13
 13645  01B81E  6F01               	movwf	(?_getNXQChargeStateString+1)& (0+255),b
 13646  01B820  0012               	return	
 13647  01B822                     l19296:
 13648                           
 13649                           ; BSR set to: 1
 13650                           ;NXQ_charge_state.c: 26: return "error";
 13651  01B822  0E89               	movlw	low STR_14
 13652  01B824  0102               	movlb	2	; () banked
 13653  01B826  6F00               	movwf	?_getNXQChargeStateString& (0+255),b
 13654  01B828  0EFF               	movlw	high STR_14
 13655  01B82A  6F01               	movwf	(?_getNXQChargeStateString+1)& (0+255),b
 13656  01B82C  0012               	return	
 13657  01B82E                     l19302:
 13658                           
 13659                           ; BSR set to: 1
 13660                           ;NXQ_charge_state.c: 30: return "undefined";
 13661  01B82E  0EC3               	movlw	low STR_15
 13662  01B830  0102               	movlb	2	; () banked
 13663  01B832  6F00               	movwf	?_getNXQChargeStateString& (0+255),b
 13664  01B834  0EFE               	movlw	high STR_15
 13665  01B836  6F01               	movwf	(?_getNXQChargeStateString+1)& (0+255),b
 13666  01B838  0012               	return	
 13667  01B83A                     l19310:
 13668  01B83A  0101               	movlb	1	; () banked
 13669  01B83C  518C               	movf	_nxq_charge_state& (0+255),w,b
 13670                           
 13671                           ; Switch size 1, requested type "simple"
 13672                           ; Number of cases is 4, Range of values is 0 to 3
 13673                           ; switch strategies available:
 13674                           ; Name         Instructions Cycles
 13675                           ; simple_byte           13     7 (average)
 13676                           ;	Chosen strategy is simple_byte
 13677  01B83E  0A00               	xorlw	0	; case 0
 13678  01B840  B4D8               	btfsc	status,2,c
 13679  01B842  D7DD               	goto	l19278
 13680  01B844  0A01               	xorlw	1	; case 1
 13681  01B846  B4D8               	btfsc	status,2,c
 13682  01B848  D7E0               	goto	l19284
 13683  01B84A  0A03               	xorlw	3	; case 2
 13684  01B84C  B4D8               	btfsc	status,2,c
 13685  01B84E  D7E3               	goto	l19290
 13686  01B850  0A01               	xorlw	1	; case 3
 13687  01B852  B4D8               	btfsc	status,2,c
 13688  01B854  D7E6               	goto	l19296
 13689  01B856  D7EB               	goto	l19302
 13690  01B858                     __end_of_getNXQChargeStateString:
 13691                           	opt callstack 0
 13692                           
 13693 ;; *************** function _getUserID *****************
 13694 ;; Defined at:
 13695 ;;		line 72 in file "device_IDs.c"
 13696 ;; Parameters:    Size  Location     Type
 13697 ;;  inputUserID     1    wreg     unsigned char 
 13698 ;; Auto vars:     Size  Location     Type
 13699 ;;  inputUserID     1   17[BANK2 ] unsigned char 
 13700 ;;  initialOffse    4    0        unsigned long 
 13701 ;;  IDOffset        1   18[BANK2 ] unsigned char 
 13702 ;; Return value:  Size  Location     Type
 13703 ;;                  2   11[BANK2 ] unsigned int 
 13704 ;; Registers used:
 13705 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13706 ;; Tracked objects:
 13707 ;;		On entry : 0/0
 13708 ;;		On exit  : 0/0
 13709 ;;		Unchanged: 0/0
 13710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13711 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13712 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13714 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13715 ;;Total ram usage:        8 bytes
 13716 ;; Hardware stack levels used:    1
 13717 ;; Hardware stack levels required when called:   13
 13718 ;; This function calls:
 13719 ;;		_FLASH_ReadWord
 13720 ;; This function is called by:
 13721 ;;		_ringBufferLUT
 13722 ;; This function uses a non-reentrant model
 13723 ;;
 13724                           
 13725                           	psect	text12
 13726  01C206                     __ptext12:
 13727                           	opt callstack 0
 13728  01C206                     _getUserID:
 13729                           	opt callstack 15
 13730                           
 13731                           ; BSR set to: 2
 13732                           ;incstack = 0
 13733                           ;getUserID@inputUserID stored from wreg
 13734  01C206  0102               	movlb	2	; () banked
 13735  01C208  6F11               	movwf	getUserID@inputUserID& (0+255),b
 13736                           
 13737                           ;device_IDs.c: 78: uint8_t IDOffset = inputUserID * 2;
 13738  01C20A  0102               	movlb	2	; () banked
 13739  01C20C  5111               	movf	getUserID@inputUserID& (0+255),w,b
 13740  01C20E  0D02               	mullw	2
 13741  01C210  CFF3 F212          	movff	prodl,getUserID@IDOffset
 13742                           
 13743                           ; BSR set to: 2
 13744                           ;device_IDs.c: 80: return FLASH_ReadWord(initialOffset + IDOffset);
 13745  01C214  0E00               	movlw	0
 13746  01C216  2512               	addwf	getUserID@IDOffset& (0+255),w,b
 13747  01C218  6F04               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 13748  01C21A  6B05               	clrf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 13749  01C21C  0E00               	movlw	0
 13750  01C21E  2305               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),f,b
 13751  01C220  6B06               	clrf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 13752  01C222  0E20               	movlw	32
 13753  01C224  2306               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),f,b
 13754  01C226  6B07               	clrf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 13755  01C228  0E00               	movlw	0
 13756  01C22A  2307               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),f,b
 13757  01C22C  EC55  F0DF         	call	_FLASH_ReadWord	;wreg free
 13758  01C230  C204  F20B         	movff	?_FLASH_ReadWord,?_getUserID
 13759  01C234  C205  F20C         	movff	?_FLASH_ReadWord+1,?_getUserID+1
 13760  01C238  0012               	return		;funcret
 13761  01C23A                     __end_of_getUserID:
 13762                           	opt callstack 0
 13763                           
 13764 ;; *************** function _getDeviceIDString *****************
 13765 ;; Defined at:
 13766 ;;		line 34 in file "device_IDs.c"
 13767 ;; Parameters:    Size  Location     Type
 13768 ;;  inputDevID      2   13[BANK2 ] unsigned int 
 13769 ;; Auto vars:     Size  Location     Type
 13770 ;;		None
 13771 ;; Return value:  Size  Location     Type
 13772 ;;                  2   13[BANK2 ] PTR inline unsigned char
 13773 ;; Registers used:
 13774 ;;		wreg, status,2, status,0
 13775 ;; Tracked objects:
 13776 ;;		On entry : 0/0
 13777 ;;		On exit  : 0/0
 13778 ;;		Unchanged: 0/0
 13779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13780 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13782 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13783 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13784 ;;Total ram usage:        4 bytes
 13785 ;; Hardware stack levels used:    1
 13786 ;; Hardware stack levels required when called:   11
 13787 ;; This function calls:
 13788 ;;		Nothing
 13789 ;; This function is called by:
 13790 ;;		_ringBufferLUT
 13791 ;; This function uses a non-reentrant model
 13792 ;;
 13793                           
 13794                           	psect	text13
 13795  01AF76                     __ptext13:
 13796                           	opt callstack 0
 13797  01AF76                     _getDeviceIDString:
 13798                           	opt callstack 17
 13799                           
 13800                           ;device_IDs.c: 38: switch (inputDevID) {
 13801                           
 13802                           ;incstack = 0
 13803  01AF76  D023               	goto	l19980
 13804  01AF78                     l19936:
 13805                           
 13806                           ; BSR set to: 2
 13807                           ;device_IDs.c: 41: return "PIC18F67K40";
 13808  01AF78  0EC3               	movlw	low STR_41
 13809  01AF7A  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 13810  01AF7C  0EFD               	movlw	high STR_41
 13811  01AF7E  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 13812  01AF80  0012               	return	
 13813  01AF82                     l19942:
 13814                           
 13815                           ; BSR set to: 2
 13816                           ;device_IDs.c: 45: return "PIC18LF67K40";
 13817  01AF82  0E62               	movlw	low STR_42
 13818  01AF84  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 13819  01AF86  0EFD               	movlw	high STR_42
 13820  01AF88  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 13821  01AF8A  0012               	return	
 13822  01AF8C                     l19948:
 13823                           
 13824                           ; BSR set to: 2
 13825                           ;device_IDs.c: 49: return "PIC18F27K40";
 13826  01AF8C  0EAB               	movlw	low STR_43
 13827  01AF8E  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 13828  01AF90  0EFD               	movlw	high STR_43
 13829  01AF92  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 13830  01AF94  0012               	return	
 13831  01AF96                     l19954:
 13832                           
 13833                           ; BSR set to: 2
 13834                           ;device_IDs.c: 53: return "PIC18F47K40";
 13835  01AF96  0EB7               	movlw	low STR_44
 13836  01AF98  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 13837  01AF9A  0EFD               	movlw	high STR_44
 13838  01AF9C  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 13839  01AF9E  0012               	return	
 13840  01AFA0                     l19960:
 13841                           
 13842                           ; BSR set to: 2
 13843                           ;device_IDs.c: 57: return "PIC18LF27K40";
 13844  01AFA0  0E48               	movlw	low STR_45
 13845  01AFA2  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 13846  01AFA4  0EFD               	movlw	high STR_45
 13847  01AFA6  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 13848  01AFA8  0012               	return	
 13849  01AFAA                     l19966:
 13850                           
 13851                           ; BSR set to: 2
 13852                           ;device_IDs.c: 61: return "PIC18LF47K40";
 13853  01AFAA  0E55               	movlw	low STR_46
 13854  01AFAC  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 13855  01AFAE  0EFD               	movlw	high STR_46
 13856  01AFB0  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 13857  01AFB2  0012               	return	
 13858  01AFB4                     l19972:
 13859                           
 13860                           ; BSR set to: 2
 13861                           ;device_IDs.c: 65: return "Undefined";
 13862  01AFB4  0EB9               	movlw	low STR_20
 13863  01AFB6  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 13864  01AFB8  0EFE               	movlw	high STR_20
 13865  01AFBA  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 13866  01AFBC  0012               	return	
 13867  01AFBE                     l19980:
 13868  01AFBE  C20D  F20F         	movff	getDeviceIDString@inputDevID,??_getDeviceIDString
 13869  01AFC2  C20E  F210         	movff	getDeviceIDString@inputDevID+1,??_getDeviceIDString+1
 13870                           
 13871                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
 13872                           ; Switch size 1, requested type "simple"
 13873                           ; Number of cases is 3, Range of values is 105 to 107
 13874                           ; switch strategies available:
 13875                           ; Name         Instructions Cycles
 13876                           ; simple_byte           10     6 (average)
 13877                           ;	Chosen strategy is simple_byte
 13878  01AFC6  0102               	movlb	2	; () banked
 13879  01AFC8  5110               	movf	(??_getDeviceIDString+1)& (0+255),w,b
 13880  01AFCA  0A69               	xorlw	105	; case 105
 13881  01AFCC  B4D8               	btfsc	status,2,c
 13882  01AFCE  D007               	goto	l22688
 13883  01AFD0  0A03               	xorlw	3	; case 106
 13884  01AFD2  B4D8               	btfsc	status,2,c
 13885  01AFD4  D00F               	goto	l22690
 13886  01AFD6  0A01               	xorlw	1	; case 107
 13887  01AFD8  B4D8               	btfsc	status,2,c
 13888  01AFDA  D014               	goto	l22692
 13889  01AFDC  D7EB               	goto	l19972
 13890  01AFDE                     l22688:
 13891                           
 13892                           ; BSR set to: 2
 13893                           ; Switch size 1, requested type "simple"
 13894                           ; Number of cases is 3, Range of values is 0 to 224
 13895                           ; switch strategies available:
 13896                           ; Name         Instructions Cycles
 13897                           ; simple_byte           10     6 (average)
 13898                           ;	Chosen strategy is simple_byte
 13899  01AFDE  510F               	movf	??_getDeviceIDString& (0+255),w,b
 13900  01AFE0  0A00               	xorlw	0	; case 0
 13901  01AFE2  B4D8               	btfsc	status,2,c
 13902  01AFE4  D7D8               	goto	l19954
 13903  01AFE6  0A60               	xorlw	96	; case 96
 13904  01AFE8  B4D8               	btfsc	status,2,c
 13905  01AFEA  D7D0               	goto	l19948
 13906  01AFEC  0A80               	xorlw	128	; case 224
 13907  01AFEE  B4D8               	btfsc	status,2,c
 13908  01AFF0  D7DC               	goto	l19966
 13909  01AFF2  D7E0               	goto	l19972
 13910  01AFF4                     l22690:
 13911                           
 13912                           ; BSR set to: 2
 13913                           ; Switch size 1, requested type "simple"
 13914                           ; Number of cases is 2, Range of values is 64 to 192
 13915                           ; switch strategies available:
 13916                           ; Name         Instructions Cycles
 13917                           ; simple_byte            7     4 (average)
 13918                           ;	Chosen strategy is simple_byte
 13919  01AFF4  510F               	movf	??_getDeviceIDString& (0+255),w,b
 13920  01AFF6  0A40               	xorlw	64	; case 64
 13921  01AFF8  B4D8               	btfsc	status,2,c
 13922  01AFFA  D7D2               	goto	l19960
 13923  01AFFC  0A80               	xorlw	128	; case 192
 13924  01AFFE  B4D8               	btfsc	status,2,c
 13925  01B000  D7BB               	goto	l19936
 13926  01B002  D7D8               	goto	l19972
 13927  01B004                     l22692:
 13928                           
 13929                           ; BSR set to: 2
 13930                           ; Switch size 1, requested type "simple"
 13931                           ; Number of cases is 1, Range of values is 32 to 32
 13932                           ; switch strategies available:
 13933                           ; Name         Instructions Cycles
 13934                           ; simple_byte            4     3 (average)
 13935                           ;	Chosen strategy is simple_byte
 13936  01B004  510F               	movf	??_getDeviceIDString& (0+255),w,b
 13937  01B006  0A20               	xorlw	32	; case 32
 13938  01B008  B4D8               	btfsc	status,2,c
 13939  01B00A  D7BB               	goto	l19942
 13940  01B00C  D7D3               	goto	l19972
 13941  01B00E                     __end_of_getDeviceIDString:
 13942                           	opt callstack 0
 13943                           
 13944 ;; *************** function _getCauseOfResetString *****************
 13945 ;; Defined at:
 13946 ;;		line 87 in file "cause_of_reset.c"
 13947 ;; Parameters:    Size  Location     Type
 13948 ;;  r               1    wreg     enum E9577
 13949 ;; Auto vars:     Size  Location     Type
 13950 ;;  r               1    2[BANK2 ] enum E9577
 13951 ;; Return value:  Size  Location     Type
 13952 ;;                  2    0[BANK2 ] PTR inline unsigned char
 13953 ;; Registers used:
 13954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13955 ;; Tracked objects:
 13956 ;;		On entry : 0/0
 13957 ;;		On exit  : 0/0
 13958 ;;		Unchanged: 0/0
 13959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13960 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13961 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13963 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13964 ;;Total ram usage:        3 bytes
 13965 ;; Hardware stack levels used:    1
 13966 ;; Hardware stack levels required when called:   11
 13967 ;; This function calls:
 13968 ;;		Nothing
 13969 ;; This function is called by:
 13970 ;;		_main
 13971 ;;		_ringBufferLUT
 13972 ;; This function uses a non-reentrant model
 13973 ;;
 13974                           
 13975                           	psect	text14
 13976  01C306                     __ptext14:
 13977                           	opt callstack 0
 13978  01C306                     _getCauseOfResetString:
 13979                           	opt callstack 17
 13980                           
 13981                           ; BSR set to: 2
 13982                           ;incstack = 0
 13983                           ;getCauseOfResetString@r stored from wreg
 13984  01C306  0102               	movlb	2	; () banked
 13985  01C308  6F02               	movwf	getCauseOfResetString@r& (0+255),b
 13986                           
 13987                           ;cause_of_reset.c: 90: static char *strings[] = {;cause_of_reset.c: 91: "Undefined Reset
      +                          ",;cause_of_reset.c: 92: "Power On Reset",;cause_of_reset.c: 93: "Brown Out Reset",;caus
      +                          e_of_reset.c: 94: "Master Clear Reset",;cause_of_reset.c: 95: "Watch Dog Timer Violation
      +                           Reset",;cause_of_reset.c: 96: "Windowed Watch Dog Timer Violation Reset",;cause_of_rese
      +                          t.c: 97: "RESET Instruction Executed",;cause_of_reset.c: 98: "Stack Overflow Reset",;cau
      +                          se_of_reset.c: 99: "Stack Underflow Reset",;cause_of_reset.c: 100: };;cause_of_reset.c: 
      +                          103: if (r <= 8) {
 13988  01C30A  0E09               	movlw	9
 13989  01C30C  0102               	movlb	2	; () banked
 13990  01C30E  6102               	cpfslt	getCauseOfResetString@r& (0+255),b
 13991  01C310  D00D               	goto	l19908
 13992                           
 13993                           ; BSR set to: 2
 13994                           ;cause_of_reset.c: 105: return strings[r];
 13995  01C312  5102               	movf	getCauseOfResetString@r& (0+255),w,b
 13996  01C314  0D02               	mullw	2
 13997  01C316  0EA3               	movlw	low getCauseOfResetString@strings
 13998  01C318  24F3               	addwf	prodl,w,c
 13999  01C31A  6ED9               	movwf	fsr2l,c
 14000  01C31C  0E01               	movlw	high getCauseOfResetString@strings
 14001  01C31E  20F4               	addwfc	prodh,w,c
 14002  01C320  6EDA               	movwf	fsr2h,c
 14003  01C322  CFDE F200          	movff	postinc2,?_getCauseOfResetString
 14004  01C326  CFDD F201          	movff	postdec2,?_getCauseOfResetString+1
 14005  01C32A  0012               	return	
 14006  01C32C                     l19908:
 14007                           
 14008                           ; BSR set to: 2
 14009                           ;cause_of_reset.c: 109: else {;cause_of_reset.c: 111: return "Undefined Reset";
 14010  01C32C  0EA1               	movlw	low STR_21
 14011  01C32E  6F00               	movwf	?_getCauseOfResetString& (0+255),b
 14012  01C330  0EFB               	movlw	high STR_21
 14013  01C332  6F01               	movwf	(?_getCauseOfResetString+1)& (0+255),b
 14014                           
 14015                           ; BSR set to: 2
 14016  01C334  0012               	return		;funcret
 14017  01C336                     __end_of_getCauseOfResetString:
 14018                           	opt callstack 0
 14019                           
 14020 ;; *************** function _clearUARTErrors *****************
 14021 ;; Defined at:
 14022 ;;		line 85 in file "error_handling.c"
 14023 ;; Parameters:    Size  Location     Type
 14024 ;;		None
 14025 ;; Auto vars:     Size  Location     Type
 14026 ;;		None
 14027 ;; Return value:  Size  Location     Type
 14028 ;;                  1    wreg      void 
 14029 ;; Registers used:
 14030 ;;		wreg, status,2, status,0, cstack
 14031 ;; Tracked objects:
 14032 ;;		On entry : 0/0
 14033 ;;		On exit  : 0/0
 14034 ;;		Unchanged: 0/0
 14035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14040 ;;Total ram usage:        0 bytes
 14041 ;; Hardware stack levels used:    1
 14042 ;; Hardware stack levels required when called:   13
 14043 ;; This function calls:
 14044 ;;		_updateErrorLEDs
 14045 ;; This function is called by:
 14046 ;;		_ringBufferLUT
 14047 ;; This function uses a non-reentrant model
 14048 ;;
 14049                           
 14050                           	psect	text15
 14051  01CA82                     __ptext15:
 14052                           	opt callstack 0
 14053  01CA82                     _clearUARTErrors:
 14054                           	opt callstack 15
 14055                           
 14056                           ;error_handling.c: 88: error_handler.USB_UART_COMM_error_flag = 0;
 14057                           
 14058                           ; BSR set to: 2
 14059                           ;incstack = 0
 14060  01CA82  0E00               	movlw	0
 14061  01CA84  0100               	movlb	0	; () banked
 14062  01CA86  6FC0               	movwf	(_error_handler+7)& (0+255),b
 14063                           
 14064                           ; BSR set to: 0
 14065                           ;error_handling.c: 90: updateErrorLEDs();
 14066  01CA88  EC87  F0DE         	call	_updateErrorLEDs	;wreg free
 14067  01CA8C  0012               	return		;funcret
 14068  01CA8E                     __end_of_clearUARTErrors:
 14069                           	opt callstack 0
 14070                           
 14071 ;; *************** function _clearI2CErrors *****************
 14072 ;; Defined at:
 14073 ;;		line 95 in file "error_handling.c"
 14074 ;; Parameters:    Size  Location     Type
 14075 ;;		None
 14076 ;; Auto vars:     Size  Location     Type
 14077 ;;		None
 14078 ;; Return value:  Size  Location     Type
 14079 ;;                  1    wreg      void 
 14080 ;; Registers used:
 14081 ;;		wreg, status,2, status,0, cstack
 14082 ;; Tracked objects:
 14083 ;;		On entry : 0/0
 14084 ;;		On exit  : 0/0
 14085 ;;		Unchanged: 0/0
 14086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14091 ;;Total ram usage:        0 bytes
 14092 ;; Hardware stack levels used:    1
 14093 ;; Hardware stack levels required when called:   13
 14094 ;; This function calls:
 14095 ;;		_updateErrorLEDs
 14096 ;; This function is called by:
 14097 ;;		_ringBufferLUT
 14098 ;; This function uses a non-reentrant model
 14099 ;;
 14100                           
 14101                           	psect	text16
 14102  01C768                     __ptext16:
 14103                           	opt callstack 0
 14104  01C768                     _clearI2CErrors:
 14105                           	opt callstack 15
 14106                           
 14107                           ;error_handling.c: 97: error_handler.I2C_Ambient_Temp_Sense_error_flag = 0;
 14108                           
 14109                           ;incstack = 0
 14110  01C768  0E00               	movlw	0
 14111  01C76A  0100               	movlb	0	; () banked
 14112  01C76C  6FBF               	movwf	(_error_handler+6)& (0+255),b
 14113                           
 14114                           ;error_handling.c: 98: error_handler.I2C_General_error_flag = 0;
 14115  01C76E  0E00               	movlw	0
 14116  01C770  6FBB               	movwf	(_error_handler+2)& (0+255),b
 14117                           
 14118                           ;error_handling.c: 99: error_handler.I2C_OLED_error_flag = 0;
 14119  01C772  0E00               	movlw	0
 14120  01C774  6FBC               	movwf	(_error_handler+3)& (0+255),b
 14121                           
 14122                           ;error_handling.c: 100: error_handler.I2C_POS5_Temp_Sense_error_flag = 0;
 14123  01C776  0E00               	movlw	0
 14124  01C778  6FBE               	movwf	(_error_handler+5)& (0+255),b
 14125                           
 14126                           ;error_handling.c: 101: error_handler.I2C_QI_Temp_Sense_error_flag = 0;
 14127  01C77A  0E00               	movlw	0
 14128  01C77C  6FBD               	movwf	(_error_handler+4)& (0+255),b
 14129                           
 14130                           ; BSR set to: 0
 14131                           ;error_handling.c: 103: updateErrorLEDs();
 14132  01C77E  EC87  F0DE         	call	_updateErrorLEDs	;wreg free
 14133  01C782  0012               	return		;funcret
 14134  01C784                     __end_of_clearI2CErrors:
 14135                           	opt callstack 0
 14136                           
 14137 ;; *************** function _clearADCErrors *****************
 14138 ;; Defined at:
 14139 ;;		line 74 in file "error_handling.c"
 14140 ;; Parameters:    Size  Location     Type
 14141 ;;		None
 14142 ;; Auto vars:     Size  Location     Type
 14143 ;;		None
 14144 ;; Return value:  Size  Location     Type
 14145 ;;                  1    wreg      void 
 14146 ;; Registers used:
 14147 ;;		wreg, status,2, status,0, cstack
 14148 ;; Tracked objects:
 14149 ;;		On entry : 0/0
 14150 ;;		On exit  : 0/0
 14151 ;;		Unchanged: 0/0
 14152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14157 ;;Total ram usage:        0 bytes
 14158 ;; Hardware stack levels used:    1
 14159 ;; Hardware stack levels required when called:   13
 14160 ;; This function calls:
 14161 ;;		_updateErrorLEDs
 14162 ;; This function is called by:
 14163 ;;		_ringBufferLUT
 14164 ;; This function uses a non-reentrant model
 14165 ;;
 14166                           
 14167                           	psect	text17
 14168  01C964                     __ptext17:
 14169                           	opt callstack 0
 14170  01C964                     _clearADCErrors:
 14171                           	opt callstack 15
 14172                           
 14173                           ;error_handling.c: 77: error_handler.FVR_ADC_error_flag = 0;
 14174                           
 14175                           ;incstack = 0
 14176  01C964  0E00               	movlw	0
 14177  01C966  0100               	movlb	0	; () banked
 14178  01C968  6FB9               	movwf	_error_handler& (0+255),b
 14179                           
 14180                           ;error_handling.c: 78: error_handler.ADC_general_error_flag = 0;
 14181  01C96A  0E00               	movlw	0
 14182  01C96C  6FBA               	movwf	(_error_handler+1)& (0+255),b
 14183                           
 14184                           ; BSR set to: 0
 14185                           ;error_handling.c: 80: updateErrorLEDs();
 14186  01C96E  EC87  F0DE         	call	_updateErrorLEDs	;wreg free
 14187  01C972  0012               	return		;funcret
 14188  01C974                     __end_of_clearADCErrors:
 14189                           	opt callstack 0
 14190                           
 14191 ;; *************** function _updateErrorLEDs *****************
 14192 ;; Defined at:
 14193 ;;		line 60 in file "error_handling.c"
 14194 ;; Parameters:    Size  Location     Type
 14195 ;;		None
 14196 ;; Auto vars:     Size  Location     Type
 14197 ;;		None
 14198 ;; Return value:  Size  Location     Type
 14199 ;;                  1    wreg      void 
 14200 ;; Registers used:
 14201 ;;		wreg, status,2, status,0, cstack
 14202 ;; Tracked objects:
 14203 ;;		On entry : 0/0
 14204 ;;		On exit  : 0/0
 14205 ;;		Unchanged: 0/0
 14206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14209 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14210 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14211 ;;Total ram usage:        1 bytes
 14212 ;; Hardware stack levels used:    1
 14213 ;; Hardware stack levels required when called:   12
 14214 ;; This function calls:
 14215 ;;		_getADCError
 14216 ;;		_getI2CError
 14217 ;;		_getUARTError
 14218 ;; This function is called by:
 14219 ;;		_main
 14220 ;;		_clearADCErrors
 14221 ;;		_clearUARTErrors
 14222 ;;		_clearI2CErrors
 14223 ;; This function uses a non-reentrant model
 14224 ;;
 14225                           
 14226                           	psect	text18
 14227  01BD0E                     __ptext18:
 14228                           	opt callstack 0
 14229  01BD0E                     _updateErrorLEDs:
 14230                           	opt callstack 18
 14231                           
 14232                           ;error_handling.c: 63: LATBbits.LATB7 = getADCError();
 14233                           
 14234                           ;incstack = 0
 14235  01BD0E  EC3A  F0E4         	call	_getADCError	;wreg free
 14236  01BD12  0102               	movlb	2	; () banked
 14237  01BD14  6F00               	movwf	??_updateErrorLEDs& (0+255),b
 14238  01BD16  3300               	rrcf	??_updateErrorLEDs& (0+255),f,b
 14239  01BD18  3300               	rrcf	??_updateErrorLEDs& (0+255),f,b
 14240  01BD1A  5084               	movf	3972,w,c	;volatile
 14241  01BD1C  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 14242  01BD1E  0B7F               	andlw	-129
 14243  01BD20  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 14244  01BD22  6E84               	movwf	3972,c	;volatile
 14245                           
 14246                           ;error_handling.c: 66: LATCbits.LATC5 = getI2CError();
 14247  01BD24  EC65  F0E2         	call	_getI2CError	;wreg free
 14248  01BD28  0102               	movlb	2	; () banked
 14249  01BD2A  6F00               	movwf	??_updateErrorLEDs& (0+255),b
 14250  01BD2C  3B00               	swapf	??_updateErrorLEDs& (0+255),f,b
 14251  01BD2E  4700               	rlncf	??_updateErrorLEDs& (0+255),f,b
 14252  01BD30  5085               	movf	3973,w,c	;volatile
 14253  01BD32  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 14254  01BD34  0BDF               	andlw	-33
 14255  01BD36  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 14256  01BD38  6E85               	movwf	3973,c	;volatile
 14257                           
 14258                           ;error_handling.c: 69: LATCbits.LATC6 = getUARTError();
 14259  01BD3A  EC76  F0E5         	call	_getUARTError	;wreg free
 14260  01BD3E  0102               	movlb	2	; () banked
 14261  01BD40  6F00               	movwf	??_updateErrorLEDs& (0+255),b
 14262  01BD42  3B00               	swapf	??_updateErrorLEDs& (0+255),f,b
 14263  01BD44  4700               	rlncf	??_updateErrorLEDs& (0+255),f,b
 14264  01BD46  4700               	rlncf	??_updateErrorLEDs& (0+255),f,b
 14265  01BD48  5085               	movf	3973,w,c	;volatile
 14266  01BD4A  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 14267  01BD4C  0BBF               	andlw	-65
 14268  01BD4E  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 14269  01BD50  6E85               	movwf	3973,c	;volatile
 14270                           
 14271                           ; BSR set to: 2
 14272  01BD52  0012               	return		;funcret
 14273  01BD54                     __end_of_updateErrorLEDs:
 14274                           	opt callstack 0
 14275                           
 14276 ;; *************** function _getUARTError *****************
 14277 ;; Defined at:
 14278 ;;		line 31 in file "error_handling.c"
 14279 ;; Parameters:    Size  Location     Type
 14280 ;;		None
 14281 ;; Auto vars:     Size  Location     Type
 14282 ;;		None
 14283 ;; Return value:  Size  Location     Type
 14284 ;;                  1    wreg      unsigned char 
 14285 ;; Registers used:
 14286 ;;		wreg, status,2
 14287 ;; Tracked objects:
 14288 ;;		On entry : 0/0
 14289 ;;		On exit  : 0/0
 14290 ;;		Unchanged: 0/0
 14291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14296 ;;Total ram usage:        0 bytes
 14297 ;; Hardware stack levels used:    1
 14298 ;; Hardware stack levels required when called:   11
 14299 ;; This function calls:
 14300 ;;		Nothing
 14301 ;; This function is called by:
 14302 ;;		_updateErrorLEDs
 14303 ;;		_printErrorHandlerStatus
 14304 ;; This function uses a non-reentrant model
 14305 ;;
 14306                           
 14307                           	psect	text19
 14308  01CAEC                     __ptext19:
 14309                           	opt callstack 0
 14310  01CAEC                     _getUARTError:
 14311                           	opt callstack 18
 14312                           
 14313                           ;error_handling.c: 33: return error_handler.USB_UART_COMM_error_flag;
 14314                           
 14315                           ; BSR set to: 2
 14316                           ;incstack = 0
 14317  01CAEC  0100               	movlb	0	; () banked
 14318  01CAEE  51C0               	movf	(_error_handler+7)& (0+255),w,b
 14319                           
 14320                           ; BSR set to: 0
 14321  01CAF0  0012               	return		;funcret
 14322  01CAF2                     __end_of_getUARTError:
 14323                           	opt callstack 0
 14324                           
 14325 ;; *************** function _getI2CError *****************
 14326 ;; Defined at:
 14327 ;;		line 38 in file "error_handling.c"
 14328 ;; Parameters:    Size  Location     Type
 14329 ;;		None
 14330 ;; Auto vars:     Size  Location     Type
 14331 ;;		None
 14332 ;; Return value:  Size  Location     Type
 14333 ;;                  1    wreg      unsigned char 
 14334 ;; Registers used:
 14335 ;;		wreg, status,2
 14336 ;; Tracked objects:
 14337 ;;		On entry : 0/0
 14338 ;;		On exit  : 0/0
 14339 ;;		Unchanged: 0/0
 14340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14345 ;;Total ram usage:        0 bytes
 14346 ;; Hardware stack levels used:    1
 14347 ;; Hardware stack levels required when called:   11
 14348 ;; This function calls:
 14349 ;;		Nothing
 14350 ;; This function is called by:
 14351 ;;		_updateErrorLEDs
 14352 ;;		_printErrorHandlerStatus
 14353 ;; This function uses a non-reentrant model
 14354 ;;
 14355                           
 14356                           	psect	text20
 14357  01C4CA                     __ptext20:
 14358                           	opt callstack 0
 14359  01C4CA                     _getI2CError:
 14360                           	opt callstack 18
 14361                           
 14362                           ;error_handling.c: 41: if ( error_handler.I2C_General_error_flag ||;error_handling.c: 42
      +                          : error_handler.I2C_Ambient_Temp_Sense_error_flag ||;error_handling.c: 43: error_handler
      +                          .I2C_OLED_error_flag ||;error_handling.c: 44: error_handler.I2C_POS5_Temp_Sense_error_fl
      +                          ag ||;error_handling.c: 45: error_handler.I2C_QI_Temp_Sense_error_flag ) {
 14363                           
 14364                           ; BSR set to: 0
 14365                           ;incstack = 0
 14366  01C4CA  0100               	movlb	0	; () banked
 14367  01C4CC  51BB               	movf	(_error_handler+2)& (0+255),w,b
 14368  01C4CE  A4D8               	btfss	status,2,c
 14369  01C4D0  D00C               	goto	u23250
 14370                           
 14371                           ; BSR set to: 0
 14372  01C4D2  51BF               	movf	(_error_handler+6)& (0+255),w,b
 14373  01C4D4  A4D8               	btfss	status,2,c
 14374  01C4D6  D009               	goto	u23250
 14375                           
 14376                           ; BSR set to: 0
 14377  01C4D8  51BC               	movf	(_error_handler+3)& (0+255),w,b
 14378  01C4DA  A4D8               	btfss	status,2,c
 14379  01C4DC  D006               	goto	u23250
 14380                           
 14381                           ; BSR set to: 0
 14382  01C4DE  51BE               	movf	(_error_handler+5)& (0+255),w,b
 14383  01C4E0  A4D8               	btfss	status,2,c
 14384  01C4E2  D003               	goto	u23250
 14385                           
 14386                           ; BSR set to: 0
 14387  01C4E4  51BD               	movf	(_error_handler+4)& (0+255),w,b
 14388  01C4E6  B4D8               	btfsc	status,2,c
 14389  01C4E8  D002               	goto	l18506
 14390  01C4EA                     u23250:
 14391                           
 14392                           ; BSR set to: 0
 14393                           ;error_handling.c: 47: return 1;
 14394  01C4EA  0E01               	movlw	1
 14395  01C4EC  0012               	return	
 14396  01C4EE                     l18506:
 14397                           
 14398                           ; BSR set to: 0
 14399                           ;error_handling.c: 51: else {;error_handling.c: 53: return 0;
 14400  01C4EE  0E00               	movlw	0
 14401                           
 14402                           ; BSR set to: 0
 14403  01C4F0  0012               	return		;funcret
 14404  01C4F2                     __end_of_getI2CError:
 14405                           	opt callstack 0
 14406                           
 14407 ;; *************** function _getADCError *****************
 14408 ;; Defined at:
 14409 ;;		line 12 in file "error_handling.c"
 14410 ;; Parameters:    Size  Location     Type
 14411 ;;		None
 14412 ;; Auto vars:     Size  Location     Type
 14413 ;;		None
 14414 ;; Return value:  Size  Location     Type
 14415 ;;                  1    wreg      unsigned char 
 14416 ;; Registers used:
 14417 ;;		wreg, status,2
 14418 ;; Tracked objects:
 14419 ;;		On entry : 0/0
 14420 ;;		On exit  : 0/0
 14421 ;;		Unchanged: 0/0
 14422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14427 ;;Total ram usage:        0 bytes
 14428 ;; Hardware stack levels used:    1
 14429 ;; Hardware stack levels required when called:   11
 14430 ;; This function calls:
 14431 ;;		Nothing
 14432 ;; This function is called by:
 14433 ;;		_updateErrorLEDs
 14434 ;;		_printErrorHandlerStatus
 14435 ;; This function uses a non-reentrant model
 14436 ;;
 14437                           
 14438                           	psect	text21
 14439  01C874                     __ptext21:
 14440                           	opt callstack 0
 14441  01C874                     _getADCError:
 14442                           	opt callstack 18
 14443                           
 14444                           ;error_handling.c: 15: if ( error_handler.ADC_general_error_flag ||;error_handling.c: 16
      +                          : error_handler.FVR_ADC_error_flag ) {
 14445                           
 14446                           ; BSR set to: 0
 14447                           ;incstack = 0
 14448  01C874  0100               	movlb	0	; () banked
 14449  01C876  51BA               	movf	(_error_handler+1)& (0+255),w,b
 14450  01C878  A4D8               	btfss	status,2,c
 14451  01C87A  D003               	goto	u23200
 14452                           
 14453                           ; BSR set to: 0
 14454  01C87C  51B9               	movf	_error_handler& (0+255),w,b
 14455  01C87E  B4D8               	btfsc	status,2,c
 14456  01C880  D002               	goto	l18482
 14457  01C882                     u23200:
 14458                           
 14459                           ; BSR set to: 0
 14460                           ;error_handling.c: 18: return 1;
 14461  01C882  0E01               	movlw	1
 14462  01C884  0012               	return	
 14463  01C886                     l18482:
 14464                           
 14465                           ; BSR set to: 0
 14466                           ;error_handling.c: 22: else {;error_handling.c: 24: return 0;
 14467  01C886  0E00               	movlw	0
 14468                           
 14469                           ; BSR set to: 0
 14470  01C888  0012               	return		;funcret
 14471  01C88A                     __end_of_getADCError:
 14472                           	opt callstack 0
 14473                           
 14474 ;; *************** function _EUSART2_Read *****************
 14475 ;; Defined at:
 14476 ;;		line 132 in file "mcc_generated_files/eusart2.c"
 14477 ;; Parameters:    Size  Location     Type
 14478 ;;		None
 14479 ;; Auto vars:     Size  Location     Type
 14480 ;;  readValue       1    0[BANK2 ] unsigned char 
 14481 ;; Return value:  Size  Location     Type
 14482 ;;                  1    wreg      unsigned char 
 14483 ;; Registers used:
 14484 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14485 ;; Tracked objects:
 14486 ;;		On entry : 0/0
 14487 ;;		On exit  : 0/0
 14488 ;;		Unchanged: 0/0
 14489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14491 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14493 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14494 ;;Total ram usage:        1 bytes
 14495 ;; Hardware stack levels used:    1
 14496 ;; Hardware stack levels required when called:   11
 14497 ;; This function calls:
 14498 ;;		Nothing
 14499 ;; This function is called by:
 14500 ;;		_terminal_ringBufferPull
 14501 ;;		_getch
 14502 ;; This function uses a non-reentrant model
 14503 ;;
 14504                           
 14505                           	psect	text22
 14506  01BFB0                     __ptext22:
 14507                           	opt callstack 0
 14508  01BFB0                     _EUSART2_Read:
 14509                           	opt callstack 18
 14510                           
 14511                           ;eusart2.c: 136: while(0 == eusart2RxCount)
 14512                           
 14513                           ; BSR set to: 0
 14514                           ;incstack = 0
 14515  01BFB0  D001               	goto	l20722
 14516  01BFB2                     l115:
 14517                           
 14518                           ; BSR set to: 1
 14519  01BFB2  0004               	clrwdt		;# 
 14520  01BFB4                     l20722:
 14521  01BFB4  0101               	movlb	1	; () banked
 14522  01BFB6  518E               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 14523  01BFB8  B4D8               	btfsc	status,2,c
 14524  01BFBA  D7FB               	goto	l115
 14525                           
 14526                           ; BSR set to: 1
 14527                           ;eusart2.c: 139: };eusart2.c: 141: readValue = eusart2RxBuffer[eusart2RxTail++];
 14528  01BFBC  0E80               	movlw	low _eusart2RxBuffer
 14529  01BFBE  258F               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
 14530  01BFC0  6ED9               	movwf	fsr2l,c
 14531  01BFC2  6ADA               	clrf	fsr2h,c
 14532  01BFC4  0E04               	movlw	high _eusart2RxBuffer
 14533  01BFC6  22DA               	addwfc	fsr2h,f,c
 14534  01BFC8  50DF               	movf	indf2,w,c
 14535  01BFCA  0102               	movlb	2	; () banked
 14536  01BFCC  6F00               	movwf	EUSART2_Read@readValue& (0+255),b
 14537                           
 14538                           ; BSR set to: 2
 14539  01BFCE  0101               	movlb	1	; () banked
 14540  01BFD0  2B8F               	incf	_eusart2RxTail& (0+255),f,b	;volatile
 14541                           
 14542                           ; BSR set to: 1
 14543                           ;eusart2.c: 142: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 14544  01BFD2  0E3F               	movlw	63
 14545  01BFD4  658F               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
 14546  01BFD6  D002               	goto	l20732
 14547                           
 14548                           ; BSR set to: 1
 14549                           ;eusart2.c: 143: {;eusart2.c: 144: eusart2RxTail = 0;
 14550  01BFD8  0E00               	movlw	0
 14551  01BFDA  6F8F               	movwf	_eusart2RxTail& (0+255),b	;volatile
 14552  01BFDC                     l20732:
 14553                           
 14554                           ; BSR set to: 1
 14555                           ;eusart2.c: 145: };eusart2.c: 146: PIE3bits.RC2IE = 0;
 14556  01BFDC  010E               	movlb	14	; () banked
 14557  01BFDE  9FC5               	bcf	197,7,b	;volatile
 14558                           
 14559                           ; BSR set to: 14
 14560                           ;eusart2.c: 147: eusart2RxCount--;
 14561  01BFE0  0101               	movlb	1	; () banked
 14562  01BFE2  078E               	decf	_eusart2RxCount& (0+255),f,b	;volatile
 14563                           
 14564                           ; BSR set to: 1
 14565                           ;eusart2.c: 148: PIE3bits.RC2IE = 1;
 14566  01BFE4  010E               	movlb	14	; () banked
 14567  01BFE6  8FC5               	bsf	197,7,b	;volatile
 14568                           
 14569                           ; BSR set to: 14
 14570                           ;eusart2.c: 150: return readValue;
 14571  01BFE8  0102               	movlb	2	; () banked
 14572  01BFEA  5100               	movf	EUSART2_Read@readValue& (0+255),w,b
 14573                           
 14574                           ; BSR set to: 2
 14575  01BFEC  0012               	return		;funcret
 14576  01BFEE                     __end_of_EUSART2_Read:
 14577                           	opt callstack 0
 14578                           
 14579 ;; *************** function _terminalSetCursorHome *****************
 14580 ;; Defined at:
 14581 ;;		line 17 in file "terminal_control.c"
 14582 ;; Parameters:    Size  Location     Type
 14583 ;;		None
 14584 ;; Auto vars:     Size  Location     Type
 14585 ;;		None
 14586 ;; Return value:  Size  Location     Type
 14587 ;;                  1    wreg      void 
 14588 ;; Registers used:
 14589 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14590 ;; Tracked objects:
 14591 ;;		On entry : 0/0
 14592 ;;		On exit  : 0/0
 14593 ;;		Unchanged: 0/0
 14594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14599 ;;Total ram usage:        0 bytes
 14600 ;; Hardware stack levels used:    1
 14601 ;; Hardware stack levels required when called:   15
 14602 ;; This function calls:
 14603 ;;		_printf
 14604 ;; This function is called by:
 14605 ;;		_main
 14606 ;;		_terminalPrintTestMessage
 14607 ;; This function uses a non-reentrant model
 14608 ;;
 14609                           
 14610                           	psect	text23
 14611  01C974                     __ptext23:
 14612                           	opt callstack 0
 14613  01C974                     _terminalSetCursorHome:
 14614                           	opt callstack 15
 14615                           
 14616                           ;terminal_control.c: 18: printf("\033[H");
 14617                           
 14618                           ; BSR set to: 2
 14619                           ;incstack = 0
 14620  01C974  0EBA               	movlw	low STR_191
 14621  01C976  0103               	movlb	3	; () banked
 14622  01C978  6FEB               	movwf	printf@f& (0+255),b
 14623  01C97A  0EFF               	movlw	high STR_191
 14624  01C97C  6FEC               	movwf	(printf@f+1)& (0+255),b
 14625  01C97E  ECF7  F0DF         	call	_printf	;wreg free
 14626  01C982  0012               	return		;funcret
 14627  01C984                     __end_of_terminalSetCursorHome:
 14628                           	opt callstack 0
 14629                           
 14630 ;; *************** function _terminalClearScreen *****************
 14631 ;; Defined at:
 14632 ;;		line 12 in file "terminal_control.c"
 14633 ;; Parameters:    Size  Location     Type
 14634 ;;		None
 14635 ;; Auto vars:     Size  Location     Type
 14636 ;;		None
 14637 ;; Return value:  Size  Location     Type
 14638 ;;                  1    wreg      void 
 14639 ;; Registers used:
 14640 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14641 ;; Tracked objects:
 14642 ;;		On entry : 0/0
 14643 ;;		On exit  : 0/0
 14644 ;;		Unchanged: 0/0
 14645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14650 ;;Total ram usage:        0 bytes
 14651 ;; Hardware stack levels used:    1
 14652 ;; Hardware stack levels required when called:   15
 14653 ;; This function calls:
 14654 ;;		_printf
 14655 ;; This function is called by:
 14656 ;;		_main
 14657 ;;		_terminalPrintTestMessage
 14658 ;; This function uses a non-reentrant model
 14659 ;;
 14660                           
 14661                           	psect	text24
 14662  01C984                     __ptext24:
 14663                           	opt callstack 0
 14664  01C984                     _terminalClearScreen:
 14665                           	opt callstack 15
 14666                           
 14667                           ;terminal_control.c: 13: printf("\033[2J");
 14668                           
 14669                           ;incstack = 0
 14670  01C984  0E94               	movlw	low STR_190
 14671  01C986  0103               	movlb	3	; () banked
 14672  01C988  6FEB               	movwf	printf@f& (0+255),b
 14673  01C98A  0EFF               	movlw	high STR_190
 14674  01C98C  6FEC               	movwf	(printf@f+1)& (0+255),b
 14675  01C98E  ECF7  F0DF         	call	_printf	;wreg free
 14676  01C992  0012               	return		;funcret
 14677  01C994                     __end_of_terminalClearScreen:
 14678                           	opt callstack 0
 14679                           
 14680 ;; *************** function _printf *****************
 14681 ;; Defined at:
 14682 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\printf.c"
 14683 ;; Parameters:    Size  Location     Type
 14684 ;;  f               2   26[BANK3 ] PTR const unsigned char 
 14685 ;;		 -> STR_357(60), STR_356(24), STR_355(24), STR_354(24), 
 14686 ;;		 -> STR_353(27), STR_352(20), STR_351(35), STR_350(34), 
 14687 ;;		 -> STR_349(37), STR_348(34), STR_347(36), STR_346(35), 
 14688 ;;		 -> STR_345(33), STR_344(35), STR_343(20), STR_342(23), 
 14689 ;;		 -> STR_341(20), STR_340(22), STR_339(21), STR_338(19), 
 14690 ;;		 -> STR_337(21), STR_336(27), STR_335(18), STR_334(11), 
 14691 ;;		 -> terminalTextAttributes@print_string(16), STR_304(4), STR_303(4), STR_302(4), 
 14692 ;;		 -> STR_301(4), STR_300(5), STR_292(3), STR_291(39), 
 14693 ;;		 -> STR_290(96), STR_289(62), STR_288(34), STR_287(3), 
 14694 ;;		 -> STR_286(50), STR_285(56), STR_284(55), STR_283(27), 
 14695 ;;		 -> STR_282(3), STR_281(58), STR_280(40), STR_279(63), 
 14696 ;;		 -> STR_278(42), STR_277(36), STR_276(3), STR_275(61), 
 14697 ;;		 -> STR_274(3), STR_273(59), STR_272(3), STR_271(45), 
 14698 ;;		 -> STR_270(3), STR_269(58), STR_268(59), STR_267(20), 
 14699 ;;		 -> STR_266(3), STR_265(54), STR_264(52), STR_263(23), 
 14700 ;;		 -> STR_262(3), STR_261(43), STR_260(44), STR_259(23), 
 14701 ;;		 -> STR_258(48), STR_257(3), STR_256(50), STR_255(58), 
 14702 ;;		 -> STR_254(35), STR_253(32), STR_252(64), STR_251(30), 
 14703 ;;		 -> STR_250(31), STR_249(63), STR_248(33), STR_247(35), 
 14704 ;;		 -> STR_246(37), STR_245(40), STR_244(28), STR_243(46), 
 14705 ;;		 -> STR_242(31), STR_241(52), STR_240(14), STR_239(28), 
 14706 ;;		 -> STR_238(50), STR_237(29), STR_236(45), STR_235(88), 
 14707 ;;		 -> STR_234(37), STR_233(3), STR_232(30), STR_231(46), 
 14708 ;;		 -> STR_230(39), STR_229(62), STR_228(57), STR_227(559), 
 14709 ;;		 -> STR_226(22), STR_225(3), STR_223(3), STR_222(47), 
 14710 ;;		 -> STR_221(3), STR_218(24), STR_216(23), STR_214(23), 
 14711 ;;		 -> STR_212(3), STR_211(3), STR_210(54), STR_209(3), 
 14712 ;;		 -> STR_208(56), STR_207(3), STR_206(60), STR_205(61), 
 14713 ;;		 -> STR_204(3), STR_203(62), STR_202(3), STR_201(50), 
 14714 ;;		 -> STR_200(3), STR_199(45), STR_198(3), STR_196(54), 
 14715 ;;		 -> STR_194(4), STR_193(5), STR_191(4), STR_190(5), 
 14716 ;;		 -> STR_10(47), STR_9(30), STR_8(46), STR_7(39), 
 14717 ;;		 -> STR_6(62), STR_5(57), STR_4(39), STR_3(44), 
 14718 ;;		 -> STR_2(52), STR_1(4), 
 14719 ;; Auto vars:     Size  Location     Type
 14720 ;;  pb              5   36[BANK3 ] struct __prbuf
 14721 ;;  ap              2   34[BANK3 ] PTR void [1]
 14722 ;;		 -> ?_sprintf(2), ?_printf(2), 
 14723 ;; Return value:  Size  Location     Type
 14724 ;;                  2   26[BANK3 ] int 
 14725 ;; Registers used:
 14726 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14727 ;; Tracked objects:
 14728 ;;		On entry : 0/0
 14729 ;;		On exit  : 0/0
 14730 ;;		Unchanged: 0/0
 14731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14732 ;;      Params:         0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0       0       0
 14733 ;;      Locals:         0       0       0       0       7       0       0       0       0       0       0       0       
      +0       0       0       0
 14734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14735 ;;      Totals:         0       0       0       0      15       0       0       0       0       0       0       0       
      +0       0       0       0
 14736 ;;Total ram usage:       15 bytes
 14737 ;; Hardware stack levels used:    1
 14738 ;; Hardware stack levels required when called:   14
 14739 ;; This function calls:
 14740 ;;		__doprnt
 14741 ;; This function is called by:
 14742 ;;		_main
 14743 ;;		_ringBufferLUT
 14744 ;;		_printErrorHandlerStatus
 14745 ;;		_printCurrentMeasurements
 14746 ;;		_terminalClearScreen
 14747 ;;		_terminalSetCursorHome
 14748 ;;		_terminalTextAttributes
 14749 ;;		_terminalTextAttributesReset
 14750 ;;		_terminalClearLine
 14751 ;;		_terminalSaveCursor
 14752 ;;		_terminalReturnCursor
 14753 ;;		_terminalPrintTestMessage
 14754 ;; This function uses a non-reentrant model
 14755 ;;
 14756                           
 14757                           	psect	text25
 14758  01BFEE                     __ptext25:
 14759                           	opt callstack 0
 14760  01BFEE                     _printf:
 14761                           	opt callstack 13
 14762                           
 14763                           ;incstack = 0
 14764  01BFEE  0E00               	movlw	0
 14765  01BFF0  0103               	movlb	3	; () banked
 14766  01BFF2  6FF5               	movwf	printf@pb& (0+255),b
 14767  01BFF4  0E00               	movlw	0
 14768  01BFF6  6FF6               	movwf	(printf@pb+1)& (0+255),b
 14769  01BFF8  0ECC               	movlw	low _putch
 14770  01BFFA  6FF7               	movwf	(printf@pb+2)& (0+255),b
 14771  01BFFC  0EC8               	movlw	high _putch
 14772  01BFFE  6FF8               	movwf	(printf@pb+3)& (0+255),b
 14773  01C000  0E01               	movlw	low (_putch shr (0+16))
 14774  01C002  6FF9               	movwf	(printf@pb+4)& (0+255),b
 14775  01C004  0EED               	movlw	low (?_printf+2)
 14776  01C006  6FF3               	movwf	printf@ap& (0+255),b
 14777  01C008  0E03               	movlw	high (?_printf+2)
 14778  01C00A  6FF4               	movwf	(printf@ap+1)& (0+255),b
 14779                           
 14780                           ; BSR set to: 3
 14781                           ;	Return value of _printf is never used
 14782  01C00C  0EF5               	movlw	low printf@pb
 14783  01C00E  0102               	movlb	2	; () banked
 14784  01C010  6F58               	movwf	__doprnt@pb& (0+255),b
 14785  01C012  0E03               	movlw	high printf@pb
 14786  01C014  6F59               	movwf	(__doprnt@pb+1)& (0+255),b
 14787  01C016  C3EB  F25A         	movff	printf@f,__doprnt@f
 14788  01C01A  C3EC  F25B         	movff	printf@f+1,__doprnt@f+1
 14789  01C01E  0EF3               	movlw	low printf@ap
 14790  01C020  6F5C               	movwf	__doprnt@ap& (0+255),b
 14791  01C022  0E03               	movlw	high printf@ap
 14792  01C024  6F5D               	movwf	(__doprnt@ap+1)& (0+255),b
 14793  01C026  EC00  F080         	call	__doprnt	;wreg free
 14794  01C02A  0012               	return		;funcret
 14795  01C02C                     __end_of_printf:
 14796                           	opt callstack 0
 14797                           
 14798 ;; *************** function _getCauseOfReset *****************
 14799 ;; Defined at:
 14800 ;;		line 11 in file "cause_of_reset.c"
 14801 ;; Parameters:    Size  Location     Type
 14802 ;;		None
 14803 ;; Auto vars:     Size  Location     Type
 14804 ;;  return_reset    1    0[BANK2 ] enum E9577
 14805 ;; Return value:  Size  Location     Type
 14806 ;;                  1    wreg      enum E10203
 14807 ;; Registers used:
 14808 ;;		wreg, status,2
 14809 ;; Tracked objects:
 14810 ;;		On entry : 0/0
 14811 ;;		On exit  : 0/0
 14812 ;;		Unchanged: 0/0
 14813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14815 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14817 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14818 ;;Total ram usage:        1 bytes
 14819 ;; Hardware stack levels used:    1
 14820 ;; Hardware stack levels required when called:   11
 14821 ;; This function calls:
 14822 ;;		Nothing
 14823 ;; This function is called by:
 14824 ;;		_main
 14825 ;; This function uses a non-reentrant model
 14826 ;;
 14827                           
 14828                           	psect	text26
 14829  01B8B4                     __ptext26:
 14830                           	opt callstack 0
 14831  01B8B4                     _getCauseOfReset:
 14832                           	opt callstack 19
 14833                           
 14834                           ;cause_of_reset.c: 13: reset_t return_reset_cause;;cause_of_reset.c: 18: if (PCON0bits.S
      +                          TKOVF == 1) {
 14835                           
 14836                           ;incstack = 0
 14837  01B8B4  AED7               	btfss	4055,7,c	;volatile
 14838  01B8B6  D002               	goto	l1562
 14839                           
 14840                           ;cause_of_reset.c: 20: return_reset_cause = Stack_Overflow_Reset;
 14841  01B8B8  0E07               	movlw	7
 14842  01B8BA  D01D               	goto	L2
 14843  01B8BC                     l1562:
 14844                           
 14845                           ;cause_of_reset.c: 24: else if (PCON0bits.STKUNF == 1) {
 14846  01B8BC  ACD7               	btfss	4055,6,c	;volatile
 14847  01B8BE  D002               	goto	l1564
 14848                           
 14849                           ;cause_of_reset.c: 26: return_reset_cause = Stack_Underflow_Reset;
 14850  01B8C0  0E08               	movlw	8
 14851  01B8C2  D019               	goto	L2
 14852  01B8C4                     l1564:
 14853                           
 14854                           ;cause_of_reset.c: 30: else if (PCON0bits.nWDTWV == 0) {
 14855  01B8C4  BAD7               	btfsc	4055,5,c	;volatile
 14856  01B8C6  D002               	goto	l1566
 14857                           
 14858                           ;cause_of_reset.c: 32: return_reset_cause = Windowed_Watch_Dog_Timer_Reset;
 14859  01B8C8  0E05               	movlw	5
 14860  01B8CA  D015               	goto	L2
 14861  01B8CC                     l1566:
 14862                           
 14863                           ;cause_of_reset.c: 36: else if (PCON0bits.nRWDT == 0) {
 14864  01B8CC  B8D7               	btfsc	4055,4,c	;volatile
 14865  01B8CE  D002               	goto	l1568
 14866                           
 14867                           ;cause_of_reset.c: 38: return_reset_cause = Watch_Dog_Timer_Reset;
 14868  01B8D0  0E04               	movlw	4
 14869  01B8D2  D011               	goto	L2
 14870  01B8D4                     l1568:
 14871                           
 14872                           ;cause_of_reset.c: 42: else if (PCON0bits.nRMCLR == 0) {
 14873  01B8D4  B6D7               	btfsc	4055,3,c	;volatile
 14874  01B8D6  D002               	goto	l1570
 14875                           
 14876                           ;cause_of_reset.c: 44: return_reset_cause = Master_Clear_Reset;
 14877  01B8D8  0E03               	movlw	3
 14878  01B8DA  D00D               	goto	L2
 14879  01B8DC                     l1570:
 14880                           
 14881                           ;cause_of_reset.c: 48: else if (PCON0bits.nRI == 0) {
 14882  01B8DC  B4D7               	btfsc	4055,2,c	;volatile
 14883  01B8DE  D002               	goto	l1572
 14884                           
 14885                           ;cause_of_reset.c: 50: return_reset_cause = RESET_Instruction_Executed;
 14886  01B8E0  0E06               	movlw	6
 14887  01B8E2  D009               	goto	L2
 14888  01B8E4                     l1572:
 14889                           
 14890                           ;cause_of_reset.c: 54: else if (PCON0bits.nPOR == 0) {
 14891  01B8E4  B2D7               	btfsc	4055,1,c	;volatile
 14892  01B8E6  D002               	goto	l1574
 14893                           
 14894                           ;cause_of_reset.c: 56: return_reset_cause = Power_On_Reset;
 14895  01B8E8  0E01               	movlw	1
 14896  01B8EA  D005               	goto	L2
 14897  01B8EC                     l1574:
 14898                           
 14899                           ;cause_of_reset.c: 60: else if (PCON0bits.nBOR == 0) {
 14900  01B8EC  B0D7               	btfsc	4055,0,c	;volatile
 14901  01B8EE  D002               	goto	l21606
 14902                           
 14903                           ;cause_of_reset.c: 62: return_reset_cause = Brown_Out_Reset;
 14904  01B8F0  0E02               	movlw	2
 14905  01B8F2  D001               	goto	L2
 14906  01B8F4                     l21606:
 14907                           
 14908                           ;cause_of_reset.c: 66: else {;cause_of_reset.c: 68: return_reset_cause = Undefined_Reset
      +                          ;
 14909  01B8F4  0E00               	movlw	0
 14910  01B8F6                     L2:
 14911  01B8F6  0102               	movlb	2	; () banked
 14912  01B8F8  6F00               	movwf	getCauseOfReset@return_reset_cause& (0+255),b
 14913                           
 14914                           ; BSR set to: 2
 14915                           ;cause_of_reset.c: 70: };cause_of_reset.c: 73: PCON0bits.STKOVF = 0;
 14916  01B8FA  9ED7               	bcf	4055,7,c	;volatile
 14917                           
 14918                           ; BSR set to: 2
 14919                           ;cause_of_reset.c: 74: PCON0bits.STKUNF = 0;
 14920  01B8FC  9CD7               	bcf	4055,6,c	;volatile
 14921                           
 14922                           ; BSR set to: 2
 14923                           ;cause_of_reset.c: 75: PCON0bits.nWDTWV = 1;
 14924  01B8FE  8AD7               	bsf	4055,5,c	;volatile
 14925                           
 14926                           ; BSR set to: 2
 14927                           ;cause_of_reset.c: 76: PCON0bits.nRWDT = 1;
 14928  01B900  88D7               	bsf	4055,4,c	;volatile
 14929                           
 14930                           ; BSR set to: 2
 14931                           ;cause_of_reset.c: 77: PCON0bits.nRMCLR = 1;
 14932  01B902  86D7               	bsf	4055,3,c	;volatile
 14933                           
 14934                           ; BSR set to: 2
 14935                           ;cause_of_reset.c: 78: PCON0bits.nRI = 1;
 14936  01B904  84D7               	bsf	4055,2,c	;volatile
 14937                           
 14938                           ; BSR set to: 2
 14939                           ;cause_of_reset.c: 79: PCON0bits.nPOR = 1;
 14940  01B906  82D7               	bsf	4055,1,c	;volatile
 14941                           
 14942                           ; BSR set to: 2
 14943                           ;cause_of_reset.c: 80: PCON0bits.nBOR = 1;
 14944  01B908  80D7               	bsf	4055,0,c	;volatile
 14945                           
 14946                           ;cause_of_reset.c: 82: return return_reset_cause;
 14947  01B90A  5100               	movf	getCauseOfReset@return_reset_cause& (0+255),w,b
 14948                           
 14949                           ; BSR set to: 2
 14950  01B90C  0012               	return		;funcret
 14951  01B90E                     __end_of_getCauseOfReset:
 14952                           	opt callstack 0
 14953                           
 14954 ;; *************** function _freqMeasStartCaptures *****************
 14955 ;; Defined at:
 14956 ;;		line 5 in file "freq_meas.c"
 14957 ;; Parameters:    Size  Location     Type
 14958 ;;		None
 14959 ;; Auto vars:     Size  Location     Type
 14960 ;;		None
 14961 ;; Return value:  Size  Location     Type
 14962 ;;                  1    wreg      void 
 14963 ;; Registers used:
 14964 ;;		wreg, status,2
 14965 ;; Tracked objects:
 14966 ;;		On entry : 0/0
 14967 ;;		On exit  : 0/0
 14968 ;;		Unchanged: 0/0
 14969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14974 ;;Total ram usage:        0 bytes
 14975 ;; Hardware stack levels used:    1
 14976 ;; Hardware stack levels required when called:   11
 14977 ;; This function calls:
 14978 ;;		Nothing
 14979 ;; This function is called by:
 14980 ;;		_main
 14981 ;; This function uses a non-reentrant model
 14982 ;;
 14983                           
 14984                           	psect	text27
 14985  01CAB2                     __ptext27:
 14986                           	opt callstack 0
 14987  01CAB2                     _freqMeasStartCaptures:
 14988                           	opt callstack 19
 14989                           
 14990                           ;freq_meas.c: 8: CCP2CONbits.EN = 1;
 14991                           
 14992                           ; BSR set to: 2
 14993                           ;incstack = 0
 14994  01CAB2  8EA8               	bsf	4008,7,c	;volatile
 14995                           
 14996                           ;freq_meas.c: 11: freq_meas_start_flag = 0;
 14997  01CAB4  0E00               	movlw	0
 14998  01CAB6  0102               	movlb	2	; () banked
 14999  01CAB8  6FDA               	movwf	_freq_meas_start_flag& (0+255),b
 15000                           
 15001                           ; BSR set to: 2
 15002  01CABA  0012               	return		;funcret
 15003  01CABC                     __end_of_freqMeasStartCaptures:
 15004                           	opt callstack 0
 15005                           
 15006 ;; *************** function _TMR5_WriteTimer *****************
 15007 ;; Defined at:
 15008 ;;		line 120 in file "mcc_generated_files/tmr5.c"
 15009 ;; Parameters:    Size  Location     Type
 15010 ;;  timerVal        2    0[BANK2 ] unsigned int 
 15011 ;; Auto vars:     Size  Location     Type
 15012 ;;		None
 15013 ;; Return value:  Size  Location     Type
 15014 ;;                  1    wreg      void 
 15015 ;; Registers used:
 15016 ;;		wreg, status,2
 15017 ;; Tracked objects:
 15018 ;;		On entry : 0/0
 15019 ;;		On exit  : 0/0
 15020 ;;		Unchanged: 0/0
 15021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15022 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15025 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15026 ;;Total ram usage:        2 bytes
 15027 ;; Hardware stack levels used:    1
 15028 ;; Hardware stack levels required when called:   11
 15029 ;; This function calls:
 15030 ;;		Nothing
 15031 ;; This function is called by:
 15032 ;;		_main
 15033 ;;		_TMR5_Reload
 15034 ;; This function uses a non-reentrant model
 15035 ;;
 15036                           
 15037                           	psect	text28
 15038  01C66A                     __ptext28:
 15039                           	opt callstack 0
 15040  01C66A                     _TMR5_WriteTimer:
 15041                           	opt callstack 19
 15042                           
 15043                           ;tmr5.c: 122: if (T5CONbits.nT5SYNC == 1)
 15044                           
 15045                           ; BSR set to: 2
 15046                           ;incstack = 0
 15047  01C66A  A4C3               	btfss	4035,2,c	;volatile
 15048  01C66C  D008               	goto	l21584
 15049                           
 15050                           ;tmr5.c: 123: {;tmr5.c: 125: T5CONbits.TMR5ON = 0;
 15051  01C66E  90C3               	bcf	4035,0,c	;volatile
 15052                           
 15053                           ;tmr5.c: 128: TMR5H = (timerVal >> 8);
 15054  01C670  0102               	movlb	2	; () banked
 15055  01C672  5101               	movf	(TMR5_WriteTimer@timerVal+1)& (0+255),w,b
 15056  01C674  6EC2               	movwf	4034,c	;volatile
 15057                           
 15058                           ; BSR set to: 2
 15059                           ;tmr5.c: 129: TMR5L = timerVal;
 15060  01C676  C200  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 15061                           
 15062                           ; BSR set to: 2
 15063                           ;tmr5.c: 132: T5CONbits.TMR5ON =1;
 15064  01C67A  80C3               	bsf	4035,0,c	;volatile
 15065                           
 15066                           ;tmr5.c: 133: }
 15067  01C67C  0012               	return	
 15068  01C67E                     l21584:
 15069                           
 15070                           ;tmr5.c: 134: else;tmr5.c: 135: {;tmr5.c: 137: TMR5H = (timerVal >> 8);
 15071  01C67E  0102               	movlb	2	; () banked
 15072  01C680  5101               	movf	(TMR5_WriteTimer@timerVal+1)& (0+255),w,b
 15073  01C682  6EC2               	movwf	4034,c	;volatile
 15074                           
 15075                           ; BSR set to: 2
 15076                           ;tmr5.c: 138: TMR5L = timerVal;
 15077  01C684  C200  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 15078                           
 15079                           ; BSR set to: 2
 15080  01C688  0012               	return		;funcret
 15081  01C68A                     __end_of_TMR5_WriteTimer:
 15082                           	opt callstack 0
 15083                           
 15084 ;; *************** function _TMR5_StopTimer *****************
 15085 ;; Defined at:
 15086 ;;		line 98 in file "mcc_generated_files/tmr5.c"
 15087 ;; Parameters:    Size  Location     Type
 15088 ;;		None
 15089 ;; Auto vars:     Size  Location     Type
 15090 ;;		None
 15091 ;; Return value:  Size  Location     Type
 15092 ;;                  1    wreg      void 
 15093 ;; Registers used:
 15094 ;;		None
 15095 ;; Tracked objects:
 15096 ;;		On entry : 0/0
 15097 ;;		On exit  : 0/0
 15098 ;;		Unchanged: 0/0
 15099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15104 ;;Total ram usage:        0 bytes
 15105 ;; Hardware stack levels used:    1
 15106 ;; Hardware stack levels required when called:   11
 15107 ;; This function calls:
 15108 ;;		Nothing
 15109 ;; This function is called by:
 15110 ;;		_main
 15111 ;; This function uses a non-reentrant model
 15112 ;;
 15113                           
 15114                           	psect	text29
 15115  01CB04                     __ptext29:
 15116                           	opt callstack 0
 15117  01CB04                     _TMR5_StopTimer:
 15118                           	opt callstack 19
 15119                           
 15120                           ;tmr5.c: 101: T5CONbits.TMR5ON = 0;
 15121                           
 15122                           ; BSR set to: 2
 15123                           ;incstack = 0
 15124  01CB04  90C3               	bcf	4035,0,c	;volatile
 15125  01CB06  0012               	return		;funcret
 15126  01CB08                     __end_of_TMR5_StopTimer:
 15127                           	opt callstack 0
 15128                           
 15129 ;; *************** function _TMR3_StopTimer *****************
 15130 ;; Defined at:
 15131 ;;		line 105 in file "mcc_generated_files/tmr3.c"
 15132 ;; Parameters:    Size  Location     Type
 15133 ;;		None
 15134 ;; Auto vars:     Size  Location     Type
 15135 ;;		None
 15136 ;; Return value:  Size  Location     Type
 15137 ;;                  1    wreg      void 
 15138 ;; Registers used:
 15139 ;;		None
 15140 ;; Tracked objects:
 15141 ;;		On entry : 0/0
 15142 ;;		On exit  : 0/0
 15143 ;;		Unchanged: 0/0
 15144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15149 ;;Total ram usage:        0 bytes
 15150 ;; Hardware stack levels used:    1
 15151 ;; Hardware stack levels required when called:   11
 15152 ;; This function calls:
 15153 ;;		Nothing
 15154 ;; This function is called by:
 15155 ;;		_main
 15156 ;; This function uses a non-reentrant model
 15157 ;;
 15158                           
 15159                           	psect	text30
 15160  01CB08                     __ptext30:
 15161                           	opt callstack 0
 15162  01CB08                     _TMR3_StopTimer:
 15163                           	opt callstack 19
 15164                           
 15165                           ;tmr3.c: 108: T3CONbits.TMR3ON = 0;
 15166                           
 15167                           ;incstack = 0
 15168  01CB08  90C9               	bcf	4041,0,c	;volatile
 15169  01CB0A  0012               	return		;funcret
 15170  01CB0C                     __end_of_TMR3_StopTimer:
 15171                           	opt callstack 0
 15172                           
 15173 ;; *************** function _TMR3_Reload *****************
 15174 ;; Defined at:
 15175 ;;		line 149 in file "mcc_generated_files/tmr3.c"
 15176 ;; Parameters:    Size  Location     Type
 15177 ;;		None
 15178 ;; Auto vars:     Size  Location     Type
 15179 ;;		None
 15180 ;; Return value:  Size  Location     Type
 15181 ;;                  1    wreg      void 
 15182 ;; Registers used:
 15183 ;;		wreg, status,2, cstack
 15184 ;; Tracked objects:
 15185 ;;		On entry : 0/0
 15186 ;;		On exit  : 0/0
 15187 ;;		Unchanged: 0/0
 15188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15193 ;;Total ram usage:        0 bytes
 15194 ;; Hardware stack levels used:    1
 15195 ;; Hardware stack levels required when called:   12
 15196 ;; This function calls:
 15197 ;;		_TMR3_WriteTimer
 15198 ;; This function is called by:
 15199 ;;		_main
 15200 ;; This function uses a non-reentrant model
 15201 ;;
 15202                           
 15203                           	psect	text31
 15204  01C994                     __ptext31:
 15205                           	opt callstack 0
 15206  01C994                     _TMR3_Reload:
 15207                           	opt callstack 18
 15208                           
 15209                           ;tmr3.c: 151: TMR3_WriteTimer(timer3ReloadVal);
 15210                           
 15211                           ;incstack = 0
 15212  01C994  C18A  F200         	movff	_timer3ReloadVal,TMR3_WriteTimer@timerVal	;volatile
 15213  01C998  C18B  F201         	movff	_timer3ReloadVal+1,TMR3_WriteTimer@timerVal+1	;volatile
 15214  01C99C  EC45  F0E3         	call	_TMR3_WriteTimer	;wreg free
 15215  01C9A0  0012               	return		;funcret
 15216  01C9A2                     __end_of_TMR3_Reload:
 15217                           	opt callstack 0
 15218                           
 15219 ;; *************** function _TMR3_WriteTimer *****************
 15220 ;; Defined at:
 15221 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 15222 ;; Parameters:    Size  Location     Type
 15223 ;;  timerVal        2    0[BANK2 ] unsigned int 
 15224 ;; Auto vars:     Size  Location     Type
 15225 ;;		None
 15226 ;; Return value:  Size  Location     Type
 15227 ;;                  1    wreg      void 
 15228 ;; Registers used:
 15229 ;;		wreg, status,2
 15230 ;; Tracked objects:
 15231 ;;		On entry : 0/0
 15232 ;;		On exit  : 0/0
 15233 ;;		Unchanged: 0/0
 15234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15235 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15238 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15239 ;;Total ram usage:        2 bytes
 15240 ;; Hardware stack levels used:    1
 15241 ;; Hardware stack levels required when called:   11
 15242 ;; This function calls:
 15243 ;;		Nothing
 15244 ;; This function is called by:
 15245 ;;		_TMR3_Reload
 15246 ;; This function uses a non-reentrant model
 15247 ;;
 15248                           
 15249                           	psect	text32
 15250  01C68A                     __ptext32:
 15251                           	opt callstack 0
 15252  01C68A                     _TMR3_WriteTimer:
 15253                           	opt callstack 18
 15254                           
 15255                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 15256                           
 15257                           ;incstack = 0
 15258  01C68A  A4C9               	btfss	4041,2,c	;volatile
 15259  01C68C  D008               	goto	l20886
 15260                           
 15261                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 15262  01C68E  90C9               	bcf	4041,0,c	;volatile
 15263                           
 15264                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 15265  01C690  0102               	movlb	2	; () banked
 15266  01C692  5101               	movf	(TMR3_WriteTimer@timerVal+1)& (0+255),w,b
 15267  01C694  6EC8               	movwf	4040,c	;volatile
 15268                           
 15269                           ; BSR set to: 2
 15270                           ;tmr3.c: 136: TMR3L = timerVal;
 15271  01C696  C200  FFC7         	movff	TMR3_WriteTimer@timerVal,4039	;volatile
 15272                           
 15273                           ; BSR set to: 2
 15274                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 15275  01C69A  80C9               	bsf	4041,0,c	;volatile
 15276                           
 15277                           ;tmr3.c: 140: }
 15278  01C69C  0012               	return	
 15279  01C69E                     l20886:
 15280                           
 15281                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 15282  01C69E  0102               	movlb	2	; () banked
 15283  01C6A0  5101               	movf	(TMR3_WriteTimer@timerVal+1)& (0+255),w,b
 15284  01C6A2  6EC8               	movwf	4040,c	;volatile
 15285                           
 15286                           ; BSR set to: 2
 15287                           ;tmr3.c: 145: TMR3L = timerVal;
 15288  01C6A4  C200  FFC7         	movff	TMR3_WriteTimer@timerVal,4039	;volatile
 15289                           
 15290                           ; BSR set to: 2
 15291  01C6A8  0012               	return		;funcret
 15292  01C6AA                     __end_of_TMR3_WriteTimer:
 15293                           	opt callstack 0
 15294                           
 15295 ;; *************** function _TMR1_StopTimer *****************
 15296 ;; Defined at:
 15297 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 15298 ;; Parameters:    Size  Location     Type
 15299 ;;		None
 15300 ;; Auto vars:     Size  Location     Type
 15301 ;;		None
 15302 ;; Return value:  Size  Location     Type
 15303 ;;                  1    wreg      void 
 15304 ;; Registers used:
 15305 ;;		None
 15306 ;; Tracked objects:
 15307 ;;		On entry : 0/0
 15308 ;;		On exit  : 0/0
 15309 ;;		Unchanged: 0/0
 15310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15315 ;;Total ram usage:        0 bytes
 15316 ;; Hardware stack levels used:    1
 15317 ;; Hardware stack levels required when called:   11
 15318 ;; This function calls:
 15319 ;;		Nothing
 15320 ;; This function is called by:
 15321 ;;		_main
 15322 ;; This function uses a non-reentrant model
 15323 ;;
 15324                           
 15325                           	psect	text33
 15326  01CB0C                     __ptext33:
 15327                           	opt callstack 0
 15328  01CB0C                     _TMR1_StopTimer:
 15329                           	opt callstack 19
 15330                           
 15331                           ;tmr1.c: 108: T1CONbits.TMR1ON = 0;
 15332                           
 15333                           ; BSR set to: 2
 15334                           ;incstack = 0
 15335  01CB0C  90CF               	bcf	4047,0,c	;volatile
 15336  01CB0E  0012               	return		;funcret
 15337  01CB10                     __end_of_TMR1_StopTimer:
 15338                           	opt callstack 0
 15339                           
 15340 ;; *************** function _TMR1_Reload *****************
 15341 ;; Defined at:
 15342 ;;		line 149 in file "mcc_generated_files/tmr1.c"
 15343 ;; Parameters:    Size  Location     Type
 15344 ;;		None
 15345 ;; Auto vars:     Size  Location     Type
 15346 ;;		None
 15347 ;; Return value:  Size  Location     Type
 15348 ;;                  1    wreg      void 
 15349 ;; Registers used:
 15350 ;;		wreg, status,2, cstack
 15351 ;; Tracked objects:
 15352 ;;		On entry : 0/0
 15353 ;;		On exit  : 0/0
 15354 ;;		Unchanged: 0/0
 15355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15360 ;;Total ram usage:        0 bytes
 15361 ;; Hardware stack levels used:    1
 15362 ;; Hardware stack levels required when called:   12
 15363 ;; This function calls:
 15364 ;;		_TMR1_WriteTimer
 15365 ;; This function is called by:
 15366 ;;		_main
 15367 ;; This function uses a non-reentrant model
 15368 ;;
 15369                           
 15370                           	psect	text34
 15371  01C9A2                     __ptext34:
 15372                           	opt callstack 0
 15373  01C9A2                     _TMR1_Reload:
 15374                           	opt callstack 18
 15375                           
 15376                           ;tmr1.c: 151: TMR1_WriteTimer(timer1ReloadVal);
 15377                           
 15378                           ;incstack = 0
 15379  01C9A2  C186  F200         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 15380  01C9A6  C187  F201         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 15381  01C9AA  EC55  F0E3         	call	_TMR1_WriteTimer	;wreg free
 15382  01C9AE  0012               	return		;funcret
 15383  01C9B0                     __end_of_TMR1_Reload:
 15384                           	opt callstack 0
 15385                           
 15386 ;; *************** function _TMR1_WriteTimer *****************
 15387 ;; Defined at:
 15388 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 15389 ;; Parameters:    Size  Location     Type
 15390 ;;  timerVal        2    0[BANK2 ] unsigned int 
 15391 ;; Auto vars:     Size  Location     Type
 15392 ;;		None
 15393 ;; Return value:  Size  Location     Type
 15394 ;;                  1    wreg      void 
 15395 ;; Registers used:
 15396 ;;		wreg, status,2
 15397 ;; Tracked objects:
 15398 ;;		On entry : 0/0
 15399 ;;		On exit  : 0/0
 15400 ;;		Unchanged: 0/0
 15401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15402 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15405 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15406 ;;Total ram usage:        2 bytes
 15407 ;; Hardware stack levels used:    1
 15408 ;; Hardware stack levels required when called:   11
 15409 ;; This function calls:
 15410 ;;		Nothing
 15411 ;; This function is called by:
 15412 ;;		_TMR1_Reload
 15413 ;; This function uses a non-reentrant model
 15414 ;;
 15415                           
 15416                           	psect	text35
 15417  01C6AA                     __ptext35:
 15418                           	opt callstack 0
 15419  01C6AA                     _TMR1_WriteTimer:
 15420                           	opt callstack 18
 15421                           
 15422                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 15423                           
 15424                           ;incstack = 0
 15425  01C6AA  A4CF               	btfss	4047,2,c	;volatile
 15426  01C6AC  D008               	goto	l21344
 15427                           
 15428                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 15429  01C6AE  90CF               	bcf	4047,0,c	;volatile
 15430                           
 15431                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 15432  01C6B0  0102               	movlb	2	; () banked
 15433  01C6B2  5101               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 15434  01C6B4  6ECE               	movwf	4046,c	;volatile
 15435                           
 15436                           ; BSR set to: 2
 15437                           ;tmr1.c: 136: TMR1L = timerVal;
 15438  01C6B6  C200  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 15439                           
 15440                           ; BSR set to: 2
 15441                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 15442  01C6BA  80CF               	bsf	4047,0,c	;volatile
 15443                           
 15444                           ;tmr1.c: 140: }
 15445  01C6BC  0012               	return	
 15446  01C6BE                     l21344:
 15447                           
 15448                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 15449  01C6BE  0102               	movlb	2	; () banked
 15450  01C6C0  5101               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 15451  01C6C2  6ECE               	movwf	4046,c	;volatile
 15452                           
 15453                           ; BSR set to: 2
 15454                           ;tmr1.c: 145: TMR1L = timerVal;
 15455  01C6C4  C200  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 15456                           
 15457                           ; BSR set to: 2
 15458  01C6C8  0012               	return		;funcret
 15459  01C6CA                     __end_of_TMR1_WriteTimer:
 15460                           	opt callstack 0
 15461                           
 15462 ;; *************** function _SYSTEM_Initialize *****************
 15463 ;; Defined at:
 15464 ;;		line 50 in file "mcc_generated_files/mcc.c"
 15465 ;; Parameters:    Size  Location     Type
 15466 ;;		None
 15467 ;; Auto vars:     Size  Location     Type
 15468 ;;		None
 15469 ;; Return value:  Size  Location     Type
 15470 ;;                  1    wreg      void 
 15471 ;; Registers used:
 15472 ;;		wreg, status,2, status,0, cstack
 15473 ;; Tracked objects:
 15474 ;;		On entry : 0/0
 15475 ;;		On exit  : 0/0
 15476 ;;		Unchanged: 0/0
 15477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15482 ;;Total ram usage:        0 bytes
 15483 ;; Hardware stack levels used:    1
 15484 ;; Hardware stack levels required when called:   13
 15485 ;; This function calls:
 15486 ;;		_ADCC_Initialize
 15487 ;;		_CCP2_Initialize
 15488 ;;		_EUSART2_Initialize
 15489 ;;		_EXT_INT_Initialize
 15490 ;;		_FVR_Initialize
 15491 ;;		_I2C2_Initialize
 15492 ;;		_INTERRUPT_Initialize
 15493 ;;		_OSCILLATOR_Initialize
 15494 ;;		_PIN_MANAGER_Initialize
 15495 ;;		_PMD_Initialize
 15496 ;;		_TMR0_Initialize
 15497 ;;		_TMR1_Initialize
 15498 ;;		_TMR2_Initialize
 15499 ;;		_TMR3_Initialize
 15500 ;;		_TMR5_Initialize
 15501 ;; This function is called by:
 15502 ;;		_main
 15503 ;; This function uses a non-reentrant model
 15504 ;;
 15505                           
 15506                           	psect	text36
 15507  01C02C                     __ptext36:
 15508                           	opt callstack 0
 15509  01C02C                     _SYSTEM_Initialize:
 15510                           	opt callstack 17
 15511                           
 15512                           ;mcc.c: 52: INTERRUPT_Initialize();
 15513                           
 15514                           ; BSR set to: 2
 15515                           ;incstack = 0
 15516  01C02C  EC65  F0E3         	call	_INTERRUPT_Initialize	;wreg free
 15517                           
 15518                           ;mcc.c: 53: PMD_Initialize();
 15519  01C030  ECC2  F0E3         	call	_PMD_Initialize	;wreg free
 15520                           
 15521                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 15522  01C034  EC6B  F0D7         	call	_PIN_MANAGER_Initialize	;wreg free
 15523                           
 15524                           ;mcc.c: 55: OSCILLATOR_Initialize();
 15525  01C038  EC2E  F0E4         	call	_OSCILLATOR_Initialize	;wreg free
 15526                           
 15527                           ;mcc.c: 56: I2C2_Initialize();
 15528  01C03C  ECE8  F0E0         	call	_I2C2_Initialize	;wreg free
 15529                           
 15530                           ;mcc.c: 57: FVR_Initialize();
 15531  01C040  EC47  F0E5         	call	_FVR_Initialize	;wreg free
 15532                           
 15533                           ;mcc.c: 58: ADCC_Initialize();
 15534  01C044  EC9F  F0DB         	call	_ADCC_Initialize	;wreg free
 15535                           
 15536                           ;mcc.c: 59: TMR2_Initialize();
 15537  01C048  EC51  F0E1         	call	_TMR2_Initialize	;wreg free
 15538                           
 15539                           ;mcc.c: 60: EXT_INT_Initialize();
 15540  01C04C  ECCC  F0E0         	call	_EXT_INT_Initialize	;wreg free
 15541                           
 15542                           ;mcc.c: 61: TMR0_Initialize();
 15543  01C050  EC11  F0E2         	call	_TMR0_Initialize	;wreg free
 15544                           
 15545                           ;mcc.c: 62: CCP2_Initialize();
 15546  01C054  EC13  F0E3         	call	_CCP2_Initialize	;wreg free
 15547                           
 15548                           ;mcc.c: 63: TMR3_Initialize();
 15549  01C058  EC57  F0DD         	call	_TMR3_Initialize	;wreg free
 15550                           
 15551                           ;mcc.c: 64: TMR5_Initialize();
 15552  01C05C  EC54  F0E0         	call	_TMR5_Initialize	;wreg free
 15553                           
 15554                           ;mcc.c: 65: TMR1_Initialize();
 15555  01C060  EC7F  F0DD         	call	_TMR1_Initialize	;wreg free
 15556                           
 15557                           ;mcc.c: 66: EUSART2_Initialize();
 15558  01C064  EC06  F0DB         	call	_EUSART2_Initialize	;wreg free
 15559  01C068  0012               	return		;funcret
 15560  01C06A                     __end_of_SYSTEM_Initialize:
 15561                           	opt callstack 0
 15562                           
 15563 ;; *************** function _TMR5_Initialize *****************
 15564 ;; Defined at:
 15565 ;;		line 63 in file "mcc_generated_files/tmr5.c"
 15566 ;; Parameters:    Size  Location     Type
 15567 ;;		None
 15568 ;; Auto vars:     Size  Location     Type
 15569 ;;		None
 15570 ;; Return value:  Size  Location     Type
 15571 ;;                  1    wreg      void 
 15572 ;; Registers used:
 15573 ;;		wreg, status,2, status,0
 15574 ;; Tracked objects:
 15575 ;;		On entry : 0/0
 15576 ;;		On exit  : 0/0
 15577 ;;		Unchanged: 0/0
 15578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15581 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15582 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15583 ;;Total ram usage:        2 bytes
 15584 ;; Hardware stack levels used:    1
 15585 ;; Hardware stack levels required when called:   11
 15586 ;; This function calls:
 15587 ;;		Nothing
 15588 ;; This function is called by:
 15589 ;;		_SYSTEM_Initialize
 15590 ;; This function uses a non-reentrant model
 15591 ;;
 15592                           
 15593                           	psect	text37
 15594  01C0A8                     __ptext37:
 15595                           	opt callstack 0
 15596  01C0A8                     _TMR5_Initialize:
 15597                           	opt callstack 18
 15598                           
 15599                           ;tmr5.c: 68: T5GCON = 0x00;
 15600                           
 15601                           ;incstack = 0
 15602  01C0A8  0E00               	movlw	0
 15603  01C0AA  6EC4               	movwf	4036,c	;volatile
 15604                           
 15605                           ;tmr5.c: 71: T5GATE = 0x00;
 15606  01C0AC  0E00               	movlw	0
 15607  01C0AE  6EC5               	movwf	4037,c	;volatile
 15608                           
 15609                           ;tmr5.c: 74: T5CLK = 0x01;
 15610  01C0B0  0E01               	movlw	1
 15611  01C0B2  6EC6               	movwf	4038,c	;volatile
 15612                           
 15613                           ;tmr5.c: 77: TMR5H = 0x00;
 15614  01C0B4  0E00               	movlw	0
 15615  01C0B6  6EC2               	movwf	4034,c	;volatile
 15616                           
 15617                           ;tmr5.c: 80: TMR5L = 0x00;
 15618  01C0B8  0E00               	movlw	0
 15619  01C0BA  6EC1               	movwf	4033,c	;volatile
 15620                           
 15621                           ;tmr5.c: 83: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 15622  01C0BC  50C1               	movf	4033,w,c	;volatile
 15623  01C0BE  CFC2 F200          	movff	4034,??_TMR5_Initialize	;volatile
 15624  01C0C2  0102               	movlb	2	; () banked
 15625  01C0C4  6B01               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 15626  01C0C6  C200  F201         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 15627  01C0CA  6B00               	clrf	??_TMR5_Initialize& (0+255),b
 15628  01C0CC  1100               	iorwf	??_TMR5_Initialize& (0+255),w,b
 15629  01C0CE  0101               	movlb	1	; () banked
 15630  01C0D0  6F88               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 15631  01C0D2  0102               	movlb	2	; () banked
 15632  01C0D4  5101               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 15633  01C0D6  0101               	movlb	1	; () banked
 15634  01C0D8  6F89               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 15635                           
 15636                           ; BSR set to: 1
 15637                           ;tmr5.c: 86: PIR4bits.TMR5IF = 0;
 15638  01C0DA  010E               	movlb	14	; () banked
 15639  01C0DC  99CE               	bcf	206,4,b	;volatile
 15640                           
 15641                           ; BSR set to: 14
 15642                           ;tmr5.c: 89: T5CON = 0x03;
 15643  01C0DE  0E03               	movlw	3
 15644  01C0E0  6EC3               	movwf	4035,c	;volatile
 15645                           
 15646                           ; BSR set to: 14
 15647  01C0E2  0012               	return		;funcret
 15648  01C0E4                     __end_of_TMR5_Initialize:
 15649                           	opt callstack 0
 15650                           
 15651 ;; *************** function _TMR3_Initialize *****************
 15652 ;; Defined at:
 15653 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 15654 ;; Parameters:    Size  Location     Type
 15655 ;;		None
 15656 ;; Auto vars:     Size  Location     Type
 15657 ;;		None
 15658 ;; Return value:  Size  Location     Type
 15659 ;;                  1    wreg      void 
 15660 ;; Registers used:
 15661 ;;		wreg, status,2, status,0, cstack
 15662 ;; Tracked objects:
 15663 ;;		On entry : 0/0
 15664 ;;		On exit  : 0/0
 15665 ;;		Unchanged: 0/0
 15666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15669 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15670 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15671 ;;Total ram usage:        2 bytes
 15672 ;; Hardware stack levels used:    1
 15673 ;; Hardware stack levels required when called:   12
 15674 ;; This function calls:
 15675 ;;		_TMR3_SetInterruptHandler
 15676 ;; This function is called by:
 15677 ;;		_SYSTEM_Initialize
 15678 ;; This function uses a non-reentrant model
 15679 ;;
 15680                           
 15681                           	psect	text38
 15682  01BAAE                     __ptext38:
 15683                           	opt callstack 0
 15684  01BAAE                     _TMR3_Initialize:
 15685                           	opt callstack 17
 15686                           
 15687                           ;tmr3.c: 69: T3GCON = 0x00;
 15688                           
 15689                           ; BSR set to: 14
 15690                           ;incstack = 0
 15691  01BAAE  0E00               	movlw	0
 15692  01BAB0  6ECA               	movwf	4042,c	;volatile
 15693                           
 15694                           ;tmr3.c: 72: T3GATE = 0x00;
 15695  01BAB2  0E00               	movlw	0
 15696  01BAB4  6ECB               	movwf	4043,c	;volatile
 15697                           
 15698                           ;tmr3.c: 75: T3CLK = 0x04;
 15699  01BAB6  0E04               	movlw	4
 15700  01BAB8  6ECC               	movwf	4044,c	;volatile
 15701                           
 15702                           ;tmr3.c: 78: TMR3H = 0xCF;
 15703  01BABA  0ECF               	movlw	207
 15704  01BABC  6EC8               	movwf	4040,c	;volatile
 15705                           
 15706                           ;tmr3.c: 81: TMR3L = 0x90;
 15707  01BABE  0E90               	movlw	144
 15708  01BAC0  6EC7               	movwf	4039,c	;volatile
 15709                           
 15710                           ;tmr3.c: 84: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 15711  01BAC2  50C7               	movf	4039,w,c	;volatile
 15712  01BAC4  CFC8 F203          	movff	4040,??_TMR3_Initialize	;volatile
 15713  01BAC8  0102               	movlb	2	; () banked
 15714  01BACA  6B04               	clrf	(??_TMR3_Initialize+1)& (0+255),b
 15715  01BACC  C203  F204         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 15716  01BAD0  6B03               	clrf	??_TMR3_Initialize& (0+255),b
 15717  01BAD2  1103               	iorwf	??_TMR3_Initialize& (0+255),w,b
 15718  01BAD4  0101               	movlb	1	; () banked
 15719  01BAD6  6F8A               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 15720  01BAD8  0102               	movlb	2	; () banked
 15721  01BADA  5104               	movf	(??_TMR3_Initialize+1)& (0+255),w,b
 15722  01BADC  0101               	movlb	1	; () banked
 15723  01BADE  6F8B               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 15724                           
 15725                           ; BSR set to: 1
 15726                           ;tmr3.c: 87: PIR4bits.TMR3IF = 0;
 15727  01BAE0  010E               	movlb	14	; () banked
 15728  01BAE2  95CE               	bcf	206,2,b	;volatile
 15729                           
 15730                           ; BSR set to: 14
 15731                           ;tmr3.c: 90: PIE4bits.TMR3IE = 1;
 15732  01BAE4  85C6               	bsf	198,2,b	;volatile
 15733                           
 15734                           ; BSR set to: 14
 15735                           ;tmr3.c: 93: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
 15736  01BAE6  0E32               	movlw	low _TMR3_DefaultInterruptHandler
 15737  01BAE8  0102               	movlb	2	; () banked
 15738  01BAEA  6F00               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
 15739  01BAEC  0ECB               	movlw	high _TMR3_DefaultInterruptHandler
 15740  01BAEE  6F01               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15741  01BAF0  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 15742  01BAF2  6F02               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15743  01BAF4  ECD8  F0E4         	call	_TMR3_SetInterruptHandler	;wreg free
 15744                           
 15745                           ;tmr3.c: 96: T3CON = 0x11;
 15746  01BAF8  0E11               	movlw	17
 15747  01BAFA  6EC9               	movwf	4041,c	;volatile
 15748  01BAFC  0012               	return		;funcret
 15749  01BAFE                     __end_of_TMR3_Initialize:
 15750                           	opt callstack 0
 15751                           
 15752 ;; *************** function _TMR3_SetInterruptHandler *****************
 15753 ;; Defined at:
 15754 ;;		line 178 in file "mcc_generated_files/tmr3.c"
 15755 ;; Parameters:    Size  Location     Type
 15756 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 15757 ;;		 -> QIIdleChargedTimerHandler(1), TMR3_DefaultInterruptHandler(1), 
 15758 ;; Auto vars:     Size  Location     Type
 15759 ;;		None
 15760 ;; Return value:  Size  Location     Type
 15761 ;;                  1    wreg      void 
 15762 ;; Registers used:
 15763 ;;		wreg, status,2, status,0
 15764 ;; Tracked objects:
 15765 ;;		On entry : 0/0
 15766 ;;		On exit  : 0/0
 15767 ;;		Unchanged: 0/0
 15768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15769 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15772 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15773 ;;Total ram usage:        3 bytes
 15774 ;; Hardware stack levels used:    1
 15775 ;; Hardware stack levels required when called:   11
 15776 ;; This function calls:
 15777 ;;		Nothing
 15778 ;; This function is called by:
 15779 ;;		_TMR3_Initialize
 15780 ;;		_main
 15781 ;; This function uses a non-reentrant model
 15782 ;;
 15783                           
 15784                           	psect	text39
 15785  01C9B0                     __ptext39:
 15786                           	opt callstack 0
 15787  01C9B0                     _TMR3_SetInterruptHandler:
 15788                           	opt callstack 19
 15789                           
 15790                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
 15791                           
 15792                           ;incstack = 0
 15793  01C9B0  C200  F171         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
 15794  01C9B4  C201  F172         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
 15795  01C9B8  C202  F173         	movff	TMR3_SetInterruptHandler@InterruptHandler+2,_TMR3_InterruptHandler+2
 15796  01C9BC  0012               	return		;funcret
 15797  01C9BE                     __end_of_TMR3_SetInterruptHandler:
 15798                           	opt callstack 0
 15799                           
 15800 ;; *************** function _TMR2_Initialize *****************
 15801 ;; Defined at:
 15802 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 15803 ;; Parameters:    Size  Location     Type
 15804 ;;		None
 15805 ;; Auto vars:     Size  Location     Type
 15806 ;;		None
 15807 ;; Return value:  Size  Location     Type
 15808 ;;                  1    wreg      void 
 15809 ;; Registers used:
 15810 ;;		wreg, status,2, status,0, cstack
 15811 ;; Tracked objects:
 15812 ;;		On entry : 0/0
 15813 ;;		On exit  : 0/0
 15814 ;;		Unchanged: 0/0
 15815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15820 ;;Total ram usage:        0 bytes
 15821 ;; Hardware stack levels used:    1
 15822 ;; Hardware stack levels required when called:   12
 15823 ;; This function calls:
 15824 ;;		_TMR2_SetInterruptHandler
 15825 ;; This function is called by:
 15826 ;;		_SYSTEM_Initialize
 15827 ;; This function uses a non-reentrant model
 15828 ;;
 15829                           
 15830                           	psect	text40
 15831  01C2A2                     __ptext40:
 15832                           	opt callstack 0
 15833  01C2A2                     _TMR2_Initialize:
 15834                           	opt callstack 17
 15835                           
 15836                           ;tmr2.c: 69: T2CLKCON = 0x04;
 15837                           
 15838                           ;incstack = 0
 15839  01C2A2  0E04               	movlw	4
 15840  01C2A4  6EBF               	movwf	4031,c	;volatile
 15841                           
 15842                           ;tmr2.c: 72: T2HLT = 0xA0;
 15843  01C2A6  0EA0               	movlw	160
 15844  01C2A8  6EBE               	movwf	4030,c	;volatile
 15845                           
 15846                           ;tmr2.c: 75: T2RST = 0x00;
 15847  01C2AA  0E00               	movlw	0
 15848  01C2AC  6EC0               	movwf	4032,c	;volatile
 15849                           
 15850                           ;tmr2.c: 78: T2PR = 0x00;
 15851  01C2AE  0E00               	movlw	0
 15852  01C2B0  6EBC               	movwf	4028,c	;volatile
 15853                           
 15854                           ;tmr2.c: 81: T2TMR = 0x00;
 15855  01C2B2  0E00               	movlw	0
 15856  01C2B4  6EBB               	movwf	4027,c	;volatile
 15857                           
 15858                           ;tmr2.c: 84: PIR4bits.TMR2IF = 0;
 15859  01C2B6  010E               	movlb	14	; () banked
 15860  01C2B8  93CE               	bcf	206,1,b	;volatile
 15861                           
 15862                           ; BSR set to: 14
 15863                           ;tmr2.c: 87: PIE4bits.TMR2IE = 1;
 15864  01C2BA  83C6               	bsf	198,1,b	;volatile
 15865                           
 15866                           ; BSR set to: 14
 15867                           ;tmr2.c: 90: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
 15868  01C2BC  0E34               	movlw	low _TMR2_DefaultInterruptHandler
 15869  01C2BE  0102               	movlb	2	; () banked
 15870  01C2C0  6F00               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
 15871  01C2C2  0ECB               	movlw	high _TMR2_DefaultInterruptHandler
 15872  01C2C4  6F01               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15873  01C2C6  0E01               	movlw	low (_TMR2_DefaultInterruptHandler shr (0+16))
 15874  01C2C8  6F02               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15875  01C2CA  ECDF  F0E4         	call	_TMR2_SetInterruptHandler	;wreg free
 15876                           
 15877                           ;tmr2.c: 93: T2CON = 0xDF;
 15878  01C2CE  0EDF               	movlw	223
 15879  01C2D0  6EBD               	movwf	4029,c	;volatile
 15880  01C2D2  0012               	return		;funcret
 15881  01C2D4                     __end_of_TMR2_Initialize:
 15882                           	opt callstack 0
 15883                           
 15884 ;; *************** function _TMR2_SetInterruptHandler *****************
 15885 ;; Defined at:
 15886 ;;		line 178 in file "mcc_generated_files/tmr2.c"
 15887 ;; Parameters:    Size  Location     Type
 15888 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 15889 ;;		 -> ADC_acquisitionTimerHandler(1), TMR2_DefaultInterruptHandler(1), 
 15890 ;; Auto vars:     Size  Location     Type
 15891 ;;		None
 15892 ;; Return value:  Size  Location     Type
 15893 ;;                  1    wreg      void 
 15894 ;; Registers used:
 15895 ;;		wreg, status,2, status,0
 15896 ;; Tracked objects:
 15897 ;;		On entry : 0/0
 15898 ;;		On exit  : 0/0
 15899 ;;		Unchanged: 0/0
 15900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15901 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15904 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15905 ;;Total ram usage:        3 bytes
 15906 ;; Hardware stack levels used:    1
 15907 ;; Hardware stack levels required when called:   11
 15908 ;; This function calls:
 15909 ;;		Nothing
 15910 ;; This function is called by:
 15911 ;;		_TMR2_Initialize
 15912 ;;		_main
 15913 ;; This function uses a non-reentrant model
 15914 ;;
 15915                           
 15916                           	psect	text41
 15917  01C9BE                     __ptext41:
 15918                           	opt callstack 0
 15919  01C9BE                     _TMR2_SetInterruptHandler:
 15920                           	opt callstack 19
 15921                           
 15922                           ;tmr2.c: 179: TMR2_InterruptHandler = InterruptHandler;
 15923                           
 15924                           ;incstack = 0
 15925  01C9BE  C200  F174         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 15926  01C9C2  C201  F175         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 15927  01C9C6  C202  F176         	movff	TMR2_SetInterruptHandler@InterruptHandler+2,_TMR2_InterruptHandler+2
 15928  01C9CA  0012               	return		;funcret
 15929  01C9CC                     __end_of_TMR2_SetInterruptHandler:
 15930                           	opt callstack 0
 15931                           
 15932 ;; *************** function _TMR1_Initialize *****************
 15933 ;; Defined at:
 15934 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 15935 ;; Parameters:    Size  Location     Type
 15936 ;;		None
 15937 ;; Auto vars:     Size  Location     Type
 15938 ;;		None
 15939 ;; Return value:  Size  Location     Type
 15940 ;;                  1    wreg      void 
 15941 ;; Registers used:
 15942 ;;		wreg, status,2, status,0, cstack
 15943 ;; Tracked objects:
 15944 ;;		On entry : 0/0
 15945 ;;		On exit  : 0/0
 15946 ;;		Unchanged: 0/0
 15947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15950 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15951 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15952 ;;Total ram usage:        2 bytes
 15953 ;; Hardware stack levels used:    1
 15954 ;; Hardware stack levels required when called:   12
 15955 ;; This function calls:
 15956 ;;		_TMR1_SetInterruptHandler
 15957 ;; This function is called by:
 15958 ;;		_SYSTEM_Initialize
 15959 ;; This function uses a non-reentrant model
 15960 ;;
 15961                           
 15962                           	psect	text42
 15963  01BAFE                     __ptext42:
 15964                           	opt callstack 0
 15965  01BAFE                     _TMR1_Initialize:
 15966                           	opt callstack 17
 15967                           
 15968                           ;tmr1.c: 69: T1GCON = 0x00;
 15969                           
 15970                           ;incstack = 0
 15971  01BAFE  0E00               	movlw	0
 15972  01BB00  6ED0               	movwf	4048,c	;volatile
 15973                           
 15974                           ;tmr1.c: 72: T1GATE = 0x00;
 15975  01BB02  0E00               	movlw	0
 15976  01BB04  6ED1               	movwf	4049,c	;volatile
 15977                           
 15978                           ;tmr1.c: 75: T1CLK = 0x04;
 15979  01BB06  0E04               	movlw	4
 15980  01BB08  6ED2               	movwf	4050,c	;volatile
 15981                           
 15982                           ;tmr1.c: 78: TMR1H = 0xED;
 15983  01BB0A  0EED               	movlw	237
 15984  01BB0C  6ECE               	movwf	4046,c	;volatile
 15985                           
 15986                           ;tmr1.c: 81: TMR1L = 0xD6;
 15987  01BB0E  0ED6               	movlw	214
 15988  01BB10  6ECD               	movwf	4045,c	;volatile
 15989                           
 15990                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 15991  01BB12  50CD               	movf	4045,w,c	;volatile
 15992  01BB14  CFCE F203          	movff	4046,??_TMR1_Initialize	;volatile
 15993  01BB18  0102               	movlb	2	; () banked
 15994  01BB1A  6B04               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 15995  01BB1C  C203  F204         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 15996  01BB20  6B03               	clrf	??_TMR1_Initialize& (0+255),b
 15997  01BB22  1103               	iorwf	??_TMR1_Initialize& (0+255),w,b
 15998  01BB24  0101               	movlb	1	; () banked
 15999  01BB26  6F86               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 16000  01BB28  0102               	movlb	2	; () banked
 16001  01BB2A  5104               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 16002  01BB2C  0101               	movlb	1	; () banked
 16003  01BB2E  6F87               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 16004                           
 16005                           ; BSR set to: 1
 16006                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
 16007  01BB30  010E               	movlb	14	; () banked
 16008  01BB32  91CE               	bcf	206,0,b	;volatile
 16009                           
 16010                           ; BSR set to: 14
 16011                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
 16012  01BB34  81C6               	bsf	198,0,b	;volatile
 16013                           
 16014                           ; BSR set to: 14
 16015                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 16016  01BB36  0E36               	movlw	low _TMR1_DefaultInterruptHandler
 16017  01BB38  0102               	movlb	2	; () banked
 16018  01BB3A  6F00               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
 16019  01BB3C  0ECB               	movlw	high _TMR1_DefaultInterruptHandler
 16020  01BB3E  6F01               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16021  01BB40  0E01               	movlw	low (_TMR1_DefaultInterruptHandler shr (0+16))
 16022  01BB42  6F02               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16023  01BB44  ECE6  F0E4         	call	_TMR1_SetInterruptHandler	;wreg free
 16024                           
 16025                           ;tmr1.c: 96: T1CON = 0x11;
 16026  01BB48  0E11               	movlw	17
 16027  01BB4A  6ECF               	movwf	4047,c	;volatile
 16028  01BB4C  0012               	return		;funcret
 16029  01BB4E                     __end_of_TMR1_Initialize:
 16030                           	opt callstack 0
 16031                           
 16032 ;; *************** function _TMR1_SetInterruptHandler *****************
 16033 ;; Defined at:
 16034 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 16035 ;; Parameters:    Size  Location     Type
 16036 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 16037 ;;		 -> TMR1_DefaultInterruptHandler(1), QIErrorTimerHandler(1), 
 16038 ;; Auto vars:     Size  Location     Type
 16039 ;;		None
 16040 ;; Return value:  Size  Location     Type
 16041 ;;                  1    wreg      void 
 16042 ;; Registers used:
 16043 ;;		wreg, status,2, status,0
 16044 ;; Tracked objects:
 16045 ;;		On entry : 0/0
 16046 ;;		On exit  : 0/0
 16047 ;;		Unchanged: 0/0
 16048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16049 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16052 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16053 ;;Total ram usage:        3 bytes
 16054 ;; Hardware stack levels used:    1
 16055 ;; Hardware stack levels required when called:   11
 16056 ;; This function calls:
 16057 ;;		Nothing
 16058 ;; This function is called by:
 16059 ;;		_main
 16060 ;;		_TMR1_Initialize
 16061 ;; This function uses a non-reentrant model
 16062 ;;
 16063                           
 16064                           	psect	text43
 16065  01C9CC                     __ptext43:
 16066                           	opt callstack 0
 16067  01C9CC                     _TMR1_SetInterruptHandler:
 16068                           	opt callstack 19
 16069                           
 16070                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
 16071                           
 16072                           ;incstack = 0
 16073  01C9CC  C200  F16E         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 16074  01C9D0  C201  F16F         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 16075  01C9D4  C202  F170         	movff	TMR1_SetInterruptHandler@InterruptHandler+2,_TMR1_InterruptHandler+2
 16076  01C9D8  0012               	return		;funcret
 16077  01C9DA                     __end_of_TMR1_SetInterruptHandler:
 16078                           	opt callstack 0
 16079                           
 16080 ;; *************** function _TMR0_Initialize *****************
 16081 ;; Defined at:
 16082 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 16083 ;; Parameters:    Size  Location     Type
 16084 ;;		None
 16085 ;; Auto vars:     Size  Location     Type
 16086 ;;		None
 16087 ;; Return value:  Size  Location     Type
 16088 ;;                  1    wreg      void 
 16089 ;; Registers used:
 16090 ;;		wreg, status,2, status,0, cstack
 16091 ;; Tracked objects:
 16092 ;;		On entry : 0/0
 16093 ;;		On exit  : 0/0
 16094 ;;		Unchanged: 0/0
 16095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16100 ;;Total ram usage:        0 bytes
 16101 ;; Hardware stack levels used:    1
 16102 ;; Hardware stack levels required when called:   12
 16103 ;; This function calls:
 16104 ;;		_TMR0_SetInterruptHandler
 16105 ;; This function is called by:
 16106 ;;		_SYSTEM_Initialize
 16107 ;; This function uses a non-reentrant model
 16108 ;;
 16109                           
 16110                           	psect	text44
 16111  01C422                     __ptext44:
 16112                           	opt callstack 0
 16113  01C422                     _TMR0_Initialize:
 16114                           	opt callstack 17
 16115                           
 16116                           ;tmr0.c: 66: T0CON1 = 0x6F;
 16117                           
 16118                           ;incstack = 0
 16119  01C422  0E6F               	movlw	111
 16120  01C424  6ED6               	movwf	4054,c	;volatile
 16121                           
 16122                           ;tmr0.c: 69: TMR0H = 0x79;
 16123  01C426  0E79               	movlw	121
 16124  01C428  6ED4               	movwf	4052,c	;volatile
 16125                           
 16126                           ;tmr0.c: 72: TMR0L = 0x00;
 16127  01C42A  0E00               	movlw	0
 16128  01C42C  6ED3               	movwf	4051,c	;volatile
 16129                           
 16130                           ;tmr0.c: 75: PIR0bits.TMR0IF = 0;
 16131  01C42E  010E               	movlb	14	; () banked
 16132  01C430  9BCA               	bcf	202,5,b	;volatile
 16133                           
 16134                           ; BSR set to: 14
 16135                           ;tmr0.c: 78: PIE0bits.TMR0IE = 1;
 16136  01C432  8BC2               	bsf	194,5,b	;volatile
 16137                           
 16138                           ; BSR set to: 14
 16139                           ;tmr0.c: 81: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 16140  01C434  0E38               	movlw	low _TMR0_DefaultInterruptHandler
 16141  01C436  0102               	movlb	2	; () banked
 16142  01C438  6F00               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
 16143  01C43A  0ECB               	movlw	high _TMR0_DefaultInterruptHandler
 16144  01C43C  6F01               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16145  01C43E  0E01               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
 16146  01C440  6F02               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16147  01C442  ECED  F0E4         	call	_TMR0_SetInterruptHandler	;wreg free
 16148                           
 16149                           ;tmr0.c: 84: T0CON0 = 0x8F;
 16150  01C446  0E8F               	movlw	143
 16151  01C448  6ED5               	movwf	4053,c	;volatile
 16152  01C44A  0012               	return		;funcret
 16153  01C44C                     __end_of_TMR0_Initialize:
 16154                           	opt callstack 0
 16155                           
 16156 ;; *************** function _TMR0_SetInterruptHandler *****************
 16157 ;; Defined at:
 16158 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 16159 ;; Parameters:    Size  Location     Type
 16160 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 16161 ;;		 -> heartbeatTimerHandler(1), TMR0_DefaultInterruptHandler(1), 
 16162 ;; Auto vars:     Size  Location     Type
 16163 ;;		None
 16164 ;; Return value:  Size  Location     Type
 16165 ;;                  1    wreg      void 
 16166 ;; Registers used:
 16167 ;;		wreg, status,2, status,0
 16168 ;; Tracked objects:
 16169 ;;		On entry : 0/0
 16170 ;;		On exit  : 0/0
 16171 ;;		Unchanged: 0/0
 16172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16173 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16176 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16177 ;;Total ram usage:        3 bytes
 16178 ;; Hardware stack levels used:    1
 16179 ;; Hardware stack levels required when called:   11
 16180 ;; This function calls:
 16181 ;;		Nothing
 16182 ;; This function is called by:
 16183 ;;		_TMR0_Initialize
 16184 ;;		_main
 16185 ;; This function uses a non-reentrant model
 16186 ;;
 16187                           
 16188                           	psect	text45
 16189  01C9DA                     __ptext45:
 16190                           	opt callstack 0
 16191  01C9DA                     _TMR0_SetInterruptHandler:
 16192                           	opt callstack 19
 16193                           
 16194                           ;tmr0.c: 135: TMR0_InterruptHandler = InterruptHandler;
 16195                           
 16196                           ;incstack = 0
 16197  01C9DA  C200  F0C9         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 16198  01C9DE  C201  F0CA         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 16199  01C9E2  C202  F0CB         	movff	TMR0_SetInterruptHandler@InterruptHandler+2,_TMR0_InterruptHandler+2
 16200  01C9E6  0012               	return		;funcret
 16201  01C9E8                     __end_of_TMR0_SetInterruptHandler:
 16202                           	opt callstack 0
 16203                           
 16204 ;; *************** function _PMD_Initialize *****************
 16205 ;; Defined at:
 16206 ;;		line 83 in file "mcc_generated_files/mcc.c"
 16207 ;; Parameters:    Size  Location     Type
 16208 ;;		None
 16209 ;; Auto vars:     Size  Location     Type
 16210 ;;		None
 16211 ;; Return value:  Size  Location     Type
 16212 ;;                  1    wreg      void 
 16213 ;; Registers used:
 16214 ;;		wreg, status,2
 16215 ;; Tracked objects:
 16216 ;;		On entry : 0/0
 16217 ;;		On exit  : 0/0
 16218 ;;		Unchanged: 0/0
 16219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16224 ;;Total ram usage:        0 bytes
 16225 ;; Hardware stack levels used:    1
 16226 ;; Hardware stack levels required when called:   11
 16227 ;; This function calls:
 16228 ;;		Nothing
 16229 ;; This function is called by:
 16230 ;;		_SYSTEM_Initialize
 16231 ;; This function uses a non-reentrant model
 16232 ;;
 16233                           
 16234                           	psect	text46
 16235  01C784                     __ptext46:
 16236                           	opt callstack 0
 16237  01C784                     _PMD_Initialize:
 16238                           	opt callstack 18
 16239                           
 16240                           ;mcc.c: 86: PMD0 = 0x00;
 16241                           
 16242                           ;incstack = 0
 16243  01C784  0E00               	movlw	0
 16244  01C786  010E               	movlb	14	; () banked
 16245  01C788  6FE1               	movwf	225,b	;volatile
 16246                           
 16247                           ;mcc.c: 88: PMD1 = 0x00;
 16248  01C78A  0E00               	movlw	0
 16249  01C78C  6FE2               	movwf	226,b	;volatile
 16250                           
 16251                           ;mcc.c: 90: PMD2 = 0x00;
 16252  01C78E  0E00               	movlw	0
 16253  01C790  6FE3               	movwf	227,b	;volatile
 16254                           
 16255                           ;mcc.c: 92: PMD3 = 0x00;
 16256  01C792  0E00               	movlw	0
 16257  01C794  6FE4               	movwf	228,b	;volatile
 16258                           
 16259                           ;mcc.c: 94: PMD4 = 0x00;
 16260  01C796  0E00               	movlw	0
 16261  01C798  6FE5               	movwf	229,b	;volatile
 16262                           
 16263                           ;mcc.c: 96: PMD5 = 0x00;
 16264  01C79A  0E00               	movlw	0
 16265  01C79C  6FE6               	movwf	230,b	;volatile
 16266                           
 16267                           ; BSR set to: 14
 16268  01C79E  0012               	return		;funcret
 16269  01C7A0                     __end_of_PMD_Initialize:
 16270                           	opt callstack 0
 16271                           
 16272 ;; *************** function _PIN_MANAGER_Initialize *****************
 16273 ;; Defined at:
 16274 ;;		line 60 in file "mcc_generated_files/pin_manager.c"
 16275 ;; Parameters:    Size  Location     Type
 16276 ;;		None
 16277 ;; Auto vars:     Size  Location     Type
 16278 ;;		None
 16279 ;; Return value:  Size  Location     Type
 16280 ;;                  1    wreg      void 
 16281 ;; Registers used:
 16282 ;;		wreg, status,2, status,0, cstack
 16283 ;; Tracked objects:
 16284 ;;		On entry : 0/0
 16285 ;;		On exit  : 0/0
 16286 ;;		Unchanged: 0/0
 16287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16292 ;;Total ram usage:        0 bytes
 16293 ;; Hardware stack levels used:    1
 16294 ;; Hardware stack levels required when called:   12
 16295 ;; This function calls:
 16296 ;;		_IOCBF2_SetInterruptHandler
 16297 ;;		_IOCBF3_SetInterruptHandler
 16298 ;; This function is called by:
 16299 ;;		_SYSTEM_Initialize
 16300 ;; This function uses a non-reentrant model
 16301 ;;
 16302                           
 16303                           	psect	text47
 16304  01AED6                     __ptext47:
 16305                           	opt callstack 0
 16306  01AED6                     _PIN_MANAGER_Initialize:
 16307                           	opt callstack 17
 16308                           
 16309                           ;pin_manager.c: 65: LATA = 0x00;
 16310                           
 16311                           ; BSR set to: 14
 16312                           ;incstack = 0
 16313  01AED6  0E00               	movlw	0
 16314  01AED8  6E83               	movwf	3971,c	;volatile
 16315                           
 16316                           ;pin_manager.c: 66: LATB = 0x00;
 16317  01AEDA  0E00               	movlw	0
 16318  01AEDC  6E84               	movwf	3972,c	;volatile
 16319                           
 16320                           ;pin_manager.c: 67: LATC = 0x00;
 16321  01AEDE  0E00               	movlw	0
 16322  01AEE0  6E85               	movwf	3973,c	;volatile
 16323                           
 16324                           ;pin_manager.c: 72: TRISA = 0xFF;
 16325  01AEE2  6888               	setf	3976,c	;volatile
 16326                           
 16327                           ;pin_manager.c: 73: TRISB = 0x3F;
 16328  01AEE4  0E3F               	movlw	63
 16329  01AEE6  6E89               	movwf	3977,c	;volatile
 16330                           
 16331                           ;pin_manager.c: 74: TRISC = 0x08;
 16332  01AEE8  0E08               	movlw	8
 16333  01AEEA  6E8A               	movwf	3978,c	;volatile
 16334                           
 16335                           ;pin_manager.c: 79: ANSELC = 0x00;
 16336  01AEEC  0E00               	movlw	0
 16337  01AEEE  010F               	movlb	15	; () banked
 16338  01AEF0  6F21               	movwf	33,b	;volatile
 16339                           
 16340                           ;pin_manager.c: 80: ANSELB = 0x00;
 16341  01AEF2  0E00               	movlw	0
 16342  01AEF4  6F19               	movwf	25,b	;volatile
 16343                           
 16344                           ;pin_manager.c: 81: ANSELA = 0x3F;
 16345  01AEF6  0E3F               	movlw	63
 16346  01AEF8  6F11               	movwf	17,b	;volatile
 16347                           
 16348                           ;pin_manager.c: 86: WPUE = 0x00;
 16349  01AEFA  0E00               	movlw	0
 16350  01AEFC  6F2D               	movwf	45,b	;volatile
 16351                           
 16352                           ;pin_manager.c: 87: WPUB = 0x00;
 16353  01AEFE  0E00               	movlw	0
 16354  01AF00  6F18               	movwf	24,b	;volatile
 16355                           
 16356                           ;pin_manager.c: 88: WPUA = 0x00;
 16357  01AF02  0E00               	movlw	0
 16358  01AF04  6F10               	movwf	16,b	;volatile
 16359                           
 16360                           ;pin_manager.c: 89: WPUC = 0x00;
 16361  01AF06  0E00               	movlw	0
 16362  01AF08  6F20               	movwf	32,b	;volatile
 16363                           
 16364                           ;pin_manager.c: 94: ODCONA = 0x00;
 16365  01AF0A  0E00               	movlw	0
 16366  01AF0C  6F0F               	movwf	15,b	;volatile
 16367                           
 16368                           ;pin_manager.c: 95: ODCONB = 0x00;
 16369  01AF0E  0E00               	movlw	0
 16370  01AF10  6F17               	movwf	23,b	;volatile
 16371                           
 16372                           ;pin_manager.c: 96: ODCONC = 0x00;
 16373  01AF12  0E00               	movlw	0
 16374  01AF14  6F1F               	movwf	31,b	;volatile
 16375                           
 16376                           ; BSR set to: 15
 16377                           ;pin_manager.c: 101: SLRCONA = 0xFF;
 16378  01AF16  690E               	setf	14,b	;volatile
 16379                           
 16380                           ; BSR set to: 15
 16381                           ;pin_manager.c: 102: SLRCONB = 0xFF;
 16382  01AF18  6916               	setf	22,b	;volatile
 16383                           
 16384                           ; BSR set to: 15
 16385                           ;pin_manager.c: 103: SLRCONC = 0xFF;
 16386  01AF1A  691E               	setf	30,b	;volatile
 16387                           
 16388                           ; BSR set to: 15
 16389                           ;pin_manager.c: 110: IOCBFbits.IOCBF2 = 0;
 16390  01AF1C  9512               	bcf	18,2,b	;volatile
 16391                           
 16392                           ; BSR set to: 15
 16393                           ;pin_manager.c: 112: IOCBFbits.IOCBF3 = 0;
 16394  01AF1E  9712               	bcf	18,3,b	;volatile
 16395                           
 16396                           ; BSR set to: 15
 16397                           ;pin_manager.c: 114: IOCBNbits.IOCBN2 = 1;
 16398  01AF20  8513               	bsf	19,2,b	;volatile
 16399                           
 16400                           ; BSR set to: 15
 16401                           ;pin_manager.c: 116: IOCBNbits.IOCBN3 = 1;
 16402  01AF22  8713               	bsf	19,3,b	;volatile
 16403                           
 16404                           ; BSR set to: 15
 16405                           ;pin_manager.c: 118: IOCBPbits.IOCBP2 = 1;
 16406  01AF24  8514               	bsf	20,2,b	;volatile
 16407                           
 16408                           ; BSR set to: 15
 16409                           ;pin_manager.c: 120: IOCBPbits.IOCBP3 = 1;
 16410  01AF26  8714               	bsf	20,3,b	;volatile
 16411                           
 16412                           ; BSR set to: 15
 16413                           ;pin_manager.c: 125: IOCBF2_SetInterruptHandler(IOCBF2_DefaultInterruptHandler);
 16414  01AF28  0E3C               	movlw	low _IOCBF2_DefaultInterruptHandler
 16415  01AF2A  0102               	movlb	2	; () banked
 16416  01AF2C  6F00               	movwf	IOCBF2_SetInterruptHandler@InterruptHandler& (0+255),b
 16417  01AF2E  0ECB               	movlw	high _IOCBF2_DefaultInterruptHandler
 16418  01AF30  6F01               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16419  01AF32  0E01               	movlw	low (_IOCBF2_DefaultInterruptHandler shr (0+16))
 16420  01AF34  6F02               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16421  01AF36  ECFB  F0E4         	call	_IOCBF2_SetInterruptHandler	;wreg free
 16422                           
 16423                           ;pin_manager.c: 126: IOCBF3_SetInterruptHandler(IOCBF3_DefaultInterruptHandler);
 16424  01AF3A  0E3A               	movlw	low _IOCBF3_DefaultInterruptHandler
 16425  01AF3C  0102               	movlb	2	; () banked
 16426  01AF3E  6F00               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler& (0+255),b
 16427  01AF40  0ECB               	movlw	high _IOCBF3_DefaultInterruptHandler
 16428  01AF42  6F01               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16429  01AF44  0E01               	movlw	low (_IOCBF3_DefaultInterruptHandler shr (0+16))
 16430  01AF46  6F02               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16431  01AF48  ECF4  F0E4         	call	_IOCBF3_SetInterruptHandler	;wreg free
 16432                           
 16433                           ;pin_manager.c: 129: PIE0bits.IOCIE = 1;
 16434  01AF4C  010E               	movlb	14	; () banked
 16435  01AF4E  89C2               	bsf	194,4,b	;volatile
 16436                           
 16437                           ;pin_manager.c: 132: CCP2PPS = 0x09;
 16438  01AF50  0E09               	movlw	9
 16439  01AF52  6FB0               	movwf	176,b	;volatile
 16440                           
 16441                           ;pin_manager.c: 133: SSP2DATPPS = 0x0C;
 16442  01AF54  0E0C               	movlw	12
 16443  01AF56  6F90               	movwf	144,b	;volatile
 16444                           
 16445                           ;pin_manager.c: 134: RB5PPS = 0x11;
 16446  01AF58  0E11               	movlw	17
 16447  01AF5A  6FF4               	movwf	244,b	;volatile
 16448                           
 16449                           ;pin_manager.c: 135: RC4PPS = 0x0B;
 16450  01AF5C  0E0B               	movlw	11
 16451  01AF5E  6FFB               	movwf	251,b	;volatile
 16452                           
 16453                           ;pin_manager.c: 136: RB4PPS = 0x12;
 16454  01AF60  0E12               	movlw	18
 16455  01AF62  6FF3               	movwf	243,b	;volatile
 16456                           
 16457                           ;pin_manager.c: 137: INT2PPS = 0x06;
 16458  01AF64  0E06               	movlw	6
 16459  01AF66  6FA3               	movwf	163,b	;volatile
 16460                           
 16461                           ;pin_manager.c: 138: INT1PPS = 0x07;
 16462  01AF68  0E07               	movlw	7
 16463  01AF6A  6FA2               	movwf	162,b	;volatile
 16464                           
 16465                           ;pin_manager.c: 139: RX2PPS = 0x13;
 16466  01AF6C  0E13               	movlw	19
 16467  01AF6E  6F8D               	movwf	141,b	;volatile
 16468                           
 16469                           ;pin_manager.c: 140: SSP2CLKPPS = 0x0D;
 16470  01AF70  0E0D               	movlw	13
 16471  01AF72  6F8F               	movwf	143,b	;volatile
 16472                           
 16473                           ; BSR set to: 14
 16474  01AF74  0012               	return		;funcret
 16475  01AF76                     __end_of_PIN_MANAGER_Initialize:
 16476                           	opt callstack 0
 16477                           
 16478 ;; *************** function _IOCBF3_SetInterruptHandler *****************
 16479 ;; Defined at:
 16480 ;;		line 205 in file "mcc_generated_files/pin_manager.c"
 16481 ;; Parameters:    Size  Location     Type
 16482 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 16483 ;;		 -> QIChargeIOCHandler(1), IOCBF3_DefaultInterruptHandler(1), 
 16484 ;; Auto vars:     Size  Location     Type
 16485 ;;		None
 16486 ;; Return value:  Size  Location     Type
 16487 ;;                  1    wreg      void 
 16488 ;; Registers used:
 16489 ;;		wreg, status,2, status,0
 16490 ;; Tracked objects:
 16491 ;;		On entry : 0/0
 16492 ;;		On exit  : 0/0
 16493 ;;		Unchanged: 0/0
 16494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16495 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16498 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16499 ;;Total ram usage:        3 bytes
 16500 ;; Hardware stack levels used:    1
 16501 ;; Hardware stack levels required when called:   11
 16502 ;; This function calls:
 16503 ;;		Nothing
 16504 ;; This function is called by:
 16505 ;;		_PIN_MANAGER_Initialize
 16506 ;;		_main
 16507 ;; This function uses a non-reentrant model
 16508 ;;
 16509                           
 16510                           	psect	text48
 16511  01C9E8                     __ptext48:
 16512                           	opt callstack 0
 16513  01C9E8                     _IOCBF3_SetInterruptHandler:
 16514                           	opt callstack 17
 16515                           
 16516                           ;pin_manager.c: 206: IOCBF3_InterruptHandler = InterruptHandler;
 16517                           
 16518                           ; BSR set to: 14
 16519                           ;incstack = 0
 16520  01C9E8  C200  F177         	movff	IOCBF3_SetInterruptHandler@InterruptHandler,_IOCBF3_InterruptHandler
 16521  01C9EC  C201  F178         	movff	IOCBF3_SetInterruptHandler@InterruptHandler+1,_IOCBF3_InterruptHandler+1
 16522  01C9F0  C202  F179         	movff	IOCBF3_SetInterruptHandler@InterruptHandler+2,_IOCBF3_InterruptHandler+2
 16523  01C9F4  0012               	return		;funcret
 16524  01C9F6                     __end_of_IOCBF3_SetInterruptHandler:
 16525                           	opt callstack 0
 16526                           
 16527 ;; *************** function _IOCBF2_SetInterruptHandler *****************
 16528 ;; Defined at:
 16529 ;;		line 175 in file "mcc_generated_files/pin_manager.c"
 16530 ;; Parameters:    Size  Location     Type
 16531 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 16532 ;;		 -> QIIdleIOCHandler(1), IOCBF2_DefaultInterruptHandler(1), 
 16533 ;; Auto vars:     Size  Location     Type
 16534 ;;		None
 16535 ;; Return value:  Size  Location     Type
 16536 ;;                  1    wreg      void 
 16537 ;; Registers used:
 16538 ;;		wreg, status,2, status,0
 16539 ;; Tracked objects:
 16540 ;;		On entry : 0/0
 16541 ;;		On exit  : 0/0
 16542 ;;		Unchanged: 0/0
 16543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16544 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16547 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16548 ;;Total ram usage:        3 bytes
 16549 ;; Hardware stack levels used:    1
 16550 ;; Hardware stack levels required when called:   11
 16551 ;; This function calls:
 16552 ;;		Nothing
 16553 ;; This function is called by:
 16554 ;;		_PIN_MANAGER_Initialize
 16555 ;;		_main
 16556 ;; This function uses a non-reentrant model
 16557 ;;
 16558                           
 16559                           	psect	text49
 16560  01C9F6                     __ptext49:
 16561                           	opt callstack 0
 16562  01C9F6                     _IOCBF2_SetInterruptHandler:
 16563                           	opt callstack 17
 16564                           
 16565                           ;pin_manager.c: 176: IOCBF2_InterruptHandler = InterruptHandler;
 16566                           
 16567                           ;incstack = 0
 16568  01C9F6  C200  F17A         	movff	IOCBF2_SetInterruptHandler@InterruptHandler,_IOCBF2_InterruptHandler
 16569  01C9FA  C201  F17B         	movff	IOCBF2_SetInterruptHandler@InterruptHandler+1,_IOCBF2_InterruptHandler+1
 16570  01C9FE  C202  F17C         	movff	IOCBF2_SetInterruptHandler@InterruptHandler+2,_IOCBF2_InterruptHandler+2
 16571  01CA02  0012               	return		;funcret
 16572  01CA04                     __end_of_IOCBF2_SetInterruptHandler:
 16573                           	opt callstack 0
 16574                           
 16575 ;; *************** function _OSCILLATOR_Initialize *****************
 16576 ;; Defined at:
 16577 ;;		line 69 in file "mcc_generated_files/mcc.c"
 16578 ;; Parameters:    Size  Location     Type
 16579 ;;		None
 16580 ;; Auto vars:     Size  Location     Type
 16581 ;;		None
 16582 ;; Return value:  Size  Location     Type
 16583 ;;                  1    wreg      void 
 16584 ;; Registers used:
 16585 ;;		wreg, status,2
 16586 ;; Tracked objects:
 16587 ;;		On entry : 0/0
 16588 ;;		On exit  : 0/0
 16589 ;;		Unchanged: 0/0
 16590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16595 ;;Total ram usage:        0 bytes
 16596 ;; Hardware stack levels used:    1
 16597 ;; Hardware stack levels required when called:   11
 16598 ;; This function calls:
 16599 ;;		Nothing
 16600 ;; This function is called by:
 16601 ;;		_SYSTEM_Initialize
 16602 ;; This function uses a non-reentrant model
 16603 ;;
 16604                           
 16605                           	psect	text50
 16606  01C85C                     __ptext50:
 16607                           	opt callstack 0
 16608  01C85C                     _OSCILLATOR_Initialize:
 16609                           	opt callstack 18
 16610                           
 16611                           ;mcc.c: 72: OSCCON1 = 0x60;
 16612                           
 16613                           ;incstack = 0
 16614  01C85C  0E60               	movlw	96
 16615  01C85E  010E               	movlb	14	; () banked
 16616  01C860  6FD8               	movwf	216,b	;volatile
 16617                           
 16618                           ;mcc.c: 74: OSCCON3 = 0x00;
 16619  01C862  0E00               	movlw	0
 16620  01C864  6FDA               	movwf	218,b	;volatile
 16621                           
 16622                           ;mcc.c: 76: OSCEN = 0x00;
 16623  01C866  0E00               	movlw	0
 16624  01C868  6FDC               	movwf	220,b	;volatile
 16625                           
 16626                           ;mcc.c: 78: OSCFRQ = 0x08;
 16627  01C86A  0E08               	movlw	8
 16628  01C86C  6FDE               	movwf	222,b	;volatile
 16629                           
 16630                           ;mcc.c: 80: OSCTUNE = 0x00;
 16631  01C86E  0E00               	movlw	0
 16632  01C870  6FDD               	movwf	221,b	;volatile
 16633                           
 16634                           ; BSR set to: 14
 16635  01C872  0012               	return		;funcret
 16636  01C874                     __end_of_OSCILLATOR_Initialize:
 16637                           	opt callstack 0
 16638                           
 16639 ;; *************** function _INTERRUPT_Initialize *****************
 16640 ;; Defined at:
 16641 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 16642 ;; Parameters:    Size  Location     Type
 16643 ;;		None
 16644 ;; Auto vars:     Size  Location     Type
 16645 ;;		None
 16646 ;; Return value:  Size  Location     Type
 16647 ;;                  1    wreg      void 
 16648 ;; Registers used:
 16649 ;;		None
 16650 ;; Tracked objects:
 16651 ;;		On entry : 0/0
 16652 ;;		On exit  : 0/0
 16653 ;;		Unchanged: 0/0
 16654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16659 ;;Total ram usage:        0 bytes
 16660 ;; Hardware stack levels used:    1
 16661 ;; Hardware stack levels required when called:   11
 16662 ;; This function calls:
 16663 ;;		Nothing
 16664 ;; This function is called by:
 16665 ;;		_SYSTEM_Initialize
 16666 ;; This function uses a non-reentrant model
 16667 ;;
 16668                           
 16669                           	psect	text51
 16670  01C6CA                     __ptext51:
 16671                           	opt callstack 0
 16672  01C6CA                     _INTERRUPT_Initialize:
 16673                           	opt callstack 18
 16674                           
 16675                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 16676                           
 16677                           ; BSR set to: 14
 16678                           ;incstack = 0
 16679  01C6CA  8AF2               	bsf	4082,5,c	;volatile
 16680                           
 16681                           ;interrupt_manager.c: 60: IPR4bits.TMR1IP = 1;
 16682  01C6CC  010E               	movlb	14	; () banked
 16683  01C6CE  81BE               	bsf	190,0,b	;volatile
 16684                           
 16685                           ;interrupt_manager.c: 63: IPR0bits.TMR0IP = 1;
 16686  01C6D0  8BBA               	bsf	186,5,b	;volatile
 16687                           
 16688                           ;interrupt_manager.c: 66: IPR3bits.RC2IP = 1;
 16689  01C6D2  8FBD               	bsf	189,7,b	;volatile
 16690                           
 16691                           ;interrupt_manager.c: 69: IPR1bits.ADTIP = 1;
 16692  01C6D4  83BB               	bsf	187,1,b	;volatile
 16693                           
 16694                           ;interrupt_manager.c: 72: IPR0bits.IOCIP = 1;
 16695  01C6D6  89BA               	bsf	186,4,b	;volatile
 16696                           
 16697                           ;interrupt_manager.c: 75: IPR0bits.INT1IP = 1;
 16698  01C6D8  83BA               	bsf	186,1,b	;volatile
 16699                           
 16700                           ;interrupt_manager.c: 78: IPR0bits.INT2IP = 1;
 16701  01C6DA  85BA               	bsf	186,2,b	;volatile
 16702                           
 16703                           ;interrupt_manager.c: 82: IPR4bits.TMR2IP = 0;
 16704  01C6DC  93BE               	bcf	190,1,b	;volatile
 16705                           
 16706                           ;interrupt_manager.c: 85: IPR3bits.BCL2IP = 0;
 16707  01C6DE  97BD               	bcf	189,3,b	;volatile
 16708                           
 16709                           ;interrupt_manager.c: 88: IPR3bits.SSP2IP = 0;
 16710  01C6E0  95BD               	bcf	189,2,b	;volatile
 16711                           
 16712                           ;interrupt_manager.c: 91: IPR4bits.TMR3IP = 0;
 16713  01C6E2  95BE               	bcf	190,2,b	;volatile
 16714                           
 16715                           ;interrupt_manager.c: 94: IPR3bits.TX2IP = 0;
 16716  01C6E4  9DBD               	bcf	189,6,b	;volatile
 16717                           
 16718                           ;interrupt_manager.c: 97: IPR6bits.CCP2IP = 0;
 16719  01C6E6  93C0               	bcf	192,1,b	;volatile
 16720                           
 16721                           ; BSR set to: 14
 16722  01C6E8  0012               	return		;funcret
 16723  01C6EA                     __end_of_INTERRUPT_Initialize:
 16724                           	opt callstack 0
 16725                           
 16726 ;; *************** function _I2C2_Initialize *****************
 16727 ;; Defined at:
 16728 ;;		line 199 in file "mcc_generated_files/i2c2.c"
 16729 ;; Parameters:    Size  Location     Type
 16730 ;;		None
 16731 ;; Auto vars:     Size  Location     Type
 16732 ;;		None
 16733 ;; Return value:  Size  Location     Type
 16734 ;;                  1    wreg      void 
 16735 ;; Registers used:
 16736 ;;		wreg, status,2, status,0
 16737 ;; Tracked objects:
 16738 ;;		On entry : 0/0
 16739 ;;		On exit  : 0/0
 16740 ;;		Unchanged: 0/0
 16741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16746 ;;Total ram usage:        0 bytes
 16747 ;; Hardware stack levels used:    1
 16748 ;; Hardware stack levels required when called:   11
 16749 ;; This function calls:
 16750 ;;		Nothing
 16751 ;; This function is called by:
 16752 ;;		_SYSTEM_Initialize
 16753 ;; This function uses a non-reentrant model
 16754 ;;
 16755                           
 16756                           	psect	text52
 16757  01C1D0                     __ptext52:
 16758                           	opt callstack 0
 16759  01C1D0                     _I2C2_Initialize:
 16760                           	opt callstack 18
 16761                           
 16762                           ;i2c2.c: 201: i2c2_object.pTrHead = i2c2_tr_queue;
 16763                           
 16764                           ; BSR set to: 14
 16765                           ;incstack = 0
 16766  01C1D0  0E9D               	movlw	low _i2c2_tr_queue
 16767  01C1D2  0101               	movlb	1	; () banked
 16768  01C1D4  6F63               	movwf	(_i2c2_object+2)& (0+255),b
 16769  01C1D6  0E01               	movlw	high _i2c2_tr_queue
 16770  01C1D8  6F64               	movwf	(_i2c2_object+3)& (0+255),b
 16771                           
 16772                           ;i2c2.c: 202: i2c2_object.pTrTail = i2c2_tr_queue;
 16773  01C1DA  0E9D               	movlw	low _i2c2_tr_queue
 16774  01C1DC  6F61               	movwf	_i2c2_object& (0+255),b
 16775  01C1DE  0E01               	movlw	high _i2c2_tr_queue
 16776  01C1E0  6F62               	movwf	(_i2c2_object+1)& (0+255),b
 16777                           
 16778                           ; BSR set to: 1
 16779                           ;i2c2.c: 203: i2c2_object.trStatus.s.empty = 1;
 16780  01C1E2  8365               	bsf	(_i2c2_object+4)& (0+255),1,b
 16781                           
 16782                           ; BSR set to: 1
 16783                           ;i2c2.c: 204: i2c2_object.trStatus.s.full = 0;
 16784  01C1E4  9165               	bcf	(_i2c2_object+4)& (0+255),0,b
 16785                           
 16786                           ; BSR set to: 1
 16787                           ;i2c2.c: 206: i2c2_object.i2cErrors = 0;
 16788  01C1E6  0E00               	movlw	0
 16789  01C1E8  6F67               	movwf	(_i2c2_object+6)& (0+255),b
 16790                           
 16791                           ; BSR set to: 1
 16792                           ;i2c2.c: 209: SSP2STAT = 0x00;
 16793  01C1EA  0E00               	movlw	0
 16794  01C1EC  010E               	movlb	14	; () banked
 16795  01C1EE  6F95               	movwf	149,b	;volatile
 16796                           
 16797                           ; BSR set to: 14
 16798                           ;i2c2.c: 211: SSP2CON1 = 0x28;
 16799  01C1F0  0E28               	movlw	40
 16800  01C1F2  6F96               	movwf	150,b	;volatile
 16801                           
 16802                           ; BSR set to: 14
 16803                           ;i2c2.c: 213: SSP2CON3 = 0x00;
 16804  01C1F4  0E00               	movlw	0
 16805  01C1F6  6F98               	movwf	152,b	;volatile
 16806                           
 16807                           ; BSR set to: 14
 16808                           ;i2c2.c: 215: SSP2ADD = 0x27;
 16809  01C1F8  0E27               	movlw	39
 16810  01C1FA  6F93               	movwf	147,b	;volatile
 16811                           
 16812                           ; BSR set to: 14
 16813                           ;i2c2.c: 218: PIR3bits.SSP2IF = 0;
 16814  01C1FC  95CD               	bcf	205,2,b	;volatile
 16815                           
 16816                           ; BSR set to: 14
 16817                           ;i2c2.c: 219: PIR3bits.BCL2IF = 0;
 16818  01C1FE  97CD               	bcf	205,3,b	;volatile
 16819                           
 16820                           ; BSR set to: 14
 16821                           ;i2c2.c: 222: PIE3bits.SSP2IE = 1;
 16822  01C200  85C5               	bsf	197,2,b	;volatile
 16823                           
 16824                           ; BSR set to: 14
 16825                           ;i2c2.c: 223: PIE3bits.BCL2IE = 1;
 16826  01C202  87C5               	bsf	197,3,b	;volatile
 16827                           
 16828                           ; BSR set to: 14
 16829  01C204  0012               	return		;funcret
 16830  01C206                     __end_of_I2C2_Initialize:
 16831                           	opt callstack 0
 16832                           
 16833 ;; *************** function _FVR_Initialize *****************
 16834 ;; Defined at:
 16835 ;;		line 58 in file "mcc_generated_files/fvr.c"
 16836 ;; Parameters:    Size  Location     Type
 16837 ;;		None
 16838 ;; Auto vars:     Size  Location     Type
 16839 ;;		None
 16840 ;; Return value:  Size  Location     Type
 16841 ;;                  1    wreg      void 
 16842 ;; Registers used:
 16843 ;;		wreg, status,2
 16844 ;; Tracked objects:
 16845 ;;		On entry : 0/0
 16846 ;;		On exit  : 0/0
 16847 ;;		Unchanged: 0/0
 16848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16853 ;;Total ram usage:        0 bytes
 16854 ;; Hardware stack levels used:    1
 16855 ;; Hardware stack levels required when called:   11
 16856 ;; This function calls:
 16857 ;;		Nothing
 16858 ;; This function is called by:
 16859 ;;		_SYSTEM_Initialize
 16860 ;; This function uses a non-reentrant model
 16861 ;;
 16862                           
 16863                           	psect	text53
 16864  01CA8E                     __ptext53:
 16865                           	opt callstack 0
 16866  01CA8E                     _FVR_Initialize:
 16867                           	opt callstack 18
 16868                           
 16869                           ;fvr.c: 61: FVRCON = 0xB3;
 16870                           
 16871                           ; BSR set to: 14
 16872                           ;incstack = 0
 16873  01CA8E  0EB3               	movlw	179
 16874  01CA90  010F               	movlb	15	; () banked
 16875  01CA92  6F31               	movwf	49,b	;volatile
 16876                           
 16877                           ; BSR set to: 15
 16878                           ;fvr.c: 62: FVRCONbits.TSRNG = 1;
 16879  01CA94  8931               	bsf	49,4,b	;volatile
 16880                           
 16881                           ; BSR set to: 15
 16882                           ;fvr.c: 63: FVRCONbits.TSEN = 1;
 16883  01CA96  8B31               	bsf	49,5,b	;volatile
 16884                           
 16885                           ; BSR set to: 15
 16886  01CA98  0012               	return		;funcret
 16887  01CA9A                     __end_of_FVR_Initialize:
 16888                           	opt callstack 0
 16889                           
 16890 ;; *************** function _EXT_INT_Initialize *****************
 16891 ;; Defined at:
 16892 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 16893 ;; Parameters:    Size  Location     Type
 16894 ;;		None
 16895 ;; Auto vars:     Size  Location     Type
 16896 ;;		None
 16897 ;; Return value:  Size  Location     Type
 16898 ;;                  1    wreg      void 
 16899 ;; Registers used:
 16900 ;;		wreg, status,2, status,0, cstack
 16901 ;; Tracked objects:
 16902 ;;		On entry : 0/0
 16903 ;;		On exit  : 0/0
 16904 ;;		Unchanged: 0/0
 16905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16910 ;;Total ram usage:        0 bytes
 16911 ;; Hardware stack levels used:    1
 16912 ;; Hardware stack levels required when called:   12
 16913 ;; This function calls:
 16914 ;;		_INT1_SetInterruptHandler
 16915 ;;		_INT2_SetInterruptHandler
 16916 ;; This function is called by:
 16917 ;;		_SYSTEM_Initialize
 16918 ;; This function uses a non-reentrant model
 16919 ;;
 16920                           
 16921                           	psect	text54
 16922  01C198                     __ptext54:
 16923                           	opt callstack 0
 16924  01C198                     _EXT_INT_Initialize:
 16925                           	opt callstack 17
 16926                           
 16927                           ;ext_int.c: 91: (PIR0bits.INT1IF = 0);
 16928                           
 16929                           ; BSR set to: 15
 16930                           ;incstack = 0
 16931  01C198  010E               	movlb	14	; () banked
 16932  01C19A  93CA               	bcf	202,1,b	;volatile
 16933                           
 16934                           ;ext_int.c: 92: (INTCONbits.INT1EDG = 1);
 16935  01C19C  82F2               	bsf	4082,1,c	;volatile
 16936                           
 16937                           ; BSR set to: 14
 16938                           ;ext_int.c: 94: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
 16939  01C19E  0E40               	movlw	low _INT1_DefaultInterruptHandler
 16940  01C1A0  0102               	movlb	2	; () banked
 16941  01C1A2  6F00               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
 16942  01C1A4  0ECB               	movlw	high _INT1_DefaultInterruptHandler
 16943  01C1A6  6F01               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16944  01C1A8  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 16945  01C1AA  6F02               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16946  01C1AC  EC09  F0E5         	call	_INT1_SetInterruptHandler	;wreg free
 16947                           
 16948                           ;ext_int.c: 95: (PIE0bits.INT1IE = 1);
 16949  01C1B0  010E               	movlb	14	; () banked
 16950  01C1B2  83C2               	bsf	194,1,b	;volatile
 16951                           
 16952                           ; BSR set to: 14
 16953                           ;ext_int.c: 100: (PIR0bits.INT2IF = 0);
 16954  01C1B4  95CA               	bcf	202,2,b	;volatile
 16955                           
 16956                           ; BSR set to: 14
 16957                           ;ext_int.c: 101: (INTCONbits.INT2EDG = 1);
 16958  01C1B6  84F2               	bsf	4082,2,c	;volatile
 16959                           
 16960                           ;ext_int.c: 103: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
 16961  01C1B8  0E3E               	movlw	low _INT2_DefaultInterruptHandler
 16962  01C1BA  0102               	movlb	2	; () banked
 16963  01C1BC  6F00               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
 16964  01C1BE  0ECB               	movlw	high _INT2_DefaultInterruptHandler
 16965  01C1C0  6F01               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16966  01C1C2  0E01               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 16967  01C1C4  6F02               	movwf	(INT2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16968  01C1C6  EC02  F0E5         	call	_INT2_SetInterruptHandler	;wreg free
 16969                           
 16970                           ;ext_int.c: 104: (PIE0bits.INT2IE = 1);
 16971  01C1CA  010E               	movlb	14	; () banked
 16972  01C1CC  85C2               	bsf	194,2,b	;volatile
 16973                           
 16974                           ; BSR set to: 14
 16975  01C1CE  0012               	return		;funcret
 16976  01C1D0                     __end_of_EXT_INT_Initialize:
 16977                           	opt callstack 0
 16978                           
 16979 ;; *************** function _INT2_SetInterruptHandler *****************
 16980 ;; Defined at:
 16981 ;;		line 77 in file "mcc_generated_files/ext_int.c"
 16982 ;; Parameters:    Size  Location     Type
 16983 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 16984 ;;		 -> rightCapTouchHandler(1), INT2_DefaultInterruptHandler(1), 
 16985 ;; Auto vars:     Size  Location     Type
 16986 ;;		None
 16987 ;; Return value:  Size  Location     Type
 16988 ;;                  1    wreg      void 
 16989 ;; Registers used:
 16990 ;;		wreg, status,2, status,0
 16991 ;; Tracked objects:
 16992 ;;		On entry : 0/0
 16993 ;;		On exit  : 0/0
 16994 ;;		Unchanged: 0/0
 16995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16996 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16999 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17000 ;;Total ram usage:        3 bytes
 17001 ;; Hardware stack levels used:    1
 17002 ;; Hardware stack levels required when called:   11
 17003 ;; This function calls:
 17004 ;;		Nothing
 17005 ;; This function is called by:
 17006 ;;		_EXT_INT_Initialize
 17007 ;;		_main
 17008 ;; This function uses a non-reentrant model
 17009 ;;
 17010                           
 17011                           	psect	text55
 17012  01CA04                     __ptext55:
 17013                           	opt callstack 0
 17014  01CA04                     _INT2_SetInterruptHandler:
 17015                           	opt callstack 17
 17016                           
 17017                           ;ext_int.c: 78: INT2_InterruptHandler = InterruptHandler;
 17018                           
 17019                           ; BSR set to: 14
 17020                           ;incstack = 0
 17021  01CA04  C200  F180         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
 17022  01CA08  C201  F181         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
 17023  01CA0C  C202  F182         	movff	INT2_SetInterruptHandler@InterruptHandler+2,_INT2_InterruptHandler+2
 17024  01CA10  0012               	return		;funcret
 17025  01CA12                     __end_of_INT2_SetInterruptHandler:
 17026                           	opt callstack 0
 17027                           
 17028 ;; *************** function _INT1_SetInterruptHandler *****************
 17029 ;; Defined at:
 17030 ;;		line 51 in file "mcc_generated_files/ext_int.c"
 17031 ;; Parameters:    Size  Location     Type
 17032 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 17033 ;;		 -> leftCapTouchHandler(1), INT1_DefaultInterruptHandler(1), 
 17034 ;; Auto vars:     Size  Location     Type
 17035 ;;		None
 17036 ;; Return value:  Size  Location     Type
 17037 ;;                  1    wreg      void 
 17038 ;; Registers used:
 17039 ;;		wreg, status,2, status,0
 17040 ;; Tracked objects:
 17041 ;;		On entry : 0/0
 17042 ;;		On exit  : 0/0
 17043 ;;		Unchanged: 0/0
 17044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17045 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17048 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17049 ;;Total ram usage:        3 bytes
 17050 ;; Hardware stack levels used:    1
 17051 ;; Hardware stack levels required when called:   11
 17052 ;; This function calls:
 17053 ;;		Nothing
 17054 ;; This function is called by:
 17055 ;;		_EXT_INT_Initialize
 17056 ;;		_main
 17057 ;; This function uses a non-reentrant model
 17058 ;;
 17059                           
 17060                           	psect	text56
 17061  01CA12                     __ptext56:
 17062                           	opt callstack 0
 17063  01CA12                     _INT1_SetInterruptHandler:
 17064                           	opt callstack 17
 17065                           
 17066                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
 17067                           
 17068                           ;incstack = 0
 17069  01CA12  C200  F183         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
 17070  01CA16  C201  F184         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
 17071  01CA1A  C202  F185         	movff	INT1_SetInterruptHandler@InterruptHandler+2,_INT1_InterruptHandler+2
 17072  01CA1E  0012               	return		;funcret
 17073  01CA20                     __end_of_INT1_SetInterruptHandler:
 17074                           	opt callstack 0
 17075                           
 17076 ;; *************** function _EUSART2_Initialize *****************
 17077 ;; Defined at:
 17078 ;;		line 79 in file "mcc_generated_files/eusart2.c"
 17079 ;; Parameters:    Size  Location     Type
 17080 ;;		None
 17081 ;; Auto vars:     Size  Location     Type
 17082 ;;		None
 17083 ;; Return value:  Size  Location     Type
 17084 ;;                  1    wreg      void 
 17085 ;; Registers used:
 17086 ;;		wreg, status,2, status,0, cstack
 17087 ;; Tracked objects:
 17088 ;;		On entry : 0/0
 17089 ;;		On exit  : 0/0
 17090 ;;		Unchanged: 0/0
 17091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17096 ;;Total ram usage:        0 bytes
 17097 ;; Hardware stack levels used:    1
 17098 ;; Hardware stack levels required when called:   12
 17099 ;; This function calls:
 17100 ;;		_EUSART2_SetRxInterruptHandler
 17101 ;;		_EUSART2_SetTxInterruptHandler
 17102 ;; This function is called by:
 17103 ;;		_SYSTEM_Initialize
 17104 ;; This function uses a non-reentrant model
 17105 ;;
 17106                           
 17107                           	psect	text57
 17108  01B60C                     __ptext57:
 17109                           	opt callstack 0
 17110  01B60C                     _EUSART2_Initialize:
 17111                           	opt callstack 17
 17112                           
 17113                           ;eusart2.c: 82: PIE3bits.RC2IE = 0;
 17114                           
 17115                           ;incstack = 0
 17116  01B60C  010E               	movlb	14	; () banked
 17117  01B60E  9FC5               	bcf	197,7,b	;volatile
 17118                           
 17119                           ; BSR set to: 14
 17120                           ;eusart2.c: 83: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 17121  01B610  0E90               	movlw	low _EUSART2_Receive_ISR
 17122  01B612  0102               	movlb	2	; () banked
 17123  01B614  6F00               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 17124  01B616  0EAD               	movlw	high _EUSART2_Receive_ISR
 17125  01B618  6F01               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 17126  01B61A  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 17127  01B61C  6F02               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 17128  01B61E  EC17  F0E5         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 17129                           
 17130                           ;eusart2.c: 84: PIE3bits.TX2IE = 0;
 17131  01B622  010E               	movlb	14	; () banked
 17132  01B624  9DC5               	bcf	197,6,b	;volatile
 17133                           
 17134                           ;eusart2.c: 85: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 17135  01B626  0ED4               	movlw	low _EUSART2_Transmit_ISR
 17136  01B628  0102               	movlb	2	; () banked
 17137  01B62A  6F00               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 17138  01B62C  0EC2               	movlw	high _EUSART2_Transmit_ISR
 17139  01B62E  6F01               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 17140  01B630  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 17141  01B632  6F02               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 17142  01B634  EC10  F0E5         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 17143                           
 17144                           ;eusart2.c: 89: BAUD2CON = 0x08;
 17145  01B638  0E08               	movlw	8
 17146  01B63A  010E               	movlb	14	; () banked
 17147  01B63C  6F9F               	movwf	159,b	;volatile
 17148                           
 17149                           ; BSR set to: 14
 17150                           ;eusart2.c: 92: RC2STA = 0x90;
 17151  01B63E  0E90               	movlw	144
 17152  01B640  6F9D               	movwf	157,b	;volatile
 17153                           
 17154                           ; BSR set to: 14
 17155                           ;eusart2.c: 95: TX2STA = 0x24;
 17156  01B642  0E24               	movlw	36
 17157  01B644  6F9E               	movwf	158,b	;volatile
 17158                           
 17159                           ; BSR set to: 14
 17160                           ;eusart2.c: 98: SP2BRGL = 0x8A;
 17161  01B646  0E8A               	movlw	138
 17162  01B648  6F9B               	movwf	155,b	;volatile
 17163                           
 17164                           ; BSR set to: 14
 17165                           ;eusart2.c: 101: SP2BRGH = 0x00;
 17166  01B64A  0E00               	movlw	0
 17167  01B64C  6F9C               	movwf	156,b	;volatile
 17168                           
 17169                           ; BSR set to: 14
 17170                           ;eusart2.c: 105: eusart2TxHead = 0;
 17171  01B64E  0E00               	movlw	0
 17172  01B650  0101               	movlb	1	; () banked
 17173  01B652  6F92               	movwf	_eusart2TxHead& (0+255),b	;volatile
 17174                           
 17175                           ; BSR set to: 1
 17176                           ;eusart2.c: 106: eusart2TxTail = 0;
 17177  01B654  0E00               	movlw	0
 17178  01B656  6F91               	movwf	_eusart2TxTail& (0+255),b	;volatile
 17179                           
 17180                           ; BSR set to: 1
 17181                           ;eusart2.c: 107: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 17182  01B658  0E40               	movlw	64
 17183  01B65A  6F90               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 17184                           
 17185                           ; BSR set to: 1
 17186                           ;eusart2.c: 109: eusart2RxHead = 0;
 17187  01B65C  0E00               	movlw	0
 17188  01B65E  0100               	movlb	0	; () banked
 17189  01B660  6FDE               	movwf	_eusart2RxHead& (0+255),b	;volatile
 17190                           
 17191                           ; BSR set to: 0
 17192                           ;eusart2.c: 110: eusart2RxTail = 0;
 17193  01B662  0E00               	movlw	0
 17194  01B664  0101               	movlb	1	; () banked
 17195  01B666  6F8F               	movwf	_eusart2RxTail& (0+255),b	;volatile
 17196                           
 17197                           ; BSR set to: 1
 17198                           ;eusart2.c: 111: eusart2RxCount = 0;
 17199  01B668  0E00               	movlw	0
 17200  01B66A  6F8E               	movwf	_eusart2RxCount& (0+255),b	;volatile
 17201                           
 17202                           ; BSR set to: 1
 17203                           ;eusart2.c: 114: PIE3bits.RC2IE = 1;
 17204  01B66C  010E               	movlb	14	; () banked
 17205  01B66E  8FC5               	bsf	197,7,b	;volatile
 17206                           
 17207                           ; BSR set to: 14
 17208  01B670  0012               	return		;funcret
 17209  01B672                     __end_of_EUSART2_Initialize:
 17210                           	opt callstack 0
 17211                           
 17212 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 17213 ;; Defined at:
 17214 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 17215 ;; Parameters:    Size  Location     Type
 17216 ;;  interruptHan    3    0[BANK2 ] PTR FTN()void 
 17217 ;;		 -> EUSART2_Transmit_ISR(1), 
 17218 ;; Auto vars:     Size  Location     Type
 17219 ;;		None
 17220 ;; Return value:  Size  Location     Type
 17221 ;;                  1    wreg      void 
 17222 ;; Registers used:
 17223 ;;		wreg, status,2, status,0
 17224 ;; Tracked objects:
 17225 ;;		On entry : 0/0
 17226 ;;		On exit  : 0/0
 17227 ;;		Unchanged: 0/0
 17228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17229 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17232 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17233 ;;Total ram usage:        3 bytes
 17234 ;; Hardware stack levels used:    1
 17235 ;; Hardware stack levels required when called:   11
 17236 ;; This function calls:
 17237 ;;		Nothing
 17238 ;; This function is called by:
 17239 ;;		_EUSART2_Initialize
 17240 ;; This function uses a non-reentrant model
 17241 ;;
 17242                           
 17243                           	psect	text58
 17244  01CA20                     __ptext58:
 17245                           	opt callstack 0
 17246  01CA20                     _EUSART2_SetTxInterruptHandler:
 17247                           	opt callstack 17
 17248                           
 17249                           ;eusart2.c: 265: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 17250                           
 17251                           ; BSR set to: 14
 17252                           ;incstack = 0
 17253  01CA20  C200  F17D         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 17254  01CA24  C201  F17E         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 17255  01CA28  C202  F17F         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 17256  01CA2C  0012               	return		;funcret
 17257  01CA2E                     __end_of_EUSART2_SetTxInterruptHandler:
 17258                           	opt callstack 0
 17259                           
 17260 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 17261 ;; Defined at:
 17262 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 17263 ;; Parameters:    Size  Location     Type
 17264 ;;  interruptHan    3    0[BANK2 ] PTR FTN()void 
 17265 ;;		 -> EUSART2_Receive_ISR(1), 
 17266 ;; Auto vars:     Size  Location     Type
 17267 ;;		None
 17268 ;; Return value:  Size  Location     Type
 17269 ;;                  1    wreg      void 
 17270 ;; Registers used:
 17271 ;;		wreg, status,2, status,0
 17272 ;; Tracked objects:
 17273 ;;		On entry : 0/0
 17274 ;;		On exit  : 0/0
 17275 ;;		Unchanged: 0/0
 17276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17277 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17280 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17281 ;;Total ram usage:        3 bytes
 17282 ;; Hardware stack levels used:    1
 17283 ;; Hardware stack levels required when called:   11
 17284 ;; This function calls:
 17285 ;;		Nothing
 17286 ;; This function is called by:
 17287 ;;		_EUSART2_Initialize
 17288 ;; This function uses a non-reentrant model
 17289 ;;
 17290                           
 17291                           	psect	text59
 17292  01CA2E                     __ptext59:
 17293                           	opt callstack 0
 17294  01CA2E                     _EUSART2_SetRxInterruptHandler:
 17295                           	opt callstack 17
 17296                           
 17297                           ;eusart2.c: 269: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 17298                           
 17299                           ;incstack = 0
 17300  01CA2E  C200  F0CF         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 17301  01CA32  C201  F0D0         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 17302  01CA36  C202  F0D1         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 17303  01CA3A  0012               	return		;funcret
 17304  01CA3C                     __end_of_EUSART2_SetRxInterruptHandler:
 17305                           	opt callstack 0
 17306                           
 17307 ;; *************** function _CCP2_Initialize *****************
 17308 ;; Defined at:
 17309 ;;		line 61 in file "mcc_generated_files/ccp2.c"
 17310 ;; Parameters:    Size  Location     Type
 17311 ;;		None
 17312 ;; Auto vars:     Size  Location     Type
 17313 ;;		None
 17314 ;; Return value:  Size  Location     Type
 17315 ;;                  1    wreg      void 
 17316 ;; Registers used:
 17317 ;;		wreg, status,2
 17318 ;; Tracked objects:
 17319 ;;		On entry : 0/0
 17320 ;;		On exit  : 0/0
 17321 ;;		Unchanged: 0/0
 17322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17327 ;;Total ram usage:        0 bytes
 17328 ;; Hardware stack levels used:    1
 17329 ;; Hardware stack levels required when called:   11
 17330 ;; This function calls:
 17331 ;;		Nothing
 17332 ;; This function is called by:
 17333 ;;		_SYSTEM_Initialize
 17334 ;; This function uses a non-reentrant model
 17335 ;;
 17336                           
 17337                           	psect	text60
 17338  01C626                     __ptext60:
 17339                           	opt callstack 0
 17340  01C626                     _CCP2_Initialize:
 17341                           	opt callstack 18
 17342                           
 17343                           ;ccp2.c: 66: CCP2CON = 0x87;
 17344                           
 17345                           ;incstack = 0
 17346  01C626  0E87               	movlw	135
 17347  01C628  6EA8               	movwf	4008,c	;volatile
 17348                           
 17349                           ;ccp2.c: 69: CCP2CAP = 0x00;
 17350  01C62A  0E00               	movlw	0
 17351  01C62C  6EA9               	movwf	4009,c	;volatile
 17352                           
 17353                           ;ccp2.c: 72: CCPR2H = 0x00;
 17354  01C62E  0E00               	movlw	0
 17355  01C630  6EA7               	movwf	4007,c	;volatile
 17356                           
 17357                           ;ccp2.c: 75: CCPR2L = 0x00;
 17358  01C632  0E00               	movlw	0
 17359  01C634  6EA6               	movwf	4006,c	;volatile
 17360                           
 17361                           ;ccp2.c: 78: CCPTMRSbits.C2TSEL = 0x3;
 17362  01C636  0E0C               	movlw	12
 17363  01C638  12AE               	iorwf	4014,f,c	;volatile
 17364                           
 17365                           ;ccp2.c: 81: PIR6bits.CCP2IF = 0;
 17366  01C63A  010E               	movlb	14	; () banked
 17367  01C63C  93D0               	bcf	208,1,b	;volatile
 17368                           
 17369                           ; BSR set to: 14
 17370                           ;ccp2.c: 84: PIE6bits.CCP2IE = 1;
 17371  01C63E  83C8               	bsf	200,1,b	;volatile
 17372                           
 17373                           ;ccp2.c: 86: QI_current_edge = qi_period_rising_1;
 17374  01C640  0E00               	movlw	0
 17375  01C642  0101               	movlb	1	; () banked
 17376  01C644  6F8D               	movwf	_QI_current_edge& (0+255),b
 17377                           
 17378                           ; BSR set to: 1
 17379  01C646  0012               	return		;funcret
 17380  01C648                     __end_of_CCP2_Initialize:
 17381                           	opt callstack 0
 17382                           
 17383 ;; *************** function _ADCC_Initialize *****************
 17384 ;; Defined at:
 17385 ;;		line 63 in file "mcc_generated_files/adcc.c"
 17386 ;; Parameters:    Size  Location     Type
 17387 ;;		None
 17388 ;; Auto vars:     Size  Location     Type
 17389 ;;		None
 17390 ;; Return value:  Size  Location     Type
 17391 ;;                  1    wreg      void 
 17392 ;; Registers used:
 17393 ;;		wreg, status,2, status,0, cstack
 17394 ;; Tracked objects:
 17395 ;;		On entry : 0/0
 17396 ;;		On exit  : 0/0
 17397 ;;		Unchanged: 0/0
 17398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17403 ;;Total ram usage:        0 bytes
 17404 ;; Hardware stack levels used:    1
 17405 ;; Hardware stack levels required when called:   12
 17406 ;; This function calls:
 17407 ;;		_ADCC_SetADTIInterruptHandler
 17408 ;; This function is called by:
 17409 ;;		_SYSTEM_Initialize
 17410 ;; This function uses a non-reentrant model
 17411 ;;
 17412                           
 17413                           	psect	text61
 17414  01B73E                     __ptext61:
 17415                           	opt callstack 0
 17416  01B73E                     _ADCC_Initialize:
 17417                           	opt callstack 17
 17418                           
 17419                           ;adcc.c: 67: ADLTHL = 0x00;
 17420                           
 17421                           ; BSR set to: 1
 17422                           ;incstack = 0
 17423  01B73E  0E00               	movlw	0
 17424  01B740  6E6A               	movwf	3946,c	;volatile
 17425                           
 17426                           ;adcc.c: 69: ADLTHH = 0x00;
 17427  01B742  0E00               	movlw	0
 17428  01B744  6E6B               	movwf	3947,c	;volatile
 17429                           
 17430                           ;adcc.c: 71: ADUTHL = 0x00;
 17431  01B746  0E00               	movlw	0
 17432  01B748  6E6C               	movwf	3948,c	;volatile
 17433                           
 17434                           ;adcc.c: 73: ADUTHH = 0x00;
 17435  01B74A  0E00               	movlw	0
 17436  01B74C  6E6D               	movwf	3949,c	;volatile
 17437                           
 17438                           ;adcc.c: 75: ADSTPTL = 0x00;
 17439  01B74E  0E00               	movlw	0
 17440  01B750  6E68               	movwf	3944,c	;volatile
 17441                           
 17442                           ;adcc.c: 77: ADSTPTH = 0x00;
 17443  01B752  0E00               	movlw	0
 17444  01B754  6E69               	movwf	3945,c	;volatile
 17445                           
 17446                           ;adcc.c: 79: ADRPT = 0xFF;
 17447  01B756  6866               	setf	3942,c	;volatile
 17448                           
 17449                           ;adcc.c: 81: ADPCH = 0x00;
 17450  01B758  0E00               	movlw	0
 17451  01B75A  010F               	movlb	15	; () banked
 17452  01B75C  6F5F               	movwf	95,b	;volatile
 17453                           
 17454                           ;adcc.c: 83: ADCAP = 0x00;
 17455  01B75E  0E00               	movlw	0
 17456  01B760  6F5D               	movwf	93,b	;volatile
 17457                           
 17458                           ;adcc.c: 85: ADCON1 = 0x00;
 17459  01B762  0E00               	movlw	0
 17460  01B764  6F59               	movwf	89,b	;volatile
 17461                           
 17462                           ;adcc.c: 87: ADCON2 = 0x04;
 17463  01B766  0E04               	movlw	4
 17464  01B768  6F5A               	movwf	90,b	;volatile
 17465                           
 17466                           ;adcc.c: 89: ADCON3 = 0x5F;
 17467  01B76A  0E5F               	movlw	95
 17468  01B76C  6F5B               	movwf	91,b	;volatile
 17469                           
 17470                           ;adcc.c: 91: ADSTAT = 0x00;
 17471  01B76E  0E00               	movlw	0
 17472  01B770  6E65               	movwf	3941,c	;volatile
 17473                           
 17474                           ;adcc.c: 93: ADREF = 0x12;
 17475  01B772  0E12               	movlw	18
 17476  01B774  6F58               	movwf	88,b	;volatile
 17477                           
 17478                           ;adcc.c: 95: ADACT = 0x00;
 17479  01B776  0E00               	movlw	0
 17480  01B778  6F56               	movwf	86,b	;volatile
 17481                           
 17482                           ;adcc.c: 97: ADCLK = 0x1F;
 17483  01B77A  0E1F               	movlw	31
 17484  01B77C  6F57               	movwf	87,b	;volatile
 17485                           
 17486                           ;adcc.c: 99: ADCON0 = 0xC4;
 17487  01B77E  0EC4               	movlw	196
 17488  01B780  6E60               	movwf	3936,c	;volatile
 17489                           
 17490                           ; BSR set to: 15
 17491                           ;adcc.c: 101: ADACQ = 0xFF;
 17492  01B782  695C               	setf	92,b	;volatile
 17493                           
 17494                           ; BSR set to: 15
 17495                           ;adcc.c: 105: PIR1bits.ADTIF = 0;
 17496  01B784  010E               	movlb	14	; () banked
 17497  01B786  93CB               	bcf	203,1,b	;volatile
 17498                           
 17499                           ; BSR set to: 14
 17500                           ;adcc.c: 107: PIE1bits.ADTIE = 1;
 17501  01B788  83C3               	bsf	195,1,b	;volatile
 17502                           
 17503                           ; BSR set to: 14
 17504                           ;adcc.c: 109: ADCC_SetADTIInterruptHandler(ADCC_DefaultInterruptHandler);
 17505  01B78A  0E42               	movlw	low _ADCC_DefaultInterruptHandler
 17506  01B78C  0102               	movlb	2	; () banked
 17507  01B78E  6F00               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 17508  01B790  0ECB               	movlw	high _ADCC_DefaultInterruptHandler
 17509  01B792  6F01               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 17510  01B794  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 17511  01B796  6F02               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 17512  01B798  EC1E  F0E5         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 17513  01B79C  0012               	return		;funcret
 17514  01B79E                     __end_of_ADCC_Initialize:
 17515                           	opt callstack 0
 17516                           
 17517 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 17518 ;; Defined at:
 17519 ;;		line 307 in file "mcc_generated_files/adcc.c"
 17520 ;; Parameters:    Size  Location     Type
 17521 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 17522 ;;		 -> ADC_PostProcessingHandler(1), ADCC_DefaultInterruptHandler(1), 
 17523 ;; Auto vars:     Size  Location     Type
 17524 ;;		None
 17525 ;; Return value:  Size  Location     Type
 17526 ;;                  1    wreg      void 
 17527 ;; Registers used:
 17528 ;;		wreg, status,2, status,0
 17529 ;; Tracked objects:
 17530 ;;		On entry : 0/0
 17531 ;;		On exit  : 0/0
 17532 ;;		Unchanged: 0/0
 17533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17534 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17537 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17538 ;;Total ram usage:        3 bytes
 17539 ;; Hardware stack levels used:    1
 17540 ;; Hardware stack levels required when called:   11
 17541 ;; This function calls:
 17542 ;;		Nothing
 17543 ;; This function is called by:
 17544 ;;		_ADCC_Initialize
 17545 ;;		_main
 17546 ;; This function uses a non-reentrant model
 17547 ;;
 17548                           
 17549                           	psect	text62
 17550  01CA3C                     __ptext62:
 17551                           	opt callstack 0
 17552  01CA3C                     _ADCC_SetADTIInterruptHandler:
 17553                           	opt callstack 17
 17554                           
 17555                           ;adcc.c: 308: ADCC_ADTI_InterruptHandler = InterruptHandler;
 17556                           
 17557                           ;incstack = 0
 17558  01CA3C  C200  F0CC         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 17559  01CA40  C201  F0CD         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 17560  01CA44  C202  F0CE         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+2,_ADCC_ADTI_InterruptHandler+2
 17561  01CA48  0012               	return		;funcret
 17562  01CA4A                     __end_of_ADCC_SetADTIInterruptHandler:
 17563                           	opt callstack 0
 17564                           
 17565 ;; *************** function _OLED_updateHandler *****************
 17566 ;; Defined at:
 17567 ;;		line 324 in file "oled.c"
 17568 ;; Parameters:    Size  Location     Type
 17569 ;;		None
 17570 ;; Auto vars:     Size  Location     Type
 17571 ;;  rev_id_str     17   17[BANK3 ] unsigned char [17]
 17572 ;;  dev_id_str     17    0[BANK3 ] unsigned char [17]
 17573 ;; Return value:  Size  Location     Type
 17574 ;;                  1    wreg      void 
 17575 ;; Registers used:
 17576 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17577 ;; Tracked objects:
 17578 ;;		On entry : 0/0
 17579 ;;		On exit  : 0/0
 17580 ;;		Unchanged: 0/0
 17581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17583 ;;      Locals:         0       0       0       0      36       0       0       0       0       0       0       0       
      +0       0       0       0
 17584 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17585 ;;      Totals:         0       0       0       2      36       0       0       0       0       0       0       0       
      +0       0       0       0
 17586 ;;Total ram usage:       38 bytes
 17587 ;; Hardware stack levels used:    1
 17588 ;; Hardware stack levels required when called:   17
 17589 ;; This function calls:
 17590 ;;		_OLED_UpdateFromRAMBuffer
 17591 ;;		_floatToEngineeringFormat
 17592 ;;		_getCauseOfResetStringSmall
 17593 ;;		_getDaysFromOnTime
 17594 ;;		_getDeviceID
 17595 ;;		_getHoursFromOnTime
 17596 ;;		_getMajorRevisionID
 17597 ;;		_getMinorRevisionID
 17598 ;;		_getMinutesFromOnTime
 17599 ;;		_getNXQChargeStateStringCaps
 17600 ;;		_getSecondsFromOnTime
 17601 ;;		_getYearsFromOnTime
 17602 ;;		_sprintf
 17603 ;;		_strcpy
 17604 ;; This function is called by:
 17605 ;;		_main
 17606 ;; This function uses a non-reentrant model
 17607 ;;
 17608                           
 17609                           	psect	text63
 17610  012E3C                     __ptext63:
 17611                           	opt callstack 0
 17612  012E3C                     _OLED_updateHandler:
 17613                           	opt callstack 13
 17614                           
 17615                           ;oled.c: 326: switch (OLED_Frame) {
 17616                           
 17617                           ;incstack = 0
 17618  012E3C  EFDA  F09F         	goto	l22150
 17619  012E40                     l21660:
 17620                           
 17621                           ; BSR set to: 2
 17622                           ;oled.c: 330: OLED_update_flag = 0;
 17623  012E40  0E00               	movlw	0
 17624  012E42  6FD7               	movwf	_OLED_update_flag& (0+255),b
 17625                           
 17626                           ; BSR set to: 2
 17627                           ;oled.c: 333: strcpy(OLED_RAM_Buffer.line0, "QI Charger w/");
 17628  012E44  0E00               	movlw	low _OLED_RAM_Buffer
 17629  012E46  6F03               	movwf	strcpy@to& (0+255),b
 17630  012E48  0E03               	movlw	high _OLED_RAM_Buffer
 17631  012E4A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17632  012E4C  0E46               	movlw	low STR_60
 17633  012E4E  6F05               	movwf	strcpy@from& (0+255),b
 17634  012E50  0EFC               	movlw	high STR_60
 17635  012E52  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17636  012E54  ECF7  F0DD         	call	_strcpy	;wreg free
 17637                           
 17638                           ;oled.c: 334: strcpy(OLED_RAM_Buffer.line1, "Digital Monitor");
 17639  012E58  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 17640  012E5A  0102               	movlb	2	; () banked
 17641  012E5C  6F03               	movwf	strcpy@to& (0+255),b
 17642  012E5E  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 17643  012E60  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17644  012E62  0E81               	movlw	low STR_61
 17645  012E64  6F05               	movwf	strcpy@from& (0+255),b
 17646  012E66  0EFB               	movlw	high STR_61
 17647  012E68  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17648  012E6A  ECF7  F0DD         	call	_strcpy	;wreg free
 17649                           
 17650                           ;oled.c: 335: strcpy(OLED_RAM_Buffer.line2, "Cause of Reset:");
 17651  012E6E  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 17652  012E70  0102               	movlb	2	; () banked
 17653  012E72  6F03               	movwf	strcpy@to& (0+255),b
 17654  012E74  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 17655  012E76  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17656  012E78  0E71               	movlw	low STR_62
 17657  012E7A  6F05               	movwf	strcpy@from& (0+255),b
 17658  012E7C  0EFB               	movlw	high STR_62
 17659  012E7E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17660  012E80  ECF7  F0DD         	call	_strcpy	;wreg free
 17661                           
 17662                           ;oled.c: 336: strcpy(OLED_RAM_Buffer.line3, getCauseOfResetStringSmall(reset_cause));
 17663  012E84  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 17664  012E86  0102               	movlb	2	; () banked
 17665  012E88  6F03               	movwf	strcpy@to& (0+255),b
 17666  012E8A  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 17667  012E8C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17668  012E8E  51FF               	movf	_reset_cause& (0+255),w,b
 17669  012E90  ECB3  F0E1         	call	_getCauseOfResetStringSmall
 17670  012E94  C200  F205         	movff	?_getCauseOfResetStringSmall,strcpy@from
 17671  012E98  C201  F206         	movff	?_getCauseOfResetStringSmall+1,strcpy@from+1
 17672  012E9C  ECF7  F0DD         	call	_strcpy	;wreg free
 17673                           
 17674                           ;oled.c: 337: OLED_UpdateFromRAMBuffer();
 17675  012EA0  ECEC  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 17676                           
 17677                           ;oled.c: 338: OLED_Frame = OLED_Boot_Frame_2;
 17678  012EA4  0E01               	movlw	1
 17679  012EA6                     L3:
 17680  012EA6  0102               	movlb	2	; () banked
 17681  012EA8  6FD8               	movwf	_OLED_Frame& (0+255),b
 17682                           
 17683                           ; BSR set to: 2
 17684                           ;oled.c: 339: OLED_update_time = 3;
 17685  012EAA  0E03               	movlw	3
 17686  012EAC  0100               	movlb	0	; () banked
 17687  012EAE  6FFD               	movwf	_OLED_update_time& (0+255),b
 17688                           
 17689                           ;oled.c: 341: break;
 17690  012EB0  0012               	return	
 17691  012EB2                     l21676:
 17692                           
 17693                           ; BSR set to: 2
 17694                           ;oled.c: 345: OLED_update_flag = 0;
 17695  012EB2  0E00               	movlw	0
 17696  012EB4  6FD7               	movwf	_OLED_update_flag& (0+255),b
 17697                           
 17698                           ; BSR set to: 2
 17699                           ;oled.c: 349: strcpy(OLED_RAM_Buffer.line0, "Device ID:");
 17700  012EB6  0E00               	movlw	low _OLED_RAM_Buffer
 17701  012EB8  6F03               	movwf	strcpy@to& (0+255),b
 17702  012EBA  0E03               	movlw	high _OLED_RAM_Buffer
 17703  012EBC  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17704  012EBE  0EE5               	movlw	low STR_63
 17705  012EC0  6F05               	movwf	strcpy@from& (0+255),b
 17706  012EC2  0EFD               	movlw	high STR_63
 17707  012EC4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17708  012EC6  ECF7  F0DD         	call	_strcpy	;wreg free
 17709                           
 17710                           ;oled.c: 350: char dev_id_str[17];;oled.c: 351: sprintf(dev_id_str,"0x%X",getDeviceID())
      +                          ;
 17711  012ECA  0ED1               	movlw	low OLED_updateHandler@dev_id_str
 17712  012ECC  0102               	movlb	2	; () banked
 17713  012ECE  6F90               	movwf	sprintf@wh& (0+255),b
 17714  012ED0  0E03               	movlw	high OLED_updateHandler@dev_id_str
 17715  012ED2  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 17716  012ED4  0E9E               	movlw	low STR_64
 17717  012ED6  6F92               	movwf	sprintf@f& (0+255),b
 17718  012ED8  0EFF               	movlw	high STR_64
 17719  012EDA  6F93               	movwf	(sprintf@f+1)& (0+255),b
 17720  012EDC  EC75  F0E3         	call	_getDeviceID	;wreg free
 17721  012EE0  C20B  F294         	movff	?_getDeviceID,?_sprintf+4
 17722  012EE4  C20C  F295         	movff	?_getDeviceID+1,?_sprintf+5
 17723  012EE8  EC1B  F0DE         	call	_sprintf	;wreg free
 17724                           
 17725                           ;oled.c: 352: strcpy(OLED_RAM_Buffer.line1, dev_id_str);
 17726  012EEC  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 17727  012EEE  0102               	movlb	2	; () banked
 17728  012EF0  6F03               	movwf	strcpy@to& (0+255),b
 17729  012EF2  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 17730  012EF4  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17731  012EF6  0ED1               	movlw	low OLED_updateHandler@dev_id_str
 17732  012EF8  6F05               	movwf	strcpy@from& (0+255),b
 17733  012EFA  0E03               	movlw	high OLED_updateHandler@dev_id_str
 17734  012EFC  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17735  012EFE  ECF7  F0DD         	call	_strcpy	;wreg free
 17736                           
 17737                           ;oled.c: 355: strcpy(OLED_RAM_Buffer.line2, "Revision ID:");
 17738  012F02  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 17739  012F04  0102               	movlb	2	; () banked
 17740  012F06  6F03               	movwf	strcpy@to& (0+255),b
 17741  012F08  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 17742  012F0A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17743  012F0C  0EE0               	movlw	low STR_65
 17744  012F0E  6F05               	movwf	strcpy@from& (0+255),b
 17745  012F10  0EFC               	movlw	high STR_65
 17746  012F12  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17747  012F14  ECF7  F0DD         	call	_strcpy	;wreg free
 17748                           
 17749                           ;oled.c: 356: char rev_id_str[17];;oled.c: 357: sprintf(rev_id_str, "%c%03d", (char) get
      +                          MajorRevisionID() + 65, getMinorRevisionID());
 17750  012F18  0EE2               	movlw	low OLED_updateHandler@rev_id_str
 17751  012F1A  0102               	movlb	2	; () banked
 17752  012F1C  6F90               	movwf	sprintf@wh& (0+255),b
 17753  012F1E  0E03               	movlw	high OLED_updateHandler@rev_id_str
 17754  012F20  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 17755  012F22  0E70               	movlw	low STR_66
 17756  012F24  6F92               	movwf	sprintf@f& (0+255),b
 17757  012F26  0EFF               	movlw	high STR_66
 17758  012F28  6F93               	movwf	(sprintf@f+1)& (0+255),b
 17759  012F2A  EC72  F0E0         	call	_getMajorRevisionID	;wreg free
 17760  012F2E  0102               	movlb	2	; () banked
 17761  012F30  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 17762  012F32  0E41               	movlw	65
 17763  012F34  25B9               	addwf	??_OLED_updateHandler& (0+255),w,b
 17764  012F36  6F94               	movwf	(?_sprintf+4)& (0+255),b
 17765  012F38  6B95               	clrf	(?_sprintf+5)& (0+255),b
 17766  012F3A  0E00               	movlw	0
 17767  012F3C  2395               	addwfc	(?_sprintf+5)& (0+255),f,b
 17768  012F3E  ECC9  F0E2         	call	_getMinorRevisionID	;wreg free
 17769  012F42  0102               	movlb	2	; () banked
 17770  012F44  6FBA               	movwf	(??_OLED_updateHandler+1)& (0+255),b
 17771  012F46  51BA               	movf	(??_OLED_updateHandler+1)& (0+255),w,b
 17772  012F48  6F96               	movwf	(?_sprintf+6)& (0+255),b
 17773  012F4A  6B97               	clrf	(?_sprintf+7)& (0+255),b
 17774  012F4C  EC1B  F0DE         	call	_sprintf	;wreg free
 17775                           
 17776                           ;oled.c: 358: strcpy(OLED_RAM_Buffer.line3, rev_id_str);
 17777  012F50  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 17778  012F52  0102               	movlb	2	; () banked
 17779  012F54  6F03               	movwf	strcpy@to& (0+255),b
 17780  012F56  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 17781  012F58  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17782  012F5A  0EE2               	movlw	low OLED_updateHandler@rev_id_str
 17783  012F5C  6F05               	movwf	strcpy@from& (0+255),b
 17784  012F5E  0E03               	movlw	high OLED_updateHandler@rev_id_str
 17785  012F60  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17786  012F62  ECF7  F0DD         	call	_strcpy	;wreg free
 17787                           
 17788                           ;oled.c: 360: OLED_UpdateFromRAMBuffer();
 17789  012F66  ECEC  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 17790                           
 17791                           ;oled.c: 361: OLED_Frame = OLED_Boot_Frame_3;
 17792  012F6A  0E02               	movlw	2
 17793  012F6C  D79C               	goto	L3
 17794  012F6E                     l21696:
 17795                           
 17796                           ; BSR set to: 2
 17797                           ;oled.c: 368: OLED_update_flag = 0;
 17798  012F6E  0E00               	movlw	0
 17799  012F70  6FD7               	movwf	_OLED_update_flag& (0+255),b
 17800                           
 17801                           ; BSR set to: 2
 17802                           ;oled.c: 370: strcpy(OLED_RAM_Buffer.line0, "COM Port Setup:");
 17803  012F72  0E00               	movlw	low _OLED_RAM_Buffer
 17804  012F74  6F03               	movwf	strcpy@to& (0+255),b
 17805  012F76  0E03               	movlw	high _OLED_RAM_Buffer
 17806  012F78  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17807  012F7A  0E61               	movlw	low STR_67
 17808  012F7C  6F05               	movwf	strcpy@from& (0+255),b
 17809  012F7E  0EFB               	movlw	high STR_67
 17810  012F80  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17811  012F82  ECF7  F0DD         	call	_strcpy	;wreg free
 17812                           
 17813                           ;oled.c: 371: strcpy(OLED_RAM_Buffer.line1, "115.2 kbs");
 17814  012F86  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 17815  012F88  0102               	movlb	2	; () banked
 17816  012F8A  6F03               	movwf	strcpy@to& (0+255),b
 17817  012F8C  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 17818  012F8E  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17819  012F90  0E73               	movlw	low STR_68
 17820  012F92  6F05               	movwf	strcpy@from& (0+255),b
 17821  012F94  0EFE               	movlw	high STR_68
 17822  012F96  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17823  012F98  ECF7  F0DD         	call	_strcpy	;wreg free
 17824                           
 17825                           ;oled.c: 372: strcpy(OLED_RAM_Buffer.line2, "8bit, no parity");
 17826  012F9C  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 17827  012F9E  0102               	movlb	2	; () banked
 17828  012FA0  6F03               	movwf	strcpy@to& (0+255),b
 17829  012FA2  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 17830  012FA4  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17831  012FA6  0E91               	movlw	low STR_69
 17832  012FA8  6F05               	movwf	strcpy@from& (0+255),b
 17833  012FAA  0EFB               	movlw	high STR_69
 17834  012FAC  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17835  012FAE  ECF7  F0DD         	call	_strcpy	;wreg free
 17836                           
 17837                           ;oled.c: 373: strcpy(OLED_RAM_Buffer.line3, "1 stp, no flow");
 17838  012FB2  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 17839  012FB4  0102               	movlb	2	; () banked
 17840  012FB6  6F03               	movwf	strcpy@to& (0+255),b
 17841  012FB8  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 17842  012FBA  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17843  012FBC  0EFD               	movlw	low STR_70
 17844  012FBE  6F05               	movwf	strcpy@from& (0+255),b
 17845  012FC0  0EFB               	movlw	high STR_70
 17846  012FC2  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17847  012FC4  ECF7  F0DD         	call	_strcpy	;wreg free
 17848                           
 17849                           ;oled.c: 375: OLED_UpdateFromRAMBuffer();
 17850  012FC8  ECEC  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 17851                           
 17852                           ;oled.c: 376: OLED_Frame = OLED_Boot_Frame_4;
 17853  012FCC  0E03               	movlw	3
 17854  012FCE  D76B               	goto	L3
 17855  012FD0                     l21712:
 17856                           
 17857                           ; BSR set to: 2
 17858                           ;oled.c: 383: OLED_update_flag = 0;
 17859  012FD0  0E00               	movlw	0
 17860  012FD2  6FD7               	movwf	_OLED_update_flag& (0+255),b
 17861                           
 17862                           ; BSR set to: 2
 17863                           ;oled.c: 385: strcpy(OLED_RAM_Buffer.line0, "Boot Complete");
 17864  012FD4  0E00               	movlw	low _OLED_RAM_Buffer
 17865  012FD6  6F03               	movwf	strcpy@to& (0+255),b
 17866  012FD8  0E03               	movlw	high _OLED_RAM_Buffer
 17867  012FDA  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17868  012FDC  0EA8               	movlw	low STR_71
 17869  012FDE  6F05               	movwf	strcpy@from& (0+255),b
 17870  012FE0  0EFC               	movlw	high STR_71
 17871  012FE2  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17872  012FE4  ECF7  F0DD         	call	_strcpy	;wreg free
 17873                           
 17874                           ;oled.c: 386: strcpy(OLED_RAM_Buffer.line1, "QI Enabled");
 17875  012FE8  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 17876  012FEA  0102               	movlb	2	; () banked
 17877  012FEC  6F03               	movwf	strcpy@to& (0+255),b
 17878  012FEE  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 17879  012FF0  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17880  012FF2  0EF0               	movlw	low STR_72
 17881  012FF4  6F05               	movwf	strcpy@from& (0+255),b
 17882  012FF6  0EFD               	movlw	high STR_72
 17883  012FF8  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17884  012FFA  ECF7  F0DD         	call	_strcpy	;wreg free
 17885                           
 17886                           ;oled.c: 387: strcpy(OLED_RAM_Buffer.line2, "More Settings");
 17887  012FFE  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 17888  013000  0102               	movlb	2	; () banked
 17889  013002  6F03               	movwf	strcpy@to& (0+255),b
 17890  013004  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 17891  013006  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17892  013008  0EB6               	movlw	low STR_73
 17893  01300A  6F05               	movwf	strcpy@from& (0+255),b
 17894  01300C  0EFC               	movlw	high STR_73
 17895  01300E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17896  013010  ECF7  F0DD         	call	_strcpy	;wreg free
 17897                           
 17898                           ;oled.c: 388: strcpy(OLED_RAM_Buffer.line3, "via USB, 'Help'");
 17899  013014  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 17900  013016  0102               	movlb	2	; () banked
 17901  013018  6F03               	movwf	strcpy@to& (0+255),b
 17902  01301A  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 17903  01301C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17904  01301E  0E51               	movlw	low STR_74
 17905  013020  6F05               	movwf	strcpy@from& (0+255),b
 17906  013022  0EFB               	movlw	high STR_74
 17907  013024  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17908  013026  ECF7  F0DD         	call	_strcpy	;wreg free
 17909                           
 17910                           ;oled.c: 390: OLED_UpdateFromRAMBuffer();
 17911  01302A  ECEC  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 17912                           
 17913                           ;oled.c: 391: OLED_Frame = OLED_Charge_Status;
 17914  01302E  0E04               	movlw	4
 17915  013030  D73A               	goto	L3
 17916  013032                     l21728:
 17917                           
 17918                           ; BSR set to: 2
 17919                           ;oled.c: 398: OLED_update_flag = 0;
 17920  013032  0E00               	movlw	0
 17921  013034  6FD7               	movwf	_OLED_update_flag& (0+255),b
 17922                           
 17923                           ; BSR set to: 2
 17924                           ;oled.c: 400: strcpy(OLED_RAM_Buffer.line0, "Charge Status:");
 17925  013036  0E00               	movlw	low _OLED_RAM_Buffer
 17926  013038  6F03               	movwf	strcpy@to& (0+255),b
 17927  01303A  0E03               	movlw	high _OLED_RAM_Buffer
 17928  01303C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17929  01303E  0EDF               	movlw	low STR_75
 17930  013040  6F05               	movwf	strcpy@from& (0+255),b
 17931  013042  0EFB               	movlw	high STR_75
 17932  013044  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17933  013046  ECF7  F0DD         	call	_strcpy	;wreg free
 17934                           
 17935                           ;oled.c: 401: strcpy(OLED_RAM_Buffer.line1, " ");
 17936  01304A  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 17937  01304C  0102               	movlb	2	; () banked
 17938  01304E  6F03               	movwf	strcpy@to& (0+255),b
 17939  013050  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 17940  013052  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17941  013054  0EA9               	movlw	low (STR_54+10)
 17942  013056  6F05               	movwf	strcpy@from& (0+255),b
 17943  013058  0EFD               	movlw	high (STR_54+10)
 17944  01305A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17945  01305C  ECF7  F0DD         	call	_strcpy	;wreg free
 17946                           
 17947                           ;oled.c: 402: strcpy(OLED_RAM_Buffer.line2, getNXQChargeStateStringCaps());
 17948  013060  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 17949  013062  0102               	movlb	2	; () banked
 17950  013064  6F03               	movwf	strcpy@to& (0+255),b
 17951  013066  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 17952  013068  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17953  01306A  EC2C  F0DC         	call	_getNXQChargeStateStringCaps	;wreg free
 17954  01306E  C200  F205         	movff	?_getNXQChargeStateStringCaps,strcpy@from
 17955  013072  C201  F206         	movff	?_getNXQChargeStateStringCaps+1,strcpy@from+1
 17956  013076  ECF7  F0DD         	call	_strcpy	;wreg free
 17957                           
 17958                           ;oled.c: 403: strcpy(OLED_RAM_Buffer.line3, " ");
 17959  01307A  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 17960  01307C  0102               	movlb	2	; () banked
 17961  01307E  6F03               	movwf	strcpy@to& (0+255),b
 17962  013080  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 17963  013082  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17964  013084  0EA9               	movlw	low (STR_54+10)
 17965  013086  6F05               	movwf	strcpy@from& (0+255),b
 17966  013088  0EFD               	movlw	high (STR_54+10)
 17967  01308A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17968  01308C  ECF7  F0DD         	call	_strcpy	;wreg free
 17969                           
 17970                           ;oled.c: 405: OLED_UpdateFromRAMBuffer();
 17971  013090  ECEC  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 17972                           
 17973                           ;oled.c: 406: OLED_Frame = OLED_Charge_Status;
 17974  013094  0E04               	movlw	4
 17975  013096                     L4:
 17976  013096  0102               	movlb	2	; () banked
 17977  013098  6FD8               	movwf	_OLED_Frame& (0+255),b
 17978                           
 17979                           ; BSR set to: 2
 17980                           ;oled.c: 407: OLED_update_time = 1;
 17981  01309A  0E01               	movlw	1
 17982  01309C  0100               	movlb	0	; () banked
 17983  01309E  6FFD               	movwf	_OLED_update_time& (0+255),b
 17984                           
 17985                           ;oled.c: 409: break;
 17986  0130A0  0012               	return	
 17987  0130A2                     l21744:
 17988                           
 17989                           ; BSR set to: 2
 17990                           ;oled.c: 413: OLED_update_flag = 0;
 17991  0130A2  0E00               	movlw	0
 17992  0130A4  6FD7               	movwf	_OLED_update_flag& (0+255),b
 17993                           
 17994                           ; BSR set to: 2
 17995                           ;oled.c: 415: strcpy(OLED_RAM_Buffer.line0, "+12V Voltage:");
 17996  0130A6  0E00               	movlw	low _OLED_RAM_Buffer
 17997  0130A8  6F03               	movwf	strcpy@to& (0+255),b
 17998  0130AA  0E03               	movlw	high _OLED_RAM_Buffer
 17999  0130AC  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18000  0130AE  0E54               	movlw	low STR_78
 18001  0130B0  6F05               	movwf	strcpy@from& (0+255),b
 18002  0130B2  0EFC               	movlw	high STR_78
 18003  0130B4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18004  0130B6  ECF7  F0DD         	call	_strcpy	;wreg free
 18005                           
 18006                           ;oled.c: 416: sprintf(OLED_RAM_Buffer.line1, "%+.3f V", adc_results.pos12_adc_result);
 18007  0130BA  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18008  0130BC  0102               	movlb	2	; () banked
 18009  0130BE  6F90               	movwf	sprintf@wh& (0+255),b
 18010  0130C0  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18011  0130C2  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 18012  0130C4  0E51               	movlw	low STR_79
 18013  0130C6  6F92               	movwf	sprintf@f& (0+255),b
 18014  0130C8  0EFF               	movlw	high STR_79
 18015  0130CA  6F93               	movwf	(sprintf@f+1)& (0+255),b
 18016  0130CC  C0EB  F294         	movff	_adc_results+12,?_sprintf+4
 18017  0130D0  C0EC  F295         	movff	_adc_results+13,?_sprintf+5
 18018  0130D4  C0ED  F296         	movff	_adc_results+14,?_sprintf+6
 18019  0130D8  C0EE  F297         	movff	_adc_results+15,?_sprintf+7
 18020  0130DC  EC1B  F0DE         	call	_sprintf	;wreg free
 18021                           
 18022                           ;oled.c: 417: strcpy(OLED_RAM_Buffer.line2, " ");
 18023  0130E0  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18024  0130E2  0102               	movlb	2	; () banked
 18025  0130E4  6F03               	movwf	strcpy@to& (0+255),b
 18026  0130E6  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18027  0130E8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18028  0130EA  0EA9               	movlw	low (STR_54+10)
 18029  0130EC  6F05               	movwf	strcpy@from& (0+255),b
 18030  0130EE  0EFD               	movlw	high (STR_54+10)
 18031  0130F0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18032  0130F2  ECF7  F0DD         	call	_strcpy	;wreg free
 18033                           
 18034                           ;oled.c: 418: strcpy(OLED_RAM_Buffer.line3, " ");
 18035  0130F6  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18036  0130F8  0102               	movlb	2	; () banked
 18037  0130FA  6F03               	movwf	strcpy@to& (0+255),b
 18038  0130FC  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18039  0130FE  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18040  013100  0EA9               	movlw	low (STR_54+10)
 18041  013102  6F05               	movwf	strcpy@from& (0+255),b
 18042  013104  0EFD               	movlw	high (STR_54+10)
 18043  013106  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18044  013108  ECF7  F0DD         	call	_strcpy	;wreg free
 18045                           
 18046                           ;oled.c: 420: OLED_UpdateFromRAMBuffer();
 18047  01310C  ECEC  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18048                           
 18049                           ;oled.c: 421: OLED_Frame = OLED_POS12_Voltage;
 18050  013110  0E05               	movlw	5
 18051  013112  D7C1               	goto	L4
 18052  013114                     l21760:
 18053                           
 18054                           ; BSR set to: 2
 18055                           ;oled.c: 428: OLED_update_flag = 0;
 18056  013114  0E00               	movlw	0
 18057  013116  6FD7               	movwf	_OLED_update_flag& (0+255),b
 18058                           
 18059                           ; BSR set to: 2
 18060                           ;oled.c: 430: strcpy(OLED_RAM_Buffer.line0, "+5V Voltage:");
 18061  013118  0E00               	movlw	low _OLED_RAM_Buffer
 18062  01311A  6F03               	movwf	strcpy@to& (0+255),b
 18063  01311C  0E03               	movlw	high _OLED_RAM_Buffer
 18064  01311E  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18065  013120  0EED               	movlw	low STR_82
 18066  013122  6F05               	movwf	strcpy@from& (0+255),b
 18067  013124  0EFC               	movlw	high STR_82
 18068  013126  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18069  013128  ECF7  F0DD         	call	_strcpy	;wreg free
 18070                           
 18071                           ;oled.c: 431: sprintf(OLED_RAM_Buffer.line1, "%+.3f V", adc_results.pos5_adc_result);
 18072  01312C  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18073  01312E  0102               	movlb	2	; () banked
 18074  013130  6F90               	movwf	sprintf@wh& (0+255),b
 18075  013132  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18076  013134  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 18077  013136  0E51               	movlw	low STR_79
 18078  013138  6F92               	movwf	sprintf@f& (0+255),b
 18079  01313A  0EFF               	movlw	high STR_79
 18080  01313C  6F93               	movwf	(sprintf@f+1)& (0+255),b
 18081  01313E  C0E7  F294         	movff	_adc_results+8,?_sprintf+4
 18082  013142  C0E8  F295         	movff	_adc_results+9,?_sprintf+5
 18083  013146  C0E9  F296         	movff	_adc_results+10,?_sprintf+6
 18084  01314A  C0EA  F297         	movff	_adc_results+11,?_sprintf+7
 18085  01314E  EC1B  F0DE         	call	_sprintf	;wreg free
 18086                           
 18087                           ;oled.c: 432: strcpy(OLED_RAM_Buffer.line2, " ");
 18088  013152  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18089  013154  0102               	movlb	2	; () banked
 18090  013156  6F03               	movwf	strcpy@to& (0+255),b
 18091  013158  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18092  01315A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18093  01315C  0EA9               	movlw	low (STR_54+10)
 18094  01315E  6F05               	movwf	strcpy@from& (0+255),b
 18095  013160  0EFD               	movlw	high (STR_54+10)
 18096  013162  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18097  013164  ECF7  F0DD         	call	_strcpy	;wreg free
 18098                           
 18099                           ;oled.c: 433: strcpy(OLED_RAM_Buffer.line3, " ");
 18100  013168  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18101  01316A  0102               	movlb	2	; () banked
 18102  01316C  6F03               	movwf	strcpy@to& (0+255),b
 18103  01316E  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18104  013170  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18105  013172  0EA9               	movlw	low (STR_54+10)
 18106  013174  6F05               	movwf	strcpy@from& (0+255),b
 18107  013176  0EFD               	movlw	high (STR_54+10)
 18108  013178  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18109  01317A  ECF7  F0DD         	call	_strcpy	;wreg free
 18110                           
 18111                           ;oled.c: 435: OLED_UpdateFromRAMBuffer();
 18112  01317E  ECEC  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18113                           
 18114                           ;oled.c: 436: OLED_Frame = OLED_POS5_Voltage;
 18115  013182  0E06               	movlw	6
 18116  013184  D788               	goto	L4
 18117  013186                     l21776:
 18118                           
 18119                           ; BSR set to: 2
 18120                           ;oled.c: 443: OLED_update_flag = 0;
 18121  013186  0E00               	movlw	0
 18122  013188  6FD7               	movwf	_OLED_update_flag& (0+255),b
 18123                           
 18124                           ; BSR set to: 2
 18125                           ;oled.c: 445: strcpy(OLED_RAM_Buffer.line0, "+12V Current:");
 18126  01318A  0E00               	movlw	low _OLED_RAM_Buffer
 18127  01318C  6F03               	movwf	strcpy@to& (0+255),b
 18128  01318E  0E03               	movlw	high _OLED_RAM_Buffer
 18129  013190  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18130  013192  0E9A               	movlw	low STR_86
 18131  013194  6F05               	movwf	strcpy@from& (0+255),b
 18132  013196  0EFC               	movlw	high STR_86
 18133  013198  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18134  01319A  ECF7  F0DD         	call	_strcpy	;wreg free
 18135                           
 18136                           ;oled.c: 446: sprintf(OLED_RAM_Buffer.line1, "%+.3f A", adc_results.pos12_isns_adc_resul
      +                          t);
 18137  01319E  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18138  0131A0  0102               	movlb	2	; () banked
 18139  0131A2  6F90               	movwf	sprintf@wh& (0+255),b
 18140  0131A4  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18141  0131A6  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 18142  0131A8  0E41               	movlw	low STR_87
 18143  0131AA  6F92               	movwf	sprintf@f& (0+255),b
 18144  0131AC  0EFF               	movlw	high STR_87
 18145  0131AE  6F93               	movwf	(sprintf@f+1)& (0+255),b
 18146  0131B0  C0EF  F294         	movff	_adc_results+16,?_sprintf+4
 18147  0131B4  C0F0  F295         	movff	_adc_results+17,?_sprintf+5
 18148  0131B8  C0F1  F296         	movff	_adc_results+18,?_sprintf+6
 18149  0131BC  C0F2  F297         	movff	_adc_results+19,?_sprintf+7
 18150  0131C0  EC1B  F0DE         	call	_sprintf	;wreg free
 18151                           
 18152                           ;oled.c: 447: strcpy(OLED_RAM_Buffer.line2, " ");
 18153  0131C4  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18154  0131C6  0102               	movlb	2	; () banked
 18155  0131C8  6F03               	movwf	strcpy@to& (0+255),b
 18156  0131CA  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18157  0131CC  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18158  0131CE  0EA9               	movlw	low (STR_54+10)
 18159  0131D0  6F05               	movwf	strcpy@from& (0+255),b
 18160  0131D2  0EFD               	movlw	high (STR_54+10)
 18161  0131D4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18162  0131D6  ECF7  F0DD         	call	_strcpy	;wreg free
 18163                           
 18164                           ;oled.c: 448: strcpy(OLED_RAM_Buffer.line3, " ");
 18165  0131DA  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18166  0131DC  0102               	movlb	2	; () banked
 18167  0131DE  6F03               	movwf	strcpy@to& (0+255),b
 18168  0131E0  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18169  0131E2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18170  0131E4  0EA9               	movlw	low (STR_54+10)
 18171  0131E6  6F05               	movwf	strcpy@from& (0+255),b
 18172  0131E8  0EFD               	movlw	high (STR_54+10)
 18173  0131EA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18174  0131EC  ECF7  F0DD         	call	_strcpy	;wreg free
 18175                           
 18176                           ;oled.c: 450: OLED_UpdateFromRAMBuffer();
 18177  0131F0  ECEC  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18178                           
 18179                           ;oled.c: 451: OLED_Frame = OLED_POS12_Current;
 18180  0131F4  0E07               	movlw	7
 18181  0131F6  D74F               	goto	L4
 18182  0131F8                     l21792:
 18183                           
 18184                           ; BSR set to: 2
 18185                           ;oled.c: 458: OLED_update_flag = 0;
 18186  0131F8  0E00               	movlw	0
 18187  0131FA  6FD7               	movwf	_OLED_update_flag& (0+255),b
 18188                           
 18189                           ; BSR set to: 2
 18190                           ;oled.c: 460: strcpy(OLED_RAM_Buffer.line0, "QI Current:");
 18191  0131FC  0E00               	movlw	low _OLED_RAM_Buffer
 18192  0131FE  6F03               	movwf	strcpy@to& (0+255),b
 18193  013200  0E03               	movlw	high _OLED_RAM_Buffer
 18194  013202  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18195  013204  0E87               	movlw	low STR_90
 18196  013206  6F05               	movwf	strcpy@from& (0+255),b
 18197  013208  0EFD               	movlw	high STR_90
 18198  01320A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18199  01320C  ECF7  F0DD         	call	_strcpy	;wreg free
 18200                           
 18201                           ;oled.c: 461: if (QI_charge_time == 0) strcpy(OLED_RAM_Buffer.line1, "Not Charging");
 18202  013210  0102               	movlb	2	; () banked
 18203  013212  51D3               	movf	_QI_charge_time& (0+255),w,b
 18204  013214  11D4               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 18205  013216  11D5               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 18206  013218  11D6               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 18207  01321A  A4D8               	btfss	status,2,c
 18208  01321C  D00B               	goto	l21800
 18209                           
 18210                           ; BSR set to: 2
 18211  01321E  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18212  013220  6F03               	movwf	strcpy@to& (0+255),b
 18213  013222  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18214  013224  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18215  013226  0E21               	movlw	low STR_91
 18216  013228  6F05               	movwf	strcpy@from& (0+255),b
 18217  01322A  0EFD               	movlw	high STR_91
 18218  01322C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18219  01322E  ECF7  F0DD         	call	_strcpy	;wreg free
 18220  013232  D012               	goto	l21802
 18221  013234                     l21800:
 18222                           
 18223                           ; BSR set to: 2
 18224                           ;oled.c: 462: else sprintf(OLED_RAM_Buffer.line1, "%+.3f A", adc_results.qi_isns_adc_res
      +                          ult);
 18225  013234  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18226  013236  6F90               	movwf	sprintf@wh& (0+255),b
 18227  013238  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18228  01323A  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 18229  01323C  0E41               	movlw	low STR_87
 18230  01323E  6F92               	movwf	sprintf@f& (0+255),b
 18231  013240  0EFF               	movlw	high STR_87
 18232  013242  6F93               	movwf	(sprintf@f+1)& (0+255),b
 18233  013244  C0F3  F294         	movff	_adc_results+20,?_sprintf+4
 18234  013248  C0F4  F295         	movff	_adc_results+21,?_sprintf+5
 18235  01324C  C0F5  F296         	movff	_adc_results+22,?_sprintf+6
 18236  013250  C0F6  F297         	movff	_adc_results+23,?_sprintf+7
 18237  013254  EC1B  F0DE         	call	_sprintf	;wreg free
 18238  013258                     l21802:
 18239                           
 18240                           ;oled.c: 463: strcpy(OLED_RAM_Buffer.line2, " ");
 18241  013258  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18242  01325A  0102               	movlb	2	; () banked
 18243  01325C  6F03               	movwf	strcpy@to& (0+255),b
 18244  01325E  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18245  013260  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18246  013262  0EA9               	movlw	low (STR_54+10)
 18247  013264  6F05               	movwf	strcpy@from& (0+255),b
 18248  013266  0EFD               	movlw	high (STR_54+10)
 18249  013268  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18250  01326A  ECF7  F0DD         	call	_strcpy	;wreg free
 18251                           
 18252                           ;oled.c: 464: strcpy(OLED_RAM_Buffer.line3, " ");
 18253  01326E  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18254  013270  0102               	movlb	2	; () banked
 18255  013272  6F03               	movwf	strcpy@to& (0+255),b
 18256  013274  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18257  013276  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18258  013278  0EA9               	movlw	low (STR_54+10)
 18259  01327A  6F05               	movwf	strcpy@from& (0+255),b
 18260  01327C  0EFD               	movlw	high (STR_54+10)
 18261  01327E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18262  013280  ECF7  F0DD         	call	_strcpy	;wreg free
 18263                           
 18264                           ;oled.c: 466: OLED_UpdateFromRAMBuffer();
 18265  013284  ECEC  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18266                           
 18267                           ;oled.c: 467: OLED_Frame = OLED_QI_Current;
 18268  013288  0E08               	movlw	8
 18269  01328A  D705               	goto	L4
 18270  01328C                     l21812:
 18271                           
 18272                           ; BSR set to: 2
 18273                           ;oled.c: 474: OLED_update_flag = 0;
 18274  01328C  0E00               	movlw	0
 18275  01328E  6FD7               	movwf	_OLED_update_flag& (0+255),b
 18276                           
 18277                           ; BSR set to: 2
 18278                           ;oled.c: 476: strcpy(OLED_RAM_Buffer.line0, "Input Power:");
 18279  013290  0E00               	movlw	low _OLED_RAM_Buffer
 18280  013292  6F03               	movwf	strcpy@to& (0+255),b
 18281  013294  0E03               	movlw	high _OLED_RAM_Buffer
 18282  013296  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18283  013298  0E14               	movlw	low STR_95
 18284  01329A  6F05               	movwf	strcpy@from& (0+255),b
 18285  01329C  0EFD               	movlw	high STR_95
 18286  01329E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18287  0132A0  ECF7  F0DD         	call	_strcpy	;wreg free
 18288                           
 18289                           ;oled.c: 477: sprintf(OLED_RAM_Buffer.line1, "%+.3f W", adc_calculations.input_power);
 18290  0132A4  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18291  0132A6  0102               	movlb	2	; () banked
 18292  0132A8  6F90               	movwf	sprintf@wh& (0+255),b
 18293  0132AA  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18294  0132AC  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 18295  0132AE  0E59               	movlw	low STR_96
 18296  0132B0  6F92               	movwf	sprintf@f& (0+255),b
 18297  0132B2  0EFF               	movlw	high STR_96
 18298  0132B4  6F93               	movwf	(sprintf@f+1)& (0+255),b
 18299  0132B6  C2BF  F294         	movff	_adc_calculations,?_sprintf+4
 18300  0132BA  C2C0  F295         	movff	_adc_calculations+1,?_sprintf+5
 18301  0132BE  C2C1  F296         	movff	_adc_calculations+2,?_sprintf+6
 18302  0132C2  C2C2  F297         	movff	_adc_calculations+3,?_sprintf+7
 18303  0132C6  EC1B  F0DE         	call	_sprintf	;wreg free
 18304                           
 18305                           ;oled.c: 478: strcpy(OLED_RAM_Buffer.line2, " ");
 18306  0132CA  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18307  0132CC  0102               	movlb	2	; () banked
 18308  0132CE  6F03               	movwf	strcpy@to& (0+255),b
 18309  0132D0  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18310  0132D2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18311  0132D4  0EA9               	movlw	low (STR_54+10)
 18312  0132D6  6F05               	movwf	strcpy@from& (0+255),b
 18313  0132D8  0EFD               	movlw	high (STR_54+10)
 18314  0132DA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18315  0132DC  ECF7  F0DD         	call	_strcpy	;wreg free
 18316                           
 18317                           ;oled.c: 479: strcpy(OLED_RAM_Buffer.line3, " ");
 18318  0132E0  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18319  0132E2  0102               	movlb	2	; () banked
 18320  0132E4  6F03               	movwf	strcpy@to& (0+255),b
 18321  0132E6  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18322  0132E8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18323  0132EA  0EA9               	movlw	low (STR_54+10)
 18324  0132EC  6F05               	movwf	strcpy@from& (0+255),b
 18325  0132EE  0EFD               	movlw	high (STR_54+10)
 18326  0132F0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18327  0132F2  ECF7  F0DD         	call	_strcpy	;wreg free
 18328                           
 18329                           ;oled.c: 481: OLED_UpdateFromRAMBuffer();
 18330  0132F6  ECEC  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18331                           
 18332                           ;oled.c: 482: OLED_Frame = OLED_Input_Power;
 18333  0132FA  0E09               	movlw	9
 18334  0132FC  D6CC               	goto	L4
 18335  0132FE                     l21828:
 18336                           
 18337                           ; BSR set to: 2
 18338                           ;oled.c: 489: OLED_update_flag = 0;
 18339  0132FE  0E00               	movlw	0
 18340  013300  6FD7               	movwf	_OLED_update_flag& (0+255),b
 18341                           
 18342                           ; BSR set to: 2
 18343                           ;oled.c: 491: strcpy(OLED_RAM_Buffer.line0, "Output Power:");
 18344  013302  0E00               	movlw	low _OLED_RAM_Buffer
 18345  013304  6F03               	movwf	strcpy@to& (0+255),b
 18346  013306  0E03               	movlw	high _OLED_RAM_Buffer
 18347  013308  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18348  01330A  0E8C               	movlw	low STR_99
 18349  01330C  6F05               	movwf	strcpy@from& (0+255),b
 18350  01330E  0EFC               	movlw	high STR_99
 18351  013310  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18352  013312  ECF7  F0DD         	call	_strcpy	;wreg free
 18353                           
 18354                           ;oled.c: 492: if (QI_charge_time == 0) strcpy(OLED_RAM_Buffer.line1, "Not Charging");
 18355  013316  0102               	movlb	2	; () banked
 18356  013318  51D3               	movf	_QI_charge_time& (0+255),w,b
 18357  01331A  11D4               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 18358  01331C  11D5               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 18359  01331E  11D6               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 18360  013320  A4D8               	btfss	status,2,c
 18361  013322  D00B               	goto	l21836
 18362                           
 18363                           ; BSR set to: 2
 18364  013324  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18365  013326  6F03               	movwf	strcpy@to& (0+255),b
 18366  013328  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18367  01332A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18368  01332C  0E21               	movlw	low STR_91
 18369  01332E  6F05               	movwf	strcpy@from& (0+255),b
 18370  013330  0EFD               	movlw	high STR_91
 18371  013332  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18372  013334  ECF7  F0DD         	call	_strcpy	;wreg free
 18373  013338  D012               	goto	l21838
 18374  01333A                     l21836:
 18375                           
 18376                           ; BSR set to: 2
 18377                           ;oled.c: 493: else sprintf(OLED_RAM_Buffer.line1, "%+.3f W", adc_calculations.output_pow
      +                          er);
 18378  01333A  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18379  01333C  6F90               	movwf	sprintf@wh& (0+255),b
 18380  01333E  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18381  013340  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 18382  013342  0E59               	movlw	low STR_96
 18383  013344  6F92               	movwf	sprintf@f& (0+255),b
 18384  013346  0EFF               	movlw	high STR_96
 18385  013348  6F93               	movwf	(sprintf@f+1)& (0+255),b
 18386  01334A  C2C3  F294         	movff	_adc_calculations+4,?_sprintf+4
 18387  01334E  C2C4  F295         	movff	_adc_calculations+5,?_sprintf+5
 18388  013352  C2C5  F296         	movff	_adc_calculations+6,?_sprintf+6
 18389  013356  C2C6  F297         	movff	_adc_calculations+7,?_sprintf+7
 18390  01335A  EC1B  F0DE         	call	_sprintf	;wreg free
 18391  01335E                     l21838:
 18392                           
 18393                           ;oled.c: 494: strcpy(OLED_RAM_Buffer.line2, " ");
 18394  01335E  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18395  013360  0102               	movlb	2	; () banked
 18396  013362  6F03               	movwf	strcpy@to& (0+255),b
 18397  013364  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18398  013366  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18399  013368  0EA9               	movlw	low (STR_54+10)
 18400  01336A  6F05               	movwf	strcpy@from& (0+255),b
 18401  01336C  0EFD               	movlw	high (STR_54+10)
 18402  01336E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18403  013370  ECF7  F0DD         	call	_strcpy	;wreg free
 18404                           
 18405                           ;oled.c: 495: strcpy(OLED_RAM_Buffer.line3, " ");
 18406  013374  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18407  013376  0102               	movlb	2	; () banked
 18408  013378  6F03               	movwf	strcpy@to& (0+255),b
 18409  01337A  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18410  01337C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18411  01337E  0EA9               	movlw	low (STR_54+10)
 18412  013380  6F05               	movwf	strcpy@from& (0+255),b
 18413  013382  0EFD               	movlw	high (STR_54+10)
 18414  013384  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18415  013386  ECF7  F0DD         	call	_strcpy	;wreg free
 18416                           
 18417                           ;oled.c: 497: OLED_UpdateFromRAMBuffer();
 18418  01338A  ECEC  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18419                           
 18420                           ;oled.c: 498: OLED_Frame = OLED_Output_Power;
 18421  01338E  0E0A               	movlw	10
 18422  013390  D682               	goto	L4
 18423  013392                     l21848:
 18424                           
 18425                           ; BSR set to: 2
 18426                           ;oled.c: 505: OLED_update_flag = 0;
 18427  013392  0E00               	movlw	0
 18428  013394  6FD7               	movwf	_OLED_update_flag& (0+255),b
 18429                           
 18430                           ; BSR set to: 2
 18431                           ;oled.c: 507: strcpy(OLED_RAM_Buffer.line0, "Efficiency:");
 18432  013396  0E00               	movlw	low _OLED_RAM_Buffer
 18433  013398  6F03               	movwf	strcpy@to& (0+255),b
 18434  01339A  0E03               	movlw	high _OLED_RAM_Buffer
 18435  01339C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18436  01339E  0E93               	movlw	low STR_104
 18437  0133A0  6F05               	movwf	strcpy@from& (0+255),b
 18438  0133A2  0EFD               	movlw	high STR_104
 18439  0133A4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18440  0133A6  ECF7  F0DD         	call	_strcpy	;wreg free
 18441                           
 18442                           ;oled.c: 508: if (QI_charge_time == 0) strcpy(OLED_RAM_Buffer.line1, "Not Charging");
 18443  0133AA  0102               	movlb	2	; () banked
 18444  0133AC  51D3               	movf	_QI_charge_time& (0+255),w,b
 18445  0133AE  11D4               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 18446  0133B0  11D5               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 18447  0133B2  11D6               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 18448  0133B4  A4D8               	btfss	status,2,c
 18449  0133B6  D00B               	goto	l21856
 18450                           
 18451                           ; BSR set to: 2
 18452  0133B8  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18453  0133BA  6F03               	movwf	strcpy@to& (0+255),b
 18454  0133BC  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18455  0133BE  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18456  0133C0  0E21               	movlw	low STR_91
 18457  0133C2  6F05               	movwf	strcpy@from& (0+255),b
 18458  0133C4  0EFD               	movlw	high STR_91
 18459  0133C6  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18460  0133C8  ECF7  F0DD         	call	_strcpy	;wreg free
 18461  0133CC  D012               	goto	l21858
 18462  0133CE                     l21856:
 18463                           
 18464                           ; BSR set to: 2
 18465                           ;oled.c: 509: else sprintf(OLED_RAM_Buffer.line1, "%+.3f %%", adc_calculations.efficienc
      +                          y);
 18466  0133CE  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18467  0133D0  6F90               	movwf	sprintf@wh& (0+255),b
 18468  0133D2  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18469  0133D4  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 18470  0133D6  0EFA               	movlw	low STR_106
 18471  0133D8  6F92               	movwf	sprintf@f& (0+255),b
 18472  0133DA  0EFE               	movlw	high STR_106
 18473  0133DC  6F93               	movwf	(sprintf@f+1)& (0+255),b
 18474  0133DE  C2C7  F294         	movff	_adc_calculations+8,?_sprintf+4
 18475  0133E2  C2C8  F295         	movff	_adc_calculations+9,?_sprintf+5
 18476  0133E6  C2C9  F296         	movff	_adc_calculations+10,?_sprintf+6
 18477  0133EA  C2CA  F297         	movff	_adc_calculations+11,?_sprintf+7
 18478  0133EE  EC1B  F0DE         	call	_sprintf	;wreg free
 18479  0133F2                     l21858:
 18480                           
 18481                           ;oled.c: 510: strcpy(OLED_RAM_Buffer.line2, " ");
 18482  0133F2  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18483  0133F4  0102               	movlb	2	; () banked
 18484  0133F6  6F03               	movwf	strcpy@to& (0+255),b
 18485  0133F8  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18486  0133FA  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18487  0133FC  0EA9               	movlw	low (STR_54+10)
 18488  0133FE  6F05               	movwf	strcpy@from& (0+255),b
 18489  013400  0EFD               	movlw	high (STR_54+10)
 18490  013402  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18491  013404  ECF7  F0DD         	call	_strcpy	;wreg free
 18492                           
 18493                           ;oled.c: 511: strcpy(OLED_RAM_Buffer.line3, " ");
 18494  013408  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18495  01340A  0102               	movlb	2	; () banked
 18496  01340C  6F03               	movwf	strcpy@to& (0+255),b
 18497  01340E  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18498  013410  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18499  013412  0EA9               	movlw	low (STR_54+10)
 18500  013414  6F05               	movwf	strcpy@from& (0+255),b
 18501  013416  0EFD               	movlw	high (STR_54+10)
 18502  013418  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18503  01341A  ECF7  F0DD         	call	_strcpy	;wreg free
 18504                           
 18505                           ;oled.c: 513: OLED_UpdateFromRAMBuffer();
 18506  01341E  ECEC  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18507                           
 18508                           ;oled.c: 514: OLED_Frame = OLED_Efficiency;
 18509  013422  0E0B               	movlw	11
 18510  013424  D638               	goto	L4
 18511  013426                     l21868:
 18512                           
 18513                           ; BSR set to: 2
 18514                           ;oled.c: 521: OLED_update_flag = 0;
 18515  013426  0E00               	movlw	0
 18516  013428  6FD7               	movwf	_OLED_update_flag& (0+255),b
 18517                           
 18518                           ; BSR set to: 2
 18519                           ;oled.c: 523: strcpy(OLED_RAM_Buffer.line0, "QI Temp:");
 18520  01342A  0E00               	movlw	low _OLED_RAM_Buffer
 18521  01342C  6F03               	movwf	strcpy@to& (0+255),b
 18522  01342E  0E03               	movlw	high _OLED_RAM_Buffer
 18523  013430  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18524  013432  0E03               	movlw	low STR_109
 18525  013434  6F05               	movwf	strcpy@from& (0+255),b
 18526  013436  0EFF               	movlw	high STR_109
 18527  013438  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18528  01343A  ECF7  F0DD         	call	_strcpy	;wreg free
 18529                           
 18530                           ;oled.c: 524: sprintf(OLED_RAM_Buffer.line1, "%+.3f C", LM73_temp_results.QI_temp_result
      +                          );
 18531  01343E  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18532  013440  0102               	movlb	2	; () banked
 18533  013442  6F90               	movwf	sprintf@wh& (0+255),b
 18534  013444  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18535  013446  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 18536  013448  0E49               	movlw	low STR_110
 18537  01344A  6F92               	movwf	sprintf@f& (0+255),b
 18538  01344C  0EFF               	movlw	high STR_110
 18539  01344E  6F93               	movwf	(sprintf@f+1)& (0+255),b
 18540  013450  C2DB  F294         	movff	_LM73_temp_results,?_sprintf+4
 18541  013454  C2DC  F295         	movff	_LM73_temp_results+1,?_sprintf+5
 18542  013458  C2DD  F296         	movff	_LM73_temp_results+2,?_sprintf+6
 18543  01345C  C2DE  F297         	movff	_LM73_temp_results+3,?_sprintf+7
 18544  013460  EC1B  F0DE         	call	_sprintf	;wreg free
 18545                           
 18546                           ;oled.c: 525: strcpy(OLED_RAM_Buffer.line2, " ");
 18547  013464  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18548  013466  0102               	movlb	2	; () banked
 18549  013468  6F03               	movwf	strcpy@to& (0+255),b
 18550  01346A  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18551  01346C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18552  01346E  0EA9               	movlw	low (STR_54+10)
 18553  013470  6F05               	movwf	strcpy@from& (0+255),b
 18554  013472  0EFD               	movlw	high (STR_54+10)
 18555  013474  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18556  013476  ECF7  F0DD         	call	_strcpy	;wreg free
 18557                           
 18558                           ;oled.c: 526: strcpy(OLED_RAM_Buffer.line3, " ");
 18559  01347A  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18560  01347C  0102               	movlb	2	; () banked
 18561  01347E  6F03               	movwf	strcpy@to& (0+255),b
 18562  013480  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18563  013482  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18564  013484  0EA9               	movlw	low (STR_54+10)
 18565  013486  6F05               	movwf	strcpy@from& (0+255),b
 18566  013488  0EFD               	movlw	high (STR_54+10)
 18567  01348A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18568  01348C  ECF7  F0DD         	call	_strcpy	;wreg free
 18569                           
 18570                           ;oled.c: 528: OLED_UpdateFromRAMBuffer();
 18571  013490  ECEC  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18572                           
 18573                           ;oled.c: 529: OLED_Frame = OLED_QI_Temp;
 18574  013494  0E0F               	movlw	15
 18575  013496  D5FF               	goto	L4
 18576  013498                     l21884:
 18577                           
 18578                           ; BSR set to: 2
 18579                           ;oled.c: 536: OLED_update_flag = 0;
 18580  013498  0E00               	movlw	0
 18581  01349A  6FD7               	movwf	_OLED_update_flag& (0+255),b
 18582                           
 18583                           ; BSR set to: 2
 18584                           ;oled.c: 538: strcpy(OLED_RAM_Buffer.line0, "+5V Temp:");
 18585  01349C  0E00               	movlw	low _OLED_RAM_Buffer
 18586  01349E  6F03               	movwf	strcpy@to& (0+255),b
 18587  0134A0  0E03               	movlw	high _OLED_RAM_Buffer
 18588  0134A2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18589  0134A4  0E69               	movlw	low STR_113
 18590  0134A6  6F05               	movwf	strcpy@from& (0+255),b
 18591  0134A8  0EFE               	movlw	high STR_113
 18592  0134AA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18593  0134AC  ECF7  F0DD         	call	_strcpy	;wreg free
 18594                           
 18595                           ;oled.c: 539: sprintf(OLED_RAM_Buffer.line1, "%+.3f C", LM73_temp_results.POS5_temp_resu
      +                          lt);
 18596  0134B0  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18597  0134B2  0102               	movlb	2	; () banked
 18598  0134B4  6F90               	movwf	sprintf@wh& (0+255),b
 18599  0134B6  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18600  0134B8  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 18601  0134BA  0E49               	movlw	low STR_110
 18602  0134BC  6F92               	movwf	sprintf@f& (0+255),b
 18603  0134BE  0EFF               	movlw	high STR_110
 18604  0134C0  6F93               	movwf	(sprintf@f+1)& (0+255),b
 18605  0134C2  C2DF  F294         	movff	_LM73_temp_results+4,?_sprintf+4
 18606  0134C6  C2E0  F295         	movff	_LM73_temp_results+5,?_sprintf+5
 18607  0134CA  C2E1  F296         	movff	_LM73_temp_results+6,?_sprintf+6
 18608  0134CE  C2E2  F297         	movff	_LM73_temp_results+7,?_sprintf+7
 18609  0134D2  EC1B  F0DE         	call	_sprintf	;wreg free
 18610                           
 18611                           ;oled.c: 540: strcpy(OLED_RAM_Buffer.line2, " ");
 18612  0134D6  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18613  0134D8  0102               	movlb	2	; () banked
 18614  0134DA  6F03               	movwf	strcpy@to& (0+255),b
 18615  0134DC  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18616  0134DE  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18617  0134E0  0EA9               	movlw	low (STR_54+10)
 18618  0134E2  6F05               	movwf	strcpy@from& (0+255),b
 18619  0134E4  0EFD               	movlw	high (STR_54+10)
 18620  0134E6  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18621  0134E8  ECF7  F0DD         	call	_strcpy	;wreg free
 18622                           
 18623                           ;oled.c: 541: strcpy(OLED_RAM_Buffer.line3, " ");
 18624  0134EC  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18625  0134EE  0102               	movlb	2	; () banked
 18626  0134F0  6F03               	movwf	strcpy@to& (0+255),b
 18627  0134F2  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18628  0134F4  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18629  0134F6  0EA9               	movlw	low (STR_54+10)
 18630  0134F8  6F05               	movwf	strcpy@from& (0+255),b
 18631  0134FA  0EFD               	movlw	high (STR_54+10)
 18632  0134FC  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18633  0134FE  ECF7  F0DD         	call	_strcpy	;wreg free
 18634                           
 18635                           ;oled.c: 543: OLED_UpdateFromRAMBuffer();
 18636  013502  ECEC  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18637                           
 18638                           ;oled.c: 544: OLED_Frame = OLED_POS5_Temp;
 18639  013506  0E10               	movlw	16
 18640  013508  D5C6               	goto	L4
 18641  01350A                     l21900:
 18642                           
 18643                           ; BSR set to: 2
 18644                           ;oled.c: 551: OLED_update_flag = 0;
 18645  01350A  0E00               	movlw	0
 18646  01350C  6FD7               	movwf	_OLED_update_flag& (0+255),b
 18647                           
 18648                           ; BSR set to: 2
 18649                           ;oled.c: 553: strcpy(OLED_RAM_Buffer.line0, "Ambient Temp:");
 18650  01350E  0E00               	movlw	low _OLED_RAM_Buffer
 18651  013510  6F03               	movwf	strcpy@to& (0+255),b
 18652  013512  0E03               	movlw	high _OLED_RAM_Buffer
 18653  013514  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18654  013516  0E70               	movlw	low STR_117
 18655  013518  6F05               	movwf	strcpy@from& (0+255),b
 18656  01351A  0EFC               	movlw	high STR_117
 18657  01351C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18658  01351E  ECF7  F0DD         	call	_strcpy	;wreg free
 18659                           
 18660                           ;oled.c: 554: sprintf(OLED_RAM_Buffer.line1, "%+.3f C", LM73_temp_results.Ambient_temp_r
      +                          esult);
 18661  013522  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18662  013524  0102               	movlb	2	; () banked
 18663  013526  6F90               	movwf	sprintf@wh& (0+255),b
 18664  013528  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18665  01352A  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 18666  01352C  0E49               	movlw	low STR_110
 18667  01352E  6F92               	movwf	sprintf@f& (0+255),b
 18668  013530  0EFF               	movlw	high STR_110
 18669  013532  6F93               	movwf	(sprintf@f+1)& (0+255),b
 18670  013534  C2E3  F294         	movff	_LM73_temp_results+8,?_sprintf+4
 18671  013538  C2E4  F295         	movff	_LM73_temp_results+9,?_sprintf+5
 18672  01353C  C2E5  F296         	movff	_LM73_temp_results+10,?_sprintf+6
 18673  013540  C2E6  F297         	movff	_LM73_temp_results+11,?_sprintf+7
 18674  013544  EC1B  F0DE         	call	_sprintf	;wreg free
 18675                           
 18676                           ;oled.c: 555: strcpy(OLED_RAM_Buffer.line2, " ");
 18677  013548  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18678  01354A  0102               	movlb	2	; () banked
 18679  01354C  6F03               	movwf	strcpy@to& (0+255),b
 18680  01354E  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18681  013550  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18682  013552  0EA9               	movlw	low (STR_54+10)
 18683  013554  6F05               	movwf	strcpy@from& (0+255),b
 18684  013556  0EFD               	movlw	high (STR_54+10)
 18685  013558  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18686  01355A  ECF7  F0DD         	call	_strcpy	;wreg free
 18687                           
 18688                           ;oled.c: 556: strcpy(OLED_RAM_Buffer.line3, " ");
 18689  01355E  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18690  013560  0102               	movlb	2	; () banked
 18691  013562  6F03               	movwf	strcpy@to& (0+255),b
 18692  013564  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18693  013566  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18694  013568  0EA9               	movlw	low (STR_54+10)
 18695  01356A  6F05               	movwf	strcpy@from& (0+255),b
 18696  01356C  0EFD               	movlw	high (STR_54+10)
 18697  01356E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18698  013570  ECF7  F0DD         	call	_strcpy	;wreg free
 18699                           
 18700                           ;oled.c: 558: OLED_UpdateFromRAMBuffer();
 18701  013574  ECEC  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18702                           
 18703                           ;oled.c: 559: OLED_Frame = OLED_Ambient_Temp;
 18704  013578  0E11               	movlw	17
 18705  01357A  D58D               	goto	L4
 18706  01357C                     l21916:
 18707                           
 18708                           ; BSR set to: 2
 18709                           ;oled.c: 566: OLED_update_flag = 0;
 18710  01357C  0E00               	movlw	0
 18711  01357E  6FD7               	movwf	_OLED_update_flag& (0+255),b
 18712                           
 18713                           ; BSR set to: 2
 18714                           ;oled.c: 568: strcpy(OLED_RAM_Buffer.line0, "Micro Temp:");
 18715  013580  0E00               	movlw	low _OLED_RAM_Buffer
 18716  013582  6F03               	movwf	strcpy@to& (0+255),b
 18717  013584  0E03               	movlw	high _OLED_RAM_Buffer
 18718  013586  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18719  013588  0E7B               	movlw	low STR_121
 18720  01358A  6F05               	movwf	strcpy@from& (0+255),b
 18721  01358C  0EFD               	movlw	high STR_121
 18722  01358E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18723  013590  ECF7  F0DD         	call	_strcpy	;wreg free
 18724                           
 18725                           ;oled.c: 569: sprintf(OLED_RAM_Buffer.line1, "%+.3f C", adc_results.die_temp_adc_result)
      +                          ;
 18726  013594  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18727  013596  0102               	movlb	2	; () banked
 18728  013598  6F90               	movwf	sprintf@wh& (0+255),b
 18729  01359A  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18730  01359C  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 18731  01359E  0E49               	movlw	low STR_110
 18732  0135A0  6F92               	movwf	sprintf@f& (0+255),b
 18733  0135A2  0EFF               	movlw	high STR_110
 18734  0135A4  6F93               	movwf	(sprintf@f+1)& (0+255),b
 18735  0135A6  C0F7  F294         	movff	_adc_results+24,?_sprintf+4
 18736  0135AA  C0F8  F295         	movff	_adc_results+25,?_sprintf+5
 18737  0135AE  C0F9  F296         	movff	_adc_results+26,?_sprintf+6
 18738  0135B2  C0FA  F297         	movff	_adc_results+27,?_sprintf+7
 18739  0135B6  EC1B  F0DE         	call	_sprintf	;wreg free
 18740                           
 18741                           ;oled.c: 570: strcpy(OLED_RAM_Buffer.line2, " ");
 18742  0135BA  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18743  0135BC  0102               	movlb	2	; () banked
 18744  0135BE  6F03               	movwf	strcpy@to& (0+255),b
 18745  0135C0  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18746  0135C2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18747  0135C4  0EA9               	movlw	low (STR_54+10)
 18748  0135C6  6F05               	movwf	strcpy@from& (0+255),b
 18749  0135C8  0EFD               	movlw	high (STR_54+10)
 18750  0135CA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18751  0135CC  ECF7  F0DD         	call	_strcpy	;wreg free
 18752                           
 18753                           ;oled.c: 571: strcpy(OLED_RAM_Buffer.line3, " ");
 18754  0135D0  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18755  0135D2  0102               	movlb	2	; () banked
 18756  0135D4  6F03               	movwf	strcpy@to& (0+255),b
 18757  0135D6  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18758  0135D8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18759  0135DA  0EA9               	movlw	low (STR_54+10)
 18760  0135DC  6F05               	movwf	strcpy@from& (0+255),b
 18761  0135DE  0EFD               	movlw	high (STR_54+10)
 18762  0135E0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18763  0135E2  ECF7  F0DD         	call	_strcpy	;wreg free
 18764                           
 18765                           ;oled.c: 573: OLED_UpdateFromRAMBuffer();
 18766  0135E6  ECEC  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18767                           
 18768                           ;oled.c: 574: OLED_Frame = OLED_Micro_Temp;
 18769  0135EA  0E12               	movlw	18
 18770  0135EC  D554               	goto	L4
 18771  0135EE                     l21932:
 18772                           
 18773                           ; BSR set to: 2
 18774                           ;oled.c: 581: OLED_update_flag = 0;
 18775  0135EE  0E00               	movlw	0
 18776  0135F0  6FD7               	movwf	_OLED_update_flag& (0+255),b
 18777                           
 18778                           ; BSR set to: 2
 18779                           ;oled.c: 583: strcpy(OLED_RAM_Buffer.line0, "+5V Sw. Freq:");
 18780  0135F2  0E00               	movlw	low _OLED_RAM_Buffer
 18781  0135F4  6F03               	movwf	strcpy@to& (0+255),b
 18782  0135F6  0E03               	movlw	high _OLED_RAM_Buffer
 18783  0135F8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18784  0135FA  0E7E               	movlw	low STR_125
 18785  0135FC  6F05               	movwf	strcpy@from& (0+255),b
 18786  0135FE  0EFC               	movlw	high STR_125
 18787  013600  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18788  013602  ECF7  F0DD         	call	_strcpy	;wreg free
 18789                           
 18790                           ;oled.c: 584: if (nxq_charge_state == QI_Idle || nxq_charge_state == QI_Error) strcpy(OL
      +                          ED_RAM_Buffer.line1, "Burst Mode");
 18791  013606  0101               	movlb	1	; () banked
 18792  013608  518C               	movf	_nxq_charge_state& (0+255),w,b
 18793  01360A  B4D8               	btfsc	status,2,c
 18794  01360C  D004               	goto	u27800
 18795                           
 18796                           ; BSR set to: 1
 18797  01360E  0E03               	movlw	3
 18798  013610  198C               	xorwf	_nxq_charge_state& (0+255),w,b
 18799  013612  A4D8               	btfss	status,2,c
 18800  013614  D00C               	goto	l21942
 18801  013616                     u27800:
 18802                           
 18803                           ; BSR set to: 1
 18804  013616  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18805  013618  0102               	movlb	2	; () banked
 18806  01361A  6F03               	movwf	strcpy@to& (0+255),b
 18807  01361C  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18808  01361E  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18809  013620  0EFB               	movlw	low STR_126
 18810  013622  6F05               	movwf	strcpy@from& (0+255),b
 18811  013624  0EFD               	movlw	high STR_126
 18812  013626  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18813  013628  ECF7  F0DD         	call	_strcpy	;wreg free
 18814  01362C  D00B               	goto	l1960
 18815  01362E                     l21942:
 18816                           
 18817                           ; BSR set to: 1
 18818                           ;oled.c: 585: else strcpy(OLED_RAM_Buffer.line1, "+2.5 MHz");
 18819  01362E  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18820  013630  0102               	movlb	2	; () banked
 18821  013632  6F03               	movwf	strcpy@to& (0+255),b
 18822  013634  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18823  013636  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18824  013638  0E1E               	movlw	low STR_127
 18825  01363A  6F05               	movwf	strcpy@from& (0+255),b
 18826  01363C  0EFF               	movlw	high STR_127
 18827  01363E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18828  013640  ECF7  F0DD         	call	_strcpy	;wreg free
 18829  013644                     l1960:
 18830                           
 18831                           ;oled.c: 586: strcpy(OLED_RAM_Buffer.line2, " ");
 18832  013644  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18833  013646  0102               	movlb	2	; () banked
 18834  013648  6F03               	movwf	strcpy@to& (0+255),b
 18835  01364A  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18836  01364C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18837  01364E  0EA9               	movlw	low (STR_54+10)
 18838  013650  6F05               	movwf	strcpy@from& (0+255),b
 18839  013652  0EFD               	movlw	high (STR_54+10)
 18840  013654  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18841  013656  ECF7  F0DD         	call	_strcpy	;wreg free
 18842                           
 18843                           ;oled.c: 587: strcpy(OLED_RAM_Buffer.line3, " ");
 18844  01365A  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18845  01365C  0102               	movlb	2	; () banked
 18846  01365E  6F03               	movwf	strcpy@to& (0+255),b
 18847  013660  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18848  013662  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18849  013664  0EA9               	movlw	low (STR_54+10)
 18850  013666  6F05               	movwf	strcpy@from& (0+255),b
 18851  013668  0EFD               	movlw	high (STR_54+10)
 18852  01366A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18853  01366C  ECF7  F0DD         	call	_strcpy	;wreg free
 18854                           
 18855                           ;oled.c: 589: OLED_UpdateFromRAMBuffer();
 18856  013670  ECEC  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18857                           
 18858                           ;oled.c: 590: OLED_Frame = OLED_POS5_FSW;
 18859  013674  0E13               	movlw	19
 18860  013676  D50F               	goto	L4
 18861  013678                     l21950:
 18862                           
 18863                           ; BSR set to: 2
 18864                           ;oled.c: 597: OLED_update_flag = 0;
 18865  013678  0E00               	movlw	0
 18866  01367A  6FD7               	movwf	_OLED_update_flag& (0+255),b
 18867                           
 18868                           ; BSR set to: 2
 18869                           ;oled.c: 599: strcpy(OLED_RAM_Buffer.line0, "QI Sw. Freq:");
 18870  01367C  0E00               	movlw	low _OLED_RAM_Buffer
 18871  01367E  6F03               	movwf	strcpy@to& (0+255),b
 18872  013680  0E03               	movlw	high _OLED_RAM_Buffer
 18873  013682  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18874  013684  0E07               	movlw	low STR_130
 18875  013686  6F05               	movwf	strcpy@from& (0+255),b
 18876  013688  0EFD               	movlw	high STR_130
 18877  01368A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18878  01368C  ECF7  F0DD         	call	_strcpy	;wreg free
 18879                           
 18880                           ;oled.c: 600: if (nxq_charge_state == QI_Idle || nxq_charge_state == QI_Error) strcpy(OL
      +                          ED_RAM_Buffer.line1, "Burst Mode");
 18881  013690  0101               	movlb	1	; () banked
 18882  013692  518C               	movf	_nxq_charge_state& (0+255),w,b
 18883  013694  B4D8               	btfsc	status,2,c
 18884  013696  D004               	goto	u27820
 18885                           
 18886                           ; BSR set to: 1
 18887  013698  0E03               	movlw	3
 18888  01369A  198C               	xorwf	_nxq_charge_state& (0+255),w,b
 18889  01369C  A4D8               	btfss	status,2,c
 18890  01369E  D00C               	goto	l21960
 18891  0136A0                     u27820:
 18892                           
 18893                           ; BSR set to: 1
 18894  0136A0  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18895  0136A2  0102               	movlb	2	; () banked
 18896  0136A4  6F03               	movwf	strcpy@to& (0+255),b
 18897  0136A6  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18898  0136A8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18899  0136AA  0EFB               	movlw	low STR_126
 18900  0136AC  6F05               	movwf	strcpy@from& (0+255),b
 18901  0136AE  0EFD               	movlw	high STR_126
 18902  0136B0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18903  0136B2  ECF7  F0DD         	call	_strcpy	;wreg free
 18904  0136B6  D01D               	goto	l21962
 18905  0136B8                     l21960:
 18906                           
 18907                           ; BSR set to: 1
 18908                           ;oled.c: 601: else sprintf(OLED_RAM_Buffer.line1, "%sHz", floatToEngineeringFormat(freq_
      +                          meas_results.QI_Freq_Meas));
 18909  0136B8  C168  F2A3         	movff	_freq_meas_results,floatToEngineeringFormat@input_value
 18910  0136BC  C169  F2A4         	movff	_freq_meas_results+1,floatToEngineeringFormat@input_value+1
 18911  0136C0  C16A  F2A5         	movff	_freq_meas_results+2,floatToEngineeringFormat@input_value+2
 18912  0136C4  C16B  F2A6         	movff	_freq_meas_results+3,floatToEngineeringFormat@input_value+3
 18913  0136C8  ECFB  F0A4         	call	_floatToEngineeringFormat	;wreg free
 18914  0136CC  C2A3  F3F3         	movff	?_floatToEngineeringFormat,_OLED_updateHandler$6024
 18915  0136D0  C2A4  F3F4         	movff	?_floatToEngineeringFormat+1,_OLED_updateHandler$6024+1
 18916                           
 18917                           ;oled.c: 601: else sprintf(OLED_RAM_Buffer.line1, "%sHz", floatToEngineeringFormat(freq_
      +                          meas_results.QI_Freq_Meas));
 18918  0136D4  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18919  0136D6  0102               	movlb	2	; () banked
 18920  0136D8  6F90               	movwf	sprintf@wh& (0+255),b
 18921  0136DA  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18922  0136DC  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 18923  0136DE  0EA3               	movlw	low STR_132
 18924  0136E0  6F92               	movwf	sprintf@f& (0+255),b
 18925  0136E2  0EFF               	movlw	high STR_132
 18926  0136E4  6F93               	movwf	(sprintf@f+1)& (0+255),b
 18927  0136E6  C3F3  F294         	movff	_OLED_updateHandler$6024,?_sprintf+4
 18928  0136EA  C3F4  F295         	movff	_OLED_updateHandler$6024+1,?_sprintf+5
 18929  0136EE  EC1B  F0DE         	call	_sprintf	;wreg free
 18930  0136F2                     l21962:
 18931                           
 18932                           ;oled.c: 602: strcpy(OLED_RAM_Buffer.line2, " ");
 18933  0136F2  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18934  0136F4  0102               	movlb	2	; () banked
 18935  0136F6  6F03               	movwf	strcpy@to& (0+255),b
 18936  0136F8  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18937  0136FA  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18938  0136FC  0EA9               	movlw	low (STR_54+10)
 18939  0136FE  6F05               	movwf	strcpy@from& (0+255),b
 18940  013700  0EFD               	movlw	high (STR_54+10)
 18941  013702  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18942  013704  ECF7  F0DD         	call	_strcpy	;wreg free
 18943                           
 18944                           ;oled.c: 603: strcpy(OLED_RAM_Buffer.line3, " ");
 18945  013708  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18946  01370A  0102               	movlb	2	; () banked
 18947  01370C  6F03               	movwf	strcpy@to& (0+255),b
 18948  01370E  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18949  013710  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18950  013712  0EA9               	movlw	low (STR_54+10)
 18951  013714  6F05               	movwf	strcpy@from& (0+255),b
 18952  013716  0EFD               	movlw	high (STR_54+10)
 18953  013718  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18954  01371A  ECF7  F0DD         	call	_strcpy	;wreg free
 18955                           
 18956                           ;oled.c: 605: OLED_UpdateFromRAMBuffer();
 18957  01371E  ECEC  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18958                           
 18959                           ;oled.c: 606: OLED_Frame = OLED_QI_FSW;
 18960  013722  0E14               	movlw	20
 18961  013724  D4B8               	goto	L4
 18962  013726                     l21972:
 18963                           
 18964                           ; BSR set to: 2
 18965                           ;oled.c: 614: OLED_update_flag = 0;
 18966  013726  0E00               	movlw	0
 18967  013728  6FD7               	movwf	_OLED_update_flag& (0+255),b
 18968                           
 18969                           ; BSR set to: 2
 18970                           ;oled.c: 616: strcpy(OLED_RAM_Buffer.line0, "Dev. On Time:");
 18971  01372A  0E00               	movlw	low _OLED_RAM_Buffer
 18972  01372C  6F03               	movwf	strcpy@to& (0+255),b
 18973  01372E  0E03               	movlw	high _OLED_RAM_Buffer
 18974  013730  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18975  013732  0E62               	movlw	low STR_135
 18976  013734  6F05               	movwf	strcpy@from& (0+255),b
 18977  013736  0EFC               	movlw	high STR_135
 18978  013738  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18979  01373A  ECF7  F0DD         	call	_strcpy	;wreg free
 18980                           
 18981                           ;oled.c: 619: if (device_on_time >= 31536000) {
 18982  01373E  0E80               	movlw	128
 18983  013740  0100               	movlb	0	; () banked
 18984  013742  5DC5               	subwf	_device_on_time& (0+255),w,b
 18985  013744  0E33               	movlw	51
 18986  013746  59C6               	subwfb	(_device_on_time+1)& (0+255),w,b
 18987  013748  0EE1               	movlw	225
 18988  01374A  59C7               	subwfb	(_device_on_time+2)& (0+255),w,b
 18989  01374C  0E01               	movlw	1
 18990  01374E  59C8               	subwfb	(_device_on_time+3)& (0+255),w,b
 18991  013750  A0D8               	btfss	status,0,c
 18992  013752  D04F               	goto	l21980
 18993                           
 18994                           ; BSR set to: 0
 18995                           ;oled.c: 621: sprintf(OLED_RAM_Buffer.line1, "%u years", getYearsFromOnTime(device_on_ti
      +                          me));
 18996  013754  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18997  013756  0102               	movlb	2	; () banked
 18998  013758  6F90               	movwf	sprintf@wh& (0+255),b
 18999  01375A  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19000  01375C  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19001  01375E  0E0C               	movlw	low STR_136
 19002  013760  6F92               	movwf	sprintf@f& (0+255),b
 19003  013762  0EFF               	movlw	high STR_136
 19004  013764  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19005  013766  C0C5  F20D         	movff	_device_on_time,getYearsFromOnTime@input_seconds
 19006  01376A  C0C6  F20E         	movff	_device_on_time+1,getYearsFromOnTime@input_seconds+1
 19007  01376E  C0C7  F20F         	movff	_device_on_time+2,getYearsFromOnTime@input_seconds+2
 19008  013772  C0C8  F210         	movff	_device_on_time+3,getYearsFromOnTime@input_seconds+3
 19009  013776  EC9B  F0E1         	call	_getYearsFromOnTime	;wreg free
 19010  01377A  0102               	movlb	2	; () banked
 19011  01377C  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19012  01377E  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19013  013780  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19014  013782  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19015  013784  EC1B  F0DE         	call	_sprintf	;wreg free
 19016                           
 19017                           ;oled.c: 622: sprintf(OLED_RAM_Buffer.line2, "%u days", getDaysFromOnTime(device_on_time
      +                          ));
 19018  013788  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19019  01378A  0102               	movlb	2	; () banked
 19020  01378C  6F90               	movwf	sprintf@wh& (0+255),b
 19021  01378E  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19022  013790  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19023  013792  0E61               	movlw	low STR_137
 19024  013794  6F92               	movwf	sprintf@f& (0+255),b
 19025  013796  0EFF               	movlw	high STR_137
 19026  013798  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19027  01379A  C0C5  F20D         	movff	_device_on_time,getDaysFromOnTime@input_seconds
 19028  01379E  C0C6  F20E         	movff	_device_on_time+1,getDaysFromOnTime@input_seconds+1
 19029  0137A2  C0C7  F20F         	movff	_device_on_time+2,getDaysFromOnTime@input_seconds+2
 19030  0137A6  C0C8  F210         	movff	_device_on_time+3,getDaysFromOnTime@input_seconds+3
 19031  0137AA  EC53  F0D8         	call	_getDaysFromOnTime	;wreg free
 19032  0137AE  0102               	movlb	2	; () banked
 19033  0137B0  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19034  0137B2  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19035  0137B4  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19036  0137B6  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19037  0137B8  EC1B  F0DE         	call	_sprintf	;wreg free
 19038                           
 19039                           ;oled.c: 623: sprintf(OLED_RAM_Buffer.line3, "%u hours", getHoursFromOnTime(device_on_ti
      +                          me));
 19040  0137BC  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19041  0137BE  0102               	movlb	2	; () banked
 19042  0137C0  6F90               	movwf	sprintf@wh& (0+255),b
 19043  0137C2  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19044  0137C4  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19045  0137C6  0E15               	movlw	low STR_138
 19046  0137C8  6F92               	movwf	sprintf@f& (0+255),b
 19047  0137CA  0EFF               	movlw	high STR_138
 19048  0137CC  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19049  0137CE  C0C5  F20D         	movff	_device_on_time,getHoursFromOnTime@input_seconds
 19050  0137D2  C0C6  F20E         	movff	_device_on_time+1,getHoursFromOnTime@input_seconds+1
 19051  0137D6  C0C7  F20F         	movff	_device_on_time+2,getHoursFromOnTime@input_seconds+2
 19052  0137DA  C0C8  F210         	movff	_device_on_time+3,getHoursFromOnTime@input_seconds+3
 19053  0137DE  ECEB  F0D2         	call	_getHoursFromOnTime	;wreg free
 19054  0137E2  0102               	movlb	2	; () banked
 19055  0137E4  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19056  0137E6  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19057  0137E8  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19058  0137EA  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19059  0137EC  EC1B  F0DE         	call	_sprintf	;wreg free
 19060                           
 19061                           ;oled.c: 626: }
 19062  0137F0  D129               	goto	l22000
 19063  0137F2                     l21980:
 19064                           
 19065                           ; BSR set to: 0
 19066                           ;oled.c: 629: else if (device_on_time >= 86400) {
 19067  0137F2  51C8               	movf	(_device_on_time+3)& (0+255),w,b
 19068  0137F4  E108               	bnz	u27840
 19069  0137F6  0E80               	movlw	128
 19070  0137F8  5DC5               	subwf	_device_on_time& (0+255),w,b
 19071  0137FA  0E51               	movlw	81
 19072  0137FC  59C6               	subwfb	(_device_on_time+1)& (0+255),w,b
 19073  0137FE  0E01               	movlw	1
 19074  013800  59C7               	subwfb	(_device_on_time+2)& (0+255),w,b
 19075  013802  A0D8               	btfss	status,0,c
 19076  013804  D04F               	goto	l21984
 19077  013806                     u27840:
 19078                           
 19079                           ; BSR set to: 0
 19080                           ;oled.c: 631: sprintf(OLED_RAM_Buffer.line1, "%u days", getDaysFromOnTime(device_on_time
      +                          ));
 19081  013806  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19082  013808  0102               	movlb	2	; () banked
 19083  01380A  6F90               	movwf	sprintf@wh& (0+255),b
 19084  01380C  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19085  01380E  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19086  013810  0E61               	movlw	low STR_137
 19087  013812  6F92               	movwf	sprintf@f& (0+255),b
 19088  013814  0EFF               	movlw	high STR_137
 19089  013816  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19090  013818  C0C5  F20D         	movff	_device_on_time,getDaysFromOnTime@input_seconds
 19091  01381C  C0C6  F20E         	movff	_device_on_time+1,getDaysFromOnTime@input_seconds+1
 19092  013820  C0C7  F20F         	movff	_device_on_time+2,getDaysFromOnTime@input_seconds+2
 19093  013824  C0C8  F210         	movff	_device_on_time+3,getDaysFromOnTime@input_seconds+3
 19094  013828  EC53  F0D8         	call	_getDaysFromOnTime	;wreg free
 19095  01382C  0102               	movlb	2	; () banked
 19096  01382E  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19097  013830  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19098  013832  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19099  013834  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19100  013836  EC1B  F0DE         	call	_sprintf	;wreg free
 19101                           
 19102                           ;oled.c: 632: sprintf(OLED_RAM_Buffer.line2, "%u hours", getHoursFromOnTime(device_on_ti
      +                          me));
 19103  01383A  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19104  01383C  0102               	movlb	2	; () banked
 19105  01383E  6F90               	movwf	sprintf@wh& (0+255),b
 19106  013840  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19107  013842  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19108  013844  0E15               	movlw	low STR_138
 19109  013846  6F92               	movwf	sprintf@f& (0+255),b
 19110  013848  0EFF               	movlw	high STR_138
 19111  01384A  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19112  01384C  C0C5  F20D         	movff	_device_on_time,getHoursFromOnTime@input_seconds
 19113  013850  C0C6  F20E         	movff	_device_on_time+1,getHoursFromOnTime@input_seconds+1
 19114  013854  C0C7  F20F         	movff	_device_on_time+2,getHoursFromOnTime@input_seconds+2
 19115  013858  C0C8  F210         	movff	_device_on_time+3,getHoursFromOnTime@input_seconds+3
 19116  01385C  ECEB  F0D2         	call	_getHoursFromOnTime	;wreg free
 19117  013860  0102               	movlb	2	; () banked
 19118  013862  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19119  013864  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19120  013866  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19121  013868  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19122  01386A  EC1B  F0DE         	call	_sprintf	;wreg free
 19123                           
 19124                           ;oled.c: 633: sprintf(OLED_RAM_Buffer.line3, "%u minutes", getMinutesFromOnTime(device_o
      +                          n_time));
 19125  01386E  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19126  013870  0102               	movlb	2	; () banked
 19127  013872  6F90               	movwf	sprintf@wh& (0+255),b
 19128  013874  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19129  013876  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19130  013878  0E11               	movlw	low STR_141
 19131  01387A  6F92               	movwf	sprintf@f& (0+255),b
 19132  01387C  0EFE               	movlw	high STR_141
 19133  01387E  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19134  013880  C0C5  F20D         	movff	_device_on_time,getMinutesFromOnTime@input_seconds
 19135  013884  C0C6  F20E         	movff	_device_on_time+1,getMinutesFromOnTime@input_seconds+1
 19136  013888  C0C7  F20F         	movff	_device_on_time+2,getMinutesFromOnTime@input_seconds+2
 19137  01388C  C0C8  F210         	movff	_device_on_time+3,getMinutesFromOnTime@input_seconds+3
 19138  013890  ECB8  F0CC         	call	_getMinutesFromOnTime	;wreg free
 19139  013894  0102               	movlb	2	; () banked
 19140  013896  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19141  013898  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19142  01389A  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19143  01389C  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19144  01389E  EC1B  F0DE         	call	_sprintf	;wreg free
 19145                           
 19146                           ;oled.c: 635: }
 19147  0138A2  D0D0               	goto	l22000
 19148  0138A4                     l21984:
 19149                           
 19150                           ; BSR set to: 0
 19151                           ;oled.c: 638: else if (device_on_time >= 3600) {
 19152  0138A4  51C8               	movf	(_device_on_time+3)& (0+255),w,b
 19153  0138A6  11C7               	iorwf	(_device_on_time+2)& (0+255),w,b
 19154  0138A8  E106               	bnz	u27850
 19155  0138AA  0E10               	movlw	16
 19156  0138AC  5DC5               	subwf	_device_on_time& (0+255),w,b
 19157  0138AE  0E0E               	movlw	14
 19158  0138B0  59C6               	subwfb	(_device_on_time+1)& (0+255),w,b
 19159  0138B2  A0D8               	btfss	status,0,c
 19160  0138B4  D04F               	goto	l21988
 19161  0138B6                     u27850:
 19162                           
 19163                           ; BSR set to: 0
 19164                           ;oled.c: 640: sprintf(OLED_RAM_Buffer.line1, "%u hours", getHoursFromOnTime(device_on_ti
      +                          me));
 19165  0138B6  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19166  0138B8  0102               	movlb	2	; () banked
 19167  0138BA  6F90               	movwf	sprintf@wh& (0+255),b
 19168  0138BC  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19169  0138BE  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19170  0138C0  0E15               	movlw	low STR_138
 19171  0138C2  6F92               	movwf	sprintf@f& (0+255),b
 19172  0138C4  0EFF               	movlw	high STR_138
 19173  0138C6  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19174  0138C8  C0C5  F20D         	movff	_device_on_time,getHoursFromOnTime@input_seconds
 19175  0138CC  C0C6  F20E         	movff	_device_on_time+1,getHoursFromOnTime@input_seconds+1
 19176  0138D0  C0C7  F20F         	movff	_device_on_time+2,getHoursFromOnTime@input_seconds+2
 19177  0138D4  C0C8  F210         	movff	_device_on_time+3,getHoursFromOnTime@input_seconds+3
 19178  0138D8  ECEB  F0D2         	call	_getHoursFromOnTime	;wreg free
 19179  0138DC  0102               	movlb	2	; () banked
 19180  0138DE  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19181  0138E0  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19182  0138E2  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19183  0138E4  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19184  0138E6  EC1B  F0DE         	call	_sprintf	;wreg free
 19185                           
 19186                           ;oled.c: 641: sprintf(OLED_RAM_Buffer.line2, "%u minutes", getMinutesFromOnTime(device_o
      +                          n_time));
 19187  0138EA  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19188  0138EC  0102               	movlb	2	; () banked
 19189  0138EE  6F90               	movwf	sprintf@wh& (0+255),b
 19190  0138F0  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19191  0138F2  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19192  0138F4  0E11               	movlw	low STR_141
 19193  0138F6  6F92               	movwf	sprintf@f& (0+255),b
 19194  0138F8  0EFE               	movlw	high STR_141
 19195  0138FA  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19196  0138FC  C0C5  F20D         	movff	_device_on_time,getMinutesFromOnTime@input_seconds
 19197  013900  C0C6  F20E         	movff	_device_on_time+1,getMinutesFromOnTime@input_seconds+1
 19198  013904  C0C7  F20F         	movff	_device_on_time+2,getMinutesFromOnTime@input_seconds+2
 19199  013908  C0C8  F210         	movff	_device_on_time+3,getMinutesFromOnTime@input_seconds+3
 19200  01390C  ECB8  F0CC         	call	_getMinutesFromOnTime	;wreg free
 19201  013910  0102               	movlb	2	; () banked
 19202  013912  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19203  013914  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19204  013916  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19205  013918  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19206  01391A  EC1B  F0DE         	call	_sprintf	;wreg free
 19207                           
 19208                           ;oled.c: 642: sprintf(OLED_RAM_Buffer.line3, "%u seconds", getSecondsFromOnTime(device_o
      +                          n_time));
 19209  01391E  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19210  013920  0102               	movlb	2	; () banked
 19211  013922  6F90               	movwf	sprintf@wh& (0+255),b
 19212  013924  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19213  013926  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19214  013928  0E06               	movlw	low STR_144
 19215  01392A  6F92               	movwf	sprintf@f& (0+255),b
 19216  01392C  0EFE               	movlw	high STR_144
 19217  01392E  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19218  013930  C0C5  F20D         	movff	_device_on_time,getSecondsFromOnTime@input_seconds
 19219  013934  C0C6  F20E         	movff	_device_on_time+1,getSecondsFromOnTime@input_seconds+1
 19220  013938  C0C7  F20F         	movff	_device_on_time+2,getSecondsFromOnTime@input_seconds+2
 19221  01393C  C0C8  F210         	movff	_device_on_time+3,getSecondsFromOnTime@input_seconds+3
 19222  013940  ECFB  F0CB         	call	_getSecondsFromOnTime	;wreg free
 19223  013944  0102               	movlb	2	; () banked
 19224  013946  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19225  013948  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19226  01394A  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19227  01394C  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19228  01394E  EC1B  F0DE         	call	_sprintf	;wreg free
 19229                           
 19230                           ;oled.c: 644: }
 19231  013952  D078               	goto	l22000
 19232  013954                     l21988:
 19233                           
 19234                           ; BSR set to: 0
 19235                           ;oled.c: 647: else if (device_on_time >= 60) {
 19236  013954  51C8               	movf	(_device_on_time+3)& (0+255),w,b
 19237  013956  11C7               	iorwf	(_device_on_time+2)& (0+255),w,b
 19238  013958  11C6               	iorwf	(_device_on_time+1)& (0+255),w,b
 19239  01395A  E104               	bnz	u27860
 19240  01395C  0E3C               	movlw	60
 19241  01395E  5DC5               	subwf	_device_on_time& (0+255),w,b
 19242  013960  A0D8               	btfss	status,0,c
 19243  013962  D040               	goto	l21994
 19244  013964                     u27860:
 19245                           
 19246                           ; BSR set to: 0
 19247                           ;oled.c: 649: sprintf(OLED_RAM_Buffer.line1, "%u minutes", getMinutesFromOnTime(device_o
      +                          n_time));
 19248  013964  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19249  013966  0102               	movlb	2	; () banked
 19250  013968  6F90               	movwf	sprintf@wh& (0+255),b
 19251  01396A  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19252  01396C  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19253  01396E  0E11               	movlw	low STR_141
 19254  013970  6F92               	movwf	sprintf@f& (0+255),b
 19255  013972  0EFE               	movlw	high STR_141
 19256  013974  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19257  013976  C0C5  F20D         	movff	_device_on_time,getMinutesFromOnTime@input_seconds
 19258  01397A  C0C6  F20E         	movff	_device_on_time+1,getMinutesFromOnTime@input_seconds+1
 19259  01397E  C0C7  F20F         	movff	_device_on_time+2,getMinutesFromOnTime@input_seconds+2
 19260  013982  C0C8  F210         	movff	_device_on_time+3,getMinutesFromOnTime@input_seconds+3
 19261  013986  ECB8  F0CC         	call	_getMinutesFromOnTime	;wreg free
 19262  01398A  0102               	movlb	2	; () banked
 19263  01398C  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19264  01398E  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19265  013990  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19266  013992  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19267  013994  EC1B  F0DE         	call	_sprintf	;wreg free
 19268                           
 19269                           ;oled.c: 650: sprintf(OLED_RAM_Buffer.line2, "%u seconds", getSecondsFromOnTime(device_o
      +                          n_time));
 19270  013998  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19271  01399A  0102               	movlb	2	; () banked
 19272  01399C  6F90               	movwf	sprintf@wh& (0+255),b
 19273  01399E  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19274  0139A0  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19275  0139A2  0E06               	movlw	low STR_144
 19276  0139A4  6F92               	movwf	sprintf@f& (0+255),b
 19277  0139A6  0EFE               	movlw	high STR_144
 19278  0139A8  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19279  0139AA  C0C5  F20D         	movff	_device_on_time,getSecondsFromOnTime@input_seconds
 19280  0139AE  C0C6  F20E         	movff	_device_on_time+1,getSecondsFromOnTime@input_seconds+1
 19281  0139B2  C0C7  F20F         	movff	_device_on_time+2,getSecondsFromOnTime@input_seconds+2
 19282  0139B6  C0C8  F210         	movff	_device_on_time+3,getSecondsFromOnTime@input_seconds+3
 19283  0139BA  ECFB  F0CB         	call	_getSecondsFromOnTime	;wreg free
 19284  0139BE  0102               	movlb	2	; () banked
 19285  0139C0  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19286  0139C2  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19287  0139C4  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19288  0139C6  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19289  0139C8  EC1B  F0DE         	call	_sprintf	;wreg free
 19290                           
 19291                           ;oled.c: 651: strcpy(OLED_RAM_Buffer.line3, " ");
 19292  0139CC  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19293  0139CE  0102               	movlb	2	; () banked
 19294  0139D0  6F03               	movwf	strcpy@to& (0+255),b
 19295  0139D2  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19296  0139D4  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19297  0139D6  0EA9               	movlw	low (STR_54+10)
 19298  0139D8  6F05               	movwf	strcpy@from& (0+255),b
 19299  0139DA  0EFD               	movlw	high (STR_54+10)
 19300  0139DC  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19301  0139DE  ECF7  F0DD         	call	_strcpy	;wreg free
 19302                           
 19303                           ;oled.c: 653: }
 19304  0139E2  D030               	goto	l22000
 19305  0139E4                     l21994:
 19306                           
 19307                           ; BSR set to: 0
 19308                           ;oled.c: 656: else {;oled.c: 658: sprintf(OLED_RAM_Buffer.line1, "%u seconds", getSecond
      +                          sFromOnTime(device_on_time));
 19309  0139E4  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19310  0139E6  0102               	movlb	2	; () banked
 19311  0139E8  6F90               	movwf	sprintf@wh& (0+255),b
 19312  0139EA  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19313  0139EC  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19314  0139EE  0E06               	movlw	low STR_144
 19315  0139F0  6F92               	movwf	sprintf@f& (0+255),b
 19316  0139F2  0EFE               	movlw	high STR_144
 19317  0139F4  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19318  0139F6  C0C5  F20D         	movff	_device_on_time,getSecondsFromOnTime@input_seconds
 19319  0139FA  C0C6  F20E         	movff	_device_on_time+1,getSecondsFromOnTime@input_seconds+1
 19320  0139FE  C0C7  F20F         	movff	_device_on_time+2,getSecondsFromOnTime@input_seconds+2
 19321  013A02  C0C8  F210         	movff	_device_on_time+3,getSecondsFromOnTime@input_seconds+3
 19322  013A06  ECFB  F0CB         	call	_getSecondsFromOnTime	;wreg free
 19323  013A0A  0102               	movlb	2	; () banked
 19324  013A0C  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19325  013A0E  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19326  013A10  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19327  013A12  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19328  013A14  EC1B  F0DE         	call	_sprintf	;wreg free
 19329                           
 19330                           ;oled.c: 659: strcpy(OLED_RAM_Buffer.line2, " ");
 19331  013A18  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19332  013A1A  0102               	movlb	2	; () banked
 19333  013A1C  6F03               	movwf	strcpy@to& (0+255),b
 19334  013A1E  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19335  013A20  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19336  013A22  0EA9               	movlw	low (STR_54+10)
 19337  013A24  6F05               	movwf	strcpy@from& (0+255),b
 19338  013A26  0EFD               	movlw	high (STR_54+10)
 19339  013A28  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19340  013A2A  ECF7  F0DD         	call	_strcpy	;wreg free
 19341                           
 19342                           ;oled.c: 660: strcpy(OLED_RAM_Buffer.line3, " ");
 19343  013A2E  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19344  013A30  0102               	movlb	2	; () banked
 19345  013A32  6F03               	movwf	strcpy@to& (0+255),b
 19346  013A34  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19347  013A36  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19348  013A38  0EA9               	movlw	low (STR_54+10)
 19349  013A3A  6F05               	movwf	strcpy@from& (0+255),b
 19350  013A3C  0EFD               	movlw	high (STR_54+10)
 19351  013A3E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19352  013A40  ECF7  F0DD         	call	_strcpy	;wreg free
 19353  013A44                     l22000:
 19354                           
 19355                           ;oled.c: 662: };oled.c: 665: OLED_UpdateFromRAMBuffer();
 19356  013A44  ECEC  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19357                           
 19358                           ;oled.c: 666: OLED_Frame = OLED_Dev_On_Time;
 19359  013A48  0E15               	movlw	21
 19360  013A4A  EF4B  F098         	goto	L4
 19361  013A4E                     l22006:
 19362                           
 19363                           ; BSR set to: 2
 19364                           ;oled.c: 673: OLED_update_flag = 0;
 19365  013A4E  0E00               	movlw	0
 19366  013A50  6FD7               	movwf	_OLED_update_flag& (0+255),b
 19367                           
 19368                           ; BSR set to: 2
 19369                           ;oled.c: 675: strcpy(OLED_RAM_Buffer.line0, "Charge Time:");
 19370  013A52  0E00               	movlw	low _OLED_RAM_Buffer
 19371  013A54  6F03               	movwf	strcpy@to& (0+255),b
 19372  013A56  0E03               	movlw	high _OLED_RAM_Buffer
 19373  013A58  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19374  013A5A  0EFA               	movlw	low STR_151
 19375  013A5C  6F05               	movwf	strcpy@from& (0+255),b
 19376  013A5E  0EFC               	movlw	high STR_151
 19377  013A60  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19378  013A62  ECF7  F0DD         	call	_strcpy	;wreg free
 19379                           
 19380                           ;oled.c: 678: if (QI_charge_time >= 3600) {
 19381  013A66  0102               	movlb	2	; () banked
 19382  013A68  51D6               	movf	(_QI_charge_time+3)& (0+255),w,b
 19383  013A6A  11D5               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 19384  013A6C  E106               	bnz	u27870
 19385  013A6E  0E10               	movlw	16
 19386  013A70  5DD3               	subwf	_QI_charge_time& (0+255),w,b
 19387  013A72  0E0E               	movlw	14
 19388  013A74  59D4               	subwfb	(_QI_charge_time+1)& (0+255),w,b
 19389  013A76  A0D8               	btfss	status,0,c
 19390  013A78  D04E               	goto	l22014
 19391  013A7A                     u27870:
 19392                           
 19393                           ; BSR set to: 2
 19394                           ;oled.c: 680: sprintf(OLED_RAM_Buffer.line1, "%u hours", getHoursFromOnTime(QI_charge_ti
      +                          me));
 19395  013A7A  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19396  013A7C  6F90               	movwf	sprintf@wh& (0+255),b
 19397  013A7E  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19398  013A80  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19399  013A82  0E15               	movlw	low STR_138
 19400  013A84  6F92               	movwf	sprintf@f& (0+255),b
 19401  013A86  0EFF               	movlw	high STR_138
 19402  013A88  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19403  013A8A  C2D3  F20D         	movff	_QI_charge_time,getHoursFromOnTime@input_seconds
 19404  013A8E  C2D4  F20E         	movff	_QI_charge_time+1,getHoursFromOnTime@input_seconds+1
 19405  013A92  C2D5  F20F         	movff	_QI_charge_time+2,getHoursFromOnTime@input_seconds+2
 19406  013A96  C2D6  F210         	movff	_QI_charge_time+3,getHoursFromOnTime@input_seconds+3
 19407  013A9A  ECEB  F0D2         	call	_getHoursFromOnTime	;wreg free
 19408  013A9E  0102               	movlb	2	; () banked
 19409  013AA0  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19410  013AA2  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19411  013AA4  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19412  013AA6  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19413  013AA8  EC1B  F0DE         	call	_sprintf	;wreg free
 19414                           
 19415                           ;oled.c: 681: sprintf(OLED_RAM_Buffer.line2, "%u minutes", getMinutesFromOnTime(QI_charg
      +                          e_time));
 19416  013AAC  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19417  013AAE  0102               	movlb	2	; () banked
 19418  013AB0  6F90               	movwf	sprintf@wh& (0+255),b
 19419  013AB2  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19420  013AB4  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19421  013AB6  0E11               	movlw	low STR_141
 19422  013AB8  6F92               	movwf	sprintf@f& (0+255),b
 19423  013ABA  0EFE               	movlw	high STR_141
 19424  013ABC  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19425  013ABE  C2D3  F20D         	movff	_QI_charge_time,getMinutesFromOnTime@input_seconds
 19426  013AC2  C2D4  F20E         	movff	_QI_charge_time+1,getMinutesFromOnTime@input_seconds+1
 19427  013AC6  C2D5  F20F         	movff	_QI_charge_time+2,getMinutesFromOnTime@input_seconds+2
 19428  013ACA  C2D6  F210         	movff	_QI_charge_time+3,getMinutesFromOnTime@input_seconds+3
 19429  013ACE  ECB8  F0CC         	call	_getMinutesFromOnTime	;wreg free
 19430  013AD2  0102               	movlb	2	; () banked
 19431  013AD4  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19432  013AD6  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19433  013AD8  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19434  013ADA  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19435  013ADC  EC1B  F0DE         	call	_sprintf	;wreg free
 19436                           
 19437                           ;oled.c: 682: sprintf(OLED_RAM_Buffer.line3, "%u seconds", getSecondsFromOnTime(QI_charg
      +                          e_time));
 19438  013AE0  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19439  013AE2  0102               	movlb	2	; () banked
 19440  013AE4  6F90               	movwf	sprintf@wh& (0+255),b
 19441  013AE6  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19442  013AE8  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19443  013AEA  0E06               	movlw	low STR_144
 19444  013AEC  6F92               	movwf	sprintf@f& (0+255),b
 19445  013AEE  0EFE               	movlw	high STR_144
 19446  013AF0  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19447  013AF2  C2D3  F20D         	movff	_QI_charge_time,getSecondsFromOnTime@input_seconds
 19448  013AF6  C2D4  F20E         	movff	_QI_charge_time+1,getSecondsFromOnTime@input_seconds+1
 19449  013AFA  C2D5  F20F         	movff	_QI_charge_time+2,getSecondsFromOnTime@input_seconds+2
 19450  013AFE  C2D6  F210         	movff	_QI_charge_time+3,getSecondsFromOnTime@input_seconds+3
 19451  013B02  ECFB  F0CB         	call	_getSecondsFromOnTime	;wreg free
 19452  013B06  0102               	movlb	2	; () banked
 19453  013B08  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19454  013B0A  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19455  013B0C  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19456  013B0E  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19457  013B10  EC1B  F0DE         	call	_sprintf	;wreg free
 19458                           
 19459                           ;oled.c: 684: }
 19460  013B14  D09D               	goto	l22030
 19461  013B16                     l22014:
 19462                           
 19463                           ; BSR set to: 2
 19464                           ;oled.c: 687: else if (QI_charge_time >= 60) {
 19465  013B16  51D6               	movf	(_QI_charge_time+3)& (0+255),w,b
 19466  013B18  11D5               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 19467  013B1A  11D4               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 19468  013B1C  E104               	bnz	u27880
 19469  013B1E  0E3C               	movlw	60
 19470  013B20  5DD3               	subwf	_QI_charge_time& (0+255),w,b
 19471  013B22  A0D8               	btfss	status,0,c
 19472  013B24  D03F               	goto	l22020
 19473  013B26                     u27880:
 19474                           
 19475                           ; BSR set to: 2
 19476                           ;oled.c: 689: sprintf(OLED_RAM_Buffer.line1, "%u minutes", getMinutesFromOnTime(QI_charg
      +                          e_time));
 19477  013B26  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19478  013B28  6F90               	movwf	sprintf@wh& (0+255),b
 19479  013B2A  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19480  013B2C  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19481  013B2E  0E11               	movlw	low STR_141
 19482  013B30  6F92               	movwf	sprintf@f& (0+255),b
 19483  013B32  0EFE               	movlw	high STR_141
 19484  013B34  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19485  013B36  C2D3  F20D         	movff	_QI_charge_time,getMinutesFromOnTime@input_seconds
 19486  013B3A  C2D4  F20E         	movff	_QI_charge_time+1,getMinutesFromOnTime@input_seconds+1
 19487  013B3E  C2D5  F20F         	movff	_QI_charge_time+2,getMinutesFromOnTime@input_seconds+2
 19488  013B42  C2D6  F210         	movff	_QI_charge_time+3,getMinutesFromOnTime@input_seconds+3
 19489  013B46  ECB8  F0CC         	call	_getMinutesFromOnTime	;wreg free
 19490  013B4A  0102               	movlb	2	; () banked
 19491  013B4C  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19492  013B4E  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19493  013B50  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19494  013B52  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19495  013B54  EC1B  F0DE         	call	_sprintf	;wreg free
 19496                           
 19497                           ;oled.c: 690: sprintf(OLED_RAM_Buffer.line2, "%u seconds", getSecondsFromOnTime(QI_charg
      +                          e_time));
 19498  013B58  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19499  013B5A  0102               	movlb	2	; () banked
 19500  013B5C  6F90               	movwf	sprintf@wh& (0+255),b
 19501  013B5E  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19502  013B60  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19503  013B62  0E06               	movlw	low STR_144
 19504  013B64  6F92               	movwf	sprintf@f& (0+255),b
 19505  013B66  0EFE               	movlw	high STR_144
 19506  013B68  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19507  013B6A  C2D3  F20D         	movff	_QI_charge_time,getSecondsFromOnTime@input_seconds
 19508  013B6E  C2D4  F20E         	movff	_QI_charge_time+1,getSecondsFromOnTime@input_seconds+1
 19509  013B72  C2D5  F20F         	movff	_QI_charge_time+2,getSecondsFromOnTime@input_seconds+2
 19510  013B76  C2D6  F210         	movff	_QI_charge_time+3,getSecondsFromOnTime@input_seconds+3
 19511  013B7A  ECFB  F0CB         	call	_getSecondsFromOnTime	;wreg free
 19512  013B7E  0102               	movlb	2	; () banked
 19513  013B80  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19514  013B82  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19515  013B84  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19516  013B86  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19517  013B88  EC1B  F0DE         	call	_sprintf	;wreg free
 19518                           
 19519                           ;oled.c: 691: strcpy(OLED_RAM_Buffer.line3, " ");
 19520  013B8C  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19521  013B8E  0102               	movlb	2	; () banked
 19522  013B90  6F03               	movwf	strcpy@to& (0+255),b
 19523  013B92  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19524  013B94  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19525  013B96  0EA9               	movlw	low (STR_54+10)
 19526  013B98  6F05               	movwf	strcpy@from& (0+255),b
 19527  013B9A  0EFD               	movlw	high (STR_54+10)
 19528  013B9C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19529  013B9E  ECF7  F0DD         	call	_strcpy	;wreg free
 19530                           
 19531                           ;oled.c: 693: }
 19532  013BA2  D056               	goto	l22030
 19533  013BA4                     l22020:
 19534                           
 19535                           ; BSR set to: 2
 19536                           ;oled.c: 695: else if (QI_charge_time == 0) {
 19537  013BA4  51D3               	movf	_QI_charge_time& (0+255),w,b
 19538  013BA6  11D4               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 19539  013BA8  11D5               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 19540  013BAA  11D6               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 19541  013BAC  A4D8               	btfss	status,2,c
 19542  013BAE  D021               	goto	l22024
 19543                           
 19544                           ; BSR set to: 2
 19545                           ;oled.c: 697: strcpy(OLED_RAM_Buffer.line1, "Not Charging");
 19546  013BB0  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19547  013BB2  6F03               	movwf	strcpy@to& (0+255),b
 19548  013BB4  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19549  013BB6  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19550  013BB8  0E21               	movlw	low STR_91
 19551  013BBA  6F05               	movwf	strcpy@from& (0+255),b
 19552  013BBC  0EFD               	movlw	high STR_91
 19553  013BBE  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19554  013BC0  ECF7  F0DD         	call	_strcpy	;wreg free
 19555                           
 19556                           ;oled.c: 698: strcpy(OLED_RAM_Buffer.line2, " ");
 19557  013BC4  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19558  013BC6  0102               	movlb	2	; () banked
 19559  013BC8  6F03               	movwf	strcpy@to& (0+255),b
 19560  013BCA  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19561  013BCC  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19562  013BCE  0EA9               	movlw	low (STR_54+10)
 19563  013BD0  6F05               	movwf	strcpy@from& (0+255),b
 19564  013BD2  0EFD               	movlw	high (STR_54+10)
 19565  013BD4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19566  013BD6  ECF7  F0DD         	call	_strcpy	;wreg free
 19567                           
 19568                           ;oled.c: 699: strcpy(OLED_RAM_Buffer.line3, " ");
 19569  013BDA  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19570  013BDC  0102               	movlb	2	; () banked
 19571  013BDE  6F03               	movwf	strcpy@to& (0+255),b
 19572  013BE0  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19573  013BE2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19574  013BE4  0EA9               	movlw	low (STR_54+10)
 19575  013BE6  6F05               	movwf	strcpy@from& (0+255),b
 19576  013BE8  0EFD               	movlw	high (STR_54+10)
 19577  013BEA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19578  013BEC  ECF7  F0DD         	call	_strcpy	;wreg free
 19579                           
 19580                           ;oled.c: 701: }
 19581  013BF0  D02F               	goto	l22030
 19582  013BF2                     l22024:
 19583                           
 19584                           ; BSR set to: 2
 19585                           ;oled.c: 704: else {;oled.c: 706: sprintf(OLED_RAM_Buffer.line1, "%u seconds", getSecond
      +                          sFromOnTime(QI_charge_time));
 19586  013BF2  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19587  013BF4  6F90               	movwf	sprintf@wh& (0+255),b
 19588  013BF6  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19589  013BF8  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19590  013BFA  0E06               	movlw	low STR_144
 19591  013BFC  6F92               	movwf	sprintf@f& (0+255),b
 19592  013BFE  0EFE               	movlw	high STR_144
 19593  013C00  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19594  013C02  C2D3  F20D         	movff	_QI_charge_time,getSecondsFromOnTime@input_seconds
 19595  013C06  C2D4  F20E         	movff	_QI_charge_time+1,getSecondsFromOnTime@input_seconds+1
 19596  013C0A  C2D5  F20F         	movff	_QI_charge_time+2,getSecondsFromOnTime@input_seconds+2
 19597  013C0E  C2D6  F210         	movff	_QI_charge_time+3,getSecondsFromOnTime@input_seconds+3
 19598  013C12  ECFB  F0CB         	call	_getSecondsFromOnTime	;wreg free
 19599  013C16  0102               	movlb	2	; () banked
 19600  013C18  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19601  013C1A  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19602  013C1C  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19603  013C1E  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19604  013C20  EC1B  F0DE         	call	_sprintf	;wreg free
 19605                           
 19606                           ;oled.c: 707: strcpy(OLED_RAM_Buffer.line2, " ");
 19607  013C24  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19608  013C26  0102               	movlb	2	; () banked
 19609  013C28  6F03               	movwf	strcpy@to& (0+255),b
 19610  013C2A  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19611  013C2C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19612  013C2E  0EA9               	movlw	low (STR_54+10)
 19613  013C30  6F05               	movwf	strcpy@from& (0+255),b
 19614  013C32  0EFD               	movlw	high (STR_54+10)
 19615  013C34  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19616  013C36  ECF7  F0DD         	call	_strcpy	;wreg free
 19617                           
 19618                           ;oled.c: 708: strcpy(OLED_RAM_Buffer.line3, " ");
 19619  013C3A  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19620  013C3C  0102               	movlb	2	; () banked
 19621  013C3E  6F03               	movwf	strcpy@to& (0+255),b
 19622  013C40  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19623  013C42  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19624  013C44  0EA9               	movlw	low (STR_54+10)
 19625  013C46  6F05               	movwf	strcpy@from& (0+255),b
 19626  013C48  0EFD               	movlw	high (STR_54+10)
 19627  013C4A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19628  013C4C  ECF7  F0DD         	call	_strcpy	;wreg free
 19629  013C50                     l22030:
 19630                           
 19631                           ;oled.c: 710: };oled.c: 712: OLED_UpdateFromRAMBuffer();
 19632  013C50  ECEC  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19633                           
 19634                           ;oled.c: 713: OLED_Frame = OLED_Charge_Time;
 19635  013C54  0E0C               	movlw	12
 19636  013C56  EF4B  F098         	goto	L4
 19637  013C5A                     l22036:
 19638                           
 19639                           ; BSR set to: 2
 19640                           ;oled.c: 720: OLED_update_flag = 0;
 19641  013C5A  0E00               	movlw	0
 19642  013C5C  6FD7               	movwf	_OLED_update_flag& (0+255),b
 19643                           
 19644                           ; BSR set to: 2
 19645                           ;oled.c: 722: strcpy(OLED_RAM_Buffer.line0, "Output Charge:");
 19646  013C5E  0E00               	movlw	low _OLED_RAM_Buffer
 19647  013C60  6F03               	movwf	strcpy@to& (0+255),b
 19648  013C62  0E03               	movlw	high _OLED_RAM_Buffer
 19649  013C64  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19650  013C66  0ED0               	movlw	low STR_164
 19651  013C68  6F05               	movwf	strcpy@from& (0+255),b
 19652  013C6A  0EFB               	movlw	high STR_164
 19653  013C6C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19654  013C6E  ECF7  F0DD         	call	_strcpy	;wreg free
 19655                           
 19656                           ;oled.c: 723: if (QI_charge_time == 0) strcpy(OLED_RAM_Buffer.line1, "Not Charging");
 19657  013C72  0102               	movlb	2	; () banked
 19658  013C74  51D3               	movf	_QI_charge_time& (0+255),w,b
 19659  013C76  11D4               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 19660  013C78  11D5               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 19661  013C7A  11D6               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 19662  013C7C  A4D8               	btfss	status,2,c
 19663  013C7E  D00B               	goto	l22044
 19664                           
 19665                           ; BSR set to: 2
 19666  013C80  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19667  013C82  6F03               	movwf	strcpy@to& (0+255),b
 19668  013C84  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19669  013C86  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19670  013C88  0E21               	movlw	low STR_91
 19671  013C8A  6F05               	movwf	strcpy@from& (0+255),b
 19672  013C8C  0EFD               	movlw	high STR_91
 19673  013C8E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19674  013C90  ECF7  F0DD         	call	_strcpy	;wreg free
 19675  013C94  D01D               	goto	l22046
 19676  013C96                     l22044:
 19677                           
 19678                           ; BSR set to: 2
 19679                           ;oled.c: 724: else sprintf(OLED_RAM_Buffer.line1, "%sC", floatToEngineeringFormat(adc_ca
      +                          lculations.output_charge));
 19680  013C96  C2CB  F2A3         	movff	_adc_calculations+12,floatToEngineeringFormat@input_value
 19681  013C9A  C2CC  F2A4         	movff	_adc_calculations+13,floatToEngineeringFormat@input_value+1
 19682  013C9E  C2CD  F2A5         	movff	_adc_calculations+14,floatToEngineeringFormat@input_value+2
 19683  013CA2  C2CE  F2A6         	movff	_adc_calculations+15,floatToEngineeringFormat@input_value+3
 19684  013CA6  ECFB  F0A4         	call	_floatToEngineeringFormat	;wreg free
 19685  013CAA  C2A3  F3F3         	movff	?_floatToEngineeringFormat,_OLED_updateHandler$6024
 19686  013CAE  C2A4  F3F4         	movff	?_floatToEngineeringFormat+1,_OLED_updateHandler$6024+1
 19687                           
 19688                           ;oled.c: 724: else sprintf(OLED_RAM_Buffer.line1, "%sC", floatToEngineeringFormat(adc_ca
      +                          lculations.output_charge));
 19689  013CB2  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19690  013CB4  0102               	movlb	2	; () banked
 19691  013CB6  6F90               	movwf	sprintf@wh& (0+255),b
 19692  013CB8  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19693  013CBA  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19694  013CBC  0EBE               	movlw	low STR_166
 19695  013CBE  6F92               	movwf	sprintf@f& (0+255),b
 19696  013CC0  0EFF               	movlw	high STR_166
 19697  013CC2  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19698  013CC4  C3F3  F294         	movff	_OLED_updateHandler$6024,?_sprintf+4
 19699  013CC8  C3F4  F295         	movff	_OLED_updateHandler$6024+1,?_sprintf+5
 19700  013CCC  EC1B  F0DE         	call	_sprintf	;wreg free
 19701  013CD0                     l22046:
 19702                           
 19703                           ;oled.c: 725: strcpy(OLED_RAM_Buffer.line2, " ");
 19704  013CD0  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19705  013CD2  0102               	movlb	2	; () banked
 19706  013CD4  6F03               	movwf	strcpy@to& (0+255),b
 19707  013CD6  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19708  013CD8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19709  013CDA  0EA9               	movlw	low (STR_54+10)
 19710  013CDC  6F05               	movwf	strcpy@from& (0+255),b
 19711  013CDE  0EFD               	movlw	high (STR_54+10)
 19712  013CE0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19713  013CE2  ECF7  F0DD         	call	_strcpy	;wreg free
 19714                           
 19715                           ;oled.c: 726: strcpy(OLED_RAM_Buffer.line3, " ");
 19716  013CE6  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19717  013CE8  0102               	movlb	2	; () banked
 19718  013CEA  6F03               	movwf	strcpy@to& (0+255),b
 19719  013CEC  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19720  013CEE  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19721  013CF0  0EA9               	movlw	low (STR_54+10)
 19722  013CF2  6F05               	movwf	strcpy@from& (0+255),b
 19723  013CF4  0EFD               	movlw	high (STR_54+10)
 19724  013CF6  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19725  013CF8  ECF7  F0DD         	call	_strcpy	;wreg free
 19726                           
 19727                           ;oled.c: 728: OLED_UpdateFromRAMBuffer();
 19728  013CFC  ECEC  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19729                           
 19730                           ;oled.c: 729: OLED_Frame = OLED_Load_Charge;
 19731  013D00  0E0D               	movlw	13
 19732  013D02  EF4B  F098         	goto	L4
 19733  013D06                     l22056:
 19734                           
 19735                           ; BSR set to: 2
 19736                           ;oled.c: 736: OLED_update_flag = 0;
 19737  013D06  0E00               	movlw	0
 19738  013D08  6FD7               	movwf	_OLED_update_flag& (0+255),b
 19739                           
 19740                           ; BSR set to: 2
 19741                           ;oled.c: 738: strcpy(OLED_RAM_Buffer.line0, "Output Energy:");
 19742  013D0A  0E00               	movlw	low _OLED_RAM_Buffer
 19743  013D0C  6F03               	movwf	strcpy@to& (0+255),b
 19744  013D0E  0E03               	movlw	high _OLED_RAM_Buffer
 19745  013D10  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19746  013D12  0EEE               	movlw	low STR_169
 19747  013D14  6F05               	movwf	strcpy@from& (0+255),b
 19748  013D16  0EFB               	movlw	high STR_169
 19749  013D18  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19750  013D1A  ECF7  F0DD         	call	_strcpy	;wreg free
 19751                           
 19752                           ;oled.c: 739: if (QI_charge_time == 0) strcpy(OLED_RAM_Buffer.line1, "Not Charging");
 19753  013D1E  0102               	movlb	2	; () banked
 19754  013D20  51D3               	movf	_QI_charge_time& (0+255),w,b
 19755  013D22  11D4               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 19756  013D24  11D5               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 19757  013D26  11D6               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 19758  013D28  A4D8               	btfss	status,2,c
 19759  013D2A  D00B               	goto	l22064
 19760                           
 19761                           ; BSR set to: 2
 19762  013D2C  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19763  013D2E  6F03               	movwf	strcpy@to& (0+255),b
 19764  013D30  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19765  013D32  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19766  013D34  0E21               	movlw	low STR_91
 19767  013D36  6F05               	movwf	strcpy@from& (0+255),b
 19768  013D38  0EFD               	movlw	high STR_91
 19769  013D3A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19770  013D3C  ECF7  F0DD         	call	_strcpy	;wreg free
 19771  013D40  D01D               	goto	l22066
 19772  013D42                     l22064:
 19773                           
 19774                           ; BSR set to: 2
 19775                           ;oled.c: 740: else sprintf(OLED_RAM_Buffer.line1, "%sJ", floatToEngineeringFormat(adc_ca
      +                          lculations.output_energy));
 19776  013D42  C2CF  F2A3         	movff	_adc_calculations+16,floatToEngineeringFormat@input_value
 19777  013D46  C2D0  F2A4         	movff	_adc_calculations+17,floatToEngineeringFormat@input_value+1
 19778  013D4A  C2D1  F2A5         	movff	_adc_calculations+18,floatToEngineeringFormat@input_value+2
 19779  013D4E  C2D2  F2A6         	movff	_adc_calculations+19,floatToEngineeringFormat@input_value+3
 19780  013D52  ECFB  F0A4         	call	_floatToEngineeringFormat	;wreg free
 19781  013D56  C2A3  F3F3         	movff	?_floatToEngineeringFormat,_OLED_updateHandler$6024
 19782  013D5A  C2A4  F3F4         	movff	?_floatToEngineeringFormat+1,_OLED_updateHandler$6024+1
 19783                           
 19784                           ;oled.c: 740: else sprintf(OLED_RAM_Buffer.line1, "%sJ", floatToEngineeringFormat(adc_ca
      +                          lculations.output_energy));
 19785  013D5E  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19786  013D60  0102               	movlb	2	; () banked
 19787  013D62  6F90               	movwf	sprintf@wh& (0+255),b
 19788  013D64  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19789  013D66  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19790  013D68  0EC2               	movlw	low STR_171
 19791  013D6A  6F92               	movwf	sprintf@f& (0+255),b
 19792  013D6C  0EFF               	movlw	high STR_171
 19793  013D6E  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19794  013D70  C3F3  F294         	movff	_OLED_updateHandler$6024,?_sprintf+4
 19795  013D74  C3F4  F295         	movff	_OLED_updateHandler$6024+1,?_sprintf+5
 19796  013D78  EC1B  F0DE         	call	_sprintf	;wreg free
 19797  013D7C                     l22066:
 19798                           
 19799                           ;oled.c: 741: strcpy(OLED_RAM_Buffer.line2, " ");
 19800  013D7C  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19801  013D7E  0102               	movlb	2	; () banked
 19802  013D80  6F03               	movwf	strcpy@to& (0+255),b
 19803  013D82  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19804  013D84  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19805  013D86  0EA9               	movlw	low (STR_54+10)
 19806  013D88  6F05               	movwf	strcpy@from& (0+255),b
 19807  013D8A  0EFD               	movlw	high (STR_54+10)
 19808  013D8C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19809  013D8E  ECF7  F0DD         	call	_strcpy	;wreg free
 19810                           
 19811                           ;oled.c: 742: strcpy(OLED_RAM_Buffer.line3, " ");
 19812  013D92  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19813  013D94  0102               	movlb	2	; () banked
 19814  013D96  6F03               	movwf	strcpy@to& (0+255),b
 19815  013D98  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19816  013D9A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19817  013D9C  0EA9               	movlw	low (STR_54+10)
 19818  013D9E  6F05               	movwf	strcpy@from& (0+255),b
 19819  013DA0  0EFD               	movlw	high (STR_54+10)
 19820  013DA2  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19821  013DA4  ECF7  F0DD         	call	_strcpy	;wreg free
 19822                           
 19823                           ;oled.c: 744: OLED_UpdateFromRAMBuffer();
 19824  013DA8  ECEC  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19825                           
 19826                           ;oled.c: 745: OLED_Frame = OLED_Load_Energy;
 19827  013DAC  0E0E               	movlw	14
 19828  013DAE  EF4B  F098         	goto	L4
 19829  013DB2                     l22076:
 19830                           
 19831                           ; BSR set to: 2
 19832                           ;oled.c: 752: OLED_update_flag = 0;
 19833  013DB2  0E00               	movlw	0
 19834  013DB4  6FD7               	movwf	_OLED_update_flag& (0+255),b
 19835                           
 19836                           ; BSR set to: 2
 19837                           ;oled.c: 754: strcpy(OLED_RAM_Buffer.line0, "Cause of Reset:");
 19838  013DB6  0E00               	movlw	low _OLED_RAM_Buffer
 19839  013DB8  6F03               	movwf	strcpy@to& (0+255),b
 19840  013DBA  0E03               	movlw	high _OLED_RAM_Buffer
 19841  013DBC  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19842  013DBE  0E71               	movlw	low STR_62
 19843  013DC0  6F05               	movwf	strcpy@from& (0+255),b
 19844  013DC2  0EFB               	movlw	high STR_62
 19845  013DC4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19846  013DC6  ECF7  F0DD         	call	_strcpy	;wreg free
 19847                           
 19848                           ;oled.c: 755: strcpy(OLED_RAM_Buffer.line1, " ");
 19849  013DCA  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19850  013DCC  0102               	movlb	2	; () banked
 19851  013DCE  6F03               	movwf	strcpy@to& (0+255),b
 19852  013DD0  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19853  013DD2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19854  013DD4  0EA9               	movlw	low (STR_54+10)
 19855  013DD6  6F05               	movwf	strcpy@from& (0+255),b
 19856  013DD8  0EFD               	movlw	high (STR_54+10)
 19857  013DDA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19858  013DDC  ECF7  F0DD         	call	_strcpy	;wreg free
 19859                           
 19860                           ;oled.c: 756: strcpy(OLED_RAM_Buffer.line2, getCauseOfResetStringSmall(reset_cause));
 19861  013DE0  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19862  013DE2  0102               	movlb	2	; () banked
 19863  013DE4  6F03               	movwf	strcpy@to& (0+255),b
 19864  013DE6  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19865  013DE8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19866  013DEA  51FF               	movf	_reset_cause& (0+255),w,b
 19867  013DEC  ECB3  F0E1         	call	_getCauseOfResetStringSmall
 19868  013DF0  C200  F205         	movff	?_getCauseOfResetStringSmall,strcpy@from
 19869  013DF4  C201  F206         	movff	?_getCauseOfResetStringSmall+1,strcpy@from+1
 19870  013DF8  ECF7  F0DD         	call	_strcpy	;wreg free
 19871                           
 19872                           ;oled.c: 757: strcpy(OLED_RAM_Buffer.line3, " ");
 19873  013DFC  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19874  013DFE  0102               	movlb	2	; () banked
 19875  013E00  6F03               	movwf	strcpy@to& (0+255),b
 19876  013E02  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19877  013E04  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19878  013E06  0EA9               	movlw	low (STR_54+10)
 19879  013E08  6F05               	movwf	strcpy@from& (0+255),b
 19880  013E0A  0EFD               	movlw	high (STR_54+10)
 19881  013E0C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19882  013E0E  ECF7  F0DD         	call	_strcpy	;wreg free
 19883                           
 19884                           ;oled.c: 759: OLED_UpdateFromRAMBuffer();
 19885  013E12  ECEC  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19886                           
 19887                           ;oled.c: 760: OLED_Frame = OLED_Cause_Of_Reset;
 19888  013E16  0E16               	movlw	22
 19889  013E18                     L5:
 19890  013E18  0102               	movlb	2	; () banked
 19891  013E1A  6FD8               	movwf	_OLED_Frame& (0+255),b
 19892                           
 19893                           ; BSR set to: 2
 19894                           ;oled.c: 761: OLED_update_time = 255;
 19895  013E1C  0100               	movlb	0	; () banked
 19896  013E1E  69FD               	setf	_OLED_update_time& (0+255),b
 19897                           
 19898                           ;oled.c: 763: break;
 19899  013E20  0012               	return	
 19900  013E22                     l22092:
 19901                           
 19902                           ; BSR set to: 2
 19903                           ;oled.c: 767: OLED_update_flag = 0;
 19904  013E22  0E00               	movlw	0
 19905  013E24  6FD7               	movwf	_OLED_update_flag& (0+255),b
 19906                           
 19907                           ; BSR set to: 2
 19908                           ;oled.c: 771: strcpy(OLED_RAM_Buffer.line0, "Device ID:");
 19909  013E26  0E00               	movlw	low _OLED_RAM_Buffer
 19910  013E28  6F03               	movwf	strcpy@to& (0+255),b
 19911  013E2A  0E03               	movlw	high _OLED_RAM_Buffer
 19912  013E2C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19913  013E2E  0EE5               	movlw	low STR_63
 19914  013E30  6F05               	movwf	strcpy@from& (0+255),b
 19915  013E32  0EFD               	movlw	high STR_63
 19916  013E34  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19917  013E36  ECF7  F0DD         	call	_strcpy	;wreg free
 19918                           
 19919                           ;oled.c: 772: char dev_id_str[17];;oled.c: 773: sprintf(dev_id_str,"0x%X",getDeviceID())
      +                          ;
 19920  013E3A  0ED1               	movlw	low OLED_updateHandler@dev_id_str
 19921  013E3C  0102               	movlb	2	; () banked
 19922  013E3E  6F90               	movwf	sprintf@wh& (0+255),b
 19923  013E40  0E03               	movlw	high OLED_updateHandler@dev_id_str
 19924  013E42  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19925  013E44  0E9E               	movlw	low STR_64
 19926  013E46  6F92               	movwf	sprintf@f& (0+255),b
 19927  013E48  0EFF               	movlw	high STR_64
 19928  013E4A  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19929  013E4C  EC75  F0E3         	call	_getDeviceID	;wreg free
 19930  013E50  C20B  F294         	movff	?_getDeviceID,?_sprintf+4
 19931  013E54  C20C  F295         	movff	?_getDeviceID+1,?_sprintf+5
 19932  013E58  EC1B  F0DE         	call	_sprintf	;wreg free
 19933                           
 19934                           ;oled.c: 774: strcpy(OLED_RAM_Buffer.line1, dev_id_str);
 19935  013E5C  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19936  013E5E  0102               	movlb	2	; () banked
 19937  013E60  6F03               	movwf	strcpy@to& (0+255),b
 19938  013E62  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19939  013E64  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19940  013E66  0ED1               	movlw	low OLED_updateHandler@dev_id_str
 19941  013E68  6F05               	movwf	strcpy@from& (0+255),b
 19942  013E6A  0E03               	movlw	high OLED_updateHandler@dev_id_str
 19943  013E6C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19944  013E6E  ECF7  F0DD         	call	_strcpy	;wreg free
 19945                           
 19946                           ;oled.c: 777: strcpy(OLED_RAM_Buffer.line2, "Revision ID:");
 19947  013E72  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19948  013E74  0102               	movlb	2	; () banked
 19949  013E76  6F03               	movwf	strcpy@to& (0+255),b
 19950  013E78  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19951  013E7A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19952  013E7C  0EE0               	movlw	low STR_65
 19953  013E7E  6F05               	movwf	strcpy@from& (0+255),b
 19954  013E80  0EFC               	movlw	high STR_65
 19955  013E82  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19956  013E84  ECF7  F0DD         	call	_strcpy	;wreg free
 19957                           
 19958                           ;oled.c: 778: char rev_id_str[17];;oled.c: 779: sprintf(rev_id_str, "%c%03d", (char) get
      +                          MajorRevisionID() + 65, getMinorRevisionID());
 19959  013E88  0EE2               	movlw	low OLED_updateHandler@rev_id_str
 19960  013E8A  0102               	movlb	2	; () banked
 19961  013E8C  6F90               	movwf	sprintf@wh& (0+255),b
 19962  013E8E  0E03               	movlw	high OLED_updateHandler@rev_id_str
 19963  013E90  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19964  013E92  0E70               	movlw	low STR_66
 19965  013E94  6F92               	movwf	sprintf@f& (0+255),b
 19966  013E96  0EFF               	movlw	high STR_66
 19967  013E98  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19968  013E9A  EC72  F0E0         	call	_getMajorRevisionID	;wreg free
 19969  013E9E  0102               	movlb	2	; () banked
 19970  013EA0  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19971  013EA2  0E41               	movlw	65
 19972  013EA4  25B9               	addwf	??_OLED_updateHandler& (0+255),w,b
 19973  013EA6  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19974  013EA8  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19975  013EAA  0E00               	movlw	0
 19976  013EAC  2395               	addwfc	(?_sprintf+5)& (0+255),f,b
 19977  013EAE  ECC9  F0E2         	call	_getMinorRevisionID	;wreg free
 19978  013EB2  0102               	movlb	2	; () banked
 19979  013EB4  6FBA               	movwf	(??_OLED_updateHandler+1)& (0+255),b
 19980  013EB6  51BA               	movf	(??_OLED_updateHandler+1)& (0+255),w,b
 19981  013EB8  6F96               	movwf	(?_sprintf+6)& (0+255),b
 19982  013EBA  6B97               	clrf	(?_sprintf+7)& (0+255),b
 19983  013EBC  EC1B  F0DE         	call	_sprintf	;wreg free
 19984                           
 19985                           ;oled.c: 780: strcpy(OLED_RAM_Buffer.line3, rev_id_str);
 19986  013EC0  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19987  013EC2  0102               	movlb	2	; () banked
 19988  013EC4  6F03               	movwf	strcpy@to& (0+255),b
 19989  013EC6  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19990  013EC8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19991  013ECA  0EE2               	movlw	low OLED_updateHandler@rev_id_str
 19992  013ECC  6F05               	movwf	strcpy@from& (0+255),b
 19993  013ECE  0E03               	movlw	high OLED_updateHandler@rev_id_str
 19994  013ED0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19995  013ED2  ECF7  F0DD         	call	_strcpy	;wreg free
 19996                           
 19997                           ;oled.c: 782: OLED_UpdateFromRAMBuffer();
 19998  013ED6  ECEC  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19999                           
 20000                           ;oled.c: 783: OLED_Frame = OLED_Dev_Rev_ID;
 20001  013EDA  0E17               	movlw	23
 20002  013EDC  D79D               	goto	L5
 20003  013EDE                     l22112:
 20004                           
 20005                           ; BSR set to: 2
 20006                           ;oled.c: 790: OLED_update_flag = 0;
 20007  013EDE  0E00               	movlw	0
 20008  013EE0  6FD7               	movwf	_OLED_update_flag& (0+255),b
 20009                           
 20010                           ; BSR set to: 2
 20011                           ;oled.c: 792: strcpy(OLED_RAM_Buffer.line0, "COM Port Setup:");
 20012  013EE2  0E00               	movlw	low _OLED_RAM_Buffer
 20013  013EE4  6F03               	movwf	strcpy@to& (0+255),b
 20014  013EE6  0E03               	movlw	high _OLED_RAM_Buffer
 20015  013EE8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20016  013EEA  0E61               	movlw	low STR_67
 20017  013EEC  6F05               	movwf	strcpy@from& (0+255),b
 20018  013EEE  0EFB               	movlw	high STR_67
 20019  013EF0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20020  013EF2  ECF7  F0DD         	call	_strcpy	;wreg free
 20021                           
 20022                           ;oled.c: 793: strcpy(OLED_RAM_Buffer.line1, "115.2 kbs");
 20023  013EF6  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 20024  013EF8  0102               	movlb	2	; () banked
 20025  013EFA  6F03               	movwf	strcpy@to& (0+255),b
 20026  013EFC  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 20027  013EFE  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20028  013F00  0E73               	movlw	low STR_68
 20029  013F02  6F05               	movwf	strcpy@from& (0+255),b
 20030  013F04  0EFE               	movlw	high STR_68
 20031  013F06  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20032  013F08  ECF7  F0DD         	call	_strcpy	;wreg free
 20033                           
 20034                           ;oled.c: 794: strcpy(OLED_RAM_Buffer.line2, "8bit, no parity");
 20035  013F0C  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 20036  013F0E  0102               	movlb	2	; () banked
 20037  013F10  6F03               	movwf	strcpy@to& (0+255),b
 20038  013F12  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 20039  013F14  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20040  013F16  0E91               	movlw	low STR_69
 20041  013F18  6F05               	movwf	strcpy@from& (0+255),b
 20042  013F1A  0EFB               	movlw	high STR_69
 20043  013F1C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20044  013F1E  ECF7  F0DD         	call	_strcpy	;wreg free
 20045                           
 20046                           ;oled.c: 795: strcpy(OLED_RAM_Buffer.line3, "1 stp, no flow");
 20047  013F22  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 20048  013F24  0102               	movlb	2	; () banked
 20049  013F26  6F03               	movwf	strcpy@to& (0+255),b
 20050  013F28  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 20051  013F2A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20052  013F2C  0EFD               	movlw	low STR_70
 20053  013F2E  6F05               	movwf	strcpy@from& (0+255),b
 20054  013F30  0EFB               	movlw	high STR_70
 20055  013F32  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20056  013F34  ECF7  F0DD         	call	_strcpy	;wreg free
 20057                           
 20058                           ;oled.c: 797: OLED_UpdateFromRAMBuffer();
 20059  013F38  ECEC  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 20060                           
 20061                           ;oled.c: 798: OLED_Frame = OLED_COM_PORT_SET;
 20062  013F3C  0E18               	movlw	24
 20063  013F3E  D76C               	goto	L5
 20064  013F40                     l22128:
 20065                           
 20066                           ; BSR set to: 2
 20067                           ;oled.c: 805: OLED_update_flag = 0;
 20068  013F40  0E00               	movlw	0
 20069  013F42  6FD7               	movwf	_OLED_update_flag& (0+255),b
 20070                           
 20071                           ; BSR set to: 2
 20072                           ;oled.c: 807: strcpy(OLED_RAM_Buffer.line0, "QI Charger w/");
 20073  013F44  0E00               	movlw	low _OLED_RAM_Buffer
 20074  013F46  6F03               	movwf	strcpy@to& (0+255),b
 20075  013F48  0E03               	movlw	high _OLED_RAM_Buffer
 20076  013F4A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20077  013F4C  0E46               	movlw	low STR_60
 20078  013F4E  6F05               	movwf	strcpy@from& (0+255),b
 20079  013F50  0EFC               	movlw	high STR_60
 20080  013F52  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20081  013F54  ECF7  F0DD         	call	_strcpy	;wreg free
 20082                           
 20083                           ;oled.c: 808: strcpy(OLED_RAM_Buffer.line1, "Digital Monitor");
 20084  013F58  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 20085  013F5A  0102               	movlb	2	; () banked
 20086  013F5C  6F03               	movwf	strcpy@to& (0+255),b
 20087  013F5E  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 20088  013F60  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20089  013F62  0E81               	movlw	low STR_61
 20090  013F64  6F05               	movwf	strcpy@from& (0+255),b
 20091  013F66  0EFB               	movlw	high STR_61
 20092  013F68  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20093  013F6A  ECF7  F0DD         	call	_strcpy	;wreg free
 20094                           
 20095                           ;oled.c: 809: strcpy(OLED_RAM_Buffer.line2, "Drew Maatman");
 20096  013F6E  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 20097  013F70  0102               	movlb	2	; () banked
 20098  013F72  6F03               	movwf	strcpy@to& (0+255),b
 20099  013F74  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 20100  013F76  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20101  013F78  0E2E               	movlw	low STR_187
 20102  013F7A  6F05               	movwf	strcpy@from& (0+255),b
 20103  013F7C  0EFD               	movlw	high STR_187
 20104  013F7E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20105  013F80  ECF7  F0DD         	call	_strcpy	;wreg free
 20106                           
 20107                           ;oled.c: 810: strcpy(OLED_RAM_Buffer.line3, "Spring 2019");
 20108  013F84  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 20109  013F86  0102               	movlb	2	; () banked
 20110  013F88  6F03               	movwf	strcpy@to& (0+255),b
 20111  013F8A  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 20112  013F8C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20113  013F8E  0E6F               	movlw	low STR_188
 20114  013F90  6F05               	movwf	strcpy@from& (0+255),b
 20115  013F92  0EFD               	movlw	high STR_188
 20116  013F94  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20117  013F96  ECF7  F0DD         	call	_strcpy	;wreg free
 20118                           
 20119                           ;oled.c: 812: OLED_UpdateFromRAMBuffer();
 20120  013F9A  ECEC  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 20121                           
 20122                           ;oled.c: 813: OLED_Frame = OLED_TITLE_FRAME;
 20123  013F9E  0E19               	movlw	25
 20124  013FA0  D73B               	goto	L5
 20125  013FA2                     l22144:
 20126                           
 20127                           ; BSR set to: 2
 20128                           ;oled.c: 820: OLED_update_flag = 0;
 20129  013FA2  0E00               	movlw	0
 20130  013FA4  6FD7               	movwf	_OLED_update_flag& (0+255),b
 20131                           
 20132                           ;oled.c: 822: break;
 20133  013FA6  0012               	return	
 20134  013FA8                     l22146:
 20135                           
 20136                           ; BSR set to: 2
 20137                           ;oled.c: 826: OLED_update_flag = 0;
 20138  013FA8  0E00               	movlw	0
 20139  013FAA  6FD7               	movwf	_OLED_update_flag& (0+255),b
 20140                           
 20141                           ;oled.c: 828: error_handler.I2C_OLED_error_flag = 1;
 20142  013FAC  0E01               	movlw	1
 20143  013FAE  0100               	movlb	0	; () banked
 20144  013FB0  6FBC               	movwf	(_error_handler+3)& (0+255),b
 20145                           
 20146                           ;oled.c: 829: break;
 20147  013FB2  0012               	return	
 20148  013FB4                     l22150:
 20149  013FB4  0102               	movlb	2	; () banked
 20150  013FB6  51D8               	movf	_OLED_Frame& (0+255),w,b
 20151                           
 20152                           ; Switch size 1, requested type "simple"
 20153                           ; Number of cases is 27, Range of values is 0 to 26
 20154                           ; switch strategies available:
 20155                           ; Name         Instructions Cycles
 20156                           ; simple_byte           82    42 (average)
 20157                           ;	Chosen strategy is simple_byte
 20158  013FB8  0A00               	xorlw	0	; case 0
 20159  013FBA  B4D8               	btfsc	status,2,c
 20160  013FBC  EF20  F097         	goto	l21660
 20161  013FC0  0A01               	xorlw	1	; case 1
 20162  013FC2  B4D8               	btfsc	status,2,c
 20163  013FC4  EF59  F097         	goto	l21676
 20164  013FC8  0A03               	xorlw	3	; case 2
 20165  013FCA  B4D8               	btfsc	status,2,c
 20166  013FCC  EFB7  F097         	goto	l21696
 20167  013FD0  0A01               	xorlw	1	; case 3
 20168  013FD2  B4D8               	btfsc	status,2,c
 20169  013FD4  EFE8  F097         	goto	l21712
 20170  013FD8  0A07               	xorlw	7	; case 4
 20171  013FDA  B4D8               	btfsc	status,2,c
 20172  013FDC  EF19  F098         	goto	l21728
 20173  013FE0  0A01               	xorlw	1	; case 5
 20174  013FE2  B4D8               	btfsc	status,2,c
 20175  013FE4  EF51  F098         	goto	l21744
 20176  013FE8  0A03               	xorlw	3	; case 6
 20177  013FEA  B4D8               	btfsc	status,2,c
 20178  013FEC  EF8A  F098         	goto	l21760
 20179  013FF0  0A01               	xorlw	1	; case 7
 20180  013FF2  B4D8               	btfsc	status,2,c
 20181  013FF4  EFC3  F098         	goto	l21776
 20182  013FF8  0A0F               	xorlw	15	; case 8
 20183  013FFA  B4D8               	btfsc	status,2,c
 20184  013FFC  EFFC  F098         	goto	l21792
 20185  014000  0A01               	xorlw	1	; case 9
 20186  014002  B4D8               	btfsc	status,2,c
 20187  014004  EF46  F099         	goto	l21812
 20188  014008  0A03               	xorlw	3	; case 10
 20189  01400A  B4D8               	btfsc	status,2,c
 20190  01400C  EF7F  F099         	goto	l21828
 20191  014010  0A01               	xorlw	1	; case 11
 20192  014012  B4D8               	btfsc	status,2,c
 20193  014014  EFC9  F099         	goto	l21848
 20194  014018  0A07               	xorlw	7	; case 12
 20195  01401A  B4D8               	btfsc	status,2,c
 20196  01401C  D518               	goto	l22006
 20197  01401E  0A01               	xorlw	1	; case 13
 20198  014020  B4D8               	btfsc	status,2,c
 20199  014022  D61B               	goto	l22036
 20200  014024  0A03               	xorlw	3	; case 14
 20201  014026  B4D8               	btfsc	status,2,c
 20202  014028  D66E               	goto	l22056
 20203  01402A  0A01               	xorlw	1	; case 15
 20204  01402C  B4D8               	btfsc	status,2,c
 20205  01402E  EF13  F09A         	goto	l21868
 20206  014032  0A1F               	xorlw	31	; case 16
 20207  014034  B4D8               	btfsc	status,2,c
 20208  014036  EF4C  F09A         	goto	l21884
 20209  01403A  0A01               	xorlw	1	; case 17
 20210  01403C  B4D8               	btfsc	status,2,c
 20211  01403E  EF85  F09A         	goto	l21900
 20212  014042  0A03               	xorlw	3	; case 18
 20213  014044  B4D8               	btfsc	status,2,c
 20214  014046  EFBE  F09A         	goto	l21916
 20215  01404A  0A01               	xorlw	1	; case 19
 20216  01404C  B4D8               	btfsc	status,2,c
 20217  01404E  EFF7  F09A         	goto	l21932
 20218  014052  0A07               	xorlw	7	; case 20
 20219  014054  B4D8               	btfsc	status,2,c
 20220  014056  EF3C  F09B         	goto	l21950
 20221  01405A  0A01               	xorlw	1	; case 21
 20222  01405C  B4D8               	btfsc	status,2,c
 20223  01405E  EF93  F09B         	goto	l21972
 20224  014062  0A03               	xorlw	3	; case 22
 20225  014064  B4D8               	btfsc	status,2,c
 20226  014066  D6A5               	goto	l22076
 20227  014068  0A01               	xorlw	1	; case 23
 20228  01406A  B4D8               	btfsc	status,2,c
 20229  01406C  D6DA               	goto	l22092
 20230  01406E  0A0F               	xorlw	15	; case 24
 20231  014070  B4D8               	btfsc	status,2,c
 20232  014072  D735               	goto	l22112
 20233  014074  0A01               	xorlw	1	; case 25
 20234  014076  B4D8               	btfsc	status,2,c
 20235  014078  D763               	goto	l22128
 20236  01407A  0A03               	xorlw	3	; case 26
 20237  01407C  B4D8               	btfsc	status,2,c
 20238  01407E  D791               	goto	l22144
 20239  014080  D793               	goto	l22146
 20240  014082                     __end_of_OLED_updateHandler:
 20241                           	opt callstack 0
 20242                           
 20243 ;; *************** function _strcpy *****************
 20244 ;; Defined at:
 20245 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcpy.c"
 20246 ;; Parameters:    Size  Location     Type
 20247 ;;  to              2    3[BANK2 ] PTR unsigned char 
 20248 ;;		 -> OLED_RAM_Buffer(68), 
 20249 ;;  from            2    5[BANK2 ] PTR const unsigned char 
 20250 ;;		 -> STR_188(12), STR_187(13), STR_186(16), STR_185(14), 
 20251 ;;		 -> STR_184(15), STR_183(16), STR_182(10), STR_181(16), 
 20252 ;;		 -> STR_179(13), STR_177(11), STR_176(2), STR_175(2), 
 20253 ;;		 -> STR_174(16), STR_173(2), STR_172(2), STR_170(13), 
 20254 ;;		 -> STR_169(15), STR_168(2), STR_167(2), STR_165(13), 
 20255 ;;		 -> STR_164(15), STR_163(2), STR_162(2), STR_160(2), 
 20256 ;;		 -> STR_159(2), STR_158(13), STR_157(2), STR_151(13), 
 20257 ;;		 -> STR_150(2), STR_149(2), STR_147(2), STR_135(14), 
 20258 ;;		 -> STR_134(2), STR_133(2), STR_131(11), STR_130(13), 
 20259 ;;		 -> STR_129(2), STR_128(2), STR_127(9), STR_126(11), 
 20260 ;;		 -> STR_125(14), STR_124(2), STR_123(2), STR_121(12), 
 20261 ;;		 -> STR_120(2), STR_119(2), STR_117(14), STR_116(2), 
 20262 ;;		 -> STR_115(2), STR_113(10), STR_112(2), STR_111(2), 
 20263 ;;		 -> STR_109(9), STR_108(2), STR_107(2), STR_105(13), 
 20264 ;;		 -> STR_104(12), STR_103(2), STR_102(2), STR_100(13), 
 20265 ;;		 -> STR_99(14), STR_98(2), STR_97(2), STR_95(13), 
 20266 ;;		 -> STR_94(2), STR_93(2), STR_91(13), STR_90(12), 
 20267 ;;		 -> STR_89(2), STR_88(2), STR_86(14), STR_85(2), 
 20268 ;;		 -> STR_84(2), STR_82(13), STR_81(2), STR_80(2), 
 20269 ;;		 -> STR_78(14), STR_77(2), STR_76(2), STR_75(15), 
 20270 ;;		 -> STR_74(16), STR_73(14), STR_72(11), STR_71(14), 
 20271 ;;		 -> STR_70(15), STR_69(16), STR_68(10), STR_67(16), 
 20272 ;;		 -> OLED_updateHandler@rev_id_str(17), STR_65(13), OLED_updateHandler@dev_id_str(17), STR_63(11), 
 20273 ;;		 -> STR_62(16), STR_61(16), STR_60(14), STR_40(10), 
 20274 ;;		 -> STR_39(11), STR_38(11), STR_37(15), STR_36(11), 
 20275 ;;		 -> STR_35(10), STR_34(11), STR_33(10), STR_32(10), 
 20276 ;;		 -> STR_31(10), STR_20(10), STR_19(6), STR_18(14), 
 20277 ;;		 -> STR_17(9), STR_16(5), 
 20278 ;; Auto vars:     Size  Location     Type
 20279 ;;  cp              2    7[BANK2 ] PTR unsigned char 
 20280 ;;		 -> OLED_RAM_Buffer(68), 
 20281 ;; Return value:  Size  Location     Type
 20282 ;;                  2    3[BANK2 ] PTR unsigned char 
 20283 ;; Registers used:
 20284 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20285 ;; Tracked objects:
 20286 ;;		On entry : 0/0
 20287 ;;		On exit  : 0/0
 20288 ;;		Unchanged: 0/0
 20289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20290 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20291 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20293 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20294 ;;Total ram usage:        6 bytes
 20295 ;; Hardware stack levels used:    1
 20296 ;; Hardware stack levels required when called:   11
 20297 ;; This function calls:
 20298 ;;		Nothing
 20299 ;; This function is called by:
 20300 ;;		_OLED_updateHandler
 20301 ;; This function uses a non-reentrant model
 20302 ;;
 20303                           
 20304                           	psect	text64
 20305  01BBEE                     __ptext64:
 20306                           	opt callstack 0
 20307  01BBEE                     _strcpy:
 20308                           	opt callstack 18
 20309                           
 20310                           ;incstack = 0
 20311  01BBEE  C203  F207         	movff	strcpy@to,strcpy@cp
 20312  01BBF2  C204  F208         	movff	strcpy@to+1,strcpy@cp+1
 20313  01BBF6  D005               	goto	l21256
 20314  01BBF8                     l21254:
 20315  01BBF8  0102               	movlb	2	; () banked
 20316  01BBFA  4B07               	infsnz	strcpy@cp& (0+255),f,b
 20317  01BBFC  2B08               	incf	(strcpy@cp+1)& (0+255),f,b
 20318  01BBFE  4B05               	infsnz	strcpy@from& (0+255),f,b
 20319  01BC00  2B06               	incf	(strcpy@from+1)& (0+255),f,b
 20320  01BC02                     l21256:
 20321  01BC02  C205  FFF6         	movff	strcpy@from,tblptrl
 20322  01BC06  C206  FFF7         	movff	strcpy@from+1,tblptrh
 20323  01BC0A  0E00               	movlw	low (__mediumconst shr (0+16))
 20324  01BC0C  6EF8               	movwf	tblptru,c
 20325  01BC0E  C207  FFD9         	movff	strcpy@cp,fsr2l
 20326  01BC12  C208  FFDA         	movff	strcpy@cp+1,fsr2h
 20327  01BC16  0E0E               	movlw	(high __ramtop+-1)
 20328  01BC18  64F7               	cpfsgt	tblptrh,c
 20329  01BC1A  D003               	bra	u27277
 20330  01BC1C  0008               	tblrd		*
 20331  01BC1E  50F5               	movf	tablat,w,c
 20332  01BC20  D005               	bra	u27270
 20333  01BC22                     u27277:
 20334  01BC22  CFF6 FFE9          	movff	tblptrl,fsr0l
 20335  01BC26  CFF7 FFEA          	movff	tblptrh,fsr0h
 20336  01BC2A  50EF               	movf	indf0,w,c
 20337  01BC2C                     u27270:
 20338  01BC2C  6EDF               	movwf	indf2,c
 20339  01BC2E  50DF               	movf	indf2,w,c
 20340  01BC30  B4D8               	btfsc	status,2,c
 20341  01BC32  0012               	return	
 20342  01BC34  D7E1               	goto	l21254
 20343  01BC36                     __end_of_strcpy:
 20344                           	opt callstack 0
 20345                           
 20346 ;; *************** function _getYearsFromOnTime *****************
 20347 ;; Defined at:
 20348 ;;		line 175 in file "heartbeat_timer.c"
 20349 ;; Parameters:    Size  Location     Type
 20350 ;;  input_second    4   13[BANK2 ] unsigned long 
 20351 ;; Auto vars:     Size  Location     Type
 20352 ;;  years           1   17[BANK2 ] unsigned char 
 20353 ;; Return value:  Size  Location     Type
 20354 ;;                  1    wreg      unsigned char 
 20355 ;; Registers used:
 20356 ;;		wreg, status,2, status,0, cstack
 20357 ;; Tracked objects:
 20358 ;;		On entry : 0/0
 20359 ;;		On exit  : 0/0
 20360 ;;		Unchanged: 0/0
 20361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20362 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20363 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20365 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20366 ;;Total ram usage:        5 bytes
 20367 ;; Hardware stack levels used:    1
 20368 ;; Hardware stack levels required when called:   12
 20369 ;; This function calls:
 20370 ;;		___lldiv
 20371 ;; This function is called by:
 20372 ;;		_OLED_updateHandler
 20373 ;; This function uses a non-reentrant model
 20374 ;;
 20375                           
 20376                           	psect	text65
 20377  01C336                     __ptext65:
 20378                           	opt callstack 0
 20379  01C336                     _getYearsFromOnTime:
 20380                           	opt callstack 17
 20381                           
 20382                           ;heartbeat_timer.c: 177: uint8_t years;;heartbeat_timer.c: 178: return years = input_sec
      +                          onds / (60 * 60 * 24 * 365);
 20383                           
 20384                           ;incstack = 0
 20385  01C336  C20D  F200         	movff	getYearsFromOnTime@input_seconds,___lldiv@dividend
 20386  01C33A  C20E  F201         	movff	getYearsFromOnTime@input_seconds+1,___lldiv@dividend+1
 20387  01C33E  C20F  F202         	movff	getYearsFromOnTime@input_seconds+2,___lldiv@dividend+2
 20388  01C342  C210  F203         	movff	getYearsFromOnTime@input_seconds+3,___lldiv@dividend+3
 20389  01C346  0E80               	movlw	128
 20390  01C348  0102               	movlb	2	; () banked
 20391  01C34A  6F04               	movwf	___lldiv@divisor& (0+255),b
 20392  01C34C  0E33               	movlw	51
 20393  01C34E  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 20394  01C350  0E00               	movlw	0
 20395  01C352  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 20396  01C354  0E00               	movlw	0
 20397  01C356  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 20398  01C358  EC69  F0D9         	call	___lldiv	;wreg free
 20399  01C35C  0102               	movlb	2	; () banked
 20400  01C35E  5100               	movf	?___lldiv& (0+255),w,b
 20401  01C360  6F11               	movwf	getYearsFromOnTime@years& (0+255),b
 20402  01C362  5111               	movf	getYearsFromOnTime@years& (0+255),w,b
 20403                           
 20404                           ; BSR set to: 2
 20405  01C364  0012               	return		;funcret
 20406  01C366                     __end_of_getYearsFromOnTime:
 20407                           	opt callstack 0
 20408                           
 20409 ;; *************** function _getSecondsFromOnTime *****************
 20410 ;; Defined at:
 20411 ;;		line 219 in file "heartbeat_timer.c"
 20412 ;; Parameters:    Size  Location     Type
 20413 ;;  input_second    4   13[BANK2 ] unsigned long 
 20414 ;; Auto vars:     Size  Location     Type
 20415 ;;  minutes         1   25[BANK2 ] unsigned char 
 20416 ;;  hours           1   24[BANK2 ] unsigned char 
 20417 ;;  days            1   23[BANK2 ] unsigned char 
 20418 ;;  years           1   22[BANK2 ] unsigned char 
 20419 ;;  seconds         1   21[BANK2 ] unsigned char 
 20420 ;; Return value:  Size  Location     Type
 20421 ;;                  1    wreg      unsigned char 
 20422 ;; Registers used:
 20423 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 20424 ;; Tracked objects:
 20425 ;;		On entry : 0/0
 20426 ;;		On exit  : 0/0
 20427 ;;		Unchanged: 0/0
 20428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20429 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20430 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20431 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20432 ;;      Totals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20433 ;;Total ram usage:       13 bytes
 20434 ;; Hardware stack levels used:    1
 20435 ;; Hardware stack levels required when called:   12
 20436 ;; This function calls:
 20437 ;;		___lldiv
 20438 ;;		___wmul
 20439 ;; This function is called by:
 20440 ;;		_OLED_updateHandler
 20441 ;; This function uses a non-reentrant model
 20442 ;;
 20443                           
 20444                           	psect	text66
 20445  0197F6                     __ptext66:
 20446                           	opt callstack 0
 20447  0197F6                     _getSecondsFromOnTime:
 20448                           	opt callstack 17
 20449                           
 20450                           ;heartbeat_timer.c: 221: uint8_t years, days, hours, minutes, seconds;;heartbeat_timer.c
      +                          : 222: years = input_seconds / (60 * 60 * 24 * 365);
 20451                           
 20452                           ; BSR set to: 2
 20453                           ;incstack = 0
 20454  0197F6  C20D  F200         	movff	getSecondsFromOnTime@input_seconds,___lldiv@dividend
 20455  0197FA  C20E  F201         	movff	getSecondsFromOnTime@input_seconds+1,___lldiv@dividend+1
 20456  0197FE  C20F  F202         	movff	getSecondsFromOnTime@input_seconds+2,___lldiv@dividend+2
 20457  019802  C210  F203         	movff	getSecondsFromOnTime@input_seconds+3,___lldiv@dividend+3
 20458  019806  0E80               	movlw	128
 20459  019808  0102               	movlb	2	; () banked
 20460  01980A  6F04               	movwf	___lldiv@divisor& (0+255),b
 20461  01980C  0E33               	movlw	51
 20462  01980E  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 20463  019810  0E00               	movlw	0
 20464  019812  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 20465  019814  0E00               	movlw	0
 20466  019816  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 20467  019818  EC69  F0D9         	call	___lldiv	;wreg free
 20468  01981C  0102               	movlb	2	; () banked
 20469  01981E  5100               	movf	?___lldiv& (0+255),w,b
 20470  019820  6F16               	movwf	getSecondsFromOnTime@years& (0+255),b
 20471                           
 20472                           ; BSR set to: 2
 20473                           ;heartbeat_timer.c: 223: input_seconds -= years * (60 * 60 * 24 * 365);
 20474  019822  C216  F200         	movff	getSecondsFromOnTime@years,___wmul@multiplier
 20475  019826  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 20476  019828  0E33               	movlw	51
 20477  01982A  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20478  01982C  0E80               	movlw	128
 20479  01982E  6F02               	movwf	___wmul@multiplicand& (0+255),b
 20480  019830  EC79  F0E2         	call	___wmul	;wreg free
 20481  019834  0102               	movlb	2	; () banked
 20482  019836  C200  F211         	movff	?___wmul,??_getSecondsFromOnTime
 20483  01983A  C201  F212         	movff	?___wmul+1,??_getSecondsFromOnTime+1
 20484  01983E  0E00               	movlw	0
 20485  019840  BF12               	btfsc	(??_getSecondsFromOnTime+1)& (0+255),7,b
 20486  019842  0EFF               	movlw	255
 20487  019844  6F13               	movwf	(??_getSecondsFromOnTime+2)& (0+255),b
 20488  019846  6F14               	movwf	(??_getSecondsFromOnTime+3)& (0+255),b
 20489  019848  5111               	movf	??_getSecondsFromOnTime& (0+255),w,b
 20490  01984A  5F0D               	subwf	getSecondsFromOnTime@input_seconds& (0+255),f,b
 20491  01984C  5112               	movf	(??_getSecondsFromOnTime+1)& (0+255),w,b
 20492  01984E  5B0E               	subwfb	(getSecondsFromOnTime@input_seconds+1)& (0+255),f,b
 20493  019850  5113               	movf	(??_getSecondsFromOnTime+2)& (0+255),w,b
 20494  019852  5B0F               	subwfb	(getSecondsFromOnTime@input_seconds+2)& (0+255),f,b
 20495  019854  5114               	movf	(??_getSecondsFromOnTime+3)& (0+255),w,b
 20496  019856  5B10               	subwfb	(getSecondsFromOnTime@input_seconds+3)& (0+255),f,b
 20497                           
 20498                           ; BSR set to: 2
 20499                           ;heartbeat_timer.c: 224: days = input_seconds / (60 * 60 * 24);
 20500  019858  C20D  F200         	movff	getSecondsFromOnTime@input_seconds,___lldiv@dividend
 20501  01985C  C20E  F201         	movff	getSecondsFromOnTime@input_seconds+1,___lldiv@dividend+1
 20502  019860  C20F  F202         	movff	getSecondsFromOnTime@input_seconds+2,___lldiv@dividend+2
 20503  019864  C210  F203         	movff	getSecondsFromOnTime@input_seconds+3,___lldiv@dividend+3
 20504  019868  0E80               	movlw	128
 20505  01986A  6F04               	movwf	___lldiv@divisor& (0+255),b
 20506  01986C  0E51               	movlw	81
 20507  01986E  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 20508  019870  0E00               	movlw	0
 20509  019872  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 20510  019874  0E00               	movlw	0
 20511  019876  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 20512  019878  EC69  F0D9         	call	___lldiv	;wreg free
 20513  01987C  0102               	movlb	2	; () banked
 20514  01987E  5100               	movf	?___lldiv& (0+255),w,b
 20515  019880  6F17               	movwf	getSecondsFromOnTime@days& (0+255),b
 20516                           
 20517                           ;heartbeat_timer.c: 225: input_seconds -= days * (60 * 60 * 24);
 20518  019882  C217  F200         	movff	getSecondsFromOnTime@days,___wmul@multiplier
 20519  019886  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 20520  019888  0E51               	movlw	81
 20521  01988A  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20522  01988C  0E80               	movlw	128
 20523  01988E  6F02               	movwf	___wmul@multiplicand& (0+255),b
 20524  019890  EC79  F0E2         	call	___wmul	;wreg free
 20525  019894  0102               	movlb	2	; () banked
 20526  019896  C200  F211         	movff	?___wmul,??_getSecondsFromOnTime
 20527  01989A  C201  F212         	movff	?___wmul+1,??_getSecondsFromOnTime+1
 20528  01989E  0E00               	movlw	0
 20529  0198A0  BF12               	btfsc	(??_getSecondsFromOnTime+1)& (0+255),7,b
 20530  0198A2  0EFF               	movlw	255
 20531  0198A4  6F13               	movwf	(??_getSecondsFromOnTime+2)& (0+255),b
 20532  0198A6  6F14               	movwf	(??_getSecondsFromOnTime+3)& (0+255),b
 20533  0198A8  5111               	movf	??_getSecondsFromOnTime& (0+255),w,b
 20534  0198AA  5F0D               	subwf	getSecondsFromOnTime@input_seconds& (0+255),f,b
 20535  0198AC  5112               	movf	(??_getSecondsFromOnTime+1)& (0+255),w,b
 20536  0198AE  5B0E               	subwfb	(getSecondsFromOnTime@input_seconds+1)& (0+255),f,b
 20537  0198B0  5113               	movf	(??_getSecondsFromOnTime+2)& (0+255),w,b
 20538  0198B2  5B0F               	subwfb	(getSecondsFromOnTime@input_seconds+2)& (0+255),f,b
 20539  0198B4  5114               	movf	(??_getSecondsFromOnTime+3)& (0+255),w,b
 20540  0198B6  5B10               	subwfb	(getSecondsFromOnTime@input_seconds+3)& (0+255),f,b
 20541                           
 20542                           ; BSR set to: 2
 20543                           ;heartbeat_timer.c: 226: hours = input_seconds / (60 * 60);
 20544  0198B8  C20D  F200         	movff	getSecondsFromOnTime@input_seconds,___lldiv@dividend
 20545  0198BC  C20E  F201         	movff	getSecondsFromOnTime@input_seconds+1,___lldiv@dividend+1
 20546  0198C0  C20F  F202         	movff	getSecondsFromOnTime@input_seconds+2,___lldiv@dividend+2
 20547  0198C4  C210  F203         	movff	getSecondsFromOnTime@input_seconds+3,___lldiv@dividend+3
 20548  0198C8  0E10               	movlw	16
 20549  0198CA  6F04               	movwf	___lldiv@divisor& (0+255),b
 20550  0198CC  0E0E               	movlw	14
 20551  0198CE  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 20552  0198D0  0E00               	movlw	0
 20553  0198D2  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 20554  0198D4  0E00               	movlw	0
 20555  0198D6  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 20556  0198D8  EC69  F0D9         	call	___lldiv	;wreg free
 20557  0198DC  0102               	movlb	2	; () banked
 20558  0198DE  5100               	movf	?___lldiv& (0+255),w,b
 20559  0198E0  6F18               	movwf	getSecondsFromOnTime@hours& (0+255),b
 20560                           
 20561                           ; BSR set to: 2
 20562                           ;heartbeat_timer.c: 227: input_seconds -= hours * (60 * 60);
 20563  0198E2  C218  F200         	movff	getSecondsFromOnTime@hours,___wmul@multiplier
 20564  0198E6  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 20565  0198E8  0E0E               	movlw	14
 20566  0198EA  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20567  0198EC  0E10               	movlw	16
 20568  0198EE  6F02               	movwf	___wmul@multiplicand& (0+255),b
 20569  0198F0  EC79  F0E2         	call	___wmul	;wreg free
 20570  0198F4  0102               	movlb	2	; () banked
 20571  0198F6  C200  F211         	movff	?___wmul,??_getSecondsFromOnTime
 20572  0198FA  C201  F212         	movff	?___wmul+1,??_getSecondsFromOnTime+1
 20573  0198FE  0E00               	movlw	0
 20574  019900  BF12               	btfsc	(??_getSecondsFromOnTime+1)& (0+255),7,b
 20575  019902  0EFF               	movlw	255
 20576  019904  6F13               	movwf	(??_getSecondsFromOnTime+2)& (0+255),b
 20577  019906  6F14               	movwf	(??_getSecondsFromOnTime+3)& (0+255),b
 20578  019908  5111               	movf	??_getSecondsFromOnTime& (0+255),w,b
 20579  01990A  5F0D               	subwf	getSecondsFromOnTime@input_seconds& (0+255),f,b
 20580  01990C  5112               	movf	(??_getSecondsFromOnTime+1)& (0+255),w,b
 20581  01990E  5B0E               	subwfb	(getSecondsFromOnTime@input_seconds+1)& (0+255),f,b
 20582  019910  5113               	movf	(??_getSecondsFromOnTime+2)& (0+255),w,b
 20583  019912  5B0F               	subwfb	(getSecondsFromOnTime@input_seconds+2)& (0+255),f,b
 20584  019914  5114               	movf	(??_getSecondsFromOnTime+3)& (0+255),w,b
 20585  019916  5B10               	subwfb	(getSecondsFromOnTime@input_seconds+3)& (0+255),f,b
 20586                           
 20587                           ;heartbeat_timer.c: 228: minutes = input_seconds / 60;
 20588  019918  C20D  F200         	movff	getSecondsFromOnTime@input_seconds,___lldiv@dividend
 20589  01991C  C20E  F201         	movff	getSecondsFromOnTime@input_seconds+1,___lldiv@dividend+1
 20590  019920  C20F  F202         	movff	getSecondsFromOnTime@input_seconds+2,___lldiv@dividend+2
 20591  019924  C210  F203         	movff	getSecondsFromOnTime@input_seconds+3,___lldiv@dividend+3
 20592  019928  0E3C               	movlw	60
 20593  01992A  6F04               	movwf	___lldiv@divisor& (0+255),b
 20594  01992C  0E00               	movlw	0
 20595  01992E  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 20596  019930  0E00               	movlw	0
 20597  019932  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 20598  019934  0E00               	movlw	0
 20599  019936  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 20600  019938  EC69  F0D9         	call	___lldiv	;wreg free
 20601  01993C  0102               	movlb	2	; () banked
 20602  01993E  5100               	movf	?___lldiv& (0+255),w,b
 20603  019940  6F19               	movwf	getSecondsFromOnTime@minutes& (0+255),b
 20604                           
 20605                           ; BSR set to: 2
 20606                           ;heartbeat_timer.c: 229: input_seconds -= minutes * 60;
 20607  019942  5119               	movf	getSecondsFromOnTime@minutes& (0+255),w,b
 20608  019944  0D3C               	mullw	60
 20609  019946  CFF3 F211          	movff	prodl,??_getSecondsFromOnTime
 20610  01994A  CFF4 F212          	movff	prodh,??_getSecondsFromOnTime+1
 20611  01994E  0E00               	movlw	0
 20612  019950  BF12               	btfsc	(??_getSecondsFromOnTime+1)& (0+255),7,b
 20613  019952  0EFF               	movlw	255
 20614  019954  6F13               	movwf	(??_getSecondsFromOnTime+2)& (0+255),b
 20615  019956  6F14               	movwf	(??_getSecondsFromOnTime+3)& (0+255),b
 20616  019958  5111               	movf	??_getSecondsFromOnTime& (0+255),w,b
 20617  01995A  5F0D               	subwf	getSecondsFromOnTime@input_seconds& (0+255),f,b
 20618  01995C  5112               	movf	(??_getSecondsFromOnTime+1)& (0+255),w,b
 20619  01995E  5B0E               	subwfb	(getSecondsFromOnTime@input_seconds+1)& (0+255),f,b
 20620  019960  5113               	movf	(??_getSecondsFromOnTime+2)& (0+255),w,b
 20621  019962  5B0F               	subwfb	(getSecondsFromOnTime@input_seconds+2)& (0+255),f,b
 20622  019964  5114               	movf	(??_getSecondsFromOnTime+3)& (0+255),w,b
 20623  019966  5B10               	subwfb	(getSecondsFromOnTime@input_seconds+3)& (0+255),f,b
 20624                           
 20625                           ; BSR set to: 2
 20626                           ;heartbeat_timer.c: 230: return seconds = input_seconds;
 20627  019968  C20D  F215         	movff	getSecondsFromOnTime@input_seconds,getSecondsFromOnTime@seconds
 20628  01996C  5115               	movf	getSecondsFromOnTime@seconds& (0+255),w,b
 20629                           
 20630                           ; BSR set to: 2
 20631  01996E  0012               	return		;funcret
 20632  019970                     __end_of_getSecondsFromOnTime:
 20633                           	opt callstack 0
 20634                           
 20635 ;; *************** function _getNXQChargeStateStringCaps *****************
 20636 ;; Defined at:
 20637 ;;		line 38 in file "NXQ_charge_state.c"
 20638 ;; Parameters:    Size  Location     Type
 20639 ;;		None
 20640 ;; Auto vars:     Size  Location     Type
 20641 ;;		None
 20642 ;; Return value:  Size  Location     Type
 20643 ;;                  2    0[BANK2 ] PTR unsigned char 
 20644 ;; Registers used:
 20645 ;;		wreg, status,2, status,0
 20646 ;; Tracked objects:
 20647 ;;		On entry : 0/0
 20648 ;;		On exit  : 0/0
 20649 ;;		Unchanged: 0/0
 20650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20651 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20654 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20655 ;;Total ram usage:        2 bytes
 20656 ;; Hardware stack levels used:    1
 20657 ;; Hardware stack levels required when called:   11
 20658 ;; This function calls:
 20659 ;;		Nothing
 20660 ;; This function is called by:
 20661 ;;		_OLED_updateHandler
 20662 ;; This function uses a non-reentrant model
 20663 ;;
 20664                           
 20665                           	psect	text67
 20666  01B858                     __ptext67:
 20667                           	opt callstack 0
 20668  01B858                     _getNXQChargeStateStringCaps:
 20669                           	opt callstack 18
 20670                           
 20671                           ;NXQ_charge_state.c: 40: switch (nxq_charge_state) {
 20672                           
 20673                           ; BSR set to: 2
 20674                           ;incstack = 0
 20675  01B858  D01E               	goto	l20990
 20676  01B85A                     l20958:
 20677                           
 20678                           ; BSR set to: 1
 20679                           ;NXQ_charge_state.c: 43: return "Idle";
 20680  01B85A  0EA8               	movlw	low STR_16
 20681  01B85C  0102               	movlb	2	; () banked
 20682  01B85E  6F00               	movwf	?_getNXQChargeStateStringCaps& (0+255),b
 20683  01B860  0EFF               	movlw	high STR_16
 20684  01B862  6F01               	movwf	(?_getNXQChargeStateStringCaps+1)& (0+255),b
 20685  01B864  0012               	return	
 20686  01B866                     l20964:
 20687                           
 20688                           ; BSR set to: 1
 20689                           ;NXQ_charge_state.c: 47: return "Charging";
 20690  01B866  0E25               	movlw	low (STR_91+4)
 20691  01B868  0102               	movlb	2	; () banked
 20692  01B86A  6F00               	movwf	?_getNXQChargeStateStringCaps& (0+255),b
 20693  01B86C  0EFD               	movlw	high (STR_91+4)
 20694  01B86E  6F01               	movwf	(?_getNXQChargeStateStringCaps+1)& (0+255),b
 20695  01B870  0012               	return	
 20696  01B872                     l20970:
 20697                           
 20698                           ; BSR set to: 1
 20699                           ;NXQ_charge_state.c: 51: return "Fully Charged";
 20700  01B872  0EC4               	movlw	low STR_18
 20701  01B874  0102               	movlb	2	; () banked
 20702  01B876  6F00               	movwf	?_getNXQChargeStateStringCaps& (0+255),b
 20703  01B878  0EFC               	movlw	high STR_18
 20704  01B87A  6F01               	movwf	(?_getNXQChargeStateStringCaps+1)& (0+255),b
 20705  01B87C  0012               	return	
 20706  01B87E                     l20976:
 20707                           
 20708                           ; BSR set to: 1
 20709                           ;NXQ_charge_state.c: 55: return "Error";
 20710  01B87E  0E83               	movlw	low STR_19
 20711  01B880  0102               	movlb	2	; () banked
 20712  01B882  6F00               	movwf	?_getNXQChargeStateStringCaps& (0+255),b
 20713  01B884  0EFF               	movlw	high STR_19
 20714  01B886  6F01               	movwf	(?_getNXQChargeStateStringCaps+1)& (0+255),b
 20715  01B888  0012               	return	
 20716  01B88A                     l20982:
 20717                           
 20718                           ; BSR set to: 1
 20719                           ;NXQ_charge_state.c: 59: return "Undefined";
 20720  01B88A  0EB9               	movlw	low STR_20
 20721  01B88C  0102               	movlb	2	; () banked
 20722  01B88E  6F00               	movwf	?_getNXQChargeStateStringCaps& (0+255),b
 20723  01B890  0EFE               	movlw	high STR_20
 20724  01B892  6F01               	movwf	(?_getNXQChargeStateStringCaps+1)& (0+255),b
 20725  01B894  0012               	return	
 20726  01B896                     l20990:
 20727  01B896  0101               	movlb	1	; () banked
 20728  01B898  518C               	movf	_nxq_charge_state& (0+255),w,b
 20729                           
 20730                           ; Switch size 1, requested type "simple"
 20731                           ; Number of cases is 4, Range of values is 0 to 3
 20732                           ; switch strategies available:
 20733                           ; Name         Instructions Cycles
 20734                           ; simple_byte           13     7 (average)
 20735                           ;	Chosen strategy is simple_byte
 20736  01B89A  0A00               	xorlw	0	; case 0
 20737  01B89C  B4D8               	btfsc	status,2,c
 20738  01B89E  D7DD               	goto	l20958
 20739  01B8A0  0A01               	xorlw	1	; case 1
 20740  01B8A2  B4D8               	btfsc	status,2,c
 20741  01B8A4  D7E0               	goto	l20964
 20742  01B8A6  0A03               	xorlw	3	; case 2
 20743  01B8A8  B4D8               	btfsc	status,2,c
 20744  01B8AA  D7E3               	goto	l20970
 20745  01B8AC  0A01               	xorlw	1	; case 3
 20746  01B8AE  B4D8               	btfsc	status,2,c
 20747  01B8B0  D7E6               	goto	l20976
 20748  01B8B2  D7EB               	goto	l20982
 20749  01B8B4                     __end_of_getNXQChargeStateStringCaps:
 20750                           	opt callstack 0
 20751                           
 20752 ;; *************** function _getMinutesFromOnTime *****************
 20753 ;; Defined at:
 20754 ;;		line 205 in file "heartbeat_timer.c"
 20755 ;; Parameters:    Size  Location     Type
 20756 ;;  input_second    4   13[BANK2 ] unsigned long 
 20757 ;; Auto vars:     Size  Location     Type
 20758 ;;  hours           1   24[BANK2 ] unsigned char 
 20759 ;;  days            1   23[BANK2 ] unsigned char 
 20760 ;;  years           1   22[BANK2 ] unsigned char 
 20761 ;;  minutes         1   21[BANK2 ] unsigned char 
 20762 ;; Return value:  Size  Location     Type
 20763 ;;                  1    wreg      unsigned char 
 20764 ;; Registers used:
 20765 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 20766 ;; Tracked objects:
 20767 ;;		On entry : 0/0
 20768 ;;		On exit  : 0/0
 20769 ;;		Unchanged: 0/0
 20770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20771 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20772 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20773 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20774 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20775 ;;Total ram usage:       12 bytes
 20776 ;; Hardware stack levels used:    1
 20777 ;; Hardware stack levels required when called:   12
 20778 ;; This function calls:
 20779 ;;		___lldiv
 20780 ;;		___wmul
 20781 ;; This function is called by:
 20782 ;;		_OLED_updateHandler
 20783 ;; This function uses a non-reentrant model
 20784 ;;
 20785                           
 20786                           	psect	text68
 20787  019970                     __ptext68:
 20788                           	opt callstack 0
 20789  019970                     _getMinutesFromOnTime:
 20790                           	opt callstack 17
 20791                           
 20792                           ;heartbeat_timer.c: 207: uint8_t years, days, hours, minutes;;heartbeat_timer.c: 208: ye
      +                          ars = input_seconds / (60 * 60 * 24 * 365);
 20793                           
 20794                           ; BSR set to: 2
 20795                           ;incstack = 0
 20796  019970  C20D  F200         	movff	getMinutesFromOnTime@input_seconds,___lldiv@dividend
 20797  019974  C20E  F201         	movff	getMinutesFromOnTime@input_seconds+1,___lldiv@dividend+1
 20798  019978  C20F  F202         	movff	getMinutesFromOnTime@input_seconds+2,___lldiv@dividend+2
 20799  01997C  C210  F203         	movff	getMinutesFromOnTime@input_seconds+3,___lldiv@dividend+3
 20800  019980  0E80               	movlw	128
 20801  019982  0102               	movlb	2	; () banked
 20802  019984  6F04               	movwf	___lldiv@divisor& (0+255),b
 20803  019986  0E33               	movlw	51
 20804  019988  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 20805  01998A  0E00               	movlw	0
 20806  01998C  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 20807  01998E  0E00               	movlw	0
 20808  019990  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 20809  019992  EC69  F0D9         	call	___lldiv	;wreg free
 20810  019996  0102               	movlb	2	; () banked
 20811  019998  5100               	movf	?___lldiv& (0+255),w,b
 20812  01999A  6F16               	movwf	getMinutesFromOnTime@years& (0+255),b
 20813                           
 20814                           ; BSR set to: 2
 20815                           ;heartbeat_timer.c: 209: input_seconds -= years * (60 * 60 * 24 * 365);
 20816  01999C  C216  F200         	movff	getMinutesFromOnTime@years,___wmul@multiplier
 20817  0199A0  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 20818  0199A2  0E33               	movlw	51
 20819  0199A4  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20820  0199A6  0E80               	movlw	128
 20821  0199A8  6F02               	movwf	___wmul@multiplicand& (0+255),b
 20822  0199AA  EC79  F0E2         	call	___wmul	;wreg free
 20823  0199AE  0102               	movlb	2	; () banked
 20824  0199B0  C200  F211         	movff	?___wmul,??_getMinutesFromOnTime
 20825  0199B4  C201  F212         	movff	?___wmul+1,??_getMinutesFromOnTime+1
 20826  0199B8  0E00               	movlw	0
 20827  0199BA  BF12               	btfsc	(??_getMinutesFromOnTime+1)& (0+255),7,b
 20828  0199BC  0EFF               	movlw	255
 20829  0199BE  6F13               	movwf	(??_getMinutesFromOnTime+2)& (0+255),b
 20830  0199C0  6F14               	movwf	(??_getMinutesFromOnTime+3)& (0+255),b
 20831  0199C2  5111               	movf	??_getMinutesFromOnTime& (0+255),w,b
 20832  0199C4  5F0D               	subwf	getMinutesFromOnTime@input_seconds& (0+255),f,b
 20833  0199C6  5112               	movf	(??_getMinutesFromOnTime+1)& (0+255),w,b
 20834  0199C8  5B0E               	subwfb	(getMinutesFromOnTime@input_seconds+1)& (0+255),f,b
 20835  0199CA  5113               	movf	(??_getMinutesFromOnTime+2)& (0+255),w,b
 20836  0199CC  5B0F               	subwfb	(getMinutesFromOnTime@input_seconds+2)& (0+255),f,b
 20837  0199CE  5114               	movf	(??_getMinutesFromOnTime+3)& (0+255),w,b
 20838  0199D0  5B10               	subwfb	(getMinutesFromOnTime@input_seconds+3)& (0+255),f,b
 20839                           
 20840                           ; BSR set to: 2
 20841                           ;heartbeat_timer.c: 210: days = input_seconds / (60 * 60 * 24);
 20842  0199D2  C20D  F200         	movff	getMinutesFromOnTime@input_seconds,___lldiv@dividend
 20843  0199D6  C20E  F201         	movff	getMinutesFromOnTime@input_seconds+1,___lldiv@dividend+1
 20844  0199DA  C20F  F202         	movff	getMinutesFromOnTime@input_seconds+2,___lldiv@dividend+2
 20845  0199DE  C210  F203         	movff	getMinutesFromOnTime@input_seconds+3,___lldiv@dividend+3
 20846  0199E2  0E80               	movlw	128
 20847  0199E4  6F04               	movwf	___lldiv@divisor& (0+255),b
 20848  0199E6  0E51               	movlw	81
 20849  0199E8  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 20850  0199EA  0E00               	movlw	0
 20851  0199EC  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 20852  0199EE  0E00               	movlw	0
 20853  0199F0  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 20854  0199F2  EC69  F0D9         	call	___lldiv	;wreg free
 20855  0199F6  0102               	movlb	2	; () banked
 20856  0199F8  5100               	movf	?___lldiv& (0+255),w,b
 20857  0199FA  6F17               	movwf	getMinutesFromOnTime@days& (0+255),b
 20858                           
 20859                           ;heartbeat_timer.c: 211: input_seconds -= days * (60 * 60 * 24);
 20860  0199FC  C217  F200         	movff	getMinutesFromOnTime@days,___wmul@multiplier
 20861  019A00  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 20862  019A02  0E51               	movlw	81
 20863  019A04  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20864  019A06  0E80               	movlw	128
 20865  019A08  6F02               	movwf	___wmul@multiplicand& (0+255),b
 20866  019A0A  EC79  F0E2         	call	___wmul	;wreg free
 20867  019A0E  0102               	movlb	2	; () banked
 20868  019A10  C200  F211         	movff	?___wmul,??_getMinutesFromOnTime
 20869  019A14  C201  F212         	movff	?___wmul+1,??_getMinutesFromOnTime+1
 20870  019A18  0E00               	movlw	0
 20871  019A1A  BF12               	btfsc	(??_getMinutesFromOnTime+1)& (0+255),7,b
 20872  019A1C  0EFF               	movlw	255
 20873  019A1E  6F13               	movwf	(??_getMinutesFromOnTime+2)& (0+255),b
 20874  019A20  6F14               	movwf	(??_getMinutesFromOnTime+3)& (0+255),b
 20875  019A22  5111               	movf	??_getMinutesFromOnTime& (0+255),w,b
 20876  019A24  5F0D               	subwf	getMinutesFromOnTime@input_seconds& (0+255),f,b
 20877  019A26  5112               	movf	(??_getMinutesFromOnTime+1)& (0+255),w,b
 20878  019A28  5B0E               	subwfb	(getMinutesFromOnTime@input_seconds+1)& (0+255),f,b
 20879  019A2A  5113               	movf	(??_getMinutesFromOnTime+2)& (0+255),w,b
 20880  019A2C  5B0F               	subwfb	(getMinutesFromOnTime@input_seconds+2)& (0+255),f,b
 20881  019A2E  5114               	movf	(??_getMinutesFromOnTime+3)& (0+255),w,b
 20882  019A30  5B10               	subwfb	(getMinutesFromOnTime@input_seconds+3)& (0+255),f,b
 20883                           
 20884                           ; BSR set to: 2
 20885                           ;heartbeat_timer.c: 212: hours = input_seconds / (60 * 60);
 20886  019A32  C20D  F200         	movff	getMinutesFromOnTime@input_seconds,___lldiv@dividend
 20887  019A36  C20E  F201         	movff	getMinutesFromOnTime@input_seconds+1,___lldiv@dividend+1
 20888  019A3A  C20F  F202         	movff	getMinutesFromOnTime@input_seconds+2,___lldiv@dividend+2
 20889  019A3E  C210  F203         	movff	getMinutesFromOnTime@input_seconds+3,___lldiv@dividend+3
 20890  019A42  0E10               	movlw	16
 20891  019A44  6F04               	movwf	___lldiv@divisor& (0+255),b
 20892  019A46  0E0E               	movlw	14
 20893  019A48  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 20894  019A4A  0E00               	movlw	0
 20895  019A4C  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 20896  019A4E  0E00               	movlw	0
 20897  019A50  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 20898  019A52  EC69  F0D9         	call	___lldiv	;wreg free
 20899  019A56  0102               	movlb	2	; () banked
 20900  019A58  5100               	movf	?___lldiv& (0+255),w,b
 20901  019A5A  6F18               	movwf	getMinutesFromOnTime@hours& (0+255),b
 20902                           
 20903                           ; BSR set to: 2
 20904                           ;heartbeat_timer.c: 213: input_seconds -= hours * (60 * 60);
 20905  019A5C  C218  F200         	movff	getMinutesFromOnTime@hours,___wmul@multiplier
 20906  019A60  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 20907  019A62  0E0E               	movlw	14
 20908  019A64  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20909  019A66  0E10               	movlw	16
 20910  019A68  6F02               	movwf	___wmul@multiplicand& (0+255),b
 20911  019A6A  EC79  F0E2         	call	___wmul	;wreg free
 20912  019A6E  0102               	movlb	2	; () banked
 20913  019A70  C200  F211         	movff	?___wmul,??_getMinutesFromOnTime
 20914  019A74  C201  F212         	movff	?___wmul+1,??_getMinutesFromOnTime+1
 20915  019A78  0E00               	movlw	0
 20916  019A7A  BF12               	btfsc	(??_getMinutesFromOnTime+1)& (0+255),7,b
 20917  019A7C  0EFF               	movlw	255
 20918  019A7E  6F13               	movwf	(??_getMinutesFromOnTime+2)& (0+255),b
 20919  019A80  6F14               	movwf	(??_getMinutesFromOnTime+3)& (0+255),b
 20920  019A82  5111               	movf	??_getMinutesFromOnTime& (0+255),w,b
 20921  019A84  5F0D               	subwf	getMinutesFromOnTime@input_seconds& (0+255),f,b
 20922  019A86  5112               	movf	(??_getMinutesFromOnTime+1)& (0+255),w,b
 20923  019A88  5B0E               	subwfb	(getMinutesFromOnTime@input_seconds+1)& (0+255),f,b
 20924  019A8A  5113               	movf	(??_getMinutesFromOnTime+2)& (0+255),w,b
 20925  019A8C  5B0F               	subwfb	(getMinutesFromOnTime@input_seconds+2)& (0+255),f,b
 20926  019A8E  5114               	movf	(??_getMinutesFromOnTime+3)& (0+255),w,b
 20927  019A90  5B10               	subwfb	(getMinutesFromOnTime@input_seconds+3)& (0+255),f,b
 20928                           
 20929                           ;heartbeat_timer.c: 214: return minutes = input_seconds / 60;
 20930  019A92  C20D  F200         	movff	getMinutesFromOnTime@input_seconds,___lldiv@dividend
 20931  019A96  C20E  F201         	movff	getMinutesFromOnTime@input_seconds+1,___lldiv@dividend+1
 20932  019A9A  C20F  F202         	movff	getMinutesFromOnTime@input_seconds+2,___lldiv@dividend+2
 20933  019A9E  C210  F203         	movff	getMinutesFromOnTime@input_seconds+3,___lldiv@dividend+3
 20934  019AA2  0E3C               	movlw	60
 20935  019AA4  6F04               	movwf	___lldiv@divisor& (0+255),b
 20936  019AA6  0E00               	movlw	0
 20937  019AA8  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 20938  019AAA  0E00               	movlw	0
 20939  019AAC  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 20940  019AAE  0E00               	movlw	0
 20941  019AB0  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 20942  019AB2  EC69  F0D9         	call	___lldiv	;wreg free
 20943  019AB6  0102               	movlb	2	; () banked
 20944  019AB8  5100               	movf	?___lldiv& (0+255),w,b
 20945  019ABA  6F15               	movwf	getMinutesFromOnTime@minutes& (0+255),b
 20946  019ABC  5115               	movf	getMinutesFromOnTime@minutes& (0+255),w,b
 20947                           
 20948                           ; BSR set to: 2
 20949  019ABE  0012               	return		;funcret
 20950  019AC0                     __end_of_getMinutesFromOnTime:
 20951                           	opt callstack 0
 20952                           
 20953 ;; *************** function _getMinorRevisionID *****************
 20954 ;; Defined at:
 20955 ;;		line 23 in file "device_IDs.c"
 20956 ;; Parameters:    Size  Location     Type
 20957 ;;		None
 20958 ;; Auto vars:     Size  Location     Type
 20959 ;;  REVID_RAW       2   11[BANK2 ] unsigned int 
 20960 ;; Return value:  Size  Location     Type
 20961 ;;                  1    wreg      unsigned char 
 20962 ;; Registers used:
 20963 ;;		wreg, status,2, status,0, cstack
 20964 ;; Tracked objects:
 20965 ;;		On entry : 0/0
 20966 ;;		On exit  : 0/0
 20967 ;;		Unchanged: 0/0
 20968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20970 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20972 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20973 ;;Total ram usage:        2 bytes
 20974 ;; Hardware stack levels used:    1
 20975 ;; Hardware stack levels required when called:   13
 20976 ;; This function calls:
 20977 ;;		_FLASH_ReadWord
 20978 ;; This function is called by:
 20979 ;;		_OLED_updateHandler
 20980 ;;		_ringBufferLUT
 20981 ;; This function uses a non-reentrant model
 20982 ;;
 20983                           
 20984                           	psect	text69
 20985  01C592                     __ptext69:
 20986                           	opt callstack 0
 20987  01C592                     _getMinorRevisionID:
 20988                           	opt callstack 15
 20989                           
 20990                           ;device_IDs.c: 26: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 20991                           
 20992                           ; BSR set to: 2
 20993                           ;incstack = 0
 20994  01C592  0EFC               	movlw	252
 20995  01C594  0102               	movlb	2	; () banked
 20996  01C596  6F04               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 20997  01C598  0EFF               	movlw	255
 20998  01C59A  6F05               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 20999  01C59C  0E3F               	movlw	63
 21000  01C59E  6F06               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 21001  01C5A0  0E00               	movlw	0
 21002  01C5A2  6F07               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 21003  01C5A4  EC55  F0DF         	call	_FLASH_ReadWord	;wreg free
 21004  01C5A8  C204  F20B         	movff	?_FLASH_ReadWord,getMinorRevisionID@REVID_RAW
 21005  01C5AC  C205  F20C         	movff	?_FLASH_ReadWord+1,getMinorRevisionID@REVID_RAW+1
 21006                           
 21007                           ;device_IDs.c: 29: return REVID_RAW & 0b11111;
 21008  01C5B0  0102               	movlb	2	; () banked
 21009  01C5B2  510B               	movf	getMinorRevisionID@REVID_RAW& (0+255),w,b
 21010  01C5B4  0B1F               	andlw	31
 21011                           
 21012                           ; BSR set to: 2
 21013  01C5B6  0012               	return		;funcret
 21014  01C5B8                     __end_of_getMinorRevisionID:
 21015                           	opt callstack 0
 21016                           
 21017 ;; *************** function _getMajorRevisionID *****************
 21018 ;; Defined at:
 21019 ;;		line 12 in file "device_IDs.c"
 21020 ;; Parameters:    Size  Location     Type
 21021 ;;		None
 21022 ;; Auto vars:     Size  Location     Type
 21023 ;;  REVID_RAW       2   14[BANK2 ] unsigned int 
 21024 ;; Return value:  Size  Location     Type
 21025 ;;                  1    wreg      unsigned char 
 21026 ;; Registers used:
 21027 ;;		wreg, status,2, status,0, cstack
 21028 ;; Tracked objects:
 21029 ;;		On entry : 0/0
 21030 ;;		On exit  : 0/0
 21031 ;;		Unchanged: 0/0
 21032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21034 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21035 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21036 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21037 ;;Total ram usage:        5 bytes
 21038 ;; Hardware stack levels used:    1
 21039 ;; Hardware stack levels required when called:   13
 21040 ;; This function calls:
 21041 ;;		_FLASH_ReadWord
 21042 ;; This function is called by:
 21043 ;;		_OLED_updateHandler
 21044 ;;		_ringBufferLUT
 21045 ;; This function uses a non-reentrant model
 21046 ;;
 21047                           
 21048                           	psect	text70
 21049  01C0E4                     __ptext70:
 21050                           	opt callstack 0
 21051  01C0E4                     _getMajorRevisionID:
 21052                           	opt callstack 15
 21053                           
 21054                           ;device_IDs.c: 15: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 21055                           
 21056                           ; BSR set to: 2
 21057                           ;incstack = 0
 21058  01C0E4  0EFC               	movlw	252
 21059  01C0E6  0102               	movlb	2	; () banked
 21060  01C0E8  6F04               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 21061  01C0EA  0EFF               	movlw	255
 21062  01C0EC  6F05               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 21063  01C0EE  0E3F               	movlw	63
 21064  01C0F0  6F06               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 21065  01C0F2  0E00               	movlw	0
 21066  01C0F4  6F07               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 21067  01C0F6  EC55  F0DF         	call	_FLASH_ReadWord	;wreg free
 21068  01C0FA  C204  F20E         	movff	?_FLASH_ReadWord,getMajorRevisionID@REVID_RAW
 21069  01C0FE  C205  F20F         	movff	?_FLASH_ReadWord+1,getMajorRevisionID@REVID_RAW+1
 21070                           
 21071                           ;device_IDs.c: 18: return (REVID_RAW >> 6) & 0b11111;
 21072  01C102  C20E  F20B         	movff	getMajorRevisionID@REVID_RAW,??_getMajorRevisionID
 21073  01C106  C20F  F20C         	movff	getMajorRevisionID@REVID_RAW+1,??_getMajorRevisionID+1
 21074  01C10A  0E06               	movlw	6
 21075  01C10C  0102               	movlb	2	; () banked
 21076  01C10E  6F0D               	movwf	(??_getMajorRevisionID+2)& (0+255),b
 21077  01C110                     u25355:
 21078  01C110  90D8               	bcf	status,0,c
 21079  01C112  330C               	rrcf	(??_getMajorRevisionID+1)& (0+255),f,b
 21080  01C114  330B               	rrcf	??_getMajorRevisionID& (0+255),f,b
 21081  01C116  2F0D               	decfsz	(??_getMajorRevisionID+2)& (0+255),f,b
 21082  01C118  D7FB               	goto	u25355
 21083  01C11A  510B               	movf	??_getMajorRevisionID& (0+255),w,b
 21084  01C11C  0B1F               	andlw	31
 21085                           
 21086                           ; BSR set to: 2
 21087  01C11E  0012               	return		;funcret
 21088  01C120                     __end_of_getMajorRevisionID:
 21089                           	opt callstack 0
 21090                           
 21091 ;; *************** function _getHoursFromOnTime *****************
 21092 ;; Defined at:
 21093 ;;		line 193 in file "heartbeat_timer.c"
 21094 ;; Parameters:    Size  Location     Type
 21095 ;;  input_second    4   13[BANK2 ] unsigned long 
 21096 ;; Auto vars:     Size  Location     Type
 21097 ;;  days            1   23[BANK2 ] unsigned char 
 21098 ;;  years           1   22[BANK2 ] unsigned char 
 21099 ;;  hours           1   21[BANK2 ] unsigned char 
 21100 ;; Return value:  Size  Location     Type
 21101 ;;                  1    wreg      unsigned char 
 21102 ;; Registers used:
 21103 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 21104 ;; Tracked objects:
 21105 ;;		On entry : 0/0
 21106 ;;		On exit  : 0/0
 21107 ;;		Unchanged: 0/0
 21108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21109 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21110 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21111 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21112 ;;      Totals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21113 ;;Total ram usage:       11 bytes
 21114 ;; Hardware stack levels used:    1
 21115 ;; Hardware stack levels required when called:   12
 21116 ;; This function calls:
 21117 ;;		___lldiv
 21118 ;;		___wmul
 21119 ;; This function is called by:
 21120 ;;		_OLED_updateHandler
 21121 ;; This function uses a non-reentrant model
 21122 ;;
 21123                           
 21124                           	psect	text71
 21125  01A5D6                     __ptext71:
 21126                           	opt callstack 0
 21127  01A5D6                     _getHoursFromOnTime:
 21128                           	opt callstack 17
 21129                           
 21130                           ;heartbeat_timer.c: 195: uint8_t years, days, hours;;heartbeat_timer.c: 196: years = inp
      +                          ut_seconds / (60 * 60 * 24 * 365);
 21131                           
 21132                           ; BSR set to: 2
 21133                           ;incstack = 0
 21134  01A5D6  C20D  F200         	movff	getHoursFromOnTime@input_seconds,___lldiv@dividend
 21135  01A5DA  C20E  F201         	movff	getHoursFromOnTime@input_seconds+1,___lldiv@dividend+1
 21136  01A5DE  C20F  F202         	movff	getHoursFromOnTime@input_seconds+2,___lldiv@dividend+2
 21137  01A5E2  C210  F203         	movff	getHoursFromOnTime@input_seconds+3,___lldiv@dividend+3
 21138  01A5E6  0E80               	movlw	128
 21139  01A5E8  0102               	movlb	2	; () banked
 21140  01A5EA  6F04               	movwf	___lldiv@divisor& (0+255),b
 21141  01A5EC  0E33               	movlw	51
 21142  01A5EE  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21143  01A5F0  0E00               	movlw	0
 21144  01A5F2  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21145  01A5F4  0E00               	movlw	0
 21146  01A5F6  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21147  01A5F8  EC69  F0D9         	call	___lldiv	;wreg free
 21148  01A5FC  0102               	movlb	2	; () banked
 21149  01A5FE  5100               	movf	?___lldiv& (0+255),w,b
 21150  01A600  6F16               	movwf	getHoursFromOnTime@years& (0+255),b
 21151                           
 21152                           ; BSR set to: 2
 21153                           ;heartbeat_timer.c: 197: input_seconds -= years * (60 * 60 * 24 * 365);
 21154  01A602  C216  F200         	movff	getHoursFromOnTime@years,___wmul@multiplier
 21155  01A606  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 21156  01A608  0E33               	movlw	51
 21157  01A60A  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21158  01A60C  0E80               	movlw	128
 21159  01A60E  6F02               	movwf	___wmul@multiplicand& (0+255),b
 21160  01A610  EC79  F0E2         	call	___wmul	;wreg free
 21161  01A614  0102               	movlb	2	; () banked
 21162  01A616  C200  F211         	movff	?___wmul,??_getHoursFromOnTime
 21163  01A61A  C201  F212         	movff	?___wmul+1,??_getHoursFromOnTime+1
 21164  01A61E  0E00               	movlw	0
 21165  01A620  BF12               	btfsc	(??_getHoursFromOnTime+1)& (0+255),7,b
 21166  01A622  0EFF               	movlw	255
 21167  01A624  6F13               	movwf	(??_getHoursFromOnTime+2)& (0+255),b
 21168  01A626  6F14               	movwf	(??_getHoursFromOnTime+3)& (0+255),b
 21169  01A628  5111               	movf	??_getHoursFromOnTime& (0+255),w,b
 21170  01A62A  5F0D               	subwf	getHoursFromOnTime@input_seconds& (0+255),f,b
 21171  01A62C  5112               	movf	(??_getHoursFromOnTime+1)& (0+255),w,b
 21172  01A62E  5B0E               	subwfb	(getHoursFromOnTime@input_seconds+1)& (0+255),f,b
 21173  01A630  5113               	movf	(??_getHoursFromOnTime+2)& (0+255),w,b
 21174  01A632  5B0F               	subwfb	(getHoursFromOnTime@input_seconds+2)& (0+255),f,b
 21175  01A634  5114               	movf	(??_getHoursFromOnTime+3)& (0+255),w,b
 21176  01A636  5B10               	subwfb	(getHoursFromOnTime@input_seconds+3)& (0+255),f,b
 21177                           
 21178                           ; BSR set to: 2
 21179                           ;heartbeat_timer.c: 198: days = input_seconds / (60 * 60 * 24);
 21180  01A638  C20D  F200         	movff	getHoursFromOnTime@input_seconds,___lldiv@dividend
 21181  01A63C  C20E  F201         	movff	getHoursFromOnTime@input_seconds+1,___lldiv@dividend+1
 21182  01A640  C20F  F202         	movff	getHoursFromOnTime@input_seconds+2,___lldiv@dividend+2
 21183  01A644  C210  F203         	movff	getHoursFromOnTime@input_seconds+3,___lldiv@dividend+3
 21184  01A648  0E80               	movlw	128
 21185  01A64A  6F04               	movwf	___lldiv@divisor& (0+255),b
 21186  01A64C  0E51               	movlw	81
 21187  01A64E  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21188  01A650  0E00               	movlw	0
 21189  01A652  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21190  01A654  0E00               	movlw	0
 21191  01A656  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21192  01A658  EC69  F0D9         	call	___lldiv	;wreg free
 21193  01A65C  0102               	movlb	2	; () banked
 21194  01A65E  5100               	movf	?___lldiv& (0+255),w,b
 21195  01A660  6F17               	movwf	getHoursFromOnTime@days& (0+255),b
 21196                           
 21197                           ;heartbeat_timer.c: 199: input_seconds -= days * (60 * 60 * 24);
 21198  01A662  C217  F200         	movff	getHoursFromOnTime@days,___wmul@multiplier
 21199  01A666  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 21200  01A668  0E51               	movlw	81
 21201  01A66A  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21202  01A66C  0E80               	movlw	128
 21203  01A66E  6F02               	movwf	___wmul@multiplicand& (0+255),b
 21204  01A670  EC79  F0E2         	call	___wmul	;wreg free
 21205  01A674  0102               	movlb	2	; () banked
 21206  01A676  C200  F211         	movff	?___wmul,??_getHoursFromOnTime
 21207  01A67A  C201  F212         	movff	?___wmul+1,??_getHoursFromOnTime+1
 21208  01A67E  0E00               	movlw	0
 21209  01A680  BF12               	btfsc	(??_getHoursFromOnTime+1)& (0+255),7,b
 21210  01A682  0EFF               	movlw	255
 21211  01A684  6F13               	movwf	(??_getHoursFromOnTime+2)& (0+255),b
 21212  01A686  6F14               	movwf	(??_getHoursFromOnTime+3)& (0+255),b
 21213  01A688  5111               	movf	??_getHoursFromOnTime& (0+255),w,b
 21214  01A68A  5F0D               	subwf	getHoursFromOnTime@input_seconds& (0+255),f,b
 21215  01A68C  5112               	movf	(??_getHoursFromOnTime+1)& (0+255),w,b
 21216  01A68E  5B0E               	subwfb	(getHoursFromOnTime@input_seconds+1)& (0+255),f,b
 21217  01A690  5113               	movf	(??_getHoursFromOnTime+2)& (0+255),w,b
 21218  01A692  5B0F               	subwfb	(getHoursFromOnTime@input_seconds+2)& (0+255),f,b
 21219  01A694  5114               	movf	(??_getHoursFromOnTime+3)& (0+255),w,b
 21220  01A696  5B10               	subwfb	(getHoursFromOnTime@input_seconds+3)& (0+255),f,b
 21221                           
 21222                           ; BSR set to: 2
 21223                           ;heartbeat_timer.c: 200: return hours = input_seconds / (60 * 60);
 21224  01A698  C20D  F200         	movff	getHoursFromOnTime@input_seconds,___lldiv@dividend
 21225  01A69C  C20E  F201         	movff	getHoursFromOnTime@input_seconds+1,___lldiv@dividend+1
 21226  01A6A0  C20F  F202         	movff	getHoursFromOnTime@input_seconds+2,___lldiv@dividend+2
 21227  01A6A4  C210  F203         	movff	getHoursFromOnTime@input_seconds+3,___lldiv@dividend+3
 21228  01A6A8  0E10               	movlw	16
 21229  01A6AA  6F04               	movwf	___lldiv@divisor& (0+255),b
 21230  01A6AC  0E0E               	movlw	14
 21231  01A6AE  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21232  01A6B0  0E00               	movlw	0
 21233  01A6B2  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21234  01A6B4  0E00               	movlw	0
 21235  01A6B6  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21236  01A6B8  EC69  F0D9         	call	___lldiv	;wreg free
 21237  01A6BC  0102               	movlb	2	; () banked
 21238  01A6BE  5100               	movf	?___lldiv& (0+255),w,b
 21239  01A6C0  6F15               	movwf	getHoursFromOnTime@hours& (0+255),b
 21240  01A6C2  5115               	movf	getHoursFromOnTime@hours& (0+255),w,b
 21241                           
 21242                           ; BSR set to: 2
 21243  01A6C4  0012               	return		;funcret
 21244  01A6C6                     __end_of_getHoursFromOnTime:
 21245                           	opt callstack 0
 21246                           
 21247 ;; *************** function _getDeviceID *****************
 21248 ;; Defined at:
 21249 ;;		line 4 in file "device_IDs.c"
 21250 ;; Parameters:    Size  Location     Type
 21251 ;;		None
 21252 ;; Auto vars:     Size  Location     Type
 21253 ;;		None
 21254 ;; Return value:  Size  Location     Type
 21255 ;;                  2   11[BANK2 ] unsigned int 
 21256 ;; Registers used:
 21257 ;;		wreg, status,2, status,0, cstack
 21258 ;; Tracked objects:
 21259 ;;		On entry : 0/0
 21260 ;;		On exit  : 0/0
 21261 ;;		Unchanged: 0/0
 21262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21263 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21266 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21267 ;;Total ram usage:        2 bytes
 21268 ;; Hardware stack levels used:    1
 21269 ;; Hardware stack levels required when called:   13
 21270 ;; This function calls:
 21271 ;;		_FLASH_ReadWord
 21272 ;; This function is called by:
 21273 ;;		_OLED_updateHandler
 21274 ;;		_ringBufferLUT
 21275 ;; This function uses a non-reentrant model
 21276 ;;
 21277                           
 21278                           	psect	text72
 21279  01C6EA                     __ptext72:
 21280                           	opt callstack 0
 21281  01C6EA                     _getDeviceID:
 21282                           	opt callstack 15
 21283                           
 21284                           ;device_IDs.c: 8: return FLASH_ReadWord(0x3FFFFE);
 21285                           
 21286                           ; BSR set to: 2
 21287                           ;incstack = 0
 21288  01C6EA  0EFE               	movlw	254
 21289  01C6EC  0102               	movlb	2	; () banked
 21290  01C6EE  6F04               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 21291  01C6F0  0EFF               	movlw	255
 21292  01C6F2  6F05               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 21293  01C6F4  0E3F               	movlw	63
 21294  01C6F6  6F06               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 21295  01C6F8  0E00               	movlw	0
 21296  01C6FA  6F07               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 21297  01C6FC  EC55  F0DF         	call	_FLASH_ReadWord	;wreg free
 21298  01C700  C204  F20B         	movff	?_FLASH_ReadWord,?_getDeviceID
 21299  01C704  C205  F20C         	movff	?_FLASH_ReadWord+1,?_getDeviceID+1
 21300  01C708  0012               	return		;funcret
 21301  01C70A                     __end_of_getDeviceID:
 21302                           	opt callstack 0
 21303                           
 21304 ;; *************** function _FLASH_ReadWord *****************
 21305 ;; Defined at:
 21306 ;;		line 71 in file "mcc_generated_files/memory.c"
 21307 ;; Parameters:    Size  Location     Type
 21308 ;;  flashAddr       4    4[BANK2 ] unsigned long 
 21309 ;; Auto vars:     Size  Location     Type
 21310 ;;		None
 21311 ;; Return value:  Size  Location     Type
 21312 ;;                  2    4[BANK2 ] unsigned int 
 21313 ;; Registers used:
 21314 ;;		wreg, status,2, status,0, cstack
 21315 ;; Tracked objects:
 21316 ;;		On entry : 0/0
 21317 ;;		On exit  : 0/0
 21318 ;;		Unchanged: 0/0
 21319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21320 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21322 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21323 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21324 ;;Total ram usage:        7 bytes
 21325 ;; Hardware stack levels used:    1
 21326 ;; Hardware stack levels required when called:   12
 21327 ;; This function calls:
 21328 ;;		_FLASH_ReadByte
 21329 ;; This function is called by:
 21330 ;;		_getDeviceID
 21331 ;;		_getMajorRevisionID
 21332 ;;		_getMinorRevisionID
 21333 ;;		_getUserID
 21334 ;; This function uses a non-reentrant model
 21335 ;;
 21336                           
 21337                           	psect	text73
 21338  01BEAA                     __ptext73:
 21339                           	opt callstack 0
 21340  01BEAA                     _FLASH_ReadWord:
 21341                           	opt callstack 15
 21342                           
 21343                           ;memory.c: 73: return ((((uint16_t)FLASH_ReadByte(flashAddr+1))<<8)|(FLASH_ReadByte(flas
      +                          hAddr)));
 21344                           
 21345                           ;incstack = 0
 21346  01BEAA  C204  F200         	movff	FLASH_ReadWord@flashAddr,FLASH_ReadByte@flashAddr
 21347  01BEAE  C205  F201         	movff	FLASH_ReadWord@flashAddr+1,FLASH_ReadByte@flashAddr+1
 21348  01BEB2  C206  F202         	movff	FLASH_ReadWord@flashAddr+2,FLASH_ReadByte@flashAddr+2
 21349  01BEB6  C207  F203         	movff	FLASH_ReadWord@flashAddr+3,FLASH_ReadByte@flashAddr+3
 21350  01BEBA  ECFA  F0E3         	call	_FLASH_ReadByte	;wreg free
 21351  01BEBE  0102               	movlb	2	; () banked
 21352  01BEC0  6F08               	movwf	??_FLASH_ReadWord& (0+255),b
 21353  01BEC2  0E01               	movlw	1
 21354  01BEC4  2504               	addwf	FLASH_ReadWord@flashAddr& (0+255),w,b
 21355  01BEC6  6F00               	movwf	FLASH_ReadByte@flashAddr& (0+255),b
 21356  01BEC8  0E00               	movlw	0
 21357  01BECA  2105               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),w,b
 21358  01BECC  6F01               	movwf	(FLASH_ReadByte@flashAddr+1)& (0+255),b
 21359  01BECE  0E00               	movlw	0
 21360  01BED0  2106               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),w,b
 21361  01BED2  6F02               	movwf	(FLASH_ReadByte@flashAddr+2)& (0+255),b
 21362  01BED4  0E00               	movlw	0
 21363  01BED6  2107               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),w,b
 21364  01BED8  6F03               	movwf	(FLASH_ReadByte@flashAddr+3)& (0+255),b
 21365  01BEDA  ECFA  F0E3         	call	_FLASH_ReadByte	;wreg free
 21366  01BEDE  0102               	movlb	2	; () banked
 21367  01BEE0  6F09               	movwf	(??_FLASH_ReadWord+1)& (0+255),b
 21368  01BEE2  5108               	movf	??_FLASH_ReadWord& (0+255),w,b
 21369  01BEE4  6F04               	movwf	?_FLASH_ReadWord& (0+255),b
 21370  01BEE6  C209  F205         	movff	??_FLASH_ReadWord+1,?_FLASH_ReadWord+1
 21371                           
 21372                           ; BSR set to: 2
 21373  01BEEA  0012               	return		;funcret
 21374  01BEEC                     __end_of_FLASH_ReadWord:
 21375                           	opt callstack 0
 21376                           
 21377 ;; *************** function _FLASH_ReadByte *****************
 21378 ;; Defined at:
 21379 ;;		line 59 in file "mcc_generated_files/memory.c"
 21380 ;; Parameters:    Size  Location     Type
 21381 ;;  flashAddr       4    0[BANK2 ] unsigned long 
 21382 ;; Auto vars:     Size  Location     Type
 21383 ;;		None
 21384 ;; Return value:  Size  Location     Type
 21385 ;;                  1    wreg      unsigned char 
 21386 ;; Registers used:
 21387 ;;		wreg, status,2
 21388 ;; Tracked objects:
 21389 ;;		On entry : 0/0
 21390 ;;		On exit  : 0/0
 21391 ;;		Unchanged: 0/0
 21392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21393 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21396 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21397 ;;Total ram usage:        4 bytes
 21398 ;; Hardware stack levels used:    1
 21399 ;; Hardware stack levels required when called:   11
 21400 ;; This function calls:
 21401 ;;		Nothing
 21402 ;; This function is called by:
 21403 ;;		_FLASH_ReadWord
 21404 ;;		_FLASH_WriteByte
 21405 ;; This function uses a non-reentrant model
 21406 ;;
 21407                           
 21408                           	psect	text74
 21409  01C7F4                     __ptext74:
 21410                           	opt callstack 0
 21411  01C7F4                     _FLASH_ReadByte:
 21412                           	opt callstack 15
 21413                           
 21414                           ;memory.c: 61: NVMCON1bits.NVMREG = 2;
 21415                           
 21416                           ; BSR set to: 2
 21417                           ;incstack = 0
 21418  01C7F4  5081               	movf	3969,w,c	;volsfr
 21419  01C7F6  0B3F               	andlw	-193
 21420  01C7F8  0980               	iorlw	128
 21421  01C7FA  6E81               	movwf	3969,c	;volsfr
 21422                           
 21423                           ;memory.c: 62: TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 16);
 21424  01C7FC  C202  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
 21425                           
 21426                           ;memory.c: 63: TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8);
 21427  01C800  C201  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
 21428                           
 21429                           ;memory.c: 64: TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 21430  01C804  C200  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
 21431  01C808  0008               	tblrd		*	;# 
 21432                           
 21433                           ;memory.c: 68: return (TABLAT);
 21434  01C80A  50F5               	movf	tablat,w,c	;volatile
 21435  01C80C  0012               	return		;funcret
 21436  01C80E                     __end_of_FLASH_ReadByte:
 21437                           	opt callstack 0
 21438                           
 21439 ;; *************** function _getDaysFromOnTime *****************
 21440 ;; Defined at:
 21441 ;;		line 183 in file "heartbeat_timer.c"
 21442 ;; Parameters:    Size  Location     Type
 21443 ;;  input_second    4   13[BANK2 ] unsigned long 
 21444 ;; Auto vars:     Size  Location     Type
 21445 ;;  years           1   22[BANK2 ] unsigned char 
 21446 ;;  days            1   21[BANK2 ] unsigned char 
 21447 ;; Return value:  Size  Location     Type
 21448 ;;                  1    wreg      unsigned char 
 21449 ;; Registers used:
 21450 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 21451 ;; Tracked objects:
 21452 ;;		On entry : 0/0
 21453 ;;		On exit  : 0/0
 21454 ;;		Unchanged: 0/0
 21455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21456 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21457 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21458 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21459 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21460 ;;Total ram usage:       10 bytes
 21461 ;; Hardware stack levels used:    1
 21462 ;; Hardware stack levels required when called:   12
 21463 ;; This function calls:
 21464 ;;		___lldiv
 21465 ;;		___wmul
 21466 ;; This function is called by:
 21467 ;;		_OLED_updateHandler
 21468 ;; This function uses a non-reentrant model
 21469 ;;
 21470                           
 21471                           	psect	text75
 21472  01B0A6                     __ptext75:
 21473                           	opt callstack 0
 21474  01B0A6                     _getDaysFromOnTime:
 21475                           	opt callstack 17
 21476                           
 21477                           ;heartbeat_timer.c: 185: uint8_t years, days;;heartbeat_timer.c: 186: years = input_seco
      +                          nds / (60 * 60 * 24 * 365);
 21478                           
 21479                           ;incstack = 0
 21480  01B0A6  C20D  F200         	movff	getDaysFromOnTime@input_seconds,___lldiv@dividend
 21481  01B0AA  C20E  F201         	movff	getDaysFromOnTime@input_seconds+1,___lldiv@dividend+1
 21482  01B0AE  C20F  F202         	movff	getDaysFromOnTime@input_seconds+2,___lldiv@dividend+2
 21483  01B0B2  C210  F203         	movff	getDaysFromOnTime@input_seconds+3,___lldiv@dividend+3
 21484  01B0B6  0E80               	movlw	128
 21485  01B0B8  0102               	movlb	2	; () banked
 21486  01B0BA  6F04               	movwf	___lldiv@divisor& (0+255),b
 21487  01B0BC  0E33               	movlw	51
 21488  01B0BE  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21489  01B0C0  0E00               	movlw	0
 21490  01B0C2  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21491  01B0C4  0E00               	movlw	0
 21492  01B0C6  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21493  01B0C8  EC69  F0D9         	call	___lldiv	;wreg free
 21494  01B0CC  0102               	movlb	2	; () banked
 21495  01B0CE  5100               	movf	?___lldiv& (0+255),w,b
 21496  01B0D0  6F16               	movwf	getDaysFromOnTime@years& (0+255),b
 21497                           
 21498                           ; BSR set to: 2
 21499                           ;heartbeat_timer.c: 187: input_seconds -= years * (60 * 60 * 24 * 365);
 21500  01B0D2  C216  F200         	movff	getDaysFromOnTime@years,___wmul@multiplier
 21501  01B0D6  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 21502  01B0D8  0E33               	movlw	51
 21503  01B0DA  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21504  01B0DC  0E80               	movlw	128
 21505  01B0DE  6F02               	movwf	___wmul@multiplicand& (0+255),b
 21506  01B0E0  EC79  F0E2         	call	___wmul	;wreg free
 21507  01B0E4  0102               	movlb	2	; () banked
 21508  01B0E6  C200  F211         	movff	?___wmul,??_getDaysFromOnTime
 21509  01B0EA  C201  F212         	movff	?___wmul+1,??_getDaysFromOnTime+1
 21510  01B0EE  0E00               	movlw	0
 21511  01B0F0  BF12               	btfsc	(??_getDaysFromOnTime+1)& (0+255),7,b
 21512  01B0F2  0EFF               	movlw	255
 21513  01B0F4  6F13               	movwf	(??_getDaysFromOnTime+2)& (0+255),b
 21514  01B0F6  6F14               	movwf	(??_getDaysFromOnTime+3)& (0+255),b
 21515  01B0F8  5111               	movf	??_getDaysFromOnTime& (0+255),w,b
 21516  01B0FA  5F0D               	subwf	getDaysFromOnTime@input_seconds& (0+255),f,b
 21517  01B0FC  5112               	movf	(??_getDaysFromOnTime+1)& (0+255),w,b
 21518  01B0FE  5B0E               	subwfb	(getDaysFromOnTime@input_seconds+1)& (0+255),f,b
 21519  01B100  5113               	movf	(??_getDaysFromOnTime+2)& (0+255),w,b
 21520  01B102  5B0F               	subwfb	(getDaysFromOnTime@input_seconds+2)& (0+255),f,b
 21521  01B104  5114               	movf	(??_getDaysFromOnTime+3)& (0+255),w,b
 21522  01B106  5B10               	subwfb	(getDaysFromOnTime@input_seconds+3)& (0+255),f,b
 21523                           
 21524                           ; BSR set to: 2
 21525                           ;heartbeat_timer.c: 188: return days = input_seconds / (60 * 60 * 24);
 21526  01B108  C20D  F200         	movff	getDaysFromOnTime@input_seconds,___lldiv@dividend
 21527  01B10C  C20E  F201         	movff	getDaysFromOnTime@input_seconds+1,___lldiv@dividend+1
 21528  01B110  C20F  F202         	movff	getDaysFromOnTime@input_seconds+2,___lldiv@dividend+2
 21529  01B114  C210  F203         	movff	getDaysFromOnTime@input_seconds+3,___lldiv@dividend+3
 21530  01B118  0E80               	movlw	128
 21531  01B11A  6F04               	movwf	___lldiv@divisor& (0+255),b
 21532  01B11C  0E51               	movlw	81
 21533  01B11E  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21534  01B120  0E00               	movlw	0
 21535  01B122  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21536  01B124  0E00               	movlw	0
 21537  01B126  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21538  01B128  EC69  F0D9         	call	___lldiv	;wreg free
 21539  01B12C  0102               	movlb	2	; () banked
 21540  01B12E  5100               	movf	?___lldiv& (0+255),w,b
 21541  01B130  6F15               	movwf	getDaysFromOnTime@days& (0+255),b
 21542  01B132  5115               	movf	getDaysFromOnTime@days& (0+255),w,b
 21543                           
 21544                           ; BSR set to: 2
 21545  01B134  0012               	return		;funcret
 21546  01B136                     __end_of_getDaysFromOnTime:
 21547                           	opt callstack 0
 21548                           
 21549 ;; *************** function _getCauseOfResetStringSmall *****************
 21550 ;; Defined at:
 21551 ;;		line 118 in file "cause_of_reset.c"
 21552 ;; Parameters:    Size  Location     Type
 21553 ;;  r               1    wreg     enum E9577
 21554 ;; Auto vars:     Size  Location     Type
 21555 ;;  r               1    2[BANK2 ] enum E9577
 21556 ;; Return value:  Size  Location     Type
 21557 ;;                  2    0[BANK2 ] PTR inline unsigned char
 21558 ;; Registers used:
 21559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21560 ;; Tracked objects:
 21561 ;;		On entry : 0/0
 21562 ;;		On exit  : 0/0
 21563 ;;		Unchanged: 0/0
 21564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21565 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21566 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21568 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21569 ;;Total ram usage:        3 bytes
 21570 ;; Hardware stack levels used:    1
 21571 ;; Hardware stack levels required when called:   11
 21572 ;; This function calls:
 21573 ;;		Nothing
 21574 ;; This function is called by:
 21575 ;;		_OLED_updateHandler
 21576 ;; This function uses a non-reentrant model
 21577 ;;
 21578                           
 21579                           	psect	text76
 21580  01C366                     __ptext76:
 21581                           	opt callstack 0
 21582  01C366                     _getCauseOfResetStringSmall:
 21583                           	opt callstack 18
 21584                           
 21585                           ; BSR set to: 2
 21586                           ;incstack = 0
 21587                           ;getCauseOfResetStringSmall@r stored from wreg
 21588  01C366  0102               	movlb	2	; () banked
 21589  01C368  6F02               	movwf	getCauseOfResetStringSmall@r& (0+255),b
 21590                           
 21591                           ;cause_of_reset.c: 121: static char *strings[] = {;cause_of_reset.c: 122: "Undefined",;c
      +                          ause_of_reset.c: 123: "POR Reset",;cause_of_reset.c: 124: "BOR Reset",;cause_of_reset.c:
      +                           125: "MCLR Reset",;cause_of_reset.c: 126: "WDT Reset",;cause_of_reset.c: 127: "WWDT Res
      +                          et",;cause_of_reset.c: 128: "RESET Executed",;cause_of_reset.c: 129: "STOF Reset",;cause
      +                          _of_reset.c: 130: "STUF Reset",;cause_of_reset.c: 131: };;cause_of_reset.c: 134: if (r <
      +                          = 8) {
 21592  01C36A  0E09               	movlw	9
 21593  01C36C  0102               	movlb	2	; () banked
 21594  01C36E  6102               	cpfslt	getCauseOfResetStringSmall@r& (0+255),b
 21595  01C370  D00D               	goto	l21110
 21596                           
 21597                           ; BSR set to: 2
 21598                           ;cause_of_reset.c: 136: return strings[r];
 21599  01C372  5102               	movf	getCauseOfResetStringSmall@r& (0+255),w,b
 21600  01C374  0D02               	mullw	2
 21601  01C376  0EED               	movlw	low getCauseOfResetStringSmall@strings
 21602  01C378  24F3               	addwf	prodl,w,c
 21603  01C37A  6ED9               	movwf	fsr2l,c
 21604  01C37C  0E02               	movlw	high getCauseOfResetStringSmall@strings
 21605  01C37E  20F4               	addwfc	prodh,w,c
 21606  01C380  6EDA               	movwf	fsr2h,c
 21607  01C382  CFDE F200          	movff	postinc2,?_getCauseOfResetStringSmall
 21608  01C386  CFDD F201          	movff	postdec2,?_getCauseOfResetStringSmall+1
 21609  01C38A  0012               	return	
 21610  01C38C                     l21110:
 21611                           
 21612                           ; BSR set to: 2
 21613                           ;cause_of_reset.c: 140: else {;cause_of_reset.c: 142: return "Undefined";
 21614  01C38C  0EB9               	movlw	low STR_20
 21615  01C38E  6F00               	movwf	?_getCauseOfResetStringSmall& (0+255),b
 21616  01C390  0EFE               	movlw	high STR_20
 21617  01C392  6F01               	movwf	(?_getCauseOfResetStringSmall+1)& (0+255),b
 21618                           
 21619                           ; BSR set to: 2
 21620  01C394  0012               	return		;funcret
 21621  01C396                     __end_of_getCauseOfResetStringSmall:
 21622                           	opt callstack 0
 21623                           
 21624 ;; *************** function _floatToEngineeringFormat *****************
 21625 ;; Defined at:
 21626 ;;		line 416 in file "ring_buffer_LUT.c"
 21627 ;; Parameters:    Size  Location     Type
 21628 ;;  input_value     4  163[BANK2 ] float 
 21629 ;; Auto vars:     Size  Location     Type
 21630 ;;  sign            4  175[BANK2 ] float 
 21631 ;;  res             2  179[BANK2 ] PTR unsigned char 
 21632 ;;		 -> floatToEngineeringFormat@result(20), 
 21633 ;; Return value:  Size  Location     Type
 21634 ;;                  2  163[BANK2 ] PTR unsigned char 
 21635 ;; Registers used:
 21636 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21637 ;; Tracked objects:
 21638 ;;		On entry : 0/0
 21639 ;;		On exit  : 0/0
 21640 ;;		Unchanged: 0/0
 21641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21642 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21643 ;;      Locals:         0       0       0      18       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21645 ;;      Totals:         0       0       0      22       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21646 ;;Total ram usage:       22 bytes
 21647 ;; Hardware stack levels used:    1
 21648 ;; Hardware stack levels required when called:   15
 21649 ;; This function calls:
 21650 ;;		___fldiv
 21651 ;;		___fleq
 21652 ;;		___flge
 21653 ;;		___flmul
 21654 ;;		___fltol
 21655 ;;		___xxtofl
 21656 ;;		_abs
 21657 ;;		_sprintf
 21658 ;; This function is called by:
 21659 ;;		_OLED_updateHandler
 21660 ;;		_printCurrentMeasurements
 21661 ;; This function uses a non-reentrant model
 21662 ;;
 21663                           
 21664                           	psect	text77
 21665  0149F6                     __ptext77:
 21666                           	opt callstack 0
 21667  0149F6                     _floatToEngineeringFormat:
 21668                           	opt callstack 12
 21669                           
 21670                           ;ring_buffer_LUT.c: 418: static unsigned char result[20];;ring_buffer_LUT.c: 419: unsign
      +                          ed char *res = result;
 21671                           
 21672                           ; BSR set to: 2
 21673                           ;incstack = 0
 21674  0149F6  0EAC               	movlw	low floatToEngineeringFormat@result
 21675  0149F8  0102               	movlb	2	; () banked
 21676  0149FA  6FB3               	movwf	floatToEngineeringFormat@res& (0+255),b
 21677  0149FC  0E03               	movlw	high floatToEngineeringFormat@result
 21678  0149FE  6FB4               	movwf	(floatToEngineeringFormat@res+1)& (0+255),b
 21679                           
 21680                           ; BSR set to: 2
 21681                           ;ring_buffer_LUT.c: 421: float sign = (input_value > 0.0) ? 1.0 : ((input_value < 0.0) ?
      +                           -1.0 : 0);
 21682  014A00  0E00               	movlw	0
 21683  014A02  6F4C               	movwf	___flge@ff1& (0+255),b
 21684  014A04  0E00               	movlw	0
 21685  014A06  6F4D               	movwf	(___flge@ff1+1)& (0+255),b
 21686  014A08  0E00               	movlw	0
 21687  014A0A  6F4E               	movwf	(___flge@ff1+2)& (0+255),b
 21688  014A0C  0E00               	movlw	0
 21689  014A0E  6F4F               	movwf	(___flge@ff1+3)& (0+255),b
 21690  014A10  C2A3  F250         	movff	floatToEngineeringFormat@input_value,___flge@ff2
 21691  014A14  C2A4  F251         	movff	floatToEngineeringFormat@input_value+1,___flge@ff2+1
 21692  014A18  C2A5  F252         	movff	floatToEngineeringFormat@input_value+2,___flge@ff2+2
 21693  014A1C  C2A6  F253         	movff	floatToEngineeringFormat@input_value+3,___flge@ff2+3
 21694  014A20  EC63  F0D3         	call	___flge	;wreg free
 21695  014A24  0102               	movlb	2	; () banked
 21696  014A26  A0D8               	btfss	status,0,c
 21697  014A28  D01B               	goto	l19450
 21698                           
 21699                           ; BSR set to: 2
 21700  014A2A  BFA6               	btfsc	(floatToEngineeringFormat@input_value+3)& (0+255),7,b
 21701  014A2C  D008               	goto	l19446
 21702                           
 21703                           ; BSR set to: 2
 21704  014A2E  0E00               	movlw	0
 21705  014A30  6FAB               	movwf	_floatToEngineeringFormat$4523& (0+255),b
 21706  014A32  0E00               	movlw	0
 21707  014A34  6FAC               	movwf	(_floatToEngineeringFormat$4523+1)& (0+255),b
 21708  014A36  0E00               	movlw	0
 21709  014A38  6FAD               	movwf	(_floatToEngineeringFormat$4523+2)& (0+255),b
 21710  014A3A  0E00               	movlw	0
 21711  014A3C  D007               	goto	L6
 21712  014A3E                     l19446:
 21713                           
 21714                           ; BSR set to: 2
 21715  014A3E  0E00               	movlw	0
 21716  014A40  6FAB               	movwf	_floatToEngineeringFormat$4523& (0+255),b
 21717  014A42  0E00               	movlw	0
 21718  014A44  6FAC               	movwf	(_floatToEngineeringFormat$4523+1)& (0+255),b
 21719  014A46  0E80               	movlw	128
 21720  014A48  6FAD               	movwf	(_floatToEngineeringFormat$4523+2)& (0+255),b
 21721  014A4A  0EBF               	movlw	191
 21722  014A4C                     L6:
 21723  014A4C  6FAE               	movwf	(_floatToEngineeringFormat$4523+3)& (0+255),b
 21724                           
 21725                           ; BSR set to: 2
 21726  014A4E  C2AB  F2A7         	movff	_floatToEngineeringFormat$4523,_floatToEngineeringFormat$4522
 21727  014A52  C2AC  F2A8         	movff	_floatToEngineeringFormat$4523+1,_floatToEngineeringFormat$4522+1
 21728  014A56  C2AD  F2A9         	movff	_floatToEngineeringFormat$4523+2,_floatToEngineeringFormat$4522+2
 21729  014A5A  C2AE  F2AA         	movff	_floatToEngineeringFormat$4523+3,_floatToEngineeringFormat$4522+3
 21730  014A5E  D008               	goto	l19452
 21731  014A60                     l19450:
 21732                           
 21733                           ; BSR set to: 2
 21734  014A60  0E00               	movlw	0
 21735  014A62  6FA7               	movwf	_floatToEngineeringFormat$4522& (0+255),b
 21736  014A64  0E00               	movlw	0
 21737  014A66  6FA8               	movwf	(_floatToEngineeringFormat$4522+1)& (0+255),b
 21738  014A68  0E80               	movlw	128
 21739  014A6A  6FA9               	movwf	(_floatToEngineeringFormat$4522+2)& (0+255),b
 21740  014A6C  0E3F               	movlw	63
 21741  014A6E  6FAA               	movwf	(_floatToEngineeringFormat$4522+3)& (0+255),b
 21742  014A70                     l19452:
 21743                           
 21744                           ; BSR set to: 2
 21745  014A70  C2A7  F2AF         	movff	_floatToEngineeringFormat$4522,floatToEngineeringFormat@sign
 21746  014A74  C2A8  F2B0         	movff	_floatToEngineeringFormat$4522+1,floatToEngineeringFormat@sign+1
 21747  014A78  C2A9  F2B1         	movff	_floatToEngineeringFormat$4522+2,floatToEngineeringFormat@sign+2
 21748  014A7C  C2AA  F2B2         	movff	_floatToEngineeringFormat$4522+3,floatToEngineeringFormat@sign+3
 21749                           
 21750                           ; BSR set to: 2
 21751                           ;ring_buffer_LUT.c: 423: if (abs(input_value) >= 1000000.0) sprintf(res, "+%0.3f M", inp
      +                          ut_value * sign / 1000000.0);
 21752  014A80  C2A3  F230         	movff	floatToEngineeringFormat@input_value,___fltol@f1
 21753  014A84  C2A4  F231         	movff	floatToEngineeringFormat@input_value+1,___fltol@f1+1
 21754  014A88  C2A5  F232         	movff	floatToEngineeringFormat@input_value+2,___fltol@f1+2
 21755  014A8C  C2A6  F233         	movff	floatToEngineeringFormat@input_value+3,___fltol@f1+3
 21756  014A90  EC61  F0D5         	call	___fltol	;wreg free
 21757  014A94  C230  F23A         	movff	?___fltol,abs@a
 21758  014A98  C231  F23B         	movff	?___fltol+1,abs@a+1
 21759  014A9C  EC26  F0E2         	call	_abs	;wreg free
 21760  014AA0  0102               	movlb	2	; () banked
 21761  014AA2  C23A  F23E         	movff	?_abs,___xxtofl@val
 21762  014AA6  C23B  F23F         	movff	?_abs+1,___xxtofl@val+1
 21763  014AAA  0E00               	movlw	0
 21764  014AAC  BF3F               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 21765  014AAE  0EFF               	movlw	-1
 21766  014AB0  6F40               	movwf	(___xxtofl@val+2)& (0+255),b
 21767  014AB2  6F41               	movwf	(___xxtofl@val+3)& (0+255),b
 21768  014AB4  0E01               	movlw	1
 21769  014AB6  EC08  F0CE         	call	___xxtofl
 21770  014ABA  C23E  F24C         	movff	?___xxtofl,___flge@ff1
 21771  014ABE  C23F  F24D         	movff	?___xxtofl+1,___flge@ff1+1
 21772  014AC2  C240  F24E         	movff	?___xxtofl+2,___flge@ff1+2
 21773  014AC6  C241  F24F         	movff	?___xxtofl+3,___flge@ff1+3
 21774  014ACA  0E00               	movlw	0
 21775  014ACC  0102               	movlb	2	; () banked
 21776  014ACE  6F50               	movwf	___flge@ff2& (0+255),b
 21777  014AD0  0E24               	movlw	36
 21778  014AD2  6F51               	movwf	(___flge@ff2+1)& (0+255),b
 21779  014AD4  0E74               	movlw	116
 21780  014AD6  6F52               	movwf	(___flge@ff2+2)& (0+255),b
 21781  014AD8  0E49               	movlw	73
 21782  014ADA  6F53               	movwf	(___flge@ff2+3)& (0+255),b
 21783  014ADC  EC63  F0D3         	call	___flge	;wreg free
 21784  014AE0  0102               	movlb	2	; () banked
 21785  014AE2  A0D8               	btfss	status,0,c
 21786  014AE4  D041               	goto	l19460
 21787                           
 21788                           ; BSR set to: 2
 21789  014AE6  C2AF  F212         	movff	floatToEngineeringFormat@sign,___flmul@a
 21790  014AEA  C2B0  F213         	movff	floatToEngineeringFormat@sign+1,___flmul@a+1
 21791  014AEE  C2B1  F214         	movff	floatToEngineeringFormat@sign+2,___flmul@a+2
 21792  014AF2  C2B2  F215         	movff	floatToEngineeringFormat@sign+3,___flmul@a+3
 21793  014AF6  C2A3  F20E         	movff	floatToEngineeringFormat@input_value,___flmul@b
 21794  014AFA  C2A4  F20F         	movff	floatToEngineeringFormat@input_value+1,___flmul@b+1
 21795  014AFE  C2A5  F210         	movff	floatToEngineeringFormat@input_value+2,___flmul@b+2
 21796  014B02  C2A6  F211         	movff	floatToEngineeringFormat@input_value+3,___flmul@b+3
 21797  014B06  ECFC  F0B4         	call	___flmul	;wreg free
 21798  014B0A  C20E  F227         	movff	?___flmul,___fldiv@b
 21799  014B0E  C20F  F228         	movff	?___flmul+1,___fldiv@b+1
 21800  014B12  C210  F229         	movff	?___flmul+2,___fldiv@b+2
 21801  014B16  C211  F22A         	movff	?___flmul+3,___fldiv@b+3
 21802  014B1A  0E00               	movlw	0
 21803  014B1C  0102               	movlb	2	; () banked
 21804  014B1E  6F2B               	movwf	___fldiv@a& (0+255),b
 21805  014B20  0E24               	movlw	36
 21806  014B22  6F2C               	movwf	(___fldiv@a+1)& (0+255),b
 21807  014B24  0E74               	movlw	116
 21808  014B26  6F2D               	movwf	(___fldiv@a+2)& (0+255),b
 21809  014B28  0E49               	movlw	73
 21810  014B2A  6F2E               	movwf	(___fldiv@a+3)& (0+255),b
 21811  014B2C  EC46  F0C1         	call	___fldiv	;wreg free
 21812  014B30  C227  F2B5         	movff	?___fldiv,_floatToEngineeringFormat$6025
 21813  014B34  C228  F2B6         	movff	?___fldiv+1,_floatToEngineeringFormat$6025+1
 21814  014B38  C229  F2B7         	movff	?___fldiv+2,_floatToEngineeringFormat$6025+2
 21815  014B3C  C22A  F2B8         	movff	?___fldiv+3,_floatToEngineeringFormat$6025+3
 21816  014B40  C2B3  F290         	movff	floatToEngineeringFormat@res,sprintf@wh
 21817  014B44  C2B4  F291         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 21818  014B48  0ECD               	movlw	low STR_293
 21819  014B4A  0102               	movlb	2	; () banked
 21820  014B4C  6F92               	movwf	sprintf@f& (0+255),b
 21821  014B4E  0EFE               	movlw	high STR_293
 21822  014B50  6F93               	movwf	(sprintf@f+1)& (0+255),b
 21823  014B52  C2B5  F294         	movff	_floatToEngineeringFormat$6025,?_sprintf+4
 21824  014B56  C2B6  F295         	movff	_floatToEngineeringFormat$6025+1,?_sprintf+5
 21825  014B5A  C2B7  F296         	movff	_floatToEngineeringFormat$6025+2,?_sprintf+6
 21826  014B5E  C2B8  F297         	movff	_floatToEngineeringFormat$6025+3,?_sprintf+7
 21827  014B62  EC1B  F0DE         	call	_sprintf	;wreg free
 21828  014B66  D263               	goto	l2168
 21829  014B68                     l19460:
 21830                           
 21831                           ; BSR set to: 2
 21832                           ;ring_buffer_LUT.c: 424: else if (abs(input_value) >= 1000.0) sprintf(res, "+%0.3f k", i
      +                          nput_value * sign / 1000.0);
 21833  014B68  C2A3  F230         	movff	floatToEngineeringFormat@input_value,___fltol@f1
 21834  014B6C  C2A4  F231         	movff	floatToEngineeringFormat@input_value+1,___fltol@f1+1
 21835  014B70  C2A5  F232         	movff	floatToEngineeringFormat@input_value+2,___fltol@f1+2
 21836  014B74  C2A6  F233         	movff	floatToEngineeringFormat@input_value+3,___fltol@f1+3
 21837  014B78  EC61  F0D5         	call	___fltol	;wreg free
 21838  014B7C  C230  F23A         	movff	?___fltol,abs@a
 21839  014B80  C231  F23B         	movff	?___fltol+1,abs@a+1
 21840  014B84  EC26  F0E2         	call	_abs	;wreg free
 21841  014B88  0102               	movlb	2	; () banked
 21842  014B8A  C23A  F23E         	movff	?_abs,___xxtofl@val
 21843  014B8E  C23B  F23F         	movff	?_abs+1,___xxtofl@val+1
 21844  014B92  0E00               	movlw	0
 21845  014B94  BF3F               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 21846  014B96  0EFF               	movlw	-1
 21847  014B98  6F40               	movwf	(___xxtofl@val+2)& (0+255),b
 21848  014B9A  6F41               	movwf	(___xxtofl@val+3)& (0+255),b
 21849  014B9C  0E01               	movlw	1
 21850  014B9E  EC08  F0CE         	call	___xxtofl
 21851  014BA2  C23E  F24C         	movff	?___xxtofl,___flge@ff1
 21852  014BA6  C23F  F24D         	movff	?___xxtofl+1,___flge@ff1+1
 21853  014BAA  C240  F24E         	movff	?___xxtofl+2,___flge@ff1+2
 21854  014BAE  C241  F24F         	movff	?___xxtofl+3,___flge@ff1+3
 21855  014BB2  0E00               	movlw	0
 21856  014BB4  0102               	movlb	2	; () banked
 21857  014BB6  6F50               	movwf	___flge@ff2& (0+255),b
 21858  014BB8  0E00               	movlw	0
 21859  014BBA  6F51               	movwf	(___flge@ff2+1)& (0+255),b
 21860  014BBC  0E7A               	movlw	122
 21861  014BBE  6F52               	movwf	(___flge@ff2+2)& (0+255),b
 21862  014BC0  0E44               	movlw	68
 21863  014BC2  6F53               	movwf	(___flge@ff2+3)& (0+255),b
 21864  014BC4  EC63  F0D3         	call	___flge	;wreg free
 21865  014BC8  0102               	movlb	2	; () banked
 21866  014BCA  A0D8               	btfss	status,0,c
 21867  014BCC  D041               	goto	l19466
 21868                           
 21869                           ; BSR set to: 2
 21870  014BCE  C2AF  F212         	movff	floatToEngineeringFormat@sign,___flmul@a
 21871  014BD2  C2B0  F213         	movff	floatToEngineeringFormat@sign+1,___flmul@a+1
 21872  014BD6  C2B1  F214         	movff	floatToEngineeringFormat@sign+2,___flmul@a+2
 21873  014BDA  C2B2  F215         	movff	floatToEngineeringFormat@sign+3,___flmul@a+3
 21874  014BDE  C2A3  F20E         	movff	floatToEngineeringFormat@input_value,___flmul@b
 21875  014BE2  C2A4  F20F         	movff	floatToEngineeringFormat@input_value+1,___flmul@b+1
 21876  014BE6  C2A5  F210         	movff	floatToEngineeringFormat@input_value+2,___flmul@b+2
 21877  014BEA  C2A6  F211         	movff	floatToEngineeringFormat@input_value+3,___flmul@b+3
 21878  014BEE  ECFC  F0B4         	call	___flmul	;wreg free
 21879  014BF2  C20E  F227         	movff	?___flmul,___fldiv@b
 21880  014BF6  C20F  F228         	movff	?___flmul+1,___fldiv@b+1
 21881  014BFA  C210  F229         	movff	?___flmul+2,___fldiv@b+2
 21882  014BFE  C211  F22A         	movff	?___flmul+3,___fldiv@b+3
 21883  014C02  0E00               	movlw	0
 21884  014C04  0102               	movlb	2	; () banked
 21885  014C06  6F2B               	movwf	___fldiv@a& (0+255),b
 21886  014C08  0E00               	movlw	0
 21887  014C0A  6F2C               	movwf	(___fldiv@a+1)& (0+255),b
 21888  014C0C  0E7A               	movlw	122
 21889  014C0E  6F2D               	movwf	(___fldiv@a+2)& (0+255),b
 21890  014C10  0E44               	movlw	68
 21891  014C12  6F2E               	movwf	(___fldiv@a+3)& (0+255),b
 21892  014C14  EC46  F0C1         	call	___fldiv	;wreg free
 21893  014C18  C227  F2B5         	movff	?___fldiv,_floatToEngineeringFormat$6025
 21894  014C1C  C228  F2B6         	movff	?___fldiv+1,_floatToEngineeringFormat$6025+1
 21895  014C20  C229  F2B7         	movff	?___fldiv+2,_floatToEngineeringFormat$6025+2
 21896  014C24  C22A  F2B8         	movff	?___fldiv+3,_floatToEngineeringFormat$6025+3
 21897  014C28  C2B3  F290         	movff	floatToEngineeringFormat@res,sprintf@wh
 21898  014C2C  C2B4  F291         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 21899  014C30  0ED6               	movlw	low STR_294
 21900  014C32  0102               	movlb	2	; () banked
 21901  014C34  6F92               	movwf	sprintf@f& (0+255),b
 21902  014C36  0EFE               	movlw	high STR_294
 21903  014C38  6F93               	movwf	(sprintf@f+1)& (0+255),b
 21904  014C3A  C2B5  F294         	movff	_floatToEngineeringFormat$6025,?_sprintf+4
 21905  014C3E  C2B6  F295         	movff	_floatToEngineeringFormat$6025+1,?_sprintf+5
 21906  014C42  C2B7  F296         	movff	_floatToEngineeringFormat$6025+2,?_sprintf+6
 21907  014C46  C2B8  F297         	movff	_floatToEngineeringFormat$6025+3,?_sprintf+7
 21908  014C4A  EC1B  F0DE         	call	_sprintf	;wreg free
 21909  014C4E  D1EF               	goto	l2168
 21910  014C50                     l19466:
 21911                           
 21912                           ; BSR set to: 2
 21913                           ;ring_buffer_LUT.c: 425: else if (abs(input_value) >= 1.0) sprintf(res, "+%0.3f ", input
      +                          _value * sign / 1.0);
 21914  014C50  C2A3  F230         	movff	floatToEngineeringFormat@input_value,___fltol@f1
 21915  014C54  C2A4  F231         	movff	floatToEngineeringFormat@input_value+1,___fltol@f1+1
 21916  014C58  C2A5  F232         	movff	floatToEngineeringFormat@input_value+2,___fltol@f1+2
 21917  014C5C  C2A6  F233         	movff	floatToEngineeringFormat@input_value+3,___fltol@f1+3
 21918  014C60  EC61  F0D5         	call	___fltol	;wreg free
 21919  014C64  C230  F23A         	movff	?___fltol,abs@a
 21920  014C68  C231  F23B         	movff	?___fltol+1,abs@a+1
 21921  014C6C  EC26  F0E2         	call	_abs	;wreg free
 21922  014C70  0102               	movlb	2	; () banked
 21923  014C72  C23A  F23E         	movff	?_abs,___xxtofl@val
 21924  014C76  C23B  F23F         	movff	?_abs+1,___xxtofl@val+1
 21925  014C7A  0E00               	movlw	0
 21926  014C7C  BF3F               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 21927  014C7E  0EFF               	movlw	-1
 21928  014C80  6F40               	movwf	(___xxtofl@val+2)& (0+255),b
 21929  014C82  6F41               	movwf	(___xxtofl@val+3)& (0+255),b
 21930  014C84  0E01               	movlw	1
 21931  014C86  EC08  F0CE         	call	___xxtofl
 21932  014C8A  C23E  F24C         	movff	?___xxtofl,___flge@ff1
 21933  014C8E  C23F  F24D         	movff	?___xxtofl+1,___flge@ff1+1
 21934  014C92  C240  F24E         	movff	?___xxtofl+2,___flge@ff1+2
 21935  014C96  C241  F24F         	movff	?___xxtofl+3,___flge@ff1+3
 21936  014C9A  0E00               	movlw	0
 21937  014C9C  0102               	movlb	2	; () banked
 21938  014C9E  6F50               	movwf	___flge@ff2& (0+255),b
 21939  014CA0  0E00               	movlw	0
 21940  014CA2  6F51               	movwf	(___flge@ff2+1)& (0+255),b
 21941  014CA4  0E80               	movlw	128
 21942  014CA6  6F52               	movwf	(___flge@ff2+2)& (0+255),b
 21943  014CA8  0E3F               	movlw	63
 21944  014CAA  6F53               	movwf	(___flge@ff2+3)& (0+255),b
 21945  014CAC  EC63  F0D3         	call	___flge	;wreg free
 21946  014CB0  0102               	movlb	2	; () banked
 21947  014CB2  A0D8               	btfss	status,0,c
 21948  014CB4  D041               	goto	l19472
 21949                           
 21950                           ; BSR set to: 2
 21951  014CB6  C2AF  F212         	movff	floatToEngineeringFormat@sign,___flmul@a
 21952  014CBA  C2B0  F213         	movff	floatToEngineeringFormat@sign+1,___flmul@a+1
 21953  014CBE  C2B1  F214         	movff	floatToEngineeringFormat@sign+2,___flmul@a+2
 21954  014CC2  C2B2  F215         	movff	floatToEngineeringFormat@sign+3,___flmul@a+3
 21955  014CC6  C2A3  F20E         	movff	floatToEngineeringFormat@input_value,___flmul@b
 21956  014CCA  C2A4  F20F         	movff	floatToEngineeringFormat@input_value+1,___flmul@b+1
 21957  014CCE  C2A5  F210         	movff	floatToEngineeringFormat@input_value+2,___flmul@b+2
 21958  014CD2  C2A6  F211         	movff	floatToEngineeringFormat@input_value+3,___flmul@b+3
 21959  014CD6  ECFC  F0B4         	call	___flmul	;wreg free
 21960  014CDA  C20E  F227         	movff	?___flmul,___fldiv@b
 21961  014CDE  C20F  F228         	movff	?___flmul+1,___fldiv@b+1
 21962  014CE2  C210  F229         	movff	?___flmul+2,___fldiv@b+2
 21963  014CE6  C211  F22A         	movff	?___flmul+3,___fldiv@b+3
 21964  014CEA  0E00               	movlw	0
 21965  014CEC  0102               	movlb	2	; () banked
 21966  014CEE  6F2B               	movwf	___fldiv@a& (0+255),b
 21967  014CF0  0E00               	movlw	0
 21968  014CF2  6F2C               	movwf	(___fldiv@a+1)& (0+255),b
 21969  014CF4  0E80               	movlw	128
 21970  014CF6  6F2D               	movwf	(___fldiv@a+2)& (0+255),b
 21971  014CF8  0E3F               	movlw	63
 21972  014CFA  6F2E               	movwf	(___fldiv@a+3)& (0+255),b
 21973  014CFC  EC46  F0C1         	call	___fldiv	;wreg free
 21974  014D00  C227  F2B5         	movff	?___fldiv,_floatToEngineeringFormat$6025
 21975  014D04  C228  F2B6         	movff	?___fldiv+1,_floatToEngineeringFormat$6025+1
 21976  014D08  C229  F2B7         	movff	?___fldiv+2,_floatToEngineeringFormat$6025+2
 21977  014D0C  C22A  F2B8         	movff	?___fldiv+3,_floatToEngineeringFormat$6025+3
 21978  014D10  C2B3  F290         	movff	floatToEngineeringFormat@res,sprintf@wh
 21979  014D14  C2B4  F291         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 21980  014D18  0E39               	movlw	low STR_295
 21981  014D1A  0102               	movlb	2	; () banked
 21982  014D1C  6F92               	movwf	sprintf@f& (0+255),b
 21983  014D1E  0EFF               	movlw	high STR_295
 21984  014D20  6F93               	movwf	(sprintf@f+1)& (0+255),b
 21985  014D22  C2B5  F294         	movff	_floatToEngineeringFormat$6025,?_sprintf+4
 21986  014D26  C2B6  F295         	movff	_floatToEngineeringFormat$6025+1,?_sprintf+5
 21987  014D2A  C2B7  F296         	movff	_floatToEngineeringFormat$6025+2,?_sprintf+6
 21988  014D2E  C2B8  F297         	movff	_floatToEngineeringFormat$6025+3,?_sprintf+7
 21989  014D32  EC1B  F0DE         	call	_sprintf	;wreg free
 21990  014D36  D17B               	goto	l2168
 21991  014D38                     l19472:
 21992                           
 21993                           ; BSR set to: 2
 21994                           ;ring_buffer_LUT.c: 426: else if (abs(input_value) >= 0.0001) sprintf(res, "+%0.3f m", i
      +                          nput_value * sign / 0.001);
 21995  014D38  C2A3  F230         	movff	floatToEngineeringFormat@input_value,___fltol@f1
 21996  014D3C  C2A4  F231         	movff	floatToEngineeringFormat@input_value+1,___fltol@f1+1
 21997  014D40  C2A5  F232         	movff	floatToEngineeringFormat@input_value+2,___fltol@f1+2
 21998  014D44  C2A6  F233         	movff	floatToEngineeringFormat@input_value+3,___fltol@f1+3
 21999  014D48  EC61  F0D5         	call	___fltol	;wreg free
 22000  014D4C  C230  F23A         	movff	?___fltol,abs@a
 22001  014D50  C231  F23B         	movff	?___fltol+1,abs@a+1
 22002  014D54  EC26  F0E2         	call	_abs	;wreg free
 22003  014D58  0102               	movlb	2	; () banked
 22004  014D5A  C23A  F23E         	movff	?_abs,___xxtofl@val
 22005  014D5E  C23B  F23F         	movff	?_abs+1,___xxtofl@val+1
 22006  014D62  0E00               	movlw	0
 22007  014D64  BF3F               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 22008  014D66  0EFF               	movlw	-1
 22009  014D68  6F40               	movwf	(___xxtofl@val+2)& (0+255),b
 22010  014D6A  6F41               	movwf	(___xxtofl@val+3)& (0+255),b
 22011  014D6C  0E01               	movlw	1
 22012  014D6E  EC08  F0CE         	call	___xxtofl
 22013  014D72  C23E  F24C         	movff	?___xxtofl,___flge@ff1
 22014  014D76  C23F  F24D         	movff	?___xxtofl+1,___flge@ff1+1
 22015  014D7A  C240  F24E         	movff	?___xxtofl+2,___flge@ff1+2
 22016  014D7E  C241  F24F         	movff	?___xxtofl+3,___flge@ff1+3
 22017  014D82  0E17               	movlw	23
 22018  014D84  0102               	movlb	2	; () banked
 22019  014D86  6F50               	movwf	___flge@ff2& (0+255),b
 22020  014D88  0EB7               	movlw	183
 22021  014D8A  6F51               	movwf	(___flge@ff2+1)& (0+255),b
 22022  014D8C  0ED1               	movlw	209
 22023  014D8E  6F52               	movwf	(___flge@ff2+2)& (0+255),b
 22024  014D90  0E38               	movlw	56
 22025  014D92  6F53               	movwf	(___flge@ff2+3)& (0+255),b
 22026  014D94  EC63  F0D3         	call	___flge	;wreg free
 22027  014D98  0102               	movlb	2	; () banked
 22028  014D9A  A0D8               	btfss	status,0,c
 22029  014D9C  D041               	goto	l19478
 22030                           
 22031                           ; BSR set to: 2
 22032  014D9E  C2AF  F212         	movff	floatToEngineeringFormat@sign,___flmul@a
 22033  014DA2  C2B0  F213         	movff	floatToEngineeringFormat@sign+1,___flmul@a+1
 22034  014DA6  C2B1  F214         	movff	floatToEngineeringFormat@sign+2,___flmul@a+2
 22035  014DAA  C2B2  F215         	movff	floatToEngineeringFormat@sign+3,___flmul@a+3
 22036  014DAE  C2A3  F20E         	movff	floatToEngineeringFormat@input_value,___flmul@b
 22037  014DB2  C2A4  F20F         	movff	floatToEngineeringFormat@input_value+1,___flmul@b+1
 22038  014DB6  C2A5  F210         	movff	floatToEngineeringFormat@input_value+2,___flmul@b+2
 22039  014DBA  C2A6  F211         	movff	floatToEngineeringFormat@input_value+3,___flmul@b+3
 22040  014DBE  ECFC  F0B4         	call	___flmul	;wreg free
 22041  014DC2  C20E  F227         	movff	?___flmul,___fldiv@b
 22042  014DC6  C20F  F228         	movff	?___flmul+1,___fldiv@b+1
 22043  014DCA  C210  F229         	movff	?___flmul+2,___fldiv@b+2
 22044  014DCE  C211  F22A         	movff	?___flmul+3,___fldiv@b+3
 22045  014DD2  0E6F               	movlw	111
 22046  014DD4  0102               	movlb	2	; () banked
 22047  014DD6  6F2B               	movwf	___fldiv@a& (0+255),b
 22048  014DD8  0E12               	movlw	18
 22049  014DDA  6F2C               	movwf	(___fldiv@a+1)& (0+255),b
 22050  014DDC  0E83               	movlw	131
 22051  014DDE  6F2D               	movwf	(___fldiv@a+2)& (0+255),b
 22052  014DE0  0E3A               	movlw	58
 22053  014DE2  6F2E               	movwf	(___fldiv@a+3)& (0+255),b
 22054  014DE4  EC46  F0C1         	call	___fldiv	;wreg free
 22055  014DE8  C227  F2B5         	movff	?___fldiv,_floatToEngineeringFormat$6025
 22056  014DEC  C228  F2B6         	movff	?___fldiv+1,_floatToEngineeringFormat$6025+1
 22057  014DF0  C229  F2B7         	movff	?___fldiv+2,_floatToEngineeringFormat$6025+2
 22058  014DF4  C22A  F2B8         	movff	?___fldiv+3,_floatToEngineeringFormat$6025+3
 22059  014DF8  C2B3  F290         	movff	floatToEngineeringFormat@res,sprintf@wh
 22060  014DFC  C2B4  F291         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 22061  014E00  0EDF               	movlw	low STR_296
 22062  014E02  0102               	movlb	2	; () banked
 22063  014E04  6F92               	movwf	sprintf@f& (0+255),b
 22064  014E06  0EFE               	movlw	high STR_296
 22065  014E08  6F93               	movwf	(sprintf@f+1)& (0+255),b
 22066  014E0A  C2B5  F294         	movff	_floatToEngineeringFormat$6025,?_sprintf+4
 22067  014E0E  C2B6  F295         	movff	_floatToEngineeringFormat$6025+1,?_sprintf+5
 22068  014E12  C2B7  F296         	movff	_floatToEngineeringFormat$6025+2,?_sprintf+6
 22069  014E16  C2B8  F297         	movff	_floatToEngineeringFormat$6025+3,?_sprintf+7
 22070  014E1A  EC1B  F0DE         	call	_sprintf	;wreg free
 22071  014E1E  D107               	goto	l2168
 22072  014E20                     l19478:
 22073                           
 22074                           ; BSR set to: 2
 22075                           ;ring_buffer_LUT.c: 427: else if (abs(input_value) >= 0.0000001) sprintf(res, "+%0.3f u"
      +                          , input_value * sign / 0.000001);
 22076  014E20  C2A3  F230         	movff	floatToEngineeringFormat@input_value,___fltol@f1
 22077  014E24  C2A4  F231         	movff	floatToEngineeringFormat@input_value+1,___fltol@f1+1
 22078  014E28  C2A5  F232         	movff	floatToEngineeringFormat@input_value+2,___fltol@f1+2
 22079  014E2C  C2A6  F233         	movff	floatToEngineeringFormat@input_value+3,___fltol@f1+3
 22080  014E30  EC61  F0D5         	call	___fltol	;wreg free
 22081  014E34  C230  F23A         	movff	?___fltol,abs@a
 22082  014E38  C231  F23B         	movff	?___fltol+1,abs@a+1
 22083  014E3C  EC26  F0E2         	call	_abs	;wreg free
 22084  014E40  0102               	movlb	2	; () banked
 22085  014E42  C23A  F23E         	movff	?_abs,___xxtofl@val
 22086  014E46  C23B  F23F         	movff	?_abs+1,___xxtofl@val+1
 22087  014E4A  0E00               	movlw	0
 22088  014E4C  BF3F               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 22089  014E4E  0EFF               	movlw	-1
 22090  014E50  6F40               	movwf	(___xxtofl@val+2)& (0+255),b
 22091  014E52  6F41               	movwf	(___xxtofl@val+3)& (0+255),b
 22092  014E54  0E01               	movlw	1
 22093  014E56  EC08  F0CE         	call	___xxtofl
 22094  014E5A  C23E  F24C         	movff	?___xxtofl,___flge@ff1
 22095  014E5E  C23F  F24D         	movff	?___xxtofl+1,___flge@ff1+1
 22096  014E62  C240  F24E         	movff	?___xxtofl+2,___flge@ff1+2
 22097  014E66  C241  F24F         	movff	?___xxtofl+3,___flge@ff1+3
 22098  014E6A  0E95               	movlw	149
 22099  014E6C  0102               	movlb	2	; () banked
 22100  014E6E  6F50               	movwf	___flge@ff2& (0+255),b
 22101  014E70  0EBF               	movlw	191
 22102  014E72  6F51               	movwf	(___flge@ff2+1)& (0+255),b
 22103  014E74  0ED6               	movlw	214
 22104  014E76  6F52               	movwf	(___flge@ff2+2)& (0+255),b
 22105  014E78  0E33               	movlw	51
 22106  014E7A  6F53               	movwf	(___flge@ff2+3)& (0+255),b
 22107  014E7C  EC63  F0D3         	call	___flge	;wreg free
 22108  014E80  0102               	movlb	2	; () banked
 22109  014E82  A0D8               	btfss	status,0,c
 22110  014E84  D041               	goto	l19484
 22111                           
 22112                           ; BSR set to: 2
 22113  014E86  C2AF  F212         	movff	floatToEngineeringFormat@sign,___flmul@a
 22114  014E8A  C2B0  F213         	movff	floatToEngineeringFormat@sign+1,___flmul@a+1
 22115  014E8E  C2B1  F214         	movff	floatToEngineeringFormat@sign+2,___flmul@a+2
 22116  014E92  C2B2  F215         	movff	floatToEngineeringFormat@sign+3,___flmul@a+3
 22117  014E96  C2A3  F20E         	movff	floatToEngineeringFormat@input_value,___flmul@b
 22118  014E9A  C2A4  F20F         	movff	floatToEngineeringFormat@input_value+1,___flmul@b+1
 22119  014E9E  C2A5  F210         	movff	floatToEngineeringFormat@input_value+2,___flmul@b+2
 22120  014EA2  C2A6  F211         	movff	floatToEngineeringFormat@input_value+3,___flmul@b+3
 22121  014EA6  ECFC  F0B4         	call	___flmul	;wreg free
 22122  014EAA  C20E  F227         	movff	?___flmul,___fldiv@b
 22123  014EAE  C20F  F228         	movff	?___flmul+1,___fldiv@b+1
 22124  014EB2  C210  F229         	movff	?___flmul+2,___fldiv@b+2
 22125  014EB6  C211  F22A         	movff	?___flmul+3,___fldiv@b+3
 22126  014EBA  0EBD               	movlw	189
 22127  014EBC  0102               	movlb	2	; () banked
 22128  014EBE  6F2B               	movwf	___fldiv@a& (0+255),b
 22129  014EC0  0E37               	movlw	55
 22130  014EC2  6F2C               	movwf	(___fldiv@a+1)& (0+255),b
 22131  014EC4  0E86               	movlw	134
 22132  014EC6  6F2D               	movwf	(___fldiv@a+2)& (0+255),b
 22133  014EC8  0E35               	movlw	53
 22134  014ECA  6F2E               	movwf	(___fldiv@a+3)& (0+255),b
 22135  014ECC  EC46  F0C1         	call	___fldiv	;wreg free
 22136  014ED0  C227  F2B5         	movff	?___fldiv,_floatToEngineeringFormat$6025
 22137  014ED4  C228  F2B6         	movff	?___fldiv+1,_floatToEngineeringFormat$6025+1
 22138  014ED8  C229  F2B7         	movff	?___fldiv+2,_floatToEngineeringFormat$6025+2
 22139  014EDC  C22A  F2B8         	movff	?___fldiv+3,_floatToEngineeringFormat$6025+3
 22140  014EE0  C2B3  F290         	movff	floatToEngineeringFormat@res,sprintf@wh
 22141  014EE4  C2B4  F291         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 22142  014EE8  0EF1               	movlw	low STR_297
 22143  014EEA  0102               	movlb	2	; () banked
 22144  014EEC  6F92               	movwf	sprintf@f& (0+255),b
 22145  014EEE  0EFE               	movlw	high STR_297
 22146  014EF0  6F93               	movwf	(sprintf@f+1)& (0+255),b
 22147  014EF2  C2B5  F294         	movff	_floatToEngineeringFormat$6025,?_sprintf+4
 22148  014EF6  C2B6  F295         	movff	_floatToEngineeringFormat$6025+1,?_sprintf+5
 22149  014EFA  C2B7  F296         	movff	_floatToEngineeringFormat$6025+2,?_sprintf+6
 22150  014EFE  C2B8  F297         	movff	_floatToEngineeringFormat$6025+3,?_sprintf+7
 22151  014F02  EC1B  F0DE         	call	_sprintf	;wreg free
 22152  014F06  D093               	goto	l2168
 22153  014F08                     l19484:
 22154                           
 22155                           ; BSR set to: 2
 22156                           ;ring_buffer_LUT.c: 428: else if (abs(input_value) >= 0.0000000001) sprintf(res, "+%0.3f
      +                           n", input_value * sign / 0.000000001);
 22157  014F08  C2A3  F230         	movff	floatToEngineeringFormat@input_value,___fltol@f1
 22158  014F0C  C2A4  F231         	movff	floatToEngineeringFormat@input_value+1,___fltol@f1+1
 22159  014F10  C2A5  F232         	movff	floatToEngineeringFormat@input_value+2,___fltol@f1+2
 22160  014F14  C2A6  F233         	movff	floatToEngineeringFormat@input_value+3,___fltol@f1+3
 22161  014F18  EC61  F0D5         	call	___fltol	;wreg free
 22162  014F1C  C230  F23A         	movff	?___fltol,abs@a
 22163  014F20  C231  F23B         	movff	?___fltol+1,abs@a+1
 22164  014F24  EC26  F0E2         	call	_abs	;wreg free
 22165  014F28  0102               	movlb	2	; () banked
 22166  014F2A  C23A  F23E         	movff	?_abs,___xxtofl@val
 22167  014F2E  C23B  F23F         	movff	?_abs+1,___xxtofl@val+1
 22168  014F32  0E00               	movlw	0
 22169  014F34  BF3F               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 22170  014F36  0EFF               	movlw	-1
 22171  014F38  6F40               	movwf	(___xxtofl@val+2)& (0+255),b
 22172  014F3A  6F41               	movwf	(___xxtofl@val+3)& (0+255),b
 22173  014F3C  0E01               	movlw	1
 22174  014F3E  EC08  F0CE         	call	___xxtofl
 22175  014F42  C23E  F24C         	movff	?___xxtofl,___flge@ff1
 22176  014F46  C23F  F24D         	movff	?___xxtofl+1,___flge@ff1+1
 22177  014F4A  C240  F24E         	movff	?___xxtofl+2,___flge@ff1+2
 22178  014F4E  C241  F24F         	movff	?___xxtofl+3,___flge@ff1+3
 22179  014F52  0EFF               	movlw	255
 22180  014F54  0102               	movlb	2	; () banked
 22181  014F56  6F50               	movwf	___flge@ff2& (0+255),b
 22182  014F58  0EE6               	movlw	230
 22183  014F5A  6F51               	movwf	(___flge@ff2+1)& (0+255),b
 22184  014F5C  0EDB               	movlw	219
 22185  014F5E  6F52               	movwf	(___flge@ff2+2)& (0+255),b
 22186  014F60  0E2E               	movlw	46
 22187  014F62  6F53               	movwf	(___flge@ff2+3)& (0+255),b
 22188  014F64  EC63  F0D3         	call	___flge	;wreg free
 22189  014F68  0102               	movlb	2	; () banked
 22190  014F6A  A0D8               	btfss	status,0,c
 22191  014F6C  D041               	goto	l19490
 22192                           
 22193                           ; BSR set to: 2
 22194  014F6E  C2AF  F212         	movff	floatToEngineeringFormat@sign,___flmul@a
 22195  014F72  C2B0  F213         	movff	floatToEngineeringFormat@sign+1,___flmul@a+1
 22196  014F76  C2B1  F214         	movff	floatToEngineeringFormat@sign+2,___flmul@a+2
 22197  014F7A  C2B2  F215         	movff	floatToEngineeringFormat@sign+3,___flmul@a+3
 22198  014F7E  C2A3  F20E         	movff	floatToEngineeringFormat@input_value,___flmul@b
 22199  014F82  C2A4  F20F         	movff	floatToEngineeringFormat@input_value+1,___flmul@b+1
 22200  014F86  C2A5  F210         	movff	floatToEngineeringFormat@input_value+2,___flmul@b+2
 22201  014F8A  C2A6  F211         	movff	floatToEngineeringFormat@input_value+3,___flmul@b+3
 22202  014F8E  ECFC  F0B4         	call	___flmul	;wreg free
 22203  014F92  C20E  F227         	movff	?___flmul,___fldiv@b
 22204  014F96  C20F  F228         	movff	?___flmul+1,___fldiv@b+1
 22205  014F9A  C210  F229         	movff	?___flmul+2,___fldiv@b+2
 22206  014F9E  C211  F22A         	movff	?___flmul+3,___fldiv@b+3
 22207  014FA2  0E5F               	movlw	95
 22208  014FA4  0102               	movlb	2	; () banked
 22209  014FA6  6F2B               	movwf	___fldiv@a& (0+255),b
 22210  014FA8  0E70               	movlw	112
 22211  014FAA  6F2C               	movwf	(___fldiv@a+1)& (0+255),b
 22212  014FAC  0E89               	movlw	137
 22213  014FAE  6F2D               	movwf	(___fldiv@a+2)& (0+255),b
 22214  014FB0  0E30               	movlw	48
 22215  014FB2  6F2E               	movwf	(___fldiv@a+3)& (0+255),b
 22216  014FB4  EC46  F0C1         	call	___fldiv	;wreg free
 22217  014FB8  C227  F2B5         	movff	?___fldiv,_floatToEngineeringFormat$6025
 22218  014FBC  C228  F2B6         	movff	?___fldiv+1,_floatToEngineeringFormat$6025+1
 22219  014FC0  C229  F2B7         	movff	?___fldiv+2,_floatToEngineeringFormat$6025+2
 22220  014FC4  C22A  F2B8         	movff	?___fldiv+3,_floatToEngineeringFormat$6025+3
 22221  014FC8  C2B3  F290         	movff	floatToEngineeringFormat@res,sprintf@wh
 22222  014FCC  C2B4  F291         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 22223  014FD0  0EE8               	movlw	low STR_298
 22224  014FD2  0102               	movlb	2	; () banked
 22225  014FD4  6F92               	movwf	sprintf@f& (0+255),b
 22226  014FD6  0EFE               	movlw	high STR_298
 22227  014FD8  6F93               	movwf	(sprintf@f+1)& (0+255),b
 22228  014FDA  C2B5  F294         	movff	_floatToEngineeringFormat$6025,?_sprintf+4
 22229  014FDE  C2B6  F295         	movff	_floatToEngineeringFormat$6025+1,?_sprintf+5
 22230  014FE2  C2B7  F296         	movff	_floatToEngineeringFormat$6025+2,?_sprintf+6
 22231  014FE6  C2B8  F297         	movff	_floatToEngineeringFormat$6025+3,?_sprintf+7
 22232  014FEA  EC1B  F0DE         	call	_sprintf	;wreg free
 22233  014FEE  D01F               	goto	l2168
 22234  014FF0                     l19490:
 22235                           
 22236                           ; BSR set to: 2
 22237                           ;ring_buffer_LUT.c: 429: else if (input_value == 0.0) sprintf(res, "0.0 ");
 22238  014FF0  C2A3  F200         	movff	floatToEngineeringFormat@input_value,___fleq@ff1
 22239  014FF4  C2A4  F201         	movff	floatToEngineeringFormat@input_value+1,___fleq@ff1+1
 22240  014FF8  C2A5  F202         	movff	floatToEngineeringFormat@input_value+2,___fleq@ff1+2
 22241  014FFC  C2A6  F203         	movff	floatToEngineeringFormat@input_value+3,___fleq@ff1+3
 22242  015000  0E00               	movlw	0
 22243  015002  6F04               	movwf	___fleq@ff2& (0+255),b
 22244  015004  0E00               	movlw	0
 22245  015006  6F05               	movwf	(___fleq@ff2+1)& (0+255),b
 22246  015008  0E00               	movlw	0
 22247  01500A  6F06               	movwf	(___fleq@ff2+2)& (0+255),b
 22248  01500C  0E00               	movlw	0
 22249  01500E  6F07               	movwf	(___fleq@ff2+3)& (0+255),b
 22250  015010  EC9B  F0D8         	call	___fleq	;wreg free
 22251  015014  0102               	movlb	2	; () banked
 22252  015016  A0D8               	btfss	status,0,c
 22253  015018  D00A               	goto	l2168
 22254                           
 22255                           ; BSR set to: 2
 22256  01501A  C2B3  F290         	movff	floatToEngineeringFormat@res,sprintf@wh
 22257  01501E  C2B4  F291         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 22258  015022  0E8F               	movlw	low STR_299
 22259  015024  6F92               	movwf	sprintf@f& (0+255),b
 22260  015026  0EFF               	movlw	high STR_299
 22261  015028  6F93               	movwf	(sprintf@f+1)& (0+255),b
 22262  01502A  EC1B  F0DE         	call	_sprintf	;wreg free
 22263  01502E                     l2168:
 22264                           
 22265                           ;ring_buffer_LUT.c: 431: return result;
 22266                           
 22267                           ; BSR set to: 2
 22268  01502E  0EAC               	movlw	low floatToEngineeringFormat@result
 22269  015030  0102               	movlb	2	; () banked
 22270  015032  6FA3               	movwf	?_floatToEngineeringFormat& (0+255),b
 22271  015034  0E03               	movlw	high floatToEngineeringFormat@result
 22272  015036  6FA4               	movwf	(?_floatToEngineeringFormat+1)& (0+255),b
 22273                           
 22274                           ; BSR set to: 2
 22275  015038  0012               	return		;funcret
 22276  01503A                     __end_of_floatToEngineeringFormat:
 22277                           	opt callstack 0
 22278                           
 22279 ;; *************** function _sprintf *****************
 22280 ;; Defined at:
 22281 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprintf.c"
 22282 ;; Parameters:    Size  Location     Type
 22283 ;;  wh              2  144[BANK2 ] PTR unsigned char 
 22284 ;;		 -> ftoa@buf(17), floatToEngineeringFormat@result(20), OLED_updateHandler@rev_id_str(17), OLED_updateHandler@dev_id_
      +str(17), 
 22285 ;;		 -> OLED_RAM_Buffer(68), getStringSecondsAsTime@buff(20), 
 22286 ;;  f               2  146[BANK2 ] PTR const unsigned char 
 22287 ;;		 -> STR_360(11), STR_299(5), STR_298(9), STR_297(9), 
 22288 ;;		 -> STR_296(9), STR_295(8), STR_294(9), STR_293(9), 
 22289 ;;		 -> STR_180(7), STR_178(5), STR_171(4), STR_166(4), 
 22290 ;;		 -> STR_161(11), STR_156(11), STR_155(11), STR_154(11), 
 22291 ;;		 -> STR_153(11), STR_152(9), STR_148(11), STR_146(11), 
 22292 ;;		 -> STR_145(11), STR_144(11), STR_143(11), STR_142(9), 
 22293 ;;		 -> STR_141(11), STR_140(9), STR_139(8), STR_138(9), 
 22294 ;;		 -> STR_137(8), STR_136(9), STR_132(5), STR_122(8), 
 22295 ;;		 -> STR_118(8), STR_114(8), STR_110(8), STR_106(9), 
 22296 ;;		 -> STR_101(8), STR_96(8), STR_92(8), STR_87(8), 
 22297 ;;		 -> STR_83(8), STR_79(8), STR_66(7), STR_64(5), 
 22298 ;;		 -> STR_57(11), STR_56(10), STR_55(13), STR_54(12), 
 22299 ;;		 -> STR_53(11), STR_52(10), STR_51(10), STR_50(9), 
 22300 ;;		 -> STR_49(11), STR_48(10), 
 22301 ;; Auto vars:     Size  Location     Type
 22302 ;;  pb              5  158[BANK2 ] struct __prbuf
 22303 ;;  ap              2  156[BANK2 ] PTR void [1]
 22304 ;;		 -> ?_sprintf(2), ?_printf(2), 
 22305 ;; Return value:  Size  Location     Type
 22306 ;;                  2  144[BANK2 ] int 
 22307 ;; Registers used:
 22308 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22309 ;; Tracked objects:
 22310 ;;		On entry : 0/0
 22311 ;;		On exit  : 0/0
 22312 ;;		Unchanged: 0/0
 22313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22314 ;;      Params:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22315 ;;      Locals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22317 ;;      Totals:         0       0       0      19       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22318 ;;Total ram usage:       19 bytes
 22319 ;; Hardware stack levels used:    1
 22320 ;; Hardware stack levels required when called:   14
 22321 ;; This function calls:
 22322 ;;		__doprnt
 22323 ;; This function is called by:
 22324 ;;		_getStringSecondsAsTime
 22325 ;;		_OLED_updateHandler
 22326 ;;		_floatToEngineeringFormat
 22327 ;;		_ftoa
 22328 ;; This function uses a non-reentrant model
 22329 ;;
 22330                           
 22331                           	psect	text78
 22332  01BC36                     __ptext78:
 22333                           	opt callstack 0
 22334  01BC36                     _sprintf:
 22335                           	opt callstack 12
 22336                           
 22337                           ; BSR set to: 2
 22338                           ;incstack = 0
 22339  01BC36  C290  F29E         	movff	sprintf@wh,sprintf@pb
 22340  01BC3A  C291  F29F         	movff	sprintf@wh+1,sprintf@pb+1
 22341  01BC3E  0E00               	movlw	0
 22342  01BC40  0102               	movlb	2	; () banked
 22343  01BC42  6FA0               	movwf	(sprintf@pb+2)& (0+255),b
 22344  01BC44  0E00               	movlw	0
 22345  01BC46  6FA1               	movwf	(sprintf@pb+3)& (0+255),b
 22346  01BC48  0E00               	movlw	0
 22347  01BC4A  6FA2               	movwf	(sprintf@pb+4)& (0+255),b
 22348  01BC4C  0E94               	movlw	low (?_sprintf+4)
 22349  01BC4E  6F9C               	movwf	sprintf@ap& (0+255),b
 22350  01BC50  0E02               	movlw	high (?_sprintf+4)
 22351  01BC52  6F9D               	movwf	(sprintf@ap+1)& (0+255),b
 22352                           
 22353                           ; BSR set to: 2
 22354  01BC54  0E9E               	movlw	low sprintf@pb
 22355  01BC56  6F58               	movwf	__doprnt@pb& (0+255),b
 22356  01BC58  0E02               	movlw	high sprintf@pb
 22357  01BC5A  6F59               	movwf	(__doprnt@pb+1)& (0+255),b
 22358  01BC5C  C292  F25A         	movff	sprintf@f,__doprnt@f
 22359  01BC60  C293  F25B         	movff	sprintf@f+1,__doprnt@f+1
 22360  01BC64  0E9C               	movlw	low sprintf@ap
 22361  01BC66  6F5C               	movwf	__doprnt@ap& (0+255),b
 22362  01BC68  0E02               	movlw	high sprintf@ap
 22363  01BC6A  6F5D               	movwf	(__doprnt@ap+1)& (0+255),b
 22364  01BC6C  EC00  F080         	call	__doprnt	;wreg free
 22365  01BC70  C29E  FFD9         	movff	sprintf@pb,fsr2l
 22366  01BC74  C29F  FFDA         	movff	sprintf@pb+1,fsr2h
 22367  01BC78  0E00               	movlw	0
 22368  01BC7A  6EDF               	movwf	indf2,c
 22369  01BC7C  0012               	return		;funcret
 22370  01BC7E                     __end_of_sprintf:
 22371                           	opt callstack 0
 22372                           
 22373 ;; *************** function __doprnt *****************
 22374 ;; Defined at:
 22375 ;;		line 466 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 22376 ;; Parameters:    Size  Location     Type
 22377 ;;  pb              2   88[BANK2 ] PTR struct __prbuf
 22378 ;;		 -> sprintf@pb(5), printf@pb(5), 
 22379 ;;  f               2   90[BANK2 ] PTR const unsigned char 
 22380 ;;		 -> STR_360(11), STR_357(60), STR_356(24), STR_355(24), 
 22381 ;;		 -> STR_354(24), STR_353(27), STR_352(20), STR_351(35), 
 22382 ;;		 -> STR_350(34), STR_349(37), STR_348(34), STR_347(36), 
 22383 ;;		 -> STR_346(35), STR_345(33), STR_344(35), STR_343(20), 
 22384 ;;		 -> STR_342(23), STR_341(20), STR_340(22), STR_339(21), 
 22385 ;;		 -> STR_338(19), STR_337(21), STR_336(27), STR_335(18), 
 22386 ;;		 -> STR_334(11), terminalTextAttributes@print_string(16), STR_304(4), STR_303(4), 
 22387 ;;		 -> STR_302(4), STR_301(4), STR_300(5), STR_299(5), 
 22388 ;;		 -> STR_298(9), STR_297(9), STR_296(9), STR_295(8), 
 22389 ;;		 -> STR_294(9), STR_293(9), STR_292(3), STR_291(39), 
 22390 ;;		 -> STR_290(96), STR_289(62), STR_288(34), STR_287(3), 
 22391 ;;		 -> STR_286(50), STR_285(56), STR_284(55), STR_283(27), 
 22392 ;;		 -> STR_282(3), STR_281(58), STR_280(40), STR_279(63), 
 22393 ;;		 -> STR_278(42), STR_277(36), STR_276(3), STR_275(61), 
 22394 ;;		 -> STR_274(3), STR_273(59), STR_272(3), STR_271(45), 
 22395 ;;		 -> STR_270(3), STR_269(58), STR_268(59), STR_267(20), 
 22396 ;;		 -> STR_266(3), STR_265(54), STR_264(52), STR_263(23), 
 22397 ;;		 -> STR_262(3), STR_261(43), STR_260(44), STR_259(23), 
 22398 ;;		 -> STR_258(48), STR_257(3), STR_256(50), STR_255(58), 
 22399 ;;		 -> STR_254(35), STR_253(32), STR_252(64), STR_251(30), 
 22400 ;;		 -> STR_250(31), STR_249(63), STR_248(33), STR_247(35), 
 22401 ;;		 -> STR_246(37), STR_245(40), STR_244(28), STR_243(46), 
 22402 ;;		 -> STR_242(31), STR_241(52), STR_240(14), STR_239(28), 
 22403 ;;		 -> STR_238(50), STR_237(29), STR_236(45), STR_235(88), 
 22404 ;;		 -> STR_234(37), STR_233(3), STR_232(30), STR_231(46), 
 22405 ;;		 -> STR_230(39), STR_229(62), STR_228(57), STR_227(559), 
 22406 ;;		 -> STR_226(22), STR_225(3), STR_223(3), STR_222(47), 
 22407 ;;		 -> STR_221(3), STR_218(24), STR_216(23), STR_214(23), 
 22408 ;;		 -> STR_212(3), STR_211(3), STR_210(54), STR_209(3), 
 22409 ;;		 -> STR_208(56), STR_207(3), STR_206(60), STR_205(61), 
 22410 ;;		 -> STR_204(3), STR_203(62), STR_202(3), STR_201(50), 
 22411 ;;		 -> STR_200(3), STR_199(45), STR_198(3), STR_196(54), 
 22412 ;;		 -> STR_194(4), STR_193(5), STR_191(4), STR_190(5), 
 22413 ;;		 -> STR_180(7), STR_178(5), STR_171(4), STR_166(4), 
 22414 ;;		 -> STR_161(11), STR_156(11), STR_155(11), STR_154(11), 
 22415 ;;		 -> STR_153(11), STR_152(9), STR_148(11), STR_146(11), 
 22416 ;;		 -> STR_145(11), STR_144(11), STR_143(11), STR_142(9), 
 22417 ;;		 -> STR_141(11), STR_140(9), STR_139(8), STR_138(9), 
 22418 ;;		 -> STR_137(8), STR_136(9), STR_132(5), STR_122(8), 
 22419 ;;		 -> STR_118(8), STR_114(8), STR_110(8), STR_106(9), 
 22420 ;;		 -> STR_101(8), STR_96(8), STR_92(8), STR_87(8), 
 22421 ;;		 -> STR_83(8), STR_79(8), STR_66(7), STR_64(5), 
 22422 ;;		 -> STR_57(11), STR_56(10), STR_55(13), STR_54(12), 
 22423 ;;		 -> STR_53(11), STR_52(10), STR_51(10), STR_50(9), 
 22424 ;;		 -> STR_49(11), STR_48(10), STR_10(47), STR_9(30), 
 22425 ;;		 -> STR_8(46), STR_7(39), STR_6(62), STR_5(57), 
 22426 ;;		 -> STR_4(39), STR_3(44), STR_2(52), STR_1(4), 
 22427 ;;  ap              2   92[BANK2 ] PTR PTR void 
 22428 ;;		 -> sprintf@ap(2), printf@ap(2), 
 22429 ;; Auto vars:     Size  Location     Type
 22430 ;;  idx             1  102[BANK2 ] unsigned char 
 22431 ;;  val             4  133[BANK2 ] unsigned long 
 22432 ;;  fval            4  129[BANK2 ] unsigned long 
 22433 ;;  tmpval          4  125[BANK2 ] struct .
 22434 ;;  flag            2  141[BANK2 ] unsigned short 
 22435 ;;  prec            2  139[BANK2 ] int 
 22436 ;;  width           2  137[BANK2 ] int 
 22437 ;;  eexp            2  123[BANK2 ] int 
 22438 ;;  len             2  121[BANK2 ] unsigned int 
 22439 ;;  cp              2  119[BANK2 ] PTR const unsigned char 
 22440 ;;		 -> ?_sprintf(2), ?_printf(2), ftoa@buf(17), STR_358(7), 
 22441 ;;		 -> _doprnt@c(1), freqMeasConvert@qi_period(4), floatToEngineeringFormat@result(20), OLED_updateHandler@rev_id_str(1
      +7), 
 22442 ;;		 -> OLED_updateHandler@dev_id_str(17), OLED_RAM_Buffer(68), getStringSecondsAsTime@buff(20), getStringSecondsAsTime@
      +return_string(40), 
 22443 ;;		 -> STR_47(10), STR_46(13), STR_45(13), STR_44(12), 
 22444 ;;		 -> STR_43(12), STR_42(13), STR_41(12), STR_30(16), 
 22445 ;;		 -> STR_29(22), STR_28(21), STR_27(27), STR_26(41), 
 22446 ;;		 -> STR_25(32), STR_24(19), STR_23(16), STR_22(15), 
 22447 ;;		 -> STR_21(16), STR_15(10), STR_14(6), STR_13(14), 
 22448 ;;		 -> STR_12(9), STR_11(5), LM73Convert@Ambient_Conv(2), LM73Convert@POS5_Conv(2), 
 22449 ;;		 -> LM73Convert@QI_Conv(2), NULL(0), 
 22450 ;;  c               1  143[BANK2 ] unsigned char 
 22451 ;;  d               1    0        unsigned char 
 22452 ;; Return value:  Size  Location     Type
 22453 ;;                  2   88[BANK2 ] int 
 22454 ;; Registers used:
 22455 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22456 ;; Tracked objects:
 22457 ;;		On entry : 0/0
 22458 ;;		On exit  : 0/0
 22459 ;;		Unchanged: 0/0
 22460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22461 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22462 ;;      Locals:         0       0       0      46       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22463 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22464 ;;      Totals:         0       0       0      56       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22465 ;;Total ram usage:       56 bytes
 22466 ;; Hardware stack levels used:    1
 22467 ;; Hardware stack levels required when called:   13
 22468 ;; This function calls:
 22469 ;;		Absolute function
 22470 ;;		___awdiv
 22471 ;;		___fladd
 22472 ;;		___fleq
 22473 ;;		___flge
 22474 ;;		___flmul
 22475 ;;		___flneg
 22476 ;;		___flsub
 22477 ;;		___fltol
 22478 ;;		___lldiv
 22479 ;;		___llmod
 22480 ;;		___wmul
 22481 ;;		___xxtofl
 22482 ;;		__div_to_l_
 22483 ;;		__tdiv_to_l_
 22484 ;;		_fround
 22485 ;;		_isdigit
 22486 ;;		_putch
 22487 ;;		_scale
 22488 ;; This function is called by:
 22489 ;;		_printf
 22490 ;;		_sprintf
 22491 ;; This function uses a non-reentrant model
 22492 ;;
 22493                           
 22494                           	psect	text79
 22495  010000                     __ptext79:
 22496                           	opt callstack 0
 22497  010000                     __doprnt:
 22498                           	opt callstack 13
 22499                           
 22500                           ;doprnt.c: 507: char c;;doprnt.c: 509: int width;;doprnt.c: 512: int prec;;doprnt.c: 520
      +                          : unsigned short flag;;doprnt.c: 527: char d;;doprnt.c: 528: double fval;;doprnt.c: 529:
      +                           int eexp;;doprnt.c: 535: union {;doprnt.c: 536: unsigned long vd;;doprnt.c: 537: double
      +                           integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: unsigned long val;;doprnt.c: 541: unsign
      +                          ed len;;doprnt.c: 542: const char * cp;;doprnt.c: 548: while((c = *f++)) {
 22501                           
 22502                           ;incstack = 0
 22503  010000  EF6F  F08B         	goto	u23150
 22504  010004                     l17898:
 22505                           
 22506                           ; BSR set to: 2
 22507                           ;doprnt.c: 550: if(c != '%')
 22508  010004  0E25               	movlw	37
 22509  010006  198F               	xorwf	__doprnt@c& (0+255),w,b
 22510  010008  B4D8               	btfsc	status,2,c
 22511  01000A  D036               	goto	l17908
 22512                           
 22513                           ; BSR set to: 2
 22514  01000C  EE20 F002          	lfsr	2,2
 22515  010010  5158               	movf	__doprnt@pb& (0+255),w,b
 22516  010012  26D9               	addwf	fsr2l,f,c
 22517  010014  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 22518  010016  22DA               	addwfc	fsr2h,f,c
 22519  010018  50DE               	movf	postinc2,w,c
 22520  01001A  10DE               	iorwf	postinc2,w,c
 22521  01001C  10DE               	iorwf	postinc2,w,c
 22522  01001E  B4D8               	btfsc	status,2,c
 22523  010020  D014               	goto	l17904
 22524                           
 22525                           ; BSR set to: 2
 22526  010022  EE20 F002          	lfsr	2,2
 22527  010026  5158               	movf	__doprnt@pb& (0+255),w,b
 22528  010028  26D9               	addwf	fsr2l,f,c
 22529  01002A  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 22530  01002C  22DA               	addwfc	fsr2h,f,c
 22531  01002E  D802               	call	u21878
 22532  010030  EF6F  F08B         	goto	u23150
 22533  010034                     u21878:
 22534  010034  0005               	push	
 22535  010036  6EFA               	movwf	pclath,c
 22536  010038  50DE               	movf	postinc2,w,c
 22537  01003A  6EFD               	movwf	tosl,c
 22538  01003C  50DE               	movf	postinc2,w,c
 22539  01003E  6EFE               	movwf	tosh,c
 22540  010040  50DE               	movf	postinc2,w,c
 22541  010042  6EFF               	movwf	tosu,c
 22542  010044  50FA               	movf	pclath,w,c
 22543  010046  518F               	movf	__doprnt@c& (0+255),w,b
 22544  010048  0012               	return		;indir
 22545  01004A                     l17904:
 22546                           
 22547                           ; BSR set to: 2
 22548  01004A  C258  FFD9         	movff	__doprnt@pb,fsr2l
 22549  01004E  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 22550  010052  CFDE F25E          	movff	postinc2,??__doprnt
 22551  010056  CFDD F25F          	movff	postdec2,??__doprnt+1
 22552  01005A  C25E  FFD9         	movff	??__doprnt,fsr2l
 22553  01005E  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 22554  010062  C28F  FFDF         	movff	__doprnt@c,indf2
 22555                           
 22556                           ; BSR set to: 2
 22557  010066  C258  FFD9         	movff	__doprnt@pb,fsr2l
 22558  01006A  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 22559  01006E  2ADE               	incf	postinc2,f,c
 22560  010070  0E00               	movlw	0
 22561  010072  22DD               	addwfc	postdec2,f,c
 22562  010074  EF6F  F08B         	goto	u23150
 22563  010078                     l17908:
 22564                           
 22565                           ; BSR set to: 2
 22566                           ;doprnt.c: 555: };doprnt.c: 558: width = 0;
 22567  010078  0E00               	movlw	0
 22568  01007A  6F8A               	movwf	(__doprnt@width+1)& (0+255),b
 22569  01007C  0E00               	movlw	0
 22570  01007E  6F89               	movwf	__doprnt@width& (0+255),b
 22571                           
 22572                           ;doprnt.c: 560: flag = 0;
 22573  010080  0E00               	movlw	0
 22574  010082  6F8E               	movwf	(__doprnt@flag+1)& (0+255),b
 22575  010084  0E00               	movlw	0
 22576  010086  6F8D               	movwf	__doprnt@flag& (0+255),b
 22577  010088  D00A               	goto	l17918
 22578  01008A                     l17910:
 22579                           
 22580                           ;doprnt.c: 573: flag |= 0x01;
 22581  01008A  0102               	movlb	2	; () banked
 22582  01008C  818D               	bsf	__doprnt@flag& (0+255),0,b
 22583  01008E  D005               	goto	L7
 22584  010090                     l17912:
 22585                           
 22586                           ;doprnt.c: 580: flag |= 0x02;
 22587  010090  0102               	movlb	2	; () banked
 22588  010092  838D               	bsf	__doprnt@flag& (0+255),1,b
 22589  010094  D002               	goto	L7
 22590  010096                     l17914:
 22591                           
 22592                           ;doprnt.c: 592: flag |= 0x04;
 22593  010096  0102               	movlb	2	; () banked
 22594  010098  858D               	bsf	__doprnt@flag& (0+255),2,b
 22595  01009A                     L7:
 22596                           
 22597                           ;doprnt.c: 593: f++;
 22598  01009A  4B5A               	infsnz	__doprnt@f& (0+255),f,b
 22599  01009C  2B5B               	incf	(__doprnt@f+1)& (0+255),f,b
 22600  01009E                     l17918:
 22601                           
 22602                           ; BSR set to: 2
 22603  01009E  C25A  FFF6         	movff	__doprnt@f,tblptrl
 22604  0100A2  C25B  FFF7         	movff	__doprnt@f+1,tblptrh
 22605  0100A6  0E00               	movlw	low (__mediumconst shr (0+16))
 22606  0100A8  6EF8               	movwf	tblptru,c
 22607  0100AA  0E0E               	movlw	(high __ramtop+-1)
 22608  0100AC  64F7               	cpfsgt	tblptrh,c
 22609  0100AE  D003               	bra	u21887
 22610  0100B0  0008               	tblrd		*
 22611  0100B2  50F5               	movf	tablat,w,c
 22612  0100B4  D005               	bra	u21880
 22613  0100B6                     u21887:
 22614  0100B6  CFF6 FFE9          	movff	tblptrl,fsr0l
 22615  0100BA  CFF7 FFEA          	movff	tblptrh,fsr0h
 22616  0100BE  50EF               	movf	indf0,w,c
 22617  0100C0                     u21880:
 22618                           
 22619                           ; Switch size 1, requested type "simple"
 22620                           ; Number of cases is 3, Range of values is 32 to 48
 22621                           ; switch strategies available:
 22622                           ; Name         Instructions Cycles
 22623                           ; simple_byte           10     6 (average)
 22624                           ;	Chosen strategy is simple_byte
 22625  0100C0  0A20               	xorlw	32	; case 32
 22626  0100C2  B4D8               	btfsc	status,2,c
 22627  0100C4  D7E2               	goto	l17910
 22628  0100C6  0A0B               	xorlw	11	; case 43
 22629  0100C8  B4D8               	btfsc	status,2,c
 22630  0100CA  D7E2               	goto	l17912
 22631  0100CC  0A1B               	xorlw	27	; case 48
 22632  0100CE  B4D8               	btfsc	status,2,c
 22633  0100D0  D7E2               	goto	l17914
 22634                           
 22635                           ;doprnt.c: 601: if(flag & 0x02)
 22636  0100D2  0102               	movlb	2	; () banked
 22637  0100D4  B38D               	btfsc	__doprnt@flag& (0+255),1,b
 22638                           
 22639                           ; BSR set to: 2
 22640                           ;doprnt.c: 602: flag &= ~0x01;
 22641  0100D6  918D               	bcf	__doprnt@flag& (0+255),0,b
 22642                           
 22643                           ; BSR set to: 2
 22644                           ;doprnt.c: 609: if(isdigit((unsigned)*f)) {
 22645  0100D8  C25A  FFF6         	movff	__doprnt@f,tblptrl
 22646  0100DC  C25B  FFF7         	movff	__doprnt@f+1,tblptrh
 22647  0100E0  0E00               	movlw	low (__mediumconst shr (0+16))
 22648  0100E2  6EF8               	movwf	tblptru,c
 22649  0100E4  0E0E               	movlw	(high __ramtop+-1)
 22650  0100E6  64F7               	cpfsgt	tblptrh,c
 22651  0100E8  D003               	bra	u21907
 22652  0100EA  0008               	tblrd		*
 22653  0100EC  50F5               	movf	tablat,w,c
 22654  0100EE  D005               	bra	u21900
 22655  0100F0                     u21907:
 22656  0100F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 22657  0100F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 22658  0100F8  50EF               	movf	indf0,w,c
 22659  0100FA                     u21900:
 22660  0100FA  EC24  F0E3         	call	_isdigit
 22661  0100FE  A0D8               	btfss	status,0,c
 22662  010100  D04C               	goto	u21940
 22663                           
 22664                           ;doprnt.c: 610: width = 0;
 22665  010102  0E00               	movlw	0
 22666  010104  0102               	movlb	2	; () banked
 22667  010106  6F8A               	movwf	(__doprnt@width+1)& (0+255),b
 22668  010108  0E00               	movlw	0
 22669  01010A  6F89               	movwf	__doprnt@width& (0+255),b
 22670  01010C                     l17926:
 22671                           
 22672                           ;doprnt.c: 612: width *= 10;
 22673  01010C  C289  F200         	movff	__doprnt@width,___wmul@multiplier
 22674  010110  C28A  F201         	movff	__doprnt@width+1,___wmul@multiplier+1
 22675  010114  0E00               	movlw	0
 22676  010116  0102               	movlb	2	; () banked
 22677  010118  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 22678  01011A  0E0A               	movlw	10
 22679  01011C  6F02               	movwf	___wmul@multiplicand& (0+255),b
 22680  01011E  EC79  F0E2         	call	___wmul	;wreg free
 22681  010122  C200  F289         	movff	?___wmul,__doprnt@width
 22682  010126  C201  F28A         	movff	?___wmul+1,__doprnt@width+1
 22683                           
 22684                           ;doprnt.c: 613: width += *f++ - '0';
 22685  01012A  0ED0               	movlw	208
 22686  01012C  0102               	movlb	2	; () banked
 22687  01012E  6F5E               	movwf	??__doprnt& (0+255),b
 22688  010130  0EFF               	movlw	255
 22689  010132  6F5F               	movwf	(??__doprnt+1)& (0+255),b
 22690  010134  C25A  FFF6         	movff	__doprnt@f,tblptrl
 22691  010138  C25B  FFF7         	movff	__doprnt@f+1,tblptrh
 22692  01013C  0E00               	movlw	low (__mediumconst shr (0+16))
 22693  01013E  6EF8               	movwf	tblptru,c
 22694  010140  0E0E               	movlw	(high __ramtop+-1)
 22695  010142  64F7               	cpfsgt	tblptrh,c
 22696  010144  D003               	bra	u21927
 22697  010146  0008               	tblrd		*
 22698  010148  50F5               	movf	tablat,w,c
 22699  01014A  D005               	bra	u21920
 22700  01014C                     u21927:
 22701  01014C  CFF6 FFE9          	movff	tblptrl,fsr0l
 22702  010150  CFF7 FFEA          	movff	tblptrh,fsr0h
 22703  010154  50EF               	movf	indf0,w,c
 22704  010156                     u21920:
 22705  010156  0102               	movlb	2	; () banked
 22706  010158  6F60               	movwf	(??__doprnt+2)& (0+255),b
 22707  01015A  6B61               	clrf	(??__doprnt+3)& (0+255),b
 22708  01015C  515E               	movf	??__doprnt& (0+255),w,b
 22709  01015E  2760               	addwf	(??__doprnt+2)& (0+255),f,b
 22710  010160  515F               	movf	(??__doprnt+1)& (0+255),w,b
 22711  010162  2361               	addwfc	(??__doprnt+3)& (0+255),f,b
 22712  010164  5160               	movf	(??__doprnt+2)& (0+255),w,b
 22713  010166  2789               	addwf	__doprnt@width& (0+255),f,b
 22714  010168  5161               	movf	(??__doprnt+3)& (0+255),w,b
 22715  01016A  238A               	addwfc	(__doprnt@width+1)& (0+255),f,b
 22716                           
 22717                           ; BSR set to: 2
 22718  01016C  4B5A               	infsnz	__doprnt@f& (0+255),f,b
 22719  01016E  2B5B               	incf	(__doprnt@f+1)& (0+255),f,b
 22720                           
 22721                           ; BSR set to: 2
 22722                           ;doprnt.c: 614: } while(isdigit((unsigned)*f));
 22723  010170  C25A  FFF6         	movff	__doprnt@f,tblptrl
 22724  010174  C25B  FFF7         	movff	__doprnt@f+1,tblptrh
 22725  010178  0E00               	movlw	low (__mediumconst shr (0+16))
 22726  01017A  6EF8               	movwf	tblptru,c
 22727  01017C  0E0E               	movlw	(high __ramtop+-1)
 22728  01017E  64F7               	cpfsgt	tblptrh,c
 22729  010180  D003               	bra	u21937
 22730  010182  0008               	tblrd		*
 22731  010184  50F5               	movf	tablat,w,c
 22732  010186  D005               	bra	u21930
 22733  010188                     u21937:
 22734  010188  CFF6 FFE9          	movff	tblptrl,fsr0l
 22735  01018C  CFF7 FFEA          	movff	tblptrh,fsr0h
 22736  010190  50EF               	movf	indf0,w,c
 22737  010192                     u21930:
 22738  010192  EC24  F0E3         	call	_isdigit
 22739  010196  B0D8               	btfsc	status,0,c
 22740  010198  D7B9               	goto	l17926
 22741  01019A                     u21940:
 22742                           
 22743                           ;doprnt.c: 620: };doprnt.c: 623: if(*f == '.') {
 22744  01019A  C25A  FFF6         	movff	__doprnt@f,tblptrl
 22745  01019E  C25B  FFF7         	movff	__doprnt@f+1,tblptrh
 22746  0101A2  0E00               	movlw	low (__mediumconst shr (0+16))
 22747  0101A4  6EF8               	movwf	tblptru,c
 22748  0101A6  0E0E               	movlw	(high __ramtop+-1)
 22749  0101A8  64F7               	cpfsgt	tblptrh,c
 22750  0101AA  D003               	bra	u21957
 22751  0101AC  0008               	tblrd		*
 22752  0101AE  50F5               	movf	tablat,w,c
 22753  0101B0  D005               	bra	u21950
 22754  0101B2                     u21957:
 22755  0101B2  CFF6 FFE9          	movff	tblptrl,fsr0l
 22756  0101B6  CFF7 FFEA          	movff	tblptrh,fsr0h
 22757  0101BA  50EF               	movf	indf0,w,c
 22758  0101BC                     u21950:
 22759  0101BC  0A2E               	xorlw	46
 22760  0101BE  A4D8               	btfss	status,2,c
 22761  0101C0  D049               	goto	l17946
 22762                           
 22763                           ;doprnt.c: 624: flag |= 0x4000;
 22764  0101C2  0102               	movlb	2	; () banked
 22765  0101C4  8D8E               	bsf	(__doprnt@flag+1)& (0+255),6,b
 22766                           
 22767                           ;doprnt.c: 625: f++;
 22768  0101C6  4B5A               	infsnz	__doprnt@f& (0+255),f,b
 22769  0101C8  2B5B               	incf	(__doprnt@f+1)& (0+255),f,b
 22770                           
 22771                           ; BSR set to: 2
 22772                           ;doprnt.c: 639: {;doprnt.c: 640: prec = 0;
 22773  0101CA  0E00               	movlw	0
 22774  0101CC  6F8C               	movwf	(__doprnt@prec+1)& (0+255),b
 22775  0101CE  0E00               	movlw	0
 22776  0101D0  6F8B               	movwf	__doprnt@prec& (0+255),b
 22777                           
 22778                           ;doprnt.c: 641: while(isdigit((unsigned)*f))
 22779  0101D2  D02A               	goto	l17944
 22780  0101D4                     l17940:
 22781                           
 22782                           ;doprnt.c: 642: prec = prec*10 + *f++ - '0';
 22783  0101D4  C28B  F200         	movff	__doprnt@prec,___wmul@multiplier
 22784  0101D8  C28C  F201         	movff	__doprnt@prec+1,___wmul@multiplier+1
 22785  0101DC  0E00               	movlw	0
 22786  0101DE  0102               	movlb	2	; () banked
 22787  0101E0  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 22788  0101E2  0E0A               	movlw	10
 22789  0101E4  6F02               	movwf	___wmul@multiplicand& (0+255),b
 22790  0101E6  EC79  F0E2         	call	___wmul	;wreg free
 22791  0101EA  C25A  FFF6         	movff	__doprnt@f,tblptrl
 22792  0101EE  C25B  FFF7         	movff	__doprnt@f+1,tblptrh
 22793  0101F2  0E00               	movlw	low (__mediumconst shr (0+16))
 22794  0101F4  6EF8               	movwf	tblptru,c
 22795  0101F6  0E0E               	movlw	(high __ramtop+-1)
 22796  0101F8  64F7               	cpfsgt	tblptrh,c
 22797  0101FA  D003               	bra	u21977
 22798  0101FC  0008               	tblrd		*
 22799  0101FE  50F5               	movf	tablat,w,c
 22800  010200  D005               	bra	u21970
 22801  010202                     u21977:
 22802  010202  CFF6 FFE9          	movff	tblptrl,fsr0l
 22803  010206  CFF7 FFEA          	movff	tblptrh,fsr0h
 22804  01020A  50EF               	movf	indf0,w,c
 22805  01020C                     u21970:
 22806  01020C  0102               	movlb	2	; () banked
 22807  01020E  6F5E               	movwf	??__doprnt& (0+255),b
 22808  010210  515E               	movf	??__doprnt& (0+255),w,b
 22809  010212  2700               	addwf	?___wmul& (0+255),f,b
 22810  010214  0E00               	movlw	0
 22811  010216  2301               	addwfc	(?___wmul+1)& (0+255),f,b
 22812  010218  0ED0               	movlw	208
 22813  01021A  2500               	addwf	?___wmul& (0+255),w,b
 22814  01021C  6F8B               	movwf	__doprnt@prec& (0+255),b
 22815  01021E  0EFF               	movlw	255
 22816  010220  2101               	addwfc	(?___wmul+1)& (0+255),w,b
 22817  010222  6F8C               	movwf	(__doprnt@prec+1)& (0+255),b
 22818                           
 22819                           ; BSR set to: 2
 22820  010224  4B5A               	infsnz	__doprnt@f& (0+255),f,b
 22821  010226  2B5B               	incf	(__doprnt@f+1)& (0+255),f,b
 22822  010228                     l17944:
 22823                           
 22824                           ; BSR set to: 2
 22825  010228  C25A  FFF6         	movff	__doprnt@f,tblptrl
 22826  01022C  C25B  FFF7         	movff	__doprnt@f+1,tblptrh
 22827  010230  0E00               	movlw	low (__mediumconst shr (0+16))
 22828  010232  6EF8               	movwf	tblptru,c
 22829  010234  0E0E               	movlw	(high __ramtop+-1)
 22830  010236  64F7               	cpfsgt	tblptrh,c
 22831  010238  D003               	bra	u21987
 22832  01023A  0008               	tblrd		*
 22833  01023C  50F5               	movf	tablat,w,c
 22834  01023E  D005               	bra	u21980
 22835  010240                     u21987:
 22836  010240  CFF6 FFE9          	movff	tblptrl,fsr0l
 22837  010244  CFF7 FFEA          	movff	tblptrh,fsr0h
 22838  010248  50EF               	movf	indf0,w,c
 22839  01024A                     u21980:
 22840  01024A  EC24  F0E3         	call	_isdigit
 22841  01024E  A0D8               	btfss	status,0,c
 22842  010250  D12A               	goto	l18014
 22843  010252  D7C0               	goto	l17940
 22844  010254                     l17946:
 22845                           
 22846                           ;doprnt.c: 645: prec = 0;
 22847  010254  0E00               	movlw	0
 22848  010256  0102               	movlb	2	; () banked
 22849  010258  6F8C               	movwf	(__doprnt@prec+1)& (0+255),b
 22850  01025A  0E00               	movlw	0
 22851  01025C  6F8B               	movwf	__doprnt@prec& (0+255),b
 22852                           
 22853                           ; BSR set to: 2
 22854                           ;doprnt.c: 647: flag |= 0x1000;
 22855  01025E  898E               	bsf	(__doprnt@flag+1)& (0+255),4,b
 22856  010260  D122               	goto	l18014
 22857  010262                     l17950:
 22858                           
 22859                           ; BSR set to: 2
 22860                           ;doprnt.c: 662: flag |= 0x10;
 22861  010262  898D               	bsf	__doprnt@flag& (0+255),4,b
 22862                           
 22863                           ;doprnt.c: 663: goto loop;
 22864  010264  D120               	goto	l18014
 22865  010266                     l17952:
 22866                           
 22867                           ; BSR set to: 2
 22868                           ;doprnt.c: 682: flag |= 0x400;
 22869  010266  858E               	bsf	(__doprnt@flag+1)& (0+255),2,b
 22870                           
 22871                           ;doprnt.c: 683: break;
 22872  010268  D159               	goto	l18016
 22873  01026A                     l17954:
 22874                           
 22875                           ; BSR set to: 2
 22876                           ;doprnt.c: 737: case 'x':;doprnt.c: 740: flag |= 0x80;
 22877  01026A  8F8D               	bsf	__doprnt@flag& (0+255),7,b
 22878                           
 22879                           ;doprnt.c: 742: break;
 22880  01026C  D157               	goto	l18016
 22881  01026E                     l17956:
 22882                           
 22883                           ; BSR set to: 2
 22884                           ;doprnt.c: 753: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 22885  01026E  C25C  FFD9         	movff	__doprnt@ap,fsr2l
 22886  010272  C25D  FFDA         	movff	__doprnt@ap+1,fsr2h
 22887  010276  CFDF F25E          	movff	indf2,??__doprnt
 22888  01027A  0E02               	movlw	2
 22889  01027C  26DE               	addwf	postinc2,f,c
 22890  01027E  CFDF F25F          	movff	indf2,??__doprnt+1
 22891  010282  0E00               	movlw	0
 22892  010284  22DD               	addwfc	postdec2,f,c
 22893  010286  C25E  FFD9         	movff	??__doprnt,fsr2l
 22894  01028A  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 22895  01028E  CFDE F277          	movff	postinc2,__doprnt@cp
 22896  010292  CFDD F278          	movff	postdec2,__doprnt@cp+1
 22897                           
 22898                           ; BSR set to: 2
 22899                           ;doprnt.c: 759: if(!cp)
 22900  010296  5177               	movf	__doprnt@cp& (0+255),w,b
 22901  010298  1178               	iorwf	(__doprnt@cp+1)& (0+255),w,b
 22902  01029A  A4D8               	btfss	status,2,c
 22903  01029C  D004               	goto	l17962
 22904                           
 22905                           ; BSR set to: 2
 22906                           ;doprnt.c: 760: cp = "(null)";
 22907  01029E  0E69               	movlw	low STR_358
 22908  0102A0  6F77               	movwf	__doprnt@cp& (0+255),b
 22909  0102A2  0EFF               	movlw	high STR_358
 22910  0102A4  6F78               	movwf	(__doprnt@cp+1)& (0+255),b
 22911  0102A6                     l17962:
 22912                           
 22913                           ; BSR set to: 2
 22914                           ;doprnt.c: 764: len = 0;
 22915  0102A6  0E00               	movlw	0
 22916  0102A8  6F7A               	movwf	(__doprnt@len+1)& (0+255),b
 22917  0102AA  0E00               	movlw	0
 22918  0102AC  6F79               	movwf	__doprnt@len& (0+255),b
 22919                           
 22920                           ;doprnt.c: 765: while(cp[len])
 22921  0102AE  D003               	goto	l17966
 22922  0102B0                     l17964:
 22923                           
 22924                           ;doprnt.c: 766: len++;
 22925  0102B0  0102               	movlb	2	; () banked
 22926  0102B2  4B79               	infsnz	__doprnt@len& (0+255),f,b
 22927  0102B4  2B7A               	incf	(__doprnt@len+1)& (0+255),f,b
 22928  0102B6                     l17966:
 22929                           
 22930                           ; BSR set to: 2
 22931  0102B6  5179               	movf	__doprnt@len& (0+255),w,b
 22932  0102B8  2577               	addwf	__doprnt@cp& (0+255),w,b
 22933  0102BA  6F5E               	movwf	??__doprnt& (0+255),b
 22934  0102BC  517A               	movf	(__doprnt@len+1)& (0+255),w,b
 22935  0102BE  2178               	addwfc	(__doprnt@cp+1)& (0+255),w,b
 22936  0102C0  6F5F               	movwf	(??__doprnt+1)& (0+255),b
 22937  0102C2  C25E  FFF6         	movff	??__doprnt,tblptrl
 22938  0102C6  C25F  FFF7         	movff	??__doprnt+1,tblptrh
 22939  0102CA  0E00               	movlw	low (__mediumconst shr (0+16))
 22940  0102CC  6EF8               	movwf	tblptru,c
 22941  0102CE  0E0E               	movlw	(high __ramtop+-1)
 22942  0102D0  64F7               	cpfsgt	tblptrh,c
 22943  0102D2  D003               	bra	u22017
 22944  0102D4  0008               	tblrd		*
 22945  0102D6  50F5               	movf	tablat,w,c
 22946  0102D8  D005               	bra	u22010
 22947  0102DA                     u22017:
 22948  0102DA  CFF6 FFE9          	movff	tblptrl,fsr0l
 22949  0102DE  CFF7 FFEA          	movff	tblptrh,fsr0h
 22950  0102E2  50EF               	movf	indf0,w,c
 22951  0102E4                     u22010:
 22952  0102E4  0900               	iorlw	0
 22953  0102E6  A4D8               	btfss	status,2,c
 22954  0102E8  D7E3               	goto	l17964
 22955  0102EA                     u22020:
 22956                           
 22957                           ;doprnt.c: 772: if(prec && prec < len)
 22958  0102EA  0102               	movlb	2	; () banked
 22959  0102EC  518B               	movf	__doprnt@prec& (0+255),w,b
 22960  0102EE  118C               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 22961  0102F0  B4D8               	btfsc	status,2,c
 22962  0102F2  D00A               	goto	l17974
 22963                           
 22964                           ; BSR set to: 2
 22965  0102F4  5179               	movf	__doprnt@len& (0+255),w,b
 22966  0102F6  5D8B               	subwf	__doprnt@prec& (0+255),w,b
 22967  0102F8  517A               	movf	(__doprnt@len+1)& (0+255),w,b
 22968  0102FA  598C               	subwfb	(__doprnt@prec+1)& (0+255),w,b
 22969  0102FC  B0D8               	btfsc	status,0,c
 22970  0102FE  D004               	goto	l17974
 22971                           
 22972                           ; BSR set to: 2
 22973                           ;doprnt.c: 773: len = prec;
 22974  010300  C28B  F279         	movff	__doprnt@prec,__doprnt@len
 22975  010304  C28C  F27A         	movff	__doprnt@prec+1,__doprnt@len+1
 22976  010308                     l17974:
 22977                           
 22978                           ; BSR set to: 2
 22979                           ;doprnt.c: 776: if(width > len)
 22980  010308  5189               	movf	__doprnt@width& (0+255),w,b
 22981  01030A  5D79               	subwf	__doprnt@len& (0+255),w,b
 22982  01030C  518A               	movf	(__doprnt@width+1)& (0+255),w,b
 22983  01030E  597A               	subwfb	(__doprnt@len+1)& (0+255),w,b
 22984  010310  B0D8               	btfsc	status,0,c
 22985  010312  D005               	goto	l17978
 22986                           
 22987                           ; BSR set to: 2
 22988                           ;doprnt.c: 777: width -= len;
 22989  010314  5179               	movf	__doprnt@len& (0+255),w,b
 22990  010316  5F89               	subwf	__doprnt@width& (0+255),f,b
 22991  010318  517A               	movf	(__doprnt@len+1)& (0+255),w,b
 22992  01031A  5B8A               	subwfb	(__doprnt@width+1)& (0+255),f,b
 22993  01031C  D038               	goto	l17988
 22994  01031E                     l17978:
 22995                           
 22996                           ; BSR set to: 2
 22997                           ;doprnt.c: 778: else;doprnt.c: 779: width = 0;
 22998  01031E  0E00               	movlw	0
 22999  010320  6F8A               	movwf	(__doprnt@width+1)& (0+255),b
 23000  010322  0E00               	movlw	0
 23001  010324  6F89               	movwf	__doprnt@width& (0+255),b
 23002  010326  D033               	goto	l17988
 23003  010328                     l17980:
 23004                           
 23005                           ; BSR set to: 2
 23006  010328  EE20 F002          	lfsr	2,2
 23007  01032C  5158               	movf	__doprnt@pb& (0+255),w,b
 23008  01032E  26D9               	addwf	fsr2l,f,c
 23009  010330  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 23010  010332  22DA               	addwfc	fsr2h,f,c
 23011  010334  50DE               	movf	postinc2,w,c
 23012  010336  10DE               	iorwf	postinc2,w,c
 23013  010338  10DE               	iorwf	postinc2,w,c
 23014  01033A  B4D8               	btfsc	status,2,c
 23015  01033C  D013               	goto	l17984
 23016                           
 23017                           ; BSR set to: 2
 23018  01033E  EE20 F002          	lfsr	2,2
 23019  010342  5158               	movf	__doprnt@pb& (0+255),w,b
 23020  010344  26D9               	addwf	fsr2l,f,c
 23021  010346  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 23022  010348  22DA               	addwfc	fsr2h,f,c
 23023  01034A  D801               	call	u22078
 23024  01034C  D020               	goto	l17988
 23025  01034E                     u22078:
 23026  01034E  0005               	push	
 23027  010350  6EFA               	movwf	pclath,c
 23028  010352  50DE               	movf	postinc2,w,c
 23029  010354  6EFD               	movwf	tosl,c
 23030  010356  50DE               	movf	postinc2,w,c
 23031  010358  6EFE               	movwf	tosh,c
 23032  01035A  50DE               	movf	postinc2,w,c
 23033  01035C  6EFF               	movwf	tosu,c
 23034  01035E  50FA               	movf	pclath,w,c
 23035  010360  0E20               	movlw	32
 23036  010362  0012               	return		;indir
 23037  010364                     l17984:
 23038                           
 23039                           ; BSR set to: 2
 23040  010364  C258  FFD9         	movff	__doprnt@pb,fsr2l
 23041  010368  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 23042  01036C  CFDE F25E          	movff	postinc2,??__doprnt
 23043  010370  CFDD F25F          	movff	postdec2,??__doprnt+1
 23044  010374  C25E  FFD9         	movff	??__doprnt,fsr2l
 23045  010378  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 23046  01037C  0E20               	movlw	32
 23047  01037E  6EDF               	movwf	indf2,c
 23048                           
 23049                           ; BSR set to: 2
 23050  010380  C258  FFD9         	movff	__doprnt@pb,fsr2l
 23051  010384  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 23052  010388  2ADE               	incf	postinc2,f,c
 23053  01038A  0E00               	movlw	0
 23054  01038C  22DD               	addwfc	postdec2,f,c
 23055  01038E                     l17988:
 23056  01038E  0102               	movlb	2	; () banked
 23057  010390  0789               	decf	__doprnt@width& (0+255),f,b
 23058  010392  A0D8               	btfss	status,0,c
 23059  010394  078A               	decf	(__doprnt@width+1)& (0+255),f,b
 23060  010396  2989               	incf	__doprnt@width& (0+255),w,b
 23061  010398  E1C7               	bnz	l17980
 23062  01039A  298A               	incf	(__doprnt@width+1)& (0+255),w,b
 23063  01039C  B4D8               	btfsc	status,2,c
 23064  01039E  D05B               	goto	l18002
 23065  0103A0  D7C3               	goto	l17980
 23066  0103A2                     l17990:
 23067                           
 23068                           ; BSR set to: 2
 23069  0103A2  EE20 F002          	lfsr	2,2
 23070  0103A6  5158               	movf	__doprnt@pb& (0+255),w,b
 23071  0103A8  26D9               	addwf	fsr2l,f,c
 23072  0103AA  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 23073  0103AC  22DA               	addwfc	fsr2h,f,c
 23074  0103AE  50DE               	movf	postinc2,w,c
 23075  0103B0  10DE               	iorwf	postinc2,w,c
 23076  0103B2  10DE               	iorwf	postinc2,w,c
 23077  0103B4  B4D8               	btfsc	status,2,c
 23078  0103B6  D027               	goto	l17996
 23079                           
 23080                           ; BSR set to: 2
 23081  0103B8  EE20 F002          	lfsr	2,2
 23082  0103BC  5158               	movf	__doprnt@pb& (0+255),w,b
 23083  0103BE  26D9               	addwf	fsr2l,f,c
 23084  0103C0  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 23085  0103C2  22DA               	addwfc	fsr2h,f,c
 23086  0103C4  D801               	call	u22108
 23087  0103C6  D01B               	goto	u22109
 23088  0103C8                     u22108:
 23089  0103C8  0005               	push	
 23090  0103CA  6EFA               	movwf	pclath,c
 23091  0103CC  50DE               	movf	postinc2,w,c
 23092  0103CE  6EFD               	movwf	tosl,c
 23093  0103D0  50DE               	movf	postinc2,w,c
 23094  0103D2  6EFE               	movwf	tosh,c
 23095  0103D4  50DE               	movf	postinc2,w,c
 23096  0103D6  6EFF               	movwf	tosu,c
 23097  0103D8  50FA               	movf	pclath,w,c
 23098  0103DA  C277  FFF6         	movff	__doprnt@cp,tblptrl
 23099  0103DE  C278  FFF7         	movff	__doprnt@cp+1,tblptrh
 23100  0103E2  0E00               	movlw	low (__mediumconst shr (0+16))
 23101  0103E4  6EF8               	movwf	tblptru,c
 23102  0103E6  0E0E               	movlw	(high __ramtop+-1)
 23103  0103E8  64F7               	cpfsgt	tblptrh,c
 23104  0103EA  D003               	bra	u22117
 23105  0103EC  0008               	tblrd		*
 23106  0103EE  50F5               	movf	tablat,w,c
 23107  0103F0  D005               	bra	u22110
 23108  0103F2                     u22117:
 23109  0103F2  CFF6 FFE9          	movff	tblptrl,fsr0l
 23110  0103F6  CFF7 FFEA          	movff	tblptrh,fsr0h
 23111  0103FA  50EF               	movf	indf0,w,c
 23112  0103FC                     u22110:
 23113  0103FC  0012               	return		;indir
 23114  0103FE                     u22109:
 23115  0103FE  0102               	movlb	2	; () banked
 23116  010400  4B77               	infsnz	__doprnt@cp& (0+255),f,b
 23117  010402  2B78               	incf	(__doprnt@cp+1)& (0+255),f,b
 23118  010404  D028               	goto	l18002
 23119  010406                     l17996:
 23120                           
 23121                           ; BSR set to: 2
 23122  010406  C277  FFF6         	movff	__doprnt@cp,tblptrl
 23123  01040A  C278  FFF7         	movff	__doprnt@cp+1,tblptrh
 23124  01040E  0E00               	movlw	low (__mediumconst shr (0+16))
 23125  010410  6EF8               	movwf	tblptru,c
 23126  010412  C258  FFD9         	movff	__doprnt@pb,fsr2l
 23127  010416  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 23128  01041A  CFDE F25E          	movff	postinc2,??__doprnt
 23129  01041E  CFDD F25F          	movff	postdec2,??__doprnt+1
 23130  010422  C25E  FFD9         	movff	??__doprnt,fsr2l
 23131  010426  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 23132  01042A  0E0E               	movlw	(high __ramtop+-1)
 23133  01042C  64F7               	cpfsgt	tblptrh,c
 23134  01042E  D003               	bra	u22127
 23135  010430  0008               	tblrd		*
 23136  010432  50F5               	movf	tablat,w,c
 23137  010434  D005               	bra	u22120
 23138  010436                     u22127:
 23139  010436  CFF6 FFE9          	movff	tblptrl,fsr0l
 23140  01043A  CFF7 FFEA          	movff	tblptrh,fsr0h
 23141  01043E  50EF               	movf	indf0,w,c
 23142  010440                     u22120:
 23143  010440  6EDF               	movwf	indf2,c
 23144  010442  0102               	movlb	2	; () banked
 23145  010444  4B77               	infsnz	__doprnt@cp& (0+255),f,b
 23146  010446  2B78               	incf	(__doprnt@cp+1)& (0+255),f,b
 23147                           
 23148                           ; BSR set to: 2
 23149  010448  C258  FFD9         	movff	__doprnt@pb,fsr2l
 23150  01044C  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 23151  010450  2ADE               	incf	postinc2,f,c
 23152  010452  0E00               	movlw	0
 23153  010454  22DD               	addwfc	postdec2,f,c
 23154  010456                     l18002:
 23155                           
 23156                           ; BSR set to: 2
 23157  010456  0779               	decf	__doprnt@len& (0+255),f,b
 23158  010458  A0D8               	btfss	status,0,c
 23159  01045A  077A               	decf	(__doprnt@len+1)& (0+255),f,b
 23160  01045C  2979               	incf	__doprnt@len& (0+255),w,b
 23161  01045E  E1A1               	bnz	l17990
 23162  010460  297A               	incf	(__doprnt@len+1)& (0+255),w,b
 23163  010462  B4D8               	btfsc	status,2,c
 23164  010464  EF6F  F08B         	goto	u23150
 23165  010468  D79C               	goto	l17990
 23166  01046A                     l18004:
 23167                           
 23168                           ; BSR set to: 2
 23169                           ;doprnt.c: 818: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 23170  01046A  C25C  FFD9         	movff	__doprnt@ap,fsr2l
 23171  01046E  C25D  FFDA         	movff	__doprnt@ap+1,fsr2h
 23172  010472  CFDF F25E          	movff	indf2,??__doprnt
 23173  010476  0E02               	movlw	2
 23174  010478  26DE               	addwf	postinc2,f,c
 23175  01047A  CFDF F25F          	movff	indf2,??__doprnt+1
 23176  01047E  0E00               	movlw	0
 23177  010480  22DD               	addwfc	postdec2,f,c
 23178  010482  C25E  FFD9         	movff	??__doprnt,fsr2l
 23179  010486  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 23180  01048A  50DF               	movf	indf2,w,c
 23181  01048C  6F8F               	movwf	__doprnt@c& (0+255),b
 23182  01048E                     l18006:
 23183                           
 23184                           ; BSR set to: 2
 23185                           ;doprnt.c: 824: cp = (char *)&c;
 23186  01048E  0E8F               	movlw	low __doprnt@c
 23187  010490  6F77               	movwf	__doprnt@cp& (0+255),b
 23188  010492  0E02               	movlw	high __doprnt@c
 23189  010494  6F78               	movwf	(__doprnt@cp+1)& (0+255),b
 23190                           
 23191                           ; BSR set to: 2
 23192                           ;doprnt.c: 825: len = 1;
 23193  010496  0E00               	movlw	0
 23194  010498  6F7A               	movwf	(__doprnt@len+1)& (0+255),b
 23195  01049A  0E01               	movlw	1
 23196  01049C  6F79               	movwf	__doprnt@len& (0+255),b
 23197                           
 23198                           ;doprnt.c: 826: goto dostring;
 23199  01049E  D725               	goto	u22020
 23200  0104A0                     l18010:
 23201                           
 23202                           ; BSR set to: 2
 23203                           ;doprnt.c: 837: flag |= 0xC0;
 23204  0104A0  0EC0               	movlw	192
 23205  0104A2  138D               	iorwf	__doprnt@flag& (0+255),f,b
 23206                           
 23207                           ;doprnt.c: 838: break;
 23208  0104A4  D03B               	goto	l18016
 23209  0104A6                     l18014:
 23210  0104A6  0102               	movlb	2	; () banked
 23211  0104A8  515A               	movf	__doprnt@f& (0+255),w,b
 23212  0104AA  6F5E               	movwf	??__doprnt& (0+255),b
 23213  0104AC  515B               	movf	(__doprnt@f+1)& (0+255),w,b
 23214  0104AE  6F5F               	movwf	(??__doprnt+1)& (0+255),b
 23215  0104B0  4B5A               	infsnz	__doprnt@f& (0+255),f,b
 23216  0104B2  2B5B               	incf	(__doprnt@f+1)& (0+255),f,b
 23217  0104B4  C25E  FFF6         	movff	??__doprnt,tblptrl
 23218  0104B8  C25F  FFF7         	movff	??__doprnt+1,tblptrh
 23219  0104BC  0E00               	movlw	low (__mediumconst shr (0+16))
 23220  0104BE  6EF8               	movwf	tblptru,c
 23221  0104C0  0E0E               	movlw	(high __ramtop+-1)
 23222  0104C2  64F7               	cpfsgt	tblptrh,c
 23223  0104C4  D003               	bra	u22147
 23224  0104C6  0008               	tblrd		*
 23225  0104C8  50F5               	movf	tablat,w,c
 23226  0104CA  D005               	bra	u22140
 23227  0104CC                     u22147:
 23228  0104CC  CFF6 FFE9          	movff	tblptrl,fsr0l
 23229  0104D0  CFF7 FFEA          	movff	tblptrh,fsr0h
 23230  0104D4  50EF               	movf	indf0,w,c
 23231  0104D6                     u22140:
 23232  0104D6  0102               	movlb	2	; () banked
 23233  0104D8  6F8F               	movwf	__doprnt@c& (0+255),b
 23234  0104DA  518F               	movf	__doprnt@c& (0+255),w,b
 23235                           
 23236                           ; Switch size 1, requested type "simple"
 23237                           ; Number of cases is 10, Range of values is 0 to 120
 23238                           ; switch strategies available:
 23239                           ; Name         Instructions Cycles
 23240                           ; simple_byte           31    16 (average)
 23241                           ;	Chosen strategy is simple_byte
 23242  0104DC  0A00               	xorlw	0	; case 0
 23243  0104DE  B4D8               	btfsc	status,2,c
 23244  0104E0  EF8D  F08B         	goto	u23170
 23245  0104E4  0A58               	xorlw	88	; case 88
 23246  0104E6  B4D8               	btfsc	status,2,c
 23247  0104E8  D6C0               	goto	l17954
 23248  0104EA  0A3B               	xorlw	59	; case 99
 23249  0104EC  B4D8               	btfsc	status,2,c
 23250  0104EE  D7BD               	goto	l18004
 23251  0104F0  0A07               	xorlw	7	; case 100
 23252  0104F2  B4D8               	btfsc	status,2,c
 23253  0104F4  D013               	goto	l18016
 23254  0104F6  0A02               	xorlw	2	; case 102
 23255  0104F8  B4D8               	btfsc	status,2,c
 23256  0104FA  D6B5               	goto	l17952
 23257  0104FC  0A0F               	xorlw	15	; case 105
 23258  0104FE  B4D8               	btfsc	status,2,c
 23259  010500  D00D               	goto	l18016
 23260  010502  0A05               	xorlw	5	; case 108
 23261  010504  B4D8               	btfsc	status,2,c
 23262  010506  D6AD               	goto	l17950
 23263  010508  0A1F               	xorlw	31	; case 115
 23264  01050A  B4D8               	btfsc	status,2,c
 23265  01050C  D6B0               	goto	l17956
 23266  01050E  0A06               	xorlw	6	; case 117
 23267  010510  B4D8               	btfsc	status,2,c
 23268  010512  D7C6               	goto	l18010
 23269  010514  0A0D               	xorlw	13	; case 120
 23270  010516  B4D8               	btfsc	status,2,c
 23271  010518  D6A8               	goto	l17954
 23272  01051A  D7B9               	goto	l18006
 23273  01051C                     l18016:
 23274                           
 23275                           ; BSR set to: 2
 23276                           ;doprnt.c: 844: if(flag & (0x700)) {
 23277  01051C  0E07               	movlw	7
 23278  01051E  158E               	andwf	(__doprnt@flag+1)& (0+255),w,b
 23279  010520  B4D8               	btfsc	status,2,c
 23280  010522  EF0F  F088         	goto	l18260
 23281                           
 23282                           ; BSR set to: 2
 23283                           ;doprnt.c: 846: if(flag & 0x1000)
 23284  010526  A98E               	btfss	(__doprnt@flag+1)& (0+255),4,b
 23285  010528  D004               	goto	l18022
 23286                           
 23287                           ; BSR set to: 2
 23288                           ;doprnt.c: 848: prec = 6;
 23289  01052A  0E00               	movlw	0
 23290  01052C  6F8C               	movwf	(__doprnt@prec+1)& (0+255),b
 23291  01052E  0E06               	movlw	6
 23292  010530  6F8B               	movwf	__doprnt@prec& (0+255),b
 23293  010532                     l18022:
 23294                           
 23295                           ; BSR set to: 2
 23296                           ;doprnt.c: 849: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 23297  010532  C25C  FFD9         	movff	__doprnt@ap,fsr2l
 23298  010536  C25D  FFDA         	movff	__doprnt@ap+1,fsr2h
 23299  01053A  CFDF F25E          	movff	indf2,??__doprnt
 23300  01053E  0E04               	movlw	4
 23301  010540  26DE               	addwf	postinc2,f,c
 23302  010542  CFDF F25F          	movff	indf2,??__doprnt+1
 23303  010546  0E00               	movlw	0
 23304  010548  22DD               	addwfc	postdec2,f,c
 23305  01054A  C25E  FFD9         	movff	??__doprnt,fsr2l
 23306  01054E  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 23307  010552  CFDE F281          	movff	postinc2,__doprnt@fval
 23308  010556  CFDE F282          	movff	postinc2,__doprnt@fval+1
 23309  01055A  CFDE F283          	movff	postinc2,__doprnt@fval+2
 23310  01055E  CFDE F284          	movff	postinc2,__doprnt@fval+3
 23311                           
 23312                           ; BSR set to: 2
 23313                           ;doprnt.c: 850: if(fval < 0.0) {
 23314  010562  AF84               	btfss	(__doprnt@fval+3)& (0+255),7,b
 23315  010564  D015               	goto	l18030
 23316                           
 23317                           ; BSR set to: 2
 23318                           ;doprnt.c: 851: fval = -fval;
 23319  010566  C281  F200         	movff	__doprnt@fval,___flneg@f1
 23320  01056A  C282  F201         	movff	__doprnt@fval+1,___flneg@f1+1
 23321  01056E  C283  F202         	movff	__doprnt@fval+2,___flneg@f1+2
 23322  010572  C284  F203         	movff	__doprnt@fval+3,___flneg@f1+3
 23323  010576  ECCB  F0E1         	call	___flneg
 23324  01057A  C200  F281         	movff	?___flneg,__doprnt@fval
 23325  01057E  C201  F282         	movff	?___flneg+1,__doprnt@fval+1
 23326  010582  C202  F283         	movff	?___flneg+2,__doprnt@fval+2
 23327  010586  C203  F284         	movff	?___flneg+3,__doprnt@fval+3
 23328                           
 23329                           ;doprnt.c: 852: flag |= 0x03;
 23330  01058A  0E03               	movlw	3
 23331  01058C  0102               	movlb	2	; () banked
 23332  01058E  138D               	iorwf	__doprnt@flag& (0+255),f,b
 23333  010590                     l18030:
 23334                           
 23335                           ; BSR set to: 2
 23336                           ;doprnt.c: 853: };doprnt.c: 854: eexp = 0;
 23337  010590  0E00               	movlw	0
 23338  010592  6F7C               	movwf	(__doprnt@eexp+1)& (0+255),b
 23339  010594  0E00               	movlw	0
 23340  010596  6F7B               	movwf	__doprnt@eexp& (0+255),b
 23341                           
 23342                           ; BSR set to: 2
 23343                           ;doprnt.c: 855: if( fval!=0) {
 23344  010598  C281  F200         	movff	__doprnt@fval,___fleq@ff1
 23345  01059C  C282  F201         	movff	__doprnt@fval+1,___fleq@ff1+1
 23346  0105A0  C283  F202         	movff	__doprnt@fval+2,___fleq@ff1+2
 23347  0105A4  C284  F203         	movff	__doprnt@fval+3,___fleq@ff1+3
 23348  0105A8  0E00               	movlw	0
 23349  0105AA  6F04               	movwf	___fleq@ff2& (0+255),b
 23350  0105AC  0E00               	movlw	0
 23351  0105AE  6F05               	movwf	(___fleq@ff2+1)& (0+255),b
 23352  0105B0  0E00               	movlw	0
 23353  0105B2  6F06               	movwf	(___fleq@ff2+2)& (0+255),b
 23354  0105B4  0E00               	movlw	0
 23355  0105B6  6F07               	movwf	(___fleq@ff2+3)& (0+255),b
 23356  0105B8  EC9B  F0D8         	call	___fleq	;wreg free
 23357  0105BC  0102               	movlb	2	; () banked
 23358  0105BE  B0D8               	btfsc	status,0,c
 23359  0105C0  D084               	goto	l18058
 23360                           
 23361                           ; BSR set to: 2
 23362                           ;doprnt.c: 856: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
 23363  0105C2  3583               	rlcf	(__doprnt@fval+2)& (0+255),w,b
 23364  0105C4  3584               	rlcf	(__doprnt@fval+3)& (0+255),w,b
 23365  0105C6  0F82               	addlw	130
 23366  0105C8  6F7B               	movwf	__doprnt@eexp& (0+255),b
 23367  0105CA  6B7C               	clrf	(__doprnt@eexp+1)& (0+255),b
 23368  0105CC  0EFF               	movlw	255
 23369  0105CE  237C               	addwfc	(__doprnt@eexp+1)& (0+255),f,b
 23370                           
 23371                           ; BSR set to: 2
 23372                           ;doprnt.c: 857: eexp--;
 23373  0105D0  077B               	decf	__doprnt@eexp& (0+255),f,b
 23374  0105D2  A0D8               	btfss	status,0,c
 23375  0105D4  077C               	decf	(__doprnt@eexp+1)& (0+255),f,b
 23376                           
 23377                           ; BSR set to: 2
 23378                           ;doprnt.c: 858: eexp *= 3;
 23379  0105D6  C27B  F200         	movff	__doprnt@eexp,___wmul@multiplier
 23380  0105DA  C27C  F201         	movff	__doprnt@eexp+1,___wmul@multiplier+1
 23381  0105DE  0E00               	movlw	0
 23382  0105E0  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23383  0105E2  0E03               	movlw	3
 23384  0105E4  6F02               	movwf	___wmul@multiplicand& (0+255),b
 23385  0105E6  EC79  F0E2         	call	___wmul	;wreg free
 23386  0105EA  C200  F27B         	movff	?___wmul,__doprnt@eexp
 23387  0105EE  C201  F27C         	movff	?___wmul+1,__doprnt@eexp+1
 23388                           
 23389                           ;doprnt.c: 859: eexp /= 10;
 23390  0105F2  C27B  F206         	movff	__doprnt@eexp,___awdiv@dividend
 23391  0105F6  C27C  F207         	movff	__doprnt@eexp+1,___awdiv@dividend+1
 23392  0105FA  0E00               	movlw	0
 23393  0105FC  0102               	movlb	2	; () banked
 23394  0105FE  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 23395  010600  0E0A               	movlw	10
 23396  010602  6F08               	movwf	___awdiv@divisor& (0+255),b
 23397  010604  EC26  F0D9         	call	___awdiv	;wreg free
 23398  010608  C206  F27B         	movff	?___awdiv,__doprnt@eexp
 23399  01060C  C207  F27C         	movff	?___awdiv+1,__doprnt@eexp+1
 23400                           
 23401                           ;doprnt.c: 860: if(eexp < 0)
 23402  010610  0102               	movlb	2	; () banked
 23403  010612  AF7C               	btfss	(__doprnt@eexp+1)& (0+255),7,b
 23404  010614  D003               	goto	l18046
 23405                           
 23406                           ; BSR set to: 2
 23407                           ;doprnt.c: 861: eexp--;
 23408  010616  077B               	decf	__doprnt@eexp& (0+255),f,b
 23409  010618  A0D8               	btfss	status,0,c
 23410  01061A  077C               	decf	(__doprnt@eexp+1)& (0+255),f,b
 23411  01061C                     l18046:
 23412                           
 23413                           ; BSR set to: 2
 23414                           ;doprnt.c: 865: tmpval.integ = scale(-eexp);
 23415  01061C  517B               	movf	__doprnt@eexp& (0+255),w,b
 23416  01061E  0800               	sublw	0
 23417  010620  EC50  F0AD         	call	_scale
 23418  010624  C227  F27D         	movff	?_scale,__doprnt@tmpval
 23419  010628  C228  F27E         	movff	?_scale+1,__doprnt@tmpval+1
 23420  01062C  C229  F27F         	movff	?_scale+2,__doprnt@tmpval+2
 23421  010630  C22A  F280         	movff	?_scale+3,__doprnt@tmpval+3
 23422                           
 23423                           ;doprnt.c: 866: tmpval.integ *= fval;
 23424  010634  C27D  F20E         	movff	__doprnt@tmpval,___flmul@b
 23425  010638  C27E  F20F         	movff	__doprnt@tmpval+1,___flmul@b+1
 23426  01063C  C27F  F210         	movff	__doprnt@tmpval+2,___flmul@b+2
 23427  010640  C280  F211         	movff	__doprnt@tmpval+3,___flmul@b+3
 23428  010644  C281  F212         	movff	__doprnt@fval,___flmul@a
 23429  010648  C282  F213         	movff	__doprnt@fval+1,___flmul@a+1
 23430  01064C  C283  F214         	movff	__doprnt@fval+2,___flmul@a+2
 23431  010650  C284  F215         	movff	__doprnt@fval+3,___flmul@a+3
 23432  010654  ECFC  F0B4         	call	___flmul	;wreg free
 23433  010658  C20E  F27D         	movff	?___flmul,__doprnt@tmpval
 23434  01065C  C20F  F27E         	movff	?___flmul+1,__doprnt@tmpval+1
 23435  010660  C210  F27F         	movff	?___flmul+2,__doprnt@tmpval+2
 23436  010664  C211  F280         	movff	?___flmul+3,__doprnt@tmpval+3
 23437                           
 23438                           ;doprnt.c: 867: if(tmpval.integ < 1.0)
 23439  010668  C27D  F24C         	movff	__doprnt@tmpval,___flge@ff1
 23440  01066C  C27E  F24D         	movff	__doprnt@tmpval+1,___flge@ff1+1
 23441  010670  C27F  F24E         	movff	__doprnt@tmpval+2,___flge@ff1+2
 23442  010674  C280  F24F         	movff	__doprnt@tmpval+3,___flge@ff1+3
 23443  010678  0E00               	movlw	0
 23444  01067A  0102               	movlb	2	; () banked
 23445  01067C  6F50               	movwf	___flge@ff2& (0+255),b
 23446  01067E  0E00               	movlw	0
 23447  010680  6F51               	movwf	(___flge@ff2+1)& (0+255),b
 23448  010682  0E80               	movlw	128
 23449  010684  6F52               	movwf	(___flge@ff2+2)& (0+255),b
 23450  010686  0E3F               	movlw	63
 23451  010688  6F53               	movwf	(___flge@ff2+3)& (0+255),b
 23452  01068A  EC63  F0D3         	call	___flge	;wreg free
 23453  01068E  0102               	movlb	2	; () banked
 23454  010690  B0D8               	btfsc	status,0,c
 23455  010692  D004               	goto	l18054
 23456                           
 23457                           ; BSR set to: 2
 23458                           ;doprnt.c: 868: eexp--;
 23459  010694  077B               	decf	__doprnt@eexp& (0+255),f,b
 23460  010696  A0D8               	btfss	status,0,c
 23461  010698  077C               	decf	(__doprnt@eexp+1)& (0+255),f,b
 23462  01069A  D017               	goto	l18058
 23463  01069C                     l18054:
 23464                           
 23465                           ; BSR set to: 2
 23466                           ;doprnt.c: 869: else if(tmpval.integ >= 10.0)
 23467  01069C  C27D  F24C         	movff	__doprnt@tmpval,___flge@ff1
 23468  0106A0  C27E  F24D         	movff	__doprnt@tmpval+1,___flge@ff1+1
 23469  0106A4  C27F  F24E         	movff	__doprnt@tmpval+2,___flge@ff1+2
 23470  0106A8  C280  F24F         	movff	__doprnt@tmpval+3,___flge@ff1+3
 23471  0106AC  0E00               	movlw	0
 23472  0106AE  6F50               	movwf	___flge@ff2& (0+255),b
 23473  0106B0  0E00               	movlw	0
 23474  0106B2  6F51               	movwf	(___flge@ff2+1)& (0+255),b
 23475  0106B4  0E20               	movlw	32
 23476  0106B6  6F52               	movwf	(___flge@ff2+2)& (0+255),b
 23477  0106B8  0E41               	movlw	65
 23478  0106BA  6F53               	movwf	(___flge@ff2+3)& (0+255),b
 23479  0106BC  EC63  F0D3         	call	___flge	;wreg free
 23480  0106C0  0102               	movlb	2	; () banked
 23481  0106C2  A0D8               	btfss	status,0,c
 23482  0106C4  D002               	goto	l18058
 23483                           
 23484                           ; BSR set to: 2
 23485                           ;doprnt.c: 870: eexp++;
 23486  0106C6  4B7B               	infsnz	__doprnt@eexp& (0+255),f,b
 23487  0106C8  2B7C               	incf	(__doprnt@eexp+1)& (0+255),f,b
 23488  0106CA                     l18058:
 23489                           
 23490                           ; BSR set to: 2
 23491                           ;doprnt.c: 871: };doprnt.c: 1131: if(prec <= 12)
 23492  0106CA  BF8C               	btfsc	(__doprnt@prec+1)& (0+255),7,b
 23493  0106CC  D006               	goto	u22220
 23494  0106CE  518C               	movf	(__doprnt@prec+1)& (0+255),w,b
 23495  0106D0  E121               	bnz	l18062
 23496  0106D2  0E0D               	movlw	13
 23497  0106D4  5D8B               	subwf	__doprnt@prec& (0+255),w,b
 23498  0106D6  B0D8               	btfsc	status,0,c
 23499  0106D8  D01D               	goto	l18062
 23500  0106DA                     u22220:
 23501                           
 23502                           ; BSR set to: 2
 23503                           ;doprnt.c: 1132: fval += fround((unsigned int)prec);
 23504  0106DA  C281  F234         	movff	__doprnt@fval,___fladd@b
 23505  0106DE  C282  F235         	movff	__doprnt@fval+1,___fladd@b+1
 23506  0106E2  C283  F236         	movff	__doprnt@fval+2,___fladd@b+2
 23507  0106E6  C284  F237         	movff	__doprnt@fval+3,___fladd@b+3
 23508  0106EA  518B               	movf	__doprnt@prec& (0+255),w,b
 23509  0106EC  EC8E  F0BE         	call	_fround
 23510  0106F0  C227  F238         	movff	?_fround,___fladd@a
 23511  0106F4  C228  F239         	movff	?_fround+1,___fladd@a+1
 23512  0106F8  C229  F23A         	movff	?_fround+2,___fladd@a+2
 23513  0106FC  C22A  F23B         	movff	?_fround+3,___fladd@a+3
 23514  010700  ECF9  F0B9         	call	___fladd	;wreg free
 23515  010704  C234  F281         	movff	?___fladd,__doprnt@fval
 23516  010708  C235  F282         	movff	?___fladd+1,__doprnt@fval+1
 23517  01070C  C236  F283         	movff	?___fladd+2,__doprnt@fval+2
 23518  010710  C237  F284         	movff	?___fladd+3,__doprnt@fval+3
 23519  010714                     l18062:
 23520                           
 23521                           ;doprnt.c: 1135: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
 23522  010714  0102               	movlb	2	; () banked
 23523  010716  BF7C               	btfsc	(__doprnt@eexp+1)& (0+255),7,b
 23524  010718  D006               	goto	u22230
 23525  01071A  517C               	movf	(__doprnt@eexp+1)& (0+255),w,b
 23526  01071C  E131               	bnz	l18070
 23527  01071E  0E0A               	movlw	10
 23528  010720  5D7B               	subwf	__doprnt@eexp& (0+255),w,b
 23529  010722  B0D8               	btfsc	status,0,c
 23530  010724  D02D               	goto	u22260
 23531  010726                     u22230:
 23532                           
 23533                           ; BSR set to: 2
 23534  010726  C281  F200         	movff	__doprnt@fval,___fleq@ff1
 23535  01072A  C282  F201         	movff	__doprnt@fval+1,___fleq@ff1+1
 23536  01072E  C283  F202         	movff	__doprnt@fval+2,___fleq@ff1+2
 23537  010732  C284  F203         	movff	__doprnt@fval+3,___fleq@ff1+3
 23538  010736  0E00               	movlw	0
 23539  010738  6F04               	movwf	___fleq@ff2& (0+255),b
 23540  01073A  0E00               	movlw	0
 23541  01073C  6F05               	movwf	(___fleq@ff2+1)& (0+255),b
 23542  01073E  0E00               	movlw	0
 23543  010740  6F06               	movwf	(___fleq@ff2+2)& (0+255),b
 23544  010742  0E00               	movlw	0
 23545  010744  6F07               	movwf	(___fleq@ff2+3)& (0+255),b
 23546  010746  EC9B  F0D8         	call	___fleq	;wreg free
 23547  01074A  0102               	movlb	2	; () banked
 23548  01074C  B0D8               	btfsc	status,0,c
 23549  01074E  D062               	goto	l18084
 23550                           
 23551                           ; BSR set to: 2
 23552  010750  C281  F230         	movff	__doprnt@fval,___fltol@f1
 23553  010754  C282  F231         	movff	__doprnt@fval+1,___fltol@f1+1
 23554  010758  C283  F232         	movff	__doprnt@fval+2,___fltol@f1+2
 23555  01075C  C284  F233         	movff	__doprnt@fval+3,___fltol@f1+3
 23556  010760  EC61  F0D5         	call	___fltol	;wreg free
 23557  010764  0102               	movlb	2	; () banked
 23558  010766  5130               	movf	?___fltol& (0+255),w,b
 23559  010768  1131               	iorwf	(?___fltol+1)& (0+255),w,b
 23560  01076A  1132               	iorwf	(?___fltol+2)& (0+255),w,b
 23561  01076C  1133               	iorwf	(?___fltol+3)& (0+255),w,b
 23562  01076E  B4D8               	btfsc	status,2,c
 23563                           
 23564                           ; BSR set to: 2
 23565  010770  BF7C               	btfsc	(__doprnt@eexp+1)& (0+255),7,b
 23566  010772  D050               	goto	l18084
 23567  010774  517C               	movf	(__doprnt@eexp+1)& (0+255),w,b
 23568  010776  E104               	bnz	u22260
 23569  010778  0E02               	movlw	2
 23570  01077A  5D7B               	subwf	__doprnt@eexp& (0+255),w,b
 23571  01077C  A0D8               	btfss	status,0,c
 23572  01077E  D04A               	goto	l18084
 23573  010780                     u22260:
 23574  010780                     l18070:
 23575                           
 23576                           ; BSR set to: 2
 23577                           ;doprnt.c: 1139: if(tmpval.integ < 4.294967296){
 23578  010780  C27D  F24C         	movff	__doprnt@tmpval,___flge@ff1
 23579  010784  C27E  F24D         	movff	__doprnt@tmpval+1,___flge@ff1+1
 23580  010788  C27F  F24E         	movff	__doprnt@tmpval+2,___flge@ff1+2
 23581  01078C  C280  F24F         	movff	__doprnt@tmpval+3,___flge@ff1+3
 23582  010790  0E5F               	movlw	95
 23583  010792  6F50               	movwf	___flge@ff2& (0+255),b
 23584  010794  0E70               	movlw	112
 23585  010796  6F51               	movwf	(___flge@ff2+1)& (0+255),b
 23586  010798  0E89               	movlw	137
 23587  01079A  6F52               	movwf	(___flge@ff2+2)& (0+255),b
 23588  01079C  0E40               	movlw	64
 23589  01079E  6F53               	movwf	(___flge@ff2+3)& (0+255),b
 23590  0107A0  EC63  F0D3         	call	___flge	;wreg free
 23591  0107A4  0102               	movlb	2	; () banked
 23592  0107A6  B0D8               	btfsc	status,0,c
 23593  0107A8  D002               	goto	l18074
 23594                           
 23595                           ; BSR set to: 2
 23596                           ;doprnt.c: 1140: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
 23597  0107AA  0EF7               	movlw	247
 23598  0107AC  D001               	goto	L8
 23599  0107AE                     l18074:
 23600                           
 23601                           ; BSR set to: 2
 23602                           ;doprnt.c: 1142: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
 23603  0107AE  0EF8               	movlw	248
 23604  0107B0                     L8:
 23605  0107B0  277B               	addwf	__doprnt@eexp& (0+255),f,b
 23606  0107B2  0EFF               	movlw	255
 23607  0107B4  237C               	addwfc	(__doprnt@eexp+1)& (0+255),f,b
 23608                           
 23609                           ; BSR set to: 2
 23610                           ;doprnt.c: 1145: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 23611  0107B6  517B               	movf	__doprnt@eexp& (0+255),w,b
 23612  0107B8  EC50  F0AD         	call	_scale
 23613  0107BC  C227  F27D         	movff	?_scale,__doprnt@tmpval
 23614  0107C0  C228  F27E         	movff	?_scale+1,__doprnt@tmpval+1
 23615  0107C4  C229  F27F         	movff	?_scale+2,__doprnt@tmpval+2
 23616  0107C8  C22A  F280         	movff	?_scale+3,__doprnt@tmpval+3
 23617  0107CC  C281  F200         	movff	__doprnt@fval,__div_to_l_@f1
 23618  0107D0  C282  F201         	movff	__doprnt@fval+1,__div_to_l_@f1+1
 23619  0107D4  C283  F202         	movff	__doprnt@fval+2,__div_to_l_@f1+2
 23620  0107D8  C284  F203         	movff	__doprnt@fval+3,__div_to_l_@f1+3
 23621  0107DC  C27D  F204         	movff	__doprnt@tmpval,__div_to_l_@f2
 23622  0107E0  C27E  F205         	movff	__doprnt@tmpval+1,__div_to_l_@f2+1
 23623  0107E4  C27F  F206         	movff	__doprnt@tmpval+2,__div_to_l_@f2+2
 23624  0107E8  C280  F207         	movff	__doprnt@tmpval+3,__div_to_l_@f2+3
 23625  0107EC  EC7C  F0D1         	call	__div_to_l_	;wreg free
 23626  0107F0  C200  F285         	movff	?__div_to_l_,__doprnt@val
 23627  0107F4  C201  F286         	movff	?__div_to_l_+1,__doprnt@val+1
 23628  0107F8  C202  F287         	movff	?__div_to_l_+2,__doprnt@val+2
 23629  0107FC  C203  F288         	movff	?__div_to_l_+3,__doprnt@val+3
 23630                           
 23631                           ;doprnt.c: 1148: fval = 0.0;
 23632  010800  0E00               	movlw	0
 23633  010802  0102               	movlb	2	; () banked
 23634  010804  6F81               	movwf	__doprnt@fval& (0+255),b
 23635  010806  0E00               	movlw	0
 23636  010808  6F82               	movwf	(__doprnt@fval+1)& (0+255),b
 23637  01080A  0E00               	movlw	0
 23638  01080C  6F83               	movwf	(__doprnt@fval+2)& (0+255),b
 23639  01080E  0E00               	movlw	0
 23640  010810  6F84               	movwf	(__doprnt@fval+3)& (0+255),b
 23641                           
 23642                           ;doprnt.c: 1149: } else {
 23643  010812  D03C               	goto	l18088
 23644  010814                     l18084:
 23645                           
 23646                           ; BSR set to: 2
 23647                           ;doprnt.c: 1150: val = (unsigned long)fval;
 23648  010814  C281  F230         	movff	__doprnt@fval,___fltol@f1
 23649  010818  C282  F231         	movff	__doprnt@fval+1,___fltol@f1+1
 23650  01081C  C283  F232         	movff	__doprnt@fval+2,___fltol@f1+2
 23651  010820  C284  F233         	movff	__doprnt@fval+3,___fltol@f1+3
 23652  010824  EC61  F0D5         	call	___fltol	;wreg free
 23653  010828  C230  F285         	movff	?___fltol,__doprnt@val
 23654  01082C  C231  F286         	movff	?___fltol+1,__doprnt@val+1
 23655  010830  C232  F287         	movff	?___fltol+2,__doprnt@val+2
 23656  010834  C233  F288         	movff	?___fltol+3,__doprnt@val+3
 23657                           
 23658                           ;doprnt.c: 1151: fval -= (double)val;
 23659  010838  C281  F24C         	movff	__doprnt@fval,___flsub@b
 23660  01083C  C282  F24D         	movff	__doprnt@fval+1,___flsub@b+1
 23661  010840  C283  F24E         	movff	__doprnt@fval+2,___flsub@b+2
 23662  010844  C284  F24F         	movff	__doprnt@fval+3,___flsub@b+3
 23663  010848  C285  F23E         	movff	__doprnt@val,___xxtofl@val
 23664  01084C  C286  F23F         	movff	__doprnt@val+1,___xxtofl@val+1
 23665  010850  C287  F240         	movff	__doprnt@val+2,___xxtofl@val+2
 23666  010854  C288  F241         	movff	__doprnt@val+3,___xxtofl@val+3
 23667  010858  0E00               	movlw	0
 23668  01085A  EC08  F0CE         	call	___xxtofl
 23669  01085E  C23E  F250         	movff	?___xxtofl,___flsub@a
 23670  010862  C23F  F251         	movff	?___xxtofl+1,___flsub@a+1
 23671  010866  C240  F252         	movff	?___xxtofl+2,___flsub@a+2
 23672  01086A  C241  F253         	movff	?___xxtofl+3,___flsub@a+3
 23673  01086E  EC3F  F0DE         	call	___flsub	;wreg free
 23674  010872  C24C  F281         	movff	?___flsub,__doprnt@fval
 23675  010876  C24D  F282         	movff	?___flsub+1,__doprnt@fval+1
 23676  01087A  C24E  F283         	movff	?___flsub+2,__doprnt@fval+2
 23677  01087E  C24F  F284         	movff	?___flsub+3,__doprnt@fval+3
 23678                           
 23679                           ;doprnt.c: 1152: eexp = 0;
 23680  010882  0E00               	movlw	0
 23681  010884  0102               	movlb	2	; () banked
 23682  010886  6F7C               	movwf	(__doprnt@eexp+1)& (0+255),b
 23683  010888  0E00               	movlw	0
 23684  01088A  6F7B               	movwf	__doprnt@eexp& (0+255),b
 23685  01088C                     l18088:
 23686                           
 23687                           ; BSR set to: 2
 23688                           ;doprnt.c: 1153: };doprnt.c: 1155: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
 23689  01088C  0E01               	movlw	1
 23690  01088E  6F8F               	movwf	__doprnt@c& (0+255),b
 23691  010890                     l18090:
 23692                           
 23693                           ; BSR set to: 2
 23694  010890  0E0A               	movlw	10
 23695  010892  198F               	xorwf	__doprnt@c& (0+255),w,b
 23696  010894  B4D8               	btfsc	status,2,c
 23697  010896  D01B               	goto	l18102
 23698                           
 23699                           ; BSR set to: 2
 23700                           ;doprnt.c: 1156: if(val < dpowers[c])
 23701  010898  518F               	movf	__doprnt@c& (0+255),w,b
 23702  01089A  0D04               	mullw	4
 23703  01089C  0E4B               	movlw	low _dpowers
 23704  01089E  24F3               	addwf	prodl,w,c
 23705  0108A0  6EF6               	movwf	tblptrl,c
 23706  0108A2  0EE9               	movlw	high _dpowers
 23707  0108A4  20F4               	addwfc	prodh,w,c
 23708  0108A6  6EF7               	movwf	tblptrh,c
 23709  0108A8                     	if	1	;There are 3 active tblptr bytes
 23710  0108A8  6AF8               	clrf	tblptru,c
 23711  0108AA  0E00               	movlw	low (__mediumconst shr (0+16))
 23712  0108AC  22F8               	addwfc	tblptru,f,c
 23713  0108AE                     	endif
 23714  0108AE  0009               	tblrd		*+
 23715  0108B0  50F5               	movf	tablat,w,c
 23716  0108B2  5D85               	subwf	__doprnt@val& (0+255),w,b
 23717  0108B4  0009               	tblrd		*+
 23718  0108B6  50F5               	movf	tablat,w,c
 23719  0108B8  5986               	subwfb	(__doprnt@val+1)& (0+255),w,b
 23720  0108BA  0009               	tblrd		*+
 23721  0108BC  50F5               	movf	tablat,w,c
 23722  0108BE  5987               	subwfb	(__doprnt@val+2)& (0+255),w,b
 23723  0108C0  0009               	tblrd		*+
 23724  0108C2  50F5               	movf	tablat,w,c
 23725  0108C4  5988               	subwfb	(__doprnt@val+3)& (0+255),w,b
 23726  0108C6  A0D8               	btfss	status,0,c
 23727  0108C8  D002               	goto	l18102
 23728                           
 23729                           ; BSR set to: 2
 23730  0108CA  2B8F               	incf	__doprnt@c& (0+255),f,b
 23731  0108CC  D7E1               	goto	l18090
 23732  0108CE                     l18102:
 23733                           
 23734                           ; BSR set to: 2
 23735                           ;doprnt.c: 1161: width -= prec + c + eexp;
 23736  0108CE  518F               	movf	__doprnt@c& (0+255),w,b
 23737  0108D0  258B               	addwf	__doprnt@prec& (0+255),w,b
 23738  0108D2  6F5E               	movwf	??__doprnt& (0+255),b
 23739  0108D4  0E00               	movlw	0
 23740  0108D6  218C               	addwfc	(__doprnt@prec+1)& (0+255),w,b
 23741  0108D8  6F5F               	movwf	(??__doprnt+1)& (0+255),b
 23742  0108DA  517B               	movf	__doprnt@eexp& (0+255),w,b
 23743  0108DC  275E               	addwf	??__doprnt& (0+255),f,b
 23744  0108DE  517C               	movf	(__doprnt@eexp+1)& (0+255),w,b
 23745  0108E0  235F               	addwfc	(??__doprnt+1)& (0+255),f,b
 23746  0108E2  515E               	movf	??__doprnt& (0+255),w,b
 23747  0108E4  5F89               	subwf	__doprnt@width& (0+255),f,b
 23748  0108E6  515F               	movf	(??__doprnt+1)& (0+255),w,b
 23749  0108E8  5B8A               	subwfb	(__doprnt@width+1)& (0+255),f,b
 23750                           
 23751                           ;doprnt.c: 1162: if(;doprnt.c: 1166: prec)
 23752  0108EA  518B               	movf	__doprnt@prec& (0+255),w,b
 23753  0108EC  118C               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 23754  0108EE  B4D8               	btfsc	status,2,c
 23755  0108F0  D003               	goto	l18106
 23756                           
 23757                           ; BSR set to: 2
 23758                           ;doprnt.c: 1167: width--;
 23759  0108F2  0789               	decf	__doprnt@width& (0+255),f,b
 23760  0108F4  A0D8               	btfss	status,0,c
 23761  0108F6  078A               	decf	(__doprnt@width+1)& (0+255),f,b
 23762  0108F8                     l18106:
 23763                           
 23764                           ; BSR set to: 2
 23765                           ;doprnt.c: 1168: if(flag & 0x03)
 23766  0108F8  0E03               	movlw	3
 23767  0108FA  158D               	andwf	__doprnt@flag& (0+255),w,b
 23768  0108FC  6F5E               	movwf	??__doprnt& (0+255),b
 23769  0108FE  0E00               	movlw	0
 23770  010900  158E               	andwf	(__doprnt@flag+1)& (0+255),w,b
 23771  010902  6F5F               	movwf	(??__doprnt+1)& (0+255),b
 23772  010904  515E               	movf	??__doprnt& (0+255),w,b
 23773  010906  115F               	iorwf	(??__doprnt+1)& (0+255),w,b
 23774  010908  B4D8               	btfsc	status,2,c
 23775  01090A  D003               	goto	l18110
 23776                           
 23777                           ; BSR set to: 2
 23778                           ;doprnt.c: 1169: width--;
 23779  01090C  0789               	decf	__doprnt@width& (0+255),f,b
 23780  01090E  A0D8               	btfss	status,0,c
 23781  010910  078A               	decf	(__doprnt@width+1)& (0+255),f,b
 23782  010912                     l18110:
 23783                           
 23784                           ; BSR set to: 2
 23785                           ;doprnt.c: 1172: if(flag & 0x04) {
 23786  010912  A58D               	btfss	__doprnt@flag& (0+255),2,b
 23787  010914  D0F0               	goto	l18162
 23788                           
 23789                           ; BSR set to: 2
 23790                           ;doprnt.c: 1174: if(flag & 0x02)
 23791  010916  A38D               	btfss	__doprnt@flag& (0+255),1,b
 23792  010918  D041               	goto	l2469
 23793                           
 23794                           ; BSR set to: 2
 23795  01091A  EE20 F002          	lfsr	2,2
 23796  01091E  5158               	movf	__doprnt@pb& (0+255),w,b
 23797  010920  26D9               	addwf	fsr2l,f,c
 23798  010922  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 23799  010924  22DA               	addwfc	fsr2h,f,c
 23800  010926  50DE               	movf	postinc2,w,c
 23801  010928  10DE               	iorwf	postinc2,w,c
 23802  01092A  10DE               	iorwf	postinc2,w,c
 23803  01092C  B4D8               	btfsc	status,2,c
 23804  01092E  D01D               	goto	l2471
 23805                           
 23806                           ; BSR set to: 2
 23807  010930  B18D               	btfsc	__doprnt@flag& (0+255),0,b
 23808  010932  D004               	goto	l18120
 23809                           
 23810                           ; BSR set to: 2
 23811  010934  0E00               	movlw	0
 23812  010936  6F68               	movwf	(__doprnt$4976+1)& (0+255),b
 23813  010938  0E2B               	movlw	43
 23814  01093A  D003               	goto	L9
 23815  01093C                     l18120:
 23816                           
 23817                           ; BSR set to: 2
 23818  01093C  0E00               	movlw	0
 23819  01093E  6F68               	movwf	(__doprnt$4976+1)& (0+255),b
 23820  010940  0E2D               	movlw	45
 23821  010942                     L9:
 23822  010942  6F67               	movwf	__doprnt$4976& (0+255),b
 23823                           
 23824                           ; BSR set to: 2
 23825  010944  EE20 F002          	lfsr	2,2
 23826  010948  5158               	movf	__doprnt@pb& (0+255),w,b
 23827  01094A  26D9               	addwf	fsr2l,f,c
 23828  01094C  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 23829  01094E  22DA               	addwfc	fsr2h,f,c
 23830  010950  D801               	call	u22368
 23831  010952  D091               	goto	l18150
 23832  010954                     u22368:
 23833  010954  0005               	push	
 23834  010956  6EFA               	movwf	pclath,c
 23835  010958  50DE               	movf	postinc2,w,c
 23836  01095A  6EFD               	movwf	tosl,c
 23837  01095C  50DE               	movf	postinc2,w,c
 23838  01095E  6EFE               	movwf	tosh,c
 23839  010960  50DE               	movf	postinc2,w,c
 23840  010962  6EFF               	movwf	tosu,c
 23841  010964  50FA               	movf	pclath,w,c
 23842  010966  5167               	movf	__doprnt$4976& (0+255),w,b
 23843  010968  0012               	return		;indir
 23844  01096A                     l2471:
 23845                           
 23846                           ; BSR set to: 2
 23847  01096A  B18D               	btfsc	__doprnt@flag& (0+255),0,b
 23848  01096C  D004               	goto	l18126
 23849                           
 23850                           ; BSR set to: 2
 23851  01096E  0E00               	movlw	0
 23852  010970  6F6A               	movwf	(__doprnt$4977+1)& (0+255),b
 23853  010972  0E2B               	movlw	43
 23854  010974  D003               	goto	L10
 23855  010976                     l18126:
 23856                           
 23857                           ; BSR set to: 2
 23858  010976  0E00               	movlw	0
 23859  010978  6F6A               	movwf	(__doprnt$4977+1)& (0+255),b
 23860  01097A  0E2D               	movlw	45
 23861  01097C                     L10:
 23862  01097C  6F69               	movwf	__doprnt$4977& (0+255),b
 23863                           
 23864                           ; BSR set to: 2
 23865  01097E  C258  FFD9         	movff	__doprnt@pb,fsr2l
 23866  010982  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 23867  010986  CFDE F25E          	movff	postinc2,??__doprnt
 23868  01098A  CFDD F25F          	movff	postdec2,??__doprnt+1
 23869  01098E  C25E  FFD9         	movff	??__doprnt,fsr2l
 23870  010992  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 23871  010996  C269  FFDF         	movff	__doprnt$4977,indf2
 23872  01099A  D02E               	goto	l18138
 23873  01099C                     l2469:
 23874                           
 23875                           ; BSR set to: 2
 23876                           ;doprnt.c: 1180: else;doprnt.c: 1183: if(flag & 0x01)
 23877  01099C  A18D               	btfss	__doprnt@flag& (0+255),0,b
 23878  01099E  D06B               	goto	l18150
 23879                           
 23880                           ; BSR set to: 2
 23881  0109A0  EE20 F002          	lfsr	2,2
 23882  0109A4  5158               	movf	__doprnt@pb& (0+255),w,b
 23883  0109A6  26D9               	addwf	fsr2l,f,c
 23884  0109A8  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 23885  0109AA  22DA               	addwfc	fsr2h,f,c
 23886  0109AC  50DE               	movf	postinc2,w,c
 23887  0109AE  10DE               	iorwf	postinc2,w,c
 23888  0109B0  10DE               	iorwf	postinc2,w,c
 23889  0109B2  B4D8               	btfsc	status,2,c
 23890  0109B4  D013               	goto	l18136
 23891                           
 23892                           ; BSR set to: 2
 23893  0109B6  EE20 F002          	lfsr	2,2
 23894  0109BA  5158               	movf	__doprnt@pb& (0+255),w,b
 23895  0109BC  26D9               	addwf	fsr2l,f,c
 23896  0109BE  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 23897  0109C0  22DA               	addwfc	fsr2h,f,c
 23898  0109C2  D801               	call	u22408
 23899  0109C4  D058               	goto	l18150
 23900  0109C6                     u22408:
 23901  0109C6  0005               	push	
 23902  0109C8  6EFA               	movwf	pclath,c
 23903  0109CA  50DE               	movf	postinc2,w,c
 23904  0109CC  6EFD               	movwf	tosl,c
 23905  0109CE  50DE               	movf	postinc2,w,c
 23906  0109D0  6EFE               	movwf	tosh,c
 23907  0109D2  50DE               	movf	postinc2,w,c
 23908  0109D4  6EFF               	movwf	tosu,c
 23909  0109D6  50FA               	movf	pclath,w,c
 23910  0109D8  0E20               	movlw	32
 23911  0109DA  0012               	return		;indir
 23912  0109DC                     l18136:
 23913                           
 23914                           ; BSR set to: 2
 23915  0109DC  C258  FFD9         	movff	__doprnt@pb,fsr2l
 23916  0109E0  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 23917  0109E4  CFDE F25E          	movff	postinc2,??__doprnt
 23918  0109E8  CFDD F25F          	movff	postdec2,??__doprnt+1
 23919  0109EC  C25E  FFD9         	movff	??__doprnt,fsr2l
 23920  0109F0  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 23921  0109F4  0E20               	movlw	32
 23922  0109F6  6EDF               	movwf	indf2,c
 23923  0109F8                     l18138:
 23924                           
 23925                           ; BSR set to: 2
 23926  0109F8  C258  FFD9         	movff	__doprnt@pb,fsr2l
 23927  0109FC  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 23928  010A00  2ADE               	incf	postinc2,f,c
 23929  010A02  0E00               	movlw	0
 23930  010A04  22DD               	addwfc	postdec2,f,c
 23931  010A06  D037               	goto	l18150
 23932  010A08                     l18140:
 23933                           
 23934                           ; BSR set to: 2
 23935  010A08  EE20 F002          	lfsr	2,2
 23936  010A0C  5158               	movf	__doprnt@pb& (0+255),w,b
 23937  010A0E  26D9               	addwf	fsr2l,f,c
 23938  010A10  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 23939  010A12  22DA               	addwfc	fsr2h,f,c
 23940  010A14  50DE               	movf	postinc2,w,c
 23941  010A16  10DE               	iorwf	postinc2,w,c
 23942  010A18  10DE               	iorwf	postinc2,w,c
 23943  010A1A  B4D8               	btfsc	status,2,c
 23944  010A1C  D013               	goto	l18144
 23945                           
 23946                           ; BSR set to: 2
 23947  010A1E  EE20 F002          	lfsr	2,2
 23948  010A22  5158               	movf	__doprnt@pb& (0+255),w,b
 23949  010A24  26D9               	addwf	fsr2l,f,c
 23950  010A26  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 23951  010A28  22DA               	addwfc	fsr2h,f,c
 23952  010A2A  D801               	call	u22428
 23953  010A2C  D020               	goto	l18148
 23954  010A2E                     u22428:
 23955  010A2E  0005               	push	
 23956  010A30  6EFA               	movwf	pclath,c
 23957  010A32  50DE               	movf	postinc2,w,c
 23958  010A34  6EFD               	movwf	tosl,c
 23959  010A36  50DE               	movf	postinc2,w,c
 23960  010A38  6EFE               	movwf	tosh,c
 23961  010A3A  50DE               	movf	postinc2,w,c
 23962  010A3C  6EFF               	movwf	tosu,c
 23963  010A3E  50FA               	movf	pclath,w,c
 23964  010A40  0E30               	movlw	48
 23965  010A42  0012               	return		;indir
 23966  010A44                     l18144:
 23967                           
 23968                           ; BSR set to: 2
 23969  010A44  C258  FFD9         	movff	__doprnt@pb,fsr2l
 23970  010A48  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 23971  010A4C  CFDE F25E          	movff	postinc2,??__doprnt
 23972  010A50  CFDD F25F          	movff	postdec2,??__doprnt+1
 23973  010A54  C25E  FFD9         	movff	??__doprnt,fsr2l
 23974  010A58  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 23975  010A5C  0E30               	movlw	48
 23976  010A5E  6EDF               	movwf	indf2,c
 23977                           
 23978                           ; BSR set to: 2
 23979  010A60  C258  FFD9         	movff	__doprnt@pb,fsr2l
 23980  010A64  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 23981  010A68  2ADE               	incf	postinc2,f,c
 23982  010A6A  0E00               	movlw	0
 23983  010A6C  22DD               	addwfc	postdec2,f,c
 23984  010A6E                     l18148:
 23985                           
 23986                           ;doprnt.c: 1189: width--;
 23987  010A6E  0102               	movlb	2	; () banked
 23988  010A70  0789               	decf	__doprnt@width& (0+255),f,b
 23989  010A72  A0D8               	btfss	status,0,c
 23990  010A74  078A               	decf	(__doprnt@width+1)& (0+255),f,b
 23991  010A76                     l18150:
 23992  010A76  0102               	movlb	2	; () banked
 23993  010A78  BF8A               	btfsc	(__doprnt@width+1)& (0+255),7,b
 23994  010A7A  D12F               	goto	l18200
 23995  010A7C  518A               	movf	(__doprnt@width+1)& (0+255),w,b
 23996  010A7E  E1C4               	bnz	l18140
 23997  010A80  0589               	decf	__doprnt@width& (0+255),w,b
 23998  010A82  A0D8               	btfss	status,0,c
 23999  010A84  D12A               	goto	l18200
 24000  010A86  D7C0               	goto	l18140
 24001  010A88                     l18152:
 24002                           
 24003                           ; BSR set to: 2
 24004  010A88  EE20 F002          	lfsr	2,2
 24005  010A8C  5158               	movf	__doprnt@pb& (0+255),w,b
 24006  010A8E  26D9               	addwf	fsr2l,f,c
 24007  010A90  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24008  010A92  22DA               	addwfc	fsr2h,f,c
 24009  010A94  50DE               	movf	postinc2,w,c
 24010  010A96  10DE               	iorwf	postinc2,w,c
 24011  010A98  10DE               	iorwf	postinc2,w,c
 24012  010A9A  B4D8               	btfsc	status,2,c
 24013  010A9C  D013               	goto	l18156
 24014                           
 24015                           ; BSR set to: 2
 24016  010A9E  EE20 F002          	lfsr	2,2
 24017  010AA2  5158               	movf	__doprnt@pb& (0+255),w,b
 24018  010AA4  26D9               	addwf	fsr2l,f,c
 24019  010AA6  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24020  010AA8  22DA               	addwfc	fsr2h,f,c
 24021  010AAA  D801               	call	u22458
 24022  010AAC  D020               	goto	l18160
 24023  010AAE                     u22458:
 24024  010AAE  0005               	push	
 24025  010AB0  6EFA               	movwf	pclath,c
 24026  010AB2  50DE               	movf	postinc2,w,c
 24027  010AB4  6EFD               	movwf	tosl,c
 24028  010AB6  50DE               	movf	postinc2,w,c
 24029  010AB8  6EFE               	movwf	tosh,c
 24030  010ABA  50DE               	movf	postinc2,w,c
 24031  010ABC  6EFF               	movwf	tosu,c
 24032  010ABE  50FA               	movf	pclath,w,c
 24033  010AC0  0E20               	movlw	32
 24034  010AC2  0012               	return		;indir
 24035  010AC4                     l18156:
 24036                           
 24037                           ; BSR set to: 2
 24038  010AC4  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24039  010AC8  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24040  010ACC  CFDE F25E          	movff	postinc2,??__doprnt
 24041  010AD0  CFDD F25F          	movff	postdec2,??__doprnt+1
 24042  010AD4  C25E  FFD9         	movff	??__doprnt,fsr2l
 24043  010AD8  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 24044  010ADC  0E20               	movlw	32
 24045  010ADE  6EDF               	movwf	indf2,c
 24046                           
 24047                           ; BSR set to: 2
 24048  010AE0  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24049  010AE4  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24050  010AE8  2ADE               	incf	postinc2,f,c
 24051  010AEA  0E00               	movlw	0
 24052  010AEC  22DD               	addwfc	postdec2,f,c
 24053  010AEE                     l18160:
 24054                           
 24055                           ;doprnt.c: 1201: width--;
 24056  010AEE  0102               	movlb	2	; () banked
 24057  010AF0  0789               	decf	__doprnt@width& (0+255),f,b
 24058  010AF2  A0D8               	btfss	status,0,c
 24059  010AF4  078A               	decf	(__doprnt@width+1)& (0+255),f,b
 24060  010AF6                     l18162:
 24061                           
 24062                           ; BSR set to: 2
 24063  010AF6  BF8A               	btfsc	(__doprnt@width+1)& (0+255),7,b
 24064  010AF8  D005               	goto	u22460
 24065  010AFA  518A               	movf	(__doprnt@width+1)& (0+255),w,b
 24066  010AFC  E1C5               	bnz	l18152
 24067  010AFE  0589               	decf	__doprnt@width& (0+255),w,b
 24068  010B00  B0D8               	btfsc	status,0,c
 24069  010B02  D7C2               	goto	l18152
 24070  010B04                     u22460:
 24071                           
 24072                           ; BSR set to: 2
 24073                           ;doprnt.c: 1202: };doprnt.c: 1205: if(flag & 0x02)
 24074  010B04  A38D               	btfss	__doprnt@flag& (0+255),1,b
 24075  010B06  D041               	goto	l2503
 24076                           
 24077                           ; BSR set to: 2
 24078  010B08  EE20 F002          	lfsr	2,2
 24079  010B0C  5158               	movf	__doprnt@pb& (0+255),w,b
 24080  010B0E  26D9               	addwf	fsr2l,f,c
 24081  010B10  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24082  010B12  22DA               	addwfc	fsr2h,f,c
 24083  010B14  50DE               	movf	postinc2,w,c
 24084  010B16  10DE               	iorwf	postinc2,w,c
 24085  010B18  10DE               	iorwf	postinc2,w,c
 24086  010B1A  B4D8               	btfsc	status,2,c
 24087  010B1C  D01D               	goto	l2505
 24088                           
 24089                           ; BSR set to: 2
 24090  010B1E  B18D               	btfsc	__doprnt@flag& (0+255),0,b
 24091  010B20  D004               	goto	l18170
 24092                           
 24093                           ; BSR set to: 2
 24094  010B22  0E00               	movlw	0
 24095  010B24  6F6C               	movwf	(__doprnt$4978+1)& (0+255),b
 24096  010B26  0E2B               	movlw	43
 24097  010B28  D003               	goto	L11
 24098  010B2A                     l18170:
 24099                           
 24100                           ; BSR set to: 2
 24101  010B2A  0E00               	movlw	0
 24102  010B2C  6F6C               	movwf	(__doprnt$4978+1)& (0+255),b
 24103  010B2E  0E2D               	movlw	45
 24104  010B30                     L11:
 24105  010B30  6F6B               	movwf	__doprnt$4978& (0+255),b
 24106                           
 24107                           ; BSR set to: 2
 24108  010B32  EE20 F002          	lfsr	2,2
 24109  010B36  5158               	movf	__doprnt@pb& (0+255),w,b
 24110  010B38  26D9               	addwf	fsr2l,f,c
 24111  010B3A  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24112  010B3C  22DA               	addwfc	fsr2h,f,c
 24113  010B3E  D801               	call	u22508
 24114  010B40  D0CC               	goto	l18200
 24115  010B42                     u22508:
 24116  010B42  0005               	push	
 24117  010B44  6EFA               	movwf	pclath,c
 24118  010B46  50DE               	movf	postinc2,w,c
 24119  010B48  6EFD               	movwf	tosl,c
 24120  010B4A  50DE               	movf	postinc2,w,c
 24121  010B4C  6EFE               	movwf	tosh,c
 24122  010B4E  50DE               	movf	postinc2,w,c
 24123  010B50  6EFF               	movwf	tosu,c
 24124  010B52  50FA               	movf	pclath,w,c
 24125  010B54  516B               	movf	__doprnt$4978& (0+255),w,b
 24126  010B56  0012               	return		;indir
 24127  010B58                     l2505:
 24128                           
 24129                           ; BSR set to: 2
 24130  010B58  B18D               	btfsc	__doprnt@flag& (0+255),0,b
 24131  010B5A  D004               	goto	l18176
 24132                           
 24133                           ; BSR set to: 2
 24134  010B5C  0E00               	movlw	0
 24135  010B5E  6F6E               	movwf	(__doprnt$4979+1)& (0+255),b
 24136  010B60  0E2B               	movlw	43
 24137  010B62  D003               	goto	L12
 24138  010B64                     l18176:
 24139                           
 24140                           ; BSR set to: 2
 24141  010B64  0E00               	movlw	0
 24142  010B66  6F6E               	movwf	(__doprnt$4979+1)& (0+255),b
 24143  010B68  0E2D               	movlw	45
 24144  010B6A                     L12:
 24145  010B6A  6F6D               	movwf	__doprnt$4979& (0+255),b
 24146                           
 24147                           ; BSR set to: 2
 24148  010B6C  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24149  010B70  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24150  010B74  CFDE F25E          	movff	postinc2,??__doprnt
 24151  010B78  CFDD F25F          	movff	postdec2,??__doprnt+1
 24152  010B7C  C25E  FFD9         	movff	??__doprnt,fsr2l
 24153  010B80  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 24154  010B84  C26D  FFDF         	movff	__doprnt$4979,indf2
 24155  010B88  D0A1               	goto	L13
 24156  010B8A                     l2503:
 24157                           
 24158                           ; BSR set to: 2
 24159                           ;doprnt.c: 1211: else if(flag & 0x01)
 24160  010B8A  A18D               	btfss	__doprnt@flag& (0+255),0,b
 24161  010B8C  D0A6               	goto	l18200
 24162                           
 24163                           ; BSR set to: 2
 24164  010B8E  EE20 F002          	lfsr	2,2
 24165  010B92  5158               	movf	__doprnt@pb& (0+255),w,b
 24166  010B94  26D9               	addwf	fsr2l,f,c
 24167  010B96  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24168  010B98  22DA               	addwfc	fsr2h,f,c
 24169  010B9A  50DE               	movf	postinc2,w,c
 24170  010B9C  10DE               	iorwf	postinc2,w,c
 24171  010B9E  10DE               	iorwf	postinc2,w,c
 24172  010BA0  B4D8               	btfsc	status,2,c
 24173  010BA2  D013               	goto	l18186
 24174                           
 24175                           ; BSR set to: 2
 24176  010BA4  EE20 F002          	lfsr	2,2
 24177  010BA8  5158               	movf	__doprnt@pb& (0+255),w,b
 24178  010BAA  26D9               	addwf	fsr2l,f,c
 24179  010BAC  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24180  010BAE  22DA               	addwfc	fsr2h,f,c
 24181  010BB0  D801               	call	u22548
 24182  010BB2  D093               	goto	l18200
 24183  010BB4                     u22548:
 24184  010BB4  0005               	push	
 24185  010BB6  6EFA               	movwf	pclath,c
 24186  010BB8  50DE               	movf	postinc2,w,c
 24187  010BBA  6EFD               	movwf	tosl,c
 24188  010BBC  50DE               	movf	postinc2,w,c
 24189  010BBE  6EFE               	movwf	tosh,c
 24190  010BC0  50DE               	movf	postinc2,w,c
 24191  010BC2  6EFF               	movwf	tosu,c
 24192  010BC4  50FA               	movf	pclath,w,c
 24193  010BC6  0E20               	movlw	32
 24194  010BC8  0012               	return		;indir
 24195  010BCA                     l18186:
 24196                           
 24197                           ; BSR set to: 2
 24198  010BCA  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24199  010BCE  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24200  010BD2  CFDE F25E          	movff	postinc2,??__doprnt
 24201  010BD6  CFDD F25F          	movff	postdec2,??__doprnt+1
 24202  010BDA  C25E  FFD9         	movff	??__doprnt,fsr2l
 24203  010BDE  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 24204  010BE2  0E20               	movlw	32
 24205  010BE4  D072               	goto	L58
 24206  010BE6                     l18190:
 24207                           
 24208                           ; BSR set to: 2
 24209                           ;doprnt.c: 1219: {;doprnt.c: 1220: tmpval.vd = val/dpowers[c];
 24210  010BE6  C285  F200         	movff	__doprnt@val,___lldiv@dividend
 24211  010BEA  C286  F201         	movff	__doprnt@val+1,___lldiv@dividend+1
 24212  010BEE  C287  F202         	movff	__doprnt@val+2,___lldiv@dividend+2
 24213  010BF2  C288  F203         	movff	__doprnt@val+3,___lldiv@dividend+3
 24214  010BF6  518F               	movf	__doprnt@c& (0+255),w,b
 24215  010BF8  0D04               	mullw	4
 24216  010BFA  0E4B               	movlw	low _dpowers
 24217  010BFC  24F3               	addwf	prodl,w,c
 24218  010BFE  6EF6               	movwf	tblptrl,c
 24219  010C00  0EE9               	movlw	high _dpowers
 24220  010C02  20F4               	addwfc	prodh,w,c
 24221  010C04  6EF7               	movwf	tblptrh,c
 24222  010C06                     	if	1	;There are 3 active tblptr bytes
 24223  010C06  6AF8               	clrf	tblptru,c
 24224  010C08  0E00               	movlw	low (__mediumconst shr (0+16))
 24225  010C0A  22F8               	addwfc	tblptru,f,c
 24226  010C0C                     	endif
 24227  010C0C  0009               	tblrd		*+
 24228  010C0E  CFF5 F204          	movff	tablat,___lldiv@divisor
 24229  010C12  0009               	tblrd		*+
 24230  010C14  CFF5 F205          	movff	tablat,___lldiv@divisor+1
 24231  010C18  0009               	tblrd		*+
 24232  010C1A  CFF5 F206          	movff	tablat,___lldiv@divisor+2
 24233  010C1E  000A               	tblrd		*-
 24234  010C20  CFF5 F207          	movff	tablat,___lldiv@divisor+3
 24235  010C24  EC69  F0D9         	call	___lldiv
 24236  010C28  C200  F27D         	movff	?___lldiv,__doprnt@tmpval
 24237  010C2C  C201  F27E         	movff	?___lldiv+1,__doprnt@tmpval+1
 24238  010C30  C202  F27F         	movff	?___lldiv+2,__doprnt@tmpval+2
 24239  010C34  C203  F280         	movff	?___lldiv+3,__doprnt@tmpval+3
 24240                           
 24241                           ;doprnt.c: 1221: tmpval.vd %= 10;
 24242  010C38  C27D  F20D         	movff	__doprnt@tmpval,___llmod@dividend
 24243  010C3C  C27E  F20E         	movff	__doprnt@tmpval+1,___llmod@dividend+1
 24244  010C40  C27F  F20F         	movff	__doprnt@tmpval+2,___llmod@dividend+2
 24245  010C44  C280  F210         	movff	__doprnt@tmpval+3,___llmod@dividend+3
 24246  010C48  0E0A               	movlw	10
 24247  010C4A  0102               	movlb	2	; () banked
 24248  010C4C  6F11               	movwf	___llmod@divisor& (0+255),b
 24249  010C4E  0E00               	movlw	0
 24250  010C50  6F12               	movwf	(___llmod@divisor+1)& (0+255),b
 24251  010C52  0E00               	movlw	0
 24252  010C54  6F13               	movwf	(___llmod@divisor+2)& (0+255),b
 24253  010C56  0E00               	movlw	0
 24254  010C58  6F14               	movwf	(___llmod@divisor+3)& (0+255),b
 24255  010C5A  EC9F  F0DA         	call	___llmod	;wreg free
 24256  010C5E  C20D  F27D         	movff	?___llmod,__doprnt@tmpval
 24257  010C62  C20E  F27E         	movff	?___llmod+1,__doprnt@tmpval+1
 24258  010C66  C20F  F27F         	movff	?___llmod+2,__doprnt@tmpval+2
 24259  010C6A  C210  F280         	movff	?___llmod+3,__doprnt@tmpval+3
 24260  010C6E  0102               	movlb	2	; () banked
 24261  010C70  EE20 F002          	lfsr	2,2
 24262  010C74  5158               	movf	__doprnt@pb& (0+255),w,b
 24263  010C76  26D9               	addwf	fsr2l,f,c
 24264  010C78  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24265  010C7A  22DA               	addwfc	fsr2h,f,c
 24266  010C7C  50DE               	movf	postinc2,w,c
 24267  010C7E  10DE               	iorwf	postinc2,w,c
 24268  010C80  10DE               	iorwf	postinc2,w,c
 24269  010C82  B4D8               	btfsc	status,2,c
 24270  010C84  D014               	goto	l18198
 24271                           
 24272                           ; BSR set to: 2
 24273  010C86  EE20 F002          	lfsr	2,2
 24274  010C8A  5158               	movf	__doprnt@pb& (0+255),w,b
 24275  010C8C  26D9               	addwf	fsr2l,f,c
 24276  010C8E  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24277  010C90  22DA               	addwfc	fsr2h,f,c
 24278  010C92  D801               	call	u22568
 24279  010C94  D022               	goto	l18200
 24280  010C96                     u22568:
 24281  010C96  0005               	push	
 24282  010C98  6EFA               	movwf	pclath,c
 24283  010C9A  50DE               	movf	postinc2,w,c
 24284  010C9C  6EFD               	movwf	tosl,c
 24285  010C9E  50DE               	movf	postinc2,w,c
 24286  010CA0  6EFE               	movwf	tosh,c
 24287  010CA2  50DE               	movf	postinc2,w,c
 24288  010CA4  6EFF               	movwf	tosu,c
 24289  010CA6  50FA               	movf	pclath,w,c
 24290  010CA8  517D               	movf	__doprnt@tmpval& (0+255),w,b
 24291  010CAA  0F30               	addlw	48
 24292  010CAC  0012               	return		;indir
 24293  010CAE                     l18198:
 24294                           
 24295                           ; BSR set to: 2
 24296  010CAE  517D               	movf	__doprnt@tmpval& (0+255),w,b
 24297  010CB0  0F30               	addlw	48
 24298  010CB2  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24299  010CB6  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24300  010CBA  CFDE F25E          	movff	postinc2,??__doprnt
 24301  010CBE  CFDD F25F          	movff	postdec2,??__doprnt+1
 24302  010CC2  C25E  FFD9         	movff	??__doprnt,fsr2l
 24303  010CC6  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 24304  010CCA                     L58:
 24305  010CCA  6EDF               	movwf	indf2,c
 24306  010CCC                     L13:
 24307  010CCC  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24308  010CD0  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24309  010CD4  2ADE               	incf	postinc2,f,c
 24310  010CD6  0E00               	movlw	0
 24311  010CD8  22DD               	addwfc	postdec2,f,c
 24312  010CDA                     l18200:
 24313  010CDA  0102               	movlb	2	; () banked
 24314  010CDC  078F               	decf	__doprnt@c& (0+255),f,b
 24315  010CDE  298F               	incf	__doprnt@c& (0+255),w,b
 24316  010CE0  B4D8               	btfsc	status,2,c
 24317  010CE2  D038               	goto	l18212
 24318  010CE4  D780               	goto	l18190
 24319  010CE6                     l18202:
 24320                           
 24321                           ; BSR set to: 2
 24322  010CE6  EE20 F002          	lfsr	2,2
 24323  010CEA  5158               	movf	__doprnt@pb& (0+255),w,b
 24324  010CEC  26D9               	addwf	fsr2l,f,c
 24325  010CEE  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24326  010CF0  22DA               	addwfc	fsr2h,f,c
 24327  010CF2  50DE               	movf	postinc2,w,c
 24328  010CF4  10DE               	iorwf	postinc2,w,c
 24329  010CF6  10DE               	iorwf	postinc2,w,c
 24330  010CF8  B4D8               	btfsc	status,2,c
 24331  010CFA  D013               	goto	l18206
 24332                           
 24333                           ; BSR set to: 2
 24334  010CFC  EE20 F002          	lfsr	2,2
 24335  010D00  5158               	movf	__doprnt@pb& (0+255),w,b
 24336  010D02  26D9               	addwf	fsr2l,f,c
 24337  010D04  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24338  010D06  22DA               	addwfc	fsr2h,f,c
 24339  010D08  D801               	call	u22598
 24340  010D0A  D020               	goto	l18210
 24341  010D0C                     u22598:
 24342  010D0C  0005               	push	
 24343  010D0E  6EFA               	movwf	pclath,c
 24344  010D10  50DE               	movf	postinc2,w,c
 24345  010D12  6EFD               	movwf	tosl,c
 24346  010D14  50DE               	movf	postinc2,w,c
 24347  010D16  6EFE               	movwf	tosh,c
 24348  010D18  50DE               	movf	postinc2,w,c
 24349  010D1A  6EFF               	movwf	tosu,c
 24350  010D1C  50FA               	movf	pclath,w,c
 24351  010D1E  0E30               	movlw	48
 24352  010D20  0012               	return		;indir
 24353  010D22                     l18206:
 24354                           
 24355                           ; BSR set to: 2
 24356  010D22  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24357  010D26  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24358  010D2A  CFDE F25E          	movff	postinc2,??__doprnt
 24359  010D2E  CFDD F25F          	movff	postdec2,??__doprnt+1
 24360  010D32  C25E  FFD9         	movff	??__doprnt,fsr2l
 24361  010D36  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 24362  010D3A  0E30               	movlw	48
 24363  010D3C  6EDF               	movwf	indf2,c
 24364                           
 24365                           ; BSR set to: 2
 24366  010D3E  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24367  010D42  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24368  010D46  2ADE               	incf	postinc2,f,c
 24369  010D48  0E00               	movlw	0
 24370  010D4A  22DD               	addwfc	postdec2,f,c
 24371  010D4C                     l18210:
 24372                           
 24373                           ;doprnt.c: 1228: eexp--;
 24374  010D4C  0102               	movlb	2	; () banked
 24375  010D4E  077B               	decf	__doprnt@eexp& (0+255),f,b
 24376  010D50  A0D8               	btfss	status,0,c
 24377  010D52  077C               	decf	(__doprnt@eexp+1)& (0+255),f,b
 24378  010D54                     l18212:
 24379                           
 24380                           ; BSR set to: 2
 24381  010D54  BF7C               	btfsc	(__doprnt@eexp+1)& (0+255),7,b
 24382  010D56  D005               	goto	u22600
 24383  010D58  517C               	movf	(__doprnt@eexp+1)& (0+255),w,b
 24384  010D5A  E1C5               	bnz	l18202
 24385  010D5C  057B               	decf	__doprnt@eexp& (0+255),w,b
 24386  010D5E  B0D8               	btfsc	status,0,c
 24387  010D60  D7C2               	goto	l18202
 24388  010D62                     u22600:
 24389                           
 24390                           ; BSR set to: 2
 24391                           ;doprnt.c: 1229: };doprnt.c: 1230: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
 24392  010D62  BF8C               	btfsc	(__doprnt@prec+1)& (0+255),7,b
 24393  010D64  D009               	goto	l2536
 24394  010D66  518C               	movf	(__doprnt@prec+1)& (0+255),w,b
 24395  010D68  E104               	bnz	u22610
 24396  010D6A  0E09               	movlw	9
 24397  010D6C  5D8B               	subwf	__doprnt@prec& (0+255),w,b
 24398  010D6E  A0D8               	btfss	status,0,c
 24399  010D70  D003               	goto	l2536
 24400  010D72                     u22610:
 24401                           
 24402                           ; BSR set to: 2
 24403                           ;doprnt.c: 1231: c = (sizeof dpowers/sizeof dpowers[0])-2;
 24404  010D72  0E08               	movlw	8
 24405  010D74  6F8F               	movwf	__doprnt@c& (0+255),b
 24406  010D76  D002               	goto	l18218
 24407  010D78                     l2536:
 24408                           
 24409                           ; BSR set to: 2
 24410                           ;doprnt.c: 1232: else;doprnt.c: 1233: c = (char)prec;
 24411  010D78  C28B  F28F         	movff	__doprnt@prec,__doprnt@c
 24412  010D7C                     l18218:
 24413                           
 24414                           ; BSR set to: 2
 24415                           ;doprnt.c: 1234: prec -= (int)c;
 24416  010D7C  518F               	movf	__doprnt@c& (0+255),w,b
 24417  010D7E  5F8B               	subwf	__doprnt@prec& (0+255),f,b
 24418  010D80  0E00               	movlw	0
 24419  010D82  5B8C               	subwfb	(__doprnt@prec+1)& (0+255),f,b
 24420                           
 24421                           ; BSR set to: 2
 24422                           ;doprnt.c: 1238: if(c)
 24423  010D84  518F               	movf	__doprnt@c& (0+255),w,b
 24424  010D86  B4D8               	btfsc	status,2,c
 24425  010D88  D033               	goto	l18230
 24426                           
 24427                           ; BSR set to: 2
 24428  010D8A  EE20 F002          	lfsr	2,2
 24429  010D8E  5158               	movf	__doprnt@pb& (0+255),w,b
 24430  010D90  26D9               	addwf	fsr2l,f,c
 24431  010D92  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24432  010D94  22DA               	addwfc	fsr2h,f,c
 24433  010D96  50DE               	movf	postinc2,w,c
 24434  010D98  10DE               	iorwf	postinc2,w,c
 24435  010D9A  10DE               	iorwf	postinc2,w,c
 24436  010D9C  B4D8               	btfsc	status,2,c
 24437  010D9E  D013               	goto	l18226
 24438                           
 24439                           ; BSR set to: 2
 24440  010DA0  EE20 F002          	lfsr	2,2
 24441  010DA4  5158               	movf	__doprnt@pb& (0+255),w,b
 24442  010DA6  26D9               	addwf	fsr2l,f,c
 24443  010DA8  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24444  010DAA  22DA               	addwfc	fsr2h,f,c
 24445  010DAC  D801               	call	u22648
 24446  010DAE  D020               	goto	l18230
 24447  010DB0                     u22648:
 24448  010DB0  0005               	push	
 24449  010DB2  6EFA               	movwf	pclath,c
 24450  010DB4  50DE               	movf	postinc2,w,c
 24451  010DB6  6EFD               	movwf	tosl,c
 24452  010DB8  50DE               	movf	postinc2,w,c
 24453  010DBA  6EFE               	movwf	tosh,c
 24454  010DBC  50DE               	movf	postinc2,w,c
 24455  010DBE  6EFF               	movwf	tosu,c
 24456  010DC0  50FA               	movf	pclath,w,c
 24457  010DC2  0E2E               	movlw	46
 24458  010DC4  0012               	return		;indir
 24459  010DC6                     l18226:
 24460                           
 24461                           ; BSR set to: 2
 24462  010DC6  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24463  010DCA  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24464  010DCE  CFDE F25E          	movff	postinc2,??__doprnt
 24465  010DD2  CFDD F25F          	movff	postdec2,??__doprnt+1
 24466  010DD6  C25E  FFD9         	movff	??__doprnt,fsr2l
 24467  010DDA  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 24468  010DDE  0E2E               	movlw	46
 24469  010DE0  6EDF               	movwf	indf2,c
 24470                           
 24471                           ; BSR set to: 2
 24472  010DE2  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24473  010DE6  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24474  010DEA  2ADE               	incf	postinc2,f,c
 24475  010DEC  0E00               	movlw	0
 24476  010DEE  22DD               	addwfc	postdec2,f,c
 24477  010DF0                     l18230:
 24478                           
 24479                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
 24480  010DF0  0102               	movlb	2	; () banked
 24481  010DF2  518F               	movf	__doprnt@c& (0+255),w,b
 24482  010DF4  EC50  F0AD         	call	_scale
 24483  010DF8  C227  F262         	movff	?_scale,__doprnt$6029
 24484  010DFC  C228  F263         	movff	?_scale+1,__doprnt$6029+1
 24485  010E00  C229  F264         	movff	?_scale+2,__doprnt$6029+2
 24486  010E04  C22A  F265         	movff	?_scale+3,__doprnt$6029+3
 24487                           
 24488                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
 24489  010E08  C281  F212         	movff	__doprnt@fval,___flmul@a
 24490  010E0C  C282  F213         	movff	__doprnt@fval+1,___flmul@a+1
 24491  010E10  C283  F214         	movff	__doprnt@fval+2,___flmul@a+2
 24492  010E14  C284  F215         	movff	__doprnt@fval+3,___flmul@a+3
 24493  010E18  C262  F20E         	movff	__doprnt$6029,___flmul@b
 24494  010E1C  C263  F20F         	movff	__doprnt$6029+1,___flmul@b+1
 24495  010E20  C264  F210         	movff	__doprnt$6029+2,___flmul@b+2
 24496  010E24  C265  F211         	movff	__doprnt$6029+3,___flmul@b+3
 24497  010E28  ECFC  F0B4         	call	___flmul	;wreg free
 24498  010E2C  C20E  F230         	movff	?___flmul,___fltol@f1
 24499  010E30  C20F  F231         	movff	?___flmul+1,___fltol@f1+1
 24500  010E34  C210  F232         	movff	?___flmul+2,___fltol@f1+2
 24501  010E38  C211  F233         	movff	?___flmul+3,___fltol@f1+3
 24502  010E3C  EC61  F0D5         	call	___fltol	;wreg free
 24503  010E40  C230  F285         	movff	?___fltol,__doprnt@val
 24504  010E44  C231  F286         	movff	?___fltol+1,__doprnt@val+1
 24505  010E48  C232  F287         	movff	?___fltol+2,__doprnt@val+2
 24506  010E4C  C233  F288         	movff	?___fltol+3,__doprnt@val+3
 24507                           
 24508                           ;doprnt.c: 1247: while(c--) {
 24509  010E50  D0A4               	goto	l18246
 24510  010E52                     l18234:
 24511                           
 24512                           ; BSR set to: 2
 24513                           ;doprnt.c: 1248: tmpval.vd = val/dpowers[c];
 24514  010E52  C285  F200         	movff	__doprnt@val,___lldiv@dividend
 24515  010E56  C286  F201         	movff	__doprnt@val+1,___lldiv@dividend+1
 24516  010E5A  C287  F202         	movff	__doprnt@val+2,___lldiv@dividend+2
 24517  010E5E  C288  F203         	movff	__doprnt@val+3,___lldiv@dividend+3
 24518  010E62  518F               	movf	__doprnt@c& (0+255),w,b
 24519  010E64  0D04               	mullw	4
 24520  010E66  0E4B               	movlw	low _dpowers
 24521  010E68  24F3               	addwf	prodl,w,c
 24522  010E6A  6EF6               	movwf	tblptrl,c
 24523  010E6C  0EE9               	movlw	high _dpowers
 24524  010E6E  20F4               	addwfc	prodh,w,c
 24525  010E70  6EF7               	movwf	tblptrh,c
 24526  010E72                     	if	1	;There are 3 active tblptr bytes
 24527  010E72  6AF8               	clrf	tblptru,c
 24528  010E74  0E00               	movlw	low (__mediumconst shr (0+16))
 24529  010E76  22F8               	addwfc	tblptru,f,c
 24530  010E78                     	endif
 24531  010E78  0009               	tblrd		*+
 24532  010E7A  CFF5 F204          	movff	tablat,___lldiv@divisor
 24533  010E7E  0009               	tblrd		*+
 24534  010E80  CFF5 F205          	movff	tablat,___lldiv@divisor+1
 24535  010E84  0009               	tblrd		*+
 24536  010E86  CFF5 F206          	movff	tablat,___lldiv@divisor+2
 24537  010E8A  000A               	tblrd		*-
 24538  010E8C  CFF5 F207          	movff	tablat,___lldiv@divisor+3
 24539  010E90  EC69  F0D9         	call	___lldiv	;wreg free
 24540  010E94  C200  F27D         	movff	?___lldiv,__doprnt@tmpval
 24541  010E98  C201  F27E         	movff	?___lldiv+1,__doprnt@tmpval+1
 24542  010E9C  C202  F27F         	movff	?___lldiv+2,__doprnt@tmpval+2
 24543  010EA0  C203  F280         	movff	?___lldiv+3,__doprnt@tmpval+3
 24544                           
 24545                           ;doprnt.c: 1249: tmpval.vd %= 10;
 24546  010EA4  C27D  F20D         	movff	__doprnt@tmpval,___llmod@dividend
 24547  010EA8  C27E  F20E         	movff	__doprnt@tmpval+1,___llmod@dividend+1
 24548  010EAC  C27F  F20F         	movff	__doprnt@tmpval+2,___llmod@dividend+2
 24549  010EB0  C280  F210         	movff	__doprnt@tmpval+3,___llmod@dividend+3
 24550  010EB4  0E0A               	movlw	10
 24551  010EB6  0102               	movlb	2	; () banked
 24552  010EB8  6F11               	movwf	___llmod@divisor& (0+255),b
 24553  010EBA  0E00               	movlw	0
 24554  010EBC  6F12               	movwf	(___llmod@divisor+1)& (0+255),b
 24555  010EBE  0E00               	movlw	0
 24556  010EC0  6F13               	movwf	(___llmod@divisor+2)& (0+255),b
 24557  010EC2  0E00               	movlw	0
 24558  010EC4  6F14               	movwf	(___llmod@divisor+3)& (0+255),b
 24559  010EC6  EC9F  F0DA         	call	___llmod	;wreg free
 24560  010ECA  C20D  F27D         	movff	?___llmod,__doprnt@tmpval
 24561  010ECE  C20E  F27E         	movff	?___llmod+1,__doprnt@tmpval+1
 24562  010ED2  C20F  F27F         	movff	?___llmod+2,__doprnt@tmpval+2
 24563  010ED6  C210  F280         	movff	?___llmod+3,__doprnt@tmpval+3
 24564  010EDA  0102               	movlb	2	; () banked
 24565  010EDC  EE20 F002          	lfsr	2,2
 24566  010EE0  5158               	movf	__doprnt@pb& (0+255),w,b
 24567  010EE2  26D9               	addwf	fsr2l,f,c
 24568  010EE4  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24569  010EE6  22DA               	addwfc	fsr2h,f,c
 24570  010EE8  50DE               	movf	postinc2,w,c
 24571  010EEA  10DE               	iorwf	postinc2,w,c
 24572  010EEC  10DE               	iorwf	postinc2,w,c
 24573  010EEE  B4D8               	btfsc	status,2,c
 24574  010EF0  D014               	goto	l18242
 24575                           
 24576                           ; BSR set to: 2
 24577  010EF2  EE20 F002          	lfsr	2,2
 24578  010EF6  5158               	movf	__doprnt@pb& (0+255),w,b
 24579  010EF8  26D9               	addwf	fsr2l,f,c
 24580  010EFA  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24581  010EFC  22DA               	addwfc	fsr2h,f,c
 24582  010EFE  D801               	call	u22668
 24583  010F00  D022               	goto	l18244
 24584  010F02                     u22668:
 24585  010F02  0005               	push	
 24586  010F04  6EFA               	movwf	pclath,c
 24587  010F06  50DE               	movf	postinc2,w,c
 24588  010F08  6EFD               	movwf	tosl,c
 24589  010F0A  50DE               	movf	postinc2,w,c
 24590  010F0C  6EFE               	movwf	tosh,c
 24591  010F0E  50DE               	movf	postinc2,w,c
 24592  010F10  6EFF               	movwf	tosu,c
 24593  010F12  50FA               	movf	pclath,w,c
 24594  010F14  517D               	movf	__doprnt@tmpval& (0+255),w,b
 24595  010F16  0F30               	addlw	48
 24596  010F18  0012               	return		;indir
 24597  010F1A                     l18242:
 24598                           
 24599                           ; BSR set to: 2
 24600  010F1A  517D               	movf	__doprnt@tmpval& (0+255),w,b
 24601  010F1C  0F30               	addlw	48
 24602  010F1E  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24603  010F22  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24604  010F26  CFDE F25E          	movff	postinc2,??__doprnt
 24605  010F2A  CFDD F25F          	movff	postdec2,??__doprnt+1
 24606  010F2E  C25E  FFD9         	movff	??__doprnt,fsr2l
 24607  010F32  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 24608  010F36  6EDF               	movwf	indf2,c
 24609  010F38  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24610  010F3C  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24611  010F40  2ADE               	incf	postinc2,f,c
 24612  010F42  0E00               	movlw	0
 24613  010F44  22DD               	addwfc	postdec2,f,c
 24614  010F46                     l18244:
 24615                           
 24616                           ;doprnt.c: 1251: val %= dpowers[c];
 24617  010F46  C285  F20D         	movff	__doprnt@val,___llmod@dividend
 24618  010F4A  C286  F20E         	movff	__doprnt@val+1,___llmod@dividend+1
 24619  010F4E  C287  F20F         	movff	__doprnt@val+2,___llmod@dividend+2
 24620  010F52  C288  F210         	movff	__doprnt@val+3,___llmod@dividend+3
 24621  010F56  0102               	movlb	2	; () banked
 24622  010F58  518F               	movf	__doprnt@c& (0+255),w,b
 24623  010F5A  0D04               	mullw	4
 24624  010F5C  0E4B               	movlw	low _dpowers
 24625  010F5E  24F3               	addwf	prodl,w,c
 24626  010F60  6EF6               	movwf	tblptrl,c
 24627  010F62  0EE9               	movlw	high _dpowers
 24628  010F64  20F4               	addwfc	prodh,w,c
 24629  010F66  6EF7               	movwf	tblptrh,c
 24630  010F68                     	if	1	;There are 3 active tblptr bytes
 24631  010F68  6AF8               	clrf	tblptru,c
 24632  010F6A  0E00               	movlw	low (__mediumconst shr (0+16))
 24633  010F6C  22F8               	addwfc	tblptru,f,c
 24634  010F6E                     	endif
 24635  010F6E  0009               	tblrd		*+
 24636  010F70  CFF5 F211          	movff	tablat,___llmod@divisor
 24637  010F74  0009               	tblrd		*+
 24638  010F76  CFF5 F212          	movff	tablat,___llmod@divisor+1
 24639  010F7A  0009               	tblrd		*+
 24640  010F7C  CFF5 F213          	movff	tablat,___llmod@divisor+2
 24641  010F80  000A               	tblrd		*-
 24642  010F82  CFF5 F214          	movff	tablat,___llmod@divisor+3
 24643  010F86  EC9F  F0DA         	call	___llmod
 24644  010F8A  C20D  F285         	movff	?___llmod,__doprnt@val
 24645  010F8E  C20E  F286         	movff	?___llmod+1,__doprnt@val+1
 24646  010F92  C20F  F287         	movff	?___llmod+2,__doprnt@val+2
 24647  010F96  C210  F288         	movff	?___llmod+3,__doprnt@val+3
 24648  010F9A                     l18246:
 24649  010F9A  0102               	movlb	2	; () banked
 24650  010F9C  078F               	decf	__doprnt@c& (0+255),f,b
 24651  010F9E  298F               	incf	__doprnt@c& (0+255),w,b
 24652  010FA0  B4D8               	btfsc	status,2,c
 24653  010FA2  D038               	goto	l18258
 24654  010FA4  D756               	goto	l18234
 24655  010FA6                     l18248:
 24656                           
 24657                           ; BSR set to: 2
 24658  010FA6  EE20 F002          	lfsr	2,2
 24659  010FAA  5158               	movf	__doprnt@pb& (0+255),w,b
 24660  010FAC  26D9               	addwf	fsr2l,f,c
 24661  010FAE  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24662  010FB0  22DA               	addwfc	fsr2h,f,c
 24663  010FB2  50DE               	movf	postinc2,w,c
 24664  010FB4  10DE               	iorwf	postinc2,w,c
 24665  010FB6  10DE               	iorwf	postinc2,w,c
 24666  010FB8  B4D8               	btfsc	status,2,c
 24667  010FBA  D013               	goto	l18252
 24668                           
 24669                           ; BSR set to: 2
 24670  010FBC  EE20 F002          	lfsr	2,2
 24671  010FC0  5158               	movf	__doprnt@pb& (0+255),w,b
 24672  010FC2  26D9               	addwf	fsr2l,f,c
 24673  010FC4  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24674  010FC6  22DA               	addwfc	fsr2h,f,c
 24675  010FC8  D801               	call	u22698
 24676  010FCA  D020               	goto	l18256
 24677  010FCC                     u22698:
 24678  010FCC  0005               	push	
 24679  010FCE  6EFA               	movwf	pclath,c
 24680  010FD0  50DE               	movf	postinc2,w,c
 24681  010FD2  6EFD               	movwf	tosl,c
 24682  010FD4  50DE               	movf	postinc2,w,c
 24683  010FD6  6EFE               	movwf	tosh,c
 24684  010FD8  50DE               	movf	postinc2,w,c
 24685  010FDA  6EFF               	movwf	tosu,c
 24686  010FDC  50FA               	movf	pclath,w,c
 24687  010FDE  0E30               	movlw	48
 24688  010FE0  0012               	return		;indir
 24689  010FE2                     l18252:
 24690                           
 24691                           ; BSR set to: 2
 24692  010FE2  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24693  010FE6  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24694  010FEA  CFDE F25E          	movff	postinc2,??__doprnt
 24695  010FEE  CFDD F25F          	movff	postdec2,??__doprnt+1
 24696  010FF2  C25E  FFD9         	movff	??__doprnt,fsr2l
 24697  010FF6  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 24698  010FFA  0E30               	movlw	48
 24699  010FFC  6EDF               	movwf	indf2,c
 24700                           
 24701                           ; BSR set to: 2
 24702  010FFE  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24703  011002  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24704  011006  2ADE               	incf	postinc2,f,c
 24705  011008  0E00               	movlw	0
 24706  01100A  22DD               	addwfc	postdec2,f,c
 24707  01100C                     l18256:
 24708                           
 24709                           ;doprnt.c: 1256: prec--;
 24710  01100C  0102               	movlb	2	; () banked
 24711  01100E  078B               	decf	__doprnt@prec& (0+255),f,b
 24712  011010  A0D8               	btfss	status,0,c
 24713  011012  078C               	decf	(__doprnt@prec+1)& (0+255),f,b
 24714  011014                     l18258:
 24715                           
 24716                           ; BSR set to: 2
 24717  011014  518B               	movf	__doprnt@prec& (0+255),w,b
 24718  011016  118C               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 24719  011018  B4D8               	btfsc	status,2,c
 24720  01101A  D361               	goto	u23150
 24721  01101C  D7C4               	goto	l18248
 24722  01101E                     l18260:
 24723                           
 24724                           ; BSR set to: 2
 24725                           ;doprnt.c: 1265: };doprnt.c: 1270: if((flag & (0xC0)) == 0x00)
 24726  01101E  0EC0               	movlw	192
 24727  011020  158D               	andwf	__doprnt@flag& (0+255),w,b
 24728  011022  6F5E               	movwf	??__doprnt& (0+255),b
 24729  011024  0E00               	movlw	0
 24730  011026  158E               	andwf	(__doprnt@flag+1)& (0+255),w,b
 24731  011028  6F5F               	movwf	(??__doprnt+1)& (0+255),b
 24732  01102A  515E               	movf	??__doprnt& (0+255),w,b
 24733  01102C  115F               	iorwf	(??__doprnt+1)& (0+255),w,b
 24734  01102E  A4D8               	btfss	status,2,c
 24735  011030  D041               	goto	l2557
 24736                           
 24737                           ; BSR set to: 2
 24738                           ;doprnt.c: 1272: {;doprnt.c: 1274: if(flag & 0x10)
 24739  011032  A98D               	btfss	__doprnt@flag& (0+255),4,b
 24740  011034  D019               	goto	l18266
 24741                           
 24742                           ; BSR set to: 2
 24743                           ;doprnt.c: 1275: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 24744  011036  C25C  FFD9         	movff	__doprnt@ap,fsr2l
 24745  01103A  C25D  FFDA         	movff	__doprnt@ap+1,fsr2h
 24746  01103E  CFDF F25E          	movff	indf2,??__doprnt
 24747  011042  0E04               	movlw	4
 24748  011044  26DE               	addwf	postinc2,f,c
 24749  011046  CFDF F25F          	movff	indf2,??__doprnt+1
 24750  01104A  0E00               	movlw	0
 24751  01104C  22DD               	addwfc	postdec2,f,c
 24752  01104E  C25E  FFD9         	movff	??__doprnt,fsr2l
 24753  011052  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 24754  011056  CFDE F285          	movff	postinc2,__doprnt@val
 24755  01105A  CFDE F286          	movff	postinc2,__doprnt@val+1
 24756  01105E  CFDE F287          	movff	postinc2,__doprnt@val+2
 24757  011062  CFDE F288          	movff	postinc2,__doprnt@val+3
 24758  011066  D019               	goto	l18268
 24759  011068                     l18266:
 24760                           
 24761                           ; BSR set to: 2
 24762                           ;doprnt.c: 1276: else;doprnt.c: 1278: val = (long)(*(int *)__va_arg((*(int **)ap), (int)
      +                          0));
 24763  011068  C25C  FFD9         	movff	__doprnt@ap,fsr2l
 24764  01106C  C25D  FFDA         	movff	__doprnt@ap+1,fsr2h
 24765  011070  CFDF F25E          	movff	indf2,??__doprnt
 24766  011074  0E02               	movlw	2
 24767  011076  26DE               	addwf	postinc2,f,c
 24768  011078  CFDF F25F          	movff	indf2,??__doprnt+1
 24769  01107C  0E00               	movlw	0
 24770  01107E  22DD               	addwfc	postdec2,f,c
 24771  011080  C25E  FFD9         	movff	??__doprnt,fsr2l
 24772  011084  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 24773  011088  CFDE F285          	movff	postinc2,__doprnt@val
 24774  01108C  CFDD F286          	movff	postdec2,__doprnt@val+1
 24775  011090  0E00               	movlw	0
 24776  011092  BF86               	btfsc	(__doprnt@val+1)& (0+255),7,b
 24777  011094  0EFF               	movlw	-1
 24778  011096  6F87               	movwf	(__doprnt@val+2)& (0+255),b
 24779  011098  6F88               	movwf	(__doprnt@val+3)& (0+255),b
 24780  01109A                     l18268:
 24781                           
 24782                           ; BSR set to: 2
 24783                           ;doprnt.c: 1280: if((long)val < 0) {
 24784  01109A  AF88               	btfss	(__doprnt@val+3)& (0+255),7,b
 24785  01109C  D040               	goto	l18278
 24786                           
 24787                           ; BSR set to: 2
 24788                           ;doprnt.c: 1281: flag |= 0x03;
 24789  01109E  0E03               	movlw	3
 24790  0110A0  138D               	iorwf	__doprnt@flag& (0+255),f,b
 24791                           
 24792                           ; BSR set to: 2
 24793                           ;doprnt.c: 1282: val = -val;
 24794  0110A2  1F88               	comf	(__doprnt@val+3)& (0+255),f,b
 24795  0110A4  1F87               	comf	(__doprnt@val+2)& (0+255),f,b
 24796  0110A6  1F86               	comf	(__doprnt@val+1)& (0+255),f,b
 24797  0110A8  6D85               	negf	__doprnt@val& (0+255),b
 24798  0110AA  0E00               	movlw	0
 24799  0110AC  2386               	addwfc	(__doprnt@val+1)& (0+255),f,b
 24800  0110AE  2387               	addwfc	(__doprnt@val+2)& (0+255),f,b
 24801  0110B0  2388               	addwfc	(__doprnt@val+3)& (0+255),f,b
 24802  0110B2  D035               	goto	l18278
 24803  0110B4                     l2557:
 24804                           
 24805                           ; BSR set to: 2
 24806                           ;doprnt.c: 1287: else;doprnt.c: 1292: {;doprnt.c: 1300: if(flag & 0x10)
 24807  0110B4  A98D               	btfss	__doprnt@flag& (0+255),4,b
 24808  0110B6  D019               	goto	l18276
 24809                           
 24810                           ; BSR set to: 2
 24811                           ;doprnt.c: 1301: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 24812  0110B8  C25C  FFD9         	movff	__doprnt@ap,fsr2l
 24813  0110BC  C25D  FFDA         	movff	__doprnt@ap+1,fsr2h
 24814  0110C0  CFDF F25E          	movff	indf2,??__doprnt
 24815  0110C4  0E04               	movlw	4
 24816  0110C6  26DE               	addwf	postinc2,f,c
 24817  0110C8  CFDF F25F          	movff	indf2,??__doprnt+1
 24818  0110CC  0E00               	movlw	0
 24819  0110CE  22DD               	addwfc	postdec2,f,c
 24820  0110D0  C25E  FFD9         	movff	??__doprnt,fsr2l
 24821  0110D4  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 24822  0110D8  CFDE F285          	movff	postinc2,__doprnt@val
 24823  0110DC  CFDE F286          	movff	postinc2,__doprnt@val+1
 24824  0110E0  CFDE F287          	movff	postinc2,__doprnt@val+2
 24825  0110E4  CFDE F288          	movff	postinc2,__doprnt@val+3
 24826  0110E8  D01A               	goto	l18278
 24827  0110EA                     l18276:
 24828                           
 24829                           ; BSR set to: 2
 24830                           ;doprnt.c: 1302: else;doprnt.c: 1305: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
 24831  0110EA  C25C  FFD9         	movff	__doprnt@ap,fsr2l
 24832  0110EE  C25D  FFDA         	movff	__doprnt@ap+1,fsr2h
 24833  0110F2  CFDF F25E          	movff	indf2,??__doprnt
 24834  0110F6  0E02               	movlw	2
 24835  0110F8  26DE               	addwf	postinc2,f,c
 24836  0110FA  CFDF F25F          	movff	indf2,??__doprnt+1
 24837  0110FE  0E00               	movlw	0
 24838  011100  22DD               	addwfc	postdec2,f,c
 24839  011102  C25E  FFD9         	movff	??__doprnt,fsr2l
 24840  011106  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 24841  01110A  CFDE F260          	movff	postinc2,??__doprnt+2
 24842  01110E  CFDD F261          	movff	postdec2,??__doprnt+3
 24843  011112  C260  F285         	movff	??__doprnt+2,__doprnt@val
 24844  011116  C261  F286         	movff	??__doprnt+3,__doprnt@val+1
 24845  01111A  6B87               	clrf	(__doprnt@val+2)& (0+255),b
 24846  01111C  6B88               	clrf	(__doprnt@val+3)& (0+255),b
 24847  01111E                     l18278:
 24848                           
 24849                           ; BSR set to: 2
 24850                           ;doprnt.c: 1306: };doprnt.c: 1309: if(prec == 0 && val == 0)
 24851  01111E  518B               	movf	__doprnt@prec& (0+255),w,b
 24852  011120  118C               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 24853  011122  A4D8               	btfss	status,2,c
 24854  011124  D04B               	goto	l18314
 24855                           
 24856                           ; BSR set to: 2
 24857  011126  5185               	movf	__doprnt@val& (0+255),w,b
 24858  011128  1186               	iorwf	(__doprnt@val+1)& (0+255),w,b
 24859  01112A  1187               	iorwf	(__doprnt@val+2)& (0+255),w,b
 24860  01112C  1188               	iorwf	(__doprnt@val+3)& (0+255),w,b
 24861  01112E  A4D8               	btfss	status,2,c
 24862  011130  D045               	goto	l18314
 24863                           
 24864                           ; BSR set to: 2
 24865                           ;doprnt.c: 1310: prec++;
 24866  011132  4B8B               	infsnz	__doprnt@prec& (0+255),f,b
 24867  011134  2B8C               	incf	(__doprnt@prec+1)& (0+255),f,b
 24868  011136  D042               	goto	l18314
 24869  011138                     l18284:
 24870                           
 24871                           ; BSR set to: 2
 24872                           ;doprnt.c: 1321: case 0xC0:;doprnt.c: 1324: for(c = 1 ; c != sizeof dpowers/sizeof dpowe
      +                          rs[0] ; c++)
 24873  011138  0E01               	movlw	1
 24874  01113A  6F8F               	movwf	__doprnt@c& (0+255),b
 24875  01113C                     l18286:
 24876                           
 24877                           ; BSR set to: 2
 24878  01113C  0E0A               	movlw	10
 24879  01113E  198F               	xorwf	__doprnt@c& (0+255),w,b
 24880  011140  B4D8               	btfsc	status,2,c
 24881  011142  D047               	goto	l18316
 24882                           
 24883                           ; BSR set to: 2
 24884                           ;doprnt.c: 1325: if(val < dpowers[c])
 24885  011144  518F               	movf	__doprnt@c& (0+255),w,b
 24886  011146  0D04               	mullw	4
 24887  011148  0E4B               	movlw	low _dpowers
 24888  01114A  24F3               	addwf	prodl,w,c
 24889  01114C  6EF6               	movwf	tblptrl,c
 24890  01114E  0EE9               	movlw	high _dpowers
 24891  011150  20F4               	addwfc	prodh,w,c
 24892  011152  6EF7               	movwf	tblptrh,c
 24893  011154                     	if	1	;There are 3 active tblptr bytes
 24894  011154  6AF8               	clrf	tblptru,c
 24895  011156  0E00               	movlw	low (__mediumconst shr (0+16))
 24896  011158  22F8               	addwfc	tblptru,f,c
 24897  01115A                     	endif
 24898  01115A  0009               	tblrd		*+
 24899  01115C  50F5               	movf	tablat,w,c
 24900  01115E  5D85               	subwf	__doprnt@val& (0+255),w,b
 24901  011160  0009               	tblrd		*+
 24902  011162  50F5               	movf	tablat,w,c
 24903  011164  5986               	subwfb	(__doprnt@val+1)& (0+255),w,b
 24904  011166  0009               	tblrd		*+
 24905  011168  50F5               	movf	tablat,w,c
 24906  01116A  5987               	subwfb	(__doprnt@val+2)& (0+255),w,b
 24907  01116C  0009               	tblrd		*+
 24908  01116E  50F5               	movf	tablat,w,c
 24909  011170  5988               	subwfb	(__doprnt@val+3)& (0+255),w,b
 24910  011172  A0D8               	btfss	status,0,c
 24911  011174  D02E               	goto	l18316
 24912                           
 24913                           ; BSR set to: 2
 24914  011176  2B8F               	incf	__doprnt@c& (0+255),f,b
 24915  011178  D7E1               	goto	l18286
 24916  01117A                     l18298:
 24917                           
 24918                           ; BSR set to: 2
 24919                           ;doprnt.c: 1335: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 24920  01117A  0E01               	movlw	1
 24921  01117C  6F8F               	movwf	__doprnt@c& (0+255),b
 24922  01117E                     l18300:
 24923                           
 24924                           ; BSR set to: 2
 24925  01117E  0E08               	movlw	8
 24926  011180  198F               	xorwf	__doprnt@c& (0+255),w,b
 24927  011182  B4D8               	btfsc	status,2,c
 24928  011184  D026               	goto	l18316
 24929                           
 24930                           ; BSR set to: 2
 24931                           ;doprnt.c: 1336: if(val < hexpowers[c])
 24932  011186  518F               	movf	__doprnt@c& (0+255),w,b
 24933  011188  0D04               	mullw	4
 24934  01118A  0E2B               	movlw	low _hexpowers
 24935  01118C  24F3               	addwf	prodl,w,c
 24936  01118E  6EF6               	movwf	tblptrl,c
 24937  011190  0EE6               	movlw	high _hexpowers
 24938  011192  20F4               	addwfc	prodh,w,c
 24939  011194  6EF7               	movwf	tblptrh,c
 24940  011196                     	if	1	;There are 3 active tblptr bytes
 24941  011196  6AF8               	clrf	tblptru,c
 24942  011198  0E00               	movlw	low (__mediumconst shr (0+16))
 24943  01119A  22F8               	addwfc	tblptru,f,c
 24944  01119C                     	endif
 24945  01119C  0009               	tblrd		*+
 24946  01119E  50F5               	movf	tablat,w,c
 24947  0111A0  5D85               	subwf	__doprnt@val& (0+255),w,b
 24948  0111A2  0009               	tblrd		*+
 24949  0111A4  50F5               	movf	tablat,w,c
 24950  0111A6  5986               	subwfb	(__doprnt@val+1)& (0+255),w,b
 24951  0111A8  0009               	tblrd		*+
 24952  0111AA  50F5               	movf	tablat,w,c
 24953  0111AC  5987               	subwfb	(__doprnt@val+2)& (0+255),w,b
 24954  0111AE  0009               	tblrd		*+
 24955  0111B0  50F5               	movf	tablat,w,c
 24956  0111B2  5988               	subwfb	(__doprnt@val+3)& (0+255),w,b
 24957  0111B4  A0D8               	btfss	status,0,c
 24958  0111B6  D00D               	goto	l18316
 24959                           
 24960                           ; BSR set to: 2
 24961  0111B8  2B8F               	incf	__doprnt@c& (0+255),f,b
 24962  0111BA  D7E1               	goto	l18300
 24963  0111BC                     l18314:
 24964                           
 24965                           ; BSR set to: 2
 24966  0111BC  518D               	movf	__doprnt@flag& (0+255),w,b
 24967  0111BE  0BC0               	andlw	192
 24968                           
 24969                           ; Switch size 1, requested type "simple"
 24970                           ; Number of cases is 3, Range of values is 0 to 192
 24971                           ; switch strategies available:
 24972                           ; Name         Instructions Cycles
 24973                           ; simple_byte           10     6 (average)
 24974                           ;	Chosen strategy is simple_byte
 24975  0111C0  0A00               	xorlw	0	; case 0
 24976  0111C2  B4D8               	btfsc	status,2,c
 24977  0111C4  D7B9               	goto	l18284
 24978  0111C6  0A80               	xorlw	128	; case 128
 24979  0111C8  B4D8               	btfsc	status,2,c
 24980  0111CA  D7D7               	goto	l18298
 24981  0111CC  0A40               	xorlw	64	; case 192
 24982  0111CE  B4D8               	btfsc	status,2,c
 24983  0111D0  D7B3               	goto	l18284
 24984  0111D2                     l18316:
 24985                           
 24986                           ; BSR set to: 2
 24987                           ;doprnt.c: 1358: if(c < prec)
 24988  0111D2  518F               	movf	__doprnt@c& (0+255),w,b
 24989  0111D4  6F5E               	movwf	??__doprnt& (0+255),b
 24990  0111D6  6B5F               	clrf	(??__doprnt+1)& (0+255),b
 24991  0111D8  518B               	movf	__doprnt@prec& (0+255),w,b
 24992  0111DA  5D5E               	subwf	??__doprnt& (0+255),w,b
 24993  0111DC  515F               	movf	(??__doprnt+1)& (0+255),w,b
 24994  0111DE  0A80               	xorlw	128
 24995  0111E0  6F60               	movwf	(??__doprnt+2)& (0+255),b
 24996  0111E2  518C               	movf	(__doprnt@prec+1)& (0+255),w,b
 24997  0111E4  0A80               	xorlw	128
 24998  0111E6  5960               	subwfb	(??__doprnt+2)& (0+255),w,b
 24999  0111E8  B0D8               	btfsc	status,0,c
 25000  0111EA  D003               	goto	l18320
 25001                           
 25002                           ; BSR set to: 2
 25003                           ;doprnt.c: 1359: c = prec;
 25004  0111EC  C28B  F28F         	movff	__doprnt@prec,__doprnt@c
 25005  0111F0  D010               	goto	l18324
 25006  0111F2                     l18320:
 25007                           
 25008                           ; BSR set to: 2
 25009                           ;doprnt.c: 1360: else if(prec < c)
 25010  0111F2  518F               	movf	__doprnt@c& (0+255),w,b
 25011  0111F4  6F5E               	movwf	??__doprnt& (0+255),b
 25012  0111F6  6B5F               	clrf	(??__doprnt+1)& (0+255),b
 25013  0111F8  515E               	movf	??__doprnt& (0+255),w,b
 25014  0111FA  5D8B               	subwf	__doprnt@prec& (0+255),w,b
 25015  0111FC  518C               	movf	(__doprnt@prec+1)& (0+255),w,b
 25016  0111FE  0A80               	xorlw	128
 25017  011200  6F60               	movwf	(??__doprnt+2)& (0+255),b
 25018  011202  515F               	movf	(??__doprnt+1)& (0+255),w,b
 25019  011204  0A80               	xorlw	128
 25020  011206  5960               	subwfb	(??__doprnt+2)& (0+255),w,b
 25021  011208  B0D8               	btfsc	status,0,c
 25022  01120A  D003               	goto	l18324
 25023                           
 25024                           ; BSR set to: 2
 25025                           ;doprnt.c: 1361: prec = c;
 25026  01120C  C28F  F28B         	movff	__doprnt@c,__doprnt@prec
 25027  011210  6B8C               	clrf	(__doprnt@prec+1)& (0+255),b
 25028  011212                     l18324:
 25029                           
 25030                           ; BSR set to: 2
 25031                           ;doprnt.c: 1364: if(width && flag & 0x03)
 25032  011212  5189               	movf	__doprnt@width& (0+255),w,b
 25033  011214  118A               	iorwf	(__doprnt@width+1)& (0+255),w,b
 25034  011216  B4D8               	btfsc	status,2,c
 25035  011218  D00D               	goto	l18330
 25036                           
 25037                           ; BSR set to: 2
 25038  01121A  0E03               	movlw	3
 25039  01121C  158D               	andwf	__doprnt@flag& (0+255),w,b
 25040  01121E  6F5E               	movwf	??__doprnt& (0+255),b
 25041  011220  0E00               	movlw	0
 25042  011222  158E               	andwf	(__doprnt@flag+1)& (0+255),w,b
 25043  011224  6F5F               	movwf	(??__doprnt+1)& (0+255),b
 25044  011226  515E               	movf	??__doprnt& (0+255),w,b
 25045  011228  115F               	iorwf	(??__doprnt+1)& (0+255),w,b
 25046  01122A  B4D8               	btfsc	status,2,c
 25047  01122C  D003               	goto	l18330
 25048                           
 25049                           ; BSR set to: 2
 25050                           ;doprnt.c: 1365: width--;
 25051  01122E  0789               	decf	__doprnt@width& (0+255),f,b
 25052  011230  A0D8               	btfss	status,0,c
 25053  011232  078A               	decf	(__doprnt@width+1)& (0+255),f,b
 25054  011234                     l18330:
 25055                           
 25056                           ; BSR set to: 2
 25057                           ;doprnt.c: 1367: if(flag & 0x4000) {
 25058  011234  AD8E               	btfss	(__doprnt@flag+1)& (0+255),6,b
 25059  011236  D013               	goto	l18338
 25060                           
 25061                           ; BSR set to: 2
 25062                           ;doprnt.c: 1368: if(width > prec)
 25063  011238  5189               	movf	__doprnt@width& (0+255),w,b
 25064  01123A  5D8B               	subwf	__doprnt@prec& (0+255),w,b
 25065  01123C  518C               	movf	(__doprnt@prec+1)& (0+255),w,b
 25066  01123E  0A80               	xorlw	128
 25067  011240  6F5E               	movwf	??__doprnt& (0+255),b
 25068  011242  518A               	movf	(__doprnt@width+1)& (0+255),w,b
 25069  011244  0A80               	xorlw	128
 25070  011246  595E               	subwfb	??__doprnt& (0+255),w,b
 25071  011248  B0D8               	btfsc	status,0,c
 25072  01124A  D005               	goto	l18336
 25073                           
 25074                           ; BSR set to: 2
 25075                           ;doprnt.c: 1369: width -= prec;
 25076  01124C  518B               	movf	__doprnt@prec& (0+255),w,b
 25077  01124E  5F89               	subwf	__doprnt@width& (0+255),f,b
 25078  011250  518C               	movf	(__doprnt@prec+1)& (0+255),w,b
 25079  011252  5B8A               	subwfb	(__doprnt@width+1)& (0+255),f,b
 25080  011254  D004               	goto	l18338
 25081  011256                     l18336:
 25082                           
 25083                           ; BSR set to: 2
 25084                           ;doprnt.c: 1370: else;doprnt.c: 1371: width = 0;
 25085  011256  0E00               	movlw	0
 25086  011258  6F8A               	movwf	(__doprnt@width+1)& (0+255),b
 25087  01125A  0E00               	movlw	0
 25088  01125C  6F89               	movwf	__doprnt@width& (0+255),b
 25089  01125E                     l18338:
 25090                           
 25091                           ; BSR set to: 2
 25092                           ;doprnt.c: 1372: };doprnt.c: 1400: if(width > c)
 25093  01125E  518F               	movf	__doprnt@c& (0+255),w,b
 25094  011260  6F5E               	movwf	??__doprnt& (0+255),b
 25095  011262  6B5F               	clrf	(??__doprnt+1)& (0+255),b
 25096  011264  5189               	movf	__doprnt@width& (0+255),w,b
 25097  011266  5D5E               	subwf	??__doprnt& (0+255),w,b
 25098  011268  515F               	movf	(??__doprnt+1)& (0+255),w,b
 25099  01126A  0A80               	xorlw	128
 25100  01126C  6F60               	movwf	(??__doprnt+2)& (0+255),b
 25101  01126E  518A               	movf	(__doprnt@width+1)& (0+255),w,b
 25102  011270  0A80               	xorlw	128
 25103  011272  5960               	subwfb	(??__doprnt+2)& (0+255),w,b
 25104  011274  B0D8               	btfsc	status,0,c
 25105  011276  D005               	goto	l18342
 25106                           
 25107                           ; BSR set to: 2
 25108                           ;doprnt.c: 1401: width -= c;
 25109  011278  518F               	movf	__doprnt@c& (0+255),w,b
 25110  01127A  5F89               	subwf	__doprnt@width& (0+255),f,b
 25111  01127C  0E00               	movlw	0
 25112  01127E  5B8A               	subwfb	(__doprnt@width+1)& (0+255),f,b
 25113  011280  D004               	goto	l18344
 25114  011282                     l18342:
 25115                           
 25116                           ; BSR set to: 2
 25117                           ;doprnt.c: 1402: else;doprnt.c: 1403: width = 0;
 25118  011282  0E00               	movlw	0
 25119  011284  6F8A               	movwf	(__doprnt@width+1)& (0+255),b
 25120  011286  0E00               	movlw	0
 25121  011288  6F89               	movwf	__doprnt@width& (0+255),b
 25122  01128A                     l18344:
 25123                           
 25124                           ; BSR set to: 2
 25125                           ;doprnt.c: 1406: if(flag & 0x04) {
 25126  01128A  A58D               	btfss	__doprnt@flag& (0+255),2,b
 25127  01128C  D0B5               	goto	l18386
 25128                           
 25129                           ; BSR set to: 2
 25130                           ;doprnt.c: 1408: if(flag & 0x02)
 25131  01128E  A38D               	btfss	__doprnt@flag& (0+255),1,b
 25132  011290  D041               	goto	l2586
 25133                           
 25134                           ; BSR set to: 2
 25135  011292  EE20 F002          	lfsr	2,2
 25136  011296  5158               	movf	__doprnt@pb& (0+255),w,b
 25137  011298  26D9               	addwf	fsr2l,f,c
 25138  01129A  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25139  01129C  22DA               	addwfc	fsr2h,f,c
 25140  01129E  50DE               	movf	postinc2,w,c
 25141  0112A0  10DE               	iorwf	postinc2,w,c
 25142  0112A2  10DE               	iorwf	postinc2,w,c
 25143  0112A4  B4D8               	btfsc	status,2,c
 25144  0112A6  D01D               	goto	l2588
 25145                           
 25146                           ; BSR set to: 2
 25147  0112A8  B18D               	btfsc	__doprnt@flag& (0+255),0,b
 25148  0112AA  D004               	goto	l18354
 25149                           
 25150                           ; BSR set to: 2
 25151  0112AC  0E00               	movlw	0
 25152  0112AE  6F70               	movwf	(__doprnt$4980+1)& (0+255),b
 25153  0112B0  0E2B               	movlw	43
 25154  0112B2  D003               	goto	L14
 25155  0112B4                     l18354:
 25156                           
 25157                           ; BSR set to: 2
 25158  0112B4  0E00               	movlw	0
 25159  0112B6  6F70               	movwf	(__doprnt$4980+1)& (0+255),b
 25160  0112B8  0E2D               	movlw	45
 25161  0112BA                     L14:
 25162  0112BA  6F6F               	movwf	__doprnt$4980& (0+255),b
 25163                           
 25164                           ; BSR set to: 2
 25165  0112BC  EE20 F002          	lfsr	2,2
 25166  0112C0  5158               	movf	__doprnt@pb& (0+255),w,b
 25167  0112C2  26D9               	addwf	fsr2l,f,c
 25168  0112C4  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25169  0112C6  22DA               	addwfc	fsr2h,f,c
 25170  0112C8  D801               	call	u22928
 25171  0112CA  D059               	goto	l18374
 25172  0112CC                     u22928:
 25173  0112CC  0005               	push	
 25174  0112CE  6EFA               	movwf	pclath,c
 25175  0112D0  50DE               	movf	postinc2,w,c
 25176  0112D2  6EFD               	movwf	tosl,c
 25177  0112D4  50DE               	movf	postinc2,w,c
 25178  0112D6  6EFE               	movwf	tosh,c
 25179  0112D8  50DE               	movf	postinc2,w,c
 25180  0112DA  6EFF               	movwf	tosu,c
 25181  0112DC  50FA               	movf	pclath,w,c
 25182  0112DE  516F               	movf	__doprnt$4980& (0+255),w,b
 25183  0112E0  0012               	return		;indir
 25184  0112E2                     l2588:
 25185                           
 25186                           ; BSR set to: 2
 25187  0112E2  B18D               	btfsc	__doprnt@flag& (0+255),0,b
 25188  0112E4  D004               	goto	l18360
 25189                           
 25190                           ; BSR set to: 2
 25191  0112E6  0E00               	movlw	0
 25192  0112E8  6F72               	movwf	(__doprnt$4981+1)& (0+255),b
 25193  0112EA  0E2B               	movlw	43
 25194  0112EC  D003               	goto	L15
 25195  0112EE                     l18360:
 25196                           
 25197                           ; BSR set to: 2
 25198  0112EE  0E00               	movlw	0
 25199  0112F0  6F72               	movwf	(__doprnt$4981+1)& (0+255),b
 25200  0112F2  0E2D               	movlw	45
 25201  0112F4                     L15:
 25202  0112F4  6F71               	movwf	__doprnt$4981& (0+255),b
 25203                           
 25204                           ; BSR set to: 2
 25205  0112F6  C258  FFD9         	movff	__doprnt@pb,fsr2l
 25206  0112FA  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 25207  0112FE  CFDE F25E          	movff	postinc2,??__doprnt
 25208  011302  CFDD F25F          	movff	postdec2,??__doprnt+1
 25209  011306  C25E  FFD9         	movff	??__doprnt,fsr2l
 25210  01130A  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 25211  01130E  C271  FFDF         	movff	__doprnt$4981,indf2
 25212  011312  D02E               	goto	l18372
 25213  011314                     l2586:
 25214                           
 25215                           ; BSR set to: 2
 25216                           ;doprnt.c: 1415: else;doprnt.c: 1418: if(flag & 0x01)
 25217  011314  A18D               	btfss	__doprnt@flag& (0+255),0,b
 25218  011316  D033               	goto	l18374
 25219                           
 25220                           ; BSR set to: 2
 25221  011318  EE20 F002          	lfsr	2,2
 25222  01131C  5158               	movf	__doprnt@pb& (0+255),w,b
 25223  01131E  26D9               	addwf	fsr2l,f,c
 25224  011320  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25225  011322  22DA               	addwfc	fsr2h,f,c
 25226  011324  50DE               	movf	postinc2,w,c
 25227  011326  10DE               	iorwf	postinc2,w,c
 25228  011328  10DE               	iorwf	postinc2,w,c
 25229  01132A  B4D8               	btfsc	status,2,c
 25230  01132C  D013               	goto	l18370
 25231                           
 25232                           ; BSR set to: 2
 25233  01132E  EE20 F002          	lfsr	2,2
 25234  011332  5158               	movf	__doprnt@pb& (0+255),w,b
 25235  011334  26D9               	addwf	fsr2l,f,c
 25236  011336  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25237  011338  22DA               	addwfc	fsr2h,f,c
 25238  01133A  D801               	call	u22968
 25239  01133C  D020               	goto	l18374
 25240  01133E                     u22968:
 25241  01133E  0005               	push	
 25242  011340  6EFA               	movwf	pclath,c
 25243  011342  50DE               	movf	postinc2,w,c
 25244  011344  6EFD               	movwf	tosl,c
 25245  011346  50DE               	movf	postinc2,w,c
 25246  011348  6EFE               	movwf	tosh,c
 25247  01134A  50DE               	movf	postinc2,w,c
 25248  01134C  6EFF               	movwf	tosu,c
 25249  01134E  50FA               	movf	pclath,w,c
 25250  011350  0E20               	movlw	32
 25251  011352  0012               	return		;indir
 25252  011354                     l18370:
 25253                           
 25254                           ; BSR set to: 2
 25255  011354  C258  FFD9         	movff	__doprnt@pb,fsr2l
 25256  011358  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 25257  01135C  CFDE F25E          	movff	postinc2,??__doprnt
 25258  011360  CFDD F25F          	movff	postdec2,??__doprnt+1
 25259  011364  C25E  FFD9         	movff	??__doprnt,fsr2l
 25260  011368  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 25261  01136C  0E20               	movlw	32
 25262  01136E  6EDF               	movwf	indf2,c
 25263  011370                     l18372:
 25264                           
 25265                           ; BSR set to: 2
 25266  011370  C258  FFD9         	movff	__doprnt@pb,fsr2l
 25267  011374  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 25268  011378  2ADE               	incf	postinc2,f,c
 25269  01137A  0E00               	movlw	0
 25270  01137C  22DD               	addwfc	postdec2,f,c
 25271  01137E                     l18374:
 25272                           
 25273                           ;doprnt.c: 1434: if(width)
 25274  01137E  0102               	movlb	2	; () banked
 25275  011380  5189               	movf	__doprnt@width& (0+255),w,b
 25276  011382  118A               	iorwf	(__doprnt@width+1)& (0+255),w,b
 25277  011384  B4D8               	btfsc	status,2,c
 25278  011386  D1A2               	goto	l18442
 25279                           
 25280                           ; BSR set to: 2
 25281  011388  EE20 F002          	lfsr	2,2
 25282  01138C  5158               	movf	__doprnt@pb& (0+255),w,b
 25283  01138E  26D9               	addwf	fsr2l,f,c
 25284  011390  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25285  011392  22DA               	addwfc	fsr2h,f,c
 25286  011394  50DE               	movf	postinc2,w,c
 25287  011396  10DE               	iorwf	postinc2,w,c
 25288  011398  10DE               	iorwf	postinc2,w,c
 25289  01139A  B4D8               	btfsc	status,2,c
 25290  01139C  D013               	goto	l18380
 25291                           
 25292                           ; BSR set to: 2
 25293  01139E  EE20 F002          	lfsr	2,2
 25294  0113A2  5158               	movf	__doprnt@pb& (0+255),w,b
 25295  0113A4  26D9               	addwf	fsr2l,f,c
 25296  0113A6  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25297  0113A8  22DA               	addwfc	fsr2h,f,c
 25298  0113AA  D801               	call	u22998
 25299  0113AC  D020               	goto	l18384
 25300  0113AE                     u22998:
 25301  0113AE  0005               	push	
 25302  0113B0  6EFA               	movwf	pclath,c
 25303  0113B2  50DE               	movf	postinc2,w,c
 25304  0113B4  6EFD               	movwf	tosl,c
 25305  0113B6  50DE               	movf	postinc2,w,c
 25306  0113B8  6EFE               	movwf	tosh,c
 25307  0113BA  50DE               	movf	postinc2,w,c
 25308  0113BC  6EFF               	movwf	tosu,c
 25309  0113BE  50FA               	movf	pclath,w,c
 25310  0113C0  0E30               	movlw	48
 25311  0113C2  0012               	return		;indir
 25312  0113C4                     l18380:
 25313                           
 25314                           ; BSR set to: 2
 25315  0113C4  C258  FFD9         	movff	__doprnt@pb,fsr2l
 25316  0113C8  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 25317  0113CC  CFDE F25E          	movff	postinc2,??__doprnt
 25318  0113D0  CFDD F25F          	movff	postdec2,??__doprnt+1
 25319  0113D4  C25E  FFD9         	movff	??__doprnt,fsr2l
 25320  0113D8  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 25321  0113DC  0E30               	movlw	48
 25322  0113DE  6EDF               	movwf	indf2,c
 25323                           
 25324                           ; BSR set to: 2
 25325  0113E0  C258  FFD9         	movff	__doprnt@pb,fsr2l
 25326  0113E4  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 25327  0113E8  2ADE               	incf	postinc2,f,c
 25328  0113EA  0E00               	movlw	0
 25329  0113EC  22DD               	addwfc	postdec2,f,c
 25330  0113EE                     l18384:
 25331                           
 25332                           ;doprnt.c: 1437: while(--width);
 25333  0113EE  0102               	movlb	2	; () banked
 25334  0113F0  0789               	decf	__doprnt@width& (0+255),f,b
 25335  0113F2  A0D8               	btfss	status,0,c
 25336  0113F4  078A               	decf	(__doprnt@width+1)& (0+255),f,b
 25337  0113F6  D7C4               	goto	L57
 25338  0113F8                     l18386:
 25339                           
 25340                           ; BSR set to: 2
 25341                           ;doprnt.c: 1441: {;doprnt.c: 1443: if(width;doprnt.c: 1447: )
 25342  0113F8  5189               	movf	__doprnt@width& (0+255),w,b
 25343  0113FA  118A               	iorwf	(__doprnt@width+1)& (0+255),w,b
 25344  0113FC  B4D8               	btfsc	status,2,c
 25345  0113FE  D03B               	goto	u23040
 25346  011400                     u23010:
 25347                           
 25348                           ; BSR set to: 2
 25349  011400  EE20 F002          	lfsr	2,2
 25350  011404  5158               	movf	__doprnt@pb& (0+255),w,b
 25351  011406  26D9               	addwf	fsr2l,f,c
 25352  011408  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25353  01140A  22DA               	addwfc	fsr2h,f,c
 25354  01140C  50DE               	movf	postinc2,w,c
 25355  01140E  10DE               	iorwf	postinc2,w,c
 25356  011410  10DE               	iorwf	postinc2,w,c
 25357  011412  B4D8               	btfsc	status,2,c
 25358  011414  D013               	goto	l18392
 25359                           
 25360                           ; BSR set to: 2
 25361  011416  EE20 F002          	lfsr	2,2
 25362  01141A  5158               	movf	__doprnt@pb& (0+255),w,b
 25363  01141C  26D9               	addwf	fsr2l,f,c
 25364  01141E  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25365  011420  22DA               	addwfc	fsr2h,f,c
 25366  011422  D801               	call	u23038
 25367  011424  D020               	goto	l18396
 25368  011426                     u23038:
 25369  011426  0005               	push	
 25370  011428  6EFA               	movwf	pclath,c
 25371  01142A  50DE               	movf	postinc2,w,c
 25372  01142C  6EFD               	movwf	tosl,c
 25373  01142E  50DE               	movf	postinc2,w,c
 25374  011430  6EFE               	movwf	tosh,c
 25375  011432  50DE               	movf	postinc2,w,c
 25376  011434  6EFF               	movwf	tosu,c
 25377  011436  50FA               	movf	pclath,w,c
 25378  011438  0E20               	movlw	32
 25379  01143A  0012               	return		;indir
 25380  01143C                     l18392:
 25381                           
 25382                           ; BSR set to: 2
 25383  01143C  C258  FFD9         	movff	__doprnt@pb,fsr2l
 25384  011440  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 25385  011444  CFDE F25E          	movff	postinc2,??__doprnt
 25386  011448  CFDD F25F          	movff	postdec2,??__doprnt+1
 25387  01144C  C25E  FFD9         	movff	??__doprnt,fsr2l
 25388  011450  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 25389  011454  0E20               	movlw	32
 25390  011456  6EDF               	movwf	indf2,c
 25391                           
 25392                           ; BSR set to: 2
 25393  011458  C258  FFD9         	movff	__doprnt@pb,fsr2l
 25394  01145C  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 25395  011460  2ADE               	incf	postinc2,f,c
 25396  011462  0E00               	movlw	0
 25397  011464  22DD               	addwfc	postdec2,f,c
 25398  011466                     l18396:
 25399                           
 25400                           ;doprnt.c: 1450: while(--width);
 25401  011466  0102               	movlb	2	; () banked
 25402  011468  0789               	decf	__doprnt@width& (0+255),f,b
 25403  01146A  A0D8               	btfss	status,0,c
 25404  01146C  078A               	decf	(__doprnt@width+1)& (0+255),f,b
 25405  01146E  5189               	movf	__doprnt@width& (0+255),w,b
 25406  011470  118A               	iorwf	(__doprnt@width+1)& (0+255),w,b
 25407  011472  A4D8               	btfss	status,2,c
 25408  011474  D7C5               	goto	u23010
 25409  011476                     u23040:
 25410                           
 25411                           ; BSR set to: 2
 25412                           ;doprnt.c: 1453: if(flag & 0x02)
 25413  011476  A38D               	btfss	__doprnt@flag& (0+255),1,b
 25414  011478  D041               	goto	l2620
 25415                           
 25416                           ; BSR set to: 2
 25417  01147A  EE20 F002          	lfsr	2,2
 25418  01147E  5158               	movf	__doprnt@pb& (0+255),w,b
 25419  011480  26D9               	addwf	fsr2l,f,c
 25420  011482  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25421  011484  22DA               	addwfc	fsr2h,f,c
 25422  011486  50DE               	movf	postinc2,w,c
 25423  011488  10DE               	iorwf	postinc2,w,c
 25424  01148A  10DE               	iorwf	postinc2,w,c
 25425  01148C  B4D8               	btfsc	status,2,c
 25426  01148E  D01D               	goto	l2622
 25427                           
 25428                           ; BSR set to: 2
 25429  011490  B18D               	btfsc	__doprnt@flag& (0+255),0,b
 25430  011492  D004               	goto	l18404
 25431                           
 25432                           ; BSR set to: 2
 25433  011494  0E00               	movlw	0
 25434  011496  6F74               	movwf	(__doprnt$4982+1)& (0+255),b
 25435  011498  0E2B               	movlw	43
 25436  01149A  D003               	goto	L16
 25437  01149C                     l18404:
 25438                           
 25439                           ; BSR set to: 2
 25440  01149C  0E00               	movlw	0
 25441  01149E  6F74               	movwf	(__doprnt$4982+1)& (0+255),b
 25442  0114A0  0E2D               	movlw	45
 25443  0114A2                     L16:
 25444  0114A2  6F73               	movwf	__doprnt$4982& (0+255),b
 25445                           
 25446                           ; BSR set to: 2
 25447  0114A4  EE20 F002          	lfsr	2,2
 25448  0114A8  5158               	movf	__doprnt@pb& (0+255),w,b
 25449  0114AA  26D9               	addwf	fsr2l,f,c
 25450  0114AC  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25451  0114AE  22DA               	addwfc	fsr2h,f,c
 25452  0114B0  D801               	call	u23088
 25453  0114B2  D10C               	goto	l18442
 25454  0114B4                     u23088:
 25455  0114B4  0005               	push	
 25456  0114B6  6EFA               	movwf	pclath,c
 25457  0114B8  50DE               	movf	postinc2,w,c
 25458  0114BA  6EFD               	movwf	tosl,c
 25459  0114BC  50DE               	movf	postinc2,w,c
 25460  0114BE  6EFE               	movwf	tosh,c
 25461  0114C0  50DE               	movf	postinc2,w,c
 25462  0114C2  6EFF               	movwf	tosu,c
 25463  0114C4  50FA               	movf	pclath,w,c
 25464  0114C6  5173               	movf	__doprnt$4982& (0+255),w,b
 25465  0114C8  0012               	return		;indir
 25466  0114CA                     l2622:
 25467                           
 25468                           ; BSR set to: 2
 25469  0114CA  B18D               	btfsc	__doprnt@flag& (0+255),0,b
 25470  0114CC  D004               	goto	l18410
 25471                           
 25472                           ; BSR set to: 2
 25473  0114CE  0E00               	movlw	0
 25474  0114D0  6F76               	movwf	(__doprnt$4983+1)& (0+255),b
 25475  0114D2  0E2B               	movlw	43
 25476  0114D4  D003               	goto	L17
 25477  0114D6                     l18410:
 25478                           
 25479                           ; BSR set to: 2
 25480  0114D6  0E00               	movlw	0
 25481  0114D8  6F76               	movwf	(__doprnt$4983+1)& (0+255),b
 25482  0114DA  0E2D               	movlw	45
 25483  0114DC                     L17:
 25484  0114DC  6F75               	movwf	__doprnt$4983& (0+255),b
 25485                           
 25486                           ; BSR set to: 2
 25487  0114DE  C258  FFD9         	movff	__doprnt@pb,fsr2l
 25488  0114E2  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 25489  0114E6  CFDE F25E          	movff	postinc2,??__doprnt
 25490  0114EA  CFDD F25F          	movff	postdec2,??__doprnt+1
 25491  0114EE  C25E  FFD9         	movff	??__doprnt,fsr2l
 25492  0114F2  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 25493  0114F6  C275  FFDF         	movff	__doprnt$4983,indf2
 25494  0114FA  D0E1               	goto	l18440
 25495  0114FC                     l2620:
 25496                           
 25497                           ; BSR set to: 2
 25498                           ;doprnt.c: 1462: else if(flag & 0x01)
 25499  0114FC  A18D               	btfss	__doprnt@flag& (0+255),0,b
 25500  0114FE  D0E6               	goto	l18442
 25501                           
 25502                           ; BSR set to: 2
 25503  011500  EE20 F002          	lfsr	2,2
 25504  011504  5158               	movf	__doprnt@pb& (0+255),w,b
 25505  011506  26D9               	addwf	fsr2l,f,c
 25506  011508  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25507  01150A  22DA               	addwfc	fsr2h,f,c
 25508  01150C  50DE               	movf	postinc2,w,c
 25509  01150E  10DE               	iorwf	postinc2,w,c
 25510  011510  10DE               	iorwf	postinc2,w,c
 25511  011512  B4D8               	btfsc	status,2,c
 25512  011514  D013               	goto	l18420
 25513                           
 25514                           ; BSR set to: 2
 25515  011516  EE20 F002          	lfsr	2,2
 25516  01151A  5158               	movf	__doprnt@pb& (0+255),w,b
 25517  01151C  26D9               	addwf	fsr2l,f,c
 25518  01151E  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25519  011520  22DA               	addwfc	fsr2h,f,c
 25520  011522  D801               	call	u23128
 25521  011524  D0D3               	goto	l18442
 25522  011526                     u23128:
 25523  011526  0005               	push	
 25524  011528  6EFA               	movwf	pclath,c
 25525  01152A  50DE               	movf	postinc2,w,c
 25526  01152C  6EFD               	movwf	tosl,c
 25527  01152E  50DE               	movf	postinc2,w,c
 25528  011530  6EFE               	movwf	tosh,c
 25529  011532  50DE               	movf	postinc2,w,c
 25530  011534  6EFF               	movwf	tosu,c
 25531  011536  50FA               	movf	pclath,w,c
 25532  011538  0E20               	movlw	32
 25533  01153A  0012               	return		;indir
 25534  01153C                     l18420:
 25535                           
 25536                           ; BSR set to: 2
 25537  01153C  C258  FFD9         	movff	__doprnt@pb,fsr2l
 25538  011540  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 25539  011544  CFDE F25E          	movff	postinc2,??__doprnt
 25540  011548  CFDD F25F          	movff	postdec2,??__doprnt+1
 25541  01154C  C25E  FFD9         	movff	??__doprnt,fsr2l
 25542  011550  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 25543  011554  0E20               	movlw	32
 25544  011556  6EDF               	movwf	indf2,c
 25545  011558  D0B2               	goto	l18440
 25546  01155A                     l18424:
 25547                           
 25548                           ; BSR set to: 2
 25549                           ;doprnt.c: 1505: case 0xC0:;doprnt.c: 1508: c = (val / dpowers[prec]) % 10 + '0';
 25550  01155A  C28B  F25E         	movff	__doprnt@prec,??__doprnt
 25551  01155E  C28C  F25F         	movff	__doprnt@prec+1,??__doprnt+1
 25552  011562  90D8               	bcf	status,0,c
 25553  011564  375E               	rlcf	??__doprnt& (0+255),f,b
 25554  011566  375F               	rlcf	(??__doprnt+1)& (0+255),f,b
 25555  011568  90D8               	bcf	status,0,c
 25556  01156A  375E               	rlcf	??__doprnt& (0+255),f,b
 25557  01156C  375F               	rlcf	(??__doprnt+1)& (0+255),f,b
 25558  01156E  0E4B               	movlw	low _dpowers
 25559  011570  255E               	addwf	??__doprnt& (0+255),w,b
 25560  011572  6EF6               	movwf	tblptrl,c
 25561  011574  0EE9               	movlw	high _dpowers
 25562  011576  215F               	addwfc	(??__doprnt+1)& (0+255),w,b
 25563  011578  6EF7               	movwf	tblptrh,c
 25564  01157A                     	if	1	;There are 3 active tblptr bytes
 25565  01157A  6AF8               	clrf	tblptru,c
 25566  01157C  0E00               	movlw	low (__mediumconst shr (0+16))
 25567  01157E  22F8               	addwfc	tblptru,f,c
 25568  011580                     	endif
 25569  011580  0009               	tblrd		*+
 25570  011582  CFF5 F204          	movff	tablat,___lldiv@divisor
 25571  011586  0009               	tblrd		*+
 25572  011588  CFF5 F205          	movff	tablat,___lldiv@divisor+1
 25573  01158C  0009               	tblrd		*+
 25574  01158E  CFF5 F206          	movff	tablat,___lldiv@divisor+2
 25575  011592  000A               	tblrd		*-
 25576  011594  CFF5 F207          	movff	tablat,___lldiv@divisor+3
 25577  011598  C285  F200         	movff	__doprnt@val,___lldiv@dividend
 25578  01159C  C286  F201         	movff	__doprnt@val+1,___lldiv@dividend+1
 25579  0115A0  C287  F202         	movff	__doprnt@val+2,___lldiv@dividend+2
 25580  0115A4  C288  F203         	movff	__doprnt@val+3,___lldiv@dividend+3
 25581  0115A8  EC69  F0D9         	call	___lldiv
 25582  0115AC  C200  F20D         	movff	?___lldiv,___llmod@dividend
 25583  0115B0  C201  F20E         	movff	?___lldiv+1,___llmod@dividend+1
 25584  0115B4  C202  F20F         	movff	?___lldiv+2,___llmod@dividend+2
 25585  0115B8  C203  F210         	movff	?___lldiv+3,___llmod@dividend+3
 25586  0115BC  0E0A               	movlw	10
 25587  0115BE  0102               	movlb	2	; () banked
 25588  0115C0  6F11               	movwf	___llmod@divisor& (0+255),b
 25589  0115C2  0E00               	movlw	0
 25590  0115C4  6F12               	movwf	(___llmod@divisor+1)& (0+255),b
 25591  0115C6  0E00               	movlw	0
 25592  0115C8  6F13               	movwf	(___llmod@divisor+2)& (0+255),b
 25593  0115CA  0E00               	movlw	0
 25594  0115CC  6F14               	movwf	(___llmod@divisor+3)& (0+255),b
 25595  0115CE  EC9F  F0DA         	call	___llmod	;wreg free
 25596  0115D2  0102               	movlb	2	; () banked
 25597  0115D4  510D               	movf	?___llmod& (0+255),w,b
 25598  0115D6  0F30               	addlw	48
 25599  0115D8  6F8F               	movwf	__doprnt@c& (0+255),b
 25600                           
 25601                           ;doprnt.c: 1510: break;
 25602  0115DA  D045               	goto	l18434
 25603  0115DC                     l18426:
 25604                           
 25605                           ; BSR set to: 2
 25606                           ;doprnt.c: 1518: {;doprnt.c: 1519: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 25607  0115DC  C285  F200         	movff	__doprnt@val,___lldiv@dividend
 25608  0115E0  C286  F201         	movff	__doprnt@val+1,___lldiv@dividend+1
 25609  0115E4  C287  F202         	movff	__doprnt@val+2,___lldiv@dividend+2
 25610  0115E8  C288  F203         	movff	__doprnt@val+3,___lldiv@dividend+3
 25611  0115EC  C28B  F25E         	movff	__doprnt@prec,??__doprnt
 25612  0115F0  C28C  F25F         	movff	__doprnt@prec+1,??__doprnt+1
 25613  0115F4  90D8               	bcf	status,0,c
 25614  0115F6  375E               	rlcf	??__doprnt& (0+255),f,b
 25615  0115F8  375F               	rlcf	(??__doprnt+1)& (0+255),f,b
 25616  0115FA  90D8               	bcf	status,0,c
 25617  0115FC  375E               	rlcf	??__doprnt& (0+255),f,b
 25618  0115FE  375F               	rlcf	(??__doprnt+1)& (0+255),f,b
 25619  011600  0E2B               	movlw	low _hexpowers
 25620  011602  255E               	addwf	??__doprnt& (0+255),w,b
 25621  011604  6EF6               	movwf	tblptrl,c
 25622  011606  0EE6               	movlw	high _hexpowers
 25623  011608  215F               	addwfc	(??__doprnt+1)& (0+255),w,b
 25624  01160A  6EF7               	movwf	tblptrh,c
 25625  01160C                     	if	1	;There are 3 active tblptr bytes
 25626  01160C  6AF8               	clrf	tblptru,c
 25627  01160E  0E00               	movlw	low (__mediumconst shr (0+16))
 25628  011610  22F8               	addwfc	tblptru,f,c
 25629  011612                     	endif
 25630  011612  0009               	tblrd		*+
 25631  011614  CFF5 F204          	movff	tablat,___lldiv@divisor
 25632  011618  0009               	tblrd		*+
 25633  01161A  CFF5 F205          	movff	tablat,___lldiv@divisor+1
 25634  01161E  0009               	tblrd		*+
 25635  011620  CFF5 F206          	movff	tablat,___lldiv@divisor+2
 25636  011624  000A               	tblrd		*-
 25637  011626  CFF5 F207          	movff	tablat,___lldiv@divisor+3
 25638  01162A  EC69  F0D9         	call	___lldiv	;wreg free
 25639  01162E  0102               	movlb	2	; () banked
 25640  011630  5100               	movf	?___lldiv& (0+255),w,b
 25641  011632  0B0F               	andlw	15
 25642  011634  6F66               	movwf	__doprnt@idx& (0+255),b
 25643                           
 25644                           ; BSR set to: 2
 25645                           ;doprnt.c: 1523: c = "0123456789ABCDEF"[idx];
 25646  011636  0E1E               	movlw	low STR_359
 25647  011638  2566               	addwf	__doprnt@idx& (0+255),w,b
 25648  01163A  6EF6               	movwf	tblptrl,c
 25649  01163C  6AF7               	clrf	tblptrh,c
 25650  01163E  0EFB               	movlw	high STR_359
 25651  011640  22F7               	addwfc	tblptrh,f,c
 25652  011642                     	if	1	;There are 3 active tblptr bytes
 25653  011642  6AF8               	clrf	tblptru,c
 25654  011644  0E00               	movlw	low (__mediumconst shr (0+16))
 25655  011646  22F8               	addwfc	tblptru,f,c
 25656  011648                     	endif
 25657  011648  0008               	tblrd		*
 25658  01164A  CFF5 F28F          	movff	tablat,__doprnt@c
 25659                           
 25660                           ;doprnt.c: 1527: };doprnt.c: 1529: break;
 25661  01164E  D00B               	goto	l18434
 25662  011650                     l18432:
 25663                           
 25664                           ; BSR set to: 2
 25665  011650  518D               	movf	__doprnt@flag& (0+255),w,b
 25666  011652  0BC0               	andlw	192
 25667                           
 25668                           ; Switch size 1, requested type "simple"
 25669                           ; Number of cases is 3, Range of values is 0 to 192
 25670                           ; switch strategies available:
 25671                           ; Name         Instructions Cycles
 25672                           ; simple_byte           10     6 (average)
 25673                           ;	Chosen strategy is simple_byte
 25674  011654  0A00               	xorlw	0	; case 0
 25675  011656  B4D8               	btfsc	status,2,c
 25676  011658  D780               	goto	l18424
 25677  01165A  0A80               	xorlw	128	; case 128
 25678  01165C  B4D8               	btfsc	status,2,c
 25679  01165E  D7BE               	goto	l18426
 25680  011660  0A40               	xorlw	64	; case 192
 25681  011662  B4D8               	btfsc	status,2,c
 25682  011664  D77A               	goto	l18424
 25683  011666                     l18434:
 25684                           
 25685                           ; BSR set to: 2
 25686  011666  EE20 F002          	lfsr	2,2
 25687  01166A  5158               	movf	__doprnt@pb& (0+255),w,b
 25688  01166C  26D9               	addwf	fsr2l,f,c
 25689  01166E  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25690  011670  22DA               	addwfc	fsr2h,f,c
 25691  011672  50DE               	movf	postinc2,w,c
 25692  011674  10DE               	iorwf	postinc2,w,c
 25693  011676  10DE               	iorwf	postinc2,w,c
 25694  011678  B4D8               	btfsc	status,2,c
 25695  01167A  D013               	goto	l18438
 25696                           
 25697                           ; BSR set to: 2
 25698  01167C  EE20 F002          	lfsr	2,2
 25699  011680  5158               	movf	__doprnt@pb& (0+255),w,b
 25700  011682  26D9               	addwf	fsr2l,f,c
 25701  011684  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25702  011686  22DA               	addwfc	fsr2h,f,c
 25703  011688  D801               	call	u23148
 25704  01168A  D020               	goto	l18442
 25705  01168C                     u23148:
 25706  01168C  0005               	push	
 25707  01168E  6EFA               	movwf	pclath,c
 25708  011690  50DE               	movf	postinc2,w,c
 25709  011692  6EFD               	movwf	tosl,c
 25710  011694  50DE               	movf	postinc2,w,c
 25711  011696  6EFE               	movwf	tosh,c
 25712  011698  50DE               	movf	postinc2,w,c
 25713  01169A  6EFF               	movwf	tosu,c
 25714  01169C  50FA               	movf	pclath,w,c
 25715  01169E  518F               	movf	__doprnt@c& (0+255),w,b
 25716  0116A0  0012               	return		;indir
 25717  0116A2                     l18438:
 25718                           
 25719                           ; BSR set to: 2
 25720  0116A2  C258  FFD9         	movff	__doprnt@pb,fsr2l
 25721  0116A6  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 25722  0116AA  CFDE F25E          	movff	postinc2,??__doprnt
 25723  0116AE  CFDD F25F          	movff	postdec2,??__doprnt+1
 25724  0116B2  C25E  FFD9         	movff	??__doprnt,fsr2l
 25725  0116B6  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 25726  0116BA  C28F  FFDF         	movff	__doprnt@c,indf2
 25727  0116BE                     l18440:
 25728                           
 25729                           ; BSR set to: 2
 25730  0116BE  C258  FFD9         	movff	__doprnt@pb,fsr2l
 25731  0116C2  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 25732  0116C6  2ADE               	incf	postinc2,f,c
 25733  0116C8  0E00               	movlw	0
 25734  0116CA  22DD               	addwfc	postdec2,f,c
 25735  0116CC                     l18442:
 25736  0116CC  0102               	movlb	2	; () banked
 25737  0116CE  078B               	decf	__doprnt@prec& (0+255),f,b
 25738  0116D0  A0D8               	btfss	status,0,c
 25739  0116D2  078C               	decf	(__doprnt@prec+1)& (0+255),f,b
 25740  0116D4  298B               	incf	__doprnt@prec& (0+255),w,b
 25741  0116D6  E1BC               	bnz	l18432
 25742  0116D8  298C               	incf	(__doprnt@prec+1)& (0+255),w,b
 25743  0116DA  A4D8               	btfss	status,2,c
 25744  0116DC  D7B9               	goto	l18432
 25745  0116DE                     u23150:
 25746  0116DE  0102               	movlb	2	; () banked
 25747  0116E0  515A               	movf	__doprnt@f& (0+255),w,b
 25748  0116E2  6F5E               	movwf	??__doprnt& (0+255),b
 25749  0116E4  515B               	movf	(__doprnt@f+1)& (0+255),w,b
 25750  0116E6  6F5F               	movwf	(??__doprnt+1)& (0+255),b
 25751  0116E8  4B5A               	infsnz	__doprnt@f& (0+255),f,b
 25752  0116EA  2B5B               	incf	(__doprnt@f+1)& (0+255),f,b
 25753  0116EC  C25E  FFF6         	movff	??__doprnt,tblptrl
 25754  0116F0  C25F  FFF7         	movff	??__doprnt+1,tblptrh
 25755  0116F4  0E00               	movlw	low (__mediumconst shr (0+16))
 25756  0116F6  6EF8               	movwf	tblptru,c
 25757  0116F8  0E0E               	movlw	(high __ramtop+-1)
 25758  0116FA  64F7               	cpfsgt	tblptrh,c
 25759  0116FC  D003               	bra	u23167
 25760  0116FE  0008               	tblrd		*
 25761  011700  50F5               	movf	tablat,w,c
 25762  011702  D005               	bra	u23160
 25763  011704                     u23167:
 25764  011704  CFF6 FFE9          	movff	tblptrl,fsr0l
 25765  011708  CFF7 FFEA          	movff	tblptrh,fsr0h
 25766  01170C  50EF               	movf	indf0,w,c
 25767  01170E                     u23160:
 25768  01170E  0102               	movlb	2	; () banked
 25769  011710  6F8F               	movwf	__doprnt@c& (0+255),b
 25770  011712  518F               	movf	__doprnt@c& (0+255),w,b
 25771  011714  A4D8               	btfss	status,2,c
 25772  011716  EF02  F080         	goto	l17898
 25773  01171A                     u23170:
 25774                           
 25775                           ; BSR set to: 2
 25776                           ;doprnt.c: 1559: return 0;
 25777  01171A  0E00               	movlw	0
 25778  01171C  6F59               	movwf	(?__doprnt+1)& (0+255),b
 25779  01171E  0E00               	movlw	0
 25780  011720  6F58               	movwf	?__doprnt& (0+255),b
 25781                           
 25782                           ; BSR set to: 2
 25783  011722  0012               	return		;funcret
 25784  011724                     __end_of__doprnt:
 25785                           	opt callstack 0
 25786                           
 25787 ;; *************** function _scale *****************
 25788 ;; Defined at:
 25789 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 25790 ;; Parameters:    Size  Location     Type
 25791 ;;  scl             1    wreg     char 
 25792 ;; Auto vars:     Size  Location     Type
 25793 ;;  scl             1   47[BANK2 ] char 
 25794 ;; Return value:  Size  Location     Type
 25795 ;;                  4   39[BANK2 ] char 
 25796 ;; Registers used:
 25797 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25798 ;; Tracked objects:
 25799 ;;		On entry : 0/0
 25800 ;;		On exit  : 0/0
 25801 ;;		Unchanged: 0/0
 25802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25803 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25804 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25806 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25807 ;;Total ram usage:        9 bytes
 25808 ;; Hardware stack levels used:    1
 25809 ;; Hardware stack levels required when called:   12
 25810 ;; This function calls:
 25811 ;;		___awdiv
 25812 ;;		___awmod
 25813 ;;		___flmul
 25814 ;; This function is called by:
 25815 ;;		__doprnt
 25816 ;; This function uses a non-reentrant model
 25817 ;;
 25818                           
 25819                           	psect	text80
 25820  015AA0                     __ptext80:
 25821                           	opt callstack 0
 25822  015AA0                     _scale:
 25823                           	opt callstack 13
 25824                           
 25825                           ; BSR set to: 2
 25826                           ;incstack = 0
 25827                           ;scale@scl stored from wreg
 25828  015AA0  0102               	movlb	2	; () banked
 25829  015AA2  6F2F               	movwf	scale@scl& (0+255),b
 25830                           
 25831                           ;doprnt.c: 436: if(scl < 0) {
 25832  015AA4  0102               	movlb	2	; () banked
 25833  015AA6  AF2F               	btfss	scale@scl& (0+255),7,b
 25834  015AA8  D10B               	goto	l17530
 25835                           
 25836                           ; BSR set to: 2
 25837                           ;doprnt.c: 437: scl = -scl;
 25838  015AAA  6D2F               	negf	scale@scl& (0+255),b
 25839                           
 25840                           ;doprnt.c: 438: if(scl>=110)
 25841  015AAC  512F               	movf	scale@scl& (0+255),w,b
 25842  015AAE  0A80               	xorlw	128
 25843  015AB0  0F12               	addlw	-238
 25844  015AB2  A0D8               	btfss	status,0,c
 25845  015AB4  D095               	goto	l17520
 25846                           
 25847                           ; BSR set to: 2
 25848                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 25849  015AB6  0E00               	movlw	0
 25850  015AB8  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 25851  015ABA  0E0A               	movlw	10
 25852  015ABC  6F08               	movwf	___awdiv@divisor& (0+255),b
 25853  015ABE  0E00               	movlw	0
 25854  015AC0  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 25855  015AC2  0E64               	movlw	100
 25856  015AC4  6F02               	movwf	___awmod@divisor& (0+255),b
 25857  015AC6  512F               	movf	scale@scl& (0+255),w,b
 25858  015AC8  6F00               	movwf	___awmod@dividend& (0+255),b
 25859  015ACA  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 25860  015ACC  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 25861  015ACE  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 25862  015AD0  EC2E  F0DA         	call	___awmod
 25863  015AD4  C200  F206         	movff	?___awmod,___awdiv@dividend
 25864  015AD8  C201  F207         	movff	?___awmod+1,___awdiv@dividend+1
 25865  015ADC  EC26  F0D9         	call	___awdiv	;wreg free
 25866  015AE0  0E09               	movlw	9
 25867  015AE2  0102               	movlb	2	; () banked
 25868  015AE4  2706               	addwf	?___awdiv& (0+255),f,b
 25869  015AE6  5106               	movf	?___awdiv& (0+255),w,b
 25870  015AE8  0D04               	mullw	4
 25871  015AEA  0EF7               	movlw	low __npowers_
 25872  015AEC  24F3               	addwf	prodl,w,c
 25873  015AEE  6EF6               	movwf	tblptrl,c
 25874  015AF0  0EE5               	movlw	high __npowers_
 25875  015AF2  20F4               	addwfc	prodh,w,c
 25876  015AF4  6EF7               	movwf	tblptrh,c
 25877  015AF6                     	if	1	;There are 3 active tblptr bytes
 25878  015AF6  6AF8               	clrf	tblptru,c
 25879  015AF8  0E00               	movlw	low (__mediumconst shr (0+16))
 25880  015AFA  22F8               	addwfc	tblptru,f,c
 25881  015AFC                     	endif
 25882  015AFC  0009               	tblrd		*+
 25883  015AFE  CFF5 F212          	movff	tablat,___flmul@a
 25884  015B02  0009               	tblrd		*+
 25885  015B04  CFF5 F213          	movff	tablat,___flmul@a+1
 25886  015B08  0009               	tblrd		*+
 25887  015B0A  CFF5 F214          	movff	tablat,___flmul@a+2
 25888  015B0E  000A               	tblrd		*-
 25889  015B10  CFF5 F215          	movff	tablat,___flmul@a+3
 25890  015B14  0E00               	movlw	0
 25891  015B16  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 25892  015B18  0E64               	movlw	100
 25893  015B1A  6F08               	movwf	___awdiv@divisor& (0+255),b
 25894  015B1C  512F               	movf	scale@scl& (0+255),w,b
 25895  015B1E  6F06               	movwf	___awdiv@dividend& (0+255),b
 25896  015B20  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 25897  015B22  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 25898  015B24  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 25899  015B26  EC26  F0D9         	call	___awdiv	;wreg free
 25900  015B2A  0E12               	movlw	18
 25901  015B2C  0102               	movlb	2	; () banked
 25902  015B2E  2706               	addwf	?___awdiv& (0+255),f,b
 25903  015B30  5106               	movf	?___awdiv& (0+255),w,b
 25904  015B32  0D04               	mullw	4
 25905  015B34  0EF7               	movlw	low __npowers_
 25906  015B36  24F3               	addwf	prodl,w,c
 25907  015B38  6EF6               	movwf	tblptrl,c
 25908  015B3A  0EE5               	movlw	high __npowers_
 25909  015B3C  20F4               	addwfc	prodh,w,c
 25910  015B3E  6EF7               	movwf	tblptrh,c
 25911  015B40                     	if	1	;There are 3 active tblptr bytes
 25912  015B40  6AF8               	clrf	tblptru,c
 25913  015B42  0E00               	movlw	low (__mediumconst shr (0+16))
 25914  015B44  22F8               	addwfc	tblptru,f,c
 25915  015B46                     	endif
 25916  015B46  0009               	tblrd		*+
 25917  015B48  CFF5 F20E          	movff	tablat,___flmul@b
 25918  015B4C  0009               	tblrd		*+
 25919  015B4E  CFF5 F20F          	movff	tablat,___flmul@b+1
 25920  015B52  0009               	tblrd		*+
 25921  015B54  CFF5 F210          	movff	tablat,___flmul@b+2
 25922  015B58  000A               	tblrd		*-
 25923  015B5A  CFF5 F211          	movff	tablat,___flmul@b+3
 25924  015B5E  ECFC  F0B4         	call	___flmul	;wreg free
 25925  015B62  C20E  F22B         	movff	?___flmul,_scale$6028
 25926  015B66  C20F  F22C         	movff	?___flmul+1,_scale$6028+1
 25927  015B6A  C210  F22D         	movff	?___flmul+2,_scale$6028+2
 25928  015B6E  C211  F22E         	movff	?___flmul+3,_scale$6028+3
 25929                           
 25930                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 25931  015B72  C22B  F20E         	movff	_scale$6028,___flmul@b
 25932  015B76  C22C  F20F         	movff	_scale$6028+1,___flmul@b+1
 25933  015B7A  C22D  F210         	movff	_scale$6028+2,___flmul@b+2
 25934  015B7E  C22E  F211         	movff	_scale$6028+3,___flmul@b+3
 25935  015B82  0E00               	movlw	0
 25936  015B84  0102               	movlb	2	; () banked
 25937  015B86  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 25938  015B88  0E0A               	movlw	10
 25939  015B8A  6F02               	movwf	___awmod@divisor& (0+255),b
 25940  015B8C  512F               	movf	scale@scl& (0+255),w,b
 25941  015B8E  6F00               	movwf	___awmod@dividend& (0+255),b
 25942  015B90  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 25943  015B92  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 25944  015B94  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 25945  015B96  EC2E  F0DA         	call	___awmod	;wreg free
 25946  015B9A  0102               	movlb	2	; () banked
 25947  015B9C  5100               	movf	?___awmod& (0+255),w,b
 25948  015B9E  0D04               	mullw	4
 25949  015BA0  0EF7               	movlw	low __npowers_
 25950  015BA2  24F3               	addwf	prodl,w,c
 25951  015BA4  6EF6               	movwf	tblptrl,c
 25952  015BA6  0EE5               	movlw	high __npowers_
 25953  015BA8  20F4               	addwfc	prodh,w,c
 25954  015BAA  6EF7               	movwf	tblptrh,c
 25955  015BAC                     	if	1	;There are 3 active tblptr bytes
 25956  015BAC  6AF8               	clrf	tblptru,c
 25957  015BAE  0E00               	movlw	low (__mediumconst shr (0+16))
 25958  015BB0  22F8               	addwfc	tblptru,f,c
 25959  015BB2                     	endif
 25960  015BB2  0009               	tblrd		*+
 25961  015BB4  CFF5 F212          	movff	tablat,___flmul@a
 25962  015BB8  0009               	tblrd		*+
 25963  015BBA  CFF5 F213          	movff	tablat,___flmul@a+1
 25964  015BBE  0009               	tblrd		*+
 25965  015BC0  CFF5 F214          	movff	tablat,___flmul@a+2
 25966  015BC4  000A               	tblrd		*-
 25967  015BC6  CFF5 F215          	movff	tablat,___flmul@a+3
 25968  015BCA  ECFC  F0B4         	call	___flmul	;wreg free
 25969  015BCE  C20E  F227         	movff	?___flmul,?_scale
 25970  015BD2  C20F  F228         	movff	?___flmul+1,?_scale+1
 25971  015BD6  C210  F229         	movff	?___flmul+2,?_scale+2
 25972  015BDA  C211  F22A         	movff	?___flmul+3,?_scale+3
 25973  015BDE  0012               	return	
 25974  015BE0                     l17520:
 25975                           
 25976                           ; BSR set to: 2
 25977                           ;doprnt.c: 440: else if(scl > 10)
 25978  015BE0  512F               	movf	scale@scl& (0+255),w,b
 25979  015BE2  0A80               	xorlw	128
 25980  015BE4  0F75               	addlw	-139
 25981  015BE6  A0D8               	btfss	status,0,c
 25982  015BE8  D053               	goto	l17526
 25983                           
 25984                           ; BSR set to: 2
 25985                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
 25986  015BEA  0E00               	movlw	0
 25987  015BEC  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 25988  015BEE  0E0A               	movlw	10
 25989  015BF0  6F08               	movwf	___awdiv@divisor& (0+255),b
 25990  015BF2  512F               	movf	scale@scl& (0+255),w,b
 25991  015BF4  6F06               	movwf	___awdiv@dividend& (0+255),b
 25992  015BF6  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 25993  015BF8  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 25994  015BFA  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 25995  015BFC  EC26  F0D9         	call	___awdiv	;wreg free
 25996  015C00  0E09               	movlw	9
 25997  015C02  0102               	movlb	2	; () banked
 25998  015C04  2706               	addwf	?___awdiv& (0+255),f,b
 25999  015C06  5106               	movf	?___awdiv& (0+255),w,b
 26000  015C08  0D04               	mullw	4
 26001  015C0A  0EF7               	movlw	low __npowers_
 26002  015C0C  24F3               	addwf	prodl,w,c
 26003  015C0E  6EF6               	movwf	tblptrl,c
 26004  015C10  0EE5               	movlw	high __npowers_
 26005  015C12  20F4               	addwfc	prodh,w,c
 26006  015C14  6EF7               	movwf	tblptrh,c
 26007  015C16                     	if	1	;There are 3 active tblptr bytes
 26008  015C16  6AF8               	clrf	tblptru,c
 26009  015C18  0E00               	movlw	low (__mediumconst shr (0+16))
 26010  015C1A  22F8               	addwfc	tblptru,f,c
 26011  015C1C                     	endif
 26012  015C1C  0009               	tblrd		*+
 26013  015C1E  CFF5 F20E          	movff	tablat,___flmul@b
 26014  015C22  0009               	tblrd		*+
 26015  015C24  CFF5 F20F          	movff	tablat,___flmul@b+1
 26016  015C28  0009               	tblrd		*+
 26017  015C2A  CFF5 F210          	movff	tablat,___flmul@b+2
 26018  015C2E  000A               	tblrd		*-
 26019  015C30  CFF5 F211          	movff	tablat,___flmul@b+3
 26020  015C34  0E00               	movlw	0
 26021  015C36  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 26022  015C38  0E0A               	movlw	10
 26023  015C3A  6F02               	movwf	___awmod@divisor& (0+255),b
 26024  015C3C  512F               	movf	scale@scl& (0+255),w,b
 26025  015C3E  6F00               	movwf	___awmod@dividend& (0+255),b
 26026  015C40  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 26027  015C42  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 26028  015C44  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 26029  015C46  EC2E  F0DA         	call	___awmod	;wreg free
 26030  015C4A  0102               	movlb	2	; () banked
 26031  015C4C  5100               	movf	?___awmod& (0+255),w,b
 26032  015C4E  0D04               	mullw	4
 26033  015C50  0EF7               	movlw	low __npowers_
 26034  015C52  24F3               	addwf	prodl,w,c
 26035  015C54  6EF6               	movwf	tblptrl,c
 26036  015C56  0EE5               	movlw	high __npowers_
 26037  015C58  20F4               	addwfc	prodh,w,c
 26038  015C5A  6EF7               	movwf	tblptrh,c
 26039  015C5C                     	if	1	;There are 3 active tblptr bytes
 26040  015C5C  6AF8               	clrf	tblptru,c
 26041  015C5E  0E00               	movlw	low (__mediumconst shr (0+16))
 26042  015C60  22F8               	addwfc	tblptru,f,c
 26043  015C62                     	endif
 26044  015C62  0009               	tblrd		*+
 26045  015C64  CFF5 F212          	movff	tablat,___flmul@a
 26046  015C68  0009               	tblrd		*+
 26047  015C6A  CFF5 F213          	movff	tablat,___flmul@a+1
 26048  015C6E  0009               	tblrd		*+
 26049  015C70  CFF5 F214          	movff	tablat,___flmul@a+2
 26050  015C74  000A               	tblrd		*-
 26051  015C76  CFF5 F215          	movff	tablat,___flmul@a+3
 26052  015C7A  ECFC  F0B4         	call	___flmul	;wreg free
 26053  015C7E  C20E  F227         	movff	?___flmul,?_scale
 26054  015C82  C20F  F228         	movff	?___flmul+1,?_scale+1
 26055  015C86  C210  F229         	movff	?___flmul+2,?_scale+2
 26056  015C8A  C211  F22A         	movff	?___flmul+3,?_scale+3
 26057  015C8E  0012               	return	
 26058  015C90                     l17526:
 26059                           
 26060                           ; BSR set to: 2
 26061                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
 26062  015C90  512F               	movf	scale@scl& (0+255),w,b
 26063  015C92  0D04               	mullw	4
 26064  015C94  0EF7               	movlw	low __npowers_
 26065  015C96  24F3               	addwf	prodl,w,c
 26066  015C98  6EF6               	movwf	tblptrl,c
 26067  015C9A  0EE5               	movlw	high __npowers_
 26068  015C9C  20F4               	addwfc	prodh,w,c
 26069  015C9E  6EF7               	movwf	tblptrh,c
 26070  015CA0                     	if	1	;There are 3 active tblptr bytes
 26071  015CA0  6AF8               	clrf	tblptru,c
 26072  015CA2  0E00               	movlw	low (__mediumconst shr (0+16))
 26073  015CA4  22F8               	addwfc	tblptru,f,c
 26074  015CA6                     	endif
 26075  015CA6  0009               	tblrd		*+
 26076  015CA8  CFF5 F227          	movff	tablat,?_scale
 26077  015CAC  0009               	tblrd		*+
 26078  015CAE  CFF5 F228          	movff	tablat,?_scale+1
 26079  015CB2  0009               	tblrd		*+
 26080  015CB4  CFF5 F229          	movff	tablat,?_scale+2
 26081  015CB8  000A               	tblrd		*-
 26082  015CBA  CFF5 F22A          	movff	tablat,?_scale+3
 26083  015CBE  0012               	return	
 26084  015CC0                     l17530:
 26085                           
 26086                           ; BSR set to: 2
 26087                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
 26088  015CC0  512F               	movf	scale@scl& (0+255),w,b
 26089  015CC2  0A80               	xorlw	128
 26090  015CC4  0F12               	addlw	-238
 26091  015CC6  A0D8               	btfss	status,0,c
 26092  015CC8  D095               	goto	l17538
 26093                           
 26094                           ; BSR set to: 2
 26095                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 26096  015CCA  0E00               	movlw	0
 26097  015CCC  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 26098  015CCE  0E0A               	movlw	10
 26099  015CD0  6F08               	movwf	___awdiv@divisor& (0+255),b
 26100  015CD2  0E00               	movlw	0
 26101  015CD4  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 26102  015CD6  0E64               	movlw	100
 26103  015CD8  6F02               	movwf	___awmod@divisor& (0+255),b
 26104  015CDA  512F               	movf	scale@scl& (0+255),w,b
 26105  015CDC  6F00               	movwf	___awmod@dividend& (0+255),b
 26106  015CDE  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 26107  015CE0  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 26108  015CE2  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 26109  015CE4  EC2E  F0DA         	call	___awmod	;wreg free
 26110  015CE8  C200  F206         	movff	?___awmod,___awdiv@dividend
 26111  015CEC  C201  F207         	movff	?___awmod+1,___awdiv@dividend+1
 26112  015CF0  EC26  F0D9         	call	___awdiv	;wreg free
 26113  015CF4  0E09               	movlw	9
 26114  015CF6  0102               	movlb	2	; () banked
 26115  015CF8  2706               	addwf	?___awdiv& (0+255),f,b
 26116  015CFA  5106               	movf	?___awdiv& (0+255),w,b
 26117  015CFC  0D04               	mullw	4
 26118  015CFE  0EC3               	movlw	low __powers_
 26119  015D00  24F3               	addwf	prodl,w,c
 26120  015D02  6EF6               	movwf	tblptrl,c
 26121  015D04  0EE5               	movlw	high __powers_
 26122  015D06  20F4               	addwfc	prodh,w,c
 26123  015D08  6EF7               	movwf	tblptrh,c
 26124  015D0A                     	if	1	;There are 3 active tblptr bytes
 26125  015D0A  6AF8               	clrf	tblptru,c
 26126  015D0C  0E00               	movlw	low (__mediumconst shr (0+16))
 26127  015D0E  22F8               	addwfc	tblptru,f,c
 26128  015D10                     	endif
 26129  015D10  0009               	tblrd		*+
 26130  015D12  CFF5 F212          	movff	tablat,___flmul@a
 26131  015D16  0009               	tblrd		*+
 26132  015D18  CFF5 F213          	movff	tablat,___flmul@a+1
 26133  015D1C  0009               	tblrd		*+
 26134  015D1E  CFF5 F214          	movff	tablat,___flmul@a+2
 26135  015D22  000A               	tblrd		*-
 26136  015D24  CFF5 F215          	movff	tablat,___flmul@a+3
 26137  015D28  0E00               	movlw	0
 26138  015D2A  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 26139  015D2C  0E64               	movlw	100
 26140  015D2E  6F08               	movwf	___awdiv@divisor& (0+255),b
 26141  015D30  512F               	movf	scale@scl& (0+255),w,b
 26142  015D32  6F06               	movwf	___awdiv@dividend& (0+255),b
 26143  015D34  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 26144  015D36  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 26145  015D38  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 26146  015D3A  EC26  F0D9         	call	___awdiv	;wreg free
 26147  015D3E  0E12               	movlw	18
 26148  015D40  0102               	movlb	2	; () banked
 26149  015D42  2706               	addwf	?___awdiv& (0+255),f,b
 26150  015D44  5106               	movf	?___awdiv& (0+255),w,b
 26151  015D46  0D04               	mullw	4
 26152  015D48  0EC3               	movlw	low __powers_
 26153  015D4A  24F3               	addwf	prodl,w,c
 26154  015D4C  6EF6               	movwf	tblptrl,c
 26155  015D4E  0EE5               	movlw	high __powers_
 26156  015D50  20F4               	addwfc	prodh,w,c
 26157  015D52  6EF7               	movwf	tblptrh,c
 26158  015D54                     	if	1	;There are 3 active tblptr bytes
 26159  015D54  6AF8               	clrf	tblptru,c
 26160  015D56  0E00               	movlw	low (__mediumconst shr (0+16))
 26161  015D58  22F8               	addwfc	tblptru,f,c
 26162  015D5A                     	endif
 26163  015D5A  0009               	tblrd		*+
 26164  015D5C  CFF5 F20E          	movff	tablat,___flmul@b
 26165  015D60  0009               	tblrd		*+
 26166  015D62  CFF5 F20F          	movff	tablat,___flmul@b+1
 26167  015D66  0009               	tblrd		*+
 26168  015D68  CFF5 F210          	movff	tablat,___flmul@b+2
 26169  015D6C  000A               	tblrd		*-
 26170  015D6E  CFF5 F211          	movff	tablat,___flmul@b+3
 26171  015D72  ECFC  F0B4         	call	___flmul	;wreg free
 26172  015D76  C20E  F22B         	movff	?___flmul,_scale$6028
 26173  015D7A  C20F  F22C         	movff	?___flmul+1,_scale$6028+1
 26174  015D7E  C210  F22D         	movff	?___flmul+2,_scale$6028+2
 26175  015D82  C211  F22E         	movff	?___flmul+3,_scale$6028+3
 26176                           
 26177                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 26178  015D86  C22B  F20E         	movff	_scale$6028,___flmul@b
 26179  015D8A  C22C  F20F         	movff	_scale$6028+1,___flmul@b+1
 26180  015D8E  C22D  F210         	movff	_scale$6028+2,___flmul@b+2
 26181  015D92  C22E  F211         	movff	_scale$6028+3,___flmul@b+3
 26182  015D96  0E00               	movlw	0
 26183  015D98  0102               	movlb	2	; () banked
 26184  015D9A  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 26185  015D9C  0E0A               	movlw	10
 26186  015D9E  6F02               	movwf	___awmod@divisor& (0+255),b
 26187  015DA0  512F               	movf	scale@scl& (0+255),w,b
 26188  015DA2  6F00               	movwf	___awmod@dividend& (0+255),b
 26189  015DA4  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 26190  015DA6  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 26191  015DA8  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 26192  015DAA  EC2E  F0DA         	call	___awmod	;wreg free
 26193  015DAE  0102               	movlb	2	; () banked
 26194  015DB0  5100               	movf	?___awmod& (0+255),w,b
 26195  015DB2  0D04               	mullw	4
 26196  015DB4  0EC3               	movlw	low __powers_
 26197  015DB6  24F3               	addwf	prodl,w,c
 26198  015DB8  6EF6               	movwf	tblptrl,c
 26199  015DBA  0EE5               	movlw	high __powers_
 26200  015DBC  20F4               	addwfc	prodh,w,c
 26201  015DBE  6EF7               	movwf	tblptrh,c
 26202  015DC0                     	if	1	;There are 3 active tblptr bytes
 26203  015DC0  6AF8               	clrf	tblptru,c
 26204  015DC2  0E00               	movlw	low (__mediumconst shr (0+16))
 26205  015DC4  22F8               	addwfc	tblptru,f,c
 26206  015DC6                     	endif
 26207  015DC6  0009               	tblrd		*+
 26208  015DC8  CFF5 F212          	movff	tablat,___flmul@a
 26209  015DCC  0009               	tblrd		*+
 26210  015DCE  CFF5 F213          	movff	tablat,___flmul@a+1
 26211  015DD2  0009               	tblrd		*+
 26212  015DD4  CFF5 F214          	movff	tablat,___flmul@a+2
 26213  015DD8  000A               	tblrd		*-
 26214  015DDA  CFF5 F215          	movff	tablat,___flmul@a+3
 26215  015DDE  ECFC  F0B4         	call	___flmul	;wreg free
 26216  015DE2  C20E  F227         	movff	?___flmul,?_scale
 26217  015DE6  C20F  F228         	movff	?___flmul+1,?_scale+1
 26218  015DEA  C210  F229         	movff	?___flmul+2,?_scale+2
 26219  015DEE  C211  F22A         	movff	?___flmul+3,?_scale+3
 26220  015DF2  0012               	return	
 26221  015DF4                     l17538:
 26222                           
 26223                           ; BSR set to: 2
 26224                           ;doprnt.c: 446: else if(scl > 10)
 26225  015DF4  512F               	movf	scale@scl& (0+255),w,b
 26226  015DF6  0A80               	xorlw	128
 26227  015DF8  0F75               	addlw	-139
 26228  015DFA  A0D8               	btfss	status,0,c
 26229  015DFC  D053               	goto	l17544
 26230                           
 26231                           ; BSR set to: 2
 26232                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
 26233  015DFE  0E00               	movlw	0
 26234  015E00  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 26235  015E02  0E0A               	movlw	10
 26236  015E04  6F08               	movwf	___awdiv@divisor& (0+255),b
 26237  015E06  512F               	movf	scale@scl& (0+255),w,b
 26238  015E08  6F06               	movwf	___awdiv@dividend& (0+255),b
 26239  015E0A  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 26240  015E0C  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 26241  015E0E  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 26242  015E10  EC26  F0D9         	call	___awdiv	;wreg free
 26243  015E14  0E09               	movlw	9
 26244  015E16  0102               	movlb	2	; () banked
 26245  015E18  2706               	addwf	?___awdiv& (0+255),f,b
 26246  015E1A  5106               	movf	?___awdiv& (0+255),w,b
 26247  015E1C  0D04               	mullw	4
 26248  015E1E  0EC3               	movlw	low __powers_
 26249  015E20  24F3               	addwf	prodl,w,c
 26250  015E22  6EF6               	movwf	tblptrl,c
 26251  015E24  0EE5               	movlw	high __powers_
 26252  015E26  20F4               	addwfc	prodh,w,c
 26253  015E28  6EF7               	movwf	tblptrh,c
 26254  015E2A                     	if	1	;There are 3 active tblptr bytes
 26255  015E2A  6AF8               	clrf	tblptru,c
 26256  015E2C  0E00               	movlw	low (__mediumconst shr (0+16))
 26257  015E2E  22F8               	addwfc	tblptru,f,c
 26258  015E30                     	endif
 26259  015E30  0009               	tblrd		*+
 26260  015E32  CFF5 F20E          	movff	tablat,___flmul@b
 26261  015E36  0009               	tblrd		*+
 26262  015E38  CFF5 F20F          	movff	tablat,___flmul@b+1
 26263  015E3C  0009               	tblrd		*+
 26264  015E3E  CFF5 F210          	movff	tablat,___flmul@b+2
 26265  015E42  000A               	tblrd		*-
 26266  015E44  CFF5 F211          	movff	tablat,___flmul@b+3
 26267  015E48  0E00               	movlw	0
 26268  015E4A  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 26269  015E4C  0E0A               	movlw	10
 26270  015E4E  6F02               	movwf	___awmod@divisor& (0+255),b
 26271  015E50  512F               	movf	scale@scl& (0+255),w,b
 26272  015E52  6F00               	movwf	___awmod@dividend& (0+255),b
 26273  015E54  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 26274  015E56  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 26275  015E58  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 26276  015E5A  EC2E  F0DA         	call	___awmod	;wreg free
 26277  015E5E  0102               	movlb	2	; () banked
 26278  015E60  5100               	movf	?___awmod& (0+255),w,b
 26279  015E62  0D04               	mullw	4
 26280  015E64  0EC3               	movlw	low __powers_
 26281  015E66  24F3               	addwf	prodl,w,c
 26282  015E68  6EF6               	movwf	tblptrl,c
 26283  015E6A  0EE5               	movlw	high __powers_
 26284  015E6C  20F4               	addwfc	prodh,w,c
 26285  015E6E  6EF7               	movwf	tblptrh,c
 26286  015E70                     	if	1	;There are 3 active tblptr bytes
 26287  015E70  6AF8               	clrf	tblptru,c
 26288  015E72  0E00               	movlw	low (__mediumconst shr (0+16))
 26289  015E74  22F8               	addwfc	tblptru,f,c
 26290  015E76                     	endif
 26291  015E76  0009               	tblrd		*+
 26292  015E78  CFF5 F212          	movff	tablat,___flmul@a
 26293  015E7C  0009               	tblrd		*+
 26294  015E7E  CFF5 F213          	movff	tablat,___flmul@a+1
 26295  015E82  0009               	tblrd		*+
 26296  015E84  CFF5 F214          	movff	tablat,___flmul@a+2
 26297  015E88  000A               	tblrd		*-
 26298  015E8A  CFF5 F215          	movff	tablat,___flmul@a+3
 26299  015E8E  ECFC  F0B4         	call	___flmul	;wreg free
 26300  015E92  C20E  F227         	movff	?___flmul,?_scale
 26301  015E96  C20F  F228         	movff	?___flmul+1,?_scale+1
 26302  015E9A  C210  F229         	movff	?___flmul+2,?_scale+2
 26303  015E9E  C211  F22A         	movff	?___flmul+3,?_scale+3
 26304  015EA2  0012               	return	
 26305  015EA4                     l17544:
 26306                           
 26307                           ; BSR set to: 2
 26308                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
 26309  015EA4  512F               	movf	scale@scl& (0+255),w,b
 26310  015EA6  0D04               	mullw	4
 26311  015EA8  0EC3               	movlw	low __powers_
 26312  015EAA  24F3               	addwf	prodl,w,c
 26313  015EAC  6EF6               	movwf	tblptrl,c
 26314  015EAE  0EE5               	movlw	high __powers_
 26315  015EB0  20F4               	addwfc	prodh,w,c
 26316  015EB2  6EF7               	movwf	tblptrh,c
 26317  015EB4                     	if	1	;There are 3 active tblptr bytes
 26318  015EB4  6AF8               	clrf	tblptru,c
 26319  015EB6  0E00               	movlw	low (__mediumconst shr (0+16))
 26320  015EB8  22F8               	addwfc	tblptru,f,c
 26321  015EBA                     	endif
 26322  015EBA  0009               	tblrd		*+
 26323  015EBC  CFF5 F227          	movff	tablat,?_scale
 26324  015EC0  0009               	tblrd		*+
 26325  015EC2  CFF5 F228          	movff	tablat,?_scale+1
 26326  015EC6  0009               	tblrd		*+
 26327  015EC8  CFF5 F229          	movff	tablat,?_scale+2
 26328  015ECC  000A               	tblrd		*-
 26329  015ECE  CFF5 F22A          	movff	tablat,?_scale+3
 26330  015ED2  0012               	return		;funcret
 26331  015ED4                     __end_of_scale:
 26332                           	opt callstack 0
 26333                           
 26334 ;; *************** function ___awmod *****************
 26335 ;; Defined at:
 26336 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
 26337 ;; Parameters:    Size  Location     Type
 26338 ;;  dividend        2    0[BANK2 ] int 
 26339 ;;  divisor         2    2[BANK2 ] int 
 26340 ;; Auto vars:     Size  Location     Type
 26341 ;;  sign            1    5[BANK2 ] unsigned char 
 26342 ;;  counter         1    4[BANK2 ] unsigned char 
 26343 ;; Return value:  Size  Location     Type
 26344 ;;                  2    0[BANK2 ] int 
 26345 ;; Registers used:
 26346 ;;		wreg, status,2, status,0
 26347 ;; Tracked objects:
 26348 ;;		On entry : 0/0
 26349 ;;		On exit  : 0/0
 26350 ;;		Unchanged: 0/0
 26351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26352 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26353 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26355 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26356 ;;Total ram usage:        6 bytes
 26357 ;; Hardware stack levels used:    1
 26358 ;; Hardware stack levels required when called:   11
 26359 ;; This function calls:
 26360 ;;		Nothing
 26361 ;; This function is called by:
 26362 ;;		_scale
 26363 ;; This function uses a non-reentrant model
 26364 ;;
 26365                           
 26366                           	psect	text81
 26367  01B45C                     __ptext81:
 26368                           	opt callstack 0
 26369  01B45C                     ___awmod:
 26370                           	opt callstack 13
 26371                           
 26372                           ;incstack = 0
 26373  01B45C  0E00               	movlw	0
 26374  01B45E  0102               	movlb	2	; () banked
 26375  01B460  6F05               	movwf	___awmod@sign& (0+255),b
 26376                           
 26377                           ; BSR set to: 2
 26378  01B462  AF01               	btfss	(___awmod@dividend+1)& (0+255),7,b
 26379  01B464  D006               	goto	l17420
 26380                           
 26381                           ; BSR set to: 2
 26382  01B466  6D00               	negf	___awmod@dividend& (0+255),b
 26383  01B468  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
 26384  01B46A  B0D8               	btfsc	status,0,c
 26385  01B46C  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
 26386                           
 26387                           ; BSR set to: 2
 26388  01B46E  0E01               	movlw	1
 26389  01B470  6F05               	movwf	___awmod@sign& (0+255),b
 26390  01B472                     l17420:
 26391                           
 26392                           ; BSR set to: 2
 26393  01B472  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
 26394  01B474  D004               	goto	l17424
 26395                           
 26396                           ; BSR set to: 2
 26397  01B476  6D02               	negf	___awmod@divisor& (0+255),b
 26398  01B478  1F03               	comf	(___awmod@divisor+1)& (0+255),f,b
 26399  01B47A  B0D8               	btfsc	status,0,c
 26400  01B47C  2B03               	incf	(___awmod@divisor+1)& (0+255),f,b
 26401  01B47E                     l17424:
 26402                           
 26403                           ; BSR set to: 2
 26404  01B47E  5102               	movf	___awmod@divisor& (0+255),w,b
 26405  01B480  1103               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 26406  01B482  B4D8               	btfsc	status,2,c
 26407  01B484  D018               	goto	l17440
 26408                           
 26409                           ; BSR set to: 2
 26410  01B486  0E01               	movlw	1
 26411  01B488  6F04               	movwf	___awmod@counter& (0+255),b
 26412  01B48A  D004               	goto	l17430
 26413  01B48C                     l17428:
 26414                           
 26415                           ; BSR set to: 2
 26416  01B48C  90D8               	bcf	status,0,c
 26417  01B48E  3702               	rlcf	___awmod@divisor& (0+255),f,b
 26418  01B490  3703               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 26419  01B492  2B04               	incf	___awmod@counter& (0+255),f,b
 26420  01B494                     l17430:
 26421                           
 26422                           ; BSR set to: 2
 26423  01B494  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
 26424  01B496  D7FA               	goto	l17428
 26425  01B498                     u21140:
 26426                           
 26427                           ; BSR set to: 2
 26428  01B498  5102               	movf	___awmod@divisor& (0+255),w,b
 26429  01B49A  5D00               	subwf	___awmod@dividend& (0+255),w,b
 26430  01B49C  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
 26431  01B49E  5901               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 26432  01B4A0  A0D8               	btfss	status,0,c
 26433  01B4A2  D004               	goto	l17436
 26434                           
 26435                           ; BSR set to: 2
 26436  01B4A4  5102               	movf	___awmod@divisor& (0+255),w,b
 26437  01B4A6  5F00               	subwf	___awmod@dividend& (0+255),f,b
 26438  01B4A8  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
 26439  01B4AA  5B01               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 26440  01B4AC                     l17436:
 26441                           
 26442                           ; BSR set to: 2
 26443  01B4AC  90D8               	bcf	status,0,c
 26444  01B4AE  3303               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 26445  01B4B0  3302               	rrcf	___awmod@divisor& (0+255),f,b
 26446                           
 26447                           ; BSR set to: 2
 26448  01B4B2  2F04               	decfsz	___awmod@counter& (0+255),f,b
 26449  01B4B4  D7F1               	goto	u21140
 26450  01B4B6                     l17440:
 26451                           
 26452                           ; BSR set to: 2
 26453  01B4B6  5105               	movf	___awmod@sign& (0+255),w,b
 26454  01B4B8  B4D8               	btfsc	status,2,c
 26455  01B4BA  D004               	goto	l17444
 26456                           
 26457                           ; BSR set to: 2
 26458  01B4BC  6D00               	negf	___awmod@dividend& (0+255),b
 26459  01B4BE  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
 26460  01B4C0  B0D8               	btfsc	status,0,c
 26461  01B4C2  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
 26462  01B4C4                     l17444:
 26463                           
 26464                           ; BSR set to: 2
 26465  01B4C4  C200  F200         	movff	___awmod@dividend,?___awmod
 26466  01B4C8  C201  F201         	movff	___awmod@dividend+1,?___awmod+1
 26467                           
 26468                           ; BSR set to: 2
 26469  01B4CC  0012               	return		;funcret
 26470  01B4CE                     __end_of___awmod:
 26471                           	opt callstack 0
 26472                           
 26473 ;; *************** function ___awdiv *****************
 26474 ;; Defined at:
 26475 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
 26476 ;; Parameters:    Size  Location     Type
 26477 ;;  dividend        2    6[BANK2 ] int 
 26478 ;;  divisor         2    8[BANK2 ] int 
 26479 ;; Auto vars:     Size  Location     Type
 26480 ;;  quotient        2   12[BANK2 ] int 
 26481 ;;  sign            1   11[BANK2 ] unsigned char 
 26482 ;;  counter         1   10[BANK2 ] unsigned char 
 26483 ;; Return value:  Size  Location     Type
 26484 ;;                  2    6[BANK2 ] int 
 26485 ;; Registers used:
 26486 ;;		wreg, status,2, status,0
 26487 ;; Tracked objects:
 26488 ;;		On entry : 0/0
 26489 ;;		On exit  : 0/0
 26490 ;;		Unchanged: 0/0
 26491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26492 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26493 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26495 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26496 ;;Total ram usage:        8 bytes
 26497 ;; Hardware stack levels used:    1
 26498 ;; Hardware stack levels required when called:   11
 26499 ;; This function calls:
 26500 ;;		Nothing
 26501 ;; This function is called by:
 26502 ;;		_scale
 26503 ;;		__doprnt
 26504 ;; This function uses a non-reentrant model
 26505 ;;
 26506                           
 26507                           	psect	text82
 26508  01B24C                     __ptext82:
 26509                           	opt callstack 0
 26510  01B24C                     ___awdiv:
 26511                           	opt callstack 13
 26512                           
 26513                           ; BSR set to: 2
 26514                           ;incstack = 0
 26515  01B24C  0E00               	movlw	0
 26516  01B24E  0102               	movlb	2	; () banked
 26517  01B250  6F0B               	movwf	___awdiv@sign& (0+255),b
 26518                           
 26519                           ; BSR set to: 2
 26520  01B252  AF09               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 26521  01B254  D006               	goto	l17376
 26522                           
 26523                           ; BSR set to: 2
 26524  01B256  6D08               	negf	___awdiv@divisor& (0+255),b
 26525  01B258  1F09               	comf	(___awdiv@divisor+1)& (0+255),f,b
 26526  01B25A  B0D8               	btfsc	status,0,c
 26527  01B25C  2B09               	incf	(___awdiv@divisor+1)& (0+255),f,b
 26528                           
 26529                           ; BSR set to: 2
 26530  01B25E  0E01               	movlw	1
 26531  01B260  6F0B               	movwf	___awdiv@sign& (0+255),b
 26532  01B262                     l17376:
 26533                           
 26534                           ; BSR set to: 2
 26535  01B262  AF07               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 26536  01B264  D006               	goto	l17382
 26537                           
 26538                           ; BSR set to: 2
 26539  01B266  6D06               	negf	___awdiv@dividend& (0+255),b
 26540  01B268  1F07               	comf	(___awdiv@dividend+1)& (0+255),f,b
 26541  01B26A  B0D8               	btfsc	status,0,c
 26542  01B26C  2B07               	incf	(___awdiv@dividend+1)& (0+255),f,b
 26543                           
 26544                           ; BSR set to: 2
 26545  01B26E  0E01               	movlw	1
 26546  01B270  1B0B               	xorwf	___awdiv@sign& (0+255),f,b
 26547  01B272                     l17382:
 26548                           
 26549                           ; BSR set to: 2
 26550  01B272  0E00               	movlw	0
 26551  01B274  6F0D               	movwf	(___awdiv@quotient+1)& (0+255),b
 26552  01B276  0E00               	movlw	0
 26553  01B278  6F0C               	movwf	___awdiv@quotient& (0+255),b
 26554                           
 26555                           ; BSR set to: 2
 26556  01B27A  5108               	movf	___awdiv@divisor& (0+255),w,b
 26557  01B27C  1109               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 26558  01B27E  B4D8               	btfsc	status,2,c
 26559  01B280  D01C               	goto	l17404
 26560                           
 26561                           ; BSR set to: 2
 26562  01B282  0E01               	movlw	1
 26563  01B284  6F0A               	movwf	___awdiv@counter& (0+255),b
 26564  01B286  D004               	goto	l17390
 26565  01B288                     l17388:
 26566                           
 26567                           ; BSR set to: 2
 26568  01B288  90D8               	bcf	status,0,c
 26569  01B28A  3708               	rlcf	___awdiv@divisor& (0+255),f,b
 26570  01B28C  3709               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 26571  01B28E  2B0A               	incf	___awdiv@counter& (0+255),f,b
 26572  01B290                     l17390:
 26573                           
 26574                           ; BSR set to: 2
 26575  01B290  AF09               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 26576  01B292  D7FA               	goto	l17388
 26577  01B294                     u21080:
 26578                           
 26579                           ; BSR set to: 2
 26580  01B294  90D8               	bcf	status,0,c
 26581  01B296  370C               	rlcf	___awdiv@quotient& (0+255),f,b
 26582  01B298  370D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 26583                           
 26584                           ; BSR set to: 2
 26585  01B29A  5108               	movf	___awdiv@divisor& (0+255),w,b
 26586  01B29C  5D06               	subwf	___awdiv@dividend& (0+255),w,b
 26587  01B29E  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 26588  01B2A0  5907               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 26589  01B2A2  A0D8               	btfss	status,0,c
 26590  01B2A4  D005               	goto	l17400
 26591                           
 26592                           ; BSR set to: 2
 26593  01B2A6  5108               	movf	___awdiv@divisor& (0+255),w,b
 26594  01B2A8  5F06               	subwf	___awdiv@dividend& (0+255),f,b
 26595  01B2AA  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 26596  01B2AC  5B07               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 26597                           
 26598                           ; BSR set to: 2
 26599  01B2AE  810C               	bsf	___awdiv@quotient& (0+255),0,b
 26600  01B2B0                     l17400:
 26601                           
 26602                           ; BSR set to: 2
 26603  01B2B0  90D8               	bcf	status,0,c
 26604  01B2B2  3309               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 26605  01B2B4  3308               	rrcf	___awdiv@divisor& (0+255),f,b
 26606                           
 26607                           ; BSR set to: 2
 26608  01B2B6  2F0A               	decfsz	___awdiv@counter& (0+255),f,b
 26609  01B2B8  D7ED               	goto	u21080
 26610  01B2BA                     l17404:
 26611                           
 26612                           ; BSR set to: 2
 26613  01B2BA  510B               	movf	___awdiv@sign& (0+255),w,b
 26614  01B2BC  B4D8               	btfsc	status,2,c
 26615  01B2BE  D004               	goto	l17408
 26616                           
 26617                           ; BSR set to: 2
 26618  01B2C0  6D0C               	negf	___awdiv@quotient& (0+255),b
 26619  01B2C2  1F0D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 26620  01B2C4  B0D8               	btfsc	status,0,c
 26621  01B2C6  2B0D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 26622  01B2C8                     l17408:
 26623                           
 26624                           ; BSR set to: 2
 26625  01B2C8  C20C  F206         	movff	___awdiv@quotient,?___awdiv
 26626  01B2CC  C20D  F207         	movff	___awdiv@quotient+1,?___awdiv+1
 26627                           
 26628                           ; BSR set to: 2
 26629  01B2D0  0012               	return		;funcret
 26630  01B2D2                     __end_of___awdiv:
 26631                           	opt callstack 0
 26632                           
 26633 ;; *************** function _putch *****************
 26634 ;; Defined at:
 26635 ;;		line 182 in file "mcc_generated_files/eusart2.c"
 26636 ;; Parameters:    Size  Location     Type
 26637 ;;  txData          1    wreg     unsigned char 
 26638 ;; Auto vars:     Size  Location     Type
 26639 ;;  txData          1    1[BANK2 ] unsigned char 
 26640 ;; Return value:  Size  Location     Type
 26641 ;;                  1    wreg      void 
 26642 ;; Registers used:
 26643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26644 ;; Tracked objects:
 26645 ;;		On entry : 0/0
 26646 ;;		On exit  : 0/0
 26647 ;;		Unchanged: 0/0
 26648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26650 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26652 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26653 ;;Total ram usage:        1 bytes
 26654 ;; Hardware stack levels used:    1
 26655 ;; Hardware stack levels required when called:   12
 26656 ;; This function calls:
 26657 ;;		_EUSART2_Write
 26658 ;; This function is called by:
 26659 ;;		_printf
 26660 ;;		__doprnt
 26661 ;;		i2__doprnt
 26662 ;; This function uses a non-reentrant model
 26663 ;;
 26664                           
 26665                           	psect	text83
 26666  01C8CC                     __ptext83:
 26667                           	opt callstack 0
 26668  01C8CC                     _putch:
 26669                           	opt callstack 0
 26670                           
 26671                           ; BSR set to: 2
 26672                           ;Skip over the trampoline to the duplicate function for level 2
 26673  01C8CC  B25F               	btfsc	btemp,1,c
 26674  01C8CE  EF6D  F0E5         	goto	i2_putch
 26675  01C8D2                     _putch$intlevel0:
 26676                           	opt callstack 13
 26677                           
 26678                           ;incstack = 0
 26679                           ;putch@txData stored from wreg
 26680  01C8D2  0102               	movlb	2	; () banked
 26681  01C8D4  6F01               	movwf	putch@txData& (0+255),b
 26682                           
 26683                           ;eusart2.c: 184: EUSART2_Write(txData);
 26684  01C8D6  0102               	movlb	2	; () banked
 26685  01C8D8  5101               	movf	putch@txData& (0+255),w,b
 26686  01C8DA  ECCD  F0DE         	call	_EUSART2_Write
 26687  01C8DE  0012               	return		;funcret
 26688  01C8E0                     __end_of_putch:
 26689                           	opt callstack 0
 26690                           
 26691 ;; *************** function _EUSART2_Write *****************
 26692 ;; Defined at:
 26693 ;;		line 153 in file "mcc_generated_files/eusart2.c"
 26694 ;; Parameters:    Size  Location     Type
 26695 ;;  txData          1    wreg     unsigned char 
 26696 ;; Auto vars:     Size  Location     Type
 26697 ;;  txData          1    0[BANK2 ] unsigned char 
 26698 ;; Return value:  Size  Location     Type
 26699 ;;                  1    wreg      void 
 26700 ;; Registers used:
 26701 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26702 ;; Tracked objects:
 26703 ;;		On entry : 0/0
 26704 ;;		On exit  : 0/0
 26705 ;;		Unchanged: 0/0
 26706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26708 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26710 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26711 ;;Total ram usage:        1 bytes
 26712 ;; Hardware stack levels used:    1
 26713 ;; Hardware stack levels required when called:   11
 26714 ;; This function calls:
 26715 ;;		Nothing
 26716 ;; This function is called by:
 26717 ;;		_putch
 26718 ;; This function uses a non-reentrant model
 26719 ;;
 26720                           
 26721                           	psect	text84
 26722  01BD9A                     __ptext84:
 26723                           	opt callstack 0
 26724  01BD9A                     _EUSART2_Write:
 26725                           	opt callstack 13
 26726                           
 26727                           ;incstack = 0
 26728                           ;EUSART2_Write@txData stored from wreg
 26729  01BD9A  0102               	movlb	2	; () banked
 26730  01BD9C  6F00               	movwf	EUSART2_Write@txData& (0+255),b
 26731                           
 26732                           ;eusart2.c: 155: while(0 == eusart2TxBufferRemaining)
 26733  01BD9E  D001               	goto	l17020
 26734  01BDA0                     l122:
 26735                           
 26736                           ; BSR set to: 1
 26737  01BDA0  0004               	clrwdt		;# 
 26738  01BDA2                     l17020:
 26739  01BDA2  0101               	movlb	1	; () banked
 26740  01BDA4  5190               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 26741  01BDA6  B4D8               	btfsc	status,2,c
 26742  01BDA8  D7FB               	goto	l122
 26743                           
 26744                           ; BSR set to: 1
 26745                           ;eusart2.c: 158: };eusart2.c: 160: if(0 == PIE3bits.TX2IE)
 26746  01BDAA  010E               	movlb	14	; () banked
 26747  01BDAC  BDC5               	btfsc	197,6,b	;volatile
 26748  01BDAE  D003               	goto	l124
 26749                           
 26750                           ; BSR set to: 14
 26751                           ;eusart2.c: 161: {;eusart2.c: 162: TX2REG = txData;
 26752  01BDB0  C200  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
 26753                           
 26754                           ;eusart2.c: 163: }
 26755  01BDB4  D011               	goto	l17034
 26756  01BDB6                     l124:
 26757                           
 26758                           ; BSR set to: 14
 26759                           ;eusart2.c: 164: else;eusart2.c: 165: {;eusart2.c: 166: PIE3bits.TX2IE = 0;
 26760  01BDB6  9DC5               	bcf	197,6,b	;volatile
 26761                           
 26762                           ; BSR set to: 14
 26763                           ;eusart2.c: 167: eusart2TxBuffer[eusart2TxHead++] = txData;
 26764  01BDB8  0EC0               	movlw	low _eusart2TxBuffer
 26765  01BDBA  0101               	movlb	1	; () banked
 26766  01BDBC  2592               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
 26767  01BDBE  6ED9               	movwf	fsr2l,c
 26768  01BDC0  6ADA               	clrf	fsr2h,c
 26769  01BDC2  0E04               	movlw	high _eusart2TxBuffer
 26770  01BDC4  22DA               	addwfc	fsr2h,f,c
 26771  01BDC6  C200  FFDF         	movff	EUSART2_Write@txData,indf2
 26772                           
 26773                           ; BSR set to: 1
 26774  01BDCA  2B92               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 26775                           
 26776                           ; BSR set to: 1
 26777                           ;eusart2.c: 168: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 26778  01BDCC  0E3F               	movlw	63
 26779  01BDCE  6592               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 26780  01BDD0  D002               	goto	l17032
 26781                           
 26782                           ; BSR set to: 1
 26783                           ;eusart2.c: 169: {;eusart2.c: 170: eusart2TxHead = 0;
 26784  01BDD2  0E00               	movlw	0
 26785  01BDD4  6F92               	movwf	_eusart2TxHead& (0+255),b	;volatile
 26786  01BDD6                     l17032:
 26787                           
 26788                           ; BSR set to: 1
 26789                           ;eusart2.c: 171: };eusart2.c: 172: eusart2TxBufferRemaining--;
 26790  01BDD6  0790               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 26791  01BDD8                     l17034:
 26792                           
 26793                           ;eusart2.c: 173: };eusart2.c: 174: PIE3bits.TX2IE = 1;
 26794  01BDD8  010E               	movlb	14	; () banked
 26795  01BDDA  8DC5               	bsf	197,6,b	;volatile
 26796                           
 26797                           ; BSR set to: 14
 26798  01BDDC  0012               	return		;funcret
 26799  01BDDE                     __end_of_EUSART2_Write:
 26800                           	opt callstack 0
 26801                           
 26802 ;; *************** function _isdigit *****************
 26803 ;; Defined at:
 26804 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
 26805 ;; Parameters:    Size  Location     Type
 26806 ;;  c               1    wreg     unsigned char 
 26807 ;; Auto vars:     Size  Location     Type
 26808 ;;  c               1    2[BANK2 ] unsigned char 
 26809 ;; Return value:  Size  Location     Type
 26810 ;;		None               void
 26811 ;; Registers used:
 26812 ;;		wreg, status,2, status,0
 26813 ;; Tracked objects:
 26814 ;;		On entry : 0/0
 26815 ;;		On exit  : 0/0
 26816 ;;		Unchanged: 0/0
 26817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26819 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26820 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26821 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26822 ;;Total ram usage:        3 bytes
 26823 ;; Hardware stack levels used:    1
 26824 ;; Hardware stack levels required when called:   11
 26825 ;; This function calls:
 26826 ;;		Nothing
 26827 ;; This function is called by:
 26828 ;;		__doprnt
 26829 ;; This function uses a non-reentrant model
 26830 ;;
 26831                           
 26832                           	psect	text85
 26833  01C648                     __ptext85:
 26834                           	opt callstack 0
 26835  01C648                     _isdigit:
 26836                           	opt callstack 14
 26837                           
 26838                           ; BSR set to: 14
 26839                           ;incstack = 0
 26840                           ;isdigit@c stored from wreg
 26841  01C648  0102               	movlb	2	; () banked
 26842  01C64A  6F02               	movwf	isdigit@c& (0+255),b
 26843  01C64C  0E00               	movlw	0
 26844  01C64E  0102               	movlb	2	; () banked
 26845  01C650  6F01               	movwf	_isdigit$5450& (0+255),b
 26846                           
 26847                           ; BSR set to: 2
 26848  01C652  0E3A               	movlw	58
 26849  01C654  6102               	cpfslt	isdigit@c& (0+255),b
 26850  01C656  D005               	goto	l17556
 26851                           
 26852                           ; BSR set to: 2
 26853  01C658  0E2F               	movlw	47
 26854  01C65A  6502               	cpfsgt	isdigit@c& (0+255),b
 26855  01C65C  D002               	goto	l17556
 26856                           
 26857                           ; BSR set to: 2
 26858  01C65E  0E01               	movlw	1
 26859  01C660  6F01               	movwf	_isdigit$5450& (0+255),b
 26860  01C662                     l17556:
 26861                           
 26862                           ; BSR set to: 2
 26863  01C662  C201  F200         	movff	_isdigit$5450,??_isdigit
 26864  01C666  3100               	rrcf	??_isdigit& (0+255),w,b
 26865                           
 26866                           ; BSR set to: 2
 26867  01C668  0012               	return		;funcret
 26868  01C66A                     __end_of_isdigit:
 26869                           	opt callstack 0
 26870                           
 26871 ;; *************** function _fround *****************
 26872 ;; Defined at:
 26873 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 26874 ;; Parameters:    Size  Location     Type
 26875 ;;  prec            1    wreg     unsigned char 
 26876 ;; Auto vars:     Size  Location     Type
 26877 ;;  prec            1   51[BANK2 ] unsigned char 
 26878 ;; Return value:  Size  Location     Type
 26879 ;;                  4   39[BANK2 ] unsigned char 
 26880 ;; Registers used:
 26881 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26882 ;; Tracked objects:
 26883 ;;		On entry : 0/0
 26884 ;;		On exit  : 0/0
 26885 ;;		Unchanged: 0/0
 26886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26887 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26888 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26890 ;;      Totals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26891 ;;Total ram usage:       13 bytes
 26892 ;; Hardware stack levels used:    1
 26893 ;; Hardware stack levels required when called:   12
 26894 ;; This function calls:
 26895 ;;		___flmul
 26896 ;;		___lwdiv
 26897 ;;		___lwmod
 26898 ;; This function is called by:
 26899 ;;		__doprnt
 26900 ;; This function uses a non-reentrant model
 26901 ;;
 26902                           
 26903                           	psect	text86
 26904  017D1C                     __ptext86:
 26905                           	opt callstack 0
 26906  017D1C                     _fround:
 26907                           	opt callstack 13
 26908                           
 26909                           ; BSR set to: 2
 26910                           ;incstack = 0
 26911                           ;fround@prec stored from wreg
 26912  017D1C  0102               	movlb	2	; () banked
 26913  017D1E  6F33               	movwf	fround@prec& (0+255),b
 26914                           
 26915                           ;doprnt.c: 421: if(prec>=110)
 26916  017D20  0E6D               	movlw	109
 26917  017D22  0102               	movlb	2	; () banked
 26918  017D24  6533               	cpfsgt	fround@prec& (0+255),b
 26919  017D26  D0BA               	goto	l17500
 26920                           
 26921                           ; BSR set to: 2
 26922                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 26923  017D28  0E00               	movlw	0
 26924  017D2A  6F12               	movwf	___flmul@a& (0+255),b
 26925  017D2C  0E00               	movlw	0
 26926  017D2E  6F13               	movwf	(___flmul@a+1)& (0+255),b
 26927  017D30  0E00               	movlw	0
 26928  017D32  6F14               	movwf	(___flmul@a+2)& (0+255),b
 26929  017D34  0E3F               	movlw	63
 26930  017D36  6F15               	movwf	(___flmul@a+3)& (0+255),b
 26931  017D38  0E00               	movlw	0
 26932  017D3A  6F08               	movwf	(___lwdiv@divisor+1)& (0+255),b
 26933  017D3C  0E64               	movlw	100
 26934  017D3E  6F07               	movwf	___lwdiv@divisor& (0+255),b
 26935  017D40  C233  F205         	movff	fround@prec,___lwdiv@dividend
 26936  017D44  6B06               	clrf	(___lwdiv@dividend+1)& (0+255),b
 26937  017D46  ECB3  F0DC         	call	___lwdiv	;wreg free
 26938  017D4A  0102               	movlb	2	; () banked
 26939  017D4C  90D8               	bcf	status,0,c
 26940  017D4E  3705               	rlcf	?___lwdiv& (0+255),f,b
 26941  017D50  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 26942  017D52  90D8               	bcf	status,0,c
 26943  017D54  3705               	rlcf	?___lwdiv& (0+255),f,b
 26944  017D56  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 26945  017D58  0E48               	movlw	72
 26946  017D5A  2705               	addwf	?___lwdiv& (0+255),f,b
 26947  017D5C  0E00               	movlw	0
 26948  017D5E  2306               	addwfc	(?___lwdiv+1)& (0+255),f,b
 26949  017D60  0EF7               	movlw	low __npowers_
 26950  017D62  2505               	addwf	?___lwdiv& (0+255),w,b
 26951  017D64  6EF6               	movwf	tblptrl,c
 26952  017D66  0EE5               	movlw	high __npowers_
 26953  017D68  2106               	addwfc	(?___lwdiv+1)& (0+255),w,b
 26954  017D6A  6EF7               	movwf	tblptrh,c
 26955  017D6C                     	if	1	;There are 3 active tblptr bytes
 26956  017D6C  6AF8               	clrf	tblptru,c
 26957  017D6E  0E00               	movlw	low (__mediumconst shr (0+16))
 26958  017D70  22F8               	addwfc	tblptru,f,c
 26959  017D72                     	endif
 26960  017D72  0009               	tblrd		*+
 26961  017D74  CFF5 F20E          	movff	tablat,___flmul@b
 26962  017D78  0009               	tblrd		*+
 26963  017D7A  CFF5 F20F          	movff	tablat,___flmul@b+1
 26964  017D7E  0009               	tblrd		*+
 26965  017D80  CFF5 F210          	movff	tablat,___flmul@b+2
 26966  017D84  000A               	tblrd		*-
 26967  017D86  CFF5 F211          	movff	tablat,___flmul@b+3
 26968  017D8A  ECFC  F0B4         	call	___flmul	;wreg free
 26969  017D8E  C20E  F22F         	movff	?___flmul,_fround$6026
 26970  017D92  C20F  F230         	movff	?___flmul+1,_fround$6026+1
 26971  017D96  C210  F231         	movff	?___flmul+2,_fround$6026+2
 26972  017D9A  C211  F232         	movff	?___flmul+3,_fround$6026+3
 26973                           
 26974                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 26975  017D9E  0E00               	movlw	0
 26976  017DA0  0102               	movlb	2	; () banked
 26977  017DA2  6F08               	movwf	(___lwdiv@divisor+1)& (0+255),b
 26978  017DA4  0E0A               	movlw	10
 26979  017DA6  6F07               	movwf	___lwdiv@divisor& (0+255),b
 26980  017DA8  0E00               	movlw	0
 26981  017DAA  6F03               	movwf	(___lwmod@divisor+1)& (0+255),b
 26982  017DAC  0E64               	movlw	100
 26983  017DAE  6F02               	movwf	___lwmod@divisor& (0+255),b
 26984  017DB0  C233  F200         	movff	fround@prec,___lwmod@dividend
 26985  017DB4  6B01               	clrf	(___lwmod@dividend+1)& (0+255),b
 26986  017DB6  ECEF  F0DE         	call	___lwmod	;wreg free
 26987  017DBA  C200  F205         	movff	?___lwmod,___lwdiv@dividend
 26988  017DBE  C201  F206         	movff	?___lwmod+1,___lwdiv@dividend+1
 26989  017DC2  ECB3  F0DC         	call	___lwdiv	;wreg free
 26990  017DC6  0102               	movlb	2	; () banked
 26991  017DC8  90D8               	bcf	status,0,c
 26992  017DCA  3705               	rlcf	?___lwdiv& (0+255),f,b
 26993  017DCC  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 26994  017DCE  90D8               	bcf	status,0,c
 26995  017DD0  3705               	rlcf	?___lwdiv& (0+255),f,b
 26996  017DD2  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 26997  017DD4  0E24               	movlw	36
 26998  017DD6  2705               	addwf	?___lwdiv& (0+255),f,b
 26999  017DD8  0E00               	movlw	0
 27000  017DDA  2306               	addwfc	(?___lwdiv+1)& (0+255),f,b
 27001  017DDC  0EF7               	movlw	low __npowers_
 27002  017DDE  2505               	addwf	?___lwdiv& (0+255),w,b
 27003  017DE0  6EF6               	movwf	tblptrl,c
 27004  017DE2  0EE5               	movlw	high __npowers_
 27005  017DE4  2106               	addwfc	(?___lwdiv+1)& (0+255),w,b
 27006  017DE6  6EF7               	movwf	tblptrh,c
 27007  017DE8                     	if	1	;There are 3 active tblptr bytes
 27008  017DE8  6AF8               	clrf	tblptru,c
 27009  017DEA  0E00               	movlw	low (__mediumconst shr (0+16))
 27010  017DEC  22F8               	addwfc	tblptru,f,c
 27011  017DEE                     	endif
 27012  017DEE  0009               	tblrd		*+
 27013  017DF0  CFF5 F212          	movff	tablat,___flmul@a
 27014  017DF4  0009               	tblrd		*+
 27015  017DF6  CFF5 F213          	movff	tablat,___flmul@a+1
 27016  017DFA  0009               	tblrd		*+
 27017  017DFC  CFF5 F214          	movff	tablat,___flmul@a+2
 27018  017E00  000A               	tblrd		*-
 27019  017E02  CFF5 F215          	movff	tablat,___flmul@a+3
 27020  017E06  C22F  F20E         	movff	_fround$6026,___flmul@b
 27021  017E0A  C230  F20F         	movff	_fround$6026+1,___flmul@b+1
 27022  017E0E  C231  F210         	movff	_fround$6026+2,___flmul@b+2
 27023  017E12  C232  F211         	movff	_fround$6026+3,___flmul@b+3
 27024  017E16  ECFC  F0B4         	call	___flmul	;wreg free
 27025  017E1A  C20E  F22B         	movff	?___flmul,_fround$6027
 27026  017E1E  C20F  F22C         	movff	?___flmul+1,_fround$6027+1
 27027  017E22  C210  F22D         	movff	?___flmul+2,_fround$6027+2
 27028  017E26  C211  F22E         	movff	?___flmul+3,_fround$6027+3
 27029                           
 27030                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 27031  017E2A  C22B  F20E         	movff	_fround$6027,___flmul@b
 27032  017E2E  C22C  F20F         	movff	_fround$6027+1,___flmul@b+1
 27033  017E32  C22D  F210         	movff	_fround$6027+2,___flmul@b+2
 27034  017E36  C22E  F211         	movff	_fround$6027+3,___flmul@b+3
 27035  017E3A  0E00               	movlw	0
 27036  017E3C  0102               	movlb	2	; () banked
 27037  017E3E  6F03               	movwf	(___lwmod@divisor+1)& (0+255),b
 27038  017E40  0E0A               	movlw	10
 27039  017E42  6F02               	movwf	___lwmod@divisor& (0+255),b
 27040  017E44  C233  F200         	movff	fround@prec,___lwmod@dividend
 27041  017E48  6B01               	clrf	(___lwmod@dividend+1)& (0+255),b
 27042  017E4A  ECEF  F0DE         	call	___lwmod	;wreg free
 27043  017E4E  0102               	movlb	2	; () banked
 27044  017E50  90D8               	bcf	status,0,c
 27045  017E52  3700               	rlcf	?___lwmod& (0+255),f,b
 27046  017E54  3701               	rlcf	(?___lwmod+1)& (0+255),f,b
 27047  017E56  90D8               	bcf	status,0,c
 27048  017E58  3700               	rlcf	?___lwmod& (0+255),f,b
 27049  017E5A  3701               	rlcf	(?___lwmod+1)& (0+255),f,b
 27050  017E5C  0EF7               	movlw	low __npowers_
 27051  017E5E  2500               	addwf	?___lwmod& (0+255),w,b
 27052  017E60  6EF6               	movwf	tblptrl,c
 27053  017E62  0EE5               	movlw	high __npowers_
 27054  017E64  2101               	addwfc	(?___lwmod+1)& (0+255),w,b
 27055  017E66  6EF7               	movwf	tblptrh,c
 27056  017E68                     	if	1	;There are 3 active tblptr bytes
 27057  017E68  6AF8               	clrf	tblptru,c
 27058  017E6A  0E00               	movlw	low (__mediumconst shr (0+16))
 27059  017E6C  22F8               	addwfc	tblptru,f,c
 27060  017E6E                     	endif
 27061  017E6E  0009               	tblrd		*+
 27062  017E70  CFF5 F212          	movff	tablat,___flmul@a
 27063  017E74  0009               	tblrd		*+
 27064  017E76  CFF5 F213          	movff	tablat,___flmul@a+1
 27065  017E7A  0009               	tblrd		*+
 27066  017E7C  CFF5 F214          	movff	tablat,___flmul@a+2
 27067  017E80  000A               	tblrd		*-
 27068  017E82  CFF5 F215          	movff	tablat,___flmul@a+3
 27069  017E86  ECFC  F0B4         	call	___flmul	;wreg free
 27070  017E8A  C20E  F227         	movff	?___flmul,?_fround
 27071  017E8E  C20F  F228         	movff	?___flmul+1,?_fround+1
 27072  017E92  C210  F229         	movff	?___flmul+2,?_fround+2
 27073  017E96  C211  F22A         	movff	?___flmul+3,?_fround+3
 27074  017E9A  0012               	return	
 27075  017E9C                     l17500:
 27076                           
 27077                           ; BSR set to: 2
 27078                           ;doprnt.c: 423: else if(prec > 10)
 27079  017E9C  0E0A               	movlw	10
 27080  017E9E  6533               	cpfsgt	fround@prec& (0+255),b
 27081  017EA0  D074               	goto	l17506
 27082                           
 27083                           ; BSR set to: 2
 27084                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 27085  017EA2  0E00               	movlw	0
 27086  017EA4  6F12               	movwf	___flmul@a& (0+255),b
 27087  017EA6  0E00               	movlw	0
 27088  017EA8  6F13               	movwf	(___flmul@a+1)& (0+255),b
 27089  017EAA  0E00               	movlw	0
 27090  017EAC  6F14               	movwf	(___flmul@a+2)& (0+255),b
 27091  017EAE  0E3F               	movlw	63
 27092  017EB0  6F15               	movwf	(___flmul@a+3)& (0+255),b
 27093  017EB2  0E00               	movlw	0
 27094  017EB4  6F08               	movwf	(___lwdiv@divisor+1)& (0+255),b
 27095  017EB6  0E0A               	movlw	10
 27096  017EB8  6F07               	movwf	___lwdiv@divisor& (0+255),b
 27097  017EBA  C233  F205         	movff	fround@prec,___lwdiv@dividend
 27098  017EBE  6B06               	clrf	(___lwdiv@dividend+1)& (0+255),b
 27099  017EC0  ECB3  F0DC         	call	___lwdiv	;wreg free
 27100  017EC4  0102               	movlb	2	; () banked
 27101  017EC6  90D8               	bcf	status,0,c
 27102  017EC8  3705               	rlcf	?___lwdiv& (0+255),f,b
 27103  017ECA  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 27104  017ECC  90D8               	bcf	status,0,c
 27105  017ECE  3705               	rlcf	?___lwdiv& (0+255),f,b
 27106  017ED0  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 27107  017ED2  0E24               	movlw	36
 27108  017ED4  2705               	addwf	?___lwdiv& (0+255),f,b
 27109  017ED6  0E00               	movlw	0
 27110  017ED8  2306               	addwfc	(?___lwdiv+1)& (0+255),f,b
 27111  017EDA  0EF7               	movlw	low __npowers_
 27112  017EDC  2505               	addwf	?___lwdiv& (0+255),w,b
 27113  017EDE  6EF6               	movwf	tblptrl,c
 27114  017EE0  0EE5               	movlw	high __npowers_
 27115  017EE2  2106               	addwfc	(?___lwdiv+1)& (0+255),w,b
 27116  017EE4  6EF7               	movwf	tblptrh,c
 27117  017EE6                     	if	1	;There are 3 active tblptr bytes
 27118  017EE6  6AF8               	clrf	tblptru,c
 27119  017EE8  0E00               	movlw	low (__mediumconst shr (0+16))
 27120  017EEA  22F8               	addwfc	tblptru,f,c
 27121  017EEC                     	endif
 27122  017EEC  0009               	tblrd		*+
 27123  017EEE  CFF5 F20E          	movff	tablat,___flmul@b
 27124  017EF2  0009               	tblrd		*+
 27125  017EF4  CFF5 F20F          	movff	tablat,___flmul@b+1
 27126  017EF8  0009               	tblrd		*+
 27127  017EFA  CFF5 F210          	movff	tablat,___flmul@b+2
 27128  017EFE  000A               	tblrd		*-
 27129  017F00  CFF5 F211          	movff	tablat,___flmul@b+3
 27130  017F04  ECFC  F0B4         	call	___flmul	;wreg free
 27131  017F08  C20E  F22F         	movff	?___flmul,_fround$6026
 27132  017F0C  C20F  F230         	movff	?___flmul+1,_fround$6026+1
 27133  017F10  C210  F231         	movff	?___flmul+2,_fround$6026+2
 27134  017F14  C211  F232         	movff	?___flmul+3,_fround$6026+3
 27135                           
 27136                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 27137  017F18  C22F  F20E         	movff	_fround$6026,___flmul@b
 27138  017F1C  C230  F20F         	movff	_fround$6026+1,___flmul@b+1
 27139  017F20  C231  F210         	movff	_fround$6026+2,___flmul@b+2
 27140  017F24  C232  F211         	movff	_fround$6026+3,___flmul@b+3
 27141  017F28  0E00               	movlw	0
 27142  017F2A  0102               	movlb	2	; () banked
 27143  017F2C  6F03               	movwf	(___lwmod@divisor+1)& (0+255),b
 27144  017F2E  0E0A               	movlw	10
 27145  017F30  6F02               	movwf	___lwmod@divisor& (0+255),b
 27146  017F32  C233  F200         	movff	fround@prec,___lwmod@dividend
 27147  017F36  6B01               	clrf	(___lwmod@dividend+1)& (0+255),b
 27148  017F38  ECEF  F0DE         	call	___lwmod	;wreg free
 27149  017F3C  0102               	movlb	2	; () banked
 27150  017F3E  90D8               	bcf	status,0,c
 27151  017F40  3700               	rlcf	?___lwmod& (0+255),f,b
 27152  017F42  3701               	rlcf	(?___lwmod+1)& (0+255),f,b
 27153  017F44  90D8               	bcf	status,0,c
 27154  017F46  3700               	rlcf	?___lwmod& (0+255),f,b
 27155  017F48  3701               	rlcf	(?___lwmod+1)& (0+255),f,b
 27156  017F4A  0EF7               	movlw	low __npowers_
 27157  017F4C  2500               	addwf	?___lwmod& (0+255),w,b
 27158  017F4E  6EF6               	movwf	tblptrl,c
 27159  017F50  0EE5               	movlw	high __npowers_
 27160  017F52  2101               	addwfc	(?___lwmod+1)& (0+255),w,b
 27161  017F54  6EF7               	movwf	tblptrh,c
 27162  017F56                     	if	1	;There are 3 active tblptr bytes
 27163  017F56  6AF8               	clrf	tblptru,c
 27164  017F58  0E00               	movlw	low (__mediumconst shr (0+16))
 27165  017F5A  22F8               	addwfc	tblptru,f,c
 27166  017F5C                     	endif
 27167  017F5C  0009               	tblrd		*+
 27168  017F5E  CFF5 F212          	movff	tablat,___flmul@a
 27169  017F62  0009               	tblrd		*+
 27170  017F64  CFF5 F213          	movff	tablat,___flmul@a+1
 27171  017F68  0009               	tblrd		*+
 27172  017F6A  CFF5 F214          	movff	tablat,___flmul@a+2
 27173  017F6E  000A               	tblrd		*-
 27174  017F70  CFF5 F215          	movff	tablat,___flmul@a+3
 27175  017F74  ECFC  F0B4         	call	___flmul	;wreg free
 27176  017F78  C20E  F227         	movff	?___flmul,?_fround
 27177  017F7C  C20F  F228         	movff	?___flmul+1,?_fround+1
 27178  017F80  C210  F229         	movff	?___flmul+2,?_fround+2
 27179  017F84  C211  F22A         	movff	?___flmul+3,?_fround+3
 27180  017F88  0012               	return	
 27181  017F8A                     l17506:
 27182                           
 27183                           ; BSR set to: 2
 27184                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
 27185  017F8A  5133               	movf	fround@prec& (0+255),w,b
 27186  017F8C  0D04               	mullw	4
 27187  017F8E  0EF7               	movlw	low __npowers_
 27188  017F90  24F3               	addwf	prodl,w,c
 27189  017F92  6EF6               	movwf	tblptrl,c
 27190  017F94  0EE5               	movlw	high __npowers_
 27191  017F96  20F4               	addwfc	prodh,w,c
 27192  017F98  6EF7               	movwf	tblptrh,c
 27193  017F9A                     	if	1	;There are 3 active tblptr bytes
 27194  017F9A  6AF8               	clrf	tblptru,c
 27195  017F9C  0E00               	movlw	low (__mediumconst shr (0+16))
 27196  017F9E  22F8               	addwfc	tblptru,f,c
 27197  017FA0                     	endif
 27198  017FA0  0009               	tblrd		*+
 27199  017FA2  CFF5 F20E          	movff	tablat,___flmul@b
 27200  017FA6  0009               	tblrd		*+
 27201  017FA8  CFF5 F20F          	movff	tablat,___flmul@b+1
 27202  017FAC  0009               	tblrd		*+
 27203  017FAE  CFF5 F210          	movff	tablat,___flmul@b+2
 27204  017FB2  000A               	tblrd		*-
 27205  017FB4  CFF5 F211          	movff	tablat,___flmul@b+3
 27206  017FB8  0E00               	movlw	0
 27207  017FBA  6F12               	movwf	___flmul@a& (0+255),b
 27208  017FBC  0E00               	movlw	0
 27209  017FBE  6F13               	movwf	(___flmul@a+1)& (0+255),b
 27210  017FC0  0E00               	movlw	0
 27211  017FC2  6F14               	movwf	(___flmul@a+2)& (0+255),b
 27212  017FC4  0E3F               	movlw	63
 27213  017FC6  6F15               	movwf	(___flmul@a+3)& (0+255),b
 27214  017FC8  ECFC  F0B4         	call	___flmul	;wreg free
 27215  017FCC  C20E  F227         	movff	?___flmul,?_fround
 27216  017FD0  C20F  F228         	movff	?___flmul+1,?_fround+1
 27217  017FD4  C210  F229         	movff	?___flmul+2,?_fround+2
 27218  017FD8  C211  F22A         	movff	?___flmul+3,?_fround+3
 27219  017FDC  0012               	return		;funcret
 27220  017FDE                     __end_of_fround:
 27221                           	opt callstack 0
 27222                           
 27223 ;; *************** function ___lwmod *****************
 27224 ;; Defined at:
 27225 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
 27226 ;; Parameters:    Size  Location     Type
 27227 ;;  dividend        2    0[BANK2 ] unsigned int 
 27228 ;;  divisor         2    2[BANK2 ] unsigned int 
 27229 ;; Auto vars:     Size  Location     Type
 27230 ;;  counter         1    4[BANK2 ] unsigned char 
 27231 ;; Return value:  Size  Location     Type
 27232 ;;                  2    0[BANK2 ] unsigned int 
 27233 ;; Registers used:
 27234 ;;		wreg, status,2, status,0
 27235 ;; Tracked objects:
 27236 ;;		On entry : 0/0
 27237 ;;		On exit  : 0/0
 27238 ;;		Unchanged: 0/0
 27239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27240 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27241 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27243 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27244 ;;Total ram usage:        5 bytes
 27245 ;; Hardware stack levels used:    1
 27246 ;; Hardware stack levels required when called:   11
 27247 ;; This function calls:
 27248 ;;		Nothing
 27249 ;; This function is called by:
 27250 ;;		_fround
 27251 ;; This function uses a non-reentrant model
 27252 ;;
 27253                           
 27254                           	psect	text87
 27255  01BDDE                     __ptext87:
 27256                           	opt callstack 0
 27257  01BDDE                     ___lwmod:
 27258                           	opt callstack 13
 27259                           
 27260                           ;incstack = 0
 27261  01BDDE  0102               	movlb	2	; () banked
 27262  01BDE0  5102               	movf	___lwmod@divisor& (0+255),w,b
 27263  01BDE2  1103               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 27264  01BDE4  B4D8               	btfsc	status,2,c
 27265  01BDE6  D018               	goto	l3178
 27266                           
 27267                           ; BSR set to: 2
 27268  01BDE8  0E01               	movlw	1
 27269  01BDEA  6F04               	movwf	___lwmod@counter& (0+255),b
 27270  01BDEC  D004               	goto	l17476
 27271  01BDEE                     l17474:
 27272                           
 27273                           ; BSR set to: 2
 27274  01BDEE  90D8               	bcf	status,0,c
 27275  01BDF0  3702               	rlcf	___lwmod@divisor& (0+255),f,b
 27276  01BDF2  3703               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 27277  01BDF4  2B04               	incf	___lwmod@counter& (0+255),f,b
 27278  01BDF6                     l17476:
 27279                           
 27280                           ; BSR set to: 2
 27281  01BDF6  AF03               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 27282  01BDF8  D7FA               	goto	l17474
 27283  01BDFA                     u21210:
 27284                           
 27285                           ; BSR set to: 2
 27286  01BDFA  5102               	movf	___lwmod@divisor& (0+255),w,b
 27287  01BDFC  5D00               	subwf	___lwmod@dividend& (0+255),w,b
 27288  01BDFE  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
 27289  01BE00  5901               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 27290  01BE02  A0D8               	btfss	status,0,c
 27291  01BE04  D004               	goto	l17482
 27292                           
 27293                           ; BSR set to: 2
 27294  01BE06  5102               	movf	___lwmod@divisor& (0+255),w,b
 27295  01BE08  5F00               	subwf	___lwmod@dividend& (0+255),f,b
 27296  01BE0A  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
 27297  01BE0C  5B01               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 27298  01BE0E                     l17482:
 27299                           
 27300                           ; BSR set to: 2
 27301  01BE0E  90D8               	bcf	status,0,c
 27302  01BE10  3303               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 27303  01BE12  3302               	rrcf	___lwmod@divisor& (0+255),f,b
 27304                           
 27305                           ; BSR set to: 2
 27306  01BE14  2F04               	decfsz	___lwmod@counter& (0+255),f,b
 27307  01BE16  D7F1               	goto	u21210
 27308  01BE18                     l3178:
 27309                           
 27310                           ; BSR set to: 2
 27311  01BE18  C200  F200         	movff	___lwmod@dividend,?___lwmod
 27312  01BE1C  C201  F201         	movff	___lwmod@dividend+1,?___lwmod+1
 27313                           
 27314                           ; BSR set to: 2
 27315  01BE20  0012               	return		;funcret
 27316  01BE22                     __end_of___lwmod:
 27317                           	opt callstack 0
 27318                           
 27319 ;; *************** function ___lwdiv *****************
 27320 ;; Defined at:
 27321 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
 27322 ;; Parameters:    Size  Location     Type
 27323 ;;  dividend        2    5[BANK2 ] unsigned int 
 27324 ;;  divisor         2    7[BANK2 ] unsigned int 
 27325 ;; Auto vars:     Size  Location     Type
 27326 ;;  quotient        2   10[BANK2 ] unsigned int 
 27327 ;;  counter         1    9[BANK2 ] unsigned char 
 27328 ;; Return value:  Size  Location     Type
 27329 ;;                  2    5[BANK2 ] unsigned int 
 27330 ;; Registers used:
 27331 ;;		wreg, status,2, status,0
 27332 ;; Tracked objects:
 27333 ;;		On entry : 0/0
 27334 ;;		On exit  : 0/0
 27335 ;;		Unchanged: 0/0
 27336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27337 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27338 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27340 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27341 ;;Total ram usage:        7 bytes
 27342 ;; Hardware stack levels used:    1
 27343 ;; Hardware stack levels required when called:   11
 27344 ;; This function calls:
 27345 ;;		Nothing
 27346 ;; This function is called by:
 27347 ;;		_fround
 27348 ;; This function uses a non-reentrant model
 27349 ;;
 27350                           
 27351                           	psect	text88
 27352  01B966                     __ptext88:
 27353                           	opt callstack 0
 27354  01B966                     ___lwdiv:
 27355                           	opt callstack 13
 27356                           
 27357                           ; BSR set to: 2
 27358                           ;incstack = 0
 27359  01B966  0E00               	movlw	0
 27360  01B968  0102               	movlb	2	; () banked
 27361  01B96A  6F0B               	movwf	(___lwdiv@quotient+1)& (0+255),b
 27362  01B96C  0E00               	movlw	0
 27363  01B96E  6F0A               	movwf	___lwdiv@quotient& (0+255),b
 27364                           
 27365                           ; BSR set to: 2
 27366  01B970  5107               	movf	___lwdiv@divisor& (0+255),w,b
 27367  01B972  1108               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 27368  01B974  B4D8               	btfsc	status,2,c
 27369  01B976  D01C               	goto	l3168
 27370                           
 27371                           ; BSR set to: 2
 27372  01B978  0E01               	movlw	1
 27373  01B97A  6F09               	movwf	___lwdiv@counter& (0+255),b
 27374  01B97C  D004               	goto	l17456
 27375  01B97E                     l17454:
 27376                           
 27377                           ; BSR set to: 2
 27378  01B97E  90D8               	bcf	status,0,c
 27379  01B980  3707               	rlcf	___lwdiv@divisor& (0+255),f,b
 27380  01B982  3708               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 27381  01B984  2B09               	incf	___lwdiv@counter& (0+255),f,b
 27382  01B986                     l17456:
 27383                           
 27384                           ; BSR set to: 2
 27385  01B986  AF08               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 27386  01B988  D7FA               	goto	l17454
 27387  01B98A                     u21180:
 27388                           
 27389                           ; BSR set to: 2
 27390  01B98A  90D8               	bcf	status,0,c
 27391  01B98C  370A               	rlcf	___lwdiv@quotient& (0+255),f,b
 27392  01B98E  370B               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 27393                           
 27394                           ; BSR set to: 2
 27395  01B990  5107               	movf	___lwdiv@divisor& (0+255),w,b
 27396  01B992  5D05               	subwf	___lwdiv@dividend& (0+255),w,b
 27397  01B994  5108               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 27398  01B996  5906               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 27399  01B998  A0D8               	btfss	status,0,c
 27400  01B99A  D005               	goto	l17466
 27401                           
 27402                           ; BSR set to: 2
 27403  01B99C  5107               	movf	___lwdiv@divisor& (0+255),w,b
 27404  01B99E  5F05               	subwf	___lwdiv@dividend& (0+255),f,b
 27405  01B9A0  5108               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 27406  01B9A2  5B06               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 27407                           
 27408                           ; BSR set to: 2
 27409  01B9A4  810A               	bsf	___lwdiv@quotient& (0+255),0,b
 27410  01B9A6                     l17466:
 27411                           
 27412                           ; BSR set to: 2
 27413  01B9A6  90D8               	bcf	status,0,c
 27414  01B9A8  3308               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 27415  01B9AA  3307               	rrcf	___lwdiv@divisor& (0+255),f,b
 27416                           
 27417                           ; BSR set to: 2
 27418  01B9AC  2F09               	decfsz	___lwdiv@counter& (0+255),f,b
 27419  01B9AE  D7ED               	goto	u21180
 27420  01B9B0                     l3168:
 27421                           
 27422                           ; BSR set to: 2
 27423  01B9B0  C20A  F205         	movff	___lwdiv@quotient,?___lwdiv
 27424  01B9B4  C20B  F206         	movff	___lwdiv@quotient+1,?___lwdiv+1
 27425                           
 27426                           ; BSR set to: 2
 27427  01B9B8  0012               	return		;funcret
 27428  01B9BA                     __end_of___lwdiv:
 27429                           	opt callstack 0
 27430                           
 27431 ;; *************** function __tdiv_to_l_ *****************
 27432 ;; Defined at:
 27433 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
 27434 ;; Parameters:    Size  Location     Type
 27435 ;;  f1              4    0[BANK2 ] float 
 27436 ;;  f2              4    4[BANK2 ] float 
 27437 ;; Auto vars:     Size  Location     Type
 27438 ;;  quot            4   11[BANK2 ] unsigned long 
 27439 ;;  exp1            1   16[BANK2 ] unsigned char 
 27440 ;;  cntr            1   15[BANK2 ] unsigned char 
 27441 ;; Return value:  Size  Location     Type
 27442 ;;                  4    0[BANK2 ] unsigned long 
 27443 ;; Registers used:
 27444 ;;		wreg, status,2, status,0
 27445 ;; Tracked objects:
 27446 ;;		On entry : 0/0
 27447 ;;		On exit  : 0/0
 27448 ;;		Unchanged: 0/0
 27449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27450 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27451 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27452 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27453 ;;      Totals:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27454 ;;Total ram usage:       17 bytes
 27455 ;; Hardware stack levels used:    1
 27456 ;; Hardware stack levels required when called:   11
 27457 ;; This function calls:
 27458 ;;		Nothing
 27459 ;; This function is called by:
 27460 ;;		__doprnt
 27461 ;; This function uses a non-reentrant model
 27462 ;;
 27463                           
 27464                           	psect	text89
 27465  01A0FA                     __ptext89:
 27466                           	opt callstack 0
 27467  01A0FA                     __tdiv_to_l_:
 27468                           	opt callstack 14
 27469                           
 27470                           ; BSR set to: 2
 27471                           ;incstack = 0
 27472  01A0FA  C202  F208         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 27473  01A0FE  0102               	movlb	2	; () banked
 27474  01A100  6B09               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 27475  01A102  6B0A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 27476  01A104  3501               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 27477  01A106  3708               	rlcf	??__tdiv_to_l_& (0+255),f,b
 27478  01A108  E301               	bnc	u21331
 27479  01A10A  8109               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 27480  01A10C                     u21331:
 27481  01A10C  5108               	movf	??__tdiv_to_l_& (0+255),w,b
 27482  01A10E  6F10               	movwf	__tdiv_to_l_@exp1& (0+255),b
 27483  01A110  5110               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 27484  01A112  A4D8               	btfss	status,2,c
 27485  01A114  D009               	goto	l17566
 27486  01A116                     u21340:
 27487                           
 27488                           ; BSR set to: 2
 27489  01A116  0E00               	movlw	0
 27490  01A118  6F00               	movwf	?__tdiv_to_l_& (0+255),b
 27491  01A11A  0E00               	movlw	0
 27492  01A11C  6F01               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 27493  01A11E  0E00               	movlw	0
 27494  01A120  6F02               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 27495  01A122  0E00               	movlw	0
 27496  01A124  6F03               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 27497  01A126  0012               	return	
 27498  01A128                     l17566:
 27499                           
 27500                           ; BSR set to: 2
 27501  01A128  C206  F208         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 27502  01A12C  6B09               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 27503  01A12E  6B0A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 27504  01A130  3505               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 27505  01A132  3708               	rlcf	??__tdiv_to_l_& (0+255),f,b
 27506  01A134  E301               	bnc	u21351
 27507  01A136  8109               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 27508  01A138                     u21351:
 27509  01A138  5108               	movf	??__tdiv_to_l_& (0+255),w,b
 27510  01A13A  6F0F               	movwf	__tdiv_to_l_@cntr& (0+255),b
 27511  01A13C  510F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 27512  01A13E  B4D8               	btfsc	status,2,c
 27513  01A140  D7EA               	goto	u21340
 27514                           
 27515                           ; BSR set to: 2
 27516  01A142  8F01               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 27517                           
 27518                           ; BSR set to: 2
 27519  01A144  0EFF               	movlw	255
 27520  01A146  1700               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 27521  01A148  0EFF               	movlw	255
 27522  01A14A  1701               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 27523  01A14C  0E00               	movlw	0
 27524  01A14E  1702               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 27525  01A150  8F05               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 27526                           
 27527                           ; BSR set to: 2
 27528  01A152  0EFF               	movlw	255
 27529  01A154  1704               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 27530  01A156  0EFF               	movlw	255
 27531  01A158  1705               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 27532  01A15A  0E00               	movlw	0
 27533  01A15C  1706               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 27534                           
 27535                           ; BSR set to: 2
 27536  01A15E  0E00               	movlw	0
 27537  01A160  6F0B               	movwf	__tdiv_to_l_@quot& (0+255),b
 27538  01A162  0E00               	movlw	0
 27539  01A164  6F0C               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 27540  01A166  0E00               	movlw	0
 27541  01A168  6F0D               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 27542  01A16A  0E00               	movlw	0
 27543  01A16C  6F0E               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 27544                           
 27545                           ; BSR set to: 2
 27546  01A16E  0E7F               	movlw	127
 27547  01A170  5F10               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 27548                           
 27549                           ; BSR set to: 2
 27550  01A172  510F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 27551  01A174  0F98               	addlw	152
 27552  01A176  5F10               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 27553                           
 27554                           ; BSR set to: 2
 27555  01A178  0E18               	movlw	24
 27556  01A17A  6F0F               	movwf	__tdiv_to_l_@cntr& (0+255),b
 27557  01A17C                     l3020:
 27558                           
 27559                           ; BSR set to: 2
 27560  01A17C  90D8               	bcf	status,0,c
 27561  01A17E  370B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 27562  01A180  370C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 27563  01A182  370D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 27564  01A184  370E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 27565                           
 27566                           ; BSR set to: 2
 27567  01A186  5104               	movf	__tdiv_to_l_@f2& (0+255),w,b
 27568  01A188  5D00               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 27569  01A18A  5105               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 27570  01A18C  5901               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 27571  01A18E  5106               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 27572  01A190  5902               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 27573  01A192  A0D8               	btfss	status,0,c
 27574  01A194  D007               	goto	l3021
 27575                           
 27576                           ; BSR set to: 2
 27577  01A196  5104               	movf	__tdiv_to_l_@f2& (0+255),w,b
 27578  01A198  5F00               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 27579  01A19A  5105               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 27580  01A19C  5B01               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 27581  01A19E  5106               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 27582  01A1A0  5B02               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 27583                           
 27584                           ; BSR set to: 2
 27585  01A1A2  810B               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 27586  01A1A4                     l3021:
 27587                           
 27588                           ; BSR set to: 2
 27589  01A1A4  90D8               	bcf	status,0,c
 27590  01A1A6  3700               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 27591  01A1A8  3701               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 27592  01A1AA  3702               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 27593                           
 27594                           ; BSR set to: 2
 27595  01A1AC  2F0F               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 27596  01A1AE  D7E6               	goto	l3020
 27597                           
 27598                           ; BSR set to: 2
 27599  01A1B0  AF10               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 27600  01A1B2  D00D               	goto	l17606
 27601                           
 27602                           ; BSR set to: 2
 27603  01A1B4  5110               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 27604  01A1B6  0A80               	xorlw	128
 27605  01A1B8  0F97               	addlw	151
 27606  01A1BA  A0D8               	btfss	status,0,c
 27607  01A1BC  D7AC               	goto	u21340
 27608  01A1BE                     l17602:
 27609                           
 27610                           ; BSR set to: 2
 27611  01A1BE  90D8               	bcf	status,0,c
 27612  01A1C0  330E               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 27613  01A1C2  330D               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 27614  01A1C4  330C               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 27615  01A1C6  330B               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 27616                           
 27617                           ; BSR set to: 2
 27618  01A1C8  3F10               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 27619  01A1CA  D7F9               	goto	l17602
 27620  01A1CC  D00D               	goto	u21410
 27621  01A1CE                     l17606:
 27622                           
 27623                           ; BSR set to: 2
 27624  01A1CE  0E17               	movlw	23
 27625  01A1D0  6510               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 27626  01A1D2  D007               	goto	l17614
 27627  01A1D4  D7A0               	goto	u21340
 27628  01A1D6                     l17612:
 27629                           
 27630                           ; BSR set to: 2
 27631  01A1D6  90D8               	bcf	status,0,c
 27632  01A1D8  370B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 27633  01A1DA  370C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 27634  01A1DC  370D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 27635  01A1DE  370E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 27636  01A1E0  0710               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 27637  01A1E2                     l17614:
 27638                           
 27639                           ; BSR set to: 2
 27640  01A1E2  5110               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 27641  01A1E4  A4D8               	btfss	status,2,c
 27642  01A1E6  D7F7               	goto	l17612
 27643  01A1E8                     u21410:
 27644                           
 27645                           ; BSR set to: 2
 27646  01A1E8  C20B  F200         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 27647  01A1EC  C20C  F201         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 27648  01A1F0  C20D  F202         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 27649  01A1F4  C20E  F203         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 27650                           
 27651                           ; BSR set to: 2
 27652  01A1F8  0012               	return		;funcret
 27653  01A1FA                     __end_of__tdiv_to_l_:
 27654                           	opt callstack 0
 27655                           
 27656 ;; *************** function __div_to_l_ *****************
 27657 ;; Defined at:
 27658 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
 27659 ;; Parameters:    Size  Location     Type
 27660 ;;  f1              4    0[BANK2 ] unsigned long 
 27661 ;;  f2              4    4[BANK2 ] unsigned long 
 27662 ;; Auto vars:     Size  Location     Type
 27663 ;;  quot            4    8[BANK2 ] unsigned long 
 27664 ;;  exp1            1   13[BANK2 ] unsigned char 
 27665 ;;  cntr            1   12[BANK2 ] unsigned char 
 27666 ;; Return value:  Size  Location     Type
 27667 ;;                  4    0[BANK2 ] unsigned long 
 27668 ;; Registers used:
 27669 ;;		wreg, status,2, status,0
 27670 ;; Tracked objects:
 27671 ;;		On entry : 0/0
 27672 ;;		On exit  : 0/0
 27673 ;;		Unchanged: 0/0
 27674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27675 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27676 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27678 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27679 ;;Total ram usage:       14 bytes
 27680 ;; Hardware stack levels used:    1
 27681 ;; Hardware stack levels required when called:   11
 27682 ;; This function calls:
 27683 ;;		Nothing
 27684 ;; This function is called by:
 27685 ;;		__doprnt
 27686 ;; This function uses a non-reentrant model
 27687 ;;
 27688                           
 27689                           	psect	text90
 27690  01A2F8                     __ptext90:
 27691                           	opt callstack 0
 27692  01A2F8                     __div_to_l_:
 27693                           	opt callstack 14
 27694                           
 27695                           ; BSR set to: 2
 27696                           ;incstack = 0
 27697  01A2F8  0102               	movlb	2	; () banked
 27698  01A2FA  3502               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 27699  01A2FC  3503               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 27700  01A2FE  6F0D               	movwf	__div_to_l_@exp1& (0+255),b
 27701  01A300  510D               	movf	__div_to_l_@exp1& (0+255),w,b
 27702  01A302  A4D8               	btfss	status,2,c
 27703  01A304  D009               	goto	l17622
 27704  01A306                     u21420:
 27705                           
 27706                           ; BSR set to: 2
 27707  01A306  0E00               	movlw	0
 27708  01A308  6F00               	movwf	?__div_to_l_& (0+255),b
 27709  01A30A  0E00               	movlw	0
 27710  01A30C  6F01               	movwf	(?__div_to_l_+1)& (0+255),b
 27711  01A30E  0E00               	movlw	0
 27712  01A310  6F02               	movwf	(?__div_to_l_+2)& (0+255),b
 27713  01A312  0E00               	movlw	0
 27714  01A314  6F03               	movwf	(?__div_to_l_+3)& (0+255),b
 27715  01A316  0012               	return	
 27716  01A318                     l17622:
 27717                           
 27718                           ; BSR set to: 2
 27719  01A318  3506               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 27720  01A31A  3507               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 27721  01A31C  6F0C               	movwf	__div_to_l_@cntr& (0+255),b
 27722  01A31E  510C               	movf	__div_to_l_@cntr& (0+255),w,b
 27723  01A320  B4D8               	btfsc	status,2,c
 27724  01A322  D7F1               	goto	u21420
 27725                           
 27726                           ; BSR set to: 2
 27727  01A324  8F02               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 27728                           
 27729                           ; BSR set to: 2
 27730  01A326  0EFF               	movlw	255
 27731  01A328  1700               	andwf	__div_to_l_@f1& (0+255),f,b
 27732  01A32A  0EFF               	movlw	255
 27733  01A32C  1701               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 27734  01A32E  0EFF               	movlw	255
 27735  01A330  1702               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 27736  01A332  0E00               	movlw	0
 27737  01A334  1703               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 27738                           
 27739                           ; BSR set to: 2
 27740  01A336  8F06               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 27741  01A338  0EFF               	movlw	255
 27742  01A33A  1704               	andwf	__div_to_l_@f2& (0+255),f,b
 27743  01A33C  0EFF               	movlw	255
 27744  01A33E  1705               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 27745  01A340  0EFF               	movlw	255
 27746  01A342  1706               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 27747  01A344  0E00               	movlw	0
 27748  01A346  1707               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 27749                           
 27750                           ; BSR set to: 2
 27751  01A348  0E00               	movlw	0
 27752  01A34A  6F08               	movwf	__div_to_l_@quot& (0+255),b
 27753  01A34C  0E00               	movlw	0
 27754  01A34E  6F09               	movwf	(__div_to_l_@quot+1)& (0+255),b
 27755  01A350  0E00               	movlw	0
 27756  01A352  6F0A               	movwf	(__div_to_l_@quot+2)& (0+255),b
 27757  01A354  0E00               	movlw	0
 27758  01A356  6F0B               	movwf	(__div_to_l_@quot+3)& (0+255),b
 27759                           
 27760                           ; BSR set to: 2
 27761  01A358  0E7F               	movlw	127
 27762  01A35A  5F0D               	subwf	__div_to_l_@exp1& (0+255),f,b
 27763                           
 27764                           ; BSR set to: 2
 27765  01A35C  510C               	movf	__div_to_l_@cntr& (0+255),w,b
 27766  01A35E  0FA0               	addlw	160
 27767  01A360  5F0D               	subwf	__div_to_l_@exp1& (0+255),f,b
 27768                           
 27769                           ; BSR set to: 2
 27770  01A362  0E20               	movlw	32
 27771  01A364  6F0C               	movwf	__div_to_l_@cntr& (0+255),b
 27772  01A366                     l17642:
 27773                           
 27774                           ; BSR set to: 2
 27775  01A366  90D8               	bcf	status,0,c
 27776  01A368  3708               	rlcf	__div_to_l_@quot& (0+255),f,b
 27777  01A36A  3709               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 27778  01A36C  370A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 27779  01A36E  370B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 27780                           
 27781                           ; BSR set to: 2
 27782  01A370  5104               	movf	__div_to_l_@f2& (0+255),w,b
 27783  01A372  5D00               	subwf	__div_to_l_@f1& (0+255),w,b
 27784  01A374  5105               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 27785  01A376  5901               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 27786  01A378  5106               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 27787  01A37A  5902               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 27788  01A37C  5107               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 27789  01A37E  5903               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 27790  01A380  A0D8               	btfss	status,0,c
 27791  01A382  D009               	goto	l17650
 27792                           
 27793                           ; BSR set to: 2
 27794  01A384  5104               	movf	__div_to_l_@f2& (0+255),w,b
 27795  01A386  5F00               	subwf	__div_to_l_@f1& (0+255),f,b
 27796  01A388  5105               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 27797  01A38A  5B01               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 27798  01A38C  5106               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 27799  01A38E  5B02               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 27800  01A390  5107               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 27801  01A392  5B03               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 27802                           
 27803                           ; BSR set to: 2
 27804  01A394  8108               	bsf	__div_to_l_@quot& (0+255),0,b
 27805  01A396                     l17650:
 27806                           
 27807                           ; BSR set to: 2
 27808  01A396  90D8               	bcf	status,0,c
 27809  01A398  3700               	rlcf	__div_to_l_@f1& (0+255),f,b
 27810  01A39A  3701               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 27811  01A39C  3702               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 27812  01A39E  3703               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 27813                           
 27814                           ; BSR set to: 2
 27815  01A3A0  2F0C               	decfsz	__div_to_l_@cntr& (0+255),f,b
 27816  01A3A2  D7E1               	goto	l17642
 27817                           
 27818                           ; BSR set to: 2
 27819  01A3A4  AF0D               	btfss	__div_to_l_@exp1& (0+255),7,b
 27820  01A3A6  D00D               	goto	l17666
 27821                           
 27822                           ; BSR set to: 2
 27823  01A3A8  510D               	movf	__div_to_l_@exp1& (0+255),w,b
 27824  01A3AA  0A80               	xorlw	128
 27825  01A3AC  0F9F               	addlw	159
 27826  01A3AE  A0D8               	btfss	status,0,c
 27827  01A3B0  D7AA               	goto	u21420
 27828  01A3B2                     l17662:
 27829                           
 27830                           ; BSR set to: 2
 27831  01A3B2  90D8               	bcf	status,0,c
 27832  01A3B4  330B               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 27833  01A3B6  330A               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 27834  01A3B8  3309               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 27835  01A3BA  3308               	rrcf	__div_to_l_@quot& (0+255),f,b
 27836                           
 27837                           ; BSR set to: 2
 27838  01A3BC  3F0D               	incfsz	__div_to_l_@exp1& (0+255),f,b
 27839  01A3BE  D7F9               	goto	l17662
 27840  01A3C0  D00D               	goto	u21480
 27841  01A3C2                     l17666:
 27842                           
 27843                           ; BSR set to: 2
 27844  01A3C2  0E1F               	movlw	31
 27845  01A3C4  650D               	cpfsgt	__div_to_l_@exp1& (0+255),b
 27846  01A3C6  D007               	goto	l17674
 27847  01A3C8  D79E               	goto	u21420
 27848  01A3CA                     l17672:
 27849                           
 27850                           ; BSR set to: 2
 27851  01A3CA  90D8               	bcf	status,0,c
 27852  01A3CC  3708               	rlcf	__div_to_l_@quot& (0+255),f,b
 27853  01A3CE  3709               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 27854  01A3D0  370A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 27855  01A3D2  370B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 27856  01A3D4  070D               	decf	__div_to_l_@exp1& (0+255),f,b
 27857  01A3D6                     l17674:
 27858                           
 27859                           ; BSR set to: 2
 27860  01A3D6  510D               	movf	__div_to_l_@exp1& (0+255),w,b
 27861  01A3D8  A4D8               	btfss	status,2,c
 27862  01A3DA  D7F7               	goto	l17672
 27863  01A3DC                     u21480:
 27864                           
 27865                           ; BSR set to: 2
 27866  01A3DC  C208  F200         	movff	__div_to_l_@quot,?__div_to_l_
 27867  01A3E0  C209  F201         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 27868  01A3E4  C20A  F202         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 27869  01A3E8  C20B  F203         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 27870                           
 27871                           ; BSR set to: 2
 27872  01A3EC  0012               	return		;funcret
 27873  01A3EE                     __end_of__div_to_l_:
 27874                           	opt callstack 0
 27875                           
 27876 ;; *************** function ___wmul *****************
 27877 ;; Defined at:
 27878 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 27879 ;; Parameters:    Size  Location     Type
 27880 ;;  multiplier      2    0[BANK2 ] unsigned int 
 27881 ;;  multiplicand    2    2[BANK2 ] unsigned int 
 27882 ;; Auto vars:     Size  Location     Type
 27883 ;;  product         2    4[BANK2 ] unsigned int 
 27884 ;; Return value:  Size  Location     Type
 27885 ;;                  2    0[BANK2 ] unsigned int 
 27886 ;; Registers used:
 27887 ;;		wreg, status,2, status,0, prodl, prodh
 27888 ;; Tracked objects:
 27889 ;;		On entry : 0/0
 27890 ;;		On exit  : 0/0
 27891 ;;		Unchanged: 0/0
 27892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27893 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27894 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27896 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27897 ;;Total ram usage:        6 bytes
 27898 ;; Hardware stack levels used:    1
 27899 ;; Hardware stack levels required when called:   11
 27900 ;; This function calls:
 27901 ;;		Nothing
 27902 ;; This function is called by:
 27903 ;;		_getStringSecondsAsTime
 27904 ;;		_getDaysFromOnTime
 27905 ;;		_getHoursFromOnTime
 27906 ;;		_getMinutesFromOnTime
 27907 ;;		_getSecondsFromOnTime
 27908 ;;		__doprnt
 27909 ;; This function uses a non-reentrant model
 27910 ;;
 27911                           
 27912                           	psect	text91
 27913  01C4F2                     __ptext91:
 27914                           	opt callstack 0
 27915  01C4F2                     ___wmul:
 27916                           	opt callstack 14
 27917                           
 27918                           ; BSR set to: 2
 27919                           ;incstack = 0
 27920  01C4F2  0102               	movlb	2	; () banked
 27921  01C4F4  5100               	movf	___wmul@multiplier& (0+255),w,b
 27922  01C4F6  0302               	mulwf	___wmul@multiplicand& (0+255),b
 27923  01C4F8  CFF3 F204          	movff	prodl,___wmul@product
 27924  01C4FC  CFF4 F205          	movff	prodh,___wmul@product+1
 27925  01C500  5100               	movf	___wmul@multiplier& (0+255),w,b
 27926  01C502  0303               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 27927  01C504  50F3               	movf	prodl,w,c
 27928  01C506  2705               	addwf	(___wmul@product+1)& (0+255),f,b
 27929  01C508  5101               	movf	(___wmul@multiplier+1)& (0+255),w,b
 27930  01C50A  0302               	mulwf	___wmul@multiplicand& (0+255),b
 27931  01C50C  50F3               	movf	prodl,w,c
 27932  01C50E  2705               	addwf	(___wmul@product+1)& (0+255),f,b
 27933                           
 27934                           ; BSR set to: 2
 27935  01C510  C204  F200         	movff	___wmul@product,?___wmul
 27936  01C514  C205  F201         	movff	___wmul@product+1,?___wmul+1
 27937                           
 27938                           ; BSR set to: 2
 27939  01C518  0012               	return		;funcret
 27940  01C51A                     __end_of___wmul:
 27941                           	opt callstack 0
 27942                           
 27943 ;; *************** function ___llmod *****************
 27944 ;; Defined at:
 27945 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
 27946 ;; Parameters:    Size  Location     Type
 27947 ;;  dividend        4   13[BANK2 ] unsigned long 
 27948 ;;  divisor         4   17[BANK2 ] unsigned long 
 27949 ;; Auto vars:     Size  Location     Type
 27950 ;;  counter         1   21[BANK2 ] unsigned char 
 27951 ;; Return value:  Size  Location     Type
 27952 ;;                  4   13[BANK2 ] unsigned long 
 27953 ;; Registers used:
 27954 ;;		wreg, status,2, status,0
 27955 ;; Tracked objects:
 27956 ;;		On entry : 0/0
 27957 ;;		On exit  : 0/0
 27958 ;;		Unchanged: 0/0
 27959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27960 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27961 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27963 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27964 ;;Total ram usage:        9 bytes
 27965 ;; Hardware stack levels used:    1
 27966 ;; Hardware stack levels required when called:   11
 27967 ;; This function calls:
 27968 ;;		Nothing
 27969 ;; This function is called by:
 27970 ;;		__doprnt
 27971 ;; This function uses a non-reentrant model
 27972 ;;
 27973                           
 27974                           	psect	text92
 27975  01B53E                     __ptext92:
 27976                           	opt callstack 0
 27977  01B53E                     ___llmod:
 27978                           	opt callstack 14
 27979                           
 27980                           ; BSR set to: 2
 27981                           ;incstack = 0
 27982  01B53E  0102               	movlb	2	; () banked
 27983  01B540  5111               	movf	___llmod@divisor& (0+255),w,b
 27984  01B542  1112               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 27985  01B544  1113               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 27986  01B546  1114               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 27987  01B548  B4D8               	btfsc	status,2,c
 27988  01B54A  D024               	goto	l3097
 27989                           
 27990                           ; BSR set to: 2
 27991  01B54C  0E01               	movlw	1
 27992  01B54E  6F15               	movwf	___llmod@counter& (0+255),b
 27993  01B550  D006               	goto	l17806
 27994  01B552                     l17804:
 27995                           
 27996                           ; BSR set to: 2
 27997  01B552  90D8               	bcf	status,0,c
 27998  01B554  3711               	rlcf	___llmod@divisor& (0+255),f,b
 27999  01B556  3712               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 28000  01B558  3713               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 28001  01B55A  3714               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 28002  01B55C  2B15               	incf	___llmod@counter& (0+255),f,b
 28003  01B55E                     l17806:
 28004                           
 28005                           ; BSR set to: 2
 28006  01B55E  AF14               	btfss	(___llmod@divisor+3)& (0+255),7,b
 28007  01B560  D7F8               	goto	l17804
 28008  01B562                     u21690:
 28009                           
 28010                           ; BSR set to: 2
 28011  01B562  5111               	movf	___llmod@divisor& (0+255),w,b
 28012  01B564  5D0D               	subwf	___llmod@dividend& (0+255),w,b
 28013  01B566  5112               	movf	(___llmod@divisor+1)& (0+255),w,b
 28014  01B568  590E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 28015  01B56A  5113               	movf	(___llmod@divisor+2)& (0+255),w,b
 28016  01B56C  590F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 28017  01B56E  5114               	movf	(___llmod@divisor+3)& (0+255),w,b
 28018  01B570  5910               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 28019  01B572  A0D8               	btfss	status,0,c
 28020  01B574  D008               	goto	l17812
 28021                           
 28022                           ; BSR set to: 2
 28023  01B576  5111               	movf	___llmod@divisor& (0+255),w,b
 28024  01B578  5F0D               	subwf	___llmod@dividend& (0+255),f,b
 28025  01B57A  5112               	movf	(___llmod@divisor+1)& (0+255),w,b
 28026  01B57C  5B0E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 28027  01B57E  5113               	movf	(___llmod@divisor+2)& (0+255),w,b
 28028  01B580  5B0F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 28029  01B582  5114               	movf	(___llmod@divisor+3)& (0+255),w,b
 28030  01B584  5B10               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 28031  01B586                     l17812:
 28032                           
 28033                           ; BSR set to: 2
 28034  01B586  90D8               	bcf	status,0,c
 28035  01B588  3314               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 28036  01B58A  3313               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 28037  01B58C  3312               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 28038  01B58E  3311               	rrcf	___llmod@divisor& (0+255),f,b
 28039                           
 28040                           ; BSR set to: 2
 28041  01B590  2F15               	decfsz	___llmod@counter& (0+255),f,b
 28042  01B592  D7E7               	goto	u21690
 28043  01B594                     l3097:
 28044                           
 28045                           ; BSR set to: 2
 28046  01B594  C20D  F20D         	movff	___llmod@dividend,?___llmod
 28047  01B598  C20E  F20E         	movff	___llmod@dividend+1,?___llmod+1
 28048  01B59C  C20F  F20F         	movff	___llmod@dividend+2,?___llmod+2
 28049  01B5A0  C210  F210         	movff	___llmod@dividend+3,?___llmod+3
 28050                           
 28051                           ; BSR set to: 2
 28052  01B5A4  0012               	return		;funcret
 28053  01B5A6                     __end_of___llmod:
 28054                           	opt callstack 0
 28055                           
 28056 ;; *************** function ___lldiv *****************
 28057 ;; Defined at:
 28058 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
 28059 ;; Parameters:    Size  Location     Type
 28060 ;;  dividend        4    0[BANK2 ] unsigned long 
 28061 ;;  divisor         4    4[BANK2 ] unsigned long 
 28062 ;; Auto vars:     Size  Location     Type
 28063 ;;  quotient        4    8[BANK2 ] unsigned long 
 28064 ;;  counter         1   12[BANK2 ] unsigned char 
 28065 ;; Return value:  Size  Location     Type
 28066 ;;                  4    0[BANK2 ] unsigned long 
 28067 ;; Registers used:
 28068 ;;		wreg, status,2, status,0
 28069 ;; Tracked objects:
 28070 ;;		On entry : 0/0
 28071 ;;		On exit  : 0/0
 28072 ;;		Unchanged: 0/0
 28073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28074 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28075 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28077 ;;      Totals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28078 ;;Total ram usage:       13 bytes
 28079 ;; Hardware stack levels used:    1
 28080 ;; Hardware stack levels required when called:   11
 28081 ;; This function calls:
 28082 ;;		Nothing
 28083 ;; This function is called by:
 28084 ;;		_getStringSecondsAsTime
 28085 ;;		_getYearsFromOnTime
 28086 ;;		_getDaysFromOnTime
 28087 ;;		_getHoursFromOnTime
 28088 ;;		_getMinutesFromOnTime
 28089 ;;		_getSecondsFromOnTime
 28090 ;;		__doprnt
 28091 ;; This function uses a non-reentrant model
 28092 ;;
 28093                           
 28094                           	psect	text93
 28095  01B2D2                     __ptext93:
 28096                           	opt callstack 0
 28097  01B2D2                     ___lldiv:
 28098                           	opt callstack 14
 28099                           
 28100                           ; BSR set to: 2
 28101                           ;incstack = 0
 28102  01B2D2  0E00               	movlw	0
 28103  01B2D4  0102               	movlb	2	; () banked
 28104  01B2D6  6F08               	movwf	___lldiv@quotient& (0+255),b
 28105  01B2D8  0E00               	movlw	0
 28106  01B2DA  6F09               	movwf	(___lldiv@quotient+1)& (0+255),b
 28107  01B2DC  0E00               	movlw	0
 28108  01B2DE  6F0A               	movwf	(___lldiv@quotient+2)& (0+255),b
 28109  01B2E0  0E00               	movlw	0
 28110  01B2E2  6F0B               	movwf	(___lldiv@quotient+3)& (0+255),b
 28111                           
 28112                           ; BSR set to: 2
 28113  01B2E4  5104               	movf	___lldiv@divisor& (0+255),w,b
 28114  01B2E6  1105               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 28115  01B2E8  1106               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 28116  01B2EA  1107               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 28117  01B2EC  B4D8               	btfsc	status,2,c
 28118  01B2EE  D02A               	goto	l2682
 28119                           
 28120                           ; BSR set to: 2
 28121  01B2F0  0E01               	movlw	1
 28122  01B2F2  6F0C               	movwf	___lldiv@counter& (0+255),b
 28123  01B2F4  D006               	goto	l17690
 28124  01B2F6                     l17688:
 28125                           
 28126                           ; BSR set to: 2
 28127  01B2F6  90D8               	bcf	status,0,c
 28128  01B2F8  3704               	rlcf	___lldiv@divisor& (0+255),f,b
 28129  01B2FA  3705               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 28130  01B2FC  3706               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 28131  01B2FE  3707               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 28132  01B300  2B0C               	incf	___lldiv@counter& (0+255),f,b
 28133  01B302                     l17690:
 28134                           
 28135                           ; BSR set to: 2
 28136  01B302  AF07               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 28137  01B304  D7F8               	goto	l17688
 28138  01B306                     u21500:
 28139                           
 28140                           ; BSR set to: 2
 28141  01B306  90D8               	bcf	status,0,c
 28142  01B308  3708               	rlcf	___lldiv@quotient& (0+255),f,b
 28143  01B30A  3709               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 28144  01B30C  370A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 28145  01B30E  370B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 28146                           
 28147                           ; BSR set to: 2
 28148  01B310  5104               	movf	___lldiv@divisor& (0+255),w,b
 28149  01B312  5D00               	subwf	___lldiv@dividend& (0+255),w,b
 28150  01B314  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
 28151  01B316  5901               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 28152  01B318  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
 28153  01B31A  5902               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 28154  01B31C  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
 28155  01B31E  5903               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 28156  01B320  A0D8               	btfss	status,0,c
 28157  01B322  D009               	goto	l17700
 28158                           
 28159                           ; BSR set to: 2
 28160  01B324  5104               	movf	___lldiv@divisor& (0+255),w,b
 28161  01B326  5F00               	subwf	___lldiv@dividend& (0+255),f,b
 28162  01B328  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
 28163  01B32A  5B01               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 28164  01B32C  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
 28165  01B32E  5B02               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 28166  01B330  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
 28167  01B332  5B03               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 28168                           
 28169                           ; BSR set to: 2
 28170  01B334  8108               	bsf	___lldiv@quotient& (0+255),0,b
 28171  01B336                     l17700:
 28172                           
 28173                           ; BSR set to: 2
 28174  01B336  90D8               	bcf	status,0,c
 28175  01B338  3307               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 28176  01B33A  3306               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 28177  01B33C  3305               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 28178  01B33E  3304               	rrcf	___lldiv@divisor& (0+255),f,b
 28179                           
 28180                           ; BSR set to: 2
 28181  01B340  2F0C               	decfsz	___lldiv@counter& (0+255),f,b
 28182  01B342  D7E1               	goto	u21500
 28183  01B344                     l2682:
 28184                           
 28185                           ; BSR set to: 2
 28186  01B344  C208  F200         	movff	___lldiv@quotient,?___lldiv
 28187  01B348  C209  F201         	movff	___lldiv@quotient+1,?___lldiv+1
 28188  01B34C  C20A  F202         	movff	___lldiv@quotient+2,?___lldiv+2
 28189  01B350  C20B  F203         	movff	___lldiv@quotient+3,?___lldiv+3
 28190                           
 28191                           ; BSR set to: 2
 28192  01B354  0012               	return		;funcret
 28193  01B356                     __end_of___lldiv:
 28194                           	opt callstack 0
 28195                           
 28196 ;; *************** function ___fltol *****************
 28197 ;; Defined at:
 28198 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
 28199 ;; Parameters:    Size  Location     Type
 28200 ;;  f1              4   48[BANK2 ] unsigned long 
 28201 ;; Auto vars:     Size  Location     Type
 28202 ;;  exp1            1   57[BANK2 ] unsigned char 
 28203 ;;  sign1           1   56[BANK2 ] unsigned char 
 28204 ;; Return value:  Size  Location     Type
 28205 ;;                  4   48[BANK2 ] long 
 28206 ;; Registers used:
 28207 ;;		wreg, status,2, status,0
 28208 ;; Tracked objects:
 28209 ;;		On entry : 0/0
 28210 ;;		On exit  : 0/0
 28211 ;;		Unchanged: 0/0
 28212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28213 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28214 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28215 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28216 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28217 ;;Total ram usage:       10 bytes
 28218 ;; Hardware stack levels used:    1
 28219 ;; Hardware stack levels required when called:   11
 28220 ;; This function calls:
 28221 ;;		Nothing
 28222 ;; This function is called by:
 28223 ;;		_floatToEngineeringFormat
 28224 ;;		__doprnt
 28225 ;;		_ftoa
 28226 ;; This function uses a non-reentrant model
 28227 ;;
 28228                           
 28229                           	psect	text94
 28230  01AAC2                     __ptext94:
 28231                           	opt callstack 0
 28232  01AAC2                     ___fltol:
 28233                           	opt callstack 14
 28234                           
 28235                           ; BSR set to: 2
 28236                           ;incstack = 0
 28237  01AAC2  0102               	movlb	2	; () banked
 28238  01AAC4  3532               	rlcf	(___fltol@f1+2)& (0+255),w,b
 28239  01AAC6  3533               	rlcf	(___fltol@f1+3)& (0+255),w,b
 28240  01AAC8  6F39               	movwf	___fltol@exp1& (0+255),b
 28241  01AACA  5139               	movf	___fltol@exp1& (0+255),w,b
 28242  01AACC  A4D8               	btfss	status,2,c
 28243  01AACE  D009               	goto	l17762
 28244  01AAD0                     u21610:
 28245                           
 28246                           ; BSR set to: 2
 28247  01AAD0  0E00               	movlw	0
 28248  01AAD2  6F30               	movwf	?___fltol& (0+255),b
 28249  01AAD4  0E00               	movlw	0
 28250  01AAD6  6F31               	movwf	(?___fltol+1)& (0+255),b
 28251  01AAD8  0E00               	movlw	0
 28252  01AADA  6F32               	movwf	(?___fltol+2)& (0+255),b
 28253  01AADC  0E00               	movlw	0
 28254  01AADE  6F33               	movwf	(?___fltol+3)& (0+255),b
 28255  01AAE0  0012               	return	
 28256  01AAE2                     l17762:
 28257                           
 28258                           ; BSR set to: 2
 28259  01AAE2  C230  F234         	movff	___fltol@f1,??___fltol
 28260  01AAE6  C231  F235         	movff	___fltol@f1+1,??___fltol+1
 28261  01AAEA  C232  F236         	movff	___fltol@f1+2,??___fltol+2
 28262  01AAEE  C233  F237         	movff	___fltol@f1+3,??___fltol+3
 28263  01AAF2  0E20               	movlw	32
 28264  01AAF4  D005               	goto	u21620
 28265  01AAF6                     u21625:
 28266  01AAF6  90D8               	bcf	status,0,c
 28267  01AAF8  3337               	rrcf	(??___fltol+3)& (0+255),f,b
 28268  01AAFA  3336               	rrcf	(??___fltol+2)& (0+255),f,b
 28269  01AAFC  3335               	rrcf	(??___fltol+1)& (0+255),f,b
 28270  01AAFE  3334               	rrcf	??___fltol& (0+255),f,b
 28271  01AB00                     u21620:
 28272  01AB00  2EE8               	decfsz	wreg,f,c
 28273  01AB02  D7F9               	goto	u21625
 28274  01AB04  5134               	movf	??___fltol& (0+255),w,b
 28275  01AB06  6F38               	movwf	___fltol@sign1& (0+255),b
 28276                           
 28277                           ; BSR set to: 2
 28278  01AB08  8F32               	bsf	(___fltol@f1+2)& (0+255),7,b
 28279                           
 28280                           ; BSR set to: 2
 28281  01AB0A  0EFF               	movlw	255
 28282  01AB0C  1730               	andwf	___fltol@f1& (0+255),f,b
 28283  01AB0E  0EFF               	movlw	255
 28284  01AB10  1731               	andwf	(___fltol@f1+1)& (0+255),f,b
 28285  01AB12  0EFF               	movlw	255
 28286  01AB14  1732               	andwf	(___fltol@f1+2)& (0+255),f,b
 28287  01AB16  0E00               	movlw	0
 28288  01AB18  1733               	andwf	(___fltol@f1+3)& (0+255),f,b
 28289                           
 28290                           ; BSR set to: 2
 28291  01AB1A  0E96               	movlw	150
 28292  01AB1C  5F39               	subwf	___fltol@exp1& (0+255),f,b
 28293                           
 28294                           ; BSR set to: 2
 28295  01AB1E  AF39               	btfss	___fltol@exp1& (0+255),7,b
 28296  01AB20  D00D               	goto	l17782
 28297                           
 28298                           ; BSR set to: 2
 28299  01AB22  5139               	movf	___fltol@exp1& (0+255),w,b
 28300  01AB24  0A80               	xorlw	128
 28301  01AB26  0F97               	addlw	151
 28302  01AB28  A0D8               	btfss	status,0,c
 28303  01AB2A  D7D2               	goto	u21610
 28304  01AB2C                     l17778:
 28305                           
 28306                           ; BSR set to: 2
 28307  01AB2C  90D8               	bcf	status,0,c
 28308  01AB2E  3333               	rrcf	(___fltol@f1+3)& (0+255),f,b
 28309  01AB30  3332               	rrcf	(___fltol@f1+2)& (0+255),f,b
 28310  01AB32  3331               	rrcf	(___fltol@f1+1)& (0+255),f,b
 28311  01AB34  3330               	rrcf	___fltol@f1& (0+255),f,b
 28312                           
 28313                           ; BSR set to: 2
 28314  01AB36  3F39               	incfsz	___fltol@exp1& (0+255),f,b
 28315  01AB38  D7F9               	goto	l17778
 28316  01AB3A  D00D               	goto	u21660
 28317  01AB3C                     l17782:
 28318                           
 28319                           ; BSR set to: 2
 28320  01AB3C  0E1F               	movlw	31
 28321  01AB3E  6539               	cpfsgt	___fltol@exp1& (0+255),b
 28322  01AB40  D007               	goto	l17790
 28323  01AB42  D7C6               	goto	u21610
 28324  01AB44                     l17788:
 28325                           
 28326                           ; BSR set to: 2
 28327  01AB44  90D8               	bcf	status,0,c
 28328  01AB46  3730               	rlcf	___fltol@f1& (0+255),f,b
 28329  01AB48  3731               	rlcf	(___fltol@f1+1)& (0+255),f,b
 28330  01AB4A  3732               	rlcf	(___fltol@f1+2)& (0+255),f,b
 28331  01AB4C  3733               	rlcf	(___fltol@f1+3)& (0+255),f,b
 28332  01AB4E  0739               	decf	___fltol@exp1& (0+255),f,b
 28333  01AB50                     l17790:
 28334                           
 28335                           ; BSR set to: 2
 28336  01AB50  5139               	movf	___fltol@exp1& (0+255),w,b
 28337  01AB52  A4D8               	btfss	status,2,c
 28338  01AB54  D7F7               	goto	l17788
 28339  01AB56                     u21660:
 28340                           
 28341                           ; BSR set to: 2
 28342  01AB56  5138               	movf	___fltol@sign1& (0+255),w,b
 28343  01AB58  B4D8               	btfsc	status,2,c
 28344  01AB5A  D008               	goto	l17796
 28345                           
 28346                           ; BSR set to: 2
 28347  01AB5C  1F33               	comf	(___fltol@f1+3)& (0+255),f,b
 28348  01AB5E  1F32               	comf	(___fltol@f1+2)& (0+255),f,b
 28349  01AB60  1F31               	comf	(___fltol@f1+1)& (0+255),f,b
 28350  01AB62  6D30               	negf	___fltol@f1& (0+255),b
 28351  01AB64  0E00               	movlw	0
 28352  01AB66  2331               	addwfc	(___fltol@f1+1)& (0+255),f,b
 28353  01AB68  2332               	addwfc	(___fltol@f1+2)& (0+255),f,b
 28354  01AB6A  2333               	addwfc	(___fltol@f1+3)& (0+255),f,b
 28355  01AB6C                     l17796:
 28356                           
 28357                           ; BSR set to: 2
 28358  01AB6C  C230  F230         	movff	___fltol@f1,?___fltol
 28359  01AB70  C231  F231         	movff	___fltol@f1+1,?___fltol+1
 28360  01AB74  C232  F232         	movff	___fltol@f1+2,?___fltol+2
 28361  01AB78  C233  F233         	movff	___fltol@f1+3,?___fltol+3
 28362                           
 28363                           ; BSR set to: 2
 28364  01AB7C  0012               	return		;funcret
 28365  01AB7E                     __end_of___fltol:
 28366                           	opt callstack 0
 28367                           
 28368 ;; *************** function ___flsub *****************
 28369 ;; Defined at:
 28370 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 28371 ;; Parameters:    Size  Location     Type
 28372 ;;  b               4   76[BANK2 ] long 
 28373 ;;  a               4   80[BANK2 ] long 
 28374 ;; Auto vars:     Size  Location     Type
 28375 ;;		None
 28376 ;; Return value:  Size  Location     Type
 28377 ;;                  4   76[BANK2 ] long 
 28378 ;; Registers used:
 28379 ;;		wreg, status,2, status,0, cstack
 28380 ;; Tracked objects:
 28381 ;;		On entry : 0/0
 28382 ;;		On exit  : 0/0
 28383 ;;		Unchanged: 0/0
 28384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28385 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28388 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28389 ;;Total ram usage:        8 bytes
 28390 ;; Hardware stack levels used:    1
 28391 ;; Hardware stack levels required when called:   12
 28392 ;; This function calls:
 28393 ;;		___fladd
 28394 ;; This function is called by:
 28395 ;;		__doprnt
 28396 ;;		_ftoa
 28397 ;; This function uses a non-reentrant model
 28398 ;;
 28399                           
 28400                           	psect	text95
 28401  01BC7E                     __ptext95:
 28402                           	opt callstack 0
 28403  01BC7E                     ___flsub:
 28404                           	opt callstack 13
 28405                           
 28406                           ; BSR set to: 2
 28407                           ;incstack = 0
 28408  01BC7E  0E00               	movlw	0
 28409  01BC80  0102               	movlb	2	; () banked
 28410  01BC82  1B50               	xorwf	___flsub@a& (0+255),f,b
 28411  01BC84  0E00               	movlw	0
 28412  01BC86  1B51               	xorwf	(___flsub@a+1)& (0+255),f,b
 28413  01BC88  0E00               	movlw	0
 28414  01BC8A  1B52               	xorwf	(___flsub@a+2)& (0+255),f,b
 28415  01BC8C  0E80               	movlw	128
 28416  01BC8E  1B53               	xorwf	(___flsub@a+3)& (0+255),f,b
 28417                           
 28418                           ; BSR set to: 2
 28419  01BC90  C24C  F234         	movff	___flsub@b,___fladd@b
 28420  01BC94  C24D  F235         	movff	___flsub@b+1,___fladd@b+1
 28421  01BC98  C24E  F236         	movff	___flsub@b+2,___fladd@b+2
 28422  01BC9C  C24F  F237         	movff	___flsub@b+3,___fladd@b+3
 28423  01BCA0  C250  F238         	movff	___flsub@a,___fladd@a
 28424  01BCA4  C251  F239         	movff	___flsub@a+1,___fladd@a+1
 28425  01BCA8  C252  F23A         	movff	___flsub@a+2,___fladd@a+2
 28426  01BCAC  C253  F23B         	movff	___flsub@a+3,___fladd@a+3
 28427  01BCB0  ECF9  F0B9         	call	___fladd	;wreg free
 28428  01BCB4  C234  F24C         	movff	?___fladd,?___flsub
 28429  01BCB8  C235  F24D         	movff	?___fladd+1,?___flsub+1
 28430  01BCBC  C236  F24E         	movff	?___fladd+2,?___flsub+2
 28431  01BCC0  C237  F24F         	movff	?___fladd+3,?___flsub+3
 28432  01BCC4  0012               	return		;funcret
 28433  01BCC6                     __end_of___flsub:
 28434                           	opt callstack 0
 28435                           
 28436 ;; *************** function ___fladd *****************
 28437 ;; Defined at:
 28438 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 28439 ;; Parameters:    Size  Location     Type
 28440 ;;  b               4   52[BANK2 ] long 
 28441 ;;  a               4   56[BANK2 ] long 
 28442 ;; Auto vars:     Size  Location     Type
 28443 ;;  grs             1   67[BANK2 ] unsigned char 
 28444 ;;  bexp            1   66[BANK2 ] unsigned char 
 28445 ;;  aexp            1   65[BANK2 ] unsigned char 
 28446 ;;  signs           1   64[BANK2 ] unsigned char 
 28447 ;; Return value:  Size  Location     Type
 28448 ;;                  4   52[BANK2 ] unsigned char 
 28449 ;; Registers used:
 28450 ;;		wreg, status,2, status,0
 28451 ;; Tracked objects:
 28452 ;;		On entry : 0/0
 28453 ;;		On exit  : 0/0
 28454 ;;		Unchanged: 0/0
 28455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28456 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28457 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28458 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28459 ;;      Totals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28460 ;;Total ram usage:       16 bytes
 28461 ;; Hardware stack levels used:    1
 28462 ;; Hardware stack levels required when called:   11
 28463 ;; This function calls:
 28464 ;;		Nothing
 28465 ;; This function is called by:
 28466 ;;		__doprnt
 28467 ;;		___flsub
 28468 ;; This function uses a non-reentrant model
 28469 ;;
 28470                           
 28471                           	psect	text96
 28472  0173F2                     __ptext96:
 28473                           	opt callstack 0
 28474  0173F2                     ___fladd:
 28475                           	opt callstack 13
 28476                           
 28477                           ;incstack = 0
 28478  0173F2  0102               	movlb	2	; () banked
 28479  0173F4  5137               	movf	(___fladd@b+3)& (0+255),w,b
 28480  0173F6  0B80               	andlw	128
 28481  0173F8  6F40               	movwf	___fladd@signs& (0+255),b
 28482  0173FA  5137               	movf	(___fladd@b+3)& (0+255),w,b
 28483  0173FC  2537               	addwf	(___fladd@b+3)& (0+255),w,b
 28484  0173FE  6F42               	movwf	___fladd@bexp& (0+255),b
 28485                           
 28486                           ; BSR set to: 2
 28487  017400  BF36               	btfsc	(___fladd@b+2)& (0+255),7,b
 28488                           
 28489                           ; BSR set to: 2
 28490  017402  8142               	bsf	___fladd@bexp& (0+255),0,b
 28491                           
 28492                           ; BSR set to: 2
 28493  017404  5142               	movf	___fladd@bexp& (0+255),w,b
 28494  017406  B4D8               	btfsc	status,2,c
 28495  017408  D00D               	goto	l17052
 28496                           
 28497                           ; BSR set to: 2
 28498  01740A  2942               	incf	___fladd@bexp& (0+255),w,b
 28499  01740C  A4D8               	btfss	status,2,c
 28500  01740E  D008               	goto	l17048
 28501                           
 28502                           ; BSR set to: 2
 28503  017410  0E00               	movlw	0
 28504  017412  6F34               	movwf	___fladd@b& (0+255),b
 28505  017414  0E00               	movlw	0
 28506  017416  6F35               	movwf	(___fladd@b+1)& (0+255),b
 28507  017418  0E00               	movlw	0
 28508  01741A  6F36               	movwf	(___fladd@b+2)& (0+255),b
 28509  01741C  0E00               	movlw	0
 28510  01741E  6F37               	movwf	(___fladd@b+3)& (0+255),b
 28511  017420                     l17048:
 28512                           
 28513                           ; BSR set to: 2
 28514  017420  8F36               	bsf	(___fladd@b+2)& (0+255),7,b
 28515  017422  D006               	goto	L18
 28516  017424                     l17052:
 28517                           
 28518                           ; BSR set to: 2
 28519  017424  0E00               	movlw	0
 28520  017426  6F34               	movwf	___fladd@b& (0+255),b
 28521  017428  0E00               	movlw	0
 28522  01742A  6F35               	movwf	(___fladd@b+1)& (0+255),b
 28523  01742C  0E00               	movlw	0
 28524  01742E  6F36               	movwf	(___fladd@b+2)& (0+255),b
 28525  017430                     L18:
 28526  017430  0E00               	movlw	0
 28527  017432  6F37               	movwf	(___fladd@b+3)& (0+255),b
 28528                           
 28529                           ; BSR set to: 2
 28530  017434  513B               	movf	(___fladd@a+3)& (0+255),w,b
 28531  017436  0B80               	andlw	128
 28532  017438  6F41               	movwf	___fladd@aexp& (0+255),b
 28533                           
 28534                           ; BSR set to: 2
 28535  01743A  5140               	movf	___fladd@signs& (0+255),w,b
 28536  01743C  1941               	xorwf	___fladd@aexp& (0+255),w,b
 28537  01743E  A4D8               	btfss	status,2,c
 28538                           
 28539                           ; BSR set to: 2
 28540  017440  8D40               	bsf	___fladd@signs& (0+255),6,b
 28541                           
 28542                           ; BSR set to: 2
 28543  017442  513B               	movf	(___fladd@a+3)& (0+255),w,b
 28544  017444  253B               	addwf	(___fladd@a+3)& (0+255),w,b
 28545  017446  6F41               	movwf	___fladd@aexp& (0+255),b
 28546                           
 28547                           ; BSR set to: 2
 28548  017448  BF3A               	btfsc	(___fladd@a+2)& (0+255),7,b
 28549                           
 28550                           ; BSR set to: 2
 28551  01744A  8141               	bsf	___fladd@aexp& (0+255),0,b
 28552                           
 28553                           ; BSR set to: 2
 28554  01744C  5141               	movf	___fladd@aexp& (0+255),w,b
 28555  01744E  B4D8               	btfsc	status,2,c
 28556  017450  D00D               	goto	l17076
 28557                           
 28558                           ; BSR set to: 2
 28559  017452  2941               	incf	___fladd@aexp& (0+255),w,b
 28560  017454  A4D8               	btfss	status,2,c
 28561  017456  D008               	goto	l17072
 28562                           
 28563                           ; BSR set to: 2
 28564  017458  0E00               	movlw	0
 28565  01745A  6F38               	movwf	___fladd@a& (0+255),b
 28566  01745C  0E00               	movlw	0
 28567  01745E  6F39               	movwf	(___fladd@a+1)& (0+255),b
 28568  017460  0E00               	movlw	0
 28569  017462  6F3A               	movwf	(___fladd@a+2)& (0+255),b
 28570  017464  0E00               	movlw	0
 28571  017466  6F3B               	movwf	(___fladd@a+3)& (0+255),b
 28572  017468                     l17072:
 28573                           
 28574                           ; BSR set to: 2
 28575  017468  8F3A               	bsf	(___fladd@a+2)& (0+255),7,b
 28576  01746A  D006               	goto	L19
 28577  01746C                     l17076:
 28578                           
 28579                           ; BSR set to: 2
 28580  01746C  0E00               	movlw	0
 28581  01746E  6F38               	movwf	___fladd@a& (0+255),b
 28582  017470  0E00               	movlw	0
 28583  017472  6F39               	movwf	(___fladd@a+1)& (0+255),b
 28584  017474  0E00               	movlw	0
 28585  017476  6F3A               	movwf	(___fladd@a+2)& (0+255),b
 28586  017478                     L19:
 28587  017478  0E00               	movlw	0
 28588  01747A  6F3B               	movwf	(___fladd@a+3)& (0+255),b
 28589                           
 28590                           ; BSR set to: 2
 28591  01747C  5142               	movf	___fladd@bexp& (0+255),w,b
 28592  01747E  5D41               	subwf	___fladd@aexp& (0+255),w,b
 28593  017480  B0D8               	btfsc	status,0,c
 28594  017482  D022               	goto	l17114
 28595                           
 28596                           ; BSR set to: 2
 28597  017484  AD40               	btfss	___fladd@signs& (0+255),6,b
 28598  017486  D002               	goto	l17084
 28599                           
 28600                           ; BSR set to: 2
 28601  017488  0E80               	movlw	128
 28602  01748A  1B40               	xorwf	___fladd@signs& (0+255),f,b
 28603  01748C                     l17084:
 28604                           
 28605                           ; BSR set to: 2
 28606  01748C  C242  F243         	movff	___fladd@bexp,___fladd@grs
 28607                           
 28608                           ; BSR set to: 2
 28609  017490  C241  F242         	movff	___fladd@aexp,___fladd@bexp
 28610                           
 28611                           ; BSR set to: 2
 28612  017494  C243  F241         	movff	___fladd@grs,___fladd@aexp
 28613                           
 28614                           ; BSR set to: 2
 28615  017498  C234  F243         	movff	___fladd@b,___fladd@grs
 28616                           
 28617                           ; BSR set to: 2
 28618  01749C  C238  F234         	movff	___fladd@a,___fladd@b
 28619                           
 28620                           ; BSR set to: 2
 28621  0174A0  C243  F238         	movff	___fladd@grs,___fladd@a
 28622                           
 28623                           ; BSR set to: 2
 28624  0174A4  C235  F243         	movff	___fladd@b+1,___fladd@grs
 28625                           
 28626                           ; BSR set to: 2
 28627  0174A8  C239  F235         	movff	___fladd@a+1,___fladd@b+1
 28628                           
 28629                           ; BSR set to: 2
 28630  0174AC  C243  F239         	movff	___fladd@grs,___fladd@a+1
 28631                           
 28632                           ; BSR set to: 2
 28633  0174B0  C236  F243         	movff	___fladd@b+2,___fladd@grs
 28634                           
 28635                           ; BSR set to: 2
 28636  0174B4  C23A  F236         	movff	___fladd@a+2,___fladd@b+2
 28637                           
 28638                           ; BSR set to: 2
 28639  0174B8  C243  F23A         	movff	___fladd@grs,___fladd@a+2
 28640                           
 28641                           ; BSR set to: 2
 28642  0174BC  C237  F243         	movff	___fladd@b+3,___fladd@grs
 28643                           
 28644                           ; BSR set to: 2
 28645  0174C0  C23B  F237         	movff	___fladd@a+3,___fladd@b+3
 28646                           
 28647                           ; BSR set to: 2
 28648  0174C4  C243  F23B         	movff	___fladd@grs,___fladd@a+3
 28649  0174C8                     l17114:
 28650                           
 28651                           ; BSR set to: 2
 28652  0174C8  0E00               	movlw	0
 28653  0174CA  6F43               	movwf	___fladd@grs& (0+255),b
 28654                           
 28655                           ; BSR set to: 2
 28656  0174CC  5142               	movf	___fladd@bexp& (0+255),w,b
 28657  0174CE  C241  F23C         	movff	___fladd@aexp,??___fladd
 28658  0174D2  6B3D               	clrf	(??___fladd+1)& (0+255),b
 28659  0174D4  5F3C               	subwf	??___fladd& (0+255),f,b
 28660  0174D6  0E00               	movlw	0
 28661  0174D8  5B3D               	subwfb	(??___fladd+1)& (0+255),f,b
 28662  0174DA  BF3D               	btfsc	(??___fladd+1)& (0+255),7,b
 28663  0174DC  D02C               	goto	l3206
 28664  0174DE  513D               	movf	(??___fladd+1)& (0+255),w,b
 28665  0174E0  E104               	bnz	u20560
 28666  0174E2  0E1A               	movlw	26
 28667  0174E4  5D3C               	subwf	??___fladd& (0+255),w,b
 28668  0174E6  A0D8               	btfss	status,0,c
 28669  0174E8  D026               	goto	l3206
 28670  0174EA                     u20560:
 28671                           
 28672                           ; BSR set to: 2
 28673  0174EA  5134               	movf	___fladd@b& (0+255),w,b
 28674  0174EC  1135               	iorwf	(___fladd@b+1)& (0+255),w,b
 28675  0174EE  1136               	iorwf	(___fladd@b+2)& (0+255),w,b
 28676  0174F0  1137               	iorwf	(___fladd@b+3)& (0+255),w,b
 28677  0174F2  B4D8               	btfsc	status,2,c
 28678  0174F4  D002               	goto	u20570
 28679  0174F6  0E01               	movlw	1
 28680  0174F8  D001               	goto	u20580
 28681  0174FA                     u20570:
 28682  0174FA  0E00               	movlw	0
 28683  0174FC                     u20580:
 28684  0174FC  6F43               	movwf	___fladd@grs& (0+255),b
 28685                           
 28686                           ; BSR set to: 2
 28687  0174FE  0E00               	movlw	0
 28688  017500  6F34               	movwf	___fladd@b& (0+255),b
 28689  017502  0E00               	movlw	0
 28690  017504  6F35               	movwf	(___fladd@b+1)& (0+255),b
 28691  017506  0E00               	movlw	0
 28692  017508  6F36               	movwf	(___fladd@b+2)& (0+255),b
 28693  01750A  0E00               	movlw	0
 28694  01750C  6F37               	movwf	(___fladd@b+3)& (0+255),b
 28695                           
 28696                           ; BSR set to: 2
 28697  01750E  C241  F242         	movff	___fladd@aexp,___fladd@bexp
 28698  017512  D015               	goto	u20610
 28699  017514                     l3207:
 28700                           
 28701                           ; BSR set to: 2
 28702  017514  A143               	btfss	___fladd@grs& (0+255),0,b
 28703  017516  D005               	goto	l17126
 28704                           
 28705                           ; BSR set to: 2
 28706  017518  90D8               	bcf	status,0,c
 28707  01751A  3143               	rrcf	___fladd@grs& (0+255),w,b
 28708  01751C  0901               	iorlw	1
 28709  01751E  6F43               	movwf	___fladd@grs& (0+255),b
 28710  017520  D002               	goto	l17128
 28711  017522                     l17126:
 28712                           
 28713                           ; BSR set to: 2
 28714  017522  90D8               	bcf	status,0,c
 28715  017524  3343               	rrcf	___fladd@grs& (0+255),f,b
 28716  017526                     l17128:
 28717                           
 28718                           ; BSR set to: 2
 28719  017526  B134               	btfsc	___fladd@b& (0+255),0,b
 28720                           
 28721                           ; BSR set to: 2
 28722  017528  8F43               	bsf	___fladd@grs& (0+255),7,b
 28723                           
 28724                           ; BSR set to: 2
 28725  01752A  3537               	rlcf	(___fladd@b+3)& (0+255),w,b
 28726  01752C  3337               	rrcf	(___fladd@b+3)& (0+255),f,b
 28727  01752E  3336               	rrcf	(___fladd@b+2)& (0+255),f,b
 28728  017530  3335               	rrcf	(___fladd@b+1)& (0+255),f,b
 28729  017532  3334               	rrcf	___fladd@b& (0+255),f,b
 28730                           
 28731                           ; BSR set to: 2
 28732  017534  2B42               	incf	___fladd@bexp& (0+255),f,b
 28733  017536                     l3206:
 28734                           
 28735                           ; BSR set to: 2
 28736  017536  5141               	movf	___fladd@aexp& (0+255),w,b
 28737  017538  5D42               	subwf	___fladd@bexp& (0+255),w,b
 28738  01753A  A0D8               	btfss	status,0,c
 28739  01753C  D7EB               	goto	l3207
 28740  01753E                     u20610:
 28741                           
 28742                           ; BSR set to: 2
 28743  01753E  BD40               	btfsc	___fladd@signs& (0+255),6,b
 28744  017540  D028               	goto	l17160
 28745                           
 28746                           ; BSR set to: 2
 28747  017542  5142               	movf	___fladd@bexp& (0+255),w,b
 28748  017544  A4D8               	btfss	status,2,c
 28749  017546  D009               	goto	l17142
 28750                           
 28751                           ; BSR set to: 2
 28752  017548  0E00               	movlw	0
 28753  01754A  6F34               	movwf	?___fladd& (0+255),b
 28754  01754C  0E00               	movlw	0
 28755  01754E  6F35               	movwf	(?___fladd+1)& (0+255),b
 28756  017550  0E00               	movlw	0
 28757  017552  6F36               	movwf	(?___fladd+2)& (0+255),b
 28758  017554  0E00               	movlw	0
 28759  017556  6F37               	movwf	(?___fladd+3)& (0+255),b
 28760  017558  0012               	return	
 28761  01755A                     l17142:
 28762                           
 28763                           ; BSR set to: 2
 28764  01755A  5138               	movf	___fladd@a& (0+255),w,b
 28765  01755C  2734               	addwf	___fladd@b& (0+255),f,b
 28766  01755E  5139               	movf	(___fladd@a+1)& (0+255),w,b
 28767  017560  2335               	addwfc	(___fladd@b+1)& (0+255),f,b
 28768  017562  513A               	movf	(___fladd@a+2)& (0+255),w,b
 28769  017564  2336               	addwfc	(___fladd@b+2)& (0+255),f,b
 28770  017566  513B               	movf	(___fladd@a+3)& (0+255),w,b
 28771  017568  2337               	addwfc	(___fladd@b+3)& (0+255),f,b
 28772                           
 28773                           ; BSR set to: 2
 28774  01756A  A137               	btfss	(___fladd@b+3)& (0+255),0,b
 28775  01756C  D071               	goto	u20740
 28776                           
 28777                           ; BSR set to: 2
 28778  01756E  A143               	btfss	___fladd@grs& (0+255),0,b
 28779  017570  D005               	goto	l17150
 28780                           
 28781                           ; BSR set to: 2
 28782  017572  90D8               	bcf	status,0,c
 28783  017574  3143               	rrcf	___fladd@grs& (0+255),w,b
 28784  017576  0901               	iorlw	1
 28785  017578  6F43               	movwf	___fladd@grs& (0+255),b
 28786  01757A  D002               	goto	l17152
 28787  01757C                     l17150:
 28788                           
 28789                           ; BSR set to: 2
 28790  01757C  90D8               	bcf	status,0,c
 28791  01757E  3343               	rrcf	___fladd@grs& (0+255),f,b
 28792  017580                     l17152:
 28793                           
 28794                           ; BSR set to: 2
 28795  017580  B134               	btfsc	___fladd@b& (0+255),0,b
 28796                           
 28797                           ; BSR set to: 2
 28798  017582  8F43               	bsf	___fladd@grs& (0+255),7,b
 28799                           
 28800                           ; BSR set to: 2
 28801  017584  3537               	rlcf	(___fladd@b+3)& (0+255),w,b
 28802  017586  3337               	rrcf	(___fladd@b+3)& (0+255),f,b
 28803  017588  3336               	rrcf	(___fladd@b+2)& (0+255),f,b
 28804  01758A  3335               	rrcf	(___fladd@b+1)& (0+255),f,b
 28805  01758C  3334               	rrcf	___fladd@b& (0+255),f,b
 28806                           
 28807                           ; BSR set to: 2
 28808  01758E  2B42               	incf	___fladd@bexp& (0+255),f,b
 28809  017590  D05F               	goto	u20740
 28810  017592                     l17160:
 28811                           
 28812                           ; BSR set to: 2
 28813  017592  5138               	movf	___fladd@a& (0+255),w,b
 28814  017594  5D34               	subwf	___fladd@b& (0+255),w,b
 28815  017596  5139               	movf	(___fladd@a+1)& (0+255),w,b
 28816  017598  5935               	subwfb	(___fladd@b+1)& (0+255),w,b
 28817  01759A  513A               	movf	(___fladd@a+2)& (0+255),w,b
 28818  01759C  5936               	subwfb	(___fladd@b+2)& (0+255),w,b
 28819  01759E  5137               	movf	(___fladd@b+3)& (0+255),w,b
 28820  0175A0  0A80               	xorlw	128
 28821  0175A2  6F3C               	movwf	??___fladd& (0+255),b
 28822  0175A4  513B               	movf	(___fladd@a+3)& (0+255),w,b
 28823  0175A6  0A80               	xorlw	128
 28824  0175A8  593C               	subwfb	??___fladd& (0+255),w,b
 28825  0175AA  B0D8               	btfsc	status,0,c
 28826  0175AC  D025               	goto	l17170
 28827                           
 28828                           ; BSR set to: 2
 28829  0175AE  5134               	movf	___fladd@b& (0+255),w,b
 28830  0175B0  5D38               	subwf	___fladd@a& (0+255),w,b
 28831  0175B2  6F3C               	movwf	??___fladd& (0+255),b
 28832  0175B4  5135               	movf	(___fladd@b+1)& (0+255),w,b
 28833  0175B6  5939               	subwfb	(___fladd@a+1)& (0+255),w,b
 28834  0175B8  6F3D               	movwf	(??___fladd+1)& (0+255),b
 28835  0175BA  5136               	movf	(___fladd@b+2)& (0+255),w,b
 28836  0175BC  593A               	subwfb	(___fladd@a+2)& (0+255),w,b
 28837  0175BE  6F3E               	movwf	(??___fladd+2)& (0+255),b
 28838  0175C0  5137               	movf	(___fladd@b+3)& (0+255),w,b
 28839  0175C2  593B               	subwfb	(___fladd@a+3)& (0+255),w,b
 28840  0175C4  6F3F               	movwf	(??___fladd+3)& (0+255),b
 28841  0175C6  0EFF               	movlw	255
 28842  0175C8  253C               	addwf	??___fladd& (0+255),w,b
 28843  0175CA  6F34               	movwf	___fladd@b& (0+255),b
 28844  0175CC  0EFF               	movlw	255
 28845  0175CE  213D               	addwfc	(??___fladd+1)& (0+255),w,b
 28846  0175D0  6F35               	movwf	(___fladd@b+1)& (0+255),b
 28847  0175D2  0EFF               	movlw	255
 28848  0175D4  213E               	addwfc	(??___fladd+2)& (0+255),w,b
 28849  0175D6  6F36               	movwf	(___fladd@b+2)& (0+255),b
 28850  0175D8  0EFF               	movlw	255
 28851  0175DA  213F               	addwfc	(??___fladd+3)& (0+255),w,b
 28852  0175DC  6F37               	movwf	(___fladd@b+3)& (0+255),b
 28853  0175DE  0E80               	movlw	128
 28854  0175E0  1B40               	xorwf	___fladd@signs& (0+255),f,b
 28855                           
 28856                           ; BSR set to: 2
 28857  0175E2  6D43               	negf	___fladd@grs& (0+255),b
 28858                           
 28859                           ; BSR set to: 2
 28860  0175E4  5143               	movf	___fladd@grs& (0+255),w,b
 28861  0175E6  A4D8               	btfss	status,2,c
 28862  0175E8  D00F               	goto	l3222
 28863                           
 28864                           ; BSR set to: 2
 28865  0175EA  0E01               	movlw	1
 28866  0175EC  2734               	addwf	___fladd@b& (0+255),f,b
 28867  0175EE  0E00               	movlw	0
 28868  0175F0  2335               	addwfc	(___fladd@b+1)& (0+255),f,b
 28869  0175F2  2336               	addwfc	(___fladd@b+2)& (0+255),f,b
 28870  0175F4  2337               	addwfc	(___fladd@b+3)& (0+255),f,b
 28871  0175F6  D008               	goto	l3222
 28872  0175F8                     l17170:
 28873                           
 28874                           ; BSR set to: 2
 28875  0175F8  5138               	movf	___fladd@a& (0+255),w,b
 28876  0175FA  5F34               	subwf	___fladd@b& (0+255),f,b
 28877  0175FC  5139               	movf	(___fladd@a+1)& (0+255),w,b
 28878  0175FE  5B35               	subwfb	(___fladd@b+1)& (0+255),f,b
 28879  017600  513A               	movf	(___fladd@a+2)& (0+255),w,b
 28880  017602  5B36               	subwfb	(___fladd@b+2)& (0+255),f,b
 28881  017604  513B               	movf	(___fladd@a+3)& (0+255),w,b
 28882  017606  5B37               	subwfb	(___fladd@b+3)& (0+255),f,b
 28883  017608                     l3222:
 28884                           
 28885                           ; BSR set to: 2
 28886  017608  5134               	movf	___fladd@b& (0+255),w,b
 28887  01760A  1135               	iorwf	(___fladd@b+1)& (0+255),w,b
 28888  01760C  1136               	iorwf	(___fladd@b+2)& (0+255),w,b
 28889  01760E  1137               	iorwf	(___fladd@b+3)& (0+255),w,b
 28890  017610  A4D8               	btfss	status,2,c
 28891  017612  D01C               	goto	l17194
 28892                           
 28893                           ; BSR set to: 2
 28894  017614  5143               	movf	___fladd@grs& (0+255),w,b
 28895  017616  A4D8               	btfss	status,2,c
 28896  017618  D019               	goto	l17194
 28897                           
 28898                           ; BSR set to: 2
 28899  01761A  0E00               	movlw	0
 28900  01761C  6F34               	movwf	?___fladd& (0+255),b
 28901  01761E  0E00               	movlw	0
 28902  017620  6F35               	movwf	(?___fladd+1)& (0+255),b
 28903  017622  0E00               	movlw	0
 28904  017624  6F36               	movwf	(?___fladd+2)& (0+255),b
 28905  017626  0E00               	movlw	0
 28906  017628  6F37               	movwf	(?___fladd+3)& (0+255),b
 28907  01762A  0012               	return	
 28908  01762C                     l17178:
 28909                           
 28910                           ; BSR set to: 2
 28911  01762C  90D8               	bcf	status,0,c
 28912  01762E  3734               	rlcf	___fladd@b& (0+255),f,b
 28913  017630  3735               	rlcf	(___fladd@b+1)& (0+255),f,b
 28914  017632  3736               	rlcf	(___fladd@b+2)& (0+255),f,b
 28915  017634  3737               	rlcf	(___fladd@b+3)& (0+255),f,b
 28916                           
 28917                           ; BSR set to: 2
 28918  017636  BF43               	btfsc	___fladd@grs& (0+255),7,b
 28919                           
 28920                           ; BSR set to: 2
 28921  017638  8134               	bsf	___fladd@b& (0+255),0,b
 28922                           
 28923                           ; BSR set to: 2
 28924  01763A  A143               	btfss	___fladd@grs& (0+255),0,b
 28925  01763C  D002               	goto	l17188
 28926                           
 28927                           ; BSR set to: 2
 28928  01763E  80D8               	bsf	status,0,c
 28929  017640  D001               	goto	L20
 28930  017642                     l17188:
 28931                           
 28932                           ; BSR set to: 2
 28933  017642  90D8               	bcf	status,0,c
 28934  017644                     L20:
 28935  017644  3743               	rlcf	___fladd@grs& (0+255),f,b
 28936                           
 28937                           ; BSR set to: 2
 28938  017646  5142               	movf	___fladd@bexp& (0+255),w,b
 28939  017648  A4D8               	btfss	status,2,c
 28940                           
 28941                           ; BSR set to: 2
 28942  01764A  0742               	decf	___fladd@bexp& (0+255),f,b
 28943  01764C                     l17194:
 28944                           
 28945                           ; BSR set to: 2
 28946  01764C  AF36               	btfss	(___fladd@b+2)& (0+255),7,b
 28947  01764E  D7EE               	goto	l17178
 28948  017650                     u20740:
 28949                           
 28950                           ; BSR set to: 2
 28951  017650  0E00               	movlw	0
 28952  017652  6F41               	movwf	___fladd@aexp& (0+255),b
 28953                           
 28954                           ; BSR set to: 2
 28955  017654  AF43               	btfss	___fladd@grs& (0+255),7,b
 28956  017656  D00B               	goto	l3231
 28957                           
 28958                           ; BSR set to: 2
 28959  017658  C243  F23C         	movff	___fladd@grs,??___fladd
 28960  01765C  0E7F               	movlw	127
 28961  01765E  173C               	andwf	??___fladd& (0+255),f,b
 28962  017660  B4D8               	btfsc	status,2,c
 28963  017662  D003               	goto	l3232
 28964  017664                     u20760:
 28965                           
 28966                           ; BSR set to: 2
 28967  017664  0E01               	movlw	1
 28968  017666  6F41               	movwf	___fladd@aexp& (0+255),b
 28969  017668  D002               	goto	l3231
 28970  01766A                     l3232:
 28971                           
 28972                           ; BSR set to: 2
 28973  01766A  B134               	btfsc	___fladd@b& (0+255),0,b
 28974  01766C  D7FB               	goto	u20760
 28975  01766E                     l3231:
 28976                           
 28977                           ; BSR set to: 2
 28978  01766E  5141               	movf	___fladd@aexp& (0+255),w,b
 28979  017670  B4D8               	btfsc	status,2,c
 28980  017672  D020               	goto	l17214
 28981                           
 28982                           ; BSR set to: 2
 28983  017674  0E01               	movlw	1
 28984  017676  2734               	addwf	___fladd@b& (0+255),f,b
 28985  017678  0E00               	movlw	0
 28986  01767A  2335               	addwfc	(___fladd@b+1)& (0+255),f,b
 28987  01767C  2336               	addwfc	(___fladd@b+2)& (0+255),f,b
 28988  01767E  2337               	addwfc	(___fladd@b+3)& (0+255),f,b
 28989                           
 28990                           ; BSR set to: 2
 28991  017680  A137               	btfss	(___fladd@b+3)& (0+255),0,b
 28992  017682  D018               	goto	l17214
 28993                           
 28994                           ; BSR set to: 2
 28995  017684  C234  F23C         	movff	___fladd@b,??___fladd
 28996  017688  C235  F23D         	movff	___fladd@b+1,??___fladd+1
 28997  01768C  C236  F23E         	movff	___fladd@b+2,??___fladd+2
 28998  017690  C237  F23F         	movff	___fladd@b+3,??___fladd+3
 28999  017694  353F               	rlcf	(??___fladd+3)& (0+255),w,b
 29000  017696  333F               	rrcf	(??___fladd+3)& (0+255),f,b
 29001  017698  333E               	rrcf	(??___fladd+2)& (0+255),f,b
 29002  01769A  333D               	rrcf	(??___fladd+1)& (0+255),f,b
 29003  01769C  333C               	rrcf	??___fladd& (0+255),f,b
 29004  01769E  C23C  F234         	movff	??___fladd,___fladd@b
 29005  0176A2  C23D  F235         	movff	??___fladd+1,___fladd@b+1
 29006  0176A6  C23E  F236         	movff	??___fladd+2,___fladd@b+2
 29007  0176AA  C23F  F237         	movff	??___fladd+3,___fladd@b+3
 29008  0176AE  2942               	incf	___fladd@bexp& (0+255),w,b
 29009  0176B0  A4D8               	btfss	status,2,c
 29010                           
 29011                           ; BSR set to: 2
 29012  0176B2  2B42               	incf	___fladd@bexp& (0+255),f,b
 29013  0176B4                     l17214:
 29014                           
 29015                           ; BSR set to: 2
 29016  0176B4  2942               	incf	___fladd@bexp& (0+255),w,b
 29017  0176B6  B4D8               	btfsc	status,2,c
 29018  0176B8  D003               	goto	u20820
 29019                           
 29020                           ; BSR set to: 2
 29021  0176BA  5142               	movf	___fladd@bexp& (0+255),w,b
 29022  0176BC  A4D8               	btfss	status,2,c
 29023  0176BE  D00D               	goto	l17222
 29024  0176C0                     u20820:
 29025                           
 29026                           ; BSR set to: 2
 29027  0176C0  0E00               	movlw	0
 29028  0176C2  6F34               	movwf	___fladd@b& (0+255),b
 29029  0176C4  0E00               	movlw	0
 29030  0176C6  6F35               	movwf	(___fladd@b+1)& (0+255),b
 29031  0176C8  0E00               	movlw	0
 29032  0176CA  6F36               	movwf	(___fladd@b+2)& (0+255),b
 29033  0176CC  0E00               	movlw	0
 29034  0176CE  6F37               	movwf	(___fladd@b+3)& (0+255),b
 29035  0176D0  5142               	movf	___fladd@bexp& (0+255),w,b
 29036  0176D2  A4D8               	btfss	status,2,c
 29037  0176D4  D002               	goto	l17222
 29038                           
 29039                           ; BSR set to: 2
 29040  0176D6  0E00               	movlw	0
 29041  0176D8  6F40               	movwf	___fladd@signs& (0+255),b
 29042  0176DA                     l17222:
 29043                           
 29044                           ; BSR set to: 2
 29045  0176DA  A142               	btfss	___fladd@bexp& (0+255),0,b
 29046  0176DC  D002               	goto	l17226
 29047                           
 29048                           ; BSR set to: 2
 29049  0176DE  8F36               	bsf	(___fladd@b+2)& (0+255),7,b
 29050  0176E0  D001               	goto	l17228
 29051  0176E2                     l17226:
 29052                           
 29053                           ; BSR set to: 2
 29054  0176E2  9F36               	bcf	(___fladd@b+2)& (0+255),7,b
 29055  0176E4                     l17228:
 29056                           
 29057                           ; BSR set to: 2
 29058  0176E4  90D8               	bcf	status,0,c
 29059  0176E6  3142               	rrcf	___fladd@bexp& (0+255),w,b
 29060  0176E8  6F37               	movwf	(___fladd@b+3)& (0+255),b
 29061                           
 29062                           ; BSR set to: 2
 29063  0176EA  BF40               	btfsc	___fladd@signs& (0+255),7,b
 29064                           
 29065                           ; BSR set to: 2
 29066  0176EC  8F37               	bsf	(___fladd@b+3)& (0+255),7,b
 29067                           
 29068                           ; BSR set to: 2
 29069  0176EE  C234  F234         	movff	___fladd@b,?___fladd
 29070  0176F2  C235  F235         	movff	___fladd@b+1,?___fladd+1
 29071  0176F6  C236  F236         	movff	___fladd@b+2,?___fladd+2
 29072  0176FA  C237  F237         	movff	___fladd@b+3,?___fladd+3
 29073                           
 29074                           ; BSR set to: 2
 29075  0176FE  0012               	return		;funcret
 29076  017700                     __end_of___fladd:
 29077                           	opt callstack 0
 29078                           
 29079 ;; *************** function ___flneg *****************
 29080 ;; Defined at:
 29081 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
 29082 ;; Parameters:    Size  Location     Type
 29083 ;;  f1              4    0[BANK2 ] unsigned char 
 29084 ;; Auto vars:     Size  Location     Type
 29085 ;;		None
 29086 ;; Return value:  Size  Location     Type
 29087 ;;                  4    0[BANK2 ] unsigned char 
 29088 ;; Registers used:
 29089 ;;		wreg, status,2, status,0
 29090 ;; Tracked objects:
 29091 ;;		On entry : 0/0
 29092 ;;		On exit  : 0/0
 29093 ;;		Unchanged: 0/0
 29094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29095 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29098 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29099 ;;Total ram usage:        4 bytes
 29100 ;; Hardware stack levels used:    1
 29101 ;; Hardware stack levels required when called:   11
 29102 ;; This function calls:
 29103 ;;		Nothing
 29104 ;; This function is called by:
 29105 ;;		__doprnt
 29106 ;;		_ftoa
 29107 ;; This function uses a non-reentrant model
 29108 ;;
 29109                           
 29110                           	psect	text97
 29111  01C396                     __ptext97:
 29112                           	opt callstack 0
 29113  01C396                     ___flneg:
 29114                           	opt callstack 14
 29115                           
 29116                           ; BSR set to: 2
 29117                           ;incstack = 0
 29118  01C396  0102               	movlb	2	; () banked
 29119  01C398  5100               	movf	___flneg@f1& (0+255),w,b
 29120  01C39A  1101               	iorwf	(___flneg@f1+1)& (0+255),w,b
 29121  01C39C  1102               	iorwf	(___flneg@f1+2)& (0+255),w,b
 29122  01C39E  1103               	iorwf	(___flneg@f1+3)& (0+255),w,b
 29123  01C3A0  B4D8               	btfsc	status,2,c
 29124  01C3A2  D008               	goto	l17752
 29125                           
 29126                           ; BSR set to: 2
 29127  01C3A4  0E00               	movlw	0
 29128  01C3A6  1B00               	xorwf	___flneg@f1& (0+255),f,b
 29129  01C3A8  0E00               	movlw	0
 29130  01C3AA  1B01               	xorwf	(___flneg@f1+1)& (0+255),f,b
 29131  01C3AC  0E00               	movlw	0
 29132  01C3AE  1B02               	xorwf	(___flneg@f1+2)& (0+255),f,b
 29133  01C3B0  0E80               	movlw	128
 29134  01C3B2  1B03               	xorwf	(___flneg@f1+3)& (0+255),f,b
 29135  01C3B4                     l17752:
 29136                           
 29137                           ; BSR set to: 2
 29138  01C3B4  C200  F200         	movff	___flneg@f1,?___flneg
 29139  01C3B8  C201  F201         	movff	___flneg@f1+1,?___flneg+1
 29140  01C3BC  C202  F202         	movff	___flneg@f1+2,?___flneg+2
 29141  01C3C0  C203  F203         	movff	___flneg@f1+3,?___flneg+3
 29142                           
 29143                           ; BSR set to: 2
 29144  01C3C4  0012               	return		;funcret
 29145  01C3C6                     __end_of___flneg:
 29146                           	opt callstack 0
 29147                           
 29148 ;; *************** function ___flge *****************
 29149 ;; Defined at:
 29150 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
 29151 ;; Parameters:    Size  Location     Type
 29152 ;;  ff1             4   76[BANK2 ] unsigned char 
 29153 ;;  ff2             4   80[BANK2 ] unsigned char 
 29154 ;; Auto vars:     Size  Location     Type
 29155 ;;		None
 29156 ;; Return value:  Size  Location     Type
 29157 ;;		None               void
 29158 ;; Registers used:
 29159 ;;		wreg, status,2, status,0
 29160 ;; Tracked objects:
 29161 ;;		On entry : 0/0
 29162 ;;		On exit  : 0/0
 29163 ;;		Unchanged: 0/0
 29164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29165 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29167 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29168 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29169 ;;Total ram usage:       12 bytes
 29170 ;; Hardware stack levels used:    1
 29171 ;; Hardware stack levels required when called:   11
 29172 ;; This function calls:
 29173 ;;		Nothing
 29174 ;; This function is called by:
 29175 ;;		_printCurrentMeasurements
 29176 ;;		_floatToEngineeringFormat
 29177 ;;		__doprnt
 29178 ;; This function uses a non-reentrant model
 29179 ;;
 29180                           
 29181                           	psect	text98
 29182  01A6C6                     __ptext98:
 29183                           	opt callstack 0
 29184  01A6C6                     ___flge:
 29185                           	opt callstack 14
 29186                           
 29187                           ; BSR set to: 2
 29188                           ;incstack = 0
 29189  01A6C6  0E00               	movlw	0
 29190  01A6C8  0102               	movlb	2	; () banked
 29191  01A6CA  154C               	andwf	___flge@ff1& (0+255),w,b
 29192  01A6CC  6F54               	movwf	??___flge& (0+255),b
 29193  01A6CE  0E00               	movlw	0
 29194  01A6D0  154D               	andwf	(___flge@ff1+1)& (0+255),w,b
 29195  01A6D2  6F55               	movwf	(??___flge+1)& (0+255),b
 29196  01A6D4  0E80               	movlw	128
 29197  01A6D6  154E               	andwf	(___flge@ff1+2)& (0+255),w,b
 29198  01A6D8  6F56               	movwf	(??___flge+2)& (0+255),b
 29199  01A6DA  0E7F               	movlw	127
 29200  01A6DC  154F               	andwf	(___flge@ff1+3)& (0+255),w,b
 29201  01A6DE  6F57               	movwf	(??___flge+3)& (0+255),b
 29202  01A6E0  5154               	movf	??___flge& (0+255),w,b
 29203  01A6E2  1155               	iorwf	(??___flge+1)& (0+255),w,b
 29204  01A6E4  1156               	iorwf	(??___flge+2)& (0+255),w,b
 29205  01A6E6  1157               	iorwf	(??___flge+3)& (0+255),w,b
 29206  01A6E8  A4D8               	btfss	status,2,c
 29207  01A6EA  D008               	goto	l17730
 29208                           
 29209                           ; BSR set to: 2
 29210  01A6EC  0E00               	movlw	0
 29211  01A6EE  6F4C               	movwf	___flge@ff1& (0+255),b
 29212  01A6F0  0E00               	movlw	0
 29213  01A6F2  6F4D               	movwf	(___flge@ff1+1)& (0+255),b
 29214  01A6F4  0E00               	movlw	0
 29215  01A6F6  6F4E               	movwf	(___flge@ff1+2)& (0+255),b
 29216  01A6F8  0E00               	movlw	0
 29217  01A6FA  6F4F               	movwf	(___flge@ff1+3)& (0+255),b
 29218  01A6FC                     l17730:
 29219                           
 29220                           ; BSR set to: 2
 29221  01A6FC  0E00               	movlw	0
 29222  01A6FE  1550               	andwf	___flge@ff2& (0+255),w,b
 29223  01A700  6F54               	movwf	??___flge& (0+255),b
 29224  01A702  0E00               	movlw	0
 29225  01A704  1551               	andwf	(___flge@ff2+1)& (0+255),w,b
 29226  01A706  6F55               	movwf	(??___flge+1)& (0+255),b
 29227  01A708  0E80               	movlw	128
 29228  01A70A  1552               	andwf	(___flge@ff2+2)& (0+255),w,b
 29229  01A70C  6F56               	movwf	(??___flge+2)& (0+255),b
 29230  01A70E  0E7F               	movlw	127
 29231  01A710  1553               	andwf	(___flge@ff2+3)& (0+255),w,b
 29232  01A712  6F57               	movwf	(??___flge+3)& (0+255),b
 29233  01A714  5154               	movf	??___flge& (0+255),w,b
 29234  01A716  1155               	iorwf	(??___flge+1)& (0+255),w,b
 29235  01A718  1156               	iorwf	(??___flge+2)& (0+255),w,b
 29236  01A71A  1157               	iorwf	(??___flge+3)& (0+255),w,b
 29237  01A71C  A4D8               	btfss	status,2,c
 29238  01A71E  D008               	goto	l17734
 29239                           
 29240                           ; BSR set to: 2
 29241  01A720  0E00               	movlw	0
 29242  01A722  6F50               	movwf	___flge@ff2& (0+255),b
 29243  01A724  0E00               	movlw	0
 29244  01A726  6F51               	movwf	(___flge@ff2+1)& (0+255),b
 29245  01A728  0E00               	movlw	0
 29246  01A72A  6F52               	movwf	(___flge@ff2+2)& (0+255),b
 29247  01A72C  0E00               	movlw	0
 29248  01A72E  6F53               	movwf	(___flge@ff2+3)& (0+255),b
 29249  01A730                     l17734:
 29250                           
 29251                           ; BSR set to: 2
 29252  01A730  AF4F               	btfss	(___flge@ff1+3)& (0+255),7,b
 29253  01A732  D009               	goto	l17738
 29254                           
 29255                           ; BSR set to: 2
 29256  01A734  6D4C               	negf	___flge@ff1& (0+255),b
 29257  01A736  1F4D               	comf	(___flge@ff1+1)& (0+255),f,b
 29258  01A738  B0D8               	btfsc	status,0,c
 29259  01A73A  2B4D               	incf	(___flge@ff1+1)& (0+255),f,b
 29260  01A73C  1F4E               	comf	(___flge@ff1+2)& (0+255),f,b
 29261  01A73E  B0D8               	btfsc	status,0,c
 29262  01A740  2B4E               	incf	(___flge@ff1+2)& (0+255),f,b
 29263  01A742  0E80               	movlw	128
 29264  01A744  574F               	subfwb	(___flge@ff1+3)& (0+255),f,b
 29265  01A746                     l17738:
 29266                           
 29267                           ; BSR set to: 2
 29268  01A746  AF53               	btfss	(___flge@ff2+3)& (0+255),7,b
 29269  01A748  D009               	goto	l2933
 29270                           
 29271                           ; BSR set to: 2
 29272  01A74A  6D50               	negf	___flge@ff2& (0+255),b
 29273  01A74C  1F51               	comf	(___flge@ff2+1)& (0+255),f,b
 29274  01A74E  B0D8               	btfsc	status,0,c
 29275  01A750  2B51               	incf	(___flge@ff2+1)& (0+255),f,b
 29276  01A752  1F52               	comf	(___flge@ff2+2)& (0+255),f,b
 29277  01A754  B0D8               	btfsc	status,0,c
 29278  01A756  2B52               	incf	(___flge@ff2+2)& (0+255),f,b
 29279  01A758  0E80               	movlw	128
 29280  01A75A  5753               	subfwb	(___flge@ff2+3)& (0+255),f,b
 29281  01A75C                     l2933:
 29282                           
 29283                           ; BSR set to: 2
 29284  01A75C  0E00               	movlw	0
 29285  01A75E  1B4C               	xorwf	___flge@ff1& (0+255),f,b
 29286  01A760  0E00               	movlw	0
 29287  01A762  1B4D               	xorwf	(___flge@ff1+1)& (0+255),f,b
 29288  01A764  0E00               	movlw	0
 29289  01A766  1B4E               	xorwf	(___flge@ff1+2)& (0+255),f,b
 29290  01A768  0E80               	movlw	128
 29291  01A76A  1B4F               	xorwf	(___flge@ff1+3)& (0+255),f,b
 29292  01A76C  0E00               	movlw	0
 29293  01A76E  1B50               	xorwf	___flge@ff2& (0+255),f,b
 29294  01A770  0E00               	movlw	0
 29295  01A772  1B51               	xorwf	(___flge@ff2+1)& (0+255),f,b
 29296  01A774  0E00               	movlw	0
 29297  01A776  1B52               	xorwf	(___flge@ff2+2)& (0+255),f,b
 29298  01A778  0E80               	movlw	128
 29299  01A77A  1B53               	xorwf	(___flge@ff2+3)& (0+255),f,b
 29300  01A77C  5150               	movf	___flge@ff2& (0+255),w,b
 29301  01A77E  5D4C               	subwf	___flge@ff1& (0+255),w,b
 29302  01A780  5151               	movf	(___flge@ff2+1)& (0+255),w,b
 29303  01A782  594D               	subwfb	(___flge@ff1+1)& (0+255),w,b
 29304  01A784  5152               	movf	(___flge@ff2+2)& (0+255),w,b
 29305  01A786  594E               	subwfb	(___flge@ff1+2)& (0+255),w,b
 29306  01A788  5153               	movf	(___flge@ff2+3)& (0+255),w,b
 29307  01A78A  594F               	subwfb	(___flge@ff1+3)& (0+255),w,b
 29308  01A78C  B0D8               	btfsc	status,0,c
 29309  01A78E  D002               	goto	l17744
 29310                           
 29311                           ; BSR set to: 2
 29312  01A790  90D8               	bcf	status,0,c
 29313  01A792  0012               	return	
 29314  01A794                     l17744:
 29315                           
 29316                           ; BSR set to: 2
 29317  01A794  80D8               	bsf	status,0,c
 29318                           
 29319                           ; BSR set to: 2
 29320  01A796  0012               	return		;funcret
 29321  01A798                     __end_of___flge:
 29322                           	opt callstack 0
 29323                           
 29324 ;; *************** function ___fleq *****************
 29325 ;; Defined at:
 29326 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
 29327 ;; Parameters:    Size  Location     Type
 29328 ;;  ff1             4    0[BANK2 ] unsigned char 
 29329 ;;  ff2             4    4[BANK2 ] unsigned char 
 29330 ;; Auto vars:     Size  Location     Type
 29331 ;;		None
 29332 ;; Return value:  Size  Location     Type
 29333 ;;		None               void
 29334 ;; Registers used:
 29335 ;;		wreg, status,2, status,0
 29336 ;; Tracked objects:
 29337 ;;		On entry : 0/0
 29338 ;;		On exit  : 0/0
 29339 ;;		Unchanged: 0/0
 29340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29341 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29343 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29344 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29345 ;;Total ram usage:       12 bytes
 29346 ;; Hardware stack levels used:    1
 29347 ;; Hardware stack levels required when called:   11
 29348 ;; This function calls:
 29349 ;;		Nothing
 29350 ;; This function is called by:
 29351 ;;		_floatToEngineeringFormat
 29352 ;;		__doprnt
 29353 ;; This function uses a non-reentrant model
 29354 ;;
 29355                           
 29356                           	psect	text99
 29357  01B136                     __ptext99:
 29358                           	opt callstack 0
 29359  01B136                     ___fleq:
 29360                           	opt callstack 14
 29361                           
 29362                           ; BSR set to: 2
 29363                           ;incstack = 0
 29364  01B136  0E00               	movlw	0
 29365  01B138  0102               	movlb	2	; () banked
 29366  01B13A  1500               	andwf	___fleq@ff1& (0+255),w,b
 29367  01B13C  6F08               	movwf	??___fleq& (0+255),b
 29368  01B13E  0E00               	movlw	0
 29369  01B140  1501               	andwf	(___fleq@ff1+1)& (0+255),w,b
 29370  01B142  6F09               	movwf	(??___fleq+1)& (0+255),b
 29371  01B144  0E80               	movlw	128
 29372  01B146  1502               	andwf	(___fleq@ff1+2)& (0+255),w,b
 29373  01B148  6F0A               	movwf	(??___fleq+2)& (0+255),b
 29374  01B14A  0E7F               	movlw	127
 29375  01B14C  1503               	andwf	(___fleq@ff1+3)& (0+255),w,b
 29376  01B14E  6F0B               	movwf	(??___fleq+3)& (0+255),b
 29377  01B150  5108               	movf	??___fleq& (0+255),w,b
 29378  01B152  1109               	iorwf	(??___fleq+1)& (0+255),w,b
 29379  01B154  110A               	iorwf	(??___fleq+2)& (0+255),w,b
 29380  01B156  110B               	iorwf	(??___fleq+3)& (0+255),w,b
 29381  01B158  A4D8               	btfss	status,2,c
 29382  01B15A  D008               	goto	l17714
 29383                           
 29384                           ; BSR set to: 2
 29385  01B15C  0E00               	movlw	0
 29386  01B15E  6F00               	movwf	___fleq@ff1& (0+255),b
 29387  01B160  0E00               	movlw	0
 29388  01B162  6F01               	movwf	(___fleq@ff1+1)& (0+255),b
 29389  01B164  0E00               	movlw	0
 29390  01B166  6F02               	movwf	(___fleq@ff1+2)& (0+255),b
 29391  01B168  0E00               	movlw	0
 29392  01B16A  6F03               	movwf	(___fleq@ff1+3)& (0+255),b
 29393  01B16C                     l17714:
 29394                           
 29395                           ; BSR set to: 2
 29396  01B16C  0E00               	movlw	0
 29397  01B16E  1504               	andwf	___fleq@ff2& (0+255),w,b
 29398  01B170  6F08               	movwf	??___fleq& (0+255),b
 29399  01B172  0E00               	movlw	0
 29400  01B174  1505               	andwf	(___fleq@ff2+1)& (0+255),w,b
 29401  01B176  6F09               	movwf	(??___fleq+1)& (0+255),b
 29402  01B178  0E80               	movlw	128
 29403  01B17A  1506               	andwf	(___fleq@ff2+2)& (0+255),w,b
 29404  01B17C  6F0A               	movwf	(??___fleq+2)& (0+255),b
 29405  01B17E  0E7F               	movlw	127
 29406  01B180  1507               	andwf	(___fleq@ff2+3)& (0+255),w,b
 29407  01B182  6F0B               	movwf	(??___fleq+3)& (0+255),b
 29408  01B184  5108               	movf	??___fleq& (0+255),w,b
 29409  01B186  1109               	iorwf	(??___fleq+1)& (0+255),w,b
 29410  01B188  110A               	iorwf	(??___fleq+2)& (0+255),w,b
 29411  01B18A  110B               	iorwf	(??___fleq+3)& (0+255),w,b
 29412  01B18C  A4D8               	btfss	status,2,c
 29413  01B18E  D008               	goto	l17718
 29414                           
 29415                           ; BSR set to: 2
 29416  01B190  0E00               	movlw	0
 29417  01B192  6F04               	movwf	___fleq@ff2& (0+255),b
 29418  01B194  0E00               	movlw	0
 29419  01B196  6F05               	movwf	(___fleq@ff2+1)& (0+255),b
 29420  01B198  0E00               	movlw	0
 29421  01B19A  6F06               	movwf	(___fleq@ff2+2)& (0+255),b
 29422  01B19C  0E00               	movlw	0
 29423  01B19E  6F07               	movwf	(___fleq@ff2+3)& (0+255),b
 29424  01B1A0                     l17718:
 29425                           
 29426                           ; BSR set to: 2
 29427  01B1A0  5104               	movf	___fleq@ff2& (0+255),w,b
 29428  01B1A2  1900               	xorwf	___fleq@ff1& (0+255),w,b
 29429  01B1A4  E10A               	bnz	u21540
 29430  01B1A6  5105               	movf	(___fleq@ff2+1)& (0+255),w,b
 29431  01B1A8  1901               	xorwf	(___fleq@ff1+1)& (0+255),w,b
 29432  01B1AA  E107               	bnz	u21540
 29433  01B1AC  5106               	movf	(___fleq@ff2+2)& (0+255),w,b
 29434  01B1AE  1902               	xorwf	(___fleq@ff1+2)& (0+255),w,b
 29435  01B1B0  E104               	bnz	u21540
 29436  01B1B2  5107               	movf	(___fleq@ff2+3)& (0+255),w,b
 29437  01B1B4  1903               	xorwf	(___fleq@ff1+3)& (0+255),w,b
 29438  01B1B6  B4D8               	btfsc	status,2,c
 29439  01B1B8  D002               	goto	l17722
 29440  01B1BA                     u21540:
 29441                           
 29442                           ; BSR set to: 2
 29443  01B1BA  90D8               	bcf	status,0,c
 29444  01B1BC  0012               	return	
 29445  01B1BE                     l17722:
 29446                           
 29447                           ; BSR set to: 2
 29448  01B1BE  80D8               	bsf	status,0,c
 29449                           
 29450                           ; BSR set to: 2
 29451  01B1C0  0012               	return		;funcret
 29452  01B1C2                     __end_of___fleq:
 29453                           	opt callstack 0
 29454                           
 29455 ;; *************** function _abs *****************
 29456 ;; Defined at:
 29457 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\abs.c"
 29458 ;; Parameters:    Size  Location     Type
 29459 ;;  a               2   58[BANK2 ] int 
 29460 ;; Auto vars:     Size  Location     Type
 29461 ;;		None
 29462 ;; Return value:  Size  Location     Type
 29463 ;;                  2   58[BANK2 ] int 
 29464 ;; Registers used:
 29465 ;;		wreg, status,2, status,0
 29466 ;; Tracked objects:
 29467 ;;		On entry : 0/0
 29468 ;;		On exit  : 0/0
 29469 ;;		Unchanged: 0/0
 29470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29471 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29473 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29474 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29475 ;;Total ram usage:        4 bytes
 29476 ;; Hardware stack levels used:    1
 29477 ;; Hardware stack levels required when called:   11
 29478 ;; This function calls:
 29479 ;;		Nothing
 29480 ;; This function is called by:
 29481 ;;		_floatToEngineeringFormat
 29482 ;; This function uses a non-reentrant model
 29483 ;;
 29484                           
 29485                           	psect	text100
 29486  01C44C                     __ptext100:
 29487                           	opt callstack 0
 29488  01C44C                     _abs:
 29489                           	opt callstack 15
 29490                           
 29491                           ; BSR set to: 2
 29492                           ;incstack = 0
 29493  01C44C  0102               	movlb	2	; () banked
 29494  01C44E  AF3B               	btfss	(abs@a+1)& (0+255),7,b
 29495  01C450  D00D               	goto	l3351
 29496                           
 29497                           ; BSR set to: 2
 29498  01C452  C23A  F23C         	movff	abs@a,??_abs
 29499  01C456  C23B  F23D         	movff	abs@a+1,??_abs+1
 29500  01C45A  1F3C               	comf	??_abs& (0+255),f,b
 29501  01C45C  1F3D               	comf	(??_abs+1)& (0+255),f,b
 29502  01C45E  4B3C               	infsnz	??_abs& (0+255),f,b
 29503  01C460  2B3D               	incf	(??_abs+1)& (0+255),f,b
 29504  01C462  C23C  F23A         	movff	??_abs,?_abs
 29505  01C466  C23D  F23B         	movff	??_abs+1,?_abs+1
 29506  01C46A  0012               	return	
 29507  01C46C                     l3351:
 29508                           
 29509                           ; BSR set to: 2
 29510  01C46C  C23A  F23A         	movff	abs@a,?_abs
 29511  01C470  C23B  F23B         	movff	abs@a+1,?_abs+1
 29512                           
 29513                           ; BSR set to: 2
 29514  01C474  0012               	return		;funcret
 29515  01C476                     __end_of_abs:
 29516                           	opt callstack 0
 29517                           
 29518 ;; *************** function ___fldiv *****************
 29519 ;; Defined at:
 29520 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
 29521 ;; Parameters:    Size  Location     Type
 29522 ;;  b               4   39[BANK2 ] int 
 29523 ;;  a               4   43[BANK2 ] int 
 29524 ;; Auto vars:     Size  Location     Type
 29525 ;;  grs             4   58[BANK2 ] unsigned long 
 29526 ;;  rem             4   51[BANK2 ] unsigned long 
 29527 ;;  new_exp         2   56[BANK2 ] int 
 29528 ;;  aexp            1   63[BANK2 ] unsigned char 
 29529 ;;  bexp            1   62[BANK2 ] unsigned char 
 29530 ;;  sign            1   55[BANK2 ] unsigned char 
 29531 ;; Return value:  Size  Location     Type
 29532 ;;                  4   39[BANK2 ] unsigned char 
 29533 ;; Registers used:
 29534 ;;		wreg, status,2, status,0
 29535 ;; Tracked objects:
 29536 ;;		On entry : 0/0
 29537 ;;		On exit  : 0/0
 29538 ;;		Unchanged: 0/0
 29539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29540 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29541 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29542 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29543 ;;      Totals:         0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29544 ;;Total ram usage:       25 bytes
 29545 ;; Hardware stack levels used:    1
 29546 ;; Hardware stack levels required when called:   11
 29547 ;; This function calls:
 29548 ;;		Nothing
 29549 ;; This function is called by:
 29550 ;;		_floatToEngineeringFormat
 29551 ;; This function uses a non-reentrant model
 29552 ;;
 29553                           
 29554                           	psect	text101
 29555  01828C                     __ptext101:
 29556                           	opt callstack 0
 29557  01828C                     ___fldiv:
 29558                           	opt callstack 15
 29559                           
 29560                           ; BSR set to: 2
 29561                           ;incstack = 0
 29562  01828C  0102               	movlb	2	; () banked
 29563  01828E  512A               	movf	(___fldiv@b+3)& (0+255),w,b
 29564  018290  0B80               	andlw	128
 29565  018292  6F37               	movwf	___fldiv@sign& (0+255),b
 29566  018294  512A               	movf	(___fldiv@b+3)& (0+255),w,b
 29567  018296  252A               	addwf	(___fldiv@b+3)& (0+255),w,b
 29568  018298  6F3E               	movwf	___fldiv@bexp& (0+255),b
 29569                           
 29570                           ; BSR set to: 2
 29571  01829A  BF29               	btfsc	(___fldiv@b+2)& (0+255),7,b
 29572                           
 29573                           ; BSR set to: 2
 29574  01829C  813E               	bsf	___fldiv@bexp& (0+255),0,b
 29575                           
 29576                           ; BSR set to: 2
 29577  01829E  513E               	movf	___fldiv@bexp& (0+255),w,b
 29578  0182A0  B4D8               	btfsc	status,2,c
 29579  0182A2  D00D               	goto	l18594
 29580                           
 29581                           ; BSR set to: 2
 29582  0182A4  293E               	incf	___fldiv@bexp& (0+255),w,b
 29583  0182A6  A4D8               	btfss	status,2,c
 29584  0182A8  D008               	goto	l18590
 29585                           
 29586                           ; BSR set to: 2
 29587  0182AA  0E00               	movlw	0
 29588  0182AC  6F27               	movwf	___fldiv@b& (0+255),b
 29589  0182AE  0E00               	movlw	0
 29590  0182B0  6F28               	movwf	(___fldiv@b+1)& (0+255),b
 29591  0182B2  0E00               	movlw	0
 29592  0182B4  6F29               	movwf	(___fldiv@b+2)& (0+255),b
 29593  0182B6  0E00               	movlw	0
 29594  0182B8  6F2A               	movwf	(___fldiv@b+3)& (0+255),b
 29595  0182BA                     l18590:
 29596                           
 29597                           ; BSR set to: 2
 29598  0182BA  8F29               	bsf	(___fldiv@b+2)& (0+255),7,b
 29599  0182BC  D006               	goto	L21
 29600  0182BE                     l18594:
 29601                           
 29602                           ; BSR set to: 2
 29603  0182BE  0E00               	movlw	0
 29604  0182C0  6F27               	movwf	___fldiv@b& (0+255),b
 29605  0182C2  0E00               	movlw	0
 29606  0182C4  6F28               	movwf	(___fldiv@b+1)& (0+255),b
 29607  0182C6  0E00               	movlw	0
 29608  0182C8  6F29               	movwf	(___fldiv@b+2)& (0+255),b
 29609  0182CA                     L21:
 29610  0182CA  0E00               	movlw	0
 29611  0182CC  6F2A               	movwf	(___fldiv@b+3)& (0+255),b
 29612                           
 29613                           ; BSR set to: 2
 29614  0182CE  512E               	movf	(___fldiv@a+3)& (0+255),w,b
 29615  0182D0  0B80               	andlw	128
 29616  0182D2  1B37               	xorwf	___fldiv@sign& (0+255),f,b
 29617                           
 29618                           ; BSR set to: 2
 29619  0182D4  512E               	movf	(___fldiv@a+3)& (0+255),w,b
 29620  0182D6  252E               	addwf	(___fldiv@a+3)& (0+255),w,b
 29621  0182D8  6F3F               	movwf	___fldiv@aexp& (0+255),b
 29622                           
 29623                           ; BSR set to: 2
 29624  0182DA  BF2D               	btfsc	(___fldiv@a+2)& (0+255),7,b
 29625                           
 29626                           ; BSR set to: 2
 29627  0182DC  813F               	bsf	___fldiv@aexp& (0+255),0,b
 29628                           
 29629                           ; BSR set to: 2
 29630  0182DE  513F               	movf	___fldiv@aexp& (0+255),w,b
 29631  0182E0  B4D8               	btfsc	status,2,c
 29632  0182E2  D00D               	goto	l18614
 29633                           
 29634                           ; BSR set to: 2
 29635  0182E4  293F               	incf	___fldiv@aexp& (0+255),w,b
 29636  0182E6  A4D8               	btfss	status,2,c
 29637  0182E8  D008               	goto	l18610
 29638                           
 29639                           ; BSR set to: 2
 29640  0182EA  0E00               	movlw	0
 29641  0182EC  6F2B               	movwf	___fldiv@a& (0+255),b
 29642  0182EE  0E00               	movlw	0
 29643  0182F0  6F2C               	movwf	(___fldiv@a+1)& (0+255),b
 29644  0182F2  0E00               	movlw	0
 29645  0182F4  6F2D               	movwf	(___fldiv@a+2)& (0+255),b
 29646  0182F6  0E00               	movlw	0
 29647  0182F8  6F2E               	movwf	(___fldiv@a+3)& (0+255),b
 29648  0182FA                     l18610:
 29649                           
 29650                           ; BSR set to: 2
 29651  0182FA  8F2D               	bsf	(___fldiv@a+2)& (0+255),7,b
 29652  0182FC  D006               	goto	L22
 29653  0182FE                     l18614:
 29654                           
 29655                           ; BSR set to: 2
 29656  0182FE  0E00               	movlw	0
 29657  018300  6F2B               	movwf	___fldiv@a& (0+255),b
 29658  018302  0E00               	movlw	0
 29659  018304  6F2C               	movwf	(___fldiv@a+1)& (0+255),b
 29660  018306  0E00               	movlw	0
 29661  018308  6F2D               	movwf	(___fldiv@a+2)& (0+255),b
 29662  01830A                     L22:
 29663  01830A  0E00               	movlw	0
 29664  01830C  6F2E               	movwf	(___fldiv@a+3)& (0+255),b
 29665                           
 29666                           ; BSR set to: 2
 29667  01830E  512B               	movf	___fldiv@a& (0+255),w,b
 29668  018310  112C               	iorwf	(___fldiv@a+1)& (0+255),w,b
 29669  018312  112D               	iorwf	(___fldiv@a+2)& (0+255),w,b
 29670  018314  112E               	iorwf	(___fldiv@a+3)& (0+255),w,b
 29671  018316  A4D8               	btfss	status,2,c
 29672  018318  D017               	goto	l18628
 29673                           
 29674                           ; BSR set to: 2
 29675  01831A  0E00               	movlw	0
 29676  01831C  6F27               	movwf	___fldiv@b& (0+255),b
 29677  01831E  0E00               	movlw	0
 29678  018320  6F28               	movwf	(___fldiv@b+1)& (0+255),b
 29679  018322  0E00               	movlw	0
 29680  018324  6F29               	movwf	(___fldiv@b+2)& (0+255),b
 29681  018326  0E00               	movlw	0
 29682  018328  6F2A               	movwf	(___fldiv@b+3)& (0+255),b
 29683                           
 29684                           ; BSR set to: 2
 29685  01832A  0E80               	movlw	128
 29686  01832C  1329               	iorwf	(___fldiv@b+2)& (0+255),f,b
 29687  01832E  0E7F               	movlw	127
 29688  018330  132A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 29689  018332                     l18622:
 29690                           
 29691                           ; BSR set to: 2
 29692  018332  5137               	movf	___fldiv@sign& (0+255),w,b
 29693  018334  132A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 29694                           
 29695                           ; BSR set to: 2
 29696  018336  C227  F227         	movff	___fldiv@b,?___fldiv
 29697  01833A  C228  F228         	movff	___fldiv@b+1,?___fldiv+1
 29698  01833E  C229  F229         	movff	___fldiv@b+2,?___fldiv+2
 29699  018342  C22A  F22A         	movff	___fldiv@b+3,?___fldiv+3
 29700  018346  0012               	return	
 29701  018348                     l18628:
 29702                           
 29703                           ; BSR set to: 2
 29704  018348  513E               	movf	___fldiv@bexp& (0+255),w,b
 29705  01834A  A4D8               	btfss	status,2,c
 29706  01834C  D009               	goto	l18636
 29707                           
 29708                           ; BSR set to: 2
 29709                           
 29710                           ; BSR set to: 2
 29711  01834E  0E00               	movlw	0
 29712  018350  6F27               	movwf	?___fldiv& (0+255),b
 29713  018352  0E00               	movlw	0
 29714  018354  6F28               	movwf	(?___fldiv+1)& (0+255),b
 29715  018356  0E00               	movlw	0
 29716  018358  6F29               	movwf	(?___fldiv+2)& (0+255),b
 29717  01835A  0E00               	movlw	0
 29718  01835C  6F2A               	movwf	(?___fldiv+3)& (0+255),b
 29719  01835E  0012               	return	
 29720  018360                     l18636:
 29721                           
 29722                           ; BSR set to: 2
 29723  018360  513F               	movf	___fldiv@aexp& (0+255),w,b
 29724  018362  C23E  F22F         	movff	___fldiv@bexp,??___fldiv
 29725  018366  6B30               	clrf	(??___fldiv+1)& (0+255),b
 29726  018368  5F2F               	subwf	??___fldiv& (0+255),f,b
 29727  01836A  0E00               	movlw	0
 29728  01836C  5B30               	subwfb	(??___fldiv+1)& (0+255),f,b
 29729  01836E  0E7F               	movlw	127
 29730  018370  252F               	addwf	??___fldiv& (0+255),w,b
 29731  018372  6F38               	movwf	___fldiv@new_exp& (0+255),b
 29732  018374  0E00               	movlw	0
 29733  018376  2130               	addwfc	(??___fldiv+1)& (0+255),w,b
 29734  018378  6F39               	movwf	(___fldiv@new_exp+1)& (0+255),b
 29735                           
 29736                           ; BSR set to: 2
 29737  01837A  C227  F233         	movff	___fldiv@b,___fldiv@rem
 29738  01837E  C228  F234         	movff	___fldiv@b+1,___fldiv@rem+1
 29739  018382  C229  F235         	movff	___fldiv@b+2,___fldiv@rem+2
 29740  018386  C22A  F236         	movff	___fldiv@b+3,___fldiv@rem+3
 29741                           
 29742                           ; BSR set to: 2
 29743  01838A  0E00               	movlw	0
 29744  01838C  6F27               	movwf	___fldiv@b& (0+255),b
 29745  01838E  0E00               	movlw	0
 29746  018390  6F28               	movwf	(___fldiv@b+1)& (0+255),b
 29747  018392  0E00               	movlw	0
 29748  018394  6F29               	movwf	(___fldiv@b+2)& (0+255),b
 29749  018396  0E00               	movlw	0
 29750  018398  6F2A               	movwf	(___fldiv@b+3)& (0+255),b
 29751                           
 29752                           ; BSR set to: 2
 29753  01839A  0E00               	movlw	0
 29754  01839C  6F3A               	movwf	___fldiv@grs& (0+255),b
 29755  01839E  0E00               	movlw	0
 29756  0183A0  6F3B               	movwf	(___fldiv@grs+1)& (0+255),b
 29757  0183A2  0E00               	movlw	0
 29758  0183A4  6F3C               	movwf	(___fldiv@grs+2)& (0+255),b
 29759  0183A6  0E00               	movlw	0
 29760  0183A8  6F3D               	movwf	(___fldiv@grs+3)& (0+255),b
 29761                           
 29762                           ; BSR set to: 2
 29763  0183AA  0E00               	movlw	0
 29764  0183AC  6F3F               	movwf	___fldiv@aexp& (0+255),b
 29765  0183AE  D028               	goto	l3261
 29766  0183B0                     l18646:
 29767                           
 29768                           ; BSR set to: 2
 29769  0183B0  513F               	movf	___fldiv@aexp& (0+255),w,b
 29770  0183B2  B4D8               	btfsc	status,2,c
 29771  0183B4  D011               	goto	l18654
 29772                           
 29773                           ; BSR set to: 2
 29774  0183B6  90D8               	bcf	status,0,c
 29775  0183B8  3733               	rlcf	___fldiv@rem& (0+255),f,b
 29776  0183BA  3734               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 29777  0183BC  3735               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 29778  0183BE  3736               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 29779  0183C0  90D8               	bcf	status,0,c
 29780  0183C2  3727               	rlcf	___fldiv@b& (0+255),f,b
 29781  0183C4  3728               	rlcf	(___fldiv@b+1)& (0+255),f,b
 29782  0183C6  3729               	rlcf	(___fldiv@b+2)& (0+255),f,b
 29783  0183C8  372A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 29784                           
 29785                           ; BSR set to: 2
 29786  0183CA  BF3D               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 29787                           
 29788                           ; BSR set to: 2
 29789  0183CC  8127               	bsf	___fldiv@b& (0+255),0,b
 29790                           
 29791                           ; BSR set to: 2
 29792  0183CE  90D8               	bcf	status,0,c
 29793  0183D0  373A               	rlcf	___fldiv@grs& (0+255),f,b
 29794  0183D2  373B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 29795  0183D4  373C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 29796  0183D6  373D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 29797  0183D8                     l18654:
 29798                           
 29799                           ; BSR set to: 2
 29800  0183D8  512B               	movf	___fldiv@a& (0+255),w,b
 29801  0183DA  5D33               	subwf	___fldiv@rem& (0+255),w,b
 29802  0183DC  512C               	movf	(___fldiv@a+1)& (0+255),w,b
 29803  0183DE  5934               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 29804  0183E0  512D               	movf	(___fldiv@a+2)& (0+255),w,b
 29805  0183E2  5935               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 29806  0183E4  512E               	movf	(___fldiv@a+3)& (0+255),w,b
 29807  0183E6  5936               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 29808  0183E8  A0D8               	btfss	status,0,c
 29809  0183EA  D009               	goto	l18660
 29810                           
 29811                           ; BSR set to: 2
 29812  0183EC  8D3D               	bsf	(___fldiv@grs+3)& (0+255),6,b
 29813                           
 29814                           ; BSR set to: 2
 29815  0183EE  512B               	movf	___fldiv@a& (0+255),w,b
 29816  0183F0  5F33               	subwf	___fldiv@rem& (0+255),f,b
 29817  0183F2  512C               	movf	(___fldiv@a+1)& (0+255),w,b
 29818  0183F4  5B34               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 29819  0183F6  512D               	movf	(___fldiv@a+2)& (0+255),w,b
 29820  0183F8  5B35               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 29821  0183FA  512E               	movf	(___fldiv@a+3)& (0+255),w,b
 29822  0183FC  5B36               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 29823  0183FE                     l18660:
 29824                           
 29825                           ; BSR set to: 2
 29826  0183FE  2B3F               	incf	___fldiv@aexp& (0+255),f,b
 29827  018400                     l3261:
 29828                           
 29829                           ; BSR set to: 2
 29830  018400  0E19               	movlw	25
 29831  018402  653F               	cpfsgt	___fldiv@aexp& (0+255),b
 29832  018404  D7D5               	goto	l18646
 29833                           
 29834                           ; BSR set to: 2
 29835  018406  5133               	movf	___fldiv@rem& (0+255),w,b
 29836  018408  1134               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 29837  01840A  1135               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 29838  01840C  1136               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 29839  01840E  B4D8               	btfsc	status,2,c
 29840  018410  D011               	goto	l18672
 29841                           
 29842                           ; BSR set to: 2
 29843  018412  813A               	bsf	___fldiv@grs& (0+255),0,b
 29844  018414  D00F               	goto	l18672
 29845  018416                     l18666:
 29846                           
 29847                           ; BSR set to: 2
 29848  018416  90D8               	bcf	status,0,c
 29849  018418  3727               	rlcf	___fldiv@b& (0+255),f,b
 29850  01841A  3728               	rlcf	(___fldiv@b+1)& (0+255),f,b
 29851  01841C  3729               	rlcf	(___fldiv@b+2)& (0+255),f,b
 29852  01841E  372A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 29853                           
 29854                           ; BSR set to: 2
 29855  018420  BF3D               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 29856                           
 29857                           ; BSR set to: 2
 29858  018422  8127               	bsf	___fldiv@b& (0+255),0,b
 29859                           
 29860                           ; BSR set to: 2
 29861  018424  90D8               	bcf	status,0,c
 29862  018426  373A               	rlcf	___fldiv@grs& (0+255),f,b
 29863  018428  373B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 29864  01842A  373C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 29865  01842C  373D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 29866  01842E  0738               	decf	___fldiv@new_exp& (0+255),f,b
 29867  018430  A0D8               	btfss	status,0,c
 29868  018432  0739               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 29869  018434                     l18672:
 29870                           
 29871                           ; BSR set to: 2
 29872  018434  AF29               	btfss	(___fldiv@b+2)& (0+255),7,b
 29873  018436  D7EF               	goto	l18666
 29874                           
 29875                           ; BSR set to: 2
 29876  018438  0E00               	movlw	0
 29877  01843A  6F3F               	movwf	___fldiv@aexp& (0+255),b
 29878                           
 29879                           ; BSR set to: 2
 29880  01843C  AF3D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 29881  01843E  D017               	goto	l3272
 29882                           
 29883                           ; BSR set to: 2
 29884  018440  0EFF               	movlw	255
 29885  018442  153A               	andwf	___fldiv@grs& (0+255),w,b
 29886  018444  6F2F               	movwf	??___fldiv& (0+255),b
 29887  018446  0EFF               	movlw	255
 29888  018448  153B               	andwf	(___fldiv@grs+1)& (0+255),w,b
 29889  01844A  6F30               	movwf	(??___fldiv+1)& (0+255),b
 29890  01844C  0EFF               	movlw	255
 29891  01844E  153C               	andwf	(___fldiv@grs+2)& (0+255),w,b
 29892  018450  6F31               	movwf	(??___fldiv+2)& (0+255),b
 29893  018452  0E7F               	movlw	127
 29894  018454  153D               	andwf	(___fldiv@grs+3)& (0+255),w,b
 29895  018456  6F32               	movwf	(??___fldiv+3)& (0+255),b
 29896  018458  512F               	movf	??___fldiv& (0+255),w,b
 29897  01845A  1130               	iorwf	(??___fldiv+1)& (0+255),w,b
 29898  01845C  1131               	iorwf	(??___fldiv+2)& (0+255),w,b
 29899  01845E  1132               	iorwf	(??___fldiv+3)& (0+255),w,b
 29900  018460  B4D8               	btfsc	status,2,c
 29901  018462  D003               	goto	l3273
 29902  018464                     u23550:
 29903                           
 29904                           ; BSR set to: 2
 29905  018464  0E01               	movlw	1
 29906  018466  6F3F               	movwf	___fldiv@aexp& (0+255),b
 29907  018468  D002               	goto	l3272
 29908  01846A                     l3273:
 29909                           
 29910                           ; BSR set to: 2
 29911  01846A  B127               	btfsc	___fldiv@b& (0+255),0,b
 29912  01846C  D7FB               	goto	u23550
 29913  01846E                     l3272:
 29914                           
 29915                           ; BSR set to: 2
 29916  01846E  513F               	movf	___fldiv@aexp& (0+255),w,b
 29917  018470  B4D8               	btfsc	status,2,c
 29918  018472  D01F               	goto	l18692
 29919                           
 29920                           ; BSR set to: 2
 29921  018474  0E01               	movlw	1
 29922  018476  2727               	addwf	___fldiv@b& (0+255),f,b
 29923  018478  0E00               	movlw	0
 29924  01847A  2328               	addwfc	(___fldiv@b+1)& (0+255),f,b
 29925  01847C  2329               	addwfc	(___fldiv@b+2)& (0+255),f,b
 29926  01847E  232A               	addwfc	(___fldiv@b+3)& (0+255),f,b
 29927                           
 29928                           ; BSR set to: 2
 29929  018480  A12A               	btfss	(___fldiv@b+3)& (0+255),0,b
 29930  018482  D017               	goto	l18692
 29931                           
 29932                           ; BSR set to: 2
 29933  018484  C227  F22F         	movff	___fldiv@b,??___fldiv
 29934  018488  C228  F230         	movff	___fldiv@b+1,??___fldiv+1
 29935  01848C  C229  F231         	movff	___fldiv@b+2,??___fldiv+2
 29936  018490  C22A  F232         	movff	___fldiv@b+3,??___fldiv+3
 29937  018494  3532               	rlcf	(??___fldiv+3)& (0+255),w,b
 29938  018496  3332               	rrcf	(??___fldiv+3)& (0+255),f,b
 29939  018498  3331               	rrcf	(??___fldiv+2)& (0+255),f,b
 29940  01849A  3330               	rrcf	(??___fldiv+1)& (0+255),f,b
 29941  01849C  332F               	rrcf	??___fldiv& (0+255),f,b
 29942  01849E  C22F  F227         	movff	??___fldiv,___fldiv@b
 29943  0184A2  C230  F228         	movff	??___fldiv+1,___fldiv@b+1
 29944  0184A6  C231  F229         	movff	??___fldiv+2,___fldiv@b+2
 29945  0184AA  C232  F22A         	movff	??___fldiv+3,___fldiv@b+3
 29946                           
 29947                           ; BSR set to: 2
 29948  0184AE  4B38               	infsnz	___fldiv@new_exp& (0+255),f,b
 29949  0184B0  2B39               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 29950  0184B2                     l18692:
 29951                           
 29952                           ; BSR set to: 2
 29953  0184B2  BF39               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 29954  0184B4  D010               	goto	l18696
 29955  0184B6  5139               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 29956  0184B8  E103               	bnz	u23590
 29957  0184BA  2938               	incf	___fldiv@new_exp& (0+255),w,b
 29958  0184BC  A0D8               	btfss	status,0,c
 29959  0184BE  D00B               	goto	l18696
 29960  0184C0                     u23590:
 29961                           
 29962                           ; BSR set to: 2
 29963  0184C0  0E00               	movlw	0
 29964  0184C2  6F39               	movwf	(___fldiv@new_exp+1)& (0+255),b
 29965  0184C4  6938               	setf	___fldiv@new_exp& (0+255),b
 29966  0184C6  0E00               	movlw	0
 29967  0184C8  6F27               	movwf	___fldiv@b& (0+255),b
 29968  0184CA  0E00               	movlw	0
 29969  0184CC  6F28               	movwf	(___fldiv@b+1)& (0+255),b
 29970  0184CE  0E00               	movlw	0
 29971  0184D0  6F29               	movwf	(___fldiv@b+2)& (0+255),b
 29972  0184D2  0E00               	movlw	0
 29973  0184D4  6F2A               	movwf	(___fldiv@b+3)& (0+255),b
 29974  0184D6                     l18696:
 29975                           
 29976                           ; BSR set to: 2
 29977  0184D6  BF39               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 29978  0184D8  D005               	goto	u23600
 29979  0184DA  5139               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 29980  0184DC  E111               	bnz	l18700
 29981  0184DE  0538               	decf	___fldiv@new_exp& (0+255),w,b
 29982  0184E0  B0D8               	btfsc	status,0,c
 29983  0184E2  D00E               	goto	l18700
 29984  0184E4                     u23600:
 29985                           
 29986                           ; BSR set to: 2
 29987  0184E4  0E00               	movlw	0
 29988  0184E6  6F39               	movwf	(___fldiv@new_exp+1)& (0+255),b
 29989  0184E8  0E00               	movlw	0
 29990  0184EA  6F38               	movwf	___fldiv@new_exp& (0+255),b
 29991  0184EC  0E00               	movlw	0
 29992  0184EE  6F27               	movwf	___fldiv@b& (0+255),b
 29993  0184F0  0E00               	movlw	0
 29994  0184F2  6F28               	movwf	(___fldiv@b+1)& (0+255),b
 29995  0184F4  0E00               	movlw	0
 29996  0184F6  6F29               	movwf	(___fldiv@b+2)& (0+255),b
 29997  0184F8  0E00               	movlw	0
 29998  0184FA  6F2A               	movwf	(___fldiv@b+3)& (0+255),b
 29999  0184FC  0E00               	movlw	0
 30000  0184FE  6F37               	movwf	___fldiv@sign& (0+255),b
 30001  018500                     l18700:
 30002                           
 30003                           ; BSR set to: 2
 30004  018500  C238  F23E         	movff	___fldiv@new_exp,___fldiv@bexp
 30005                           
 30006                           ; BSR set to: 2
 30007  018504  A13E               	btfss	___fldiv@bexp& (0+255),0,b
 30008  018506  D002               	goto	l18706
 30009                           
 30010                           ; BSR set to: 2
 30011  018508  8F29               	bsf	(___fldiv@b+2)& (0+255),7,b
 30012  01850A  D001               	goto	l18708
 30013  01850C                     l18706:
 30014                           
 30015                           ; BSR set to: 2
 30016  01850C  9F29               	bcf	(___fldiv@b+2)& (0+255),7,b
 30017  01850E                     l18708:
 30018                           
 30019                           ; BSR set to: 2
 30020  01850E  90D8               	bcf	status,0,c
 30021  018510  313E               	rrcf	___fldiv@bexp& (0+255),w,b
 30022  018512  6F2A               	movwf	(___fldiv@b+3)& (0+255),b
 30023  018514  D70E               	goto	l18622
 30024  018516                     __end_of___fldiv:
 30025                           	opt callstack 0
 30026                           
 30027 ;; *************** function _OLED_UpdateFromRAMBuffer *****************
 30028 ;; Defined at:
 30029 ;;		line 294 in file "oled.c"
 30030 ;; Parameters:    Size  Location     Type
 30031 ;;		None
 30032 ;; Auto vars:     Size  Location     Type
 30033 ;;  char_index      1   38[BANK2 ] unsigned char 
 30034 ;;  char_index      1   37[BANK2 ] unsigned char 
 30035 ;;  char_index      1   36[BANK2 ] unsigned char 
 30036 ;;  char_index      1   35[BANK2 ] unsigned char 
 30037 ;; Return value:  Size  Location     Type
 30038 ;;                  1    wreg      void 
 30039 ;; Registers used:
 30040 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30041 ;; Tracked objects:
 30042 ;;		On entry : 0/0
 30043 ;;		On exit  : 0/0
 30044 ;;		Unchanged: 0/0
 30045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30047 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30049 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30050 ;;Total ram usage:        4 bytes
 30051 ;; Hardware stack levels used:    1
 30052 ;; Hardware stack levels required when called:   16
 30053 ;; This function calls:
 30054 ;;		_OLED_WriteString
 30055 ;;		_OLED_YX
 30056 ;;		_strlen
 30057 ;; This function is called by:
 30058 ;;		_OLED_updateHandler
 30059 ;; This function uses a non-reentrant model
 30060 ;;
 30061                           
 30062                           	psect	text102
 30063  019FD8                     __ptext102:
 30064                           	opt callstack 0
 30065  019FD8                     _OLED_UpdateFromRAMBuffer:
 30066                           	opt callstack 13
 30067                           
 30068                           ;oled.c: 298: for (uint8_t char_index = strlen(OLED_RAM_Buffer.line0); char_index < size
      +                          of(OLED_RAM_Buffer.line0) - 1; char_index++) {
 30069                           
 30070                           ; BSR set to: 2
 30071                           ;incstack = 0
 30072  019FD8  0E00               	movlw	low _OLED_RAM_Buffer
 30073  019FDA  0102               	movlb	2	; () banked
 30074  019FDC  6F00               	movwf	strlen@s& (0+255),b
 30075  019FDE  0E03               	movlw	high _OLED_RAM_Buffer
 30076  019FE0  6F01               	movwf	(strlen@s+1)& (0+255),b
 30077  019FE2  ECE3  F0E1         	call	_strlen	;wreg free
 30078  019FE6  0102               	movlb	2	; () banked
 30079  019FE8  5100               	movf	?_strlen& (0+255),w,b
 30080  019FEA  6F23               	movwf	OLED_UpdateFromRAMBuffer@char_index& (0+255),b
 30081  019FEC                     l21194:
 30082                           
 30083                           ; BSR set to: 2
 30084  019FEC  0E0F               	movlw	15
 30085  019FEE  6523               	cpfsgt	OLED_UpdateFromRAMBuffer@char_index& (0+255),b
 30086  019FF0  D001               	goto	l21198
 30087  019FF2  D00A               	goto	l21204
 30088  019FF4                     l21198:
 30089                           
 30090                           ; BSR set to: 2
 30091                           ;oled.c: 299: OLED_RAM_Buffer.line0[char_index] = ' ';
 30092  019FF4  0E00               	movlw	low _OLED_RAM_Buffer
 30093  019FF6  2523               	addwf	OLED_UpdateFromRAMBuffer@char_index& (0+255),w,b
 30094  019FF8  6ED9               	movwf	fsr2l,c
 30095  019FFA  6ADA               	clrf	fsr2h,c
 30096  019FFC  0E03               	movlw	high _OLED_RAM_Buffer
 30097  019FFE  22DA               	addwfc	fsr2h,f,c
 30098  01A000  0E20               	movlw	32
 30099  01A002  6EDF               	movwf	indf2,c
 30100                           
 30101                           ; BSR set to: 2
 30102  01A004  2B23               	incf	OLED_UpdateFromRAMBuffer@char_index& (0+255),f,b
 30103  01A006  D7F2               	goto	l21194
 30104  01A008                     l21204:
 30105                           
 30106                           ; BSR set to: 2
 30107                           ;oled.c: 300: };oled.c: 301: for (uint8_t char_index = strlen(OLED_RAM_Buffer.line1); ch
      +                          ar_index < sizeof(OLED_RAM_Buffer.line1) - 1; char_index++) {
 30108  01A008  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 30109  01A00A  6F00               	movwf	strlen@s& (0+255),b
 30110  01A00C  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 30111  01A00E  6F01               	movwf	(strlen@s+1)& (0+255),b
 30112  01A010  ECE3  F0E1         	call	_strlen	;wreg free
 30113  01A014  0102               	movlb	2	; () banked
 30114  01A016  5100               	movf	?_strlen& (0+255),w,b
 30115  01A018  6F24               	movwf	OLED_UpdateFromRAMBuffer@char_index_4111& (0+255),b
 30116  01A01A                     l21206:
 30117                           
 30118                           ; BSR set to: 2
 30119  01A01A  0E0F               	movlw	15
 30120  01A01C  6524               	cpfsgt	OLED_UpdateFromRAMBuffer@char_index_4111& (0+255),b
 30121  01A01E  D001               	goto	l21210
 30122  01A020  D00A               	goto	l21216
 30123  01A022                     l21210:
 30124                           
 30125                           ; BSR set to: 2
 30126                           ;oled.c: 302: OLED_RAM_Buffer.line1[char_index] = ' ';
 30127  01A022  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 30128  01A024  2524               	addwf	OLED_UpdateFromRAMBuffer@char_index_4111& (0+255),w,b
 30129  01A026  6ED9               	movwf	fsr2l,c
 30130  01A028  6ADA               	clrf	fsr2h,c
 30131  01A02A  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 30132  01A02C  22DA               	addwfc	fsr2h,f,c
 30133  01A02E  0E20               	movlw	32
 30134  01A030  6EDF               	movwf	indf2,c
 30135                           
 30136                           ; BSR set to: 2
 30137  01A032  2B24               	incf	OLED_UpdateFromRAMBuffer@char_index_4111& (0+255),f,b
 30138  01A034  D7F2               	goto	l21206
 30139  01A036                     l21216:
 30140                           
 30141                           ; BSR set to: 2
 30142                           ;oled.c: 303: };oled.c: 304: for (uint8_t char_index = strlen(OLED_RAM_Buffer.line2); ch
      +                          ar_index < sizeof(OLED_RAM_Buffer.line2) - 1; char_index++) {
 30143  01A036  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 30144  01A038  6F00               	movwf	strlen@s& (0+255),b
 30145  01A03A  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 30146  01A03C  6F01               	movwf	(strlen@s+1)& (0+255),b
 30147  01A03E  ECE3  F0E1         	call	_strlen	;wreg free
 30148  01A042  0102               	movlb	2	; () banked
 30149  01A044  5100               	movf	?_strlen& (0+255),w,b
 30150  01A046  6F25               	movwf	OLED_UpdateFromRAMBuffer@char_index_4112& (0+255),b
 30151  01A048                     l21218:
 30152                           
 30153                           ; BSR set to: 2
 30154  01A048  0E0F               	movlw	15
 30155  01A04A  6525               	cpfsgt	OLED_UpdateFromRAMBuffer@char_index_4112& (0+255),b
 30156  01A04C  D001               	goto	l21222
 30157  01A04E  D00A               	goto	l21228
 30158  01A050                     l21222:
 30159                           
 30160                           ; BSR set to: 2
 30161                           ;oled.c: 305: OLED_RAM_Buffer.line2[char_index] = ' ';
 30162  01A050  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 30163  01A052  2525               	addwf	OLED_UpdateFromRAMBuffer@char_index_4112& (0+255),w,b
 30164  01A054  6ED9               	movwf	fsr2l,c
 30165  01A056  6ADA               	clrf	fsr2h,c
 30166  01A058  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 30167  01A05A  22DA               	addwfc	fsr2h,f,c
 30168  01A05C  0E20               	movlw	32
 30169  01A05E  6EDF               	movwf	indf2,c
 30170                           
 30171                           ; BSR set to: 2
 30172  01A060  2B25               	incf	OLED_UpdateFromRAMBuffer@char_index_4112& (0+255),f,b
 30173  01A062  D7F2               	goto	l21218
 30174  01A064                     l21228:
 30175                           
 30176                           ; BSR set to: 2
 30177                           ;oled.c: 306: };oled.c: 307: for (uint8_t char_index = strlen(OLED_RAM_Buffer.line3); ch
      +                          ar_index < sizeof(OLED_RAM_Buffer.line3) - 1; char_index++) {
 30178  01A064  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 30179  01A066  6F00               	movwf	strlen@s& (0+255),b
 30180  01A068  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 30181  01A06A  6F01               	movwf	(strlen@s+1)& (0+255),b
 30182  01A06C  ECE3  F0E1         	call	_strlen	;wreg free
 30183  01A070  0102               	movlb	2	; () banked
 30184  01A072  5100               	movf	?_strlen& (0+255),w,b
 30185  01A074  6F26               	movwf	OLED_UpdateFromRAMBuffer@char_index_4113& (0+255),b
 30186  01A076                     l21230:
 30187                           
 30188                           ; BSR set to: 2
 30189  01A076  0E0F               	movlw	15
 30190  01A078  6526               	cpfsgt	OLED_UpdateFromRAMBuffer@char_index_4113& (0+255),b
 30191  01A07A  D001               	goto	l21234
 30192  01A07C  D00A               	goto	l21240
 30193  01A07E                     l21234:
 30194                           
 30195                           ; BSR set to: 2
 30196                           ;oled.c: 308: OLED_RAM_Buffer.line3[char_index] = ' ';
 30197  01A07E  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 30198  01A080  2526               	addwf	OLED_UpdateFromRAMBuffer@char_index_4113& (0+255),w,b
 30199  01A082  6ED9               	movwf	fsr2l,c
 30200  01A084  6ADA               	clrf	fsr2h,c
 30201  01A086  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 30202  01A088  22DA               	addwfc	fsr2h,f,c
 30203  01A08A  0E20               	movlw	32
 30204  01A08C  6EDF               	movwf	indf2,c
 30205                           
 30206                           ; BSR set to: 2
 30207  01A08E  2B26               	incf	OLED_UpdateFromRAMBuffer@char_index_4113& (0+255),f,b
 30208  01A090  D7F2               	goto	l21230
 30209  01A092                     l21240:
 30210                           
 30211                           ; BSR set to: 2
 30212                           ;oled.c: 309: };oled.c: 311: OLED_YX(0,0);
 30213  01A092  0E00               	movlw	0
 30214  01A094  6F14               	movwf	OLED_YX@Column& (0+255),b
 30215  01A096  0E00               	movlw	0
 30216  01A098  EC11  F0DF         	call	_OLED_YX
 30217                           
 30218                           ;oled.c: 312: OLED_WriteString(OLED_RAM_Buffer.line0);
 30219  01A09C  0E00               	movlw	low _OLED_RAM_Buffer
 30220  01A09E  0102               	movlb	2	; () banked
 30221  01A0A0  6F21               	movwf	OLED_WriteString@s& (0+255),b
 30222  01A0A2  0E03               	movlw	high _OLED_RAM_Buffer
 30223  01A0A4  6F22               	movwf	(OLED_WriteString@s+1)& (0+255),b
 30224  01A0A6  EC87  F0DC         	call	_OLED_WriteString	;wreg free
 30225                           
 30226                           ;oled.c: 313: OLED_YX(1,0);
 30227  01A0AA  0E00               	movlw	0
 30228  01A0AC  0102               	movlb	2	; () banked
 30229  01A0AE  6F14               	movwf	OLED_YX@Column& (0+255),b
 30230  01A0B0  0E01               	movlw	1
 30231  01A0B2  EC11  F0DF         	call	_OLED_YX
 30232                           
 30233                           ;oled.c: 314: OLED_WriteString(OLED_RAM_Buffer.line1);
 30234  01A0B6  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 30235  01A0B8  0102               	movlb	2	; () banked
 30236  01A0BA  6F21               	movwf	OLED_WriteString@s& (0+255),b
 30237  01A0BC  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 30238  01A0BE  6F22               	movwf	(OLED_WriteString@s+1)& (0+255),b
 30239  01A0C0  EC87  F0DC         	call	_OLED_WriteString	;wreg free
 30240                           
 30241                           ;oled.c: 315: OLED_YX(2,0);
 30242  01A0C4  0E00               	movlw	0
 30243  01A0C6  0102               	movlb	2	; () banked
 30244  01A0C8  6F14               	movwf	OLED_YX@Column& (0+255),b
 30245  01A0CA  0E02               	movlw	2
 30246  01A0CC  EC11  F0DF         	call	_OLED_YX
 30247                           
 30248                           ;oled.c: 316: OLED_WriteString(OLED_RAM_Buffer.line2);
 30249  01A0D0  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 30250  01A0D2  0102               	movlb	2	; () banked
 30251  01A0D4  6F21               	movwf	OLED_WriteString@s& (0+255),b
 30252  01A0D6  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 30253  01A0D8  6F22               	movwf	(OLED_WriteString@s+1)& (0+255),b
 30254  01A0DA  EC87  F0DC         	call	_OLED_WriteString	;wreg free
 30255                           
 30256                           ;oled.c: 317: OLED_YX(3,0);
 30257  01A0DE  0E00               	movlw	0
 30258  01A0E0  0102               	movlb	2	; () banked
 30259  01A0E2  6F14               	movwf	OLED_YX@Column& (0+255),b
 30260  01A0E4  0E03               	movlw	3
 30261  01A0E6  EC11  F0DF         	call	_OLED_YX
 30262                           
 30263                           ;oled.c: 318: OLED_WriteString(OLED_RAM_Buffer.line3);
 30264  01A0EA  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 30265  01A0EC  0102               	movlb	2	; () banked
 30266  01A0EE  6F21               	movwf	OLED_WriteString@s& (0+255),b
 30267  01A0F0  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 30268  01A0F2  6F22               	movwf	(OLED_WriteString@s+1)& (0+255),b
 30269  01A0F4  EC87  F0DC         	call	_OLED_WriteString	;wreg free
 30270  01A0F8  0012               	return		;funcret
 30271  01A0FA                     __end_of_OLED_UpdateFromRAMBuffer:
 30272                           	opt callstack 0
 30273                           
 30274 ;; *************** function _strlen *****************
 30275 ;; Defined at:
 30276 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strlen.c"
 30277 ;; Parameters:    Size  Location     Type
 30278 ;;  s               2    0[BANK2 ] PTR const unsigned char 
 30279 ;;		 -> line(64), OLED_RAM_Buffer.line3(17), OLED_RAM_Buffer.line2(17), OLED_RAM_Buffer.line1(17), 
 30280 ;;		 -> OLED_RAM_Buffer.line0(17), OLED_RAM_Buffer(68), getStringSecondsAsTime@return_string(40), 
 30281 ;; Auto vars:     Size  Location     Type
 30282 ;;  cp              2    2[BANK2 ] PTR const unsigned char 
 30283 ;;		 -> line(64), OLED_RAM_Buffer.line3(17), OLED_RAM_Buffer.line2(17), OLED_RAM_Buffer.line1(17), 
 30284 ;;		 -> OLED_RAM_Buffer.line0(17), OLED_RAM_Buffer(68), getStringSecondsAsTime@return_string(40), 
 30285 ;; Return value:  Size  Location     Type
 30286 ;;                  2    0[BANK2 ] unsigned int 
 30287 ;; Registers used:
 30288 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30289 ;; Tracked objects:
 30290 ;;		On entry : 0/0
 30291 ;;		On exit  : 0/0
 30292 ;;		Unchanged: 0/0
 30293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30294 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30295 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30297 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30298 ;;Total ram usage:        4 bytes
 30299 ;; Hardware stack levels used:    1
 30300 ;; Hardware stack levels required when called:   11
 30301 ;; This function calls:
 30302 ;;		Nothing
 30303 ;; This function is called by:
 30304 ;;		_getStringSecondsAsTime
 30305 ;;		_OLED_UpdateFromRAMBuffer
 30306 ;;		_ringBufferLUT
 30307 ;;		_terminal_ringBufferPull
 30308 ;; This function uses a non-reentrant model
 30309 ;;
 30310                           
 30311                           	psect	text103
 30312  01C3C6                     __ptext103:
 30313                           	opt callstack 0
 30314  01C3C6                     _strlen:
 30315                           	opt callstack 18
 30316                           
 30317                           ;incstack = 0
 30318  01C3C6  C200  F202         	movff	strlen@s,strlen@cp
 30319  01C3CA  C201  F203         	movff	strlen@s+1,strlen@cp+1
 30320  01C3CE  D003               	goto	l18514
 30321  01C3D0                     l18512:
 30322  01C3D0  0102               	movlb	2	; () banked
 30323  01C3D2  4B02               	infsnz	strlen@cp& (0+255),f,b
 30324  01C3D4  2B03               	incf	(strlen@cp+1)& (0+255),f,b
 30325  01C3D6                     l18514:
 30326  01C3D6  C202  FFD9         	movff	strlen@cp,fsr2l
 30327  01C3DA  C203  FFDA         	movff	strlen@cp+1,fsr2h
 30328  01C3DE  50DF               	movf	indf2,w,c
 30329  01C3E0  A4D8               	btfss	status,2,c
 30330  01C3E2  D7F6               	goto	l18512
 30331  01C3E4  0102               	movlb	2	; () banked
 30332  01C3E6  5100               	movf	strlen@s& (0+255),w,b
 30333  01C3E8  5D02               	subwf	strlen@cp& (0+255),w,b
 30334  01C3EA  6F00               	movwf	?_strlen& (0+255),b
 30335  01C3EC  5101               	movf	(strlen@s+1)& (0+255),w,b
 30336  01C3EE  5903               	subwfb	(strlen@cp+1)& (0+255),w,b
 30337  01C3F0  6F01               	movwf	(?_strlen+1)& (0+255),b
 30338                           
 30339                           ; BSR set to: 2
 30340  01C3F2  0012               	return		;funcret
 30341  01C3F4                     __end_of_strlen:
 30342                           	opt callstack 0
 30343                           
 30344 ;; *************** function _OLED_YX *****************
 30345 ;; Defined at:
 30346 ;;		line 204 in file "oled.c"
 30347 ;; Parameters:    Size  Location     Type
 30348 ;;  Row             1    wreg     unsigned char 
 30349 ;;  Column          1   20[BANK2 ] unsigned char 
 30350 ;; Auto vars:     Size  Location     Type
 30351 ;;  Row             1   24[BANK2 ] unsigned char 
 30352 ;; Return value:  Size  Location     Type
 30353 ;;                  1    wreg      void 
 30354 ;; Registers used:
 30355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30356 ;; Tracked objects:
 30357 ;;		On entry : 0/0
 30358 ;;		On exit  : 0/0
 30359 ;;		Unchanged: 0/0
 30360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30361 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30362 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30363 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30364 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30365 ;;Total ram usage:        5 bytes
 30366 ;; Hardware stack levels used:    1
 30367 ;; Hardware stack levels required when called:   15
 30368 ;; This function calls:
 30369 ;;		_OLED_Command
 30370 ;; This function is called by:
 30371 ;;		_OLED_UpdateFromRAMBuffer
 30372 ;; This function uses a non-reentrant model
 30373 ;;
 30374                           
 30375                           	psect	text104
 30376  01BE22                     __ptext104:
 30377                           	opt callstack 0
 30378  01BE22                     _OLED_YX:
 30379                           	opt callstack 13
 30380                           
 30381                           ; BSR set to: 2
 30382                           ;incstack = 0
 30383                           ;OLED_YX@Row stored from wreg
 30384  01BE22  0102               	movlb	2	; () banked
 30385  01BE24  6F18               	movwf	OLED_YX@Row& (0+255),b
 30386                           
 30387                           ;oled.c: 206: OLED_Command(0xB0 + Row);
 30388  01BE26  0102               	movlb	2	; () banked
 30389  01BE28  5118               	movf	OLED_YX@Row& (0+255),w,b
 30390  01BE2A  0FB0               	addlw	176
 30391  01BE2C  EC39  F0DB         	call	_OLED_Command
 30392                           
 30393                           ;oled.c: 207: OLED_Command(0x00 + (8 * Column & 0x0F));
 30394  01BE30  0102               	movlb	2	; () banked
 30395  01BE32  5114               	movf	OLED_YX@Column& (0+255),w,b
 30396  01BE34  0D08               	mullw	8
 30397  01BE36  50F3               	movf	prodl,w,c
 30398  01BE38  0B0F               	andlw	15
 30399  01BE3A  EC39  F0DB         	call	_OLED_Command
 30400                           
 30401                           ;oled.c: 208: OLED_Command(0x10 + ((8* Column >> 4) & 0x0F));
 30402  01BE3E  0102               	movlb	2	; () banked
 30403  01BE40  5114               	movf	OLED_YX@Column& (0+255),w,b
 30404  01BE42  0D08               	mullw	8
 30405  01BE44  CFF3 F215          	movff	prodl,??_OLED_YX
 30406  01BE48  CFF4 F216          	movff	prodh,??_OLED_YX+1
 30407  01BE4C  0E04               	movlw	4
 30408  01BE4E  6F17               	movwf	(??_OLED_YX+2)& (0+255),b
 30409  01BE50                     u25365:
 30410  01BE50  3516               	rlcf	(??_OLED_YX+1)& (0+255),w,b
 30411  01BE52  3316               	rrcf	(??_OLED_YX+1)& (0+255),f,b
 30412  01BE54  3315               	rrcf	??_OLED_YX& (0+255),f,b
 30413  01BE56  2F17               	decfsz	(??_OLED_YX+2)& (0+255),f,b
 30414  01BE58  D7FB               	goto	u25365
 30415  01BE5A  5115               	movf	??_OLED_YX& (0+255),w,b
 30416  01BE5C  0B0F               	andlw	15
 30417  01BE5E  0F10               	addlw	16
 30418  01BE60  EC39  F0DB         	call	_OLED_Command
 30419  01BE64  0012               	return		;funcret
 30420  01BE66                     __end_of_OLED_YX:
 30421                           	opt callstack 0
 30422                           
 30423 ;; *************** function _OLED_WriteString *****************
 30424 ;; Defined at:
 30425 ;;		line 262 in file "oled.c"
 30426 ;; Parameters:    Size  Location     Type
 30427 ;;  s               2   33[BANK2 ] PTR unsigned char 
 30428 ;;		 -> ftoa@buf(17), OLED_RAM_Buffer(68), STR_59(1), STR_58(1), 
 30429 ;;		 -> OLED_WriteInteger@s(20), 
 30430 ;; Auto vars:     Size  Location     Type
 30431 ;;		None
 30432 ;; Return value:  Size  Location     Type
 30433 ;;                  1    wreg      void 
 30434 ;; Registers used:
 30435 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30436 ;; Tracked objects:
 30437 ;;		On entry : 0/0
 30438 ;;		On exit  : 0/0
 30439 ;;		Unchanged: 0/0
 30440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30441 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30444 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30445 ;;Total ram usage:        2 bytes
 30446 ;; Hardware stack levels used:    1
 30447 ;; Hardware stack levels required when called:   15
 30448 ;; This function calls:
 30449 ;;		_OLED_PutChar
 30450 ;; This function is called by:
 30451 ;;		_OLED_UpdateFromRAMBuffer
 30452 ;;		_OLED_WriteInteger
 30453 ;;		_OLED_WriteFloat
 30454 ;; This function uses a non-reentrant model
 30455 ;;
 30456                           
 30457                           	psect	text105
 30458  01B90E                     __ptext105:
 30459                           	opt callstack 0
 30460  01B90E                     _OLED_WriteString:
 30461                           	opt callstack 13
 30462                           
 30463                           ;oled.c: 264: while(*s) {
 30464                           
 30465                           ;incstack = 0
 30466  01B90E  D016               	goto	l20026
 30467  01B910                     l20022:
 30468                           
 30469                           ;oled.c: 266: OLED_PutChar(*s++);
 30470  01B910  C221  FFF6         	movff	OLED_WriteString@s,tblptrl
 30471  01B914  C222  FFF7         	movff	OLED_WriteString@s+1,tblptrh
 30472  01B918  0E00               	movlw	low (__mediumconst shr (0+16))
 30473  01B91A  6EF8               	movwf	tblptru,c
 30474  01B91C  0E0E               	movlw	(high __ramtop+-1)
 30475  01B91E  64F7               	cpfsgt	tblptrh,c
 30476  01B920  D003               	bra	u25377
 30477  01B922  0008               	tblrd		*
 30478  01B924  50F5               	movf	tablat,w,c
 30479  01B926  D005               	bra	u25370
 30480  01B928                     u25377:
 30481  01B928  CFF6 FFE9          	movff	tblptrl,fsr0l
 30482  01B92C  CFF7 FFEA          	movff	tblptrh,fsr0h
 30483  01B930  50EF               	movf	indf0,w,c
 30484  01B932                     u25370:
 30485  01B932  ECFF  F0D4         	call	_OLED_PutChar
 30486  01B936  0102               	movlb	2	; () banked
 30487  01B938  4B21               	infsnz	OLED_WriteString@s& (0+255),f,b
 30488  01B93A  2B22               	incf	(OLED_WriteString@s+1)& (0+255),f,b
 30489  01B93C                     l20026:
 30490  01B93C  C221  FFF6         	movff	OLED_WriteString@s,tblptrl
 30491  01B940  C222  FFF7         	movff	OLED_WriteString@s+1,tblptrh
 30492  01B944  0E00               	movlw	low (__mediumconst shr (0+16))
 30493  01B946  6EF8               	movwf	tblptru,c
 30494  01B948  0E0E               	movlw	(high __ramtop+-1)
 30495  01B94A  64F7               	cpfsgt	tblptrh,c
 30496  01B94C  D003               	bra	u25387
 30497  01B94E  0008               	tblrd		*
 30498  01B950  50F5               	movf	tablat,w,c
 30499  01B952  D005               	bra	u25380
 30500  01B954                     u25387:
 30501  01B954  CFF6 FFE9          	movff	tblptrl,fsr0l
 30502  01B958  CFF7 FFEA          	movff	tblptrh,fsr0h
 30503  01B95C  50EF               	movf	indf0,w,c
 30504  01B95E                     u25380:
 30505  01B95E  0900               	iorlw	0
 30506  01B960  B4D8               	btfsc	status,2,c
 30507  01B962  0012               	return	
 30508  01B964  D7D5               	goto	l20022
 30509  01B966                     __end_of_OLED_WriteString:
 30510                           	opt callstack 0
 30511                           
 30512 ;; *************** function _OLED_Init *****************
 30513 ;; Defined at:
 30514 ;;		line 174 in file "oled.c"
 30515 ;; Parameters:    Size  Location     Type
 30516 ;;		None
 30517 ;; Auto vars:     Size  Location     Type
 30518 ;;		None
 30519 ;; Return value:  Size  Location     Type
 30520 ;;                  1    wreg      void 
 30521 ;; Registers used:
 30522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30523 ;; Tracked objects:
 30524 ;;		On entry : 0/0
 30525 ;;		On exit  : 0/0
 30526 ;;		Unchanged: 0/0
 30527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30532 ;;Total ram usage:        0 bytes
 30533 ;; Hardware stack levels used:    1
 30534 ;; Hardware stack levels required when called:   15
 30535 ;; This function calls:
 30536 ;;		_OLED_Command
 30537 ;; This function is called by:
 30538 ;;		_main
 30539 ;; This function uses a non-reentrant model
 30540 ;;
 30541                           
 30542                           	psect	text106
 30543  01B00E                     __ptext106:
 30544                           	opt callstack 0
 30545  01B00E                     _OLED_Init:
 30546                           	opt callstack 15
 30547                           
 30548                           ;oled.c: 176: OLED_Command(0xAE);
 30549                           
 30550                           ;incstack = 0
 30551  01B00E  0EAE               	movlw	174
 30552  01B010  EC39  F0DB         	call	_OLED_Command
 30553                           
 30554                           ;oled.c: 177: OLED_Command(0xD5);
 30555  01B014  0ED5               	movlw	213
 30556  01B016  EC39  F0DB         	call	_OLED_Command
 30557                           
 30558                           ;oled.c: 178: OLED_Command(0x80);
 30559  01B01A  0E80               	movlw	128
 30560  01B01C  EC39  F0DB         	call	_OLED_Command
 30561                           
 30562                           ;oled.c: 179: OLED_Command(0xA8);
 30563  01B020  0EA8               	movlw	168
 30564  01B022  EC39  F0DB         	call	_OLED_Command
 30565                           
 30566                           ;oled.c: 180: OLED_Command(0x1F);
 30567  01B026  0E1F               	movlw	31
 30568  01B028  EC39  F0DB         	call	_OLED_Command
 30569                           
 30570                           ;oled.c: 181: OLED_Command(0xD3);
 30571  01B02C  0ED3               	movlw	211
 30572  01B02E  EC39  F0DB         	call	_OLED_Command
 30573                           
 30574                           ;oled.c: 182: OLED_Command(0x0);
 30575  01B032  0E00               	movlw	0
 30576  01B034  EC39  F0DB         	call	_OLED_Command
 30577                           
 30578                           ;oled.c: 183: OLED_Command(0x40 | 0x0);
 30579  01B038  0E40               	movlw	64
 30580  01B03A  EC39  F0DB         	call	_OLED_Command
 30581                           
 30582                           ;oled.c: 184: OLED_Command(0x8D);
 30583  01B03E  0E8D               	movlw	141
 30584  01B040  EC39  F0DB         	call	_OLED_Command
 30585                           
 30586                           ;oled.c: 185: OLED_Command(0xAF);
 30587  01B044  0EAF               	movlw	175
 30588  01B046  EC39  F0DB         	call	_OLED_Command
 30589                           
 30590                           ;oled.c: 186: OLED_Command(0x20);
 30591  01B04A  0E20               	movlw	32
 30592  01B04C  EC39  F0DB         	call	_OLED_Command
 30593                           
 30594                           ;oled.c: 187: OLED_Command(0x00);
 30595  01B050  0E00               	movlw	0
 30596  01B052  EC39  F0DB         	call	_OLED_Command
 30597                           
 30598                           ;oled.c: 188: OLED_Command(0xA0 | 0x1);
 30599  01B056  0EA1               	movlw	161
 30600  01B058  EC39  F0DB         	call	_OLED_Command
 30601                           
 30602                           ;oled.c: 189: OLED_Command(0xC8);
 30603  01B05C  0EC8               	movlw	200
 30604  01B05E  EC39  F0DB         	call	_OLED_Command
 30605                           
 30606                           ;oled.c: 190: OLED_Command(0xDA);
 30607  01B062  0EDA               	movlw	218
 30608  01B064  EC39  F0DB         	call	_OLED_Command
 30609                           
 30610                           ;oled.c: 191: OLED_Command(0x02);
 30611  01B068  0E02               	movlw	2
 30612  01B06A  EC39  F0DB         	call	_OLED_Command
 30613                           
 30614                           ;oled.c: 192: OLED_Command(0x81);
 30615  01B06E  0E81               	movlw	129
 30616  01B070  EC39  F0DB         	call	_OLED_Command
 30617                           
 30618                           ;oled.c: 193: OLED_Command(0x8F);
 30619  01B074  0E8F               	movlw	143
 30620  01B076  EC39  F0DB         	call	_OLED_Command
 30621                           
 30622                           ;oled.c: 194: OLED_Command(0xD9);
 30623  01B07A  0ED9               	movlw	217
 30624  01B07C  EC39  F0DB         	call	_OLED_Command
 30625                           
 30626                           ;oled.c: 195: OLED_Command(0xF1);
 30627  01B080  0EF1               	movlw	241
 30628  01B082  EC39  F0DB         	call	_OLED_Command
 30629                           
 30630                           ;oled.c: 196: OLED_Command(0xDB);
 30631  01B086  0EDB               	movlw	219
 30632  01B088  EC39  F0DB         	call	_OLED_Command
 30633                           
 30634                           ;oled.c: 197: OLED_Command(0x40);
 30635  01B08C  0E40               	movlw	64
 30636  01B08E  EC39  F0DB         	call	_OLED_Command
 30637                           
 30638                           ;oled.c: 198: OLED_Command(0xA4);
 30639  01B092  0EA4               	movlw	164
 30640  01B094  EC39  F0DB         	call	_OLED_Command
 30641                           
 30642                           ;oled.c: 199: OLED_Command(0xA6);
 30643  01B098  0EA6               	movlw	166
 30644  01B09A  EC39  F0DB         	call	_OLED_Command
 30645                           
 30646                           ;oled.c: 200: OLED_Command(0xAF);
 30647  01B09E  0EAF               	movlw	175
 30648  01B0A0  EC39  F0DB         	call	_OLED_Command
 30649  01B0A4  0012               	return		;funcret
 30650  01B0A6                     __end_of_OLED_Init:
 30651                           	opt callstack 0
 30652                           
 30653 ;; *************** function _OLED_Command *****************
 30654 ;; Defined at:
 30655 ;;		line 122 in file "oled.c"
 30656 ;; Parameters:    Size  Location     Type
 30657 ;;  temp            1    wreg     unsigned char 
 30658 ;; Auto vars:     Size  Location     Type
 30659 ;;  temp            1   16[BANK2 ] unsigned char 
 30660 ;;  data_array      2   18[BANK2 ] unsigned char [2]
 30661 ;;  length          1    0        unsigned char 
 30662 ;; Return value:  Size  Location     Type
 30663 ;;                  1    wreg      void 
 30664 ;; Registers used:
 30665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30666 ;; Tracked objects:
 30667 ;;		On entry : 0/0
 30668 ;;		On exit  : 0/0
 30669 ;;		Unchanged: 0/0
 30670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30672 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30674 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30675 ;;Total ram usage:        4 bytes
 30676 ;; Hardware stack levels used:    1
 30677 ;; Hardware stack levels required when called:   14
 30678 ;; This function calls:
 30679 ;;		_I2C2_MasterWrite
 30680 ;; This function is called by:
 30681 ;;		_OLED_Init
 30682 ;;		_OLED_YX
 30683 ;; This function uses a non-reentrant model
 30684 ;;
 30685                           
 30686                           	psect	text107
 30687  01B672                     __ptext107:
 30688                           	opt callstack 0
 30689  01B672                     _OLED_Command:
 30690                           	opt callstack 13
 30691                           
 30692                           ;incstack = 0
 30693                           ;OLED_Command@temp stored from wreg
 30694  01B672  0102               	movlb	2	; () banked
 30695  01B674  6F10               	movwf	OLED_Command@temp& (0+255),b
 30696                           
 30697                           ;oled.c: 124: uint8_t length;;oled.c: 126: uint8_t data_array[2];;oled.c: 127: data_arra
      +                          y[0] = 0x00;
 30698  01B676  0E00               	movlw	0
 30699  01B678  0102               	movlb	2	; () banked
 30700  01B67A  6F12               	movwf	OLED_Command@data_array& (0+255),b
 30701                           
 30702                           ; BSR set to: 2
 30703                           ;oled.c: 128: data_array[1] = temp;
 30704  01B67C  C210  F213         	movff	OLED_Command@temp,OLED_Command@data_array+1
 30705                           
 30706                           ; BSR set to: 2
 30707                           ;oled.c: 133: I2C2_MasterWrite(data_array, length, (uint16_t) 0x3C, &I2C_STATUS);
 30708                           
 30709                           ; BSR set to: 2
 30710  01B680  0E12               	movlw	low OLED_Command@data_array
 30711  01B682  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 30712  01B684  0E02               	movlw	high OLED_Command@data_array
 30713  01B686  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 30714  01B688  0E02               	movlw	2
 30715  01B68A  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 30716  01B68C  0E00               	movlw	0
 30717  01B68E  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 30718  01B690  0E3C               	movlw	60
 30719  01B692  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 30720  01B694  0EA2               	movlw	low _I2C_STATUS
 30721  01B696  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 30722  01B698  0E01               	movlw	high _I2C_STATUS
 30723  01B69A  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 30724  01B69C  ECA7  F0DD         	call	_I2C2_MasterWrite	;wreg free
 30725  01B6A0                     l19396:
 30726  01B6A0  0E02               	movlw	2
 30727  01B6A2  0101               	movlb	1	; () banked
 30728  01B6A4  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 30729  01B6A6  B4D8               	btfsc	status,2,c
 30730  01B6A8  D7FB               	goto	l19396
 30731                           
 30732                           ; BSR set to: 1
 30733                           ;oled.c: 137: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;oled.c: 138: I2C_STATUS == I2C2_ST
      +                          UCK_START ||;oled.c: 139: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;oled.c: 140: I2C_
      +                          STATUS == I2C2_DATA_NO_ACK ||;oled.c: 141: I2C_STATUS == I2C2_LOST_STATE ) {
 30734  01B6AA  05A2               	decf	_I2C_STATUS& (0+255),w,b
 30735  01B6AC  B4D8               	btfsc	status,2,c
 30736  01B6AE  D010               	goto	u24580
 30737                           
 30738                           ; BSR set to: 1
 30739  01B6B0  0E03               	movlw	3
 30740  01B6B2  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 30741  01B6B4  B4D8               	btfsc	status,2,c
 30742  01B6B6  D00C               	goto	u24580
 30743                           
 30744                           ; BSR set to: 1
 30745  01B6B8  0E04               	movlw	4
 30746  01B6BA  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 30747  01B6BC  B4D8               	btfsc	status,2,c
 30748  01B6BE  D008               	goto	u24580
 30749                           
 30750                           ; BSR set to: 1
 30751  01B6C0  0E05               	movlw	5
 30752  01B6C2  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 30753  01B6C4  B4D8               	btfsc	status,2,c
 30754  01B6C6  D004               	goto	u24580
 30755                           
 30756                           ; BSR set to: 1
 30757  01B6C8  0E06               	movlw	6
 30758  01B6CA  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 30759  01B6CC  A4D8               	btfss	status,2,c
 30760  01B6CE  0012               	return	
 30761  01B6D0                     u24580:
 30762                           
 30763                           ; BSR set to: 1
 30764                           ;oled.c: 142: error_handler.I2C_OLED_error_flag = 1;
 30765  01B6D0  0E01               	movlw	1
 30766  01B6D2  0100               	movlb	0	; () banked
 30767  01B6D4  6FBC               	movwf	(_error_handler+3)& (0+255),b
 30768  01B6D6  0012               	return		;funcret
 30769  01B6D8                     __end_of_OLED_Command:
 30770                           	opt callstack 0
 30771                           
 30772 ;; *************** function _OLED_Clear *****************
 30773 ;; Defined at:
 30774 ;;		line 247 in file "oled.c"
 30775 ;; Parameters:    Size  Location     Type
 30776 ;;		None
 30777 ;; Auto vars:     Size  Location     Type
 30778 ;;  col             2   35[BANK2 ] unsigned int 
 30779 ;;  row             2   33[BANK2 ] unsigned int 
 30780 ;; Return value:  Size  Location     Type
 30781 ;;                  1    wreg      void 
 30782 ;; Registers used:
 30783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30784 ;; Tracked objects:
 30785 ;;		On entry : 0/0
 30786 ;;		On exit  : 0/0
 30787 ;;		Unchanged: 0/0
 30788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30790 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30792 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30793 ;;Total ram usage:        4 bytes
 30794 ;; Hardware stack levels used:    1
 30795 ;; Hardware stack levels required when called:   15
 30796 ;; This function calls:
 30797 ;;		_OLED_PutChar
 30798 ;; This function is called by:
 30799 ;;		_main
 30800 ;; This function uses a non-reentrant model
 30801 ;;
 30802                           
 30803                           	psect	text108
 30804  01C06A                     __ptext108:
 30805                           	opt callstack 0
 30806  01C06A                     _OLED_Clear:
 30807                           	opt callstack 15
 30808                           
 30809                           ;oled.c: 249: for(uint16_t row = 0; row < 8; row++) {
 30810                           
 30811                           ;incstack = 0
 30812  01C06A  0E00               	movlw	0
 30813  01C06C  0102               	movlb	2	; () banked
 30814  01C06E  6F22               	movwf	(OLED_Clear@row+1)& (0+255),b
 30815  01C070  0E00               	movlw	0
 30816  01C072  6F21               	movwf	OLED_Clear@row& (0+255),b
 30817  01C074                     l21642:
 30818                           
 30819                           ; BSR set to: 2
 30820                           ;oled.c: 251: for(uint16_t col = 0; col < 16; col++) {
 30821  01C074  0E00               	movlw	0
 30822  01C076  6F24               	movwf	(OLED_Clear@col+1)& (0+255),b
 30823  01C078  0E00               	movlw	0
 30824  01C07A  6F23               	movwf	OLED_Clear@col& (0+255),b
 30825  01C07C                     l21648:
 30826                           
 30827                           ; BSR set to: 2
 30828                           ;oled.c: 253: OLED_PutChar('\0');
 30829  01C07C  0E00               	movlw	0
 30830  01C07E  ECFF  F0D4         	call	_OLED_PutChar
 30831  01C082  0102               	movlb	2	; () banked
 30832  01C084  4B23               	infsnz	OLED_Clear@col& (0+255),f,b
 30833  01C086  2B24               	incf	(OLED_Clear@col+1)& (0+255),f,b
 30834                           
 30835                           ; BSR set to: 2
 30836  01C088  5124               	movf	(OLED_Clear@col+1)& (0+255),w,b
 30837  01C08A  E104               	bnz	u27740
 30838  01C08C  0E10               	movlw	16
 30839  01C08E  5D23               	subwf	OLED_Clear@col& (0+255),w,b
 30840  01C090  A0D8               	btfss	status,0,c
 30841  01C092  D7F4               	goto	l21648
 30842  01C094                     u27740:
 30843                           
 30844                           ; BSR set to: 2
 30845  01C094  4B21               	infsnz	OLED_Clear@row& (0+255),f,b
 30846  01C096  2B22               	incf	(OLED_Clear@row+1)& (0+255),f,b
 30847                           
 30848                           ; BSR set to: 2
 30849  01C098  5122               	movf	(OLED_Clear@row+1)& (0+255),w,b
 30850  01C09A  E105               	bnz	u27750
 30851  01C09C  0E08               	movlw	8
 30852  01C09E  5D21               	subwf	OLED_Clear@row& (0+255),w,b
 30853  01C0A0  B0D8               	btfsc	status,0,c
 30854  01C0A2  0012               	return	
 30855  01C0A4  D7E7               	goto	l21642
 30856  01C0A6                     u27750:
 30857                           
 30858                           ; BSR set to: 2
 30859  01C0A6  0012               	return		;funcret
 30860  01C0A8                     __end_of_OLED_Clear:
 30861                           	opt callstack 0
 30862                           
 30863 ;; *************** function _OLED_PutChar *****************
 30864 ;; Defined at:
 30865 ;;		line 212 in file "oled.c"
 30866 ;; Parameters:    Size  Location     Type
 30867 ;;  ch              1    wreg     unsigned char 
 30868 ;; Auto vars:     Size  Location     Type
 30869 ;;  ch              1   32[BANK2 ] unsigned char 
 30870 ;;  data_array      9   20[BANK2 ] unsigned char [9]
 30871 ;;  input_base      2   29[BANK2 ] PTR const unsigned char 
 30872 ;;		 -> OledFont(768), 
 30873 ;;  length          1    0        unsigned char 
 30874 ;; Return value:  Size  Location     Type
 30875 ;;                  1    wreg      void 
 30876 ;; Registers used:
 30877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30878 ;; Tracked objects:
 30879 ;;		On entry : 0/0
 30880 ;;		On exit  : 0/0
 30881 ;;		Unchanged: 0/0
 30882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30884 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30885 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30886 ;;      Totals:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30887 ;;Total ram usage:       17 bytes
 30888 ;; Hardware stack levels used:    1
 30889 ;; Hardware stack levels required when called:   14
 30890 ;; This function calls:
 30891 ;;		_I2C2_MasterWrite
 30892 ;;		_memmove
 30893 ;; This function is called by:
 30894 ;;		_OLED_Clear
 30895 ;;		_OLED_WriteString
 30896 ;; This function uses a non-reentrant model
 30897 ;;
 30898                           
 30899                           	psect	text109
 30900  01A9FE                     __ptext109:
 30901                           	opt callstack 0
 30902  01A9FE                     _OLED_PutChar:
 30903                           	opt callstack 13
 30904                           
 30905                           ; BSR set to: 2
 30906                           ;incstack = 0
 30907                           ;OLED_PutChar@ch stored from wreg
 30908  01A9FE  0102               	movlb	2	; () banked
 30909  01AA00  6F20               	movwf	OLED_PutChar@ch& (0+255),b
 30910                           
 30911                           ;oled.c: 214: if((ch < 32) || (ch > 127)) {
 30912  01AA02  0E1F               	movlw	31
 30913  01AA04  0102               	movlb	2	; () banked
 30914  01AA06  6520               	cpfsgt	OLED_PutChar@ch& (0+255),b
 30915  01AA08  D003               	goto	u24600
 30916                           
 30917                           ; BSR set to: 2
 30918  01AA0A  0E7F               	movlw	127
 30919  01AA0C  6520               	cpfsgt	OLED_PutChar@ch& (0+255),b
 30920  01AA0E  D002               	goto	l1890
 30921  01AA10                     u24600:
 30922                           
 30923                           ; BSR set to: 2
 30924                           ;oled.c: 216: ch = ' ';
 30925  01AA10  0E20               	movlw	32
 30926  01AA12  6F20               	movwf	OLED_PutChar@ch& (0+255),b
 30927  01AA14                     l1890:
 30928                           
 30929                           ; BSR set to: 2
 30930                           ;oled.c: 218: };oled.c: 220: uint8_t length;;oled.c: 222: uint8_t data_array[9];;oled.c:
      +                           224: data_array[0] = 0x40;
 30931  01AA14  0E40               	movlw	64
 30932  01AA16  6F14               	movwf	OLED_PutChar@data_array& (0+255),b
 30933                           
 30934                           ; BSR set to: 2
 30935                           ;oled.c: 226: const uint8_t *input_base = &OledFont[ch - 32][0];
 30936  01AA18  0E00               	movlw	0
 30937  01AA1A  6F10               	movwf	??_OLED_PutChar& (0+255),b
 30938  01AA1C  0EFF               	movlw	255
 30939  01AA1E  6F11               	movwf	(??_OLED_PutChar+1)& (0+255),b
 30940  01AA20  5120               	movf	OLED_PutChar@ch& (0+255),w,b
 30941  01AA22  6F12               	movwf	(??_OLED_PutChar+2)& (0+255),b
 30942  01AA24  6B13               	clrf	(??_OLED_PutChar+3)& (0+255),b
 30943  01AA26  90D8               	bcf	status,0,c
 30944  01AA28  3712               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 30945  01AA2A  3713               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 30946  01AA2C  90D8               	bcf	status,0,c
 30947  01AA2E  3712               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 30948  01AA30  3713               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 30949  01AA32  90D8               	bcf	status,0,c
 30950  01AA34  3712               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 30951  01AA36  3713               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 30952  01AA38  5110               	movf	??_OLED_PutChar& (0+255),w,b
 30953  01AA3A  2712               	addwf	(??_OLED_PutChar+2)& (0+255),f,b
 30954  01AA3C  5111               	movf	(??_OLED_PutChar+1)& (0+255),w,b
 30955  01AA3E  2313               	addwfc	(??_OLED_PutChar+3)& (0+255),f,b
 30956  01AA40  0E4B               	movlw	low _OledFont
 30957  01AA42  2512               	addwf	(??_OLED_PutChar+2)& (0+255),w,b
 30958  01AA44  6F1D               	movwf	OLED_PutChar@input_base& (0+255),b
 30959  01AA46  0EE6               	movlw	high _OledFont
 30960  01AA48  2113               	addwfc	(??_OLED_PutChar+3)& (0+255),w,b
 30961  01AA4A  6F1E               	movwf	(OLED_PutChar@input_base+1)& (0+255),b
 30962                           
 30963                           ; BSR set to: 2
 30964                           ;oled.c: 228: memmove(data_array + 1, input_base, 8);
 30965  01AA4C  0E15               	movlw	low (OLED_PutChar@data_array+1)
 30966  01AA4E  6F00               	movwf	memmove@d1& (0+255),b
 30967  01AA50  0E02               	movlw	high (OLED_PutChar@data_array+1)
 30968  01AA52  6F01               	movwf	(memmove@d1+1)& (0+255),b
 30969  01AA54  C21D  F202         	movff	OLED_PutChar@input_base,memmove@s1
 30970  01AA58  C21E  F203         	movff	OLED_PutChar@input_base+1,memmove@s1+1
 30971  01AA5C  0E00               	movlw	0
 30972  01AA5E  6F05               	movwf	(memmove@n+1)& (0+255),b
 30973  01AA60  0E08               	movlw	8
 30974  01AA62  6F04               	movwf	memmove@n& (0+255),b
 30975  01AA64  EC1C  F0D6         	call	_memmove	;wreg free
 30976                           
 30977                           ;oled.c: 233: I2C2_MasterWrite(data_array, length, (uint16_t) 0x3C, &I2C_STATUS);
 30978  01AA68  0E14               	movlw	low OLED_PutChar@data_array
 30979  01AA6A  0102               	movlb	2	; () banked
 30980  01AA6C  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 30981  01AA6E  0E02               	movlw	high OLED_PutChar@data_array
 30982  01AA70  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 30983  01AA72  0E09               	movlw	9
 30984  01AA74  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 30985  01AA76  0E00               	movlw	0
 30986  01AA78  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 30987  01AA7A  0E3C               	movlw	60
 30988  01AA7C  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 30989  01AA7E  0EA2               	movlw	low _I2C_STATUS
 30990  01AA80  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 30991  01AA82  0E01               	movlw	high _I2C_STATUS
 30992  01AA84  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 30993  01AA86  ECA7  F0DD         	call	_I2C2_MasterWrite	;wreg free
 30994  01AA8A                     l19424:
 30995  01AA8A  0E02               	movlw	2
 30996  01AA8C  0101               	movlb	1	; () banked
 30997  01AA8E  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 30998  01AA90  B4D8               	btfsc	status,2,c
 30999  01AA92  D7FB               	goto	l19424
 31000                           
 31001                           ; BSR set to: 1
 31002                           ;oled.c: 237: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;oled.c: 238: I2C_STATUS == I2C2_ST
      +                          UCK_START ||;oled.c: 239: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;oled.c: 240: I2C_
      +                          STATUS == I2C2_DATA_NO_ACK ||;oled.c: 241: I2C_STATUS == I2C2_LOST_STATE ) {
 31003  01AA94  05A2               	decf	_I2C_STATUS& (0+255),w,b
 31004  01AA96  B4D8               	btfsc	status,2,c
 31005  01AA98  D010               	goto	u24660
 31006                           
 31007                           ; BSR set to: 1
 31008  01AA9A  0E03               	movlw	3
 31009  01AA9C  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31010  01AA9E  B4D8               	btfsc	status,2,c
 31011  01AAA0  D00C               	goto	u24660
 31012                           
 31013                           ; BSR set to: 1
 31014  01AAA2  0E04               	movlw	4
 31015  01AAA4  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31016  01AAA6  B4D8               	btfsc	status,2,c
 31017  01AAA8  D008               	goto	u24660
 31018                           
 31019                           ; BSR set to: 1
 31020  01AAAA  0E05               	movlw	5
 31021  01AAAC  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31022  01AAAE  B4D8               	btfsc	status,2,c
 31023  01AAB0  D004               	goto	u24660
 31024                           
 31025                           ; BSR set to: 1
 31026  01AAB2  0E06               	movlw	6
 31027  01AAB4  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31028  01AAB6  A4D8               	btfss	status,2,c
 31029  01AAB8  0012               	return	
 31030  01AABA                     u24660:
 31031                           
 31032                           ; BSR set to: 1
 31033                           ;oled.c: 242: error_handler.I2C_OLED_error_flag = 1;
 31034  01AABA  0E01               	movlw	1
 31035  01AABC  0100               	movlb	0	; () banked
 31036  01AABE  6FBC               	movwf	(_error_handler+3)& (0+255),b
 31037  01AAC0  0012               	return		;funcret
 31038  01AAC2                     __end_of_OLED_PutChar:
 31039                           	opt callstack 0
 31040                           
 31041 ;; *************** function _memmove *****************
 31042 ;; Defined at:
 31043 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memmove.c"
 31044 ;; Parameters:    Size  Location     Type
 31045 ;;  d1              2    0[BANK2 ] PTR void 
 31046 ;;		 -> OLED_PutChar@data_array(9), 
 31047 ;;  s1              2    2[BANK2 ] PTR const void 
 31048 ;;		 -> OledFont(768), 
 31049 ;;  n               2    4[BANK2 ] unsigned int 
 31050 ;; Auto vars:     Size  Location     Type
 31051 ;;  s               2   10[BANK2 ] PTR const unsigned char 
 31052 ;;		 -> OledFont(768), 
 31053 ;;  d               2    8[BANK2 ] PTR unsigned char 
 31054 ;;		 -> OLED_PutChar@data_array(9), 
 31055 ;; Return value:  Size  Location     Type
 31056 ;;                  2    0[BANK2 ] PTR void 
 31057 ;; Registers used:
 31058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 31059 ;; Tracked objects:
 31060 ;;		On entry : 0/0
 31061 ;;		On exit  : 0/0
 31062 ;;		Unchanged: 0/0
 31063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31064 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31065 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31066 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31067 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31068 ;;Total ram usage:       12 bytes
 31069 ;; Hardware stack levels used:    1
 31070 ;; Hardware stack levels required when called:   11
 31071 ;; This function calls:
 31072 ;;		Nothing
 31073 ;; This function is called by:
 31074 ;;		_OLED_PutChar
 31075 ;; This function uses a non-reentrant model
 31076 ;;
 31077                           
 31078                           	psect	text110
 31079  01AC38                     __ptext110:
 31080                           	opt callstack 0
 31081  01AC38                     _memmove:
 31082                           	opt callstack 15
 31083                           
 31084                           ;incstack = 0
 31085  01AC38  C202  F20A         	movff	memmove@s1,memmove@s
 31086  01AC3C  C203  F20B         	movff	memmove@s1+1,memmove@s+1
 31087  01AC40  C200  F208         	movff	memmove@d1,memmove@d
 31088  01AC44  C201  F209         	movff	memmove@d1+1,memmove@d+1
 31089  01AC48  0102               	movlb	2	; () banked
 31090  01AC4A  5108               	movf	memmove@d& (0+255),w,b
 31091  01AC4C  5D0A               	subwf	memmove@s& (0+255),w,b
 31092  01AC4E  5109               	movf	(memmove@d+1)& (0+255),w,b
 31093  01AC50  590B               	subwfb	(memmove@s+1)& (0+255),w,b
 31094  01AC52  B0D8               	btfsc	status,0,c
 31095  01AC54  D02F               	goto	l18548
 31096                           
 31097                           ; BSR set to: 2
 31098  01AC56  5104               	movf	memmove@n& (0+255),w,b
 31099  01AC58  250A               	addwf	memmove@s& (0+255),w,b
 31100  01AC5A  6F06               	movwf	??_memmove& (0+255),b
 31101  01AC5C  5105               	movf	(memmove@n+1)& (0+255),w,b
 31102  01AC5E  210B               	addwfc	(memmove@s+1)& (0+255),w,b
 31103  01AC60  6F07               	movwf	(??_memmove+1)& (0+255),b
 31104  01AC62  5106               	movf	??_memmove& (0+255),w,b
 31105  01AC64  5D08               	subwf	memmove@d& (0+255),w,b
 31106  01AC66  5107               	movf	(??_memmove+1)& (0+255),w,b
 31107  01AC68  5909               	subwfb	(memmove@d+1)& (0+255),w,b
 31108  01AC6A  B0D8               	btfsc	status,0,c
 31109  01AC6C  D023               	goto	l18548
 31110                           
 31111                           ; BSR set to: 2
 31112  01AC6E  5104               	movf	memmove@n& (0+255),w,b
 31113  01AC70  270A               	addwf	memmove@s& (0+255),f,b
 31114  01AC72  5105               	movf	(memmove@n+1)& (0+255),w,b
 31115  01AC74  230B               	addwfc	(memmove@s+1)& (0+255),f,b
 31116  01AC76  5104               	movf	memmove@n& (0+255),w,b
 31117  01AC78  2708               	addwf	memmove@d& (0+255),f,b
 31118  01AC7A  5105               	movf	(memmove@n+1)& (0+255),w,b
 31119  01AC7C  2309               	addwfc	(memmove@d+1)& (0+255),f,b
 31120  01AC7E                     l18544:
 31121                           
 31122                           ; BSR set to: 2
 31123  01AC7E  070A               	decf	memmove@s& (0+255),f,b
 31124  01AC80  A0D8               	btfss	status,0,c
 31125  01AC82  070B               	decf	(memmove@s+1)& (0+255),f,b
 31126  01AC84  C20A  FFF6         	movff	memmove@s,tblptrl
 31127  01AC88  C20B  FFF7         	movff	memmove@s+1,tblptrh
 31128  01AC8C                     	if	0	;tblptru may be non-zero
 31129  01AC8C                     	endif
 31130  01AC8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 31131  01AC8C  0E00               	movlw	low (__mediumconst shr (0+16))
 31132  01AC8E  6EF8               	movwf	tblptru,c
 31133  01AC90                     	endif
 31134  01AC90  0708               	decf	memmove@d& (0+255),f,b
 31135  01AC92  A0D8               	btfss	status,0,c
 31136  01AC94  0709               	decf	(memmove@d+1)& (0+255),f,b
 31137  01AC96  C208  FFD9         	movff	memmove@d,fsr2l
 31138  01AC9A  C209  FFDA         	movff	memmove@d+1,fsr2h
 31139  01AC9E  0008               	tblrd		*
 31140  01ACA0  CFF5 FFDF          	movff	tablat,indf2
 31141                           
 31142                           ; BSR set to: 2
 31143  01ACA4  0704               	decf	memmove@n& (0+255),f,b
 31144  01ACA6  A0D8               	btfss	status,0,c
 31145  01ACA8  0705               	decf	(memmove@n+1)& (0+255),f,b
 31146  01ACAA  5104               	movf	memmove@n& (0+255),w,b
 31147  01ACAC  1105               	iorwf	(memmove@n+1)& (0+255),w,b
 31148  01ACAE  B4D8               	btfsc	status,2,c
 31149  01ACB0  0012               	return	
 31150  01ACB2  D7E5               	goto	l18544
 31151  01ACB4                     l18548:
 31152                           
 31153                           ; BSR set to: 2
 31154  01ACB4  5104               	movf	memmove@n& (0+255),w,b
 31155  01ACB6  1105               	iorwf	(memmove@n+1)& (0+255),w,b
 31156  01ACB8  B4D8               	btfsc	status,2,c
 31157  01ACBA  0012               	return	
 31158                           
 31159                           ; BSR set to: 2
 31160  01ACBC  C20A  FFF6         	movff	memmove@s,tblptrl
 31161  01ACC0  C20B  FFF7         	movff	memmove@s+1,tblptrh
 31162  01ACC4                     	if	0	;tblptru may be non-zero
 31163  01ACC4                     	endif
 31164  01ACC4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 31165  01ACC4  0E00               	movlw	low (__mediumconst shr (0+16))
 31166  01ACC6  6EF8               	movwf	tblptru,c
 31167  01ACC8                     	endif
 31168  01ACC8  C208  FFD9         	movff	memmove@d,fsr2l
 31169  01ACCC  C209  FFDA         	movff	memmove@d+1,fsr2h
 31170  01ACD0  0008               	tblrd		*
 31171  01ACD2  CFF5 FFDF          	movff	tablat,indf2
 31172                           
 31173                           ; BSR set to: 2
 31174  01ACD6  4B0A               	infsnz	memmove@s& (0+255),f,b
 31175  01ACD8  2B0B               	incf	(memmove@s+1)& (0+255),f,b
 31176                           
 31177                           ; BSR set to: 2
 31178  01ACDA  4B08               	infsnz	memmove@d& (0+255),f,b
 31179  01ACDC  2B09               	incf	(memmove@d+1)& (0+255),f,b
 31180                           
 31181                           ; BSR set to: 2
 31182  01ACDE  0704               	decf	memmove@n& (0+255),f,b
 31183  01ACE0  A0D8               	btfss	status,0,c
 31184  01ACE2  0705               	decf	(memmove@n+1)& (0+255),f,b
 31185  01ACE4  D7E7               	goto	l18548
 31186  01ACE6                     __end_of_memmove:
 31187                           	opt callstack 0
 31188                           
 31189 ;; *************** function _LM73TempSensorInitialize *****************
 31190 ;; Defined at:
 31191 ;;		line 13 in file "LM73_I2C.c"
 31192 ;; Parameters:    Size  Location     Type
 31193 ;;		None
 31194 ;; Auto vars:     Size  Location     Type
 31195 ;;  output_data_    2   16[BANK2 ] unsigned char [2]
 31196 ;;  length          1    0        unsigned char 
 31197 ;; Return value:  Size  Location     Type
 31198 ;;                  1    wreg      void 
 31199 ;; Registers used:
 31200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31201 ;; Tracked objects:
 31202 ;;		On entry : 0/0
 31203 ;;		On exit  : 0/0
 31204 ;;		Unchanged: 0/0
 31205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31207 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31209 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31210 ;;Total ram usage:        3 bytes
 31211 ;; Hardware stack levels used:    1
 31212 ;; Hardware stack levels required when called:   14
 31213 ;; This function calls:
 31214 ;;		_I2C2_MasterWrite
 31215 ;; This function is called by:
 31216 ;;		_main
 31217 ;; This function uses a non-reentrant model
 31218 ;;
 31219                           
 31220                           	psect	text111
 31221  01919E                     __ptext111:
 31222                           	opt callstack 0
 31223  01919E                     _LM73TempSensorInitialize:
 31224                           	opt callstack 16
 31225                           
 31226                           ;LM73_I2C.c: 16: PIE0bits.INT1IE = 0;
 31227                           
 31228                           ; BSR set to: 2
 31229                           ;incstack = 0
 31230  01919E  010E               	movlb	14	; () banked
 31231  0191A0  93C2               	bcf	194,1,b	;volatile
 31232                           
 31233                           ;LM73_I2C.c: 17: PIE0bits.INT2IE = 0;
 31234  0191A2  95C2               	bcf	194,2,b	;volatile
 31235  0191A4                     l22154:
 31236  0191A4  0E02               	movlw	2
 31237  0191A6  0101               	movlb	1	; () banked
 31238  0191A8  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31239  0191AA  B4D8               	btfsc	status,2,c
 31240  0191AC  D7FB               	goto	l22154
 31241                           
 31242                           ; BSR set to: 1
 31243                           ;LM73_I2C.c: 22: uint8_t length;;LM73_I2C.c: 23: uint8_t output_data_array[2];;LM73_I2C.
      +                          c: 24: output_data_array[0] = 0x01;
 31244  0191AE  0E01               	movlw	1
 31245  0191B0  0102               	movlb	2	; () banked
 31246  0191B2  6F10               	movwf	LM73TempSensorInitialize@output_data_array& (0+255),b
 31247                           
 31248                           ;LM73_I2C.c: 25: output_data_array[1] = 0b01000000;
 31249  0191B4  0E40               	movlw	64
 31250  0191B6  6F11               	movwf	(LM73TempSensorInitialize@output_data_array+1)& (0+255),b
 31251                           
 31252                           ; BSR set to: 2
 31253                           ;LM73_I2C.c: 27: I2C2_MasterWrite(output_data_array, length, 0x4D, &I2C_STATUS);
 31254  0191B8  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 31255  0191BA  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31256  0191BC  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 31257  0191BE  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31258  0191C0  0E02               	movlw	2
 31259  0191C2  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31260  0191C4  0E00               	movlw	0
 31261  0191C6  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31262  0191C8  0E4D               	movlw	77
 31263  0191CA  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31264  0191CC  0EA2               	movlw	low _I2C_STATUS
 31265  0191CE  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31266  0191D0  0E01               	movlw	high _I2C_STATUS
 31267  0191D2  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31268  0191D4  ECA7  F0DD         	call	_I2C2_MasterWrite	;wreg free
 31269  0191D8                     l22160:
 31270  0191D8  0E02               	movlw	2
 31271  0191DA  0101               	movlb	1	; () banked
 31272  0191DC  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31273  0191DE  B4D8               	btfsc	status,2,c
 31274  0191E0  D7FB               	goto	l22160
 31275                           
 31276                           ; BSR set to: 1
 31277                           ;LM73_I2C.c: 29: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 30: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 31: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 32: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 33: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 31278  0191E2  05A2               	decf	_I2C_STATUS& (0+255),w,b
 31279  0191E4  B4D8               	btfsc	status,2,c
 31280  0191E6  D010               	goto	u27980
 31281                           
 31282                           ; BSR set to: 1
 31283  0191E8  0E03               	movlw	3
 31284  0191EA  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31285  0191EC  B4D8               	btfsc	status,2,c
 31286  0191EE  D00C               	goto	u27980
 31287                           
 31288                           ; BSR set to: 1
 31289  0191F0  0E04               	movlw	4
 31290  0191F2  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31291  0191F4  B4D8               	btfsc	status,2,c
 31292  0191F6  D008               	goto	u27980
 31293                           
 31294                           ; BSR set to: 1
 31295  0191F8  0E05               	movlw	5
 31296  0191FA  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31297  0191FC  B4D8               	btfsc	status,2,c
 31298  0191FE  D004               	goto	u27980
 31299                           
 31300                           ; BSR set to: 1
 31301  019200  0E06               	movlw	6
 31302  019202  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31303  019204  A4D8               	btfss	status,2,c
 31304  019206  D003               	goto	l22174
 31305  019208                     u27980:
 31306                           
 31307                           ; BSR set to: 1
 31308                           ;LM73_I2C.c: 34: error_handler.I2C_QI_Temp_Sense_error_flag = 1;
 31309  019208  0E01               	movlw	1
 31310  01920A  0100               	movlb	0	; () banked
 31311  01920C  6FBD               	movwf	(_error_handler+4)& (0+255),b
 31312  01920E                     l22174:
 31313                           
 31314                           ;LM73_I2C.c: 35: };LM73_I2C.c: 38: I2C2_MasterWrite(output_data_array, length, 0x4C, &I2
      +                          C_STATUS);
 31315  01920E  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 31316  019210  0102               	movlb	2	; () banked
 31317  019212  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31318  019214  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 31319  019216  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31320  019218  0E02               	movlw	2
 31321  01921A  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31322  01921C  0E00               	movlw	0
 31323  01921E  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31324  019220  0E4C               	movlw	76
 31325  019222  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31326  019224  0EA2               	movlw	low _I2C_STATUS
 31327  019226  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31328  019228  0E01               	movlw	high _I2C_STATUS
 31329  01922A  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31330  01922C  ECA7  F0DD         	call	_I2C2_MasterWrite	;wreg free
 31331  019230                     l22176:
 31332  019230  0E02               	movlw	2
 31333  019232  0101               	movlb	1	; () banked
 31334  019234  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31335  019236  B4D8               	btfsc	status,2,c
 31336  019238  D7FB               	goto	l22176
 31337                           
 31338                           ; BSR set to: 1
 31339                           ;LM73_I2C.c: 40: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 41: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 42: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 43: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 44: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 31340  01923A  05A2               	decf	_I2C_STATUS& (0+255),w,b
 31341  01923C  B4D8               	btfsc	status,2,c
 31342  01923E  D010               	goto	u28040
 31343                           
 31344                           ; BSR set to: 1
 31345  019240  0E03               	movlw	3
 31346  019242  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31347  019244  B4D8               	btfsc	status,2,c
 31348  019246  D00C               	goto	u28040
 31349                           
 31350                           ; BSR set to: 1
 31351  019248  0E04               	movlw	4
 31352  01924A  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31353  01924C  B4D8               	btfsc	status,2,c
 31354  01924E  D008               	goto	u28040
 31355                           
 31356                           ; BSR set to: 1
 31357  019250  0E05               	movlw	5
 31358  019252  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31359  019254  B4D8               	btfsc	status,2,c
 31360  019256  D004               	goto	u28040
 31361                           
 31362                           ; BSR set to: 1
 31363  019258  0E06               	movlw	6
 31364  01925A  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31365  01925C  A4D8               	btfss	status,2,c
 31366  01925E  D003               	goto	l22190
 31367  019260                     u28040:
 31368                           
 31369                           ; BSR set to: 1
 31370                           ;LM73_I2C.c: 45: error_handler.I2C_POS5_Temp_Sense_error_flag = 1;
 31371  019260  0E01               	movlw	1
 31372  019262  0100               	movlb	0	; () banked
 31373  019264  6FBE               	movwf	(_error_handler+5)& (0+255),b
 31374  019266                     l22190:
 31375                           
 31376                           ;LM73_I2C.c: 46: };LM73_I2C.c: 49: I2C2_MasterWrite(output_data_array, length, 0x4E, &I2
      +                          C_STATUS);
 31377  019266  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 31378  019268  0102               	movlb	2	; () banked
 31379  01926A  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31380  01926C  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 31381  01926E  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31382  019270  0E02               	movlw	2
 31383  019272  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31384  019274  0E00               	movlw	0
 31385  019276  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31386  019278  0E4E               	movlw	78
 31387  01927A  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31388  01927C  0EA2               	movlw	low _I2C_STATUS
 31389  01927E  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31390  019280  0E01               	movlw	high _I2C_STATUS
 31391  019282  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31392  019284  ECA7  F0DD         	call	_I2C2_MasterWrite	;wreg free
 31393  019288                     l22192:
 31394  019288  0E02               	movlw	2
 31395  01928A  0101               	movlb	1	; () banked
 31396  01928C  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31397  01928E  B4D8               	btfsc	status,2,c
 31398  019290  D7FB               	goto	l22192
 31399                           
 31400                           ; BSR set to: 1
 31401                           ;LM73_I2C.c: 51: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 52: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 53: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 54: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 55: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 31402  019292  05A2               	decf	_I2C_STATUS& (0+255),w,b
 31403  019294  B4D8               	btfsc	status,2,c
 31404  019296  D010               	goto	u28100
 31405                           
 31406                           ; BSR set to: 1
 31407  019298  0E03               	movlw	3
 31408  01929A  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31409  01929C  B4D8               	btfsc	status,2,c
 31410  01929E  D00C               	goto	u28100
 31411                           
 31412                           ; BSR set to: 1
 31413  0192A0  0E04               	movlw	4
 31414  0192A2  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31415  0192A4  B4D8               	btfsc	status,2,c
 31416  0192A6  D008               	goto	u28100
 31417                           
 31418                           ; BSR set to: 1
 31419  0192A8  0E05               	movlw	5
 31420  0192AA  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31421  0192AC  B4D8               	btfsc	status,2,c
 31422  0192AE  D004               	goto	u28100
 31423                           
 31424                           ; BSR set to: 1
 31425  0192B0  0E06               	movlw	6
 31426  0192B2  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31427  0192B4  A4D8               	btfss	status,2,c
 31428  0192B6  D003               	goto	l1321
 31429  0192B8                     u28100:
 31430                           
 31431                           ; BSR set to: 1
 31432                           ;LM73_I2C.c: 56: error_handler.I2C_Ambient_Temp_Sense_error_flag = 1;
 31433  0192B8  0E01               	movlw	1
 31434  0192BA  0100               	movlb	0	; () banked
 31435  0192BC  6FBF               	movwf	(_error_handler+6)& (0+255),b
 31436  0192BE                     l1321:
 31437                           
 31438                           ;LM73_I2C.c: 57: };LM73_I2C.c: 60: output_data_array[0] = 0x04;
 31439  0192BE  0E04               	movlw	4
 31440  0192C0  0102               	movlb	2	; () banked
 31441  0192C2  6F10               	movwf	LM73TempSensorInitialize@output_data_array& (0+255),b
 31442                           
 31443                           ;LM73_I2C.c: 61: output_data_array[1] = 0b11100000;
 31444  0192C4  0EE0               	movlw	224
 31445  0192C6  6F11               	movwf	(LM73TempSensorInitialize@output_data_array+1)& (0+255),b
 31446                           
 31447                           ; BSR set to: 2
 31448                           ;LM73_I2C.c: 63: I2C2_MasterWrite(output_data_array, length, 0x4D, &I2C_STATUS);
 31449  0192C8  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 31450  0192CA  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31451  0192CC  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 31452  0192CE  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31453  0192D0  0E02               	movlw	2
 31454  0192D2  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31455  0192D4  0E00               	movlw	0
 31456  0192D6  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31457  0192D8  0E4D               	movlw	77
 31458  0192DA  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31459  0192DC  0EA2               	movlw	low _I2C_STATUS
 31460  0192DE  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31461  0192E0  0E01               	movlw	high _I2C_STATUS
 31462  0192E2  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31463  0192E4  ECA7  F0DD         	call	_I2C2_MasterWrite	;wreg free
 31464  0192E8                     l22208:
 31465  0192E8  0E02               	movlw	2
 31466  0192EA  0101               	movlb	1	; () banked
 31467  0192EC  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31468  0192EE  B4D8               	btfsc	status,2,c
 31469  0192F0  D7FB               	goto	l22208
 31470                           
 31471                           ; BSR set to: 1
 31472                           ;LM73_I2C.c: 65: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 66: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 67: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 68: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 69: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 31473  0192F2  05A2               	decf	_I2C_STATUS& (0+255),w,b
 31474  0192F4  B4D8               	btfsc	status,2,c
 31475  0192F6  D010               	goto	u28160
 31476                           
 31477                           ; BSR set to: 1
 31478  0192F8  0E03               	movlw	3
 31479  0192FA  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31480  0192FC  B4D8               	btfsc	status,2,c
 31481  0192FE  D00C               	goto	u28160
 31482                           
 31483                           ; BSR set to: 1
 31484  019300  0E04               	movlw	4
 31485  019302  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31486  019304  B4D8               	btfsc	status,2,c
 31487  019306  D008               	goto	u28160
 31488                           
 31489                           ; BSR set to: 1
 31490  019308  0E05               	movlw	5
 31491  01930A  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31492  01930C  B4D8               	btfsc	status,2,c
 31493  01930E  D004               	goto	u28160
 31494                           
 31495                           ; BSR set to: 1
 31496  019310  0E06               	movlw	6
 31497  019312  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31498  019314  A4D8               	btfss	status,2,c
 31499  019316  D003               	goto	l22222
 31500  019318                     u28160:
 31501                           
 31502                           ; BSR set to: 1
 31503                           ;LM73_I2C.c: 70: error_handler.I2C_QI_Temp_Sense_error_flag = 1;
 31504  019318  0E01               	movlw	1
 31505  01931A  0100               	movlb	0	; () banked
 31506  01931C  6FBD               	movwf	(_error_handler+4)& (0+255),b
 31507  01931E                     l22222:
 31508                           
 31509                           ;LM73_I2C.c: 71: };LM73_I2C.c: 74: I2C2_MasterWrite(output_data_array, length, 0x4C, &I2
      +                          C_STATUS);
 31510  01931E  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 31511  019320  0102               	movlb	2	; () banked
 31512  019322  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31513  019324  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 31514  019326  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31515  019328  0E02               	movlw	2
 31516  01932A  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31517  01932C  0E00               	movlw	0
 31518  01932E  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31519  019330  0E4C               	movlw	76
 31520  019332  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31521  019334  0EA2               	movlw	low _I2C_STATUS
 31522  019336  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31523  019338  0E01               	movlw	high _I2C_STATUS
 31524  01933A  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31525  01933C  ECA7  F0DD         	call	_I2C2_MasterWrite	;wreg free
 31526  019340                     l22224:
 31527  019340  0E02               	movlw	2
 31528  019342  0101               	movlb	1	; () banked
 31529  019344  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31530  019346  B4D8               	btfsc	status,2,c
 31531  019348  D7FB               	goto	l22224
 31532                           
 31533                           ; BSR set to: 1
 31534                           ;LM73_I2C.c: 76: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 77: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 78: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 79: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 80: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 31535  01934A  05A2               	decf	_I2C_STATUS& (0+255),w,b
 31536  01934C  B4D8               	btfsc	status,2,c
 31537  01934E  D010               	goto	u28220
 31538                           
 31539                           ; BSR set to: 1
 31540  019350  0E03               	movlw	3
 31541  019352  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31542  019354  B4D8               	btfsc	status,2,c
 31543  019356  D00C               	goto	u28220
 31544                           
 31545                           ; BSR set to: 1
 31546  019358  0E04               	movlw	4
 31547  01935A  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31548  01935C  B4D8               	btfsc	status,2,c
 31549  01935E  D008               	goto	u28220
 31550                           
 31551                           ; BSR set to: 1
 31552  019360  0E05               	movlw	5
 31553  019362  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31554  019364  B4D8               	btfsc	status,2,c
 31555  019366  D004               	goto	u28220
 31556                           
 31557                           ; BSR set to: 1
 31558  019368  0E06               	movlw	6
 31559  01936A  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31560  01936C  A4D8               	btfss	status,2,c
 31561  01936E  D003               	goto	l22238
 31562  019370                     u28220:
 31563                           
 31564                           ; BSR set to: 1
 31565                           ;LM73_I2C.c: 81: error_handler.I2C_POS5_Temp_Sense_error_flag = 1;
 31566  019370  0E01               	movlw	1
 31567  019372  0100               	movlb	0	; () banked
 31568  019374  6FBE               	movwf	(_error_handler+5)& (0+255),b
 31569  019376                     l22238:
 31570                           
 31571                           ;LM73_I2C.c: 82: };LM73_I2C.c: 85: I2C2_MasterWrite(output_data_array, length, 0x4E, &I2
      +                          C_STATUS);
 31572  019376  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 31573  019378  0102               	movlb	2	; () banked
 31574  01937A  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31575  01937C  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 31576  01937E  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31577  019380  0E02               	movlw	2
 31578  019382  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31579  019384  0E00               	movlw	0
 31580  019386  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31581  019388  0E4E               	movlw	78
 31582  01938A  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31583  01938C  0EA2               	movlw	low _I2C_STATUS
 31584  01938E  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31585  019390  0E01               	movlw	high _I2C_STATUS
 31586  019392  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31587  019394  ECA7  F0DD         	call	_I2C2_MasterWrite	;wreg free
 31588  019398                     l22240:
 31589  019398  0E02               	movlw	2
 31590  01939A  0101               	movlb	1	; () banked
 31591  01939C  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31592  01939E  B4D8               	btfsc	status,2,c
 31593  0193A0  D7FB               	goto	l22240
 31594                           
 31595                           ; BSR set to: 1
 31596                           ;LM73_I2C.c: 87: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 88: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 89: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 90: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 91: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 31597  0193A2  05A2               	decf	_I2C_STATUS& (0+255),w,b
 31598  0193A4  B4D8               	btfsc	status,2,c
 31599  0193A6  D010               	goto	u28280
 31600                           
 31601                           ; BSR set to: 1
 31602  0193A8  0E03               	movlw	3
 31603  0193AA  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31604  0193AC  B4D8               	btfsc	status,2,c
 31605  0193AE  D00C               	goto	u28280
 31606                           
 31607                           ; BSR set to: 1
 31608  0193B0  0E04               	movlw	4
 31609  0193B2  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31610  0193B4  B4D8               	btfsc	status,2,c
 31611  0193B6  D008               	goto	u28280
 31612                           
 31613                           ; BSR set to: 1
 31614  0193B8  0E05               	movlw	5
 31615  0193BA  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31616  0193BC  B4D8               	btfsc	status,2,c
 31617  0193BE  D004               	goto	u28280
 31618                           
 31619                           ; BSR set to: 1
 31620  0193C0  0E06               	movlw	6
 31621  0193C2  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31622  0193C4  A4D8               	btfss	status,2,c
 31623  0193C6  D003               	goto	l22254
 31624  0193C8                     u28280:
 31625                           
 31626                           ; BSR set to: 1
 31627                           ;LM73_I2C.c: 92: error_handler.I2C_Ambient_Temp_Sense_error_flag = 1;
 31628  0193C8  0E01               	movlw	1
 31629  0193CA  0100               	movlb	0	; () banked
 31630  0193CC  6FBF               	movwf	(_error_handler+6)& (0+255),b
 31631  0193CE                     l22254:
 31632                           
 31633                           ;LM73_I2C.c: 93: };LM73_I2C.c: 96: PIE0bits.INT1IE = 1;
 31634  0193CE  010E               	movlb	14	; () banked
 31635  0193D0  83C2               	bsf	194,1,b	;volatile
 31636                           
 31637                           ; BSR set to: 14
 31638                           ;LM73_I2C.c: 97: PIE0bits.INT2IE = 1;
 31639  0193D2  85C2               	bsf	194,2,b	;volatile
 31640                           
 31641                           ; BSR set to: 14
 31642  0193D4  0012               	return		;funcret
 31643  0193D6                     __end_of_LM73TempSensorInitialize:
 31644                           	opt callstack 0
 31645                           
 31646 ;; *************** function _LM73AcquisitionHandler *****************
 31647 ;; Defined at:
 31648 ;;		line 102 in file "LM73_I2C.c"
 31649 ;; Parameters:    Size  Location     Type
 31650 ;;		None
 31651 ;; Auto vars:     Size  Location     Type
 31652 ;;		None
 31653 ;; Return value:  Size  Location     Type
 31654 ;;                  1    wreg      void 
 31655 ;; Registers used:
 31656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31657 ;; Tracked objects:
 31658 ;;		On entry : 0/0
 31659 ;;		On exit  : 0/0
 31660 ;;		Unchanged: 0/0
 31661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31666 ;;Total ram usage:        0 bytes
 31667 ;; Hardware stack levels used:    1
 31668 ;; Hardware stack levels required when called:   14
 31669 ;; This function calls:
 31670 ;;		_I2C2_MasterRead
 31671 ;;		_I2C2_MasterWrite
 31672 ;;		_LM73Convert
 31673 ;; This function is called by:
 31674 ;;		_main
 31675 ;; This function uses a non-reentrant model
 31676 ;;
 31677                           
 31678                           	psect	text112
 31679  0193D6                     __ptext112:
 31680                           	opt callstack 0
 31681  0193D6                     _LM73AcquisitionHandler:
 31682                           	opt callstack 16
 31683                           
 31684                           ;LM73_I2C.c: 105: PIE0bits.INT1IE = 0;
 31685                           
 31686                           ; BSR set to: 14
 31687                           ;incstack = 0
 31688  0193D6  010E               	movlb	14	; () banked
 31689  0193D8  93C2               	bcf	194,1,b	;volatile
 31690                           
 31691                           ;LM73_I2C.c: 106: PIE0bits.INT2IE = 0;
 31692  0193DA  95C2               	bcf	194,2,b	;volatile
 31693  0193DC                     l22288:
 31694  0193DC  0E02               	movlw	2
 31695  0193DE  0101               	movlb	1	; () banked
 31696  0193E0  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31697  0193E2  B4D8               	btfsc	status,2,c
 31698  0193E4  D7FB               	goto	l22288
 31699                           
 31700                           ; BSR set to: 1
 31701                           ;LM73_I2C.c: 112: I2C2_MasterWrite(0x00, 1, 0x4D, &I2C_STATUS);
 31702  0193E6  0E00               	movlw	0
 31703  0193E8  0102               	movlb	2	; () banked
 31704  0193EA  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31705  0193EC  0E00               	movlw	0
 31706  0193EE  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31707  0193F0  0E01               	movlw	1
 31708  0193F2  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31709  0193F4  0E00               	movlw	0
 31710  0193F6  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31711  0193F8  0E4D               	movlw	77
 31712  0193FA  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31713  0193FC  0EA2               	movlw	low _I2C_STATUS
 31714  0193FE  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31715  019400  0E01               	movlw	high _I2C_STATUS
 31716  019402  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31717  019404  ECA7  F0DD         	call	_I2C2_MasterWrite	;wreg free
 31718  019408                     l22292:
 31719  019408  0E02               	movlw	2
 31720  01940A  0101               	movlb	1	; () banked
 31721  01940C  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31722  01940E  B4D8               	btfsc	status,2,c
 31723  019410  D7FB               	goto	l22292
 31724                           
 31725                           ; BSR set to: 1
 31726                           ;LM73_I2C.c: 114: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 115: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 116: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 117: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 118: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 31727  019412  05A2               	decf	_I2C_STATUS& (0+255),w,b
 31728  019414  B4D8               	btfsc	status,2,c
 31729  019416  D010               	goto	u28390
 31730                           
 31731                           ; BSR set to: 1
 31732  019418  0E03               	movlw	3
 31733  01941A  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31734  01941C  B4D8               	btfsc	status,2,c
 31735  01941E  D00C               	goto	u28390
 31736                           
 31737                           ; BSR set to: 1
 31738  019420  0E04               	movlw	4
 31739  019422  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31740  019424  B4D8               	btfsc	status,2,c
 31741  019426  D008               	goto	u28390
 31742                           
 31743                           ; BSR set to: 1
 31744  019428  0E05               	movlw	5
 31745  01942A  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31746  01942C  B4D8               	btfsc	status,2,c
 31747  01942E  D004               	goto	u28390
 31748                           
 31749                           ; BSR set to: 1
 31750  019430  0E06               	movlw	6
 31751  019432  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31752  019434  A4D8               	btfss	status,2,c
 31753  019436  D003               	goto	l22306
 31754  019438                     u28390:
 31755                           
 31756                           ; BSR set to: 1
 31757                           ;LM73_I2C.c: 119: error_handler.I2C_QI_Temp_Sense_error_flag = 1;
 31758  019438  0E01               	movlw	1
 31759  01943A  0100               	movlb	0	; () banked
 31760  01943C  6FBD               	movwf	(_error_handler+4)& (0+255),b
 31761  01943E                     l22306:
 31762                           
 31763                           ;LM73_I2C.c: 120: };LM73_I2C.c: 122: I2C2_MasterRead(LM73_temp_results.QI_data_raw, 2, 0
      +                          x4D, &I2C_STATUS);
 31764  01943E  0EE7               	movlw	low (_LM73_temp_results+12)
 31765  019440  0102               	movlb	2	; () banked
 31766  019442  6F09               	movwf	I2C2_MasterRead@pdata& (0+255),b
 31767  019444  0E02               	movlw	high (_LM73_temp_results+12)
 31768  019446  6F0A               	movwf	(I2C2_MasterRead@pdata+1)& (0+255),b
 31769  019448  0E02               	movlw	2
 31770  01944A  6F0B               	movwf	I2C2_MasterRead@length& (0+255),b
 31771  01944C  0E00               	movlw	0
 31772  01944E  6F0D               	movwf	(I2C2_MasterRead@address+1)& (0+255),b
 31773  019450  0E4D               	movlw	77
 31774  019452  6F0C               	movwf	I2C2_MasterRead@address& (0+255),b
 31775  019454  0EA2               	movlw	low _I2C_STATUS
 31776  019456  6F0E               	movwf	I2C2_MasterRead@pflag& (0+255),b
 31777  019458  0E01               	movlw	high _I2C_STATUS
 31778  01945A  6F0F               	movwf	(I2C2_MasterRead@pflag+1)& (0+255),b
 31779  01945C  ECCF  F0DD         	call	_I2C2_MasterRead	;wreg free
 31780  019460                     l22308:
 31781  019460  0E02               	movlw	2
 31782  019462  0101               	movlb	1	; () banked
 31783  019464  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31784  019466  B4D8               	btfsc	status,2,c
 31785  019468  D7FB               	goto	l22308
 31786                           
 31787                           ; BSR set to: 1
 31788                           ;LM73_I2C.c: 124: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 125: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 126: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 127: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 128: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 31789  01946A  05A2               	decf	_I2C_STATUS& (0+255),w,b
 31790  01946C  B4D8               	btfsc	status,2,c
 31791  01946E  D010               	goto	u28450
 31792                           
 31793                           ; BSR set to: 1
 31794  019470  0E03               	movlw	3
 31795  019472  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31796  019474  B4D8               	btfsc	status,2,c
 31797  019476  D00C               	goto	u28450
 31798                           
 31799                           ; BSR set to: 1
 31800  019478  0E04               	movlw	4
 31801  01947A  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31802  01947C  B4D8               	btfsc	status,2,c
 31803  01947E  D008               	goto	u28450
 31804                           
 31805                           ; BSR set to: 1
 31806  019480  0E05               	movlw	5
 31807  019482  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31808  019484  B4D8               	btfsc	status,2,c
 31809  019486  D004               	goto	u28450
 31810                           
 31811                           ; BSR set to: 1
 31812  019488  0E06               	movlw	6
 31813  01948A  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31814  01948C  A4D8               	btfss	status,2,c
 31815  01948E  D003               	goto	l22322
 31816  019490                     u28450:
 31817                           
 31818                           ; BSR set to: 1
 31819                           ;LM73_I2C.c: 129: error_handler.I2C_QI_Temp_Sense_error_flag = 1;
 31820  019490  0E01               	movlw	1
 31821  019492  0100               	movlb	0	; () banked
 31822  019494  6FBD               	movwf	(_error_handler+4)& (0+255),b
 31823  019496                     l22322:
 31824                           
 31825                           ;LM73_I2C.c: 130: };LM73_I2C.c: 134: I2C2_MasterWrite(0x00, 1, 0x4C, &I2C_STATUS);
 31826  019496  0E00               	movlw	0
 31827  019498  0102               	movlb	2	; () banked
 31828  01949A  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31829  01949C  0E00               	movlw	0
 31830  01949E  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31831  0194A0  0E01               	movlw	1
 31832  0194A2  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31833  0194A4  0E00               	movlw	0
 31834  0194A6  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31835  0194A8  0E4C               	movlw	76
 31836  0194AA  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31837  0194AC  0EA2               	movlw	low _I2C_STATUS
 31838  0194AE  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31839  0194B0  0E01               	movlw	high _I2C_STATUS
 31840  0194B2  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31841  0194B4  ECA7  F0DD         	call	_I2C2_MasterWrite	;wreg free
 31842  0194B8                     l22324:
 31843  0194B8  0E02               	movlw	2
 31844  0194BA  0101               	movlb	1	; () banked
 31845  0194BC  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31846  0194BE  B4D8               	btfsc	status,2,c
 31847  0194C0  D7FB               	goto	l22324
 31848                           
 31849                           ; BSR set to: 1
 31850                           ;LM73_I2C.c: 136: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 137: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 138: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 139: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 140: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 31851  0194C2  05A2               	decf	_I2C_STATUS& (0+255),w,b
 31852  0194C4  B4D8               	btfsc	status,2,c
 31853  0194C6  D010               	goto	u28510
 31854                           
 31855                           ; BSR set to: 1
 31856  0194C8  0E03               	movlw	3
 31857  0194CA  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31858  0194CC  B4D8               	btfsc	status,2,c
 31859  0194CE  D00C               	goto	u28510
 31860                           
 31861                           ; BSR set to: 1
 31862  0194D0  0E04               	movlw	4
 31863  0194D2  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31864  0194D4  B4D8               	btfsc	status,2,c
 31865  0194D6  D008               	goto	u28510
 31866                           
 31867                           ; BSR set to: 1
 31868  0194D8  0E05               	movlw	5
 31869  0194DA  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31870  0194DC  B4D8               	btfsc	status,2,c
 31871  0194DE  D004               	goto	u28510
 31872                           
 31873                           ; BSR set to: 1
 31874  0194E0  0E06               	movlw	6
 31875  0194E2  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31876  0194E4  A4D8               	btfss	status,2,c
 31877  0194E6  D003               	goto	l22338
 31878  0194E8                     u28510:
 31879                           
 31880                           ; BSR set to: 1
 31881                           ;LM73_I2C.c: 141: error_handler.I2C_POS5_Temp_Sense_error_flag = 1;
 31882  0194E8  0E01               	movlw	1
 31883  0194EA  0100               	movlb	0	; () banked
 31884  0194EC  6FBE               	movwf	(_error_handler+5)& (0+255),b
 31885  0194EE                     l22338:
 31886                           
 31887                           ;LM73_I2C.c: 142: };LM73_I2C.c: 144: I2C2_MasterRead(LM73_temp_results.POS5_data_raw, 2,
      +                           0x4C, &I2C_STATUS);
 31888  0194EE  0EE9               	movlw	low (_LM73_temp_results+14)
 31889  0194F0  0102               	movlb	2	; () banked
 31890  0194F2  6F09               	movwf	I2C2_MasterRead@pdata& (0+255),b
 31891  0194F4  0E02               	movlw	high (_LM73_temp_results+14)
 31892  0194F6  6F0A               	movwf	(I2C2_MasterRead@pdata+1)& (0+255),b
 31893  0194F8  0E02               	movlw	2
 31894  0194FA  6F0B               	movwf	I2C2_MasterRead@length& (0+255),b
 31895  0194FC  0E00               	movlw	0
 31896  0194FE  6F0D               	movwf	(I2C2_MasterRead@address+1)& (0+255),b
 31897  019500  0E4C               	movlw	76
 31898  019502  6F0C               	movwf	I2C2_MasterRead@address& (0+255),b
 31899  019504  0EA2               	movlw	low _I2C_STATUS
 31900  019506  6F0E               	movwf	I2C2_MasterRead@pflag& (0+255),b
 31901  019508  0E01               	movlw	high _I2C_STATUS
 31902  01950A  6F0F               	movwf	(I2C2_MasterRead@pflag+1)& (0+255),b
 31903  01950C  ECCF  F0DD         	call	_I2C2_MasterRead	;wreg free
 31904  019510                     l22340:
 31905  019510  0E02               	movlw	2
 31906  019512  0101               	movlb	1	; () banked
 31907  019514  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31908  019516  B4D8               	btfsc	status,2,c
 31909  019518  D7FB               	goto	l22340
 31910                           
 31911                           ; BSR set to: 1
 31912                           ;LM73_I2C.c: 146: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 147: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 148: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 149: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 150: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 31913  01951A  05A2               	decf	_I2C_STATUS& (0+255),w,b
 31914  01951C  B4D8               	btfsc	status,2,c
 31915  01951E  D010               	goto	u28570
 31916                           
 31917                           ; BSR set to: 1
 31918  019520  0E03               	movlw	3
 31919  019522  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31920  019524  B4D8               	btfsc	status,2,c
 31921  019526  D00C               	goto	u28570
 31922                           
 31923                           ; BSR set to: 1
 31924  019528  0E04               	movlw	4
 31925  01952A  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31926  01952C  B4D8               	btfsc	status,2,c
 31927  01952E  D008               	goto	u28570
 31928                           
 31929                           ; BSR set to: 1
 31930  019530  0E05               	movlw	5
 31931  019532  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31932  019534  B4D8               	btfsc	status,2,c
 31933  019536  D004               	goto	u28570
 31934                           
 31935                           ; BSR set to: 1
 31936  019538  0E06               	movlw	6
 31937  01953A  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31938  01953C  A4D8               	btfss	status,2,c
 31939  01953E  D003               	goto	l22354
 31940  019540                     u28570:
 31941                           
 31942                           ; BSR set to: 1
 31943                           ;LM73_I2C.c: 151: error_handler.I2C_POS5_Temp_Sense_error_flag = 1;
 31944  019540  0E01               	movlw	1
 31945  019542  0100               	movlb	0	; () banked
 31946  019544  6FBE               	movwf	(_error_handler+5)& (0+255),b
 31947  019546                     l22354:
 31948                           
 31949                           ;LM73_I2C.c: 152: };LM73_I2C.c: 156: I2C2_MasterWrite(0x00, 1, 0x4E, &I2C_STATUS);
 31950  019546  0E00               	movlw	0
 31951  019548  0102               	movlb	2	; () banked
 31952  01954A  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31953  01954C  0E00               	movlw	0
 31954  01954E  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31955  019550  0E01               	movlw	1
 31956  019552  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31957  019554  0E00               	movlw	0
 31958  019556  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31959  019558  0E4E               	movlw	78
 31960  01955A  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31961  01955C  0EA2               	movlw	low _I2C_STATUS
 31962  01955E  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31963  019560  0E01               	movlw	high _I2C_STATUS
 31964  019562  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31965  019564  ECA7  F0DD         	call	_I2C2_MasterWrite	;wreg free
 31966  019568                     l22356:
 31967  019568  0E02               	movlw	2
 31968  01956A  0101               	movlb	1	; () banked
 31969  01956C  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31970  01956E  B4D8               	btfsc	status,2,c
 31971  019570  D7FB               	goto	l22356
 31972                           
 31973                           ; BSR set to: 1
 31974                           ;LM73_I2C.c: 158: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 159: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 160: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 161: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 162: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 31975  019572  05A2               	decf	_I2C_STATUS& (0+255),w,b
 31976  019574  B4D8               	btfsc	status,2,c
 31977  019576  D010               	goto	u28630
 31978                           
 31979                           ; BSR set to: 1
 31980  019578  0E03               	movlw	3
 31981  01957A  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31982  01957C  B4D8               	btfsc	status,2,c
 31983  01957E  D00C               	goto	u28630
 31984                           
 31985                           ; BSR set to: 1
 31986  019580  0E04               	movlw	4
 31987  019582  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31988  019584  B4D8               	btfsc	status,2,c
 31989  019586  D008               	goto	u28630
 31990                           
 31991                           ; BSR set to: 1
 31992  019588  0E05               	movlw	5
 31993  01958A  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 31994  01958C  B4D8               	btfsc	status,2,c
 31995  01958E  D004               	goto	u28630
 31996                           
 31997                           ; BSR set to: 1
 31998  019590  0E06               	movlw	6
 31999  019592  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 32000  019594  A4D8               	btfss	status,2,c
 32001  019596  D003               	goto	l22370
 32002  019598                     u28630:
 32003                           
 32004                           ; BSR set to: 1
 32005                           ;LM73_I2C.c: 163: error_handler.I2C_Ambient_Temp_Sense_error_flag = 1;
 32006  019598  0E01               	movlw	1
 32007  01959A  0100               	movlb	0	; () banked
 32008  01959C  6FBF               	movwf	(_error_handler+6)& (0+255),b
 32009  01959E                     l22370:
 32010                           
 32011                           ;LM73_I2C.c: 164: };LM73_I2C.c: 166: I2C2_MasterRead(LM73_temp_results.Ambient_data_raw,
      +                           2, 0x4E, &I2C_STATUS);
 32012  01959E  0EEB               	movlw	low (_LM73_temp_results+16)
 32013  0195A0  0102               	movlb	2	; () banked
 32014  0195A2  6F09               	movwf	I2C2_MasterRead@pdata& (0+255),b
 32015  0195A4  0E02               	movlw	high (_LM73_temp_results+16)
 32016  0195A6  6F0A               	movwf	(I2C2_MasterRead@pdata+1)& (0+255),b
 32017  0195A8  0E02               	movlw	2
 32018  0195AA  6F0B               	movwf	I2C2_MasterRead@length& (0+255),b
 32019  0195AC  0E00               	movlw	0
 32020  0195AE  6F0D               	movwf	(I2C2_MasterRead@address+1)& (0+255),b
 32021  0195B0  0E4E               	movlw	78
 32022  0195B2  6F0C               	movwf	I2C2_MasterRead@address& (0+255),b
 32023  0195B4  0EA2               	movlw	low _I2C_STATUS
 32024  0195B6  6F0E               	movwf	I2C2_MasterRead@pflag& (0+255),b
 32025  0195B8  0E01               	movlw	high _I2C_STATUS
 32026  0195BA  6F0F               	movwf	(I2C2_MasterRead@pflag+1)& (0+255),b
 32027  0195BC  ECCF  F0DD         	call	_I2C2_MasterRead	;wreg free
 32028  0195C0                     l22372:
 32029  0195C0  0E02               	movlw	2
 32030  0195C2  0101               	movlb	1	; () banked
 32031  0195C4  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 32032  0195C6  B4D8               	btfsc	status,2,c
 32033  0195C8  D7FB               	goto	l22372
 32034                           
 32035                           ; BSR set to: 1
 32036                           ;LM73_I2C.c: 168: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 169: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 170: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 171: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 172: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 32037  0195CA  05A2               	decf	_I2C_STATUS& (0+255),w,b
 32038  0195CC  B4D8               	btfsc	status,2,c
 32039  0195CE  D010               	goto	u28690
 32040                           
 32041                           ; BSR set to: 1
 32042  0195D0  0E03               	movlw	3
 32043  0195D2  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 32044  0195D4  B4D8               	btfsc	status,2,c
 32045  0195D6  D00C               	goto	u28690
 32046                           
 32047                           ; BSR set to: 1
 32048  0195D8  0E04               	movlw	4
 32049  0195DA  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 32050  0195DC  B4D8               	btfsc	status,2,c
 32051  0195DE  D008               	goto	u28690
 32052                           
 32053                           ; BSR set to: 1
 32054  0195E0  0E05               	movlw	5
 32055  0195E2  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 32056  0195E4  B4D8               	btfsc	status,2,c
 32057  0195E6  D004               	goto	u28690
 32058                           
 32059                           ; BSR set to: 1
 32060  0195E8  0E06               	movlw	6
 32061  0195EA  19A2               	xorwf	_I2C_STATUS& (0+255),w,b
 32062  0195EC  A4D8               	btfss	status,2,c
 32063  0195EE  D003               	goto	l22386
 32064  0195F0                     u28690:
 32065                           
 32066                           ; BSR set to: 1
 32067                           ;LM73_I2C.c: 173: error_handler.I2C_Ambient_Temp_Sense_error_flag = 1;
 32068  0195F0  0E01               	movlw	1
 32069  0195F2  0100               	movlb	0	; () banked
 32070  0195F4  6FBF               	movwf	(_error_handler+6)& (0+255),b
 32071  0195F6                     l22386:
 32072                           
 32073                           ;LM73_I2C.c: 174: };LM73_I2C.c: 177: LM73Convert();
 32074  0195F6  EC14  F0C5         	call	_LM73Convert	;wreg free
 32075                           
 32076                           ;LM73_I2C.c: 179: LM73_start_flag = 0;
 32077  0195FA  0E00               	movlw	0
 32078  0195FC  0102               	movlb	2	; () banked
 32079  0195FE  6FD9               	movwf	_LM73_start_flag& (0+255),b
 32080                           
 32081                           ; BSR set to: 2
 32082  019600  0012               	return		;funcret
 32083  019602                     __end_of_LM73AcquisitionHandler:
 32084                           	opt callstack 0
 32085                           
 32086 ;; *************** function _LM73Convert *****************
 32087 ;; Defined at:
 32088 ;;		line 184 in file "LM73_I2C.c"
 32089 ;; Parameters:    Size  Location     Type
 32090 ;;		None
 32091 ;; Auto vars:     Size  Location     Type
 32092 ;;  Ambient_Conv    2   83[BANK2 ] unsigned int 
 32093 ;;  POS5_Conv       2   81[BANK2 ] unsigned int 
 32094 ;;  QI_Conv         2   79[BANK2 ] unsigned int 
 32095 ;; Return value:  Size  Location     Type
 32096 ;;                  1    wreg      void 
 32097 ;; Registers used:
 32098 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 32099 ;; Tracked objects:
 32100 ;;		On entry : 0/0
 32101 ;;		On exit  : 0/0
 32102 ;;		Unchanged: 0/0
 32103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32105 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32106 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32107 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32108 ;;Total ram usage:        9 bytes
 32109 ;; Hardware stack levels used:    1
 32110 ;; Hardware stack levels required when called:   12
 32111 ;; This function calls:
 32112 ;;		___flmul
 32113 ;;		___xxtofl
 32114 ;; This function is called by:
 32115 ;;		_LM73AcquisitionHandler
 32116 ;; This function uses a non-reentrant model
 32117 ;;
 32118                           
 32119                           	psect	text113
 32120  018A28                     __ptext113:
 32121                           	opt callstack 0
 32122  018A28                     _LM73Convert:
 32123                           	opt callstack 17
 32124                           
 32125                           ;LM73_I2C.c: 186: uint16_t QI_Conv, POS5_Conv, Ambient_Conv;;LM73_I2C.c: 189: QI_Conv = 
      +                          LM73_temp_results.QI_data_raw[0] << 6 | LM73_temp_results.QI_data_raw[1] >> 2;
 32126                           
 32127                           ; BSR set to: 2
 32128                           ;incstack = 0
 32129  018A28  0102               	movlb	2	; () banked
 32130  018A2A  51E7               	movf	(_LM73_temp_results+12)& (0+255),w,b
 32131  018A2C  6F4C               	movwf	??_LM73Convert& (0+255),b
 32132  018A2E  6B4D               	clrf	(??_LM73Convert+1)& (0+255),b
 32133  018A30  0E06               	movlw	6
 32134  018A32                     u26995:
 32135  018A32  90D8               	bcf	status,0,c
 32136  018A34  374C               	rlcf	??_LM73Convert& (0+255),f,b
 32137  018A36  374D               	rlcf	(??_LM73Convert+1)& (0+255),f,b
 32138  018A38  2EE8               	decfsz	wreg,f,c
 32139  018A3A  D7FB               	goto	u26995
 32140  018A3C  C2E8  F24E         	movff	_LM73_temp_results+13,??_LM73Convert+2
 32141  018A40  90D8               	bcf	status,0,c
 32142  018A42  334E               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 32143  018A44  90D8               	bcf	status,0,c
 32144  018A46  334E               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 32145  018A48  514E               	movf	(??_LM73Convert+2)& (0+255),w,b
 32146  018A4A  114C               	iorwf	??_LM73Convert& (0+255),w,b
 32147  018A4C  6F4F               	movwf	LM73Convert@QI_Conv& (0+255),b
 32148  018A4E  514D               	movf	(??_LM73Convert+1)& (0+255),w,b
 32149  018A50  6F50               	movwf	(LM73Convert@QI_Conv+1)& (0+255),b
 32150                           
 32151                           ;LM73_I2C.c: 193: if ((LM73_temp_results.QI_data_raw[0] >> 6) == 1) {
 32152  018A52  45E7               	rlncf	(_LM73_temp_results+12)& (0+255),w,b
 32153  018A54  46E8               	rlncf	wreg,f,c
 32154  018A56  0B03               	andlw	3
 32155  018A58  06E8               	decf	wreg,f,c
 32156  018A5A  A4D8               	btfss	status,2,c
 32157  018A5C  D025               	goto	l20920
 32158                           
 32159                           ; BSR set to: 2
 32160                           ;LM73_I2C.c: 194: QI_Conv = ~(QI_Conv);
 32161  018A5E  1F4F               	comf	LM73Convert@QI_Conv& (0+255),f,b
 32162  018A60  1F50               	comf	(LM73Convert@QI_Conv+1)& (0+255),f,b
 32163                           
 32164                           ; BSR set to: 2
 32165                           ;LM73_I2C.c: 196: QI_Conv = QI_Conv & 0x1FFF;
 32166  018A62  0EFF               	movlw	255
 32167  018A64  154F               	andwf	LM73Convert@QI_Conv& (0+255),w,b
 32168  018A66  6F4F               	movwf	LM73Convert@QI_Conv& (0+255),b
 32169  018A68  0E1F               	movlw	31
 32170  018A6A  1550               	andwf	(LM73Convert@QI_Conv+1)& (0+255),w,b
 32171  018A6C  6F50               	movwf	(LM73Convert@QI_Conv+1)& (0+255),b
 32172                           
 32173                           ; BSR set to: 2
 32174                           ;LM73_I2C.c: 197: LM73_temp_results.QI_temp_result = -0.03125 * QI_Conv;
 32175  018A6E  C24F  F23E         	movff	LM73Convert@QI_Conv,___xxtofl@val
 32176  018A72  C250  F23F         	movff	LM73Convert@QI_Conv+1,___xxtofl@val+1
 32177  018A76  6B40               	clrf	(___xxtofl@val+2)& (0+255),b
 32178  018A78  6B41               	clrf	(___xxtofl@val+3)& (0+255),b
 32179  018A7A  0E00               	movlw	0
 32180  018A7C  EC08  F0CE         	call	___xxtofl
 32181  018A80  C23E  F20E         	movff	?___xxtofl,___flmul@b
 32182  018A84  C23F  F20F         	movff	?___xxtofl+1,___flmul@b+1
 32183  018A88  C240  F210         	movff	?___xxtofl+2,___flmul@b+2
 32184  018A8C  C241  F211         	movff	?___xxtofl+3,___flmul@b+3
 32185  018A90  0E00               	movlw	0
 32186  018A92  0102               	movlb	2	; () banked
 32187  018A94  6F12               	movwf	___flmul@a& (0+255),b
 32188  018A96  0E00               	movlw	0
 32189  018A98  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32190  018A9A  0E00               	movlw	0
 32191  018A9C  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32192  018A9E  0EBD               	movlw	189
 32193  018AA0  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32194  018AA2  ECFC  F0B4         	call	___flmul	;wreg free
 32195  018AA6  D022               	goto	L23
 32196  018AA8                     l20920:
 32197                           
 32198                           ; BSR set to: 2
 32199                           ;LM73_I2C.c: 200: else {;LM73_I2C.c: 202: QI_Conv = QI_Conv & 0x1FFF;
 32200  018AA8  0EFF               	movlw	255
 32201  018AAA  154F               	andwf	LM73Convert@QI_Conv& (0+255),w,b
 32202  018AAC  6F4F               	movwf	LM73Convert@QI_Conv& (0+255),b
 32203  018AAE  0E1F               	movlw	31
 32204  018AB0  1550               	andwf	(LM73Convert@QI_Conv+1)& (0+255),w,b
 32205  018AB2  6F50               	movwf	(LM73Convert@QI_Conv+1)& (0+255),b
 32206                           
 32207                           ; BSR set to: 2
 32208                           ;LM73_I2C.c: 203: LM73_temp_results.QI_temp_result = 0.03125 * QI_Conv;
 32209  018AB4  C24F  F23E         	movff	LM73Convert@QI_Conv,___xxtofl@val
 32210  018AB8  C250  F23F         	movff	LM73Convert@QI_Conv+1,___xxtofl@val+1
 32211  018ABC  6B40               	clrf	(___xxtofl@val+2)& (0+255),b
 32212  018ABE  6B41               	clrf	(___xxtofl@val+3)& (0+255),b
 32213  018AC0  0E00               	movlw	0
 32214  018AC2  EC08  F0CE         	call	___xxtofl
 32215  018AC6  C23E  F20E         	movff	?___xxtofl,___flmul@b
 32216  018ACA  C23F  F20F         	movff	?___xxtofl+1,___flmul@b+1
 32217  018ACE  C240  F210         	movff	?___xxtofl+2,___flmul@b+2
 32218  018AD2  C241  F211         	movff	?___xxtofl+3,___flmul@b+3
 32219  018AD6  0E00               	movlw	0
 32220  018AD8  0102               	movlb	2	; () banked
 32221  018ADA  6F12               	movwf	___flmul@a& (0+255),b
 32222  018ADC  0E00               	movlw	0
 32223  018ADE  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32224  018AE0  0E00               	movlw	0
 32225  018AE2  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32226  018AE4  0E3D               	movlw	61
 32227  018AE6  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32228  018AE8  ECFC  F0B4         	call	___flmul	;wreg free
 32229  018AEC                     L23:
 32230  018AEC  C20E  F2DB         	movff	?___flmul,_LM73_temp_results
 32231  018AF0  C20F  F2DC         	movff	?___flmul+1,_LM73_temp_results+1
 32232  018AF4  C210  F2DD         	movff	?___flmul+2,_LM73_temp_results+2
 32233  018AF8  C211  F2DE         	movff	?___flmul+3,_LM73_temp_results+3
 32234                           
 32235                           ;LM73_I2C.c: 204: };LM73_I2C.c: 207: POS5_Conv = LM73_temp_results.POS5_data_raw[0] << 6
      +                           | LM73_temp_results.POS5_data_raw[1] >> 2;
 32236  018AFC  0102               	movlb	2	; () banked
 32237  018AFE  51E9               	movf	(_LM73_temp_results+14)& (0+255),w,b
 32238  018B00  6F4C               	movwf	??_LM73Convert& (0+255),b
 32239  018B02  6B4D               	clrf	(??_LM73Convert+1)& (0+255),b
 32240  018B04  0E06               	movlw	6
 32241  018B06                     u27015:
 32242  018B06  90D8               	bcf	status,0,c
 32243  018B08  374C               	rlcf	??_LM73Convert& (0+255),f,b
 32244  018B0A  374D               	rlcf	(??_LM73Convert+1)& (0+255),f,b
 32245  018B0C  2EE8               	decfsz	wreg,f,c
 32246  018B0E  D7FB               	goto	u27015
 32247  018B10  C2EA  F24E         	movff	_LM73_temp_results+15,??_LM73Convert+2
 32248  018B14  90D8               	bcf	status,0,c
 32249  018B16  334E               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 32250  018B18  90D8               	bcf	status,0,c
 32251  018B1A  334E               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 32252  018B1C  514E               	movf	(??_LM73Convert+2)& (0+255),w,b
 32253  018B1E  114C               	iorwf	??_LM73Convert& (0+255),w,b
 32254  018B20  6F51               	movwf	LM73Convert@POS5_Conv& (0+255),b
 32255  018B22  514D               	movf	(??_LM73Convert+1)& (0+255),w,b
 32256  018B24  6F52               	movwf	(LM73Convert@POS5_Conv+1)& (0+255),b
 32257                           
 32258                           ; BSR set to: 2
 32259                           ;LM73_I2C.c: 211: if ((LM73_temp_results.POS5_data_raw[0] >> 6) == 1) {
 32260  018B26  45E9               	rlncf	(_LM73_temp_results+14)& (0+255),w,b
 32261  018B28  46E8               	rlncf	wreg,f,c
 32262  018B2A  0B03               	andlw	3
 32263  018B2C  06E8               	decf	wreg,f,c
 32264  018B2E  A4D8               	btfss	status,2,c
 32265  018B30  D025               	goto	l20934
 32266                           
 32267                           ; BSR set to: 2
 32268                           ;LM73_I2C.c: 212: POS5_Conv = ~(POS5_Conv);
 32269  018B32  1F51               	comf	LM73Convert@POS5_Conv& (0+255),f,b
 32270  018B34  1F52               	comf	(LM73Convert@POS5_Conv+1)& (0+255),f,b
 32271                           
 32272                           ; BSR set to: 2
 32273                           ;LM73_I2C.c: 214: POS5_Conv = POS5_Conv & 0x1FFF;
 32274  018B36  0EFF               	movlw	255
 32275  018B38  1551               	andwf	LM73Convert@POS5_Conv& (0+255),w,b
 32276  018B3A  6F51               	movwf	LM73Convert@POS5_Conv& (0+255),b
 32277  018B3C  0E1F               	movlw	31
 32278  018B3E  1552               	andwf	(LM73Convert@POS5_Conv+1)& (0+255),w,b
 32279  018B40  6F52               	movwf	(LM73Convert@POS5_Conv+1)& (0+255),b
 32280                           
 32281                           ; BSR set to: 2
 32282                           ;LM73_I2C.c: 215: LM73_temp_results.POS5_temp_result = -0.03125 * POS5_Conv;
 32283  018B42  C251  F23E         	movff	LM73Convert@POS5_Conv,___xxtofl@val
 32284  018B46  C252  F23F         	movff	LM73Convert@POS5_Conv+1,___xxtofl@val+1
 32285  018B4A  6B40               	clrf	(___xxtofl@val+2)& (0+255),b
 32286  018B4C  6B41               	clrf	(___xxtofl@val+3)& (0+255),b
 32287  018B4E  0E00               	movlw	0
 32288  018B50  EC08  F0CE         	call	___xxtofl
 32289  018B54  C23E  F20E         	movff	?___xxtofl,___flmul@b
 32290  018B58  C23F  F20F         	movff	?___xxtofl+1,___flmul@b+1
 32291  018B5C  C240  F210         	movff	?___xxtofl+2,___flmul@b+2
 32292  018B60  C241  F211         	movff	?___xxtofl+3,___flmul@b+3
 32293  018B64  0E00               	movlw	0
 32294  018B66  0102               	movlb	2	; () banked
 32295  018B68  6F12               	movwf	___flmul@a& (0+255),b
 32296  018B6A  0E00               	movlw	0
 32297  018B6C  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32298  018B6E  0E00               	movlw	0
 32299  018B70  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32300  018B72  0EBD               	movlw	189
 32301  018B74  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32302  018B76  ECFC  F0B4         	call	___flmul	;wreg free
 32303  018B7A  D022               	goto	L24
 32304  018B7C                     l20934:
 32305                           
 32306                           ; BSR set to: 2
 32307                           ;LM73_I2C.c: 218: else {;LM73_I2C.c: 220: POS5_Conv = POS5_Conv & 0x1FFF;
 32308  018B7C  0EFF               	movlw	255
 32309  018B7E  1551               	andwf	LM73Convert@POS5_Conv& (0+255),w,b
 32310  018B80  6F51               	movwf	LM73Convert@POS5_Conv& (0+255),b
 32311  018B82  0E1F               	movlw	31
 32312  018B84  1552               	andwf	(LM73Convert@POS5_Conv+1)& (0+255),w,b
 32313  018B86  6F52               	movwf	(LM73Convert@POS5_Conv+1)& (0+255),b
 32314                           
 32315                           ; BSR set to: 2
 32316                           ;LM73_I2C.c: 221: LM73_temp_results.POS5_temp_result = 0.03125 * POS5_Conv;
 32317  018B88  C251  F23E         	movff	LM73Convert@POS5_Conv,___xxtofl@val
 32318  018B8C  C252  F23F         	movff	LM73Convert@POS5_Conv+1,___xxtofl@val+1
 32319  018B90  6B40               	clrf	(___xxtofl@val+2)& (0+255),b
 32320  018B92  6B41               	clrf	(___xxtofl@val+3)& (0+255),b
 32321  018B94  0E00               	movlw	0
 32322  018B96  EC08  F0CE         	call	___xxtofl
 32323  018B9A  C23E  F20E         	movff	?___xxtofl,___flmul@b
 32324  018B9E  C23F  F20F         	movff	?___xxtofl+1,___flmul@b+1
 32325  018BA2  C240  F210         	movff	?___xxtofl+2,___flmul@b+2
 32326  018BA6  C241  F211         	movff	?___xxtofl+3,___flmul@b+3
 32327  018BAA  0E00               	movlw	0
 32328  018BAC  0102               	movlb	2	; () banked
 32329  018BAE  6F12               	movwf	___flmul@a& (0+255),b
 32330  018BB0  0E00               	movlw	0
 32331  018BB2  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32332  018BB4  0E00               	movlw	0
 32333  018BB6  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32334  018BB8  0E3D               	movlw	61
 32335  018BBA  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32336  018BBC  ECFC  F0B4         	call	___flmul	;wreg free
 32337  018BC0                     L24:
 32338  018BC0  C20E  F2DF         	movff	?___flmul,_LM73_temp_results+4
 32339  018BC4  C20F  F2E0         	movff	?___flmul+1,_LM73_temp_results+5
 32340  018BC8  C210  F2E1         	movff	?___flmul+2,_LM73_temp_results+6
 32341  018BCC  C211  F2E2         	movff	?___flmul+3,_LM73_temp_results+7
 32342                           
 32343                           ;LM73_I2C.c: 222: };LM73_I2C.c: 225: Ambient_Conv = LM73_temp_results.Ambient_data_raw[0
      +                          ] << 6 | LM73_temp_results.Ambient_data_raw[1] >> 2;
 32344  018BD0  0102               	movlb	2	; () banked
 32345  018BD2  51EB               	movf	(_LM73_temp_results+16)& (0+255),w,b
 32346  018BD4  6F4C               	movwf	??_LM73Convert& (0+255),b
 32347  018BD6  6B4D               	clrf	(??_LM73Convert+1)& (0+255),b
 32348  018BD8  0E06               	movlw	6
 32349  018BDA                     u27035:
 32350  018BDA  90D8               	bcf	status,0,c
 32351  018BDC  374C               	rlcf	??_LM73Convert& (0+255),f,b
 32352  018BDE  374D               	rlcf	(??_LM73Convert+1)& (0+255),f,b
 32353  018BE0  2EE8               	decfsz	wreg,f,c
 32354  018BE2  D7FB               	goto	u27035
 32355  018BE4  C2EC  F24E         	movff	_LM73_temp_results+17,??_LM73Convert+2
 32356  018BE8  90D8               	bcf	status,0,c
 32357  018BEA  334E               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 32358  018BEC  90D8               	bcf	status,0,c
 32359  018BEE  334E               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 32360  018BF0  514E               	movf	(??_LM73Convert+2)& (0+255),w,b
 32361  018BF2  114C               	iorwf	??_LM73Convert& (0+255),w,b
 32362  018BF4  6F53               	movwf	LM73Convert@Ambient_Conv& (0+255),b
 32363  018BF6  514D               	movf	(??_LM73Convert+1)& (0+255),w,b
 32364  018BF8  6F54               	movwf	(LM73Convert@Ambient_Conv+1)& (0+255),b
 32365                           
 32366                           ; BSR set to: 2
 32367                           ;LM73_I2C.c: 229: if ((LM73_temp_results.Ambient_data_raw[0] >> 6) == 1) {
 32368  018BFA  45EB               	rlncf	(_LM73_temp_results+16)& (0+255),w,b
 32369  018BFC  46E8               	rlncf	wreg,f,c
 32370  018BFE  0B03               	andlw	3
 32371  018C00  06E8               	decf	wreg,f,c
 32372  018C02  A4D8               	btfss	status,2,c
 32373  018C04  D025               	goto	l20948
 32374                           
 32375                           ; BSR set to: 2
 32376                           ;LM73_I2C.c: 230: Ambient_Conv = ~(Ambient_Conv);
 32377  018C06  1F53               	comf	LM73Convert@Ambient_Conv& (0+255),f,b
 32378  018C08  1F54               	comf	(LM73Convert@Ambient_Conv+1)& (0+255),f,b
 32379                           
 32380                           ; BSR set to: 2
 32381                           ;LM73_I2C.c: 232: Ambient_Conv = Ambient_Conv & 0x1FFF;
 32382  018C0A  0EFF               	movlw	255
 32383  018C0C  1553               	andwf	LM73Convert@Ambient_Conv& (0+255),w,b
 32384  018C0E  6F53               	movwf	LM73Convert@Ambient_Conv& (0+255),b
 32385  018C10  0E1F               	movlw	31
 32386  018C12  1554               	andwf	(LM73Convert@Ambient_Conv+1)& (0+255),w,b
 32387  018C14  6F54               	movwf	(LM73Convert@Ambient_Conv+1)& (0+255),b
 32388                           
 32389                           ; BSR set to: 2
 32390                           ;LM73_I2C.c: 233: LM73_temp_results.Ambient_temp_result = -0.03125 * Ambient_Conv;
 32391  018C16  C253  F23E         	movff	LM73Convert@Ambient_Conv,___xxtofl@val
 32392  018C1A  C254  F23F         	movff	LM73Convert@Ambient_Conv+1,___xxtofl@val+1
 32393  018C1E  6B40               	clrf	(___xxtofl@val+2)& (0+255),b
 32394  018C20  6B41               	clrf	(___xxtofl@val+3)& (0+255),b
 32395  018C22  0E00               	movlw	0
 32396  018C24  EC08  F0CE         	call	___xxtofl
 32397  018C28  C23E  F20E         	movff	?___xxtofl,___flmul@b
 32398  018C2C  C23F  F20F         	movff	?___xxtofl+1,___flmul@b+1
 32399  018C30  C240  F210         	movff	?___xxtofl+2,___flmul@b+2
 32400  018C34  C241  F211         	movff	?___xxtofl+3,___flmul@b+3
 32401  018C38  0E00               	movlw	0
 32402  018C3A  0102               	movlb	2	; () banked
 32403  018C3C  6F12               	movwf	___flmul@a& (0+255),b
 32404  018C3E  0E00               	movlw	0
 32405  018C40  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32406  018C42  0E00               	movlw	0
 32407  018C44  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32408  018C46  0EBD               	movlw	189
 32409  018C48  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32410  018C4A  ECFC  F0B4         	call	___flmul	;wreg free
 32411  018C4E  D022               	goto	L25
 32412  018C50                     l20948:
 32413                           
 32414                           ; BSR set to: 2
 32415                           ;LM73_I2C.c: 236: else {;LM73_I2C.c: 238: Ambient_Conv = Ambient_Conv & 0x1FFF;
 32416  018C50  0EFF               	movlw	255
 32417  018C52  1553               	andwf	LM73Convert@Ambient_Conv& (0+255),w,b
 32418  018C54  6F53               	movwf	LM73Convert@Ambient_Conv& (0+255),b
 32419  018C56  0E1F               	movlw	31
 32420  018C58  1554               	andwf	(LM73Convert@Ambient_Conv+1)& (0+255),w,b
 32421  018C5A  6F54               	movwf	(LM73Convert@Ambient_Conv+1)& (0+255),b
 32422                           
 32423                           ; BSR set to: 2
 32424                           ;LM73_I2C.c: 239: LM73_temp_results.Ambient_temp_result = 0.03125 * Ambient_Conv;
 32425  018C5C  C253  F23E         	movff	LM73Convert@Ambient_Conv,___xxtofl@val
 32426  018C60  C254  F23F         	movff	LM73Convert@Ambient_Conv+1,___xxtofl@val+1
 32427  018C64  6B40               	clrf	(___xxtofl@val+2)& (0+255),b
 32428  018C66  6B41               	clrf	(___xxtofl@val+3)& (0+255),b
 32429  018C68  0E00               	movlw	0
 32430  018C6A  EC08  F0CE         	call	___xxtofl
 32431  018C6E  C23E  F20E         	movff	?___xxtofl,___flmul@b
 32432  018C72  C23F  F20F         	movff	?___xxtofl+1,___flmul@b+1
 32433  018C76  C240  F210         	movff	?___xxtofl+2,___flmul@b+2
 32434  018C7A  C241  F211         	movff	?___xxtofl+3,___flmul@b+3
 32435  018C7E  0E00               	movlw	0
 32436  018C80  0102               	movlb	2	; () banked
 32437  018C82  6F12               	movwf	___flmul@a& (0+255),b
 32438  018C84  0E00               	movlw	0
 32439  018C86  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32440  018C88  0E00               	movlw	0
 32441  018C8A  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32442  018C8C  0E3D               	movlw	61
 32443  018C8E  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32444  018C90  ECFC  F0B4         	call	___flmul	;wreg free
 32445  018C94                     L25:
 32446  018C94  C20E  F2E3         	movff	?___flmul,_LM73_temp_results+8
 32447  018C98  C20F  F2E4         	movff	?___flmul+1,_LM73_temp_results+9
 32448  018C9C  C210  F2E5         	movff	?___flmul+2,_LM73_temp_results+10
 32449  018CA0  C211  F2E6         	movff	?___flmul+3,_LM73_temp_results+11
 32450                           
 32451                           ;LM73_I2C.c: 240: };LM73_I2C.c: 243: PIE0bits.INT1IE = 1;
 32452  018CA4  010E               	movlb	14	; () banked
 32453  018CA6  83C2               	bsf	194,1,b	;volatile
 32454                           
 32455                           ; BSR set to: 14
 32456                           ;LM73_I2C.c: 244: PIE0bits.INT2IE = 1;
 32457  018CA8  85C2               	bsf	194,2,b	;volatile
 32458                           
 32459                           ; BSR set to: 14
 32460  018CAA  0012               	return		;funcret
 32461  018CAC                     __end_of_LM73Convert:
 32462                           	opt callstack 0
 32463                           
 32464 ;; *************** function ___xxtofl *****************
 32465 ;; Defined at:
 32466 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
 32467 ;; Parameters:    Size  Location     Type
 32468 ;;  sign            1    wreg     unsigned char 
 32469 ;;  val             4   62[BANK2 ] long 
 32470 ;; Auto vars:     Size  Location     Type
 32471 ;;  sign            1   70[BANK2 ] unsigned char 
 32472 ;;  arg             4   72[BANK2 ] unsigned long 
 32473 ;;  exp             1   71[BANK2 ] unsigned char 
 32474 ;; Return value:  Size  Location     Type
 32475 ;;                  4   62[BANK2 ] unsigned char 
 32476 ;; Registers used:
 32477 ;;		wreg, status,2, status,0
 32478 ;; Tracked objects:
 32479 ;;		On entry : 0/0
 32480 ;;		On exit  : 0/0
 32481 ;;		Unchanged: 0/0
 32482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32483 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32484 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32485 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32486 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32487 ;;Total ram usage:       14 bytes
 32488 ;; Hardware stack levels used:    1
 32489 ;; Hardware stack levels required when called:   11
 32490 ;; This function calls:
 32491 ;;		Nothing
 32492 ;; This function is called by:
 32493 ;;		_LM73Convert
 32494 ;;		_floatToEngineeringFormat
 32495 ;;		__doprnt
 32496 ;;		_ftoa
 32497 ;; This function uses a non-reentrant model
 32498 ;;
 32499                           
 32500                           	psect	text114
 32501  019C10                     __ptext114:
 32502                           	opt callstack 0
 32503  019C10                     ___xxtofl:
 32504                           	opt callstack 14
 32505                           
 32506                           ; BSR set to: 14
 32507                           ;incstack = 0
 32508                           ;___xxtofl@sign stored from wreg
 32509  019C10  0102               	movlb	2	; () banked
 32510  019C12  6F46               	movwf	___xxtofl@sign& (0+255),b
 32511  019C14  0102               	movlb	2	; () banked
 32512  019C16  5146               	movf	___xxtofl@sign& (0+255),w,b
 32513  019C18  A4D8               	btfss	status,2,c
 32514                           
 32515                           ; BSR set to: 2
 32516  019C1A  AF41               	btfss	(___xxtofl@val+3)& (0+255),7,b
 32517  019C1C  D01A               	goto	l3332
 32518                           
 32519                           ; BSR set to: 2
 32520  019C1E  C23E  F242         	movff	___xxtofl@val,??___xxtofl
 32521  019C22  C23F  F243         	movff	___xxtofl@val+1,??___xxtofl+1
 32522  019C26  C240  F244         	movff	___xxtofl@val+2,??___xxtofl+2
 32523  019C2A  C241  F245         	movff	___xxtofl@val+3,??___xxtofl+3
 32524  019C2E  1F42               	comf	??___xxtofl& (0+255),f,b
 32525  019C30  1F43               	comf	(??___xxtofl+1)& (0+255),f,b
 32526  019C32  1F44               	comf	(??___xxtofl+2)& (0+255),f,b
 32527  019C34  1F45               	comf	(??___xxtofl+3)& (0+255),f,b
 32528  019C36  2B42               	incf	??___xxtofl& (0+255),f,b
 32529  019C38  0E00               	movlw	0
 32530  019C3A  2343               	addwfc	(??___xxtofl+1)& (0+255),f,b
 32531  019C3C  2344               	addwfc	(??___xxtofl+2)& (0+255),f,b
 32532  019C3E  2345               	addwfc	(??___xxtofl+3)& (0+255),f,b
 32533  019C40  C242  F248         	movff	??___xxtofl,___xxtofl@arg
 32534  019C44  C243  F249         	movff	??___xxtofl+1,___xxtofl@arg+1
 32535  019C48  C244  F24A         	movff	??___xxtofl+2,___xxtofl@arg+2
 32536  019C4C  C245  F24B         	movff	??___xxtofl+3,___xxtofl@arg+3
 32537  019C50  D008               	goto	l17822
 32538  019C52                     l3332:
 32539                           
 32540                           ; BSR set to: 2
 32541  019C52  C23E  F248         	movff	___xxtofl@val,___xxtofl@arg
 32542  019C56  C23F  F249         	movff	___xxtofl@val+1,___xxtofl@arg+1
 32543  019C5A  C240  F24A         	movff	___xxtofl@val+2,___xxtofl@arg+2
 32544  019C5E  C241  F24B         	movff	___xxtofl@val+3,___xxtofl@arg+3
 32545  019C62                     l17822:
 32546                           
 32547                           ; BSR set to: 2
 32548  019C62  513E               	movf	___xxtofl@val& (0+255),w,b
 32549  019C64  113F               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 32550  019C66  1140               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 32551  019C68  1141               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 32552  019C6A  A4D8               	btfss	status,2,c
 32553  019C6C  D009               	goto	l17828
 32554                           
 32555                           ; BSR set to: 2
 32556  019C6E  0E00               	movlw	0
 32557  019C70  6F3E               	movwf	?___xxtofl& (0+255),b
 32558  019C72  0E00               	movlw	0
 32559  019C74  6F3F               	movwf	(?___xxtofl+1)& (0+255),b
 32560  019C76  0E00               	movlw	0
 32561  019C78  6F40               	movwf	(?___xxtofl+2)& (0+255),b
 32562  019C7A  0E00               	movlw	0
 32563  019C7C  6F41               	movwf	(?___xxtofl+3)& (0+255),b
 32564  019C7E  0012               	return	
 32565  019C80                     l17828:
 32566                           
 32567                           ; BSR set to: 2
 32568  019C80  0E96               	movlw	150
 32569  019C82  6F47               	movwf	___xxtofl@exp& (0+255),b
 32570  019C84  D006               	goto	l17832
 32571  019C86                     l17830:
 32572                           
 32573                           ; BSR set to: 2
 32574  019C86  2B47               	incf	___xxtofl@exp& (0+255),f,b
 32575  019C88  90D8               	bcf	status,0,c
 32576  019C8A  334B               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 32577  019C8C  334A               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 32578  019C8E  3349               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 32579  019C90  3348               	rrcf	___xxtofl@arg& (0+255),f,b
 32580  019C92                     l17832:
 32581                           
 32582                           ; BSR set to: 2
 32583  019C92  0E00               	movlw	0
 32584  019C94  1548               	andwf	___xxtofl@arg& (0+255),w,b
 32585  019C96  6F42               	movwf	??___xxtofl& (0+255),b
 32586  019C98  0E00               	movlw	0
 32587  019C9A  1549               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 32588  019C9C  6F43               	movwf	(??___xxtofl+1)& (0+255),b
 32589  019C9E  0E00               	movlw	0
 32590  019CA0  154A               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 32591  019CA2  6F44               	movwf	(??___xxtofl+2)& (0+255),b
 32592  019CA4  0EFE               	movlw	254
 32593  019CA6  154B               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 32594  019CA8  6F45               	movwf	(??___xxtofl+3)& (0+255),b
 32595  019CAA  5142               	movf	??___xxtofl& (0+255),w,b
 32596  019CAC  1143               	iorwf	(??___xxtofl+1)& (0+255),w,b
 32597  019CAE  1144               	iorwf	(??___xxtofl+2)& (0+255),w,b
 32598  019CB0  1145               	iorwf	(??___xxtofl+3)& (0+255),w,b
 32599  019CB2  B4D8               	btfsc	status,2,c
 32600  019CB4  D00D               	goto	l3339
 32601  019CB6  D7E7               	goto	l17830
 32602  019CB8                     l17834:
 32603                           
 32604                           ; BSR set to: 2
 32605  019CB8  2B47               	incf	___xxtofl@exp& (0+255),f,b
 32606                           
 32607                           ; BSR set to: 2
 32608  019CBA  0E01               	movlw	1
 32609  019CBC  2748               	addwf	___xxtofl@arg& (0+255),f,b
 32610  019CBE  0E00               	movlw	0
 32611  019CC0  2349               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 32612  019CC2  234A               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 32613  019CC4  234B               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 32614                           
 32615                           ; BSR set to: 2
 32616  019CC6  90D8               	bcf	status,0,c
 32617  019CC8  334B               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 32618  019CCA  334A               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 32619  019CCC  3349               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 32620  019CCE  3348               	rrcf	___xxtofl@arg& (0+255),f,b
 32621  019CD0                     l3339:
 32622                           
 32623                           ; BSR set to: 2
 32624  019CD0  0E00               	movlw	0
 32625  019CD2  1548               	andwf	___xxtofl@arg& (0+255),w,b
 32626  019CD4  6F42               	movwf	??___xxtofl& (0+255),b
 32627  019CD6  0E00               	movlw	0
 32628  019CD8  1549               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 32629  019CDA  6F43               	movwf	(??___xxtofl+1)& (0+255),b
 32630  019CDC  0E00               	movlw	0
 32631  019CDE  154A               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 32632  019CE0  6F44               	movwf	(??___xxtofl+2)& (0+255),b
 32633  019CE2  0EFF               	movlw	255
 32634  019CE4  154B               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 32635  019CE6  6F45               	movwf	(??___xxtofl+3)& (0+255),b
 32636  019CE8  5142               	movf	??___xxtofl& (0+255),w,b
 32637  019CEA  1143               	iorwf	(??___xxtofl+1)& (0+255),w,b
 32638  019CEC  1144               	iorwf	(??___xxtofl+2)& (0+255),w,b
 32639  019CEE  1145               	iorwf	(??___xxtofl+3)& (0+255),w,b
 32640  019CF0  B4D8               	btfsc	status,2,c
 32641  019CF2  D007               	goto	l17842
 32642  019CF4  D7E1               	goto	l17834
 32643  019CF6                     l17840:
 32644                           
 32645                           ; BSR set to: 2
 32646  019CF6  0747               	decf	___xxtofl@exp& (0+255),f,b
 32647  019CF8  90D8               	bcf	status,0,c
 32648  019CFA  3748               	rlcf	___xxtofl@arg& (0+255),f,b
 32649  019CFC  3749               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 32650  019CFE  374A               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 32651  019D00  374B               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 32652  019D02                     l17842:
 32653                           
 32654                           ; BSR set to: 2
 32655  019D02  BF4A               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 32656  019D04  D003               	goto	u21770
 32657                           
 32658                           ; BSR set to: 2
 32659  019D06  0E02               	movlw	2
 32660  019D08  6147               	cpfslt	___xxtofl@exp& (0+255),b
 32661  019D0A  D7F5               	goto	l17840
 32662  019D0C                     u21770:
 32663                           
 32664                           ; BSR set to: 2
 32665  019D0C  A147               	btfss	___xxtofl@exp& (0+255),0,b
 32666                           
 32667                           ; BSR set to: 2
 32668  019D0E  9F4A               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 32669                           
 32670                           ; BSR set to: 2
 32671  019D10  90D8               	bcf	status,0,c
 32672  019D12  3347               	rrcf	___xxtofl@exp& (0+255),f,b
 32673                           
 32674                           ; BSR set to: 2
 32675  019D14  C247  F242         	movff	___xxtofl@exp,??___xxtofl
 32676  019D18  6B43               	clrf	(??___xxtofl+1)& (0+255),b
 32677  019D1A  6B44               	clrf	(??___xxtofl+2)& (0+255),b
 32678  019D1C  6B45               	clrf	(??___xxtofl+3)& (0+255),b
 32679  019D1E  C242  F245         	movff	??___xxtofl,??___xxtofl+3
 32680  019D22  6B44               	clrf	(??___xxtofl+2)& (0+255),b
 32681  019D24  6B43               	clrf	(??___xxtofl+1)& (0+255),b
 32682  019D26  6B42               	clrf	??___xxtofl& (0+255),b
 32683  019D28  5142               	movf	??___xxtofl& (0+255),w,b
 32684  019D2A  1348               	iorwf	___xxtofl@arg& (0+255),f,b
 32685  019D2C  5143               	movf	(??___xxtofl+1)& (0+255),w,b
 32686  019D2E  1349               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 32687  019D30  5144               	movf	(??___xxtofl+2)& (0+255),w,b
 32688  019D32  134A               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 32689  019D34  5145               	movf	(??___xxtofl+3)& (0+255),w,b
 32690  019D36  134B               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 32691                           
 32692                           ; BSR set to: 2
 32693  019D38  5146               	movf	___xxtofl@sign& (0+255),w,b
 32694  019D3A  A4D8               	btfss	status,2,c
 32695                           
 32696                           ; BSR set to: 2
 32697  019D3C  AF41               	btfss	(___xxtofl@val+3)& (0+255),7,b
 32698  019D3E  D001               	goto	l17858
 32699                           
 32700                           ; BSR set to: 2
 32701  019D40  8F4B               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 32702  019D42                     l17858:
 32703                           
 32704                           ; BSR set to: 2
 32705  019D42  C248  F23E         	movff	___xxtofl@arg,?___xxtofl
 32706  019D46  C249  F23F         	movff	___xxtofl@arg+1,?___xxtofl+1
 32707  019D4A  C24A  F240         	movff	___xxtofl@arg+2,?___xxtofl+2
 32708  019D4E  C24B  F241         	movff	___xxtofl@arg+3,?___xxtofl+3
 32709                           
 32710                           ; BSR set to: 2
 32711  019D52  0012               	return		;funcret
 32712  019D54                     __end_of___xxtofl:
 32713                           	opt callstack 0
 32714                           
 32715 ;; *************** function ___flmul *****************
 32716 ;; Defined at:
 32717 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
 32718 ;; Parameters:    Size  Location     Type
 32719 ;;  b               4   14[BANK2 ] unsigned char 
 32720 ;;  a               4   18[BANK2 ] unsigned char 
 32721 ;; Auto vars:     Size  Location     Type
 32722 ;;  prod            4   33[BANK2 ] struct .
 32723 ;;  grs             4   28[BANK2 ] unsigned long 
 32724 ;;  temp            2   37[BANK2 ] struct .
 32725 ;;  bexp            1   32[BANK2 ] unsigned char 
 32726 ;;  aexp            1   27[BANK2 ] unsigned char 
 32727 ;;  sign            1   26[BANK2 ] unsigned char 
 32728 ;; Return value:  Size  Location     Type
 32729 ;;                  4   14[BANK2 ] unsigned char 
 32730 ;; Registers used:
 32731 ;;		wreg, status,2, status,0, prodl, prodh
 32732 ;; Tracked objects:
 32733 ;;		On entry : 0/0
 32734 ;;		On exit  : 0/0
 32735 ;;		Unchanged: 0/0
 32736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32737 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32738 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32739 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32740 ;;      Totals:         0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32741 ;;Total ram usage:       25 bytes
 32742 ;; Hardware stack levels used:    1
 32743 ;; Hardware stack levels required when called:   11
 32744 ;; This function calls:
 32745 ;;		Nothing
 32746 ;; This function is called by:
 32747 ;;		_LM73Convert
 32748 ;;		_floatToEngineeringFormat
 32749 ;;		_fround
 32750 ;;		_scale
 32751 ;;		__doprnt
 32752 ;;		_ftoa
 32753 ;; This function uses a non-reentrant model
 32754 ;;
 32755                           
 32756                           	psect	text115
 32757  0169F8                     __ptext115:
 32758                           	opt callstack 0
 32759  0169F8                     ___flmul:
 32760                           	opt callstack 13
 32761                           
 32762                           ; BSR set to: 2
 32763                           ;incstack = 0
 32764  0169F8  0102               	movlb	2	; () banked
 32765  0169FA  5111               	movf	(___flmul@b+3)& (0+255),w,b
 32766  0169FC  0B80               	andlw	128
 32767  0169FE  6F1A               	movwf	___flmul@sign& (0+255),b
 32768  016A00  5111               	movf	(___flmul@b+3)& (0+255),w,b
 32769  016A02  2511               	addwf	(___flmul@b+3)& (0+255),w,b
 32770  016A04  6F20               	movwf	___flmul@bexp& (0+255),b
 32771                           
 32772                           ; BSR set to: 2
 32773  016A06  BF10               	btfsc	(___flmul@b+2)& (0+255),7,b
 32774                           
 32775                           ; BSR set to: 2
 32776  016A08  8120               	bsf	___flmul@bexp& (0+255),0,b
 32777                           
 32778                           ; BSR set to: 2
 32779  016A0A  5120               	movf	___flmul@bexp& (0+255),w,b
 32780  016A0C  B4D8               	btfsc	status,2,c
 32781  016A0E  D00D               	goto	l17252
 32782                           
 32783                           ; BSR set to: 2
 32784  016A10  2920               	incf	___flmul@bexp& (0+255),w,b
 32785  016A12  A4D8               	btfss	status,2,c
 32786  016A14  D008               	goto	l17250
 32787                           
 32788                           ; BSR set to: 2
 32789  016A16  0E00               	movlw	0
 32790  016A18  6F0E               	movwf	___flmul@b& (0+255),b
 32791  016A1A  0E00               	movlw	0
 32792  016A1C  6F0F               	movwf	(___flmul@b+1)& (0+255),b
 32793  016A1E  0E00               	movlw	0
 32794  016A20  6F10               	movwf	(___flmul@b+2)& (0+255),b
 32795  016A22  0E00               	movlw	0
 32796  016A24  6F11               	movwf	(___flmul@b+3)& (0+255),b
 32797  016A26                     l17250:
 32798                           
 32799                           ; BSR set to: 2
 32800  016A26  8F10               	bsf	(___flmul@b+2)& (0+255),7,b
 32801  016A28  D008               	goto	l17254
 32802  016A2A                     l17252:
 32803                           
 32804                           ; BSR set to: 2
 32805  016A2A  0E00               	movlw	0
 32806  016A2C  6F0E               	movwf	___flmul@b& (0+255),b
 32807  016A2E  0E00               	movlw	0
 32808  016A30  6F0F               	movwf	(___flmul@b+1)& (0+255),b
 32809  016A32  0E00               	movlw	0
 32810  016A34  6F10               	movwf	(___flmul@b+2)& (0+255),b
 32811  016A36  0E00               	movlw	0
 32812  016A38  6F11               	movwf	(___flmul@b+3)& (0+255),b
 32813  016A3A                     l17254:
 32814                           
 32815                           ; BSR set to: 2
 32816  016A3A  5115               	movf	(___flmul@a+3)& (0+255),w,b
 32817  016A3C  0B80               	andlw	128
 32818  016A3E  1B1A               	xorwf	___flmul@sign& (0+255),f,b
 32819                           
 32820                           ; BSR set to: 2
 32821  016A40  5115               	movf	(___flmul@a+3)& (0+255),w,b
 32822  016A42  2515               	addwf	(___flmul@a+3)& (0+255),w,b
 32823  016A44  6F1B               	movwf	___flmul@aexp& (0+255),b
 32824                           
 32825                           ; BSR set to: 2
 32826  016A46  BF14               	btfsc	(___flmul@a+2)& (0+255),7,b
 32827                           
 32828                           ; BSR set to: 2
 32829  016A48  811B               	bsf	___flmul@aexp& (0+255),0,b
 32830                           
 32831                           ; BSR set to: 2
 32832  016A4A  511B               	movf	___flmul@aexp& (0+255),w,b
 32833  016A4C  B4D8               	btfsc	status,2,c
 32834  016A4E  D00D               	goto	l17270
 32835                           
 32836                           ; BSR set to: 2
 32837  016A50  291B               	incf	___flmul@aexp& (0+255),w,b
 32838  016A52  A4D8               	btfss	status,2,c
 32839  016A54  D008               	goto	l17268
 32840                           
 32841                           ; BSR set to: 2
 32842  016A56  0E00               	movlw	0
 32843  016A58  6F12               	movwf	___flmul@a& (0+255),b
 32844  016A5A  0E00               	movlw	0
 32845  016A5C  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32846  016A5E  0E00               	movlw	0
 32847  016A60  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32848  016A62  0E00               	movlw	0
 32849  016A64  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32850  016A66                     l17268:
 32851                           
 32852                           ; BSR set to: 2
 32853  016A66  8F14               	bsf	(___flmul@a+2)& (0+255),7,b
 32854  016A68  D008               	goto	l3291
 32855  016A6A                     l17270:
 32856                           
 32857                           ; BSR set to: 2
 32858  016A6A  0E00               	movlw	0
 32859  016A6C  6F12               	movwf	___flmul@a& (0+255),b
 32860  016A6E  0E00               	movlw	0
 32861  016A70  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32862  016A72  0E00               	movlw	0
 32863  016A74  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32864  016A76  0E00               	movlw	0
 32865  016A78  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32866  016A7A                     l3291:
 32867                           
 32868                           ; BSR set to: 2
 32869  016A7A  511B               	movf	___flmul@aexp& (0+255),w,b
 32870  016A7C  B4D8               	btfsc	status,2,c
 32871  016A7E  D003               	goto	u20930
 32872                           
 32873                           ; BSR set to: 2
 32874  016A80  5120               	movf	___flmul@bexp& (0+255),w,b
 32875  016A82  A4D8               	btfss	status,2,c
 32876  016A84  D009               	goto	l17278
 32877  016A86                     u20930:
 32878                           
 32879                           ; BSR set to: 2
 32880  016A86  0E00               	movlw	0
 32881  016A88  6F0E               	movwf	?___flmul& (0+255),b
 32882  016A8A  0E00               	movlw	0
 32883  016A8C  6F0F               	movwf	(?___flmul+1)& (0+255),b
 32884  016A8E  0E00               	movlw	0
 32885  016A90  6F10               	movwf	(?___flmul+2)& (0+255),b
 32886  016A92  0E00               	movlw	0
 32887  016A94  6F11               	movwf	(?___flmul+3)& (0+255),b
 32888  016A96  0012               	return	
 32889  016A98                     l17278:
 32890                           
 32891                           ; BSR set to: 2
 32892  016A98  5114               	movf	(___flmul@a+2)& (0+255),w,b
 32893  016A9A  030E               	mulwf	___flmul@b& (0+255),b
 32894  016A9C  CFF3 F225          	movff	prodl,___flmul@temp
 32895  016AA0  CFF4 F226          	movff	prodh,___flmul@temp+1
 32896                           
 32897                           ; BSR set to: 2
 32898  016AA4  5125               	movf	___flmul@temp& (0+255),w,b
 32899  016AA6  6F1C               	movwf	___flmul@grs& (0+255),b
 32900  016AA8  6B1D               	clrf	(___flmul@grs+1)& (0+255),b
 32901  016AAA  6B1E               	clrf	(___flmul@grs+2)& (0+255),b
 32902  016AAC  6B1F               	clrf	(___flmul@grs+3)& (0+255),b
 32903                           
 32904                           ; BSR set to: 2
 32905  016AAE  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 32906  016AB0  6F21               	movwf	___flmul@prod& (0+255),b
 32907  016AB2  6B22               	clrf	(___flmul@prod+1)& (0+255),b
 32908  016AB4  6B23               	clrf	(___flmul@prod+2)& (0+255),b
 32909  016AB6  6B24               	clrf	(___flmul@prod+3)& (0+255),b
 32910  016AB8  5113               	movf	(___flmul@a+1)& (0+255),w,b
 32911  016ABA  030F               	mulwf	(___flmul@b+1)& (0+255),b
 32912  016ABC  CFF3 F225          	movff	prodl,___flmul@temp
 32913  016AC0  CFF4 F226          	movff	prodh,___flmul@temp+1
 32914                           
 32915                           ; BSR set to: 2
 32916  016AC4  5125               	movf	___flmul@temp& (0+255),w,b
 32917  016AC6  271C               	addwf	___flmul@grs& (0+255),f,b
 32918  016AC8  0E00               	movlw	0
 32919  016ACA  231D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32920  016ACC  231E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32921  016ACE  231F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32922                           
 32923                           ; BSR set to: 2
 32924  016AD0  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 32925  016AD2  2721               	addwf	___flmul@prod& (0+255),f,b
 32926  016AD4  0E00               	movlw	0
 32927  016AD6  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32928  016AD8  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32929  016ADA  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32930  016ADC  5112               	movf	___flmul@a& (0+255),w,b
 32931  016ADE  0310               	mulwf	(___flmul@b+2)& (0+255),b
 32932  016AE0  CFF3 F225          	movff	prodl,___flmul@temp
 32933  016AE4  CFF4 F226          	movff	prodh,___flmul@temp+1
 32934                           
 32935                           ; BSR set to: 2
 32936  016AE8  5125               	movf	___flmul@temp& (0+255),w,b
 32937  016AEA  271C               	addwf	___flmul@grs& (0+255),f,b
 32938  016AEC  0E00               	movlw	0
 32939  016AEE  231D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32940  016AF0  231E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32941  016AF2  231F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32942                           
 32943                           ; BSR set to: 2
 32944  016AF4  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 32945  016AF6  2721               	addwf	___flmul@prod& (0+255),f,b
 32946  016AF8  0E00               	movlw	0
 32947  016AFA  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32948  016AFC  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32949  016AFE  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32950                           
 32951                           ; BSR set to: 2
 32952  016B00  C21E  F21F         	movff	___flmul@grs+2,___flmul@grs+3
 32953  016B04  C21D  F21E         	movff	___flmul@grs+1,___flmul@grs+2
 32954  016B08  C21C  F21D         	movff	___flmul@grs,___flmul@grs+1
 32955  016B0C  6B1C               	clrf	___flmul@grs& (0+255),b
 32956                           
 32957                           ; BSR set to: 2
 32958  016B0E  5112               	movf	___flmul@a& (0+255),w,b
 32959  016B10  030F               	mulwf	(___flmul@b+1)& (0+255),b
 32960  016B12  CFF3 F225          	movff	prodl,___flmul@temp
 32961  016B16  CFF4 F226          	movff	prodh,___flmul@temp+1
 32962                           
 32963                           ; BSR set to: 2
 32964  016B1A  5125               	movf	___flmul@temp& (0+255),w,b
 32965  016B1C  271C               	addwf	___flmul@grs& (0+255),f,b
 32966  016B1E  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 32967  016B20  231D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32968  016B22  0E00               	movlw	0
 32969  016B24  231E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32970  016B26  0E00               	movlw	0
 32971  016B28  231F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32972                           
 32973                           ; BSR set to: 2
 32974  016B2A  5113               	movf	(___flmul@a+1)& (0+255),w,b
 32975  016B2C  030E               	mulwf	___flmul@b& (0+255),b
 32976  016B2E  CFF3 F225          	movff	prodl,___flmul@temp
 32977  016B32  CFF4 F226          	movff	prodh,___flmul@temp+1
 32978                           
 32979                           ; BSR set to: 2
 32980  016B36  5125               	movf	___flmul@temp& (0+255),w,b
 32981  016B38  271C               	addwf	___flmul@grs& (0+255),f,b
 32982  016B3A  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 32983  016B3C  231D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32984  016B3E  0E00               	movlw	0
 32985  016B40  231E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32986  016B42  0E00               	movlw	0
 32987  016B44  231F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32988                           
 32989                           ; BSR set to: 2
 32990  016B46  C21E  F21F         	movff	___flmul@grs+2,___flmul@grs+3
 32991  016B4A  C21D  F21E         	movff	___flmul@grs+1,___flmul@grs+2
 32992  016B4E  C21C  F21D         	movff	___flmul@grs,___flmul@grs+1
 32993  016B52  6B1C               	clrf	___flmul@grs& (0+255),b
 32994  016B54  5112               	movf	___flmul@a& (0+255),w,b
 32995  016B56  030E               	mulwf	___flmul@b& (0+255),b
 32996  016B58  CFF3 F225          	movff	prodl,___flmul@temp
 32997  016B5C  CFF4 F226          	movff	prodh,___flmul@temp+1
 32998                           
 32999                           ; BSR set to: 2
 33000  016B60  5125               	movf	___flmul@temp& (0+255),w,b
 33001  016B62  271C               	addwf	___flmul@grs& (0+255),f,b
 33002  016B64  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33003  016B66  231D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 33004  016B68  0E00               	movlw	0
 33005  016B6A  231E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 33006  016B6C  0E00               	movlw	0
 33007  016B6E  231F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 33008                           
 33009                           ; BSR set to: 2
 33010  016B70  5114               	movf	(___flmul@a+2)& (0+255),w,b
 33011  016B72  030F               	mulwf	(___flmul@b+1)& (0+255),b
 33012  016B74  CFF3 F225          	movff	prodl,___flmul@temp
 33013  016B78  CFF4 F226          	movff	prodh,___flmul@temp+1
 33014  016B7C  5125               	movf	___flmul@temp& (0+255),w,b
 33015  016B7E  2721               	addwf	___flmul@prod& (0+255),f,b
 33016  016B80  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33017  016B82  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 33018  016B84  0E00               	movlw	0
 33019  016B86  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 33020  016B88  0E00               	movlw	0
 33021  016B8A  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 33022                           
 33023                           ; BSR set to: 2
 33024  016B8C  5113               	movf	(___flmul@a+1)& (0+255),w,b
 33025  016B8E  0310               	mulwf	(___flmul@b+2)& (0+255),b
 33026  016B90  CFF3 F225          	movff	prodl,___flmul@temp
 33027  016B94  CFF4 F226          	movff	prodh,___flmul@temp+1
 33028                           
 33029                           ; BSR set to: 2
 33030  016B98  5125               	movf	___flmul@temp& (0+255),w,b
 33031  016B9A  2721               	addwf	___flmul@prod& (0+255),f,b
 33032  016B9C  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33033  016B9E  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 33034  016BA0  0E00               	movlw	0
 33035  016BA2  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 33036  016BA4  0E00               	movlw	0
 33037  016BA6  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 33038  016BA8  5114               	movf	(___flmul@a+2)& (0+255),w,b
 33039  016BAA  0310               	mulwf	(___flmul@b+2)& (0+255),b
 33040  016BAC  CFF3 F225          	movff	prodl,___flmul@temp
 33041  016BB0  CFF4 F226          	movff	prodh,___flmul@temp+1
 33042                           
 33043                           ; BSR set to: 2
 33044  016BB4  5125               	movf	___flmul@temp& (0+255),w,b
 33045  016BB6  6F16               	movwf	??___flmul& (0+255),b
 33046  016BB8  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33047  016BBA  6F17               	movwf	(??___flmul+1)& (0+255),b
 33048  016BBC  6B18               	clrf	(??___flmul+2)& (0+255),b
 33049  016BBE  6B19               	clrf	(??___flmul+3)& (0+255),b
 33050  016BC0  C218  F219         	movff	??___flmul+2,??___flmul+3
 33051  016BC4  C217  F218         	movff	??___flmul+1,??___flmul+2
 33052  016BC8  C216  F217         	movff	??___flmul,??___flmul+1
 33053  016BCC  6B16               	clrf	??___flmul& (0+255),b
 33054  016BCE  5116               	movf	??___flmul& (0+255),w,b
 33055  016BD0  2721               	addwf	___flmul@prod& (0+255),f,b
 33056  016BD2  5117               	movf	(??___flmul+1)& (0+255),w,b
 33057  016BD4  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 33058  016BD6  5118               	movf	(??___flmul+2)& (0+255),w,b
 33059  016BD8  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 33060  016BDA  5119               	movf	(??___flmul+3)& (0+255),w,b
 33061  016BDC  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 33062                           
 33063                           ; BSR set to: 2
 33064  016BDE  C21C  F216         	movff	___flmul@grs,??___flmul
 33065  016BE2  C21D  F217         	movff	___flmul@grs+1,??___flmul+1
 33066  016BE6  C21E  F218         	movff	___flmul@grs+2,??___flmul+2
 33067  016BEA  C21F  F219         	movff	___flmul@grs+3,??___flmul+3
 33068  016BEE  0E19               	movlw	25
 33069  016BF0  D005               	goto	u20940
 33070  016BF2                     u20945:
 33071  016BF2  90D8               	bcf	status,0,c
 33072  016BF4  3319               	rrcf	(??___flmul+3)& (0+255),f,b
 33073  016BF6  3318               	rrcf	(??___flmul+2)& (0+255),f,b
 33074  016BF8  3317               	rrcf	(??___flmul+1)& (0+255),f,b
 33075  016BFA  3316               	rrcf	??___flmul& (0+255),f,b
 33076  016BFC                     u20940:
 33077  016BFC  2EE8               	decfsz	wreg,f,c
 33078  016BFE  D7F9               	goto	u20945
 33079  016C00  5116               	movf	??___flmul& (0+255),w,b
 33080  016C02  2721               	addwf	___flmul@prod& (0+255),f,b
 33081  016C04  5117               	movf	(??___flmul+1)& (0+255),w,b
 33082  016C06  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 33083  016C08  5118               	movf	(??___flmul+2)& (0+255),w,b
 33084  016C0A  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 33085  016C0C  5119               	movf	(??___flmul+3)& (0+255),w,b
 33086  016C0E  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 33087                           
 33088                           ; BSR set to: 2
 33089  016C10  C21E  F21F         	movff	___flmul@grs+2,___flmul@grs+3
 33090  016C14  C21D  F21E         	movff	___flmul@grs+1,___flmul@grs+2
 33091  016C18  C21C  F21D         	movff	___flmul@grs,___flmul@grs+1
 33092  016C1C  6B1C               	clrf	___flmul@grs& (0+255),b
 33093                           
 33094                           ; BSR set to: 2
 33095  016C1E  511B               	movf	___flmul@aexp& (0+255),w,b
 33096  016C20  C220  F216         	movff	___flmul@bexp,??___flmul
 33097  016C24  6B17               	clrf	(??___flmul+1)& (0+255),b
 33098  016C26  2716               	addwf	??___flmul& (0+255),f,b
 33099  016C28  0E00               	movlw	0
 33100  016C2A  2317               	addwfc	(??___flmul+1)& (0+255),f,b
 33101  016C2C  0E82               	movlw	130
 33102  016C2E  2516               	addwf	??___flmul& (0+255),w,b
 33103  016C30  6F25               	movwf	___flmul@temp& (0+255),b
 33104  016C32  0EFF               	movlw	255
 33105  016C34  2117               	addwfc	(??___flmul+1)& (0+255),w,b
 33106  016C36  6F26               	movwf	(___flmul@temp+1)& (0+255),b
 33107  016C38  D00F               	goto	l17326
 33108  016C3A                     l17320:
 33109                           
 33110                           ; BSR set to: 2
 33111  016C3A  90D8               	bcf	status,0,c
 33112  016C3C  3721               	rlcf	___flmul@prod& (0+255),f,b
 33113  016C3E  3722               	rlcf	(___flmul@prod+1)& (0+255),f,b
 33114  016C40  3723               	rlcf	(___flmul@prod+2)& (0+255),f,b
 33115  016C42  3724               	rlcf	(___flmul@prod+3)& (0+255),f,b
 33116                           
 33117                           ; BSR set to: 2
 33118  016C44  BF1F               	btfsc	(___flmul@grs+3)& (0+255),7,b
 33119                           
 33120                           ; BSR set to: 2
 33121  016C46  8121               	bsf	___flmul@prod& (0+255),0,b
 33122                           
 33123                           ; BSR set to: 2
 33124  016C48  90D8               	bcf	status,0,c
 33125  016C4A  371C               	rlcf	___flmul@grs& (0+255),f,b
 33126  016C4C  371D               	rlcf	(___flmul@grs+1)& (0+255),f,b
 33127  016C4E  371E               	rlcf	(___flmul@grs+2)& (0+255),f,b
 33128  016C50  371F               	rlcf	(___flmul@grs+3)& (0+255),f,b
 33129  016C52  0725               	decf	___flmul@temp& (0+255),f,b
 33130  016C54  A0D8               	btfss	status,0,c
 33131  016C56  0726               	decf	(___flmul@temp+1)& (0+255),f,b
 33132  016C58                     l17326:
 33133                           
 33134                           ; BSR set to: 2
 33135  016C58  AF23               	btfss	(___flmul@prod+2)& (0+255),7,b
 33136  016C5A  D7EF               	goto	l17320
 33137                           
 33138                           ; BSR set to: 2
 33139  016C5C  0E00               	movlw	0
 33140  016C5E  6F1B               	movwf	___flmul@aexp& (0+255),b
 33141                           
 33142                           ; BSR set to: 2
 33143  016C60  AF1F               	btfss	(___flmul@grs+3)& (0+255),7,b
 33144  016C62  D017               	goto	l3300
 33145                           
 33146                           ; BSR set to: 2
 33147  016C64  0EFF               	movlw	255
 33148  016C66  151C               	andwf	___flmul@grs& (0+255),w,b
 33149  016C68  6F16               	movwf	??___flmul& (0+255),b
 33150  016C6A  0EFF               	movlw	255
 33151  016C6C  151D               	andwf	(___flmul@grs+1)& (0+255),w,b
 33152  016C6E  6F17               	movwf	(??___flmul+1)& (0+255),b
 33153  016C70  0EFF               	movlw	255
 33154  016C72  151E               	andwf	(___flmul@grs+2)& (0+255),w,b
 33155  016C74  6F18               	movwf	(??___flmul+2)& (0+255),b
 33156  016C76  0E7F               	movlw	127
 33157  016C78  151F               	andwf	(___flmul@grs+3)& (0+255),w,b
 33158  016C7A  6F19               	movwf	(??___flmul+3)& (0+255),b
 33159  016C7C  5116               	movf	??___flmul& (0+255),w,b
 33160  016C7E  1117               	iorwf	(??___flmul+1)& (0+255),w,b
 33161  016C80  1118               	iorwf	(??___flmul+2)& (0+255),w,b
 33162  016C82  1119               	iorwf	(??___flmul+3)& (0+255),w,b
 33163  016C84  B4D8               	btfsc	status,2,c
 33164  016C86  D003               	goto	l3301
 33165  016C88                     u20980:
 33166                           
 33167                           ; BSR set to: 2
 33168  016C88  0E01               	movlw	1
 33169  016C8A  6F1B               	movwf	___flmul@aexp& (0+255),b
 33170  016C8C  D002               	goto	l3300
 33171  016C8E                     l3301:
 33172                           
 33173                           ; BSR set to: 2
 33174  016C8E  B121               	btfsc	___flmul@prod& (0+255),0,b
 33175  016C90  D7FB               	goto	u20980
 33176  016C92                     l3300:
 33177                           
 33178                           ; BSR set to: 2
 33179  016C92  511B               	movf	___flmul@aexp& (0+255),w,b
 33180  016C94  B4D8               	btfsc	status,2,c
 33181  016C96  D01F               	goto	l17346
 33182                           
 33183                           ; BSR set to: 2
 33184  016C98  0E01               	movlw	1
 33185  016C9A  2721               	addwf	___flmul@prod& (0+255),f,b
 33186  016C9C  0E00               	movlw	0
 33187  016C9E  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 33188  016CA0  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 33189  016CA2  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 33190                           
 33191                           ; BSR set to: 2
 33192  016CA4  A124               	btfss	(___flmul@prod+3)& (0+255),0,b
 33193  016CA6  D017               	goto	l17346
 33194                           
 33195                           ; BSR set to: 2
 33196  016CA8  C221  F216         	movff	___flmul@prod,??___flmul
 33197  016CAC  C222  F217         	movff	___flmul@prod+1,??___flmul+1
 33198  016CB0  C223  F218         	movff	___flmul@prod+2,??___flmul+2
 33199  016CB4  C224  F219         	movff	___flmul@prod+3,??___flmul+3
 33200  016CB8  3519               	rlcf	(??___flmul+3)& (0+255),w,b
 33201  016CBA  3319               	rrcf	(??___flmul+3)& (0+255),f,b
 33202  016CBC  3318               	rrcf	(??___flmul+2)& (0+255),f,b
 33203  016CBE  3317               	rrcf	(??___flmul+1)& (0+255),f,b
 33204  016CC0  3316               	rrcf	??___flmul& (0+255),f,b
 33205  016CC2  C216  F221         	movff	??___flmul,___flmul@prod
 33206  016CC6  C217  F222         	movff	??___flmul+1,___flmul@prod+1
 33207  016CCA  C218  F223         	movff	??___flmul+2,___flmul@prod+2
 33208  016CCE  C219  F224         	movff	??___flmul+3,___flmul@prod+3
 33209                           
 33210                           ; BSR set to: 2
 33211  016CD2  4B25               	infsnz	___flmul@temp& (0+255),f,b
 33212  016CD4  2B26               	incf	(___flmul@temp+1)& (0+255),f,b
 33213  016CD6                     l17346:
 33214                           
 33215                           ; BSR set to: 2
 33216  016CD6  BF26               	btfsc	(___flmul@temp+1)& (0+255),7,b
 33217  016CD8  D00D               	goto	l17350
 33218  016CDA  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33219  016CDC  E103               	bnz	u21020
 33220  016CDE  2925               	incf	___flmul@temp& (0+255),w,b
 33221  016CE0  A0D8               	btfss	status,0,c
 33222  016CE2  D008               	goto	l17350
 33223  016CE4                     u21020:
 33224                           
 33225                           ; BSR set to: 2
 33226  016CE4  0E00               	movlw	0
 33227  016CE6  6F21               	movwf	___flmul@prod& (0+255),b
 33228  016CE8  0E00               	movlw	0
 33229  016CEA  6F22               	movwf	(___flmul@prod+1)& (0+255),b
 33230  016CEC  0E80               	movlw	128
 33231  016CEE  6F23               	movwf	(___flmul@prod+2)& (0+255),b
 33232  016CF0  0E7F               	movlw	127
 33233  016CF2  D020               	goto	L26
 33234  016CF4                     l17350:
 33235                           
 33236                           ; BSR set to: 2
 33237  016CF4  BF26               	btfsc	(___flmul@temp+1)& (0+255),7,b
 33238  016CF6  D005               	goto	u21030
 33239  016CF8  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33240  016CFA  E10E               	bnz	l3308
 33241  016CFC  0525               	decf	___flmul@temp& (0+255),w,b
 33242  016CFE  B0D8               	btfsc	status,0,c
 33243  016D00  D00B               	goto	l3308
 33244  016D02                     u21030:
 33245                           
 33246                           ; BSR set to: 2
 33247  016D02  0E00               	movlw	0
 33248  016D04  6F21               	movwf	___flmul@prod& (0+255),b
 33249  016D06  0E00               	movlw	0
 33250  016D08  6F22               	movwf	(___flmul@prod+1)& (0+255),b
 33251  016D0A  0E00               	movlw	0
 33252  016D0C  6F23               	movwf	(___flmul@prod+2)& (0+255),b
 33253  016D0E  0E00               	movlw	0
 33254  016D10  6F24               	movwf	(___flmul@prod+3)& (0+255),b
 33255  016D12  0E00               	movlw	0
 33256  016D14  6F1A               	movwf	___flmul@sign& (0+255),b
 33257  016D16  D00F               	goto	l17362
 33258  016D18                     l3308:
 33259                           
 33260                           ; BSR set to: 2
 33261  016D18  C225  F220         	movff	___flmul@temp,___flmul@bexp
 33262                           
 33263                           ; BSR set to: 2
 33264  016D1C  0EFF               	movlw	255
 33265  016D1E  1721               	andwf	___flmul@prod& (0+255),f,b
 33266  016D20  0EFF               	movlw	255
 33267  016D22  1722               	andwf	(___flmul@prod+1)& (0+255),f,b
 33268  016D24  0E7F               	movlw	127
 33269  016D26  1723               	andwf	(___flmul@prod+2)& (0+255),f,b
 33270  016D28  0E00               	movlw	0
 33271  016D2A  1724               	andwf	(___flmul@prod+3)& (0+255),f,b
 33272                           
 33273                           ; BSR set to: 2
 33274  016D2C  B120               	btfsc	___flmul@bexp& (0+255),0,b
 33275                           
 33276                           ; BSR set to: 2
 33277  016D2E  8F23               	bsf	(___flmul@prod+2)& (0+255),7,b
 33278                           
 33279                           ; BSR set to: 2
 33280  016D30  90D8               	bcf	status,0,c
 33281  016D32  3120               	rrcf	___flmul@bexp& (0+255),w,b
 33282  016D34                     L26:
 33283  016D34  6F24               	movwf	(___flmul@prod+3)& (0+255),b
 33284  016D36                     l17362:
 33285                           
 33286                           ; BSR set to: 2
 33287  016D36  511A               	movf	___flmul@sign& (0+255),w,b
 33288  016D38  1324               	iorwf	(___flmul@prod+3)& (0+255),f,b
 33289                           
 33290                           ; BSR set to: 2
 33291  016D3A  C221  F20E         	movff	___flmul@prod,?___flmul
 33292  016D3E  C222  F20F         	movff	___flmul@prod+1,?___flmul+1
 33293  016D42  C223  F210         	movff	___flmul@prod+2,?___flmul+2
 33294  016D46  C224  F211         	movff	___flmul@prod+3,?___flmul+3
 33295                           
 33296                           ; BSR set to: 2
 33297  016D4A  0012               	return		;funcret
 33298  016D4C                     __end_of___flmul:
 33299                           	opt callstack 0
 33300                           
 33301 ;; *************** function _I2C2_MasterWrite *****************
 33302 ;; Defined at:
 33303 ;;		line 601 in file "mcc_generated_files/i2c2.c"
 33304 ;; Parameters:    Size  Location     Type
 33305 ;;  pdata           2    9[BANK2 ] PTR unsigned char 
 33306 ;;		 -> OLED_PutChar@data_array(9), OLED_Data@data_array(2), OLED_Command@data_array(2), LM73TempSensorInitialize@output
      +_data_array(2), 
 33307 ;;		 -> NULL(0), 
 33308 ;;  length          1   11[BANK2 ] unsigned char 
 33309 ;;  address         2   12[BANK2 ] unsigned int 
 33310 ;;  pflag           2   14[BANK2 ] PTR enum E9433
 33311 ;;		 -> I2C_STATUS(1), 
 33312 ;; Auto vars:     Size  Location     Type
 33313 ;;		None
 33314 ;; Return value:  Size  Location     Type
 33315 ;;                  1    wreg      void 
 33316 ;; Registers used:
 33317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33318 ;; Tracked objects:
 33319 ;;		On entry : 0/0
 33320 ;;		On exit  : 0/0
 33321 ;;		Unchanged: 0/0
 33322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33323 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33326 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33327 ;;Total ram usage:        7 bytes
 33328 ;; Hardware stack levels used:    1
 33329 ;; Hardware stack levels required when called:   13
 33330 ;; This function calls:
 33331 ;;		_I2C2_MasterTRBInsert
 33332 ;;		_I2C2_MasterWriteTRBBuild
 33333 ;; This function is called by:
 33334 ;;		_LM73TempSensorInitialize
 33335 ;;		_LM73AcquisitionHandler
 33336 ;;		_OLED_Command
 33337 ;;		_OLED_PutChar
 33338 ;;		_OLED_Data
 33339 ;; This function uses a non-reentrant model
 33340 ;;
 33341                           
 33342                           	psect	text116
 33343  01BB4E                     __ptext116:
 33344                           	opt callstack 0
 33345  01BB4E                     _I2C2_MasterWrite:
 33346                           	opt callstack 13
 33347                           
 33348                           ;i2c2.c: 607: static I2C2_TRANSACTION_REQUEST_BLOCK trBlock;;i2c2.c: 610: if (i2c2_objec
      +                          t.trStatus.s.full != 1)
 33349                           
 33350                           ; BSR set to: 2
 33351                           ;incstack = 0
 33352  01BB4E  0101               	movlb	1	; () banked
 33353  01BB50  B165               	btfsc	(_i2c2_object+4)& (0+255),0,b
 33354  01BB52  D01E               	goto	l18470
 33355                           
 33356                           ; BSR set to: 1
 33357                           ;i2c2.c: 611: {;i2c2.c: 612: I2C2_MasterWriteTRBBuild(&trBlock, pdata, length, address);
 33358  01BB54  0E98               	movlw	low I2C2_MasterWrite@trBlock
 33359  01BB56  0102               	movlb	2	; () banked
 33360  01BB58  6F00               	movwf	I2C2_MasterWriteTRBBuild@ptrb& (0+255),b
 33361  01BB5A  0E01               	movlw	high I2C2_MasterWrite@trBlock
 33362  01BB5C  6F01               	movwf	(I2C2_MasterWriteTRBBuild@ptrb+1)& (0+255),b
 33363  01BB5E  C209  F202         	movff	I2C2_MasterWrite@pdata,I2C2_MasterWriteTRBBuild@pdata
 33364  01BB62  C20A  F203         	movff	I2C2_MasterWrite@pdata+1,I2C2_MasterWriteTRBBuild@pdata+1
 33365  01BB66  C20B  F204         	movff	I2C2_MasterWrite@length,I2C2_MasterWriteTRBBuild@length
 33366  01BB6A  C20C  F205         	movff	I2C2_MasterWrite@address,I2C2_MasterWriteTRBBuild@address
 33367  01BB6E  C20D  F206         	movff	I2C2_MasterWrite@address+1,I2C2_MasterWriteTRBBuild@address+1
 33368  01BB72  ECAA  F0DE         	call	_I2C2_MasterWriteTRBBuild	;wreg free
 33369                           
 33370                           ;i2c2.c: 613: I2C2_MasterTRBInsert(1, &trBlock, pflag);
 33371  01BB76  0E98               	movlw	low I2C2_MasterWrite@trBlock
 33372  01BB78  0102               	movlb	2	; () banked
 33373  01BB7A  6F00               	movwf	I2C2_MasterTRBInsert@ptrb_list& (0+255),b
 33374  01BB7C  0E01               	movlw	high I2C2_MasterWrite@trBlock
 33375  01BB7E  6F01               	movwf	(I2C2_MasterTRBInsert@ptrb_list+1)& (0+255),b
 33376  01BB80  C20E  F202         	movff	I2C2_MasterWrite@pflag,I2C2_MasterTRBInsert@pflag
 33377  01BB84  C20F  F203         	movff	I2C2_MasterWrite@pflag+1,I2C2_MasterTRBInsert@pflag+1
 33378  01BB88  0E01               	movlw	1
 33379  01BB8A  EC1A  F0D7         	call	_I2C2_MasterTRBInsert
 33380                           
 33381                           ;i2c2.c: 614: }
 33382  01BB8E  0012               	return	
 33383  01BB90                     l18470:
 33384                           
 33385                           ; BSR set to: 1
 33386                           ;i2c2.c: 615: else;i2c2.c: 616: {;i2c2.c: 617: *pflag = I2C2_MESSAGE_FAIL;
 33387  01BB90  C20E  FFD9         	movff	I2C2_MasterWrite@pflag,fsr2l
 33388  01BB94  C20F  FFDA         	movff	I2C2_MasterWrite@pflag+1,fsr2h
 33389  01BB98  0E01               	movlw	1
 33390  01BB9A  6EDF               	movwf	indf2,c
 33391  01BB9C  0012               	return		;funcret
 33392  01BB9E                     __end_of_I2C2_MasterWrite:
 33393                           	opt callstack 0
 33394                           
 33395 ;; *************** function _I2C2_MasterWriteTRBBuild *****************
 33396 ;; Defined at:
 33397 ;;		line 722 in file "mcc_generated_files/i2c2.c"
 33398 ;; Parameters:    Size  Location     Type
 33399 ;;  ptrb            2    0[BANK2 ] PTR struct .
 33400 ;;		 -> I2C2_MasterWrite@trBlock(5), 
 33401 ;;  pdata           2    2[BANK2 ] PTR unsigned char 
 33402 ;;		 -> OLED_PutChar@data_array(9), OLED_Data@data_array(2), OLED_Command@data_array(2), LM73TempSensorInitialize@output
      +_data_array(2), 
 33403 ;;		 -> NULL(0), 
 33404 ;;  length          1    4[BANK2 ] unsigned char 
 33405 ;;  address         2    5[BANK2 ] unsigned int 
 33406 ;; Auto vars:     Size  Location     Type
 33407 ;;		None
 33408 ;; Return value:  Size  Location     Type
 33409 ;;                  1    wreg      void 
 33410 ;; Registers used:
 33411 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33412 ;; Tracked objects:
 33413 ;;		On entry : 0/0
 33414 ;;		On exit  : 0/0
 33415 ;;		Unchanged: 0/0
 33416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33417 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33419 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33420 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33421 ;;Total ram usage:        9 bytes
 33422 ;; Hardware stack levels used:    1
 33423 ;; Hardware stack levels required when called:   11
 33424 ;; This function calls:
 33425 ;;		Nothing
 33426 ;; This function is called by:
 33427 ;;		_I2C2_MasterWrite
 33428 ;; This function uses a non-reentrant model
 33429 ;;
 33430                           
 33431                           	psect	text117
 33432  01BD54                     __ptext117:
 33433                           	opt callstack 0
 33434  01BD54                     _I2C2_MasterWriteTRBBuild:
 33435                           	opt callstack 14
 33436                           
 33437                           ;i2c2.c: 728: ptrb->address = address << 1;
 33438                           
 33439                           ;incstack = 0
 33440  01BD54  C205  F207         	movff	I2C2_MasterWriteTRBBuild@address,??_I2C2_MasterWriteTRBBuild
 33441  01BD58  C206  F208         	movff	I2C2_MasterWriteTRBBuild@address+1,??_I2C2_MasterWriteTRBBuild+1
 33442  01BD5C  90D8               	bcf	status,0,c
 33443  01BD5E  0102               	movlb	2	; () banked
 33444  01BD60  3707               	rlcf	??_I2C2_MasterWriteTRBBuild& (0+255),f,b
 33445  01BD62  3708               	rlcf	(??_I2C2_MasterWriteTRBBuild+1)& (0+255),f,b
 33446  01BD64  C200  FFD9         	movff	I2C2_MasterWriteTRBBuild@ptrb,fsr2l
 33447  01BD68  C201  FFDA         	movff	I2C2_MasterWriteTRBBuild@ptrb+1,fsr2h
 33448  01BD6C  C207  FFDE         	movff	??_I2C2_MasterWriteTRBBuild,postinc2
 33449  01BD70  C208  FFDD         	movff	??_I2C2_MasterWriteTRBBuild+1,postdec2
 33450                           
 33451                           ; BSR set to: 2
 33452                           ;i2c2.c: 729: ptrb->length = length;
 33453  01BD74  EE20 F002          	lfsr	2,2
 33454  01BD78  5100               	movf	I2C2_MasterWriteTRBBuild@ptrb& (0+255),w,b
 33455  01BD7A  26D9               	addwf	fsr2l,f,c
 33456  01BD7C  5101               	movf	(I2C2_MasterWriteTRBBuild@ptrb+1)& (0+255),w,b
 33457  01BD7E  22DA               	addwfc	fsr2h,f,c
 33458  01BD80  C204  FFDF         	movff	I2C2_MasterWriteTRBBuild@length,indf2
 33459                           
 33460                           ; BSR set to: 2
 33461                           ;i2c2.c: 730: ptrb->pbuffer = pdata;
 33462  01BD84  EE20 F003          	lfsr	2,3
 33463  01BD88  5100               	movf	I2C2_MasterWriteTRBBuild@ptrb& (0+255),w,b
 33464  01BD8A  26D9               	addwf	fsr2l,f,c
 33465  01BD8C  5101               	movf	(I2C2_MasterWriteTRBBuild@ptrb+1)& (0+255),w,b
 33466  01BD8E  22DA               	addwfc	fsr2h,f,c
 33467  01BD90  C202  FFDE         	movff	I2C2_MasterWriteTRBBuild@pdata,postinc2
 33468  01BD94  C203  FFDD         	movff	I2C2_MasterWriteTRBBuild@pdata+1,postdec2
 33469                           
 33470                           ; BSR set to: 2
 33471  01BD98  0012               	return		;funcret
 33472  01BD9A                     __end_of_I2C2_MasterWriteTRBBuild:
 33473                           	opt callstack 0
 33474                           
 33475 ;; *************** function _I2C2_MasterRead *****************
 33476 ;; Defined at:
 33477 ;;		line 622 in file "mcc_generated_files/i2c2.c"
 33478 ;; Parameters:    Size  Location     Type
 33479 ;;  pdata           2    9[BANK2 ] PTR unsigned char 
 33480 ;;		 -> LM73_temp_results(18), 
 33481 ;;  length          1   11[BANK2 ] unsigned char 
 33482 ;;  address         2   12[BANK2 ] unsigned int 
 33483 ;;  pflag           2   14[BANK2 ] PTR enum E9433
 33484 ;;		 -> I2C_STATUS(1), 
 33485 ;; Auto vars:     Size  Location     Type
 33486 ;;		None
 33487 ;; Return value:  Size  Location     Type
 33488 ;;                  1    wreg      void 
 33489 ;; Registers used:
 33490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33491 ;; Tracked objects:
 33492 ;;		On entry : 0/0
 33493 ;;		On exit  : 0/0
 33494 ;;		Unchanged: 0/0
 33495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33496 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33499 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33500 ;;Total ram usage:        7 bytes
 33501 ;; Hardware stack levels used:    1
 33502 ;; Hardware stack levels required when called:   13
 33503 ;; This function calls:
 33504 ;;		_I2C2_MasterReadTRBBuild
 33505 ;;		_I2C2_MasterTRBInsert
 33506 ;; This function is called by:
 33507 ;;		_LM73AcquisitionHandler
 33508 ;; This function uses a non-reentrant model
 33509 ;;
 33510                           
 33511                           	psect	text118
 33512  01BB9E                     __ptext118:
 33513                           	opt callstack 0
 33514  01BB9E                     _I2C2_MasterRead:
 33515                           	opt callstack 16
 33516                           
 33517                           ;i2c2.c: 628: static I2C2_TRANSACTION_REQUEST_BLOCK trBlock;;i2c2.c: 632: if (i2c2_objec
      +                          t.trStatus.s.full != 1)
 33518                           
 33519                           ; BSR set to: 2
 33520                           ;incstack = 0
 33521  01BB9E  0101               	movlb	1	; () banked
 33522  01BBA0  B165               	btfsc	(_i2c2_object+4)& (0+255),0,b
 33523  01BBA2  D01E               	goto	l20910
 33524                           
 33525                           ; BSR set to: 1
 33526                           ;i2c2.c: 633: {;i2c2.c: 634: I2C2_MasterReadTRBBuild(&trBlock, pdata, length, address);
 33527  01BBA4  0E93               	movlw	low I2C2_MasterRead@trBlock
 33528  01BBA6  0102               	movlb	2	; () banked
 33529  01BBA8  6F00               	movwf	I2C2_MasterReadTRBBuild@ptrb& (0+255),b
 33530  01BBAA  0E01               	movlw	high I2C2_MasterRead@trBlock
 33531  01BBAC  6F01               	movwf	(I2C2_MasterReadTRBBuild@ptrb+1)& (0+255),b
 33532  01BBAE  C209  F202         	movff	I2C2_MasterRead@pdata,I2C2_MasterReadTRBBuild@pdata
 33533  01BBB2  C20A  F203         	movff	I2C2_MasterRead@pdata+1,I2C2_MasterReadTRBBuild@pdata+1
 33534  01BBB6  C20B  F204         	movff	I2C2_MasterRead@length,I2C2_MasterReadTRBBuild@length
 33535  01BBBA  C20C  F205         	movff	I2C2_MasterRead@address,I2C2_MasterReadTRBBuild@address
 33536  01BBBE  C20D  F206         	movff	I2C2_MasterRead@address+1,I2C2_MasterReadTRBBuild@address+1
 33537  01BBC2  ECDD  F0DC         	call	_I2C2_MasterReadTRBBuild	;wreg free
 33538                           
 33539                           ;i2c2.c: 635: I2C2_MasterTRBInsert(1, &trBlock, pflag);
 33540  01BBC6  0E93               	movlw	low I2C2_MasterRead@trBlock
 33541  01BBC8  0102               	movlb	2	; () banked
 33542  01BBCA  6F00               	movwf	I2C2_MasterTRBInsert@ptrb_list& (0+255),b
 33543  01BBCC  0E01               	movlw	high I2C2_MasterRead@trBlock
 33544  01BBCE  6F01               	movwf	(I2C2_MasterTRBInsert@ptrb_list+1)& (0+255),b
 33545  01BBD0  C20E  F202         	movff	I2C2_MasterRead@pflag,I2C2_MasterTRBInsert@pflag
 33546  01BBD4  C20F  F203         	movff	I2C2_MasterRead@pflag+1,I2C2_MasterTRBInsert@pflag+1
 33547  01BBD8  0E01               	movlw	1
 33548  01BBDA  EC1A  F0D7         	call	_I2C2_MasterTRBInsert
 33549                           
 33550                           ;i2c2.c: 636: }
 33551  01BBDE  0012               	return	
 33552  01BBE0                     l20910:
 33553                           
 33554                           ; BSR set to: 1
 33555                           ;i2c2.c: 637: else;i2c2.c: 638: {;i2c2.c: 639: *pflag = I2C2_MESSAGE_FAIL;
 33556  01BBE0  C20E  FFD9         	movff	I2C2_MasterRead@pflag,fsr2l
 33557  01BBE4  C20F  FFDA         	movff	I2C2_MasterRead@pflag+1,fsr2h
 33558  01BBE8  0E01               	movlw	1
 33559  01BBEA  6EDF               	movwf	indf2,c
 33560  01BBEC  0012               	return		;funcret
 33561  01BBEE                     __end_of_I2C2_MasterRead:
 33562                           	opt callstack 0
 33563                           
 33564 ;; *************** function _I2C2_MasterTRBInsert *****************
 33565 ;; Defined at:
 33566 ;;		line 655 in file "mcc_generated_files/i2c2.c"
 33567 ;; Parameters:    Size  Location     Type
 33568 ;;  count           1    wreg     unsigned char 
 33569 ;;  ptrb_list       2    0[BANK2 ] PTR struct .
 33570 ;;		 -> I2C2_MasterRead@trBlock(5), I2C2_MasterWrite@trBlock(5), 
 33571 ;;  pflag           2    2[BANK2 ] PTR enum E9433
 33572 ;;		 -> I2C_STATUS(1), 
 33573 ;; Auto vars:     Size  Location     Type
 33574 ;;  count           1    5[BANK2 ] unsigned char 
 33575 ;; Return value:  Size  Location     Type
 33576 ;;                  1    wreg      void 
 33577 ;; Registers used:
 33578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33579 ;; Tracked objects:
 33580 ;;		On entry : 0/0
 33581 ;;		On exit  : 0/0
 33582 ;;		Unchanged: 0/0
 33583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33584 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33585 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33586 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33587 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33588 ;;Total ram usage:        6 bytes
 33589 ;; Hardware stack levels used:    1
 33590 ;; Hardware stack levels required when called:   12
 33591 ;; This function calls:
 33592 ;;		_I2C2_WaitForLastPacketToComplete
 33593 ;; This function is called by:
 33594 ;;		_I2C2_MasterWrite
 33595 ;;		_I2C2_MasterRead
 33596 ;; This function uses a non-reentrant model
 33597 ;;
 33598                           
 33599                           	psect	text119
 33600  01AE34                     __ptext119:
 33601                           	opt callstack 0
 33602  01AE34                     _I2C2_MasterTRBInsert:
 33603                           	opt callstack 13
 33604                           
 33605                           ;incstack = 0
 33606                           ;I2C2_MasterTRBInsert@count stored from wreg
 33607  01AE34  0102               	movlb	2	; () banked
 33608  01AE36  6F05               	movwf	I2C2_MasterTRBInsert@count& (0+255),b
 33609                           
 33610                           ;i2c2.c: 662: if (i2c2_object.trStatus.s.full != 1)
 33611  01AE38  0101               	movlb	1	; () banked
 33612  01AE3A  B165               	btfsc	(_i2c2_object+4)& (0+255),0,b
 33613  01AE3C  D039               	goto	l17888
 33614                           
 33615                           ; BSR set to: 1
 33616                           ;i2c2.c: 663: {;i2c2.c: 664: *pflag = I2C2_MESSAGE_PENDING;
 33617  01AE3E  C202  FFD9         	movff	I2C2_MasterTRBInsert@pflag,fsr2l
 33618  01AE42  C203  FFDA         	movff	I2C2_MasterTRBInsert@pflag+1,fsr2h
 33619  01AE46  0E02               	movlw	2
 33620  01AE48  6EDF               	movwf	indf2,c
 33621                           
 33622                           ; BSR set to: 1
 33623                           ;i2c2.c: 666: i2c2_object.pTrTail->ptrb_list = ptrb_list;
 33624  01AE4A  EE20 F001          	lfsr	2,1
 33625  01AE4E  5161               	movf	_i2c2_object& (0+255),w,b
 33626  01AE50  26D9               	addwf	fsr2l,f,c
 33627  01AE52  5162               	movf	(_i2c2_object+1)& (0+255),w,b
 33628  01AE54  22DA               	addwfc	fsr2h,f,c
 33629  01AE56  C200  FFDE         	movff	I2C2_MasterTRBInsert@ptrb_list,postinc2
 33630  01AE5A  C201  FFDD         	movff	I2C2_MasterTRBInsert@ptrb_list+1,postdec2
 33631                           
 33632                           ; BSR set to: 1
 33633                           ;i2c2.c: 667: i2c2_object.pTrTail->count = count;
 33634  01AE5E  C161  FFD9         	movff	_i2c2_object,fsr2l
 33635  01AE62  C162  FFDA         	movff	_i2c2_object+1,fsr2h
 33636  01AE66  C205  FFDF         	movff	I2C2_MasterTRBInsert@count,indf2
 33637                           
 33638                           ; BSR set to: 1
 33639                           ;i2c2.c: 668: i2c2_object.pTrTail->pTrFlag = pflag;
 33640  01AE6A  EE20 F003          	lfsr	2,3
 33641  01AE6E  5161               	movf	_i2c2_object& (0+255),w,b
 33642  01AE70  26D9               	addwf	fsr2l,f,c
 33643  01AE72  5162               	movf	(_i2c2_object+1)& (0+255),w,b
 33644  01AE74  22DA               	addwfc	fsr2h,f,c
 33645  01AE76  C202  FFDE         	movff	I2C2_MasterTRBInsert@pflag,postinc2
 33646  01AE7A  C203  FFDD         	movff	I2C2_MasterTRBInsert@pflag+1,postdec2
 33647                           
 33648                           ; BSR set to: 1
 33649                           ;i2c2.c: 669: i2c2_object.pTrTail++;
 33650  01AE7E  0E05               	movlw	5
 33651  01AE80  2761               	addwf	_i2c2_object& (0+255),f,b
 33652  01AE82  0E00               	movlw	0
 33653  01AE84  2362               	addwfc	(_i2c2_object+1)& (0+255),f,b
 33654                           
 33655                           ; BSR set to: 1
 33656                           ;i2c2.c: 672: if (i2c2_object.pTrTail == (i2c2_tr_queue + 1))
 33657  01AE86  0EA2               	movlw	low (_i2c2_tr_queue+5)
 33658  01AE88  1961               	xorwf	_i2c2_object& (0+255),w,b
 33659  01AE8A  E108               	bnz	l17884
 33660  01AE8C  0E01               	movlw	high (_i2c2_tr_queue+5)
 33661  01AE8E  1962               	xorwf	(_i2c2_object+1)& (0+255),w,b
 33662  01AE90  A4D8               	btfss	status,2,c
 33663  01AE92  D004               	goto	l17884
 33664                           
 33665                           ; BSR set to: 1
 33666                           ;i2c2.c: 673: {;i2c2.c: 675: i2c2_object.pTrTail = i2c2_tr_queue;
 33667  01AE94  0E9D               	movlw	low _i2c2_tr_queue
 33668  01AE96  6F61               	movwf	_i2c2_object& (0+255),b
 33669  01AE98  0E01               	movlw	high _i2c2_tr_queue
 33670  01AE9A  6F62               	movwf	(_i2c2_object+1)& (0+255),b
 33671  01AE9C                     l17884:
 33672                           
 33673                           ; BSR set to: 1
 33674                           ;i2c2.c: 676: };i2c2.c: 680: i2c2_object.trStatus.s.empty = 0;
 33675  01AE9C  9365               	bcf	(_i2c2_object+4)& (0+255),1,b
 33676                           
 33677                           ;i2c2.c: 683: if (i2c2_object.pTrHead == i2c2_object.pTrTail)
 33678  01AE9E  5161               	movf	_i2c2_object& (0+255),w,b
 33679  01AEA0  1963               	xorwf	(_i2c2_object+2)& (0+255),w,b
 33680  01AEA2  E10C               	bnz	l17890
 33681  01AEA4  5162               	movf	(_i2c2_object+1)& (0+255),w,b
 33682  01AEA6  1964               	xorwf	(_i2c2_object+3)& (0+255),w,b
 33683  01AEA8  A4D8               	btfss	status,2,c
 33684  01AEAA  D008               	goto	l17890
 33685                           
 33686                           ; BSR set to: 1
 33687                           ;i2c2.c: 684: {;i2c2.c: 686: i2c2_object.trStatus.s.full = 1;
 33688  01AEAC  8165               	bsf	(_i2c2_object+4)& (0+255),0,b
 33689  01AEAE  D006               	goto	l17890
 33690  01AEB0                     l17888:
 33691                           
 33692                           ; BSR set to: 1
 33693                           ;i2c2.c: 690: else;i2c2.c: 691: {;i2c2.c: 692: *pflag = I2C2_MESSAGE_FAIL;
 33694  01AEB0  C202  FFD9         	movff	I2C2_MasterTRBInsert@pflag,fsr2l
 33695  01AEB4  C203  FFDA         	movff	I2C2_MasterTRBInsert@pflag+1,fsr2h
 33696  01AEB8  0E01               	movlw	1
 33697  01AEBA  6EDF               	movwf	indf2,c
 33698  01AEBC                     l17890:
 33699                           
 33700                           ; BSR set to: 1
 33701                           ;i2c2.c: 693: };i2c2.c: 696: if (*pflag == I2C2_MESSAGE_PENDING)
 33702  01AEBC  C202  FFD9         	movff	I2C2_MasterTRBInsert@pflag,fsr2l
 33703  01AEC0  C203  FFDA         	movff	I2C2_MasterTRBInsert@pflag+1,fsr2h
 33704  01AEC4  0E02               	movlw	2
 33705  01AEC6  18DE               	xorwf	postinc2,w,c
 33706  01AEC8  A4D8               	btfss	status,2,c
 33707  01AECA  0012               	return	
 33708                           
 33709                           ; BSR set to: 1
 33710                           ;i2c2.c: 697: {;i2c2.c: 698: I2C2_WaitForLastPacketToComplete();
 33711  01AECC  EC5E  F0E5         	call	_I2C2_WaitForLastPacketToComplete	;wreg free
 33712                           
 33713                           ;i2c2.c: 703: PIR3bits.SSP2IF = 1;
 33714  01AED0  010E               	movlb	14	; () banked
 33715  01AED2  85CD               	bsf	205,2,b	;volatile
 33716  01AED4  0012               	return		;funcret
 33717  01AED6                     __end_of_I2C2_MasterTRBInsert:
 33718                           	opt callstack 0
 33719                           
 33720 ;; *************** function _I2C2_WaitForLastPacketToComplete *****************
 33721 ;; Defined at:
 33722 ;;		line 645 in file "mcc_generated_files/i2c2.c"
 33723 ;; Parameters:    Size  Location     Type
 33724 ;;		None
 33725 ;; Auto vars:     Size  Location     Type
 33726 ;;		None
 33727 ;; Return value:  Size  Location     Type
 33728 ;;                  1    wreg      void 
 33729 ;; Registers used:
 33730 ;;		wreg, status,2
 33731 ;; Tracked objects:
 33732 ;;		On entry : 0/0
 33733 ;;		On exit  : 0/0
 33734 ;;		Unchanged: 0/0
 33735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33740 ;;Total ram usage:        0 bytes
 33741 ;; Hardware stack levels used:    1
 33742 ;; Hardware stack levels required when called:   11
 33743 ;; This function calls:
 33744 ;;		Nothing
 33745 ;; This function is called by:
 33746 ;;		_I2C2_MasterTRBInsert
 33747 ;; This function uses a non-reentrant model
 33748 ;;
 33749                           
 33750                           	psect	text120
 33751  01CABC                     __ptext120:
 33752                           	opt callstack 0
 33753  01CABC                     _I2C2_WaitForLastPacketToComplete:
 33754                           	opt callstack 13
 33755                           
 33756                           ;i2c2.c: 647: while(i2c2_state != S_MASTER_IDLE)
 33757                           
 33758                           ;incstack = 0
 33759  01CABC  0100               	movlb	0	; () banked
 33760  01CABE  51DD               	movf	_i2c2_state& (0+255),w,b
 33761  01CAC0  B4D8               	btfsc	status,2,c
 33762  01CAC2  0012               	return	
 33763  01CAC4  D7FB               	goto	_I2C2_WaitForLastPacketToComplete
 33764  01CAC6                     __end_of_I2C2_WaitForLastPacketToComplete:
 33765                           	opt callstack 0
 33766                           
 33767 ;; *************** function _I2C2_MasterReadTRBBuild *****************
 33768 ;; Defined at:
 33769 ;;		line 709 in file "mcc_generated_files/i2c2.c"
 33770 ;; Parameters:    Size  Location     Type
 33771 ;;  ptrb            2    0[BANK2 ] PTR struct .
 33772 ;;		 -> I2C2_MasterRead@trBlock(5), 
 33773 ;;  pdata           2    2[BANK2 ] PTR unsigned char 
 33774 ;;		 -> LM73_temp_results(18), 
 33775 ;;  length          1    4[BANK2 ] unsigned char 
 33776 ;;  address         2    5[BANK2 ] unsigned int 
 33777 ;; Auto vars:     Size  Location     Type
 33778 ;;		None
 33779 ;; Return value:  Size  Location     Type
 33780 ;;                  1    wreg      void 
 33781 ;; Registers used:
 33782 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33783 ;; Tracked objects:
 33784 ;;		On entry : 0/0
 33785 ;;		On exit  : 0/0
 33786 ;;		Unchanged: 0/0
 33787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33788 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33790 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33791 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33792 ;;Total ram usage:        9 bytes
 33793 ;; Hardware stack levels used:    1
 33794 ;; Hardware stack levels required when called:   11
 33795 ;; This function calls:
 33796 ;;		Nothing
 33797 ;; This function is called by:
 33798 ;;		_I2C2_MasterRead
 33799 ;; This function uses a non-reentrant model
 33800 ;;
 33801                           
 33802                           	psect	text121
 33803  01B9BA                     __ptext121:
 33804                           	opt callstack 0
 33805  01B9BA                     _I2C2_MasterReadTRBBuild:
 33806                           	opt callstack 17
 33807                           
 33808                           ;i2c2.c: 715: ptrb->address = address << 1;
 33809                           
 33810                           ; BSR set to: 0
 33811                           ;incstack = 0
 33812  01B9BA  C205  F207         	movff	I2C2_MasterReadTRBBuild@address,??_I2C2_MasterReadTRBBuild
 33813  01B9BE  C206  F208         	movff	I2C2_MasterReadTRBBuild@address+1,??_I2C2_MasterReadTRBBuild+1
 33814  01B9C2  90D8               	bcf	status,0,c
 33815  01B9C4  0102               	movlb	2	; () banked
 33816  01B9C6  3707               	rlcf	??_I2C2_MasterReadTRBBuild& (0+255),f,b
 33817  01B9C8  3708               	rlcf	(??_I2C2_MasterReadTRBBuild+1)& (0+255),f,b
 33818  01B9CA  C200  FFD9         	movff	I2C2_MasterReadTRBBuild@ptrb,fsr2l
 33819  01B9CE  C201  FFDA         	movff	I2C2_MasterReadTRBBuild@ptrb+1,fsr2h
 33820  01B9D2  C207  FFDE         	movff	??_I2C2_MasterReadTRBBuild,postinc2
 33821  01B9D6  C208  FFDD         	movff	??_I2C2_MasterReadTRBBuild+1,postdec2
 33822                           
 33823                           ; BSR set to: 2
 33824                           ;i2c2.c: 717: ptrb->address |= 0x01;
 33825  01B9DA  C200  FFD9         	movff	I2C2_MasterReadTRBBuild@ptrb,fsr2l
 33826  01B9DE  C201  FFDA         	movff	I2C2_MasterReadTRBBuild@ptrb+1,fsr2h
 33827  01B9E2  0E00               	movlw	0
 33828  01B9E4  80DB               	bsf	plusw2,0,c
 33829                           
 33830                           ; BSR set to: 2
 33831                           ;i2c2.c: 718: ptrb->length = length;
 33832  01B9E6  EE20 F002          	lfsr	2,2
 33833  01B9EA  5100               	movf	I2C2_MasterReadTRBBuild@ptrb& (0+255),w,b
 33834  01B9EC  26D9               	addwf	fsr2l,f,c
 33835  01B9EE  5101               	movf	(I2C2_MasterReadTRBBuild@ptrb+1)& (0+255),w,b
 33836  01B9F0  22DA               	addwfc	fsr2h,f,c
 33837  01B9F2  C204  FFDF         	movff	I2C2_MasterReadTRBBuild@length,indf2
 33838                           
 33839                           ; BSR set to: 2
 33840                           ;i2c2.c: 719: ptrb->pbuffer = pdata;
 33841  01B9F6  EE20 F003          	lfsr	2,3
 33842  01B9FA  5100               	movf	I2C2_MasterReadTRBBuild@ptrb& (0+255),w,b
 33843  01B9FC  26D9               	addwf	fsr2l,f,c
 33844  01B9FE  5101               	movf	(I2C2_MasterReadTRBBuild@ptrb+1)& (0+255),w,b
 33845  01BA00  22DA               	addwfc	fsr2h,f,c
 33846  01BA02  C202  FFDE         	movff	I2C2_MasterReadTRBBuild@pdata,postinc2
 33847  01BA06  C203  FFDD         	movff	I2C2_MasterReadTRBBuild@pdata+1,postdec2
 33848                           
 33849                           ; BSR set to: 2
 33850  01BA0A  0012               	return		;funcret
 33851  01BA0C                     __end_of_I2C2_MasterReadTRBBuild:
 33852                           	opt callstack 0
 33853                           
 33854 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 33855 ;; Defined at:
 33856 ;;		line 138 in file "mcc_generated_files/interrupt_manager.c"
 33857 ;; Parameters:    Size  Location     Type
 33858 ;;		None
 33859 ;; Auto vars:     Size  Location     Type
 33860 ;;		None
 33861 ;; Return value:  Size  Location     Type
 33862 ;;                  1    wreg      void 
 33863 ;; Registers used:
 33864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33865 ;; Tracked objects:
 33866 ;;		On entry : 0/0
 33867 ;;		On exit  : 0/0
 33868 ;;		Unchanged: 0/0
 33869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33872 ;;      Temps:          0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33873 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33874 ;;Total ram usage:        9 bytes
 33875 ;; Hardware stack levels used:    1
 33876 ;; Hardware stack levels required when called:   10
 33877 ;; This function calls:
 33878 ;;		Absolute function
 33879 ;;		_CCP2_CaptureISR
 33880 ;;		_EUSART2_Transmit_ISR
 33881 ;;		_I2C2_BusCollisionISR
 33882 ;;		_I2C2_ISR
 33883 ;;		_TMR2_ISR
 33884 ;;		_TMR3_ISR
 33885 ;; This function is called by:
 33886 ;;		Interrupt level 1
 33887 ;; This function uses a non-reentrant model
 33888 ;;
 33889                           
 33890                           	psect	intcodelo
 33891  000018                     __pintcodelo:
 33892                           	opt callstack 0
 33893  000018                     _INTERRUPT_InterruptManagerLow:
 33894                           	opt callstack 12
 33895                           
 33896                           ; BSR set to: 2
 33897                           ;incstack = 0
 33898  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 33899  00001A  CFD8 F158          	movff	status,??_INTERRUPT_InterruptManagerLow
 33900  00001E  CFE8 F159          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 33901  000022  CFE0 F15A          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 33902  000026  CFFA F15B          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 33903  00002A  CFFB F15C          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 33904  00002E  CFD9 F15D          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+5
 33905  000032  CFDA F15E          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+6
 33906  000036  CFF3 F15F          	movff	prodl,??_INTERRUPT_InterruptManagerLow+7
 33907  00003A  CFF4 F160          	movff	prodh,??_INTERRUPT_InterruptManagerLow+8
 33908                           
 33909                           ;interrupt_manager.c: 141: if(PIE4bits.TMR2IE == 1 && PIR4bits.TMR2IF == 1)
 33910  00003E  010E               	movlb	14	; () banked
 33911  000040  B3C6               	btfsc	198,1,b	;volatile
 33912                           
 33913                           ; BSR set to: 14
 33914  000042  A3CE               	btfss	206,1,b	;volatile
 33915  000044  D003               	goto	i1l243
 33916                           
 33917                           ; BSR set to: 14
 33918                           ;interrupt_manager.c: 142: {;interrupt_manager.c: 143: TMR2_ISR();
 33919  000046  EC8D  F0E2         	call	_TMR2_ISR	;wreg free
 33920                           
 33921                           ;interrupt_manager.c: 144: }
 33922  00004A  D027               	goto	i1l250
 33923  00004C                     i1l243:
 33924                           
 33925                           ; BSR set to: 14
 33926                           ;interrupt_manager.c: 145: else if(PIE3bits.BCL2IE == 1 && PIR3bits.BCL2IF == 1)
 33927  00004C  B7C5               	btfsc	197,3,b	;volatile
 33928                           
 33929                           ; BSR set to: 14
 33930  00004E  A7CD               	btfss	205,3,b	;volatile
 33931  000050  D003               	goto	i1l245
 33932                           
 33933                           ; BSR set to: 14
 33934                           ;interrupt_manager.c: 146: {;interrupt_manager.c: 147: I2C2_BusCollisionISR();
 33935  000052  EC4D  F0E5         	call	_I2C2_BusCollisionISR	;wreg free
 33936                           
 33937                           ;interrupt_manager.c: 148: }
 33938  000056  D021               	goto	i1l250
 33939  000058                     i1l245:
 33940                           
 33941                           ; BSR set to: 14
 33942                           ;interrupt_manager.c: 149: else if(PIE3bits.SSP2IE == 1 && PIR3bits.SSP2IF == 1)
 33943  000058  B5C5               	btfsc	197,2,b	;volatile
 33944                           
 33945                           ; BSR set to: 14
 33946  00005A  A5CD               	btfss	205,2,b	;volatile
 33947  00005C  D003               	goto	i1l247
 33948                           
 33949                           ; BSR set to: 14
 33950                           ;interrupt_manager.c: 150: {;interrupt_manager.c: 151: I2C2_ISR();
 33951  00005E  EC94  F0C7         	call	_I2C2_ISR	;wreg free
 33952                           
 33953                           ;interrupt_manager.c: 152: }
 33954  000062  D01B               	goto	i1l250
 33955  000064                     i1l247:
 33956                           
 33957                           ; BSR set to: 14
 33958                           ;interrupt_manager.c: 153: else if(PIE4bits.TMR3IE == 1 && PIR4bits.TMR3IF == 1)
 33959  000064  B5C6               	btfsc	198,2,b	;volatile
 33960                           
 33961                           ; BSR set to: 14
 33962  000066  A5CE               	btfss	206,2,b	;volatile
 33963  000068  D003               	goto	i1l249
 33964                           
 33965                           ; BSR set to: 14
 33966                           ;interrupt_manager.c: 154: {;interrupt_manager.c: 155: TMR3_ISR();
 33967  00006A  EC1D  F0E1         	call	_TMR3_ISR	;wreg free
 33968                           
 33969                           ;interrupt_manager.c: 156: }
 33970  00006E  D015               	goto	i1l250
 33971  000070                     i1l249:
 33972                           
 33973                           ; BSR set to: 14
 33974                           ;interrupt_manager.c: 157: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 33975  000070  BDC5               	btfsc	197,6,b	;volatile
 33976                           
 33977                           ; BSR set to: 14
 33978  000072  ADCD               	btfss	205,6,b	;volatile
 33979  000074  D00D               	goto	i1l251
 33980                           
 33981                           ; BSR set to: 14
 33982                           ;interrupt_manager.c: 158: {;interrupt_manager.c: 159: EUSART2_TxDefaultInterruptHandler
      +                          ();
 33983  000076  D801               	call	i1u2895_28
 33984  000078  D010               	goto	i1l250
 33985  00007A                     i1u2895_28:
 33986  00007A  0005               	push	
 33987  00007C  6EFA               	movwf	pclath,c
 33988  00007E  0101               	movlb	1	; () banked
 33989  000080  517D               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 33990  000082  6EFD               	movwf	tosl,c
 33991  000084  517E               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 33992  000086  6EFE               	movwf	tosh,c
 33993  000088  517F               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 33994  00008A  6EFF               	movwf	tosu,c
 33995  00008C  50FA               	movf	pclath,w,c
 33996  00008E  0012               	return		;indir
 33997  000090                     i1l251:
 33998                           
 33999                           ; BSR set to: 14
 34000                           ;interrupt_manager.c: 161: else if(PIE6bits.CCP2IE == 1 && PIR6bits.CCP2IF == 1)
 34001  000090  B3C8               	btfsc	200,1,b	;volatile
 34002                           
 34003                           ; BSR set to: 14
 34004  000092  A3D0               	btfss	208,1,b	;volatile
 34005  000094  D002               	goto	i1l250
 34006                           
 34007                           ; BSR set to: 14
 34008                           ;interrupt_manager.c: 162: {;interrupt_manager.c: 163: CCP2_CaptureISR();
 34009  000096  EC21  F0E4         	call	_CCP2_CaptureISR	;wreg free
 34010  00009A                     i1l250:
 34011                           
 34012                           ; BSR set to: 14
 34013  00009A  C160  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+8,prodh
 34014  00009E  C15F  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+7,prodl
 34015  0000A2  C15E  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr2h
 34016  0000A6  C15D  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr2l
 34017  0000AA  C15C  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 34018  0000AE  C15B  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 34019  0000B2  C15A  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 34020  0000B6  C159  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 34021  0000BA  C158  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 34022  0000BE  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 34023  0000C0  0010               	retfie	
 34024  0000C2                     __end_of_INTERRUPT_InterruptManagerLow:
 34025                           	opt callstack 0
 34026                           
 34027 ;; *************** function _TMR3_ISR *****************
 34028 ;; Defined at:
 34029 ;;		line 164 in file "mcc_generated_files/tmr3.c"
 34030 ;; Parameters:    Size  Location     Type
 34031 ;;		None
 34032 ;; Auto vars:     Size  Location     Type
 34033 ;;		None
 34034 ;; Return value:  Size  Location     Type
 34035 ;;                  1    wreg      void 
 34036 ;; Registers used:
 34037 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 34038 ;; Tracked objects:
 34039 ;;		On entry : 0/0
 34040 ;;		On exit  : 0/0
 34041 ;;		Unchanged: 0/0
 34042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34047 ;;Total ram usage:        0 bytes
 34048 ;; Hardware stack levels used:    1
 34049 ;; Hardware stack levels required when called:    9
 34050 ;; This function calls:
 34051 ;;		Absolute function
 34052 ;;		_QIIdleChargedTimerHandler
 34053 ;;		_TMR3_DefaultInterruptHandler
 34054 ;;		i1_TMR3_WriteTimer
 34055 ;; This function is called by:
 34056 ;;		_INTERRUPT_InterruptManagerLow
 34057 ;; This function uses a non-reentrant model
 34058 ;;
 34059                           
 34060                           	psect	text123
 34061  01C23A                     __ptext123:
 34062                           	opt callstack 0
 34063  01C23A                     _TMR3_ISR:
 34064                           	opt callstack 12
 34065                           
 34066                           ;tmr3.c: 168: PIR4bits.TMR3IF = 0;
 34067                           
 34068                           ;incstack = 0
 34069  01C23A  010E               	movlb	14	; () banked
 34070  01C23C  95CE               	bcf	206,2,b	;volatile
 34071                           
 34072                           ; BSR set to: 14
 34073                           ;tmr3.c: 169: TMR3_WriteTimer(timer3ReloadVal);
 34074  01C23E  C18A  F100         	movff	_timer3ReloadVal,i1TMR3_WriteTimer@timerVal	;volatile
 34075  01C242  C18B  F101         	movff	_timer3ReloadVal+1,i1TMR3_WriteTimer@timerVal+1	;volatile
 34076  01C246  EC95  F0E3         	call	i1_TMR3_WriteTimer	;wreg free
 34077                           
 34078                           ;tmr3.c: 171: if(TMR3_InterruptHandler)
 34079  01C24A  0101               	movlb	1	; () banked
 34080  01C24C  5171               	movf	_TMR3_InterruptHandler& (0+255),w,b
 34081  01C24E  1172               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 34082  01C250  1173               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 34083  01C252  B4D8               	btfsc	status,2,c
 34084  01C254  0012               	return	
 34085                           
 34086                           ; BSR set to: 1
 34087                           ;tmr3.c: 172: {;tmr3.c: 173: TMR3_InterruptHandler();
 34088  01C256  D801               	call	i1u1893_28
 34089  01C258  0012               	return	
 34090  01C25A                     i1u1893_28:
 34091  01C25A  0005               	push	
 34092  01C25C  6EFA               	movwf	pclath,c
 34093  01C25E  5171               	movf	_TMR3_InterruptHandler& (0+255),w,b
 34094  01C260  6EFD               	movwf	tosl,c
 34095  01C262  5172               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 34096  01C264  6EFE               	movwf	tosh,c
 34097  01C266  5173               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 34098  01C268  6EFF               	movwf	tosu,c
 34099  01C26A  50FA               	movf	pclath,w,c
 34100  01C26C  0012               	return		;indir
 34101  01C26E                     __end_of_TMR3_ISR:
 34102                           	opt callstack 0
 34103                           
 34104 ;; *************** function _QIIdleChargedTimerHandler *****************
 34105 ;; Defined at:
 34106 ;;		line 98 in file "NXQ_charge_state.c"
 34107 ;; Parameters:    Size  Location     Type
 34108 ;;		None
 34109 ;; Auto vars:     Size  Location     Type
 34110 ;;		None
 34111 ;; Return value:  Size  Location     Type
 34112 ;;                  1    wreg      void 
 34113 ;; Registers used:
 34114 ;;		wreg, status,2, cstack
 34115 ;; Tracked objects:
 34116 ;;		On entry : 0/0
 34117 ;;		On exit  : 0/0
 34118 ;;		Unchanged: 0/0
 34119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34124 ;;Total ram usage:        0 bytes
 34125 ;; Hardware stack levels used:    1
 34126 ;; Hardware stack levels required when called:    8
 34127 ;; This function calls:
 34128 ;;		i1_TMR3_Reload
 34129 ;;		i1_TMR3_StopTimer
 34130 ;; This function is called by:
 34131 ;;		_main
 34132 ;;		_TMR3_ISR
 34133 ;; This function uses a non-reentrant model
 34134 ;;
 34135                           
 34136                           	psect	text124
 34137  01C70A                     __ptext124:
 34138                           	opt callstack 0
 34139  01C70A                     _QIIdleChargedTimerHandler:
 34140                           	opt callstack 12
 34141                           
 34142                           ;NXQ_charge_state.c: 100: if (PORTBbits.RB2 == 0 && PORTBbits.RB3 == 0) {
 34143                           
 34144                           ;incstack = 0
 34145  01C70A  A48E               	btfss	3982,2,c	;volatile
 34146  01C70C  B68E               	btfsc	3982,3,c	;volatile
 34147  01C70E  D002               	goto	i1l1444
 34148                           
 34149                           ;NXQ_charge_state.c: 102: nxq_charge_state = QI_Idle;
 34150  01C710  0E00               	movlw	0
 34151  01C712  D004               	goto	L27
 34152  01C714                     i1l1444:
 34153                           
 34154                           ;NXQ_charge_state.c: 106: else if (PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1) {
 34155  01C714  B48E               	btfsc	3982,2,c	;volatile
 34156  01C716  A68E               	btfss	3982,3,c	;volatile
 34157  01C718  D003               	goto	i1l15228
 34158                           
 34159                           ;NXQ_charge_state.c: 108: nxq_charge_state = QI_Fully_Charged;
 34160  01C71A  0E02               	movlw	2
 34161  01C71C                     L27:
 34162  01C71C  0101               	movlb	1	; () banked
 34163  01C71E  6F8C               	movwf	_nxq_charge_state& (0+255),b
 34164  01C720                     i1l15228:
 34165                           
 34166                           ;NXQ_charge_state.c: 110: };NXQ_charge_state.c: 112: TMR3_StopTimer();
 34167  01C720  EC88  F0E5         	call	i1_TMR3_StopTimer	;wreg free
 34168                           
 34169                           ;NXQ_charge_state.c: 113: TMR3_Reload();
 34170  01C724  EC25  F0E5         	call	i1_TMR3_Reload	;wreg free
 34171  01C728  0012               	return		;funcret
 34172  01C72A                     __end_of_QIIdleChargedTimerHandler:
 34173                           	opt callstack 0
 34174                           
 34175 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 34176 ;; Defined at:
 34177 ;;		line 182 in file "mcc_generated_files/tmr3.c"
 34178 ;; Parameters:    Size  Location     Type
 34179 ;;		None
 34180 ;; Auto vars:     Size  Location     Type
 34181 ;;		None
 34182 ;; Return value:  Size  Location     Type
 34183 ;;                  1    wreg      void 
 34184 ;; Registers used:
 34185 ;;		None
 34186 ;; Tracked objects:
 34187 ;;		On entry : 0/0
 34188 ;;		On exit  : 0/0
 34189 ;;		Unchanged: 0/0
 34190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34195 ;;Total ram usage:        0 bytes
 34196 ;; Hardware stack levels used:    1
 34197 ;; Hardware stack levels required when called:    6
 34198 ;; This function calls:
 34199 ;;		Nothing
 34200 ;; This function is called by:
 34201 ;;		_TMR3_Initialize
 34202 ;;		_TMR3_ISR
 34203 ;; This function uses a non-reentrant model
 34204 ;;
 34205                           
 34206                           	psect	text125
 34207  01CB32                     __ptext125:
 34208                           	opt callstack 0
 34209  01CB32                     _TMR3_DefaultInterruptHandler:
 34210                           	opt callstack 14
 34211                           
 34212                           ;incstack = 0
 34213  01CB32  0012               	return		;funcret
 34214  01CB34                     __end_of_TMR3_DefaultInterruptHandler:
 34215                           	opt callstack 0
 34216                           
 34217 ;; *************** function i1_TMR3_StopTimer *****************
 34218 ;; Defined at:
 34219 ;;		line 105 in file "mcc_generated_files/tmr3.c"
 34220 ;; Parameters:    Size  Location     Type
 34221 ;;		None
 34222 ;; Auto vars:     Size  Location     Type
 34223 ;;		None
 34224 ;; Return value:  Size  Location     Type
 34225 ;;                  1    wreg      void 
 34226 ;; Registers used:
 34227 ;;		None
 34228 ;; Tracked objects:
 34229 ;;		On entry : 0/0
 34230 ;;		On exit  : 0/0
 34231 ;;		Unchanged: 0/0
 34232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34237 ;;Total ram usage:        0 bytes
 34238 ;; Hardware stack levels used:    1
 34239 ;; Hardware stack levels required when called:    6
 34240 ;; This function calls:
 34241 ;;		Nothing
 34242 ;; This function is called by:
 34243 ;;		_QIIdleChargedTimerHandler
 34244 ;; This function uses a non-reentrant model
 34245 ;;
 34246                           
 34247                           	psect	text126
 34248  01CB10                     __ptext126:
 34249                           	opt callstack 0
 34250  01CB10                     i1_TMR3_StopTimer:
 34251                           	opt callstack 13
 34252                           
 34253                           ;tmr3.c: 108: T3CONbits.TMR3ON = 0;
 34254                           
 34255                           ;incstack = 0
 34256  01CB10  90C9               	bcf	4041,0,c	;volatile
 34257  01CB12  0012               	return		;funcret
 34258  01CB14                     __end_ofi1_TMR3_StopTimer:
 34259                           	opt callstack 0
 34260                           
 34261 ;; *************** function i1_TMR3_Reload *****************
 34262 ;; Defined at:
 34263 ;;		line 149 in file "mcc_generated_files/tmr3.c"
 34264 ;; Parameters:    Size  Location     Type
 34265 ;;		None
 34266 ;; Auto vars:     Size  Location     Type
 34267 ;;		None
 34268 ;; Return value:  Size  Location     Type
 34269 ;;                  1    wreg      void 
 34270 ;; Registers used:
 34271 ;;		wreg, status,2, cstack
 34272 ;; Tracked objects:
 34273 ;;		On entry : 0/0
 34274 ;;		On exit  : 0/0
 34275 ;;		Unchanged: 0/0
 34276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34281 ;;Total ram usage:        0 bytes
 34282 ;; Hardware stack levels used:    1
 34283 ;; Hardware stack levels required when called:    7
 34284 ;; This function calls:
 34285 ;;		i1_TMR3_WriteTimer
 34286 ;; This function is called by:
 34287 ;;		_QIIdleChargedTimerHandler
 34288 ;; This function uses a non-reentrant model
 34289 ;;
 34290                           
 34291                           	psect	text127
 34292  01CA4A                     __ptext127:
 34293                           	opt callstack 0
 34294  01CA4A                     i1_TMR3_Reload:
 34295                           	opt callstack 12
 34296                           
 34297                           ;tmr3.c: 151: TMR3_WriteTimer(timer3ReloadVal);
 34298                           
 34299                           ;incstack = 0
 34300  01CA4A  C18A  F100         	movff	_timer3ReloadVal,i1TMR3_WriteTimer@timerVal	;volatile
 34301  01CA4E  C18B  F101         	movff	_timer3ReloadVal+1,i1TMR3_WriteTimer@timerVal+1	;volatile
 34302  01CA52  EC95  F0E3         	call	i1_TMR3_WriteTimer	;wreg free
 34303  01CA56  0012               	return		;funcret
 34304  01CA58                     __end_ofi1_TMR3_Reload:
 34305                           	opt callstack 0
 34306                           
 34307 ;; *************** function i1_TMR3_WriteTimer *****************
 34308 ;; Defined at:
 34309 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 34310 ;; Parameters:    Size  Location     Type
 34311 ;;  timerVal        2    0[BANK1 ] unsigned int 
 34312 ;; Auto vars:     Size  Location     Type
 34313 ;;		None
 34314 ;; Return value:  Size  Location     Type
 34315 ;;                  1    wreg      void 
 34316 ;; Registers used:
 34317 ;;		wreg, status,2
 34318 ;; Tracked objects:
 34319 ;;		On entry : 0/0
 34320 ;;		On exit  : 0/0
 34321 ;;		Unchanged: 0/0
 34322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34323 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34326 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34327 ;;Total ram usage:        2 bytes
 34328 ;; Hardware stack levels used:    1
 34329 ;; Hardware stack levels required when called:    6
 34330 ;; This function calls:
 34331 ;;		Nothing
 34332 ;; This function is called by:
 34333 ;;		_TMR3_ISR
 34334 ;;		i1_TMR3_Reload
 34335 ;; This function uses a non-reentrant model
 34336 ;;
 34337                           
 34338                           	psect	text128
 34339  01C72A                     __ptext128:
 34340                           	opt callstack 0
 34341  01C72A                     i1_TMR3_WriteTimer:
 34342                           	opt callstack 14
 34343                           
 34344                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 34345                           
 34346                           ;incstack = 0
 34347  01C72A  A4C9               	btfss	4041,2,c	;volatile
 34348  01C72C  D008               	goto	i1l12958
 34349                           
 34350                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 34351  01C72E  90C9               	bcf	4041,0,c	;volatile
 34352                           
 34353                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 34354  01C730  0101               	movlb	1	; () banked
 34355  01C732  5101               	movf	(i1TMR3_WriteTimer@timerVal+1)& (0+255),w,b
 34356  01C734  6EC8               	movwf	4040,c	;volatile
 34357                           
 34358                           ; BSR set to: 1
 34359                           ;tmr3.c: 136: TMR3L = timerVal;
 34360  01C736  C100  FFC7         	movff	i1TMR3_WriteTimer@timerVal,4039	;volatile
 34361                           
 34362                           ; BSR set to: 1
 34363                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 34364  01C73A  80C9               	bsf	4041,0,c	;volatile
 34365                           
 34366                           ;tmr3.c: 140: }
 34367  01C73C  0012               	return	
 34368  01C73E                     i1l12958:
 34369                           
 34370                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 34371  01C73E  0101               	movlb	1	; () banked
 34372  01C740  5101               	movf	(i1TMR3_WriteTimer@timerVal+1)& (0+255),w,b
 34373  01C742  6EC8               	movwf	4040,c	;volatile
 34374                           
 34375                           ; BSR set to: 1
 34376                           ;tmr3.c: 145: TMR3L = timerVal;
 34377  01C744  C100  FFC7         	movff	i1TMR3_WriteTimer@timerVal,4039	;volatile
 34378                           
 34379                           ; BSR set to: 1
 34380  01C748  0012               	return		;funcret
 34381  01C74A                     __end_ofi1_TMR3_WriteTimer:
 34382                           	opt callstack 0
 34383                           
 34384 ;; *************** function _TMR2_ISR *****************
 34385 ;; Defined at:
 34386 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 34387 ;; Parameters:    Size  Location     Type
 34388 ;;		None
 34389 ;; Auto vars:     Size  Location     Type
 34390 ;;		None
 34391 ;; Return value:  Size  Location     Type
 34392 ;;                  1    wreg      void 
 34393 ;; Registers used:
 34394 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 34395 ;; Tracked objects:
 34396 ;;		On entry : 0/0
 34397 ;;		On exit  : 0/0
 34398 ;;		Unchanged: 0/0
 34399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34404 ;;Total ram usage:        0 bytes
 34405 ;; Hardware stack levels used:    1
 34406 ;; Hardware stack levels required when called:    9
 34407 ;; This function calls:
 34408 ;;		Absolute function
 34409 ;;		_ADC_acquisitionTimerHandler
 34410 ;;		_TMR2_DefaultInterruptHandler
 34411 ;; This function is called by:
 34412 ;;		_INTERRUPT_InterruptManagerLow
 34413 ;; This function uses a non-reentrant model
 34414 ;;
 34415                           
 34416                           	psect	text129
 34417  01C51A                     __ptext129:
 34418                           	opt callstack 0
 34419  01C51A                     _TMR2_ISR:
 34420                           	opt callstack 12
 34421                           
 34422                           ;tmr2.c: 169: PIR4bits.TMR2IF = 0;
 34423                           
 34424                           ; BSR set to: 1
 34425                           ;incstack = 0
 34426  01C51A  010E               	movlb	14	; () banked
 34427  01C51C  93CE               	bcf	206,1,b	;volatile
 34428                           
 34429                           ; BSR set to: 14
 34430                           ;tmr2.c: 171: if(TMR2_InterruptHandler)
 34431  01C51E  0101               	movlb	1	; () banked
 34432  01C520  5174               	movf	_TMR2_InterruptHandler& (0+255),w,b
 34433  01C522  1175               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 34434  01C524  1176               	iorwf	(_TMR2_InterruptHandler+2)& (0+255),w,b
 34435  01C526  B4D8               	btfsc	status,2,c
 34436  01C528  0012               	return	
 34437                           
 34438                           ; BSR set to: 1
 34439                           ;tmr2.c: 172: {;tmr2.c: 173: TMR2_InterruptHandler();
 34440  01C52A  D801               	call	i1u1878_28
 34441  01C52C  0012               	return	
 34442  01C52E                     i1u1878_28:
 34443  01C52E  0005               	push	
 34444  01C530  6EFA               	movwf	pclath,c
 34445  01C532  5174               	movf	_TMR2_InterruptHandler& (0+255),w,b
 34446  01C534  6EFD               	movwf	tosl,c
 34447  01C536  5175               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 34448  01C538  6EFE               	movwf	tosh,c
 34449  01C53A  5176               	movf	(_TMR2_InterruptHandler+2)& (0+255),w,b
 34450  01C53C  6EFF               	movwf	tosu,c
 34451  01C53E  50FA               	movf	pclath,w,c
 34452  01C540  0012               	return		;indir
 34453  01C542                     __end_of_TMR2_ISR:
 34454                           	opt callstack 0
 34455                           
 34456 ;; *************** function _ADC_acquisitionTimerHandler *****************
 34457 ;; Defined at:
 34458 ;;		line 135 in file "adc_postprocessing.c"
 34459 ;; Parameters:    Size  Location     Type
 34460 ;;		None
 34461 ;; Auto vars:     Size  Location     Type
 34462 ;;		None
 34463 ;; Return value:  Size  Location     Type
 34464 ;;                  1    wreg      void 
 34465 ;; Registers used:
 34466 ;;		wreg, status,2, cstack
 34467 ;; Tracked objects:
 34468 ;;		On entry : 0/0
 34469 ;;		On exit  : 0/0
 34470 ;;		Unchanged: 0/0
 34471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34476 ;;Total ram usage:        0 bytes
 34477 ;; Hardware stack levels used:    1
 34478 ;; Hardware stack levels required when called:    8
 34479 ;; This function calls:
 34480 ;;		_ADCC_ClearAccumulator
 34481 ;;		_ADCC_DischargeSampleCapacitor
 34482 ;;		_ADCC_StartConversion
 34483 ;;		_TMR2_StopTimer
 34484 ;; This function is called by:
 34485 ;;		_main
 34486 ;;		_TMR2_ISR
 34487 ;; This function uses a non-reentrant model
 34488 ;;
 34489                           
 34490                           	psect	text130
 34491  01C80E                     __ptext130:
 34492                           	opt callstack 0
 34493  01C80E                     _ADC_acquisitionTimerHandler:
 34494                           	opt callstack 12
 34495                           
 34496                           ;adc_postprocessing.c: 139: TMR2_StopTimer();
 34497                           
 34498                           ;incstack = 0
 34499  01C80E  EC79  F0E5         	call	_TMR2_StopTimer	;wreg free
 34500                           
 34501                           ;adc_postprocessing.c: 140: TMR2 = 0;
 34502  01C812  0E00               	movlw	0
 34503  01C814  6EBB               	movwf	4027,c	;volatile
 34504                           
 34505                           ;adc_postprocessing.c: 143: ADCC_DischargeSampleCapacitor();
 34506  01C816  EC72  F0E5         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 34507                           
 34508                           ;adc_postprocessing.c: 146: ADCC_ClearAccumulator();
 34509  01C81A  EC7C  F0E5         	call	_ADCC_ClearAccumulator	;wreg free
 34510                           
 34511                           ;adc_postprocessing.c: 149: ADCC_StartConversion(next_adc_channel);
 34512  01C81E  0100               	movlb	0	; () banked
 34513  01C820  51FE               	movf	_next_adc_channel& (0+255),w,b
 34514  01C822  EC2C  F0E5         	call	_ADCC_StartConversion
 34515  01C826  0012               	return		;funcret
 34516  01C828                     __end_of_ADC_acquisitionTimerHandler:
 34517                           	opt callstack 0
 34518                           
 34519 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 34520 ;; Defined at:
 34521 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 34522 ;; Parameters:    Size  Location     Type
 34523 ;;		None
 34524 ;; Auto vars:     Size  Location     Type
 34525 ;;		None
 34526 ;; Return value:  Size  Location     Type
 34527 ;;                  1    wreg      void 
 34528 ;; Registers used:
 34529 ;;		None
 34530 ;; Tracked objects:
 34531 ;;		On entry : 0/0
 34532 ;;		On exit  : 0/0
 34533 ;;		Unchanged: 0/0
 34534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34539 ;;Total ram usage:        0 bytes
 34540 ;; Hardware stack levels used:    1
 34541 ;; Hardware stack levels required when called:    6
 34542 ;; This function calls:
 34543 ;;		Nothing
 34544 ;; This function is called by:
 34545 ;;		_TMR2_Initialize
 34546 ;;		_TMR2_ISR
 34547 ;; This function uses a non-reentrant model
 34548 ;;
 34549                           
 34550                           	psect	text131
 34551  01CB34                     __ptext131:
 34552                           	opt callstack 0
 34553  01CB34                     _TMR2_DefaultInterruptHandler:
 34554                           	opt callstack 14
 34555                           
 34556                           ;incstack = 0
 34557  01CB34  0012               	return		;funcret
 34558  01CB36                     __end_of_TMR2_DefaultInterruptHandler:
 34559                           	opt callstack 0
 34560                           
 34561 ;; *************** function _TMR2_StopTimer *****************
 34562 ;; Defined at:
 34563 ;;		line 125 in file "mcc_generated_files/tmr2.c"
 34564 ;; Parameters:    Size  Location     Type
 34565 ;;		None
 34566 ;; Auto vars:     Size  Location     Type
 34567 ;;		None
 34568 ;; Return value:  Size  Location     Type
 34569 ;;                  1    wreg      void 
 34570 ;; Registers used:
 34571 ;;		cstack
 34572 ;; Tracked objects:
 34573 ;;		On entry : 0/0
 34574 ;;		On exit  : 0/0
 34575 ;;		Unchanged: 0/0
 34576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34581 ;;Total ram usage:        0 bytes
 34582 ;; Hardware stack levels used:    1
 34583 ;; Hardware stack levels required when called:    7
 34584 ;; This function calls:
 34585 ;;		_TMR2_Stop
 34586 ;; This function is called by:
 34587 ;;		_ADC_acquisitionTimerHandler
 34588 ;; This function uses a non-reentrant model
 34589 ;;
 34590                           
 34591                           	psect	text132
 34592  01CAF2                     __ptext132:
 34593                           	opt callstack 0
 34594  01CAF2                     _TMR2_StopTimer:
 34595                           	opt callstack 12
 34596                           
 34597                           ;tmr2.c: 127: TMR2_Stop();
 34598                           
 34599                           ;incstack = 0
 34600  01CAF2  EC8A  F0E5         	call	_TMR2_Stop	;wreg free
 34601  01CAF6  0012               	return		;funcret
 34602  01CAF8                     __end_of_TMR2_StopTimer:
 34603                           	opt callstack 0
 34604                           
 34605 ;; *************** function _TMR2_Stop *****************
 34606 ;; Defined at:
 34607 ;;		line 119 in file "mcc_generated_files/tmr2.c"
 34608 ;; Parameters:    Size  Location     Type
 34609 ;;		None
 34610 ;; Auto vars:     Size  Location     Type
 34611 ;;		None
 34612 ;; Return value:  Size  Location     Type
 34613 ;;                  1    wreg      void 
 34614 ;; Registers used:
 34615 ;;		None
 34616 ;; Tracked objects:
 34617 ;;		On entry : 0/0
 34618 ;;		On exit  : 0/0
 34619 ;;		Unchanged: 0/0
 34620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34625 ;;Total ram usage:        0 bytes
 34626 ;; Hardware stack levels used:    1
 34627 ;; Hardware stack levels required when called:    6
 34628 ;; This function calls:
 34629 ;;		Nothing
 34630 ;; This function is called by:
 34631 ;;		_TMR2_StopTimer
 34632 ;; This function uses a non-reentrant model
 34633 ;;
 34634                           
 34635                           	psect	text133
 34636  01CB14                     __ptext133:
 34637                           	opt callstack 0
 34638  01CB14                     _TMR2_Stop:
 34639                           	opt callstack 12
 34640                           
 34641                           ;tmr2.c: 122: T2CONbits.TMR2ON = 0;
 34642                           
 34643                           ;incstack = 0
 34644  01CB14  9EBD               	bcf	4029,7,c	;volatile
 34645  01CB16  0012               	return		;funcret
 34646  01CB18                     __end_of_TMR2_Stop:
 34647                           	opt callstack 0
 34648                           
 34649 ;; *************** function _ADCC_StartConversion *****************
 34650 ;; Defined at:
 34651 ;;		line 112 in file "mcc_generated_files/adcc.c"
 34652 ;; Parameters:    Size  Location     Type
 34653 ;;  channel         1    wreg     enum E9432
 34654 ;; Auto vars:     Size  Location     Type
 34655 ;;  channel         1    0[BANK1 ] enum E9432
 34656 ;; Return value:  Size  Location     Type
 34657 ;;                  1    wreg      void 
 34658 ;; Registers used:
 34659 ;;		wreg
 34660 ;; Tracked objects:
 34661 ;;		On entry : 0/0
 34662 ;;		On exit  : 0/0
 34663 ;;		Unchanged: 0/0
 34664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34666 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34668 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34669 ;;Total ram usage:        1 bytes
 34670 ;; Hardware stack levels used:    1
 34671 ;; Hardware stack levels required when called:    6
 34672 ;; This function calls:
 34673 ;;		Nothing
 34674 ;; This function is called by:
 34675 ;;		_ADC_acquisitionTimerHandler
 34676 ;; This function uses a non-reentrant model
 34677 ;;
 34678                           
 34679                           	psect	text134
 34680  01CA58                     __ptext134:
 34681                           	opt callstack 0
 34682  01CA58                     _ADCC_StartConversion:
 34683                           	opt callstack 13
 34684                           
 34685                           ;incstack = 0
 34686                           ;ADCC_StartConversion@channel stored from wreg
 34687  01CA58  0101               	movlb	1	; () banked
 34688  01CA5A  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 34689                           
 34690                           ;adcc.c: 115: ADPCH = channel;
 34691  01CA5C  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 34692                           
 34693                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 34694  01CA60  8E60               	bsf	3936,7,c	;volatile
 34695                           
 34696                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 34697  01CA62  8060               	bsf	3936,0,c	;volatile
 34698  01CA64  0012               	return		;funcret
 34699  01CA66                     __end_of_ADCC_StartConversion:
 34700                           	opt callstack 0
 34701                           
 34702 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 34703 ;; Defined at:
 34704 ;;		line 174 in file "mcc_generated_files/adcc.c"
 34705 ;; Parameters:    Size  Location     Type
 34706 ;;		None
 34707 ;; Auto vars:     Size  Location     Type
 34708 ;;		None
 34709 ;; Return value:  Size  Location     Type
 34710 ;;                  1    wreg      void 
 34711 ;; Registers used:
 34712 ;;		wreg, status,2
 34713 ;; Tracked objects:
 34714 ;;		On entry : 0/0
 34715 ;;		On exit  : 0/0
 34716 ;;		Unchanged: 0/0
 34717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34722 ;;Total ram usage:        0 bytes
 34723 ;; Hardware stack levels used:    1
 34724 ;; Hardware stack levels required when called:    6
 34725 ;; This function calls:
 34726 ;;		Nothing
 34727 ;; This function is called by:
 34728 ;;		_ADC_acquisitionTimerHandler
 34729 ;; This function uses a non-reentrant model
 34730 ;;
 34731                           
 34732                           	psect	text135
 34733  01CAE4                     __ptext135:
 34734                           	opt callstack 0
 34735  01CAE4                     _ADCC_DischargeSampleCapacitor:
 34736                           	opt callstack 13
 34737                           
 34738                           ;adcc.c: 177: ADPCH = 0x3c;
 34739                           
 34740                           ;incstack = 0
 34741  01CAE4  0E3C               	movlw	60
 34742  01CAE6  010F               	movlb	15	; () banked
 34743  01CAE8  6F5F               	movwf	95,b	;volatile
 34744                           
 34745                           ; BSR set to: 15
 34746  01CAEA  0012               	return		;funcret
 34747  01CAEC                     __end_of_ADCC_DischargeSampleCapacitor:
 34748                           	opt callstack 0
 34749                           
 34750 ;; *************** function _ADCC_ClearAccumulator *****************
 34751 ;; Defined at:
 34752 ;;		line 204 in file "mcc_generated_files/adcc.c"
 34753 ;; Parameters:    Size  Location     Type
 34754 ;;		None
 34755 ;; Auto vars:     Size  Location     Type
 34756 ;;		None
 34757 ;; Return value:  Size  Location     Type
 34758 ;;                  1    wreg      void 
 34759 ;; Registers used:
 34760 ;;		None
 34761 ;; Tracked objects:
 34762 ;;		On entry : 0/0
 34763 ;;		On exit  : 0/0
 34764 ;;		Unchanged: 0/0
 34765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34770 ;;Total ram usage:        0 bytes
 34771 ;; Hardware stack levels used:    1
 34772 ;; Hardware stack levels required when called:    6
 34773 ;; This function calls:
 34774 ;;		Nothing
 34775 ;; This function is called by:
 34776 ;;		_ADC_acquisitionTimerHandler
 34777 ;; This function uses a non-reentrant model
 34778 ;;
 34779                           
 34780                           	psect	text136
 34781  01CAF8                     __ptext136:
 34782                           	opt callstack 0
 34783  01CAF8                     _ADCC_ClearAccumulator:
 34784                           	opt callstack 13
 34785                           
 34786                           ;adcc.c: 207: ADCON2bits.ADACLR = 1;
 34787                           
 34788                           ; BSR set to: 15
 34789                           ;incstack = 0
 34790  01CAF8  010F               	movlb	15	; () banked
 34791  01CAFA  875A               	bsf	90,3,b	;volatile
 34792                           
 34793                           ; BSR set to: 15
 34794  01CAFC  0012               	return		;funcret
 34795  01CAFE                     __end_of_ADCC_ClearAccumulator:
 34796                           	opt callstack 0
 34797                           
 34798 ;; *************** function _I2C2_ISR *****************
 34799 ;; Defined at:
 34800 ;;		line 236 in file "mcc_generated_files/i2c2.c"
 34801 ;; Parameters:    Size  Location     Type
 34802 ;;		None
 34803 ;; Auto vars:     Size  Location     Type
 34804 ;;		None
 34805 ;; Return value:  Size  Location     Type
 34806 ;;                  1    wreg      void 
 34807 ;; Registers used:
 34808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34809 ;; Tracked objects:
 34810 ;;		On entry : 0/0
 34811 ;;		On exit  : 0/0
 34812 ;;		Unchanged: 0/0
 34813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34816 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34817 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34818 ;;Total ram usage:        2 bytes
 34819 ;; Hardware stack levels used:    1
 34820 ;; Hardware stack levels required when called:    7
 34821 ;; This function calls:
 34822 ;;		_I2C2_FunctionComplete
 34823 ;;		_I2C2_Stop
 34824 ;; This function is called by:
 34825 ;;		_INTERRUPT_InterruptManagerLow
 34826 ;; This function uses a non-reentrant model
 34827 ;;
 34828                           
 34829                           	psect	text137
 34830  018F28                     __ptext137:
 34831                           	opt callstack 0
 34832  018F28                     _I2C2_ISR:
 34833                           	opt callstack 14
 34834                           
 34835                           ;i2c2.c: 239: static uint8_t *pi2c_buf_ptr;;i2c2.c: 240: static uint16_t i2c_address = 0
      +                          ;;i2c2.c: 241: static uint8_t i2c_bytes_left = 0;;i2c2.c: 242: static uint8_t i2c_10bit_
      +                          address_restart = 0;;i2c2.c: 244: PIR3bits.SSP2IF = 0;
 34836                           
 34837                           ; BSR set to: 15
 34838                           ;incstack = 0
 34839  018F28  010E               	movlb	14	; () banked
 34840  018F2A  95CD               	bcf	205,2,b	;volatile
 34841                           
 34842                           ;i2c2.c: 248: if(SSP2CON1bits.WCOL)
 34843  018F2C  AF96               	btfss	150,7,b	;volatile
 34844  018F2E  D113               	goto	i1l21536
 34845                           
 34846                           ; BSR set to: 14
 34847                           ;i2c2.c: 249: {;i2c2.c: 251: SSP2CON1bits.WCOL = 0;
 34848  018F30  9F96               	bcf	150,7,b	;volatile
 34849                           
 34850                           ; BSR set to: 14
 34851                           ;i2c2.c: 252: i2c2_state = S_MASTER_IDLE;
 34852  018F32  0E00               	movlw	0
 34853  018F34  0100               	movlb	0	; () banked
 34854  018F36  6FDD               	movwf	_i2c2_state& (0+255),b
 34855                           
 34856                           ; BSR set to: 0
 34857                           ;i2c2.c: 253: *(p_i2c2_current->pTrFlag) = I2C2_MESSAGE_FAIL;
 34858  018F38  EE20 F003          	lfsr	2,3
 34859  018F3C  51D4               	movf	_p_i2c2_current& (0+255),w,b
 34860  018F3E  26D9               	addwf	fsr2l,f,c
 34861  018F40  51D5               	movf	(_p_i2c2_current+1)& (0+255),w,b
 34862  018F42  22DA               	addwfc	fsr2h,f,c
 34863  018F44  CFDE F103          	movff	postinc2,??_I2C2_ISR
 34864  018F48  CFDD F104          	movff	postdec2,??_I2C2_ISR+1
 34865  018F4C  C103  FFD9         	movff	??_I2C2_ISR,fsr2l
 34866  018F50  C104  FFDA         	movff	??_I2C2_ISR+1,fsr2h
 34867  018F54  0E01               	movlw	1
 34868  018F56  6EDF               	movwf	indf2,c
 34869                           
 34870                           ; BSR set to: 0
 34871                           ;i2c2.c: 256: p_i2c2_current = (0);
 34872  018F58  0E00               	movlw	0
 34873  018F5A  6FD4               	movwf	_p_i2c2_current& (0+255),b
 34874  018F5C  0E00               	movlw	0
 34875  018F5E  6FD5               	movwf	(_p_i2c2_current+1)& (0+255),b
 34876  018F60  0012               	return	
 34877  018F62                     i1l937:
 34878                           
 34879                           ; BSR set to: 0
 34880                           ;i2c2.c: 266: if(i2c2_object.trStatus.s.empty != 1)
 34881  018F62  0101               	movlb	1	; () banked
 34882  018F64  B365               	btfsc	(_i2c2_object+4)& (0+255),1,b
 34883  018F66  0012               	return	
 34884                           
 34885                           ; BSR set to: 1
 34886                           ;i2c2.c: 267: {;i2c2.c: 269: p_i2c2_current = i2c2_object.pTrHead;
 34887  018F68  C163  F0D4         	movff	_i2c2_object+2,_p_i2c2_current
 34888  018F6C  C164  F0D5         	movff	_i2c2_object+3,_p_i2c2_current+1
 34889                           
 34890                           ; BSR set to: 1
 34891                           ;i2c2.c: 270: i2c2_trb_count = i2c2_object.pTrHead->count;
 34892  018F70  C163  FFD9         	movff	_i2c2_object+2,fsr2l
 34893  018F74  C164  FFDA         	movff	_i2c2_object+3,fsr2h
 34894  018F78  50DF               	movf	indf2,w,c
 34895  018F7A  0100               	movlb	0	; () banked
 34896  018F7C  6FDC               	movwf	_i2c2_trb_count& (0+255),b
 34897                           
 34898                           ; BSR set to: 0
 34899                           ;i2c2.c: 271: p_i2c2_trb_current = i2c2_object.pTrHead->ptrb_list;
 34900  018F7E  0101               	movlb	1	; () banked
 34901  018F80  EE20 F001          	lfsr	2,1
 34902  018F84  5163               	movf	(_i2c2_object+2)& (0+255),w,b
 34903  018F86  26D9               	addwf	fsr2l,f,c
 34904  018F88  5164               	movf	(_i2c2_object+3)& (0+255),w,b
 34905  018F8A  22DA               	addwfc	fsr2h,f,c
 34906  018F8C  CFDE F0D6          	movff	postinc2,_p_i2c2_trb_current
 34907  018F90  CFDD F0D7          	movff	postdec2,_p_i2c2_trb_current+1
 34908                           
 34909                           ; BSR set to: 1
 34910                           ;i2c2.c: 273: i2c2_object.pTrHead++;
 34911  018F94  0E05               	movlw	5
 34912  018F96  2763               	addwf	(_i2c2_object+2)& (0+255),f,b
 34913  018F98  0E00               	movlw	0
 34914  018F9A  2364               	addwfc	(_i2c2_object+3)& (0+255),f,b
 34915                           
 34916                           ; BSR set to: 1
 34917                           ;i2c2.c: 276: if(i2c2_object.pTrHead == (i2c2_tr_queue + 1))
 34918  018F9C  0EA2               	movlw	low (_i2c2_tr_queue+5)
 34919  018F9E  1963               	xorwf	(_i2c2_object+2)& (0+255),w,b
 34920  018FA0  E108               	bnz	i1l21428
 34921  018FA2  0E01               	movlw	high (_i2c2_tr_queue+5)
 34922  018FA4  1964               	xorwf	(_i2c2_object+3)& (0+255),w,b
 34923  018FA6  A4D8               	btfss	status,2,c
 34924  018FA8  D004               	goto	i1l21428
 34925                           
 34926                           ; BSR set to: 1
 34927                           ;i2c2.c: 277: {;i2c2.c: 279: i2c2_object.pTrHead = i2c2_tr_queue;
 34928  018FAA  0E9D               	movlw	low _i2c2_tr_queue
 34929  018FAC  6F63               	movwf	(_i2c2_object+2)& (0+255),b
 34930  018FAE  0E01               	movlw	high _i2c2_tr_queue
 34931  018FB0  6F64               	movwf	(_i2c2_object+3)& (0+255),b
 34932  018FB2                     i1l21428:
 34933                           
 34934                           ; BSR set to: 1
 34935                           ;i2c2.c: 280: };i2c2.c: 284: i2c2_object.trStatus.s.full = 0;
 34936  018FB2  9165               	bcf	(_i2c2_object+4)& (0+255),0,b
 34937                           
 34938                           ;i2c2.c: 287: if(i2c2_object.pTrHead == i2c2_object.pTrTail)
 34939  018FB4  5161               	movf	_i2c2_object& (0+255),w,b
 34940  018FB6  1963               	xorwf	(_i2c2_object+2)& (0+255),w,b
 34941  018FB8  E104               	bnz	i1l940
 34942  018FBA  5162               	movf	(_i2c2_object+1)& (0+255),w,b
 34943  018FBC  1964               	xorwf	(_i2c2_object+3)& (0+255),w,b
 34944  018FBE  B4D8               	btfsc	status,2,c
 34945                           
 34946                           ; BSR set to: 1
 34947                           ;i2c2.c: 288: {;i2c2.c: 290: i2c2_object.trStatus.s.empty = 1;
 34948  018FC0  8365               	bsf	(_i2c2_object+4)& (0+255),1,b
 34949  018FC2                     i1l940:
 34950                           
 34951                           ; BSR set to: 1
 34952                           ;i2c2.c: 291: };i2c2.c: 294: SSP2CON2bits.SEN = 1;
 34953  018FC2  010E               	movlb	14	; () banked
 34954  018FC4  8197               	bsf	151,0,b	;volatile
 34955  018FC6                     i1l21432:
 34956                           
 34957                           ;i2c2.c: 297: i2c2_state = S_MASTER_SEND_ADDR;
 34958  018FC6  0E02               	movlw	2
 34959  018FC8  0100               	movlb	0	; () banked
 34960  018FCA  6FDD               	movwf	_i2c2_state& (0+255),b
 34961  018FCC  0012               	return	
 34962  018FCE                     i1l943:
 34963                           
 34964                           ; BSR set to: 0
 34965                           ;i2c2.c: 316: if(SSP2CON2bits.ACKSTAT)
 34966  018FCE  010E               	movlb	14	; () banked
 34967  018FD0  AD97               	btfss	151,6,b	;volatile
 34968  018FD2  D006               	goto	i1l21440
 34969                           
 34970                           ; BSR set to: 14
 34971                           ;i2c2.c: 317: {;i2c2.c: 318: i2c2_object.i2cErrors++;
 34972  018FD4  0101               	movlb	1	; () banked
 34973  018FD6  2B67               	incf	(_i2c2_object+6)& (0+255),f,b
 34974                           
 34975                           ; BSR set to: 1
 34976                           ;i2c2.c: 319: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
 34977  018FD8  0E04               	movlw	4
 34978  018FDA  EC33  F0DF         	call	_I2C2_Stop
 34979                           
 34980                           ;i2c2.c: 320: }
 34981  018FDE  0012               	return	
 34982  018FE0                     i1l21440:
 34983                           
 34984                           ; BSR set to: 14
 34985                           ;i2c2.c: 321: else;i2c2.c: 322: {;i2c2.c: 324: SSP2BUF = (i2c_address >> 1) & 0x00FF;
 34986  018FE0  90D8               	bcf	status,0,c
 34987  018FE2  0100               	movlb	0	; () banked
 34988  018FE4  31FC               	rrcf	(I2C2_ISR@i2c_address+1)& (0+255),w,b
 34989  018FE6  0101               	movlb	1	; () banked
 34990  018FE8  6F04               	movwf	(??_I2C2_ISR+1)& (0+255),b
 34991  018FEA  0100               	movlb	0	; () banked
 34992  018FEC  31FB               	rrcf	I2C2_ISR@i2c_address& (0+255),w,b
 34993  018FEE  0101               	movlb	1	; () banked
 34994  018FF0  6F03               	movwf	??_I2C2_ISR& (0+255),b
 34995  018FF2  5103               	movf	??_I2C2_ISR& (0+255),w,b
 34996  018FF4  010E               	movlb	14	; () banked
 34997  018FF6  6F92               	movwf	146,b	;volatile
 34998                           
 34999                           ; BSR set to: 14
 35000                           ;i2c2.c: 327: if(i2c_address & 0x01)
 35001  018FF8  0100               	movlb	0	; () banked
 35002  018FFA  A1FB               	btfss	I2C2_ISR@i2c_address& (0+255),0,b
 35003  018FFC  D003               	goto	i1l21446
 35004                           
 35005                           ; BSR set to: 0
 35006                           ;i2c2.c: 328: {;i2c2.c: 331: i2c2_state = S_MASTER_10BIT_RESTART;
 35007  018FFE  0E0B               	movlw	11
 35008  019000  6FDD               	movwf	_i2c2_state& (0+255),b
 35009                           
 35010                           ;i2c2.c: 332: }
 35011  019002  0012               	return	
 35012  019004                     i1l21446:
 35013                           
 35014                           ; BSR set to: 0
 35015                           ;i2c2.c: 333: else;i2c2.c: 334: {;i2c2.c: 336: i2c2_state = S_MASTER_SEND_DATA;
 35016  019004  0E03               	movlw	3
 35017  019006  6FDD               	movwf	_i2c2_state& (0+255),b
 35018  019008  0012               	return	
 35019  01900A                     i1l948:
 35020                           
 35021                           ; BSR set to: 0
 35022                           ;i2c2.c: 344: if(SSP2CON2bits.ACKSTAT)
 35023  01900A  010E               	movlb	14	; () banked
 35024  01900C  AD97               	btfss	151,6,b	;volatile
 35025  01900E  D006               	goto	i1l949
 35026                           
 35027                           ; BSR set to: 14
 35028                           ;i2c2.c: 345: {;i2c2.c: 346: i2c2_object.i2cErrors++;
 35029  019010  0101               	movlb	1	; () banked
 35030  019012  2B67               	incf	(_i2c2_object+6)& (0+255),f,b
 35031                           
 35032                           ; BSR set to: 1
 35033                           ;i2c2.c: 347: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
 35034  019014  0E04               	movlw	4
 35035  019016  EC33  F0DF         	call	_I2C2_Stop
 35036                           
 35037                           ;i2c2.c: 348: }
 35038  01901A  0012               	return	
 35039  01901C                     i1l949:
 35040                           
 35041                           ; BSR set to: 14
 35042                           ;i2c2.c: 349: else;i2c2.c: 350: {;i2c2.c: 353: SSP2CON2bits.RSEN = 1;
 35043  01901C  8397               	bsf	151,1,b	;volatile
 35044                           
 35045                           ; BSR set to: 14
 35046                           ;i2c2.c: 357: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 35047  01901E  C0FB  F103         	movff	I2C2_ISR@i2c_address,??_I2C2_ISR
 35048  019022  C0FC  F104         	movff	I2C2_ISR@i2c_address+1,??_I2C2_ISR+1
 35049  019026  C104  F103         	movff	??_I2C2_ISR+1,??_I2C2_ISR
 35050  01902A  0101               	movlb	1	; () banked
 35051  01902C  6B04               	clrf	(??_I2C2_ISR+1)& (0+255),b
 35052  01902E  0E06               	movlw	6
 35053  019030  1703               	andwf	??_I2C2_ISR& (0+255),f,b
 35054  019032  0E00               	movlw	0
 35055  019034  1704               	andwf	(??_I2C2_ISR+1)& (0+255),f,b
 35056  019036  0EF0               	movlw	240
 35057  019038  1103               	iorwf	??_I2C2_ISR& (0+255),w,b
 35058  01903A  0100               	movlb	0	; () banked
 35059  01903C  6FFB               	movwf	I2C2_ISR@i2c_address& (0+255),b
 35060  01903E  0101               	movlb	1	; () banked
 35061  019040  5104               	movf	(??_I2C2_ISR+1)& (0+255),w,b
 35062  019042  0100               	movlb	0	; () banked
 35063  019044  6FFC               	movwf	(I2C2_ISR@i2c_address+1)& (0+255),b
 35064                           
 35065                           ; BSR set to: 0
 35066                           ;i2c2.c: 360: i2c_address |= 0x0001;
 35067  019046  81FB               	bsf	I2C2_ISR@i2c_address& (0+255),0,b
 35068                           
 35069                           ; BSR set to: 0
 35070                           ;i2c2.c: 363: i2c_10bit_address_restart = 1;
 35071  019048  0E01               	movlw	1
 35072  01904A  6FDA               	movwf	I2C2_ISR@i2c_10bit_address_restart& (0+255),b
 35073  01904C  D7BC               	goto	i1l21432
 35074  01904E                     i1l21460:
 35075                           
 35076                           ; BSR set to: 0
 35077                           ;i2c2.c: 384: if(i2c_10bit_address_restart != 1)
 35078  01904E  05DA               	decf	I2C2_ISR@i2c_10bit_address_restart& (0+255),w,b
 35079  019050  B4D8               	btfsc	status,2,c
 35080  019052  D01A               	goto	i1l953
 35081                           
 35082                           ; BSR set to: 0
 35083                           ;i2c2.c: 385: {;i2c2.c: 387: i2c_address = p_i2c2_trb_current->address;
 35084  019054  C0D6  FFD9         	movff	_p_i2c2_trb_current,fsr2l
 35085  019058  C0D7  FFDA         	movff	_p_i2c2_trb_current+1,fsr2h
 35086  01905C  CFDE F0FB          	movff	postinc2,I2C2_ISR@i2c_address
 35087  019060  CFDD F0FC          	movff	postdec2,I2C2_ISR@i2c_address+1
 35088                           
 35089                           ; BSR set to: 0
 35090                           ;i2c2.c: 388: pi2c_buf_ptr = p_i2c2_trb_current->pbuffer;
 35091  019064  EE20 F003          	lfsr	2,3
 35092  019068  51D6               	movf	_p_i2c2_trb_current& (0+255),w,b
 35093  01906A  26D9               	addwf	fsr2l,f,c
 35094  01906C  51D7               	movf	(_p_i2c2_trb_current+1)& (0+255),w,b
 35095  01906E  22DA               	addwfc	fsr2h,f,c
 35096  019070  CFDE F0D2          	movff	postinc2,I2C2_ISR@pi2c_buf_ptr
 35097  019074  CFDD F0D3          	movff	postdec2,I2C2_ISR@pi2c_buf_ptr+1
 35098                           
 35099                           ; BSR set to: 0
 35100                           ;i2c2.c: 389: i2c_bytes_left = p_i2c2_trb_current->length;
 35101  019078  EE20 F002          	lfsr	2,2
 35102  01907C  51D6               	movf	_p_i2c2_trb_current& (0+255),w,b
 35103  01907E  26D9               	addwf	fsr2l,f,c
 35104  019080  51D7               	movf	(_p_i2c2_trb_current+1)& (0+255),w,b
 35105  019082  22DA               	addwfc	fsr2h,f,c
 35106  019084  50DF               	movf	indf2,w,c
 35107  019086  6FDB               	movwf	I2C2_ISR@i2c_bytes_left& (0+255),b
 35108  019088                     i1l953:
 35109                           
 35110                           ; BSR set to: 0
 35111                           ;i2c2.c: 412: else;i2c2.c: 413: {;i2c2.c: 415: SSP2BUF = i2c_address;
 35112  019088  C0FB  FE92         	movff	I2C2_ISR@i2c_address,3730	;volatile
 35113                           
 35114                           ;i2c2.c: 416: if(i2c_address & 0x01)
 35115  01908C  A1FB               	btfss	I2C2_ISR@i2c_address& (0+255),0,b
 35116  01908E  D7BA               	goto	i1l21446
 35117                           
 35118                           ; BSR set to: 0
 35119                           ;i2c2.c: 417: {;i2c2.c: 419: i2c2_state = S_MASTER_ACK_ADDR;
 35120  019090  0E05               	movlw	5
 35121  019092  6FDD               	movwf	_i2c2_state& (0+255),b
 35122                           
 35123                           ;i2c2.c: 420: }
 35124  019094  0012               	return	
 35125  019096                     i1l959:
 35126                           
 35127                           ; BSR set to: 0
 35128                           ;i2c2.c: 432: if(SSP2CON2bits.ACKSTAT)
 35129  019096  010E               	movlb	14	; () banked
 35130  019098  AD97               	btfss	151,6,b	;volatile
 35131  01909A  D008               	goto	i1l21488
 35132                           
 35133                           ; BSR set to: 14
 35134                           ;i2c2.c: 433: {;i2c2.c: 435: i2c2_object.i2cErrors++;
 35135  01909C  0101               	movlb	1	; () banked
 35136  01909E  2B67               	incf	(_i2c2_object+6)& (0+255),f,b
 35137                           
 35138                           ; BSR set to: 1
 35139                           ;i2c2.c: 438: SSP2CON2bits.ACKSTAT = 0;
 35140  0190A0  010E               	movlb	14	; () banked
 35141  0190A2  9D97               	bcf	151,6,b	;volatile
 35142                           
 35143                           ; BSR set to: 14
 35144                           ;i2c2.c: 441: I2C2_Stop(I2C2_DATA_NO_ACK);
 35145  0190A4  0E05               	movlw	5
 35146  0190A6  EC33  F0DF         	call	_I2C2_Stop
 35147                           
 35148                           ;i2c2.c: 443: }
 35149  0190AA  0012               	return	
 35150  0190AC                     i1l21488:
 35151                           
 35152                           ; BSR set to: 14
 35153                           ;i2c2.c: 444: else;i2c2.c: 445: {;i2c2.c: 447: if(i2c_bytes_left-- == 0U)
 35154  0190AC  0100               	movlb	0	; () banked
 35155  0190AE  07DB               	decf	I2C2_ISR@i2c_bytes_left& (0+255),f,b
 35156  0190B0  29DB               	incf	I2C2_ISR@i2c_bytes_left& (0+255),w,b
 35157  0190B2  A4D8               	btfss	status,2,c
 35158  0190B4  D00D               	goto	i1l21498
 35159                           
 35160                           ; BSR set to: 0
 35161                           ;i2c2.c: 448: {;i2c2.c: 452: p_i2c2_trb_current++;
 35162  0190B6  0E05               	movlw	5
 35163  0190B8  27D6               	addwf	_p_i2c2_trb_current& (0+255),f,b
 35164  0190BA  0E00               	movlw	0
 35165  0190BC  23D7               	addwfc	(_p_i2c2_trb_current+1)& (0+255),f,b
 35166                           
 35167                           ; BSR set to: 0
 35168                           ;i2c2.c: 455: if(--i2c2_trb_count == 0)
 35169  0190BE  2FDC               	decfsz	_i2c2_trb_count& (0+255),f,b
 35170  0190C0  D004               	goto	i1l963
 35171                           
 35172                           ; BSR set to: 0
 35173                           ;i2c2.c: 456: {;i2c2.c: 457: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
 35174  0190C2  0E00               	movlw	0
 35175  0190C4  EC33  F0DF         	call	_I2C2_Stop
 35176                           
 35177                           ;i2c2.c: 458: }
 35178  0190C8  0012               	return	
 35179  0190CA                     i1l963:
 35180                           
 35181                           ; BSR set to: 0
 35182                           ;i2c2.c: 459: else;i2c2.c: 460: {;i2c2.c: 467: SSP2CON2bits.RSEN = 1;
 35183  0190CA  010E               	movlb	14	; () banked
 35184  0190CC  8397               	bsf	151,1,b	;volatile
 35185  0190CE  D77B               	goto	i1l21432
 35186  0190D0                     i1l21498:
 35187                           
 35188                           ; BSR set to: 0
 35189                           ;i2c2.c: 474: else;i2c2.c: 475: {;i2c2.c: 477: SSP2BUF = *pi2c_buf_ptr++;
 35190  0190D0  C0D2  FFD9         	movff	I2C2_ISR@pi2c_buf_ptr,fsr2l
 35191  0190D4  C0D3  FFDA         	movff	I2C2_ISR@pi2c_buf_ptr+1,fsr2h
 35192  0190D8  50DF               	movf	indf2,w,c
 35193  0190DA  010E               	movlb	14	; () banked
 35194  0190DC  6F92               	movwf	146,b	;volatile
 35195                           
 35196                           ; BSR set to: 14
 35197  0190DE  0100               	movlb	0	; () banked
 35198  0190E0  4BD2               	infsnz	I2C2_ISR@pi2c_buf_ptr& (0+255),f,b
 35199  0190E2  2BD3               	incf	(I2C2_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 35200  0190E4  0012               	return	
 35201  0190E6                     i1l966:
 35202                           
 35203                           ; BSR set to: 0
 35204                           ;i2c2.c: 485: if(SSP2CON2bits.ACKSTAT)
 35205  0190E6  010E               	movlb	14	; () banked
 35206  0190E8  AD97               	btfss	151,6,b	;volatile
 35207  0190EA  D008               	goto	i1l967
 35208                           
 35209                           ; BSR set to: 14
 35210                           ;i2c2.c: 486: {;i2c2.c: 489: i2c2_object.i2cErrors++;
 35211  0190EC  0101               	movlb	1	; () banked
 35212  0190EE  2B67               	incf	(_i2c2_object+6)& (0+255),f,b
 35213                           
 35214                           ; BSR set to: 1
 35215                           ;i2c2.c: 492: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
 35216  0190F0  0E04               	movlw	4
 35217  0190F2  EC33  F0DF         	call	_I2C2_Stop
 35218                           
 35219                           ;i2c2.c: 495: SSP2CON2bits.ACKSTAT = 0;
 35220  0190F6  010E               	movlb	14	; () banked
 35221  0190F8  9D97               	bcf	151,6,b	;volatile
 35222                           
 35223                           ;i2c2.c: 496: }
 35224  0190FA  0012               	return	
 35225  0190FC                     i1l967:
 35226                           
 35227                           ; BSR set to: 14
 35228                           ;i2c2.c: 497: else;i2c2.c: 498: {;i2c2.c: 499: SSP2CON2bits.RCEN = 1;
 35229  0190FC  8797               	bsf	151,3,b	;volatile
 35230                           
 35231                           ; BSR set to: 14
 35232                           ;i2c2.c: 500: i2c2_state = S_MASTER_ACK_RCV_DATA;
 35233  0190FE  0E08               	movlw	8
 35234  019100  0100               	movlb	0	; () banked
 35235  019102  6FDD               	movwf	_i2c2_state& (0+255),b
 35236  019104  0012               	return	
 35237  019106                     i1l21510:
 35238                           
 35239                           ; BSR set to: 0
 35240                           ;i2c2.c: 509: i2c2_state = S_MASTER_ACK_RCV_DATA;
 35241  019106  0E08               	movlw	8
 35242  019108  6FDD               	movwf	_i2c2_state& (0+255),b
 35243                           
 35244                           ; BSR set to: 0
 35245                           ;i2c2.c: 512: SSP2CON2bits.RCEN = 1;
 35246  01910A  010E               	movlb	14	; () banked
 35247  01910C  8797               	bsf	151,3,b	;volatile
 35248                           
 35249                           ;i2c2.c: 514: break;
 35250  01910E  0012               	return	
 35251  019110                     i1l21514:
 35252                           
 35253                           ; BSR set to: 0
 35254                           ;i2c2.c: 519: *pi2c_buf_ptr++ = SSP2BUF;
 35255  019110  C0D2  FFD9         	movff	I2C2_ISR@pi2c_buf_ptr,fsr2l
 35256  019114  C0D3  FFDA         	movff	I2C2_ISR@pi2c_buf_ptr+1,fsr2h
 35257  019118  CE92 FFDF          	movff	3730,indf2	;volatile
 35258                           
 35259                           ; BSR set to: 0
 35260  01911C  4BD2               	infsnz	I2C2_ISR@pi2c_buf_ptr& (0+255),f,b
 35261  01911E  2BD3               	incf	(I2C2_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 35262                           
 35263                           ; BSR set to: 0
 35264                           ;i2c2.c: 522: if(--i2c_bytes_left)
 35265  019120  0E01               	movlw	1
 35266  019122  5FDB               	subwf	I2C2_ISR@i2c_bytes_left& (0+255),f,b
 35267  019124  B4D8               	btfsc	status,2,c
 35268  019126  D006               	goto	i1l971
 35269                           
 35270                           ; BSR set to: 0
 35271                           ;i2c2.c: 523: {;i2c2.c: 529: SSP2CON2bits.ACKDT = 0;
 35272  019128  010E               	movlb	14	; () banked
 35273  01912A  9B97               	bcf	151,5,b	;volatile
 35274                           
 35275                           ; BSR set to: 14
 35276                           ;i2c2.c: 532: i2c2_state = S_MASTER_RCV_DATA;
 35277  01912C  0E06               	movlw	6
 35278  01912E  0100               	movlb	0	; () banked
 35279  019130  6FDD               	movwf	_i2c2_state& (0+255),b
 35280                           
 35281                           ;i2c2.c: 533: }
 35282  019132  D004               	goto	i1l21526
 35283  019134                     i1l971:
 35284                           
 35285                           ; BSR set to: 0
 35286                           ;i2c2.c: 534: else;i2c2.c: 535: {;i2c2.c: 539: SSP2CON2bits.ACKDT = 1;
 35287  019134  010E               	movlb	14	; () banked
 35288  019136  8B97               	bsf	151,5,b	;volatile
 35289                           
 35290                           ; BSR set to: 14
 35291                           ;i2c2.c: 541: I2C2_FunctionComplete();
 35292  019138  EC14  F0E4         	call	_I2C2_FunctionComplete	;wreg free
 35293  01913C                     i1l21526:
 35294                           
 35295                           ;i2c2.c: 542: };i2c2.c: 545: SSP2CON2bits.ACKEN = 1;
 35296  01913C  010E               	movlb	14	; () banked
 35297  01913E  8997               	bsf	151,4,b	;volatile
 35298                           
 35299                           ;i2c2.c: 546: break;
 35300  019140  0012               	return	
 35301  019142                     i1l21528:
 35302                           
 35303                           ; BSR set to: 0
 35304                           ;i2c2.c: 549: case S_MASTER_SEND_STOP:;i2c2.c: 552: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
 35305  019142  0E00               	movlw	0
 35306  019144  EC33  F0DF         	call	_I2C2_Stop
 35307                           
 35308                           ;i2c2.c: 553: break;
 35309  019148  0012               	return	
 35310  01914A                     i1l21530:
 35311                           
 35312                           ; BSR set to: 0
 35313                           ;i2c2.c: 559: i2c2_object.i2cErrors++;
 35314  01914A  0101               	movlb	1	; () banked
 35315  01914C  2B67               	incf	(_i2c2_object+6)& (0+255),f,b
 35316                           
 35317                           ; BSR set to: 1
 35318                           ;i2c2.c: 560: I2C2_Stop(I2C2_LOST_STATE);
 35319  01914E  0E06               	movlw	6
 35320  019150  EC33  F0DF         	call	_I2C2_Stop
 35321                           
 35322                           ;i2c2.c: 561: break;
 35323  019154  0012               	return	
 35324  019156                     i1l21536:
 35325                           
 35326                           ; BSR set to: 14
 35327  019156  0100               	movlb	0	; () banked
 35328  019158  51DD               	movf	_i2c2_state& (0+255),w,b
 35329                           
 35330                           ; Switch size 1, requested type "simple"
 35331                           ; Number of cases is 11, Range of values is 0 to 11
 35332                           ; switch strategies available:
 35333                           ; Name         Instructions Cycles
 35334                           ; simple_byte           34    18 (average)
 35335                           ;	Chosen strategy is simple_byte
 35336  01915A  0A00               	xorlw	0	; case 0
 35337  01915C  B4D8               	btfsc	status,2,c
 35338  01915E  D701               	goto	i1l937
 35339  019160  0A01               	xorlw	1	; case 1
 35340  019162  B4D8               	btfsc	status,2,c
 35341  019164  D7B2               	goto	i1l963
 35342  019166  0A03               	xorlw	3	; case 2
 35343  019168  B4D8               	btfsc	status,2,c
 35344  01916A  D771               	goto	i1l21460
 35345  01916C  0A01               	xorlw	1	; case 3
 35346  01916E  B4D8               	btfsc	status,2,c
 35347  019170  D792               	goto	i1l959
 35348  019172  0A07               	xorlw	7	; case 4
 35349  019174  B4D8               	btfsc	status,2,c
 35350  019176  D7E5               	goto	i1l21528
 35351  019178  0A01               	xorlw	1	; case 5
 35352  01917A  B4D8               	btfsc	status,2,c
 35353  01917C  D7B4               	goto	i1l966
 35354  01917E  0A03               	xorlw	3	; case 6
 35355  019180  B4D8               	btfsc	status,2,c
 35356  019182  D7C1               	goto	i1l21510
 35357  019184  0A01               	xorlw	1	; case 7
 35358  019186  B4D8               	btfsc	status,2,c
 35359  019188  D7DC               	goto	i1l21528
 35360  01918A  0A0F               	xorlw	15	; case 8
 35361  01918C  B4D8               	btfsc	status,2,c
 35362  01918E  D7C0               	goto	i1l21514
 35363  019190  0A02               	xorlw	2	; case 10
 35364  019192  B4D8               	btfsc	status,2,c
 35365  019194  D71C               	goto	i1l943
 35366  019196  0A01               	xorlw	1	; case 11
 35367  019198  B4D8               	btfsc	status,2,c
 35368  01919A  D737               	goto	i1l948
 35369  01919C  D7D6               	goto	i1l21530
 35370  01919E                     __end_of_I2C2_ISR:
 35371                           	opt callstack 0
 35372                           
 35373 ;; *************** function _I2C2_Stop *****************
 35374 ;; Defined at:
 35375 ;;		line 584 in file "mcc_generated_files/i2c2.c"
 35376 ;; Parameters:    Size  Location     Type
 35377 ;;  completion_c    1    wreg     enum E9433
 35378 ;; Auto vars:     Size  Location     Type
 35379 ;;  completion_c    1    2[BANK1 ] enum E9433
 35380 ;; Return value:  Size  Location     Type
 35381 ;;                  1    wreg      void 
 35382 ;; Registers used:
 35383 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35384 ;; Tracked objects:
 35385 ;;		On entry : 0/0
 35386 ;;		On exit  : 0/0
 35387 ;;		Unchanged: 0/0
 35388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35390 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35391 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35392 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35393 ;;Total ram usage:        3 bytes
 35394 ;; Hardware stack levels used:    1
 35395 ;; Hardware stack levels required when called:    6
 35396 ;; This function calls:
 35397 ;;		Nothing
 35398 ;; This function is called by:
 35399 ;;		_I2C2_ISR
 35400 ;; This function uses a non-reentrant model
 35401 ;;
 35402                           
 35403                           	psect	text138
 35404  01BE66                     __ptext138:
 35405                           	opt callstack 0
 35406  01BE66                     _I2C2_Stop:
 35407                           	opt callstack 14
 35408                           
 35409                           ;incstack = 0
 35410                           ;I2C2_Stop@completion_code stored from wreg
 35411  01BE66  0101               	movlb	1	; () banked
 35412  01BE68  6F02               	movwf	I2C2_Stop@completion_code& (0+255),b
 35413                           
 35414                           ;i2c2.c: 587: SSP2CON2bits.PEN = 1;
 35415  01BE6A  010E               	movlb	14	; () banked
 35416  01BE6C  8597               	bsf	151,2,b	;volatile
 35417                           
 35418                           ; BSR set to: 14
 35419                           ;i2c2.c: 590: if (p_i2c2_current->pTrFlag != (0))
 35420  01BE6E  0100               	movlb	0	; () banked
 35421  01BE70  EE20 F003          	lfsr	2,3
 35422  01BE74  51D4               	movf	_p_i2c2_current& (0+255),w,b
 35423  01BE76  26D9               	addwf	fsr2l,f,c
 35424  01BE78  51D5               	movf	(_p_i2c2_current+1)& (0+255),w,b
 35425  01BE7A  22DA               	addwfc	fsr2h,f,c
 35426  01BE7C  50DE               	movf	postinc2,w,c
 35427  01BE7E  10DE               	iorwf	postinc2,w,c
 35428  01BE80  B4D8               	btfsc	status,2,c
 35429  01BE82  D010               	goto	i1l20896
 35430                           
 35431                           ; BSR set to: 0
 35432                           ;i2c2.c: 591: {;i2c2.c: 593: *(p_i2c2_current->pTrFlag) = completion_code;
 35433  01BE84  EE20 F003          	lfsr	2,3
 35434  01BE88  51D4               	movf	_p_i2c2_current& (0+255),w,b
 35435  01BE8A  26D9               	addwf	fsr2l,f,c
 35436  01BE8C  51D5               	movf	(_p_i2c2_current+1)& (0+255),w,b
 35437  01BE8E  22DA               	addwfc	fsr2h,f,c
 35438  01BE90  CFDE F100          	movff	postinc2,??_I2C2_Stop
 35439  01BE94  CFDD F101          	movff	postdec2,??_I2C2_Stop+1
 35440  01BE98  C100  FFD9         	movff	??_I2C2_Stop,fsr2l
 35441  01BE9C  C101  FFDA         	movff	??_I2C2_Stop+1,fsr2h
 35442  01BEA0  C102  FFDF         	movff	I2C2_Stop@completion_code,indf2
 35443  01BEA4                     i1l20896:
 35444                           
 35445                           ; BSR set to: 0
 35446                           ;i2c2.c: 594: };i2c2.c: 597: i2c2_state = S_MASTER_IDLE;
 35447  01BEA4  0E00               	movlw	0
 35448  01BEA6  6FDD               	movwf	_i2c2_state& (0+255),b
 35449                           
 35450                           ; BSR set to: 0
 35451  01BEA8  0012               	return		;funcret
 35452  01BEAA                     __end_of_I2C2_Stop:
 35453                           	opt callstack 0
 35454                           
 35455 ;; *************** function _I2C2_FunctionComplete *****************
 35456 ;; Defined at:
 35457 ;;		line 566 in file "mcc_generated_files/i2c2.c"
 35458 ;; Parameters:    Size  Location     Type
 35459 ;;		None
 35460 ;; Auto vars:     Size  Location     Type
 35461 ;;		None
 35462 ;; Return value:  Size  Location     Type
 35463 ;;                  1    wreg      void 
 35464 ;; Registers used:
 35465 ;;		wreg, status,2, status,0
 35466 ;; Tracked objects:
 35467 ;;		On entry : 0/0
 35468 ;;		On exit  : 0/0
 35469 ;;		Unchanged: 0/0
 35470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35475 ;;Total ram usage:        0 bytes
 35476 ;; Hardware stack levels used:    1
 35477 ;; Hardware stack levels required when called:    6
 35478 ;; This function calls:
 35479 ;;		Nothing
 35480 ;; This function is called by:
 35481 ;;		_I2C2_ISR
 35482 ;; This function uses a non-reentrant model
 35483 ;;
 35484                           
 35485                           	psect	text139
 35486  01C828                     __ptext139:
 35487                           	opt callstack 0
 35488  01C828                     _I2C2_FunctionComplete:
 35489                           	opt callstack 14
 35490                           
 35491                           ;i2c2.c: 570: p_i2c2_trb_current++;
 35492                           
 35493                           ; BSR set to: 0
 35494                           ;incstack = 0
 35495  01C828  0E05               	movlw	5
 35496  01C82A  0100               	movlb	0	; () banked
 35497  01C82C  27D6               	addwf	_p_i2c2_trb_current& (0+255),f,b
 35498  01C82E  0E00               	movlw	0
 35499  01C830  23D7               	addwfc	(_p_i2c2_trb_current+1)& (0+255),f,b
 35500                           
 35501                           ; BSR set to: 0
 35502                           ;i2c2.c: 573: if(--i2c2_trb_count == 0)
 35503  01C832  2FDC               	decfsz	_i2c2_trb_count& (0+255),f,b
 35504  01C834  D003               	goto	i1l20904
 35505                           
 35506                           ; BSR set to: 0
 35507                           ;i2c2.c: 574: {;i2c2.c: 575: i2c2_state = S_MASTER_SEND_STOP;
 35508  01C836  0E04               	movlw	4
 35509  01C838  6FDD               	movwf	_i2c2_state& (0+255),b
 35510                           
 35511                           ;i2c2.c: 576: }
 35512  01C83A  0012               	return	
 35513  01C83C                     i1l20904:
 35514                           
 35515                           ; BSR set to: 0
 35516                           ;i2c2.c: 577: else;i2c2.c: 578: {;i2c2.c: 579: i2c2_state = S_MASTER_RESTART;
 35517  01C83C  0E01               	movlw	1
 35518  01C83E  6FDD               	movwf	_i2c2_state& (0+255),b
 35519                           
 35520                           ; BSR set to: 0
 35521  01C840  0012               	return		;funcret
 35522  01C842                     __end_of_I2C2_FunctionComplete:
 35523                           	opt callstack 0
 35524                           
 35525 ;; *************** function _I2C2_BusCollisionISR *****************
 35526 ;; Defined at:
 35527 ;;		line 743 in file "mcc_generated_files/i2c2.c"
 35528 ;; Parameters:    Size  Location     Type
 35529 ;;		None
 35530 ;; Auto vars:     Size  Location     Type
 35531 ;;		None
 35532 ;; Return value:  Size  Location     Type
 35533 ;;                  1    wreg      void 
 35534 ;; Registers used:
 35535 ;;		wreg, status,2
 35536 ;; Tracked objects:
 35537 ;;		On entry : 0/0
 35538 ;;		On exit  : 0/0
 35539 ;;		Unchanged: 0/0
 35540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35545 ;;Total ram usage:        0 bytes
 35546 ;; Hardware stack levels used:    1
 35547 ;; Hardware stack levels required when called:    6
 35548 ;; This function calls:
 35549 ;;		Nothing
 35550 ;; This function is called by:
 35551 ;;		_INTERRUPT_InterruptManagerLow
 35552 ;; This function uses a non-reentrant model
 35553 ;;
 35554                           
 35555                           	psect	text140
 35556  01CA9A                     __ptext140:
 35557                           	opt callstack 0
 35558  01CA9A                     _I2C2_BusCollisionISR:
 35559                           	opt callstack 15
 35560                           
 35561                           ;i2c2.c: 746: PIR3bits.BCL2IF = 0;
 35562                           
 35563                           ; BSR set to: 0
 35564                           ;incstack = 0
 35565  01CA9A  010E               	movlb	14	; () banked
 35566  01CA9C  97CD               	bcf	205,3,b	;volatile
 35567                           
 35568                           ; BSR set to: 14
 35569                           ;i2c2.c: 747: error_handler.I2C_General_error_flag = 1;
 35570  01CA9E  0E01               	movlw	1
 35571  01CAA0  0100               	movlb	0	; () banked
 35572  01CAA2  6FBB               	movwf	(_error_handler+2)& (0+255),b
 35573                           
 35574                           ; BSR set to: 0
 35575  01CAA4  0012               	return		;funcret
 35576  01CAA6                     __end_of_I2C2_BusCollisionISR:
 35577                           	opt callstack 0
 35578                           
 35579 ;; *************** function _EUSART2_Transmit_ISR *****************
 35580 ;; Defined at:
 35581 ;;		line 187 in file "mcc_generated_files/eusart2.c"
 35582 ;; Parameters:    Size  Location     Type
 35583 ;;		None
 35584 ;; Auto vars:     Size  Location     Type
 35585 ;;		None
 35586 ;; Return value:  Size  Location     Type
 35587 ;;                  1    wreg      void 
 35588 ;; Registers used:
 35589 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35590 ;; Tracked objects:
 35591 ;;		On entry : 0/0
 35592 ;;		On exit  : 0/0
 35593 ;;		Unchanged: 0/0
 35594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35599 ;;Total ram usage:        0 bytes
 35600 ;; Hardware stack levels used:    1
 35601 ;; Hardware stack levels required when called:    6
 35602 ;; This function calls:
 35603 ;;		Nothing
 35604 ;; This function is called by:
 35605 ;;		_EUSART2_Initialize
 35606 ;;		_INTERRUPT_InterruptManagerLow
 35607 ;; This function uses a non-reentrant model
 35608 ;;
 35609                           
 35610                           	psect	text141
 35611  01C2D4                     __ptext141:
 35612                           	opt callstack 0
 35613  01C2D4                     _EUSART2_Transmit_ISR:
 35614                           	opt callstack 15
 35615                           
 35616                           ;eusart2.c: 191: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 35617                           
 35618                           ; BSR set to: 0
 35619                           ;incstack = 0
 35620  01C2D4  0E40               	movlw	64
 35621  01C2D6  0101               	movlb	1	; () banked
 35622  01C2D8  6190               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 35623  01C2DA  D012               	goto	i1l136
 35624                           
 35625                           ; BSR set to: 1
 35626                           ;eusart2.c: 192: {;eusart2.c: 193: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 35627  01C2DC  0EC0               	movlw	low _eusart2TxBuffer
 35628  01C2DE  2591               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
 35629  01C2E0  6ED9               	movwf	fsr2l,c
 35630  01C2E2  6ADA               	clrf	fsr2h,c
 35631  01C2E4  0E04               	movlw	high _eusart2TxBuffer
 35632  01C2E6  22DA               	addwfc	fsr2h,f,c
 35633  01C2E8  50DF               	movf	indf2,w,c
 35634  01C2EA  010E               	movlb	14	; () banked
 35635  01C2EC  6F9A               	movwf	154,b	;volatile
 35636                           
 35637                           ; BSR set to: 14
 35638  01C2EE  0101               	movlb	1	; () banked
 35639  01C2F0  2B91               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 35640                           
 35641                           ; BSR set to: 1
 35642                           ;eusart2.c: 194: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 35643  01C2F2  0E3F               	movlw	63
 35644  01C2F4  6591               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 35645  01C2F6  D002               	goto	i1l15626
 35646                           
 35647                           ; BSR set to: 1
 35648                           ;eusart2.c: 195: {;eusart2.c: 196: eusart2TxTail = 0;
 35649  01C2F8  0E00               	movlw	0
 35650  01C2FA  6F91               	movwf	_eusart2TxTail& (0+255),b	;volatile
 35651  01C2FC                     i1l15626:
 35652                           
 35653                           ; BSR set to: 1
 35654                           ;eusart2.c: 197: };eusart2.c: 198: eusart2TxBufferRemaining++;
 35655  01C2FC  2B90               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 35656                           
 35657                           ;eusart2.c: 199: }
 35658  01C2FE  0012               	return	
 35659  01C300                     i1l136:
 35660                           
 35661                           ; BSR set to: 1
 35662                           ;eusart2.c: 200: else;eusart2.c: 201: {;eusart2.c: 202: PIE3bits.TX2IE = 0;
 35663  01C300  010E               	movlb	14	; () banked
 35664  01C302  9DC5               	bcf	197,6,b	;volatile
 35665  01C304  0012               	return		;funcret
 35666  01C306                     __end_of_EUSART2_Transmit_ISR:
 35667                           	opt callstack 0
 35668                           
 35669 ;; *************** function _CCP2_CaptureISR *****************
 35670 ;; Defined at:
 35671 ;;		line 89 in file "mcc_generated_files/ccp2.c"
 35672 ;; Parameters:    Size  Location     Type
 35673 ;;		None
 35674 ;; Auto vars:     Size  Location     Type
 35675 ;;  module          2   86[BANK1 ] struct CCPR2Reg_tag
 35676 ;; Return value:  Size  Location     Type
 35677 ;;                  1    wreg      void 
 35678 ;; Registers used:
 35679 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 35680 ;; Tracked objects:
 35681 ;;		On entry : 0/0
 35682 ;;		On exit  : 0/0
 35683 ;;		Unchanged: 0/0
 35684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35686 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35688 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35689 ;;Total ram usage:        2 bytes
 35690 ;; Hardware stack levels used:    1
 35691 ;; Hardware stack levels required when called:    9
 35692 ;; This function calls:
 35693 ;;		_CCP2_CallBack
 35694 ;; This function is called by:
 35695 ;;		_INTERRUPT_InterruptManagerLow
 35696 ;; This function uses a non-reentrant model
 35697 ;;
 35698                           
 35699                           	psect	text142
 35700  01C842                     __ptext142:
 35701                           	opt callstack 0
 35702  01C842                     _CCP2_CaptureISR:
 35703                           	opt callstack 12
 35704                           
 35705                           ;ccp2.c: 92: CCP2_PERIOD_REG_T module;;ccp2.c: 95: PIR6bits.CCP2IF = 0;
 35706                           
 35707                           ;incstack = 0
 35708  01C842  010E               	movlb	14	; () banked
 35709  01C844  93D0               	bcf	208,1,b	;volatile
 35710                           
 35711                           ;ccp2.c: 98: module.ccpr2l = CCPR2L;
 35712  01C846  CFA6 F156          	movff	4006,CCP2_CaptureISR@module	;volatile
 35713                           
 35714                           ;ccp2.c: 99: module.ccpr2h = CCPR2H;
 35715  01C84A  CFA7 F157          	movff	4007,CCP2_CaptureISR@module+1	;volatile
 35716                           
 35717                           ; BSR set to: 14
 35718                           ;ccp2.c: 102: CCP2_CallBack(module.ccpr2_16Bit);
 35719  01C84E  C156  F154         	movff	CCP2_CaptureISR@module,CCP2_CallBack@capturedValue
 35720  01C852  C157  F155         	movff	CCP2_CaptureISR@module+1,CCP2_CallBack@capturedValue+1
 35721  01C856  ECB8  F0DF         	call	_CCP2_CallBack	;wreg free
 35722  01C85A  0012               	return		;funcret
 35723  01C85C                     __end_of_CCP2_CaptureISR:
 35724                           	opt callstack 0
 35725                           
 35726 ;; *************** function _CCP2_CallBack *****************
 35727 ;; Defined at:
 35728 ;;		line 105 in file "mcc_generated_files/ccp2.c"
 35729 ;; Parameters:    Size  Location     Type
 35730 ;;  capturedValu    2   84[BANK1 ] unsigned int 
 35731 ;; Auto vars:     Size  Location     Type
 35732 ;;		None
 35733 ;; Return value:  Size  Location     Type
 35734 ;;                  1    wreg      void 
 35735 ;; Registers used:
 35736 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 35737 ;; Tracked objects:
 35738 ;;		On entry : 0/0
 35739 ;;		On exit  : 0/0
 35740 ;;		Unchanged: 0/0
 35741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35742 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35745 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35746 ;;Total ram usage:        2 bytes
 35747 ;; Hardware stack levels used:    1
 35748 ;; Hardware stack levels required when called:    8
 35749 ;; This function calls:
 35750 ;;		_freqMeasConvert
 35751 ;; This function is called by:
 35752 ;;		_CCP2_CaptureISR
 35753 ;; This function uses a non-reentrant model
 35754 ;;
 35755                           
 35756                           	psect	text143
 35757  01BF70                     __ptext143:
 35758                           	opt callstack 0
 35759  01BF70                     _CCP2_CallBack:
 35760                           	opt callstack 12
 35761                           
 35762                           ;ccp2.c: 108: switch (QI_current_edge) {
 35763                           
 35764                           ;incstack = 0
 35765  01BF70  D016               	goto	i1l15136
 35766  01BF72                     i1l15126:
 35767                           
 35768                           ; BSR set to: 1
 35769                           ;ccp2.c: 113: TMR5H = 0;
 35770  01BF72  0E00               	movlw	0
 35771  01BF74  6EC2               	movwf	4034,c	;volatile
 35772                           
 35773                           ;ccp2.c: 114: TMR5L = 0;
 35774  01BF76  0E00               	movlw	0
 35775  01BF78  6EC1               	movwf	4033,c	;volatile
 35776                           
 35777                           ; BSR set to: 1
 35778                           ;ccp2.c: 115: T5CONbits.ON = 1;
 35779  01BF7A  80C3               	bsf	4035,0,c	;volatile
 35780                           
 35781                           ;ccp2.c: 118: QI_current_edge = qi_period_rising_2;
 35782  01BF7C  0E01               	movlw	1
 35783  01BF7E  6F8D               	movwf	_QI_current_edge& (0+255),b
 35784                           
 35785                           ;ccp2.c: 120: break;
 35786  01BF80  0012               	return	
 35787  01BF82                     i1l1069:
 35788                           
 35789                           ; BSR set to: 1
 35790                           ;ccp2.c: 125: T5CONbits.ON = 0;
 35791  01BF82  90C3               	bcf	4035,0,c	;volatile
 35792                           
 35793                           ;ccp2.c: 128: freq_meas_results.QI_Freq_Meas_Raw = capturedValue;
 35794  01BF84  C154  F16C         	movff	CCP2_CallBack@capturedValue,_freq_meas_results+4
 35795  01BF88  C155  F16D         	movff	CCP2_CallBack@capturedValue+1,_freq_meas_results+5
 35796                           
 35797                           ; BSR set to: 1
 35798                           ;ccp2.c: 131: TMR5H = 0;
 35799  01BF8C  0E00               	movlw	0
 35800  01BF8E  6EC2               	movwf	4034,c	;volatile
 35801                           
 35802                           ;ccp2.c: 132: TMR5L = 0;
 35803  01BF90  0E00               	movlw	0
 35804  01BF92  6EC1               	movwf	4033,c	;volatile
 35805                           
 35806                           ;ccp2.c: 134: QI_current_edge = qi_period_rising_1;
 35807  01BF94  0E00               	movlw	0
 35808  01BF96  6F8D               	movwf	_QI_current_edge& (0+255),b
 35809                           
 35810                           ; BSR set to: 1
 35811                           ;ccp2.c: 137: freqMeasConvert();
 35812  01BF98  EC9A  F0D4         	call	_freqMeasConvert	;wreg free
 35813                           
 35814                           ;ccp2.c: 139: break;
 35815  01BF9C  0012               	return	
 35816  01BF9E                     i1l15136:
 35817  01BF9E  0101               	movlb	1	; () banked
 35818  01BFA0  518D               	movf	_QI_current_edge& (0+255),w,b
 35819                           
 35820                           ; Switch size 1, requested type "simple"
 35821                           ; Number of cases is 2, Range of values is 0 to 1
 35822                           ; switch strategies available:
 35823                           ; Name         Instructions Cycles
 35824                           ; simple_byte            7     4 (average)
 35825                           ;	Chosen strategy is simple_byte
 35826  01BFA2  0A00               	xorlw	0	; case 0
 35827  01BFA4  B4D8               	btfsc	status,2,c
 35828  01BFA6  D7E5               	goto	i1l15126
 35829  01BFA8  0A01               	xorlw	1	; case 1
 35830  01BFAA  A4D8               	btfss	status,2,c
 35831  01BFAC  0012               	return	
 35832  01BFAE  D7E9               	goto	i1l1069
 35833  01BFB0                     __end_of_CCP2_CallBack:
 35834                           	opt callstack 0
 35835                           
 35836 ;; *************** function _freqMeasConvert *****************
 35837 ;; Defined at:
 35838 ;;		line 16 in file "freq_meas.c"
 35839 ;; Parameters:    Size  Location     Type
 35840 ;;		None
 35841 ;; Auto vars:     Size  Location     Type
 35842 ;;  qi_period       4   80[BANK1 ] void 
 35843 ;; Return value:  Size  Location     Type
 35844 ;;                  1    wreg      void 
 35845 ;; Registers used:
 35846 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 35847 ;; Tracked objects:
 35848 ;;		On entry : 0/0
 35849 ;;		On exit  : 0/0
 35850 ;;		Unchanged: 0/0
 35851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35853 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35855 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35856 ;;Total ram usage:        4 bytes
 35857 ;; Hardware stack levels used:    1
 35858 ;; Hardware stack levels required when called:    7
 35859 ;; This function calls:
 35860 ;;		i1___fladd
 35861 ;;		i1___fldiv
 35862 ;;		i1___flmul
 35863 ;;		i1___xxtofl
 35864 ;; This function is called by:
 35865 ;;		_CCP2_CallBack
 35866 ;; This function uses a non-reentrant model
 35867 ;;
 35868                           
 35869                           	psect	text144
 35870  01A934                     __ptext144:
 35871                           	opt callstack 0
 35872  01A934                     _freqMeasConvert:
 35873                           	opt callstack 12
 35874                           
 35875                           ;freq_meas.c: 19: double qi_period = ((((float) freq_meas_results.QI_Freq_Meas_Raw + 1) 
      +                          / 16.0) * 0.00000063);
 35876                           
 35877                           ;incstack = 0
 35878  01A934  0E00               	movlw	0
 35879  01A936  0101               	movlb	1	; () banked
 35880  01A938  6F22               	movwf	i1___fldiv@a& (0+255),b
 35881  01A93A  0E00               	movlw	0
 35882  01A93C  6F23               	movwf	(i1___fldiv@a+1)& (0+255),b
 35883  01A93E  0E80               	movlw	128
 35884  01A940  6F24               	movwf	(i1___fldiv@a+2)& (0+255),b
 35885  01A942  0E41               	movlw	65
 35886  01A944  6F25               	movwf	(i1___fldiv@a+3)& (0+255),b
 35887  01A946  0E00               	movlw	0
 35888  01A948  6F12               	movwf	i1___fladd@a& (0+255),b
 35889  01A94A  0E00               	movlw	0
 35890  01A94C  6F13               	movwf	(i1___fladd@a+1)& (0+255),b
 35891  01A94E  0E80               	movlw	128
 35892  01A950  6F14               	movwf	(i1___fladd@a+2)& (0+255),b
 35893  01A952  0E3F               	movlw	63
 35894  01A954  6F15               	movwf	(i1___fladd@a+3)& (0+255),b
 35895  01A956  C16C  F100         	movff	_freq_meas_results+4,i1___xxtofl@val
 35896  01A95A  C16D  F101         	movff	_freq_meas_results+5,i1___xxtofl@val+1
 35897  01A95E  6B02               	clrf	(i1___xxtofl@val+2)& (0+255),b
 35898  01A960  6B03               	clrf	(i1___xxtofl@val+3)& (0+255),b
 35899  01A962  0E00               	movlw	0
 35900  01A964  ECAA  F0CE         	call	i1___xxtofl
 35901  01A968  C100  F10E         	movff	?i1___xxtofl,i1___fladd@b
 35902  01A96C  C101  F10F         	movff	?i1___xxtofl+1,i1___fladd@b+1
 35903  01A970  C102  F110         	movff	?i1___xxtofl+2,i1___fladd@b+2
 35904  01A974  C103  F111         	movff	?i1___xxtofl+3,i1___fladd@b+3
 35905  01A978  EC80  F0BB         	call	i1___fladd	;wreg free
 35906  01A97C  C10E  F11E         	movff	?i1___fladd,i1___fldiv@b
 35907  01A980  C10F  F11F         	movff	?i1___fladd+1,i1___fldiv@b+1
 35908  01A984  C110  F120         	movff	?i1___fladd+2,i1___fldiv@b+2
 35909  01A988  C111  F121         	movff	?i1___fladd+3,i1___fldiv@b+3
 35910  01A98C  EC8B  F0C2         	call	i1___fldiv	;wreg free
 35911  01A990  C11E  F137         	movff	?i1___fldiv,i1___flmul@b
 35912  01A994  C11F  F138         	movff	?i1___fldiv+1,i1___flmul@b+1
 35913  01A998  C120  F139         	movff	?i1___fldiv+2,i1___flmul@b+2
 35914  01A99C  C121  F13A         	movff	?i1___fldiv+3,i1___flmul@b+3
 35915  01A9A0  0E45               	movlw	69
 35916  01A9A2  0101               	movlb	1	; () banked
 35917  01A9A4  6F3B               	movwf	i1___flmul@a& (0+255),b
 35918  01A9A6  0E1D               	movlw	29
 35919  01A9A8  6F3C               	movwf	(i1___flmul@a+1)& (0+255),b
 35920  01A9AA  0E29               	movlw	41
 35921  01A9AC  6F3D               	movwf	(i1___flmul@a+2)& (0+255),b
 35922  01A9AE  0E35               	movlw	53
 35923  01A9B0  6F3E               	movwf	(i1___flmul@a+3)& (0+255),b
 35924  01A9B2  ECA6  F0B6         	call	i1___flmul	;wreg free
 35925  01A9B6  C137  F150         	movff	?i1___flmul,freqMeasConvert@qi_period
 35926  01A9BA  C138  F151         	movff	?i1___flmul+1,freqMeasConvert@qi_period+1
 35927  01A9BE  C139  F152         	movff	?i1___flmul+2,freqMeasConvert@qi_period+2
 35928  01A9C2  C13A  F153         	movff	?i1___flmul+3,freqMeasConvert@qi_period+3
 35929                           
 35930                           ;freq_meas.c: 20: freq_meas_results.QI_Freq_Meas = 1.0 / qi_period;
 35931  01A9C6  0E00               	movlw	0
 35932  01A9C8  0101               	movlb	1	; () banked
 35933  01A9CA  6F1E               	movwf	i1___fldiv@b& (0+255),b
 35934  01A9CC  0E00               	movlw	0
 35935  01A9CE  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 35936  01A9D0  0E80               	movlw	128
 35937  01A9D2  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 35938  01A9D4  0E3F               	movlw	63
 35939  01A9D6  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 35940  01A9D8  C150  F122         	movff	freqMeasConvert@qi_period,i1___fldiv@a
 35941  01A9DC  C151  F123         	movff	freqMeasConvert@qi_period+1,i1___fldiv@a+1
 35942  01A9E0  C152  F124         	movff	freqMeasConvert@qi_period+2,i1___fldiv@a+2
 35943  01A9E4  C153  F125         	movff	freqMeasConvert@qi_period+3,i1___fldiv@a+3
 35944  01A9E8  EC8B  F0C2         	call	i1___fldiv	;wreg free
 35945  01A9EC  C11E  F168         	movff	?i1___fldiv,_freq_meas_results
 35946  01A9F0  C11F  F169         	movff	?i1___fldiv+1,_freq_meas_results+1
 35947  01A9F4  C120  F16A         	movff	?i1___fldiv+2,_freq_meas_results+2
 35948  01A9F8  C121  F16B         	movff	?i1___fldiv+3,_freq_meas_results+3
 35949  01A9FC  0012               	return		;funcret
 35950  01A9FE                     __end_of_freqMeasConvert:
 35951                           	opt callstack 0
 35952                           
 35953 ;; *************** function i1___xxtofl *****************
 35954 ;; Defined at:
 35955 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
 35956 ;; Parameters:    Size  Location     Type
 35957 ;;  sign            1    wreg     unsigned char 
 35958 ;;  val             4    0[BANK1 ] long 
 35959 ;; Auto vars:     Size  Location     Type
 35960 ;;  sign            1    8[BANK1 ] unsigned char 
 35961 ;;  __xxtofl        4   10[BANK1 ] unsigned long 
 35962 ;;  __xxtofl        1    9[BANK1 ] unsigned char 
 35963 ;; Return value:  Size  Location     Type
 35964 ;;                  4    0[BANK1 ] unsigned char 
 35965 ;; Registers used:
 35966 ;;		wreg, status,2, status,0
 35967 ;; Tracked objects:
 35968 ;;		On entry : 0/0
 35969 ;;		On exit  : 0/0
 35970 ;;		Unchanged: 0/0
 35971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35972 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35973 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35974 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35975 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35976 ;;Total ram usage:       14 bytes
 35977 ;; Hardware stack levels used:    1
 35978 ;; Hardware stack levels required when called:    6
 35979 ;; This function calls:
 35980 ;;		Nothing
 35981 ;; This function is called by:
 35982 ;;		_freqMeasConvert
 35983 ;; This function uses a non-reentrant model
 35984 ;;
 35985                           
 35986                           	psect	text145
 35987  019D54                     __ptext145:
 35988                           	opt callstack 0
 35989  019D54                     i1___xxtofl:
 35990                           	opt callstack 12
 35991                           
 35992                           ;incstack = 0
 35993                           ;i1___xxtofl@sign stored from wreg
 35994  019D54  0101               	movlb	1	; () banked
 35995  019D56  6F08               	movwf	i1___xxtofl@sign& (0+255),b
 35996  019D58  0101               	movlb	1	; () banked
 35997  019D5A  5108               	movf	i1___xxtofl@sign& (0+255),w,b
 35998  019D5C  A4D8               	btfss	status,2,c
 35999                           
 36000                           ; BSR set to: 1
 36001  019D5E  AF03               	btfss	(i1___xxtofl@val+3)& (0+255),7,b
 36002  019D60  D01A               	goto	i1l3332
 36003                           
 36004                           ; BSR set to: 1
 36005  019D62  C100  F104         	movff	i1___xxtofl@val,??i1___xxtofl
 36006  019D66  C101  F105         	movff	i1___xxtofl@val+1,??i1___xxtofl+1
 36007  019D6A  C102  F106         	movff	i1___xxtofl@val+2,??i1___xxtofl+2
 36008  019D6E  C103  F107         	movff	i1___xxtofl@val+3,??i1___xxtofl+3
 36009  019D72  1F04               	comf	??i1___xxtofl& (0+255),f,b
 36010  019D74  1F05               	comf	(??i1___xxtofl+1)& (0+255),f,b
 36011  019D76  1F06               	comf	(??i1___xxtofl+2)& (0+255),f,b
 36012  019D78  1F07               	comf	(??i1___xxtofl+3)& (0+255),f,b
 36013  019D7A  2B04               	incf	??i1___xxtofl& (0+255),f,b
 36014  019D7C  0E00               	movlw	0
 36015  019D7E  2305               	addwfc	(??i1___xxtofl+1)& (0+255),f,b
 36016  019D80  2306               	addwfc	(??i1___xxtofl+2)& (0+255),f,b
 36017  019D82  2307               	addwfc	(??i1___xxtofl+3)& (0+255),f,b
 36018  019D84  C104  F10A         	movff	??i1___xxtofl,i1___xxtofl@arg
 36019  019D88  C105  F10B         	movff	??i1___xxtofl+1,i1___xxtofl@arg+1
 36020  019D8C  C106  F10C         	movff	??i1___xxtofl+2,i1___xxtofl@arg+2
 36021  019D90  C107  F10D         	movff	??i1___xxtofl+3,i1___xxtofl@arg+3
 36022  019D94  D008               	goto	i1l13754
 36023  019D96                     i1l3332:
 36024                           
 36025                           ; BSR set to: 1
 36026  019D96  C100  F10A         	movff	i1___xxtofl@val,i1___xxtofl@arg
 36027  019D9A  C101  F10B         	movff	i1___xxtofl@val+1,i1___xxtofl@arg+1
 36028  019D9E  C102  F10C         	movff	i1___xxtofl@val+2,i1___xxtofl@arg+2
 36029  019DA2  C103  F10D         	movff	i1___xxtofl@val+3,i1___xxtofl@arg+3
 36030  019DA6                     i1l13754:
 36031                           
 36032                           ; BSR set to: 1
 36033  019DA6  5100               	movf	i1___xxtofl@val& (0+255),w,b
 36034  019DA8  1101               	iorwf	(i1___xxtofl@val+1)& (0+255),w,b
 36035  019DAA  1102               	iorwf	(i1___xxtofl@val+2)& (0+255),w,b
 36036  019DAC  1103               	iorwf	(i1___xxtofl@val+3)& (0+255),w,b
 36037  019DAE  A4D8               	btfss	status,2,c
 36038  019DB0  D009               	goto	i1l13760
 36039                           
 36040                           ; BSR set to: 1
 36041  019DB2  0E00               	movlw	0
 36042  019DB4  6F00               	movwf	?i1___xxtofl& (0+255),b
 36043  019DB6  0E00               	movlw	0
 36044  019DB8  6F01               	movwf	(?i1___xxtofl+1)& (0+255),b
 36045  019DBA  0E00               	movlw	0
 36046  019DBC  6F02               	movwf	(?i1___xxtofl+2)& (0+255),b
 36047  019DBE  0E00               	movlw	0
 36048  019DC0  6F03               	movwf	(?i1___xxtofl+3)& (0+255),b
 36049  019DC2  0012               	return	
 36050  019DC4                     i1l13760:
 36051                           
 36052                           ; BSR set to: 1
 36053  019DC4  0E96               	movlw	150
 36054  019DC6  6F09               	movwf	i1___xxtofl@exp& (0+255),b
 36055  019DC8  D006               	goto	i1l13764
 36056  019DCA                     i1l13762:
 36057                           
 36058                           ; BSR set to: 1
 36059  019DCA  2B09               	incf	i1___xxtofl@exp& (0+255),f,b
 36060  019DCC  90D8               	bcf	status,0,c
 36061  019DCE  330D               	rrcf	(i1___xxtofl@arg+3)& (0+255),f,b
 36062  019DD0  330C               	rrcf	(i1___xxtofl@arg+2)& (0+255),f,b
 36063  019DD2  330B               	rrcf	(i1___xxtofl@arg+1)& (0+255),f,b
 36064  019DD4  330A               	rrcf	i1___xxtofl@arg& (0+255),f,b
 36065  019DD6                     i1l13764:
 36066                           
 36067                           ; BSR set to: 1
 36068  019DD6  0E00               	movlw	0
 36069  019DD8  150A               	andwf	i1___xxtofl@arg& (0+255),w,b
 36070  019DDA  6F04               	movwf	??i1___xxtofl& (0+255),b
 36071  019DDC  0E00               	movlw	0
 36072  019DDE  150B               	andwf	(i1___xxtofl@arg+1)& (0+255),w,b
 36073  019DE0  6F05               	movwf	(??i1___xxtofl+1)& (0+255),b
 36074  019DE2  0E00               	movlw	0
 36075  019DE4  150C               	andwf	(i1___xxtofl@arg+2)& (0+255),w,b
 36076  019DE6  6F06               	movwf	(??i1___xxtofl+2)& (0+255),b
 36077  019DE8  0EFE               	movlw	254
 36078  019DEA  150D               	andwf	(i1___xxtofl@arg+3)& (0+255),w,b
 36079  019DEC  6F07               	movwf	(??i1___xxtofl+3)& (0+255),b
 36080  019DEE  5104               	movf	??i1___xxtofl& (0+255),w,b
 36081  019DF0  1105               	iorwf	(??i1___xxtofl+1)& (0+255),w,b
 36082  019DF2  1106               	iorwf	(??i1___xxtofl+2)& (0+255),w,b
 36083  019DF4  1107               	iorwf	(??i1___xxtofl+3)& (0+255),w,b
 36084  019DF6  B4D8               	btfsc	status,2,c
 36085  019DF8  D00D               	goto	i1l3339
 36086  019DFA  D7E7               	goto	i1l13762
 36087  019DFC                     i1l13766:
 36088                           
 36089                           ; BSR set to: 1
 36090  019DFC  2B09               	incf	i1___xxtofl@exp& (0+255),f,b
 36091                           
 36092                           ; BSR set to: 1
 36093  019DFE  0E01               	movlw	1
 36094  019E00  270A               	addwf	i1___xxtofl@arg& (0+255),f,b
 36095  019E02  0E00               	movlw	0
 36096  019E04  230B               	addwfc	(i1___xxtofl@arg+1)& (0+255),f,b
 36097  019E06  230C               	addwfc	(i1___xxtofl@arg+2)& (0+255),f,b
 36098  019E08  230D               	addwfc	(i1___xxtofl@arg+3)& (0+255),f,b
 36099                           
 36100                           ; BSR set to: 1
 36101  019E0A  90D8               	bcf	status,0,c
 36102  019E0C  330D               	rrcf	(i1___xxtofl@arg+3)& (0+255),f,b
 36103  019E0E  330C               	rrcf	(i1___xxtofl@arg+2)& (0+255),f,b
 36104  019E10  330B               	rrcf	(i1___xxtofl@arg+1)& (0+255),f,b
 36105  019E12  330A               	rrcf	i1___xxtofl@arg& (0+255),f,b
 36106  019E14                     i1l3339:
 36107                           
 36108                           ; BSR set to: 1
 36109  019E14  0E00               	movlw	0
 36110  019E16  150A               	andwf	i1___xxtofl@arg& (0+255),w,b
 36111  019E18  6F04               	movwf	??i1___xxtofl& (0+255),b
 36112  019E1A  0E00               	movlw	0
 36113  019E1C  150B               	andwf	(i1___xxtofl@arg+1)& (0+255),w,b
 36114  019E1E  6F05               	movwf	(??i1___xxtofl+1)& (0+255),b
 36115  019E20  0E00               	movlw	0
 36116  019E22  150C               	andwf	(i1___xxtofl@arg+2)& (0+255),w,b
 36117  019E24  6F06               	movwf	(??i1___xxtofl+2)& (0+255),b
 36118  019E26  0EFF               	movlw	255
 36119  019E28  150D               	andwf	(i1___xxtofl@arg+3)& (0+255),w,b
 36120  019E2A  6F07               	movwf	(??i1___xxtofl+3)& (0+255),b
 36121  019E2C  5104               	movf	??i1___xxtofl& (0+255),w,b
 36122  019E2E  1105               	iorwf	(??i1___xxtofl+1)& (0+255),w,b
 36123  019E30  1106               	iorwf	(??i1___xxtofl+2)& (0+255),w,b
 36124  019E32  1107               	iorwf	(??i1___xxtofl+3)& (0+255),w,b
 36125  019E34  B4D8               	btfsc	status,2,c
 36126  019E36  D007               	goto	i1l13774
 36127  019E38  D7E1               	goto	i1l13766
 36128  019E3A                     i1l13772:
 36129                           
 36130                           ; BSR set to: 1
 36131  019E3A  0709               	decf	i1___xxtofl@exp& (0+255),f,b
 36132  019E3C  90D8               	bcf	status,0,c
 36133  019E3E  370A               	rlcf	i1___xxtofl@arg& (0+255),f,b
 36134  019E40  370B               	rlcf	(i1___xxtofl@arg+1)& (0+255),f,b
 36135  019E42  370C               	rlcf	(i1___xxtofl@arg+2)& (0+255),f,b
 36136  019E44  370D               	rlcf	(i1___xxtofl@arg+3)& (0+255),f,b
 36137  019E46                     i1l13774:
 36138                           
 36139                           ; BSR set to: 1
 36140  019E46  BF0C               	btfsc	(i1___xxtofl@arg+2)& (0+255),7,b
 36141  019E48  D003               	goto	i1u1593_20
 36142                           
 36143                           ; BSR set to: 1
 36144  019E4A  0E02               	movlw	2
 36145  019E4C  6109               	cpfslt	i1___xxtofl@exp& (0+255),b
 36146  019E4E  D7F5               	goto	i1l13772
 36147  019E50                     i1u1593_20:
 36148                           
 36149                           ; BSR set to: 1
 36150  019E50  A109               	btfss	i1___xxtofl@exp& (0+255),0,b
 36151                           
 36152                           ; BSR set to: 1
 36153  019E52  9F0C               	bcf	(i1___xxtofl@arg+2)& (0+255),7,b
 36154                           
 36155                           ; BSR set to: 1
 36156  019E54  90D8               	bcf	status,0,c
 36157  019E56  3309               	rrcf	i1___xxtofl@exp& (0+255),f,b
 36158                           
 36159                           ; BSR set to: 1
 36160  019E58  C109  F104         	movff	i1___xxtofl@exp,??i1___xxtofl
 36161  019E5C  6B05               	clrf	(??i1___xxtofl+1)& (0+255),b
 36162  019E5E  6B06               	clrf	(??i1___xxtofl+2)& (0+255),b
 36163  019E60  6B07               	clrf	(??i1___xxtofl+3)& (0+255),b
 36164  019E62  C104  F107         	movff	??i1___xxtofl,??i1___xxtofl+3
 36165  019E66  6B06               	clrf	(??i1___xxtofl+2)& (0+255),b
 36166  019E68  6B05               	clrf	(??i1___xxtofl+1)& (0+255),b
 36167  019E6A  6B04               	clrf	??i1___xxtofl& (0+255),b
 36168  019E6C  5104               	movf	??i1___xxtofl& (0+255),w,b
 36169  019E6E  130A               	iorwf	i1___xxtofl@arg& (0+255),f,b
 36170  019E70  5105               	movf	(??i1___xxtofl+1)& (0+255),w,b
 36171  019E72  130B               	iorwf	(i1___xxtofl@arg+1)& (0+255),f,b
 36172  019E74  5106               	movf	(??i1___xxtofl+2)& (0+255),w,b
 36173  019E76  130C               	iorwf	(i1___xxtofl@arg+2)& (0+255),f,b
 36174  019E78  5107               	movf	(??i1___xxtofl+3)& (0+255),w,b
 36175  019E7A  130D               	iorwf	(i1___xxtofl@arg+3)& (0+255),f,b
 36176                           
 36177                           ; BSR set to: 1
 36178  019E7C  5108               	movf	i1___xxtofl@sign& (0+255),w,b
 36179  019E7E  A4D8               	btfss	status,2,c
 36180                           
 36181                           ; BSR set to: 1
 36182  019E80  AF03               	btfss	(i1___xxtofl@val+3)& (0+255),7,b
 36183  019E82  D001               	goto	i1l13790
 36184                           
 36185                           ; BSR set to: 1
 36186  019E84  8F0D               	bsf	(i1___xxtofl@arg+3)& (0+255),7,b
 36187  019E86                     i1l13790:
 36188                           
 36189                           ; BSR set to: 1
 36190  019E86  C10A  F100         	movff	i1___xxtofl@arg,?i1___xxtofl
 36191  019E8A  C10B  F101         	movff	i1___xxtofl@arg+1,?i1___xxtofl+1
 36192  019E8E  C10C  F102         	movff	i1___xxtofl@arg+2,?i1___xxtofl+2
 36193  019E92  C10D  F103         	movff	i1___xxtofl@arg+3,?i1___xxtofl+3
 36194                           
 36195                           ; BSR set to: 1
 36196  019E96  0012               	return		;funcret
 36197  019E98                     __end_ofi1___xxtofl:
 36198                           	opt callstack 0
 36199                           
 36200 ;; *************** function i1___flmul *****************
 36201 ;; Defined at:
 36202 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
 36203 ;; Parameters:    Size  Location     Type
 36204 ;;  b               4   55[BANK1 ] unsigned char 
 36205 ;;  a               4   59[BANK1 ] unsigned char 
 36206 ;; Auto vars:     Size  Location     Type
 36207 ;;  __flmul         4   74[BANK1 ] struct .
 36208 ;;  __flmul         4   68[BANK1 ] unsigned long 
 36209 ;;  __flmul         2   78[BANK1 ] struct .
 36210 ;;  __flmul         1   73[BANK1 ] unsigned char 
 36211 ;;  __flmul         1   72[BANK1 ] unsigned char 
 36212 ;;  __flmul         1   67[BANK1 ] unsigned char 
 36213 ;; Return value:  Size  Location     Type
 36214 ;;                  4   55[BANK1 ] unsigned char 
 36215 ;; Registers used:
 36216 ;;		wreg, status,2, status,0, prodl, prodh
 36217 ;; Tracked objects:
 36218 ;;		On entry : 0/0
 36219 ;;		On exit  : 0/0
 36220 ;;		Unchanged: 0/0
 36221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36222 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36223 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36224 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36225 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36226 ;;Total ram usage:       25 bytes
 36227 ;; Hardware stack levels used:    1
 36228 ;; Hardware stack levels required when called:    6
 36229 ;; This function calls:
 36230 ;;		Nothing
 36231 ;; This function is called by:
 36232 ;;		_freqMeasConvert
 36233 ;; This function uses a non-reentrant model
 36234 ;;
 36235                           
 36236                           	psect	text146
 36237  016D4C                     __ptext146:
 36238                           	opt callstack 0
 36239  016D4C                     i1___flmul:
 36240                           	opt callstack 12
 36241                           
 36242                           ; BSR set to: 1
 36243                           ;incstack = 0
 36244  016D4C  0101               	movlb	1	; () banked
 36245  016D4E  513A               	movf	(i1___flmul@b+3)& (0+255),w,b
 36246  016D50  0B80               	andlw	128
 36247  016D52  6F43               	movwf	i1___flmul@sign& (0+255),b
 36248  016D54  513A               	movf	(i1___flmul@b+3)& (0+255),w,b
 36249  016D56  253A               	addwf	(i1___flmul@b+3)& (0+255),w,b
 36250  016D58  6F49               	movwf	i1___flmul@bexp& (0+255),b
 36251                           
 36252                           ; BSR set to: 1
 36253  016D5A  BF39               	btfsc	(i1___flmul@b+2)& (0+255),7,b
 36254                           
 36255                           ; BSR set to: 1
 36256  016D5C  8149               	bsf	i1___flmul@bexp& (0+255),0,b
 36257                           
 36258                           ; BSR set to: 1
 36259  016D5E  5149               	movf	i1___flmul@bexp& (0+255),w,b
 36260  016D60  B4D8               	btfsc	status,2,c
 36261  016D62  D00D               	goto	i1l13632
 36262                           
 36263                           ; BSR set to: 1
 36264  016D64  2949               	incf	i1___flmul@bexp& (0+255),w,b
 36265  016D66  A4D8               	btfss	status,2,c
 36266  016D68  D008               	goto	i1l13630
 36267                           
 36268                           ; BSR set to: 1
 36269  016D6A  0E00               	movlw	0
 36270  016D6C  6F37               	movwf	i1___flmul@b& (0+255),b
 36271  016D6E  0E00               	movlw	0
 36272  016D70  6F38               	movwf	(i1___flmul@b+1)& (0+255),b
 36273  016D72  0E00               	movlw	0
 36274  016D74  6F39               	movwf	(i1___flmul@b+2)& (0+255),b
 36275  016D76  0E00               	movlw	0
 36276  016D78  6F3A               	movwf	(i1___flmul@b+3)& (0+255),b
 36277  016D7A                     i1l13630:
 36278                           
 36279                           ; BSR set to: 1
 36280  016D7A  8F39               	bsf	(i1___flmul@b+2)& (0+255),7,b
 36281  016D7C  D008               	goto	i1l13634
 36282  016D7E                     i1l13632:
 36283                           
 36284                           ; BSR set to: 1
 36285  016D7E  0E00               	movlw	0
 36286  016D80  6F37               	movwf	i1___flmul@b& (0+255),b
 36287  016D82  0E00               	movlw	0
 36288  016D84  6F38               	movwf	(i1___flmul@b+1)& (0+255),b
 36289  016D86  0E00               	movlw	0
 36290  016D88  6F39               	movwf	(i1___flmul@b+2)& (0+255),b
 36291  016D8A  0E00               	movlw	0
 36292  016D8C  6F3A               	movwf	(i1___flmul@b+3)& (0+255),b
 36293  016D8E                     i1l13634:
 36294                           
 36295                           ; BSR set to: 1
 36296  016D8E  513E               	movf	(i1___flmul@a+3)& (0+255),w,b
 36297  016D90  0B80               	andlw	128
 36298  016D92  1B43               	xorwf	i1___flmul@sign& (0+255),f,b
 36299                           
 36300                           ; BSR set to: 1
 36301  016D94  513E               	movf	(i1___flmul@a+3)& (0+255),w,b
 36302  016D96  253E               	addwf	(i1___flmul@a+3)& (0+255),w,b
 36303  016D98  6F48               	movwf	i1___flmul@aexp& (0+255),b
 36304                           
 36305                           ; BSR set to: 1
 36306  016D9A  BF3D               	btfsc	(i1___flmul@a+2)& (0+255),7,b
 36307                           
 36308                           ; BSR set to: 1
 36309  016D9C  8148               	bsf	i1___flmul@aexp& (0+255),0,b
 36310                           
 36311                           ; BSR set to: 1
 36312  016D9E  5148               	movf	i1___flmul@aexp& (0+255),w,b
 36313  016DA0  B4D8               	btfsc	status,2,c
 36314  016DA2  D00D               	goto	i1l13650
 36315                           
 36316                           ; BSR set to: 1
 36317  016DA4  2948               	incf	i1___flmul@aexp& (0+255),w,b
 36318  016DA6  A4D8               	btfss	status,2,c
 36319  016DA8  D008               	goto	i1l13648
 36320                           
 36321                           ; BSR set to: 1
 36322  016DAA  0E00               	movlw	0
 36323  016DAC  6F3B               	movwf	i1___flmul@a& (0+255),b
 36324  016DAE  0E00               	movlw	0
 36325  016DB0  6F3C               	movwf	(i1___flmul@a+1)& (0+255),b
 36326  016DB2  0E00               	movlw	0
 36327  016DB4  6F3D               	movwf	(i1___flmul@a+2)& (0+255),b
 36328  016DB6  0E00               	movlw	0
 36329  016DB8  6F3E               	movwf	(i1___flmul@a+3)& (0+255),b
 36330  016DBA                     i1l13648:
 36331                           
 36332                           ; BSR set to: 1
 36333  016DBA  8F3D               	bsf	(i1___flmul@a+2)& (0+255),7,b
 36334  016DBC  D008               	goto	i1l3291
 36335  016DBE                     i1l13650:
 36336                           
 36337                           ; BSR set to: 1
 36338  016DBE  0E00               	movlw	0
 36339  016DC0  6F3B               	movwf	i1___flmul@a& (0+255),b
 36340  016DC2  0E00               	movlw	0
 36341  016DC4  6F3C               	movwf	(i1___flmul@a+1)& (0+255),b
 36342  016DC6  0E00               	movlw	0
 36343  016DC8  6F3D               	movwf	(i1___flmul@a+2)& (0+255),b
 36344  016DCA  0E00               	movlw	0
 36345  016DCC  6F3E               	movwf	(i1___flmul@a+3)& (0+255),b
 36346  016DCE                     i1l3291:
 36347                           
 36348                           ; BSR set to: 1
 36349  016DCE  5148               	movf	i1___flmul@aexp& (0+255),w,b
 36350  016DD0  B4D8               	btfsc	status,2,c
 36351  016DD2  D003               	goto	i1u1575_20
 36352                           
 36353                           ; BSR set to: 1
 36354  016DD4  5149               	movf	i1___flmul@bexp& (0+255),w,b
 36355  016DD6  A4D8               	btfss	status,2,c
 36356  016DD8  D009               	goto	i1l13658
 36357  016DDA                     i1u1575_20:
 36358                           
 36359                           ; BSR set to: 1
 36360  016DDA  0E00               	movlw	0
 36361  016DDC  6F37               	movwf	?i1___flmul& (0+255),b
 36362  016DDE  0E00               	movlw	0
 36363  016DE0  6F38               	movwf	(?i1___flmul+1)& (0+255),b
 36364  016DE2  0E00               	movlw	0
 36365  016DE4  6F39               	movwf	(?i1___flmul+2)& (0+255),b
 36366  016DE6  0E00               	movlw	0
 36367  016DE8  6F3A               	movwf	(?i1___flmul+3)& (0+255),b
 36368  016DEA  0012               	return	
 36369  016DEC                     i1l13658:
 36370                           
 36371                           ; BSR set to: 1
 36372  016DEC  513D               	movf	(i1___flmul@a+2)& (0+255),w,b
 36373  016DEE  0337               	mulwf	i1___flmul@b& (0+255),b
 36374  016DF0  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36375  016DF4  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36376                           
 36377                           ; BSR set to: 1
 36378  016DF8  514E               	movf	i1___flmul@temp& (0+255),w,b
 36379  016DFA  6F44               	movwf	i1___flmul@grs& (0+255),b
 36380  016DFC  6B45               	clrf	(i1___flmul@grs+1)& (0+255),b
 36381  016DFE  6B46               	clrf	(i1___flmul@grs+2)& (0+255),b
 36382  016E00  6B47               	clrf	(i1___flmul@grs+3)& (0+255),b
 36383                           
 36384                           ; BSR set to: 1
 36385  016E02  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36386  016E04  6F4A               	movwf	i1___flmul@prod& (0+255),b
 36387  016E06  6B4B               	clrf	(i1___flmul@prod+1)& (0+255),b
 36388  016E08  6B4C               	clrf	(i1___flmul@prod+2)& (0+255),b
 36389  016E0A  6B4D               	clrf	(i1___flmul@prod+3)& (0+255),b
 36390  016E0C  513C               	movf	(i1___flmul@a+1)& (0+255),w,b
 36391  016E0E  0338               	mulwf	(i1___flmul@b+1)& (0+255),b
 36392  016E10  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36393  016E14  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36394                           
 36395                           ; BSR set to: 1
 36396  016E18  514E               	movf	i1___flmul@temp& (0+255),w,b
 36397  016E1A  2744               	addwf	i1___flmul@grs& (0+255),f,b
 36398  016E1C  0E00               	movlw	0
 36399  016E1E  2345               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 36400  016E20  2346               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 36401  016E22  2347               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 36402                           
 36403                           ; BSR set to: 1
 36404  016E24  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36405  016E26  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36406  016E28  0E00               	movlw	0
 36407  016E2A  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36408  016E2C  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36409  016E2E  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36410  016E30  513B               	movf	i1___flmul@a& (0+255),w,b
 36411  016E32  0339               	mulwf	(i1___flmul@b+2)& (0+255),b
 36412  016E34  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36413  016E38  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36414                           
 36415                           ; BSR set to: 1
 36416  016E3C  514E               	movf	i1___flmul@temp& (0+255),w,b
 36417  016E3E  2744               	addwf	i1___flmul@grs& (0+255),f,b
 36418  016E40  0E00               	movlw	0
 36419  016E42  2345               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 36420  016E44  2346               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 36421  016E46  2347               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 36422                           
 36423                           ; BSR set to: 1
 36424  016E48  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36425  016E4A  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36426  016E4C  0E00               	movlw	0
 36427  016E4E  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36428  016E50  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36429  016E52  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36430                           
 36431                           ; BSR set to: 1
 36432  016E54  C146  F147         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 36433  016E58  C145  F146         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 36434  016E5C  C144  F145         	movff	i1___flmul@grs,i1___flmul@grs+1
 36435  016E60  6B44               	clrf	i1___flmul@grs& (0+255),b
 36436                           
 36437                           ; BSR set to: 1
 36438  016E62  513B               	movf	i1___flmul@a& (0+255),w,b
 36439  016E64  0338               	mulwf	(i1___flmul@b+1)& (0+255),b
 36440  016E66  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36441  016E6A  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36442                           
 36443                           ; BSR set to: 1
 36444  016E6E  514E               	movf	i1___flmul@temp& (0+255),w,b
 36445  016E70  2744               	addwf	i1___flmul@grs& (0+255),f,b
 36446  016E72  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36447  016E74  2345               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 36448  016E76  0E00               	movlw	0
 36449  016E78  2346               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 36450  016E7A  0E00               	movlw	0
 36451  016E7C  2347               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 36452                           
 36453                           ; BSR set to: 1
 36454  016E7E  513C               	movf	(i1___flmul@a+1)& (0+255),w,b
 36455  016E80  0337               	mulwf	i1___flmul@b& (0+255),b
 36456  016E82  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36457  016E86  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36458                           
 36459                           ; BSR set to: 1
 36460  016E8A  514E               	movf	i1___flmul@temp& (0+255),w,b
 36461  016E8C  2744               	addwf	i1___flmul@grs& (0+255),f,b
 36462  016E8E  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36463  016E90  2345               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 36464  016E92  0E00               	movlw	0
 36465  016E94  2346               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 36466  016E96  0E00               	movlw	0
 36467  016E98  2347               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 36468                           
 36469                           ; BSR set to: 1
 36470  016E9A  C146  F147         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 36471  016E9E  C145  F146         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 36472  016EA2  C144  F145         	movff	i1___flmul@grs,i1___flmul@grs+1
 36473  016EA6  6B44               	clrf	i1___flmul@grs& (0+255),b
 36474  016EA8  513B               	movf	i1___flmul@a& (0+255),w,b
 36475  016EAA  0337               	mulwf	i1___flmul@b& (0+255),b
 36476  016EAC  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36477  016EB0  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36478                           
 36479                           ; BSR set to: 1
 36480  016EB4  514E               	movf	i1___flmul@temp& (0+255),w,b
 36481  016EB6  2744               	addwf	i1___flmul@grs& (0+255),f,b
 36482  016EB8  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36483  016EBA  2345               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 36484  016EBC  0E00               	movlw	0
 36485  016EBE  2346               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 36486  016EC0  0E00               	movlw	0
 36487  016EC2  2347               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 36488                           
 36489                           ; BSR set to: 1
 36490  016EC4  513D               	movf	(i1___flmul@a+2)& (0+255),w,b
 36491  016EC6  0338               	mulwf	(i1___flmul@b+1)& (0+255),b
 36492  016EC8  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36493  016ECC  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36494  016ED0  514E               	movf	i1___flmul@temp& (0+255),w,b
 36495  016ED2  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36496  016ED4  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36497  016ED6  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36498  016ED8  0E00               	movlw	0
 36499  016EDA  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36500  016EDC  0E00               	movlw	0
 36501  016EDE  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36502                           
 36503                           ; BSR set to: 1
 36504  016EE0  513C               	movf	(i1___flmul@a+1)& (0+255),w,b
 36505  016EE2  0339               	mulwf	(i1___flmul@b+2)& (0+255),b
 36506  016EE4  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36507  016EE8  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36508                           
 36509                           ; BSR set to: 1
 36510  016EEC  514E               	movf	i1___flmul@temp& (0+255),w,b
 36511  016EEE  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36512  016EF0  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36513  016EF2  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36514  016EF4  0E00               	movlw	0
 36515  016EF6  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36516  016EF8  0E00               	movlw	0
 36517  016EFA  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36518  016EFC  513D               	movf	(i1___flmul@a+2)& (0+255),w,b
 36519  016EFE  0339               	mulwf	(i1___flmul@b+2)& (0+255),b
 36520  016F00  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36521  016F04  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36522                           
 36523                           ; BSR set to: 1
 36524  016F08  514E               	movf	i1___flmul@temp& (0+255),w,b
 36525  016F0A  6F3F               	movwf	??i1___flmul& (0+255),b
 36526  016F0C  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36527  016F0E  6F40               	movwf	(??i1___flmul+1)& (0+255),b
 36528  016F10  6B41               	clrf	(??i1___flmul+2)& (0+255),b
 36529  016F12  6B42               	clrf	(??i1___flmul+3)& (0+255),b
 36530  016F14  C141  F142         	movff	??i1___flmul+2,??i1___flmul+3
 36531  016F18  C140  F141         	movff	??i1___flmul+1,??i1___flmul+2
 36532  016F1C  C13F  F140         	movff	??i1___flmul,??i1___flmul+1
 36533  016F20  6B3F               	clrf	??i1___flmul& (0+255),b
 36534  016F22  513F               	movf	??i1___flmul& (0+255),w,b
 36535  016F24  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36536  016F26  5140               	movf	(??i1___flmul+1)& (0+255),w,b
 36537  016F28  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36538  016F2A  5141               	movf	(??i1___flmul+2)& (0+255),w,b
 36539  016F2C  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36540  016F2E  5142               	movf	(??i1___flmul+3)& (0+255),w,b
 36541  016F30  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36542                           
 36543                           ; BSR set to: 1
 36544  016F32  C144  F13F         	movff	i1___flmul@grs,??i1___flmul
 36545  016F36  C145  F140         	movff	i1___flmul@grs+1,??i1___flmul+1
 36546  016F3A  C146  F141         	movff	i1___flmul@grs+2,??i1___flmul+2
 36547  016F3E  C147  F142         	movff	i1___flmul@grs+3,??i1___flmul+3
 36548  016F42  0E19               	movlw	25
 36549  016F44  D005               	goto	i1u1576_20
 36550  016F46                     i1u1576_25:
 36551  016F46  90D8               	bcf	status,0,c
 36552  016F48  3342               	rrcf	(??i1___flmul+3)& (0+255),f,b
 36553  016F4A  3341               	rrcf	(??i1___flmul+2)& (0+255),f,b
 36554  016F4C  3340               	rrcf	(??i1___flmul+1)& (0+255),f,b
 36555  016F4E  333F               	rrcf	??i1___flmul& (0+255),f,b
 36556  016F50                     i1u1576_20:
 36557  016F50  2EE8               	decfsz	wreg,f,c
 36558  016F52  D7F9               	goto	i1u1576_25
 36559  016F54  513F               	movf	??i1___flmul& (0+255),w,b
 36560  016F56  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36561  016F58  5140               	movf	(??i1___flmul+1)& (0+255),w,b
 36562  016F5A  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36563  016F5C  5141               	movf	(??i1___flmul+2)& (0+255),w,b
 36564  016F5E  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36565  016F60  5142               	movf	(??i1___flmul+3)& (0+255),w,b
 36566  016F62  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36567                           
 36568                           ; BSR set to: 1
 36569  016F64  C146  F147         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 36570  016F68  C145  F146         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 36571  016F6C  C144  F145         	movff	i1___flmul@grs,i1___flmul@grs+1
 36572  016F70  6B44               	clrf	i1___flmul@grs& (0+255),b
 36573                           
 36574                           ; BSR set to: 1
 36575  016F72  5148               	movf	i1___flmul@aexp& (0+255),w,b
 36576  016F74  C149  F13F         	movff	i1___flmul@bexp,??i1___flmul
 36577  016F78  6B40               	clrf	(??i1___flmul+1)& (0+255),b
 36578  016F7A  273F               	addwf	??i1___flmul& (0+255),f,b
 36579  016F7C  0E00               	movlw	0
 36580  016F7E  2340               	addwfc	(??i1___flmul+1)& (0+255),f,b
 36581  016F80  0E82               	movlw	130
 36582  016F82  253F               	addwf	??i1___flmul& (0+255),w,b
 36583  016F84  6F4E               	movwf	i1___flmul@temp& (0+255),b
 36584  016F86  0EFF               	movlw	255
 36585  016F88  2140               	addwfc	(??i1___flmul+1)& (0+255),w,b
 36586  016F8A  6F4F               	movwf	(i1___flmul@temp+1)& (0+255),b
 36587  016F8C  D00F               	goto	i1l13706
 36588  016F8E                     i1l13700:
 36589                           
 36590                           ; BSR set to: 1
 36591  016F8E  90D8               	bcf	status,0,c
 36592  016F90  374A               	rlcf	i1___flmul@prod& (0+255),f,b
 36593  016F92  374B               	rlcf	(i1___flmul@prod+1)& (0+255),f,b
 36594  016F94  374C               	rlcf	(i1___flmul@prod+2)& (0+255),f,b
 36595  016F96  374D               	rlcf	(i1___flmul@prod+3)& (0+255),f,b
 36596                           
 36597                           ; BSR set to: 1
 36598  016F98  BF47               	btfsc	(i1___flmul@grs+3)& (0+255),7,b
 36599                           
 36600                           ; BSR set to: 1
 36601  016F9A  814A               	bsf	i1___flmul@prod& (0+255),0,b
 36602                           
 36603                           ; BSR set to: 1
 36604  016F9C  90D8               	bcf	status,0,c
 36605  016F9E  3744               	rlcf	i1___flmul@grs& (0+255),f,b
 36606  016FA0  3745               	rlcf	(i1___flmul@grs+1)& (0+255),f,b
 36607  016FA2  3746               	rlcf	(i1___flmul@grs+2)& (0+255),f,b
 36608  016FA4  3747               	rlcf	(i1___flmul@grs+3)& (0+255),f,b
 36609  016FA6  074E               	decf	i1___flmul@temp& (0+255),f,b
 36610  016FA8  A0D8               	btfss	status,0,c
 36611  016FAA  074F               	decf	(i1___flmul@temp+1)& (0+255),f,b
 36612  016FAC                     i1l13706:
 36613                           
 36614                           ; BSR set to: 1
 36615  016FAC  AF4C               	btfss	(i1___flmul@prod+2)& (0+255),7,b
 36616  016FAE  D7EF               	goto	i1l13700
 36617                           
 36618                           ; BSR set to: 1
 36619  016FB0  0E00               	movlw	0
 36620  016FB2  6F48               	movwf	i1___flmul@aexp& (0+255),b
 36621                           
 36622                           ; BSR set to: 1
 36623  016FB4  AF47               	btfss	(i1___flmul@grs+3)& (0+255),7,b
 36624  016FB6  D017               	goto	i1l3300
 36625                           
 36626                           ; BSR set to: 1
 36627  016FB8  0EFF               	movlw	255
 36628  016FBA  1544               	andwf	i1___flmul@grs& (0+255),w,b
 36629  016FBC  6F3F               	movwf	??i1___flmul& (0+255),b
 36630  016FBE  0EFF               	movlw	255
 36631  016FC0  1545               	andwf	(i1___flmul@grs+1)& (0+255),w,b
 36632  016FC2  6F40               	movwf	(??i1___flmul+1)& (0+255),b
 36633  016FC4  0EFF               	movlw	255
 36634  016FC6  1546               	andwf	(i1___flmul@grs+2)& (0+255),w,b
 36635  016FC8  6F41               	movwf	(??i1___flmul+2)& (0+255),b
 36636  016FCA  0E7F               	movlw	127
 36637  016FCC  1547               	andwf	(i1___flmul@grs+3)& (0+255),w,b
 36638  016FCE  6F42               	movwf	(??i1___flmul+3)& (0+255),b
 36639  016FD0  513F               	movf	??i1___flmul& (0+255),w,b
 36640  016FD2  1140               	iorwf	(??i1___flmul+1)& (0+255),w,b
 36641  016FD4  1141               	iorwf	(??i1___flmul+2)& (0+255),w,b
 36642  016FD6  1142               	iorwf	(??i1___flmul+3)& (0+255),w,b
 36643  016FD8  B4D8               	btfsc	status,2,c
 36644  016FDA  D003               	goto	i1l3301
 36645  016FDC                     i1u1580_20:
 36646                           
 36647                           ; BSR set to: 1
 36648  016FDC  0E01               	movlw	1
 36649  016FDE  6F48               	movwf	i1___flmul@aexp& (0+255),b
 36650  016FE0  D002               	goto	i1l3300
 36651  016FE2                     i1l3301:
 36652                           
 36653                           ; BSR set to: 1
 36654  016FE2  B14A               	btfsc	i1___flmul@prod& (0+255),0,b
 36655  016FE4  D7FB               	goto	i1u1580_20
 36656  016FE6                     i1l3300:
 36657                           
 36658                           ; BSR set to: 1
 36659  016FE6  5148               	movf	i1___flmul@aexp& (0+255),w,b
 36660  016FE8  B4D8               	btfsc	status,2,c
 36661  016FEA  D01F               	goto	i1l13726
 36662                           
 36663                           ; BSR set to: 1
 36664  016FEC  0E01               	movlw	1
 36665  016FEE  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36666  016FF0  0E00               	movlw	0
 36667  016FF2  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36668  016FF4  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36669  016FF6  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36670                           
 36671                           ; BSR set to: 1
 36672  016FF8  A14D               	btfss	(i1___flmul@prod+3)& (0+255),0,b
 36673  016FFA  D017               	goto	i1l13726
 36674                           
 36675                           ; BSR set to: 1
 36676  016FFC  C14A  F13F         	movff	i1___flmul@prod,??i1___flmul
 36677  017000  C14B  F140         	movff	i1___flmul@prod+1,??i1___flmul+1
 36678  017004  C14C  F141         	movff	i1___flmul@prod+2,??i1___flmul+2
 36679  017008  C14D  F142         	movff	i1___flmul@prod+3,??i1___flmul+3
 36680  01700C  3542               	rlcf	(??i1___flmul+3)& (0+255),w,b
 36681  01700E  3342               	rrcf	(??i1___flmul+3)& (0+255),f,b
 36682  017010  3341               	rrcf	(??i1___flmul+2)& (0+255),f,b
 36683  017012  3340               	rrcf	(??i1___flmul+1)& (0+255),f,b
 36684  017014  333F               	rrcf	??i1___flmul& (0+255),f,b
 36685  017016  C13F  F14A         	movff	??i1___flmul,i1___flmul@prod
 36686  01701A  C140  F14B         	movff	??i1___flmul+1,i1___flmul@prod+1
 36687  01701E  C141  F14C         	movff	??i1___flmul+2,i1___flmul@prod+2
 36688  017022  C142  F14D         	movff	??i1___flmul+3,i1___flmul@prod+3
 36689                           
 36690                           ; BSR set to: 1
 36691  017026  4B4E               	infsnz	i1___flmul@temp& (0+255),f,b
 36692  017028  2B4F               	incf	(i1___flmul@temp+1)& (0+255),f,b
 36693  01702A                     i1l13726:
 36694                           
 36695                           ; BSR set to: 1
 36696  01702A  BF4F               	btfsc	(i1___flmul@temp+1)& (0+255),7,b
 36697  01702C  D00D               	goto	i1l13730
 36698  01702E  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36699  017030  E103               	bnz	i1u1584_20
 36700  017032  294E               	incf	i1___flmul@temp& (0+255),w,b
 36701  017034  A0D8               	btfss	status,0,c
 36702  017036  D008               	goto	i1l13730
 36703  017038                     i1u1584_20:
 36704                           
 36705                           ; BSR set to: 1
 36706  017038  0E00               	movlw	0
 36707  01703A  6F4A               	movwf	i1___flmul@prod& (0+255),b
 36708  01703C  0E00               	movlw	0
 36709  01703E  6F4B               	movwf	(i1___flmul@prod+1)& (0+255),b
 36710  017040  0E80               	movlw	128
 36711  017042  6F4C               	movwf	(i1___flmul@prod+2)& (0+255),b
 36712  017044  0E7F               	movlw	127
 36713  017046  D020               	goto	L28
 36714  017048                     i1l13730:
 36715                           
 36716                           ; BSR set to: 1
 36717  017048  BF4F               	btfsc	(i1___flmul@temp+1)& (0+255),7,b
 36718  01704A  D005               	goto	i1u1585_20
 36719  01704C  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36720  01704E  E10E               	bnz	i1l3308
 36721  017050  054E               	decf	i1___flmul@temp& (0+255),w,b
 36722  017052  B0D8               	btfsc	status,0,c
 36723  017054  D00B               	goto	i1l3308
 36724  017056                     i1u1585_20:
 36725                           
 36726                           ; BSR set to: 1
 36727  017056  0E00               	movlw	0
 36728  017058  6F4A               	movwf	i1___flmul@prod& (0+255),b
 36729  01705A  0E00               	movlw	0
 36730  01705C  6F4B               	movwf	(i1___flmul@prod+1)& (0+255),b
 36731  01705E  0E00               	movlw	0
 36732  017060  6F4C               	movwf	(i1___flmul@prod+2)& (0+255),b
 36733  017062  0E00               	movlw	0
 36734  017064  6F4D               	movwf	(i1___flmul@prod+3)& (0+255),b
 36735  017066  0E00               	movlw	0
 36736  017068  6F43               	movwf	i1___flmul@sign& (0+255),b
 36737  01706A  D00F               	goto	i1l13742
 36738  01706C                     i1l3308:
 36739                           
 36740                           ; BSR set to: 1
 36741  01706C  C14E  F149         	movff	i1___flmul@temp,i1___flmul@bexp
 36742                           
 36743                           ; BSR set to: 1
 36744  017070  0EFF               	movlw	255
 36745  017072  174A               	andwf	i1___flmul@prod& (0+255),f,b
 36746  017074  0EFF               	movlw	255
 36747  017076  174B               	andwf	(i1___flmul@prod+1)& (0+255),f,b
 36748  017078  0E7F               	movlw	127
 36749  01707A  174C               	andwf	(i1___flmul@prod+2)& (0+255),f,b
 36750  01707C  0E00               	movlw	0
 36751  01707E  174D               	andwf	(i1___flmul@prod+3)& (0+255),f,b
 36752                           
 36753                           ; BSR set to: 1
 36754  017080  B149               	btfsc	i1___flmul@bexp& (0+255),0,b
 36755                           
 36756                           ; BSR set to: 1
 36757  017082  8F4C               	bsf	(i1___flmul@prod+2)& (0+255),7,b
 36758                           
 36759                           ; BSR set to: 1
 36760  017084  90D8               	bcf	status,0,c
 36761  017086  3149               	rrcf	i1___flmul@bexp& (0+255),w,b
 36762  017088                     L28:
 36763  017088  6F4D               	movwf	(i1___flmul@prod+3)& (0+255),b
 36764  01708A                     i1l13742:
 36765                           
 36766                           ; BSR set to: 1
 36767  01708A  5143               	movf	i1___flmul@sign& (0+255),w,b
 36768  01708C  134D               	iorwf	(i1___flmul@prod+3)& (0+255),f,b
 36769                           
 36770                           ; BSR set to: 1
 36771  01708E  C14A  F137         	movff	i1___flmul@prod,?i1___flmul
 36772  017092  C14B  F138         	movff	i1___flmul@prod+1,?i1___flmul+1
 36773  017096  C14C  F139         	movff	i1___flmul@prod+2,?i1___flmul+2
 36774  01709A  C14D  F13A         	movff	i1___flmul@prod+3,?i1___flmul+3
 36775                           
 36776                           ; BSR set to: 1
 36777  01709E  0012               	return		;funcret
 36778  0170A0                     __end_ofi1___flmul:
 36779                           	opt callstack 0
 36780                           
 36781 ;; *************** function i1___fldiv *****************
 36782 ;; Defined at:
 36783 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
 36784 ;; Parameters:    Size  Location     Type
 36785 ;;  b               4   30[BANK1 ] unsigned char 
 36786 ;;  a               4   34[BANK1 ] unsigned char 
 36787 ;; Auto vars:     Size  Location     Type
 36788 ;;  __fldiv         4   49[BANK1 ] unsigned long 
 36789 ;;  __fldiv         4   42[BANK1 ] unsigned long 
 36790 ;;  __fldiv         2   47[BANK1 ] int 
 36791 ;;  __fldiv         1   54[BANK1 ] unsigned char 
 36792 ;;  __fldiv         1   53[BANK1 ] unsigned char 
 36793 ;;  __fldiv         1   46[BANK1 ] unsigned char 
 36794 ;; Return value:  Size  Location     Type
 36795 ;;                  4   30[BANK1 ] unsigned char 
 36796 ;; Registers used:
 36797 ;;		wreg, status,2, status,0
 36798 ;; Tracked objects:
 36799 ;;		On entry : 0/0
 36800 ;;		On exit  : 0/0
 36801 ;;		Unchanged: 0/0
 36802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36803 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36804 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36805 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36806 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36807 ;;Total ram usage:       25 bytes
 36808 ;; Hardware stack levels used:    1
 36809 ;; Hardware stack levels required when called:    6
 36810 ;; This function calls:
 36811 ;;		Nothing
 36812 ;; This function is called by:
 36813 ;;		_freqMeasConvert
 36814 ;; This function uses a non-reentrant model
 36815 ;;
 36816                           
 36817                           	psect	text147
 36818  018516                     __ptext147:
 36819                           	opt callstack 0
 36820  018516                     i1___fldiv:
 36821                           	opt callstack 12
 36822                           
 36823                           ; BSR set to: 1
 36824                           ;incstack = 0
 36825  018516  0101               	movlb	1	; () banked
 36826  018518  5121               	movf	(i1___fldiv@b+3)& (0+255),w,b
 36827  01851A  0B80               	andlw	128
 36828  01851C  6F2E               	movwf	i1___fldiv@sign& (0+255),b
 36829  01851E  5121               	movf	(i1___fldiv@b+3)& (0+255),w,b
 36830  018520  2521               	addwf	(i1___fldiv@b+3)& (0+255),w,b
 36831  018522  6F35               	movwf	i1___fldiv@bexp& (0+255),b
 36832                           
 36833                           ; BSR set to: 1
 36834  018524  BF20               	btfsc	(i1___fldiv@b+2)& (0+255),7,b
 36835                           
 36836                           ; BSR set to: 1
 36837  018526  8135               	bsf	i1___fldiv@bexp& (0+255),0,b
 36838                           
 36839                           ; BSR set to: 1
 36840  018528  5135               	movf	i1___fldiv@bexp& (0+255),w,b
 36841  01852A  B4D8               	btfsc	status,2,c
 36842  01852C  D00D               	goto	i1l13496
 36843                           
 36844                           ; BSR set to: 1
 36845  01852E  2935               	incf	i1___fldiv@bexp& (0+255),w,b
 36846  018530  A4D8               	btfss	status,2,c
 36847  018532  D008               	goto	i1l13492
 36848                           
 36849                           ; BSR set to: 1
 36850  018534  0E00               	movlw	0
 36851  018536  6F1E               	movwf	i1___fldiv@b& (0+255),b
 36852  018538  0E00               	movlw	0
 36853  01853A  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 36854  01853C  0E00               	movlw	0
 36855  01853E  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 36856  018540  0E00               	movlw	0
 36857  018542  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 36858  018544                     i1l13492:
 36859                           
 36860                           ; BSR set to: 1
 36861  018544  8F20               	bsf	(i1___fldiv@b+2)& (0+255),7,b
 36862  018546  D006               	goto	L29
 36863  018548                     i1l13496:
 36864                           
 36865                           ; BSR set to: 1
 36866  018548  0E00               	movlw	0
 36867  01854A  6F1E               	movwf	i1___fldiv@b& (0+255),b
 36868  01854C  0E00               	movlw	0
 36869  01854E  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 36870  018550  0E00               	movlw	0
 36871  018552  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 36872  018554                     L29:
 36873  018554  0E00               	movlw	0
 36874  018556  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 36875                           
 36876                           ; BSR set to: 1
 36877  018558  5125               	movf	(i1___fldiv@a+3)& (0+255),w,b
 36878  01855A  0B80               	andlw	128
 36879  01855C  1B2E               	xorwf	i1___fldiv@sign& (0+255),f,b
 36880                           
 36881                           ; BSR set to: 1
 36882  01855E  5125               	movf	(i1___fldiv@a+3)& (0+255),w,b
 36883  018560  2525               	addwf	(i1___fldiv@a+3)& (0+255),w,b
 36884  018562  6F36               	movwf	i1___fldiv@aexp& (0+255),b
 36885                           
 36886                           ; BSR set to: 1
 36887  018564  BF24               	btfsc	(i1___fldiv@a+2)& (0+255),7,b
 36888                           
 36889                           ; BSR set to: 1
 36890  018566  8136               	bsf	i1___fldiv@aexp& (0+255),0,b
 36891                           
 36892                           ; BSR set to: 1
 36893  018568  5136               	movf	i1___fldiv@aexp& (0+255),w,b
 36894  01856A  B4D8               	btfsc	status,2,c
 36895  01856C  D00D               	goto	i1l13516
 36896                           
 36897                           ; BSR set to: 1
 36898  01856E  2936               	incf	i1___fldiv@aexp& (0+255),w,b
 36899  018570  A4D8               	btfss	status,2,c
 36900  018572  D008               	goto	i1l13512
 36901                           
 36902                           ; BSR set to: 1
 36903  018574  0E00               	movlw	0
 36904  018576  6F22               	movwf	i1___fldiv@a& (0+255),b
 36905  018578  0E00               	movlw	0
 36906  01857A  6F23               	movwf	(i1___fldiv@a+1)& (0+255),b
 36907  01857C  0E00               	movlw	0
 36908  01857E  6F24               	movwf	(i1___fldiv@a+2)& (0+255),b
 36909  018580  0E00               	movlw	0
 36910  018582  6F25               	movwf	(i1___fldiv@a+3)& (0+255),b
 36911  018584                     i1l13512:
 36912                           
 36913                           ; BSR set to: 1
 36914  018584  8F24               	bsf	(i1___fldiv@a+2)& (0+255),7,b
 36915  018586  D006               	goto	L30
 36916  018588                     i1l13516:
 36917                           
 36918                           ; BSR set to: 1
 36919  018588  0E00               	movlw	0
 36920  01858A  6F22               	movwf	i1___fldiv@a& (0+255),b
 36921  01858C  0E00               	movlw	0
 36922  01858E  6F23               	movwf	(i1___fldiv@a+1)& (0+255),b
 36923  018590  0E00               	movlw	0
 36924  018592  6F24               	movwf	(i1___fldiv@a+2)& (0+255),b
 36925  018594                     L30:
 36926  018594  0E00               	movlw	0
 36927  018596  6F25               	movwf	(i1___fldiv@a+3)& (0+255),b
 36928                           
 36929                           ; BSR set to: 1
 36930  018598  5122               	movf	i1___fldiv@a& (0+255),w,b
 36931  01859A  1123               	iorwf	(i1___fldiv@a+1)& (0+255),w,b
 36932  01859C  1124               	iorwf	(i1___fldiv@a+2)& (0+255),w,b
 36933  01859E  1125               	iorwf	(i1___fldiv@a+3)& (0+255),w,b
 36934  0185A0  A4D8               	btfss	status,2,c
 36935  0185A2  D017               	goto	i1l13530
 36936                           
 36937                           ; BSR set to: 1
 36938  0185A4  0E00               	movlw	0
 36939  0185A6  6F1E               	movwf	i1___fldiv@b& (0+255),b
 36940  0185A8  0E00               	movlw	0
 36941  0185AA  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 36942  0185AC  0E00               	movlw	0
 36943  0185AE  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 36944  0185B0  0E00               	movlw	0
 36945  0185B2  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 36946                           
 36947                           ; BSR set to: 1
 36948  0185B4  0E80               	movlw	128
 36949  0185B6  1320               	iorwf	(i1___fldiv@b+2)& (0+255),f,b
 36950  0185B8  0E7F               	movlw	127
 36951  0185BA  1321               	iorwf	(i1___fldiv@b+3)& (0+255),f,b
 36952  0185BC                     i1l13524:
 36953                           
 36954                           ; BSR set to: 1
 36955  0185BC  512E               	movf	i1___fldiv@sign& (0+255),w,b
 36956  0185BE  1321               	iorwf	(i1___fldiv@b+3)& (0+255),f,b
 36957                           
 36958                           ; BSR set to: 1
 36959  0185C0  C11E  F11E         	movff	i1___fldiv@b,?i1___fldiv
 36960  0185C4  C11F  F11F         	movff	i1___fldiv@b+1,?i1___fldiv+1
 36961  0185C8  C120  F120         	movff	i1___fldiv@b+2,?i1___fldiv+2
 36962  0185CC  C121  F121         	movff	i1___fldiv@b+3,?i1___fldiv+3
 36963  0185D0  0012               	return	
 36964  0185D2                     i1l13530:
 36965                           
 36966                           ; BSR set to: 1
 36967  0185D2  5135               	movf	i1___fldiv@bexp& (0+255),w,b
 36968  0185D4  A4D8               	btfss	status,2,c
 36969  0185D6  D009               	goto	i1l13538
 36970                           
 36971                           ; BSR set to: 1
 36972                           
 36973                           ; BSR set to: 1
 36974  0185D8  0E00               	movlw	0
 36975  0185DA  6F1E               	movwf	?i1___fldiv& (0+255),b
 36976  0185DC  0E00               	movlw	0
 36977  0185DE  6F1F               	movwf	(?i1___fldiv+1)& (0+255),b
 36978  0185E0  0E00               	movlw	0
 36979  0185E2  6F20               	movwf	(?i1___fldiv+2)& (0+255),b
 36980  0185E4  0E00               	movlw	0
 36981  0185E6  6F21               	movwf	(?i1___fldiv+3)& (0+255),b
 36982  0185E8  0012               	return	
 36983  0185EA                     i1l13538:
 36984                           
 36985                           ; BSR set to: 1
 36986  0185EA  5136               	movf	i1___fldiv@aexp& (0+255),w,b
 36987  0185EC  C135  F126         	movff	i1___fldiv@bexp,??i1___fldiv
 36988  0185F0  6B27               	clrf	(??i1___fldiv+1)& (0+255),b
 36989  0185F2  5F26               	subwf	??i1___fldiv& (0+255),f,b
 36990  0185F4  0E00               	movlw	0
 36991  0185F6  5B27               	subwfb	(??i1___fldiv+1)& (0+255),f,b
 36992  0185F8  0E7F               	movlw	127
 36993  0185FA  2526               	addwf	??i1___fldiv& (0+255),w,b
 36994  0185FC  6F2F               	movwf	i1___fldiv@new_exp& (0+255),b
 36995  0185FE  0E00               	movlw	0
 36996  018600  2127               	addwfc	(??i1___fldiv+1)& (0+255),w,b
 36997  018602  6F30               	movwf	(i1___fldiv@new_exp+1)& (0+255),b
 36998                           
 36999                           ; BSR set to: 1
 37000  018604  C11E  F12A         	movff	i1___fldiv@b,i1___fldiv@rem
 37001  018608  C11F  F12B         	movff	i1___fldiv@b+1,i1___fldiv@rem+1
 37002  01860C  C120  F12C         	movff	i1___fldiv@b+2,i1___fldiv@rem+2
 37003  018610  C121  F12D         	movff	i1___fldiv@b+3,i1___fldiv@rem+3
 37004                           
 37005                           ; BSR set to: 1
 37006  018614  0E00               	movlw	0
 37007  018616  6F1E               	movwf	i1___fldiv@b& (0+255),b
 37008  018618  0E00               	movlw	0
 37009  01861A  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 37010  01861C  0E00               	movlw	0
 37011  01861E  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 37012  018620  0E00               	movlw	0
 37013  018622  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 37014                           
 37015                           ; BSR set to: 1
 37016  018624  0E00               	movlw	0
 37017  018626  6F31               	movwf	i1___fldiv@grs& (0+255),b
 37018  018628  0E00               	movlw	0
 37019  01862A  6F32               	movwf	(i1___fldiv@grs+1)& (0+255),b
 37020  01862C  0E00               	movlw	0
 37021  01862E  6F33               	movwf	(i1___fldiv@grs+2)& (0+255),b
 37022  018630  0E00               	movlw	0
 37023  018632  6F34               	movwf	(i1___fldiv@grs+3)& (0+255),b
 37024                           
 37025                           ; BSR set to: 1
 37026  018634  0E00               	movlw	0
 37027  018636  6F36               	movwf	i1___fldiv@aexp& (0+255),b
 37028  018638  D028               	goto	i1l3261
 37029  01863A                     i1l13548:
 37030                           
 37031                           ; BSR set to: 1
 37032  01863A  5136               	movf	i1___fldiv@aexp& (0+255),w,b
 37033  01863C  B4D8               	btfsc	status,2,c
 37034  01863E  D011               	goto	i1l13556
 37035                           
 37036                           ; BSR set to: 1
 37037  018640  90D8               	bcf	status,0,c
 37038  018642  372A               	rlcf	i1___fldiv@rem& (0+255),f,b
 37039  018644  372B               	rlcf	(i1___fldiv@rem+1)& (0+255),f,b
 37040  018646  372C               	rlcf	(i1___fldiv@rem+2)& (0+255),f,b
 37041  018648  372D               	rlcf	(i1___fldiv@rem+3)& (0+255),f,b
 37042  01864A  90D8               	bcf	status,0,c
 37043  01864C  371E               	rlcf	i1___fldiv@b& (0+255),f,b
 37044  01864E  371F               	rlcf	(i1___fldiv@b+1)& (0+255),f,b
 37045  018650  3720               	rlcf	(i1___fldiv@b+2)& (0+255),f,b
 37046  018652  3721               	rlcf	(i1___fldiv@b+3)& (0+255),f,b
 37047                           
 37048                           ; BSR set to: 1
 37049  018654  BF34               	btfsc	(i1___fldiv@grs+3)& (0+255),7,b
 37050                           
 37051                           ; BSR set to: 1
 37052  018656  811E               	bsf	i1___fldiv@b& (0+255),0,b
 37053                           
 37054                           ; BSR set to: 1
 37055  018658  90D8               	bcf	status,0,c
 37056  01865A  3731               	rlcf	i1___fldiv@grs& (0+255),f,b
 37057  01865C  3732               	rlcf	(i1___fldiv@grs+1)& (0+255),f,b
 37058  01865E  3733               	rlcf	(i1___fldiv@grs+2)& (0+255),f,b
 37059  018660  3734               	rlcf	(i1___fldiv@grs+3)& (0+255),f,b
 37060  018662                     i1l13556:
 37061                           
 37062                           ; BSR set to: 1
 37063  018662  5122               	movf	i1___fldiv@a& (0+255),w,b
 37064  018664  5D2A               	subwf	i1___fldiv@rem& (0+255),w,b
 37065  018666  5123               	movf	(i1___fldiv@a+1)& (0+255),w,b
 37066  018668  592B               	subwfb	(i1___fldiv@rem+1)& (0+255),w,b
 37067  01866A  5124               	movf	(i1___fldiv@a+2)& (0+255),w,b
 37068  01866C  592C               	subwfb	(i1___fldiv@rem+2)& (0+255),w,b
 37069  01866E  5125               	movf	(i1___fldiv@a+3)& (0+255),w,b
 37070  018670  592D               	subwfb	(i1___fldiv@rem+3)& (0+255),w,b
 37071  018672  A0D8               	btfss	status,0,c
 37072  018674  D009               	goto	i1l13562
 37073                           
 37074                           ; BSR set to: 1
 37075  018676  8D34               	bsf	(i1___fldiv@grs+3)& (0+255),6,b
 37076                           
 37077                           ; BSR set to: 1
 37078  018678  5122               	movf	i1___fldiv@a& (0+255),w,b
 37079  01867A  5F2A               	subwf	i1___fldiv@rem& (0+255),f,b
 37080  01867C  5123               	movf	(i1___fldiv@a+1)& (0+255),w,b
 37081  01867E  5B2B               	subwfb	(i1___fldiv@rem+1)& (0+255),f,b
 37082  018680  5124               	movf	(i1___fldiv@a+2)& (0+255),w,b
 37083  018682  5B2C               	subwfb	(i1___fldiv@rem+2)& (0+255),f,b
 37084  018684  5125               	movf	(i1___fldiv@a+3)& (0+255),w,b
 37085  018686  5B2D               	subwfb	(i1___fldiv@rem+3)& (0+255),f,b
 37086  018688                     i1l13562:
 37087                           
 37088                           ; BSR set to: 1
 37089  018688  2B36               	incf	i1___fldiv@aexp& (0+255),f,b
 37090  01868A                     i1l3261:
 37091                           
 37092                           ; BSR set to: 1
 37093  01868A  0E19               	movlw	25
 37094  01868C  6536               	cpfsgt	i1___fldiv@aexp& (0+255),b
 37095  01868E  D7D5               	goto	i1l13548
 37096                           
 37097                           ; BSR set to: 1
 37098  018690  512A               	movf	i1___fldiv@rem& (0+255),w,b
 37099  018692  112B               	iorwf	(i1___fldiv@rem+1)& (0+255),w,b
 37100  018694  112C               	iorwf	(i1___fldiv@rem+2)& (0+255),w,b
 37101  018696  112D               	iorwf	(i1___fldiv@rem+3)& (0+255),w,b
 37102  018698  B4D8               	btfsc	status,2,c
 37103  01869A  D011               	goto	i1l13574
 37104                           
 37105                           ; BSR set to: 1
 37106  01869C  8131               	bsf	i1___fldiv@grs& (0+255),0,b
 37107  01869E  D00F               	goto	i1l13574
 37108  0186A0                     i1l13568:
 37109                           
 37110                           ; BSR set to: 1
 37111  0186A0  90D8               	bcf	status,0,c
 37112  0186A2  371E               	rlcf	i1___fldiv@b& (0+255),f,b
 37113  0186A4  371F               	rlcf	(i1___fldiv@b+1)& (0+255),f,b
 37114  0186A6  3720               	rlcf	(i1___fldiv@b+2)& (0+255),f,b
 37115  0186A8  3721               	rlcf	(i1___fldiv@b+3)& (0+255),f,b
 37116                           
 37117                           ; BSR set to: 1
 37118  0186AA  BF34               	btfsc	(i1___fldiv@grs+3)& (0+255),7,b
 37119                           
 37120                           ; BSR set to: 1
 37121  0186AC  811E               	bsf	i1___fldiv@b& (0+255),0,b
 37122                           
 37123                           ; BSR set to: 1
 37124  0186AE  90D8               	bcf	status,0,c
 37125  0186B0  3731               	rlcf	i1___fldiv@grs& (0+255),f,b
 37126  0186B2  3732               	rlcf	(i1___fldiv@grs+1)& (0+255),f,b
 37127  0186B4  3733               	rlcf	(i1___fldiv@grs+2)& (0+255),f,b
 37128  0186B6  3734               	rlcf	(i1___fldiv@grs+3)& (0+255),f,b
 37129  0186B8  072F               	decf	i1___fldiv@new_exp& (0+255),f,b
 37130  0186BA  A0D8               	btfss	status,0,c
 37131  0186BC  0730               	decf	(i1___fldiv@new_exp+1)& (0+255),f,b
 37132  0186BE                     i1l13574:
 37133                           
 37134                           ; BSR set to: 1
 37135  0186BE  AF20               	btfss	(i1___fldiv@b+2)& (0+255),7,b
 37136  0186C0  D7EF               	goto	i1l13568
 37137                           
 37138                           ; BSR set to: 1
 37139  0186C2  0E00               	movlw	0
 37140  0186C4  6F36               	movwf	i1___fldiv@aexp& (0+255),b
 37141                           
 37142                           ; BSR set to: 1
 37143  0186C6  AF34               	btfss	(i1___fldiv@grs+3)& (0+255),7,b
 37144  0186C8  D017               	goto	i1l3272
 37145                           
 37146                           ; BSR set to: 1
 37147  0186CA  0EFF               	movlw	255
 37148  0186CC  1531               	andwf	i1___fldiv@grs& (0+255),w,b
 37149  0186CE  6F26               	movwf	??i1___fldiv& (0+255),b
 37150  0186D0  0EFF               	movlw	255
 37151  0186D2  1532               	andwf	(i1___fldiv@grs+1)& (0+255),w,b
 37152  0186D4  6F27               	movwf	(??i1___fldiv+1)& (0+255),b
 37153  0186D6  0EFF               	movlw	255
 37154  0186D8  1533               	andwf	(i1___fldiv@grs+2)& (0+255),w,b
 37155  0186DA  6F28               	movwf	(??i1___fldiv+2)& (0+255),b
 37156  0186DC  0E7F               	movlw	127
 37157  0186DE  1534               	andwf	(i1___fldiv@grs+3)& (0+255),w,b
 37158  0186E0  6F29               	movwf	(??i1___fldiv+3)& (0+255),b
 37159  0186E2  5126               	movf	??i1___fldiv& (0+255),w,b
 37160  0186E4  1127               	iorwf	(??i1___fldiv+1)& (0+255),w,b
 37161  0186E6  1128               	iorwf	(??i1___fldiv+2)& (0+255),w,b
 37162  0186E8  1129               	iorwf	(??i1___fldiv+3)& (0+255),w,b
 37163  0186EA  B4D8               	btfsc	status,2,c
 37164  0186EC  D003               	goto	i1l3273
 37165  0186EE                     i1u1561_20:
 37166                           
 37167                           ; BSR set to: 1
 37168  0186EE  0E01               	movlw	1
 37169  0186F0  6F36               	movwf	i1___fldiv@aexp& (0+255),b
 37170  0186F2  D002               	goto	i1l3272
 37171  0186F4                     i1l3273:
 37172                           
 37173                           ; BSR set to: 1
 37174  0186F4  B11E               	btfsc	i1___fldiv@b& (0+255),0,b
 37175  0186F6  D7FB               	goto	i1u1561_20
 37176  0186F8                     i1l3272:
 37177                           
 37178                           ; BSR set to: 1
 37179  0186F8  5136               	movf	i1___fldiv@aexp& (0+255),w,b
 37180  0186FA  B4D8               	btfsc	status,2,c
 37181  0186FC  D01F               	goto	i1l13594
 37182                           
 37183                           ; BSR set to: 1
 37184  0186FE  0E01               	movlw	1
 37185  018700  271E               	addwf	i1___fldiv@b& (0+255),f,b
 37186  018702  0E00               	movlw	0
 37187  018704  231F               	addwfc	(i1___fldiv@b+1)& (0+255),f,b
 37188  018706  2320               	addwfc	(i1___fldiv@b+2)& (0+255),f,b
 37189  018708  2321               	addwfc	(i1___fldiv@b+3)& (0+255),f,b
 37190                           
 37191                           ; BSR set to: 1
 37192  01870A  A121               	btfss	(i1___fldiv@b+3)& (0+255),0,b
 37193  01870C  D017               	goto	i1l13594
 37194                           
 37195                           ; BSR set to: 1
 37196  01870E  C11E  F126         	movff	i1___fldiv@b,??i1___fldiv
 37197  018712  C11F  F127         	movff	i1___fldiv@b+1,??i1___fldiv+1
 37198  018716  C120  F128         	movff	i1___fldiv@b+2,??i1___fldiv+2
 37199  01871A  C121  F129         	movff	i1___fldiv@b+3,??i1___fldiv+3
 37200  01871E  3529               	rlcf	(??i1___fldiv+3)& (0+255),w,b
 37201  018720  3329               	rrcf	(??i1___fldiv+3)& (0+255),f,b
 37202  018722  3328               	rrcf	(??i1___fldiv+2)& (0+255),f,b
 37203  018724  3327               	rrcf	(??i1___fldiv+1)& (0+255),f,b
 37204  018726  3326               	rrcf	??i1___fldiv& (0+255),f,b
 37205  018728  C126  F11E         	movff	??i1___fldiv,i1___fldiv@b
 37206  01872C  C127  F11F         	movff	??i1___fldiv+1,i1___fldiv@b+1
 37207  018730  C128  F120         	movff	??i1___fldiv+2,i1___fldiv@b+2
 37208  018734  C129  F121         	movff	??i1___fldiv+3,i1___fldiv@b+3
 37209                           
 37210                           ; BSR set to: 1
 37211  018738  4B2F               	infsnz	i1___fldiv@new_exp& (0+255),f,b
 37212  01873A  2B30               	incf	(i1___fldiv@new_exp+1)& (0+255),f,b
 37213  01873C                     i1l13594:
 37214                           
 37215                           ; BSR set to: 1
 37216  01873C  BF30               	btfsc	(i1___fldiv@new_exp+1)& (0+255),7,b
 37217  01873E  D010               	goto	i1l13598
 37218  018740  5130               	movf	(i1___fldiv@new_exp+1)& (0+255),w,b
 37219  018742  E103               	bnz	i1u1565_20
 37220  018744  292F               	incf	i1___fldiv@new_exp& (0+255),w,b
 37221  018746  A0D8               	btfss	status,0,c
 37222  018748  D00B               	goto	i1l13598
 37223  01874A                     i1u1565_20:
 37224                           
 37225                           ; BSR set to: 1
 37226  01874A  0E00               	movlw	0
 37227  01874C  6F30               	movwf	(i1___fldiv@new_exp+1)& (0+255),b
 37228  01874E  692F               	setf	i1___fldiv@new_exp& (0+255),b
 37229  018750  0E00               	movlw	0
 37230  018752  6F1E               	movwf	i1___fldiv@b& (0+255),b
 37231  018754  0E00               	movlw	0
 37232  018756  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 37233  018758  0E00               	movlw	0
 37234  01875A  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 37235  01875C  0E00               	movlw	0
 37236  01875E  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 37237  018760                     i1l13598:
 37238                           
 37239                           ; BSR set to: 1
 37240  018760  BF30               	btfsc	(i1___fldiv@new_exp+1)& (0+255),7,b
 37241  018762  D005               	goto	i1u1566_20
 37242  018764  5130               	movf	(i1___fldiv@new_exp+1)& (0+255),w,b
 37243  018766  E111               	bnz	i1l13602
 37244  018768  052F               	decf	i1___fldiv@new_exp& (0+255),w,b
 37245  01876A  B0D8               	btfsc	status,0,c
 37246  01876C  D00E               	goto	i1l13602
 37247  01876E                     i1u1566_20:
 37248                           
 37249                           ; BSR set to: 1
 37250  01876E  0E00               	movlw	0
 37251  018770  6F30               	movwf	(i1___fldiv@new_exp+1)& (0+255),b
 37252  018772  0E00               	movlw	0
 37253  018774  6F2F               	movwf	i1___fldiv@new_exp& (0+255),b
 37254  018776  0E00               	movlw	0
 37255  018778  6F1E               	movwf	i1___fldiv@b& (0+255),b
 37256  01877A  0E00               	movlw	0
 37257  01877C  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 37258  01877E  0E00               	movlw	0
 37259  018780  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 37260  018782  0E00               	movlw	0
 37261  018784  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 37262  018786  0E00               	movlw	0
 37263  018788  6F2E               	movwf	i1___fldiv@sign& (0+255),b
 37264  01878A                     i1l13602:
 37265                           
 37266                           ; BSR set to: 1
 37267  01878A  C12F  F135         	movff	i1___fldiv@new_exp,i1___fldiv@bexp
 37268                           
 37269                           ; BSR set to: 1
 37270  01878E  A135               	btfss	i1___fldiv@bexp& (0+255),0,b
 37271  018790  D002               	goto	i1l13608
 37272                           
 37273                           ; BSR set to: 1
 37274  018792  8F20               	bsf	(i1___fldiv@b+2)& (0+255),7,b
 37275  018794  D001               	goto	i1l13610
 37276  018796                     i1l13608:
 37277                           
 37278                           ; BSR set to: 1
 37279  018796  9F20               	bcf	(i1___fldiv@b+2)& (0+255),7,b
 37280  018798                     i1l13610:
 37281                           
 37282                           ; BSR set to: 1
 37283  018798  90D8               	bcf	status,0,c
 37284  01879A  3135               	rrcf	i1___fldiv@bexp& (0+255),w,b
 37285  01879C  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 37286  01879E  D70E               	goto	i1l13524
 37287  0187A0                     __end_ofi1___fldiv:
 37288                           	opt callstack 0
 37289                           
 37290 ;; *************** function i1___fladd *****************
 37291 ;; Defined at:
 37292 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 37293 ;; Parameters:    Size  Location     Type
 37294 ;;  b               4   14[BANK1 ] unsigned char 
 37295 ;;  a               4   18[BANK1 ] unsigned char 
 37296 ;; Auto vars:     Size  Location     Type
 37297 ;;  __fladd         1   29[BANK1 ] unsigned char 
 37298 ;;  __fladd         1   28[BANK1 ] unsigned char 
 37299 ;;  __fladd         1   27[BANK1 ] unsigned char 
 37300 ;;  __fladd         1   26[BANK1 ] unsigned char 
 37301 ;; Return value:  Size  Location     Type
 37302 ;;                  4   14[BANK1 ] unsigned char 
 37303 ;; Registers used:
 37304 ;;		wreg, status,2, status,0
 37305 ;; Tracked objects:
 37306 ;;		On entry : 0/0
 37307 ;;		On exit  : 0/0
 37308 ;;		Unchanged: 0/0
 37309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37310 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37311 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37312 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37313 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37314 ;;Total ram usage:       16 bytes
 37315 ;; Hardware stack levels used:    1
 37316 ;; Hardware stack levels required when called:    6
 37317 ;; This function calls:
 37318 ;;		Nothing
 37319 ;; This function is called by:
 37320 ;;		_freqMeasConvert
 37321 ;; This function uses a non-reentrant model
 37322 ;;
 37323                           
 37324                           	psect	text148
 37325  017700                     __ptext148:
 37326                           	opt callstack 0
 37327  017700                     i1___fladd:
 37328                           	opt callstack 12
 37329                           
 37330                           ; BSR set to: 1
 37331                           ;incstack = 0
 37332  017700  0101               	movlb	1	; () banked
 37333  017702  5111               	movf	(i1___fladd@b+3)& (0+255),w,b
 37334  017704  0B80               	andlw	128
 37335  017706  6F1A               	movwf	i1___fladd@signs& (0+255),b
 37336  017708  5111               	movf	(i1___fladd@b+3)& (0+255),w,b
 37337  01770A  2511               	addwf	(i1___fladd@b+3)& (0+255),w,b
 37338  01770C  6F1C               	movwf	i1___fladd@bexp& (0+255),b
 37339                           
 37340                           ; BSR set to: 1
 37341  01770E  BF10               	btfsc	(i1___fladd@b+2)& (0+255),7,b
 37342                           
 37343                           ; BSR set to: 1
 37344  017710  811C               	bsf	i1___fladd@bexp& (0+255),0,b
 37345                           
 37346                           ; BSR set to: 1
 37347  017712  511C               	movf	i1___fladd@bexp& (0+255),w,b
 37348  017714  B4D8               	btfsc	status,2,c
 37349  017716  D00D               	goto	i1l13288
 37350                           
 37351                           ; BSR set to: 1
 37352  017718  291C               	incf	i1___fladd@bexp& (0+255),w,b
 37353  01771A  A4D8               	btfss	status,2,c
 37354  01771C  D008               	goto	i1l13284
 37355                           
 37356                           ; BSR set to: 1
 37357  01771E  0E00               	movlw	0
 37358  017720  6F0E               	movwf	i1___fladd@b& (0+255),b
 37359  017722  0E00               	movlw	0
 37360  017724  6F0F               	movwf	(i1___fladd@b+1)& (0+255),b
 37361  017726  0E00               	movlw	0
 37362  017728  6F10               	movwf	(i1___fladd@b+2)& (0+255),b
 37363  01772A  0E00               	movlw	0
 37364  01772C  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 37365  01772E                     i1l13284:
 37366                           
 37367                           ; BSR set to: 1
 37368  01772E  8F10               	bsf	(i1___fladd@b+2)& (0+255),7,b
 37369  017730  D006               	goto	L31
 37370  017732                     i1l13288:
 37371                           
 37372                           ; BSR set to: 1
 37373  017732  0E00               	movlw	0
 37374  017734  6F0E               	movwf	i1___fladd@b& (0+255),b
 37375  017736  0E00               	movlw	0
 37376  017738  6F0F               	movwf	(i1___fladd@b+1)& (0+255),b
 37377  01773A  0E00               	movlw	0
 37378  01773C  6F10               	movwf	(i1___fladd@b+2)& (0+255),b
 37379  01773E                     L31:
 37380  01773E  0E00               	movlw	0
 37381  017740  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 37382                           
 37383                           ; BSR set to: 1
 37384  017742  5115               	movf	(i1___fladd@a+3)& (0+255),w,b
 37385  017744  0B80               	andlw	128
 37386  017746  6F1B               	movwf	i1___fladd@aexp& (0+255),b
 37387                           
 37388                           ; BSR set to: 1
 37389  017748  511A               	movf	i1___fladd@signs& (0+255),w,b
 37390  01774A  191B               	xorwf	i1___fladd@aexp& (0+255),w,b
 37391  01774C  A4D8               	btfss	status,2,c
 37392                           
 37393                           ; BSR set to: 1
 37394  01774E  8D1A               	bsf	i1___fladd@signs& (0+255),6,b
 37395                           
 37396                           ; BSR set to: 1
 37397  017750  5115               	movf	(i1___fladd@a+3)& (0+255),w,b
 37398  017752  2515               	addwf	(i1___fladd@a+3)& (0+255),w,b
 37399  017754  6F1B               	movwf	i1___fladd@aexp& (0+255),b
 37400                           
 37401                           ; BSR set to: 1
 37402  017756  BF14               	btfsc	(i1___fladd@a+2)& (0+255),7,b
 37403                           
 37404                           ; BSR set to: 1
 37405  017758  811B               	bsf	i1___fladd@aexp& (0+255),0,b
 37406                           
 37407                           ; BSR set to: 1
 37408  01775A  511B               	movf	i1___fladd@aexp& (0+255),w,b
 37409  01775C  B4D8               	btfsc	status,2,c
 37410  01775E  D00D               	goto	i1l13312
 37411                           
 37412                           ; BSR set to: 1
 37413  017760  291B               	incf	i1___fladd@aexp& (0+255),w,b
 37414  017762  A4D8               	btfss	status,2,c
 37415  017764  D008               	goto	i1l13308
 37416                           
 37417                           ; BSR set to: 1
 37418  017766  0E00               	movlw	0
 37419  017768  6F12               	movwf	i1___fladd@a& (0+255),b
 37420  01776A  0E00               	movlw	0
 37421  01776C  6F13               	movwf	(i1___fladd@a+1)& (0+255),b
 37422  01776E  0E00               	movlw	0
 37423  017770  6F14               	movwf	(i1___fladd@a+2)& (0+255),b
 37424  017772  0E00               	movlw	0
 37425  017774  6F15               	movwf	(i1___fladd@a+3)& (0+255),b
 37426  017776                     i1l13308:
 37427                           
 37428                           ; BSR set to: 1
 37429  017776  8F14               	bsf	(i1___fladd@a+2)& (0+255),7,b
 37430  017778  D006               	goto	L32
 37431  01777A                     i1l13312:
 37432                           
 37433                           ; BSR set to: 1
 37434  01777A  0E00               	movlw	0
 37435  01777C  6F12               	movwf	i1___fladd@a& (0+255),b
 37436  01777E  0E00               	movlw	0
 37437  017780  6F13               	movwf	(i1___fladd@a+1)& (0+255),b
 37438  017782  0E00               	movlw	0
 37439  017784  6F14               	movwf	(i1___fladd@a+2)& (0+255),b
 37440  017786                     L32:
 37441  017786  0E00               	movlw	0
 37442  017788  6F15               	movwf	(i1___fladd@a+3)& (0+255),b
 37443                           
 37444                           ; BSR set to: 1
 37445  01778A  511C               	movf	i1___fladd@bexp& (0+255),w,b
 37446  01778C  5D1B               	subwf	i1___fladd@aexp& (0+255),w,b
 37447  01778E  B0D8               	btfsc	status,0,c
 37448  017790  D022               	goto	i1l13350
 37449                           
 37450                           ; BSR set to: 1
 37451  017792  AD1A               	btfss	i1___fladd@signs& (0+255),6,b
 37452  017794  D002               	goto	i1l13320
 37453                           
 37454                           ; BSR set to: 1
 37455  017796  0E80               	movlw	128
 37456  017798  1B1A               	xorwf	i1___fladd@signs& (0+255),f,b
 37457  01779A                     i1l13320:
 37458                           
 37459                           ; BSR set to: 1
 37460  01779A  C11C  F11D         	movff	i1___fladd@bexp,i1___fladd@grs
 37461                           
 37462                           ; BSR set to: 1
 37463  01779E  C11B  F11C         	movff	i1___fladd@aexp,i1___fladd@bexp
 37464                           
 37465                           ; BSR set to: 1
 37466  0177A2  C11D  F11B         	movff	i1___fladd@grs,i1___fladd@aexp
 37467                           
 37468                           ; BSR set to: 1
 37469  0177A6  C10E  F11D         	movff	i1___fladd@b,i1___fladd@grs
 37470                           
 37471                           ; BSR set to: 1
 37472  0177AA  C112  F10E         	movff	i1___fladd@a,i1___fladd@b
 37473                           
 37474                           ; BSR set to: 1
 37475  0177AE  C11D  F112         	movff	i1___fladd@grs,i1___fladd@a
 37476                           
 37477                           ; BSR set to: 1
 37478  0177B2  C10F  F11D         	movff	i1___fladd@b+1,i1___fladd@grs
 37479                           
 37480                           ; BSR set to: 1
 37481  0177B6  C113  F10F         	movff	i1___fladd@a+1,i1___fladd@b+1
 37482                           
 37483                           ; BSR set to: 1
 37484  0177BA  C11D  F113         	movff	i1___fladd@grs,i1___fladd@a+1
 37485                           
 37486                           ; BSR set to: 1
 37487  0177BE  C110  F11D         	movff	i1___fladd@b+2,i1___fladd@grs
 37488                           
 37489                           ; BSR set to: 1
 37490  0177C2  C114  F110         	movff	i1___fladd@a+2,i1___fladd@b+2
 37491                           
 37492                           ; BSR set to: 1
 37493  0177C6  C11D  F114         	movff	i1___fladd@grs,i1___fladd@a+2
 37494                           
 37495                           ; BSR set to: 1
 37496  0177CA  C111  F11D         	movff	i1___fladd@b+3,i1___fladd@grs
 37497                           
 37498                           ; BSR set to: 1
 37499  0177CE  C115  F111         	movff	i1___fladd@a+3,i1___fladd@b+3
 37500                           
 37501                           ; BSR set to: 1
 37502  0177D2  C11D  F115         	movff	i1___fladd@grs,i1___fladd@a+3
 37503  0177D6                     i1l13350:
 37504                           
 37505                           ; BSR set to: 1
 37506  0177D6  0E00               	movlw	0
 37507  0177D8  6F1D               	movwf	i1___fladd@grs& (0+255),b
 37508                           
 37509                           ; BSR set to: 1
 37510  0177DA  511C               	movf	i1___fladd@bexp& (0+255),w,b
 37511  0177DC  C11B  F116         	movff	i1___fladd@aexp,??i1___fladd
 37512  0177E0  6B17               	clrf	(??i1___fladd+1)& (0+255),b
 37513  0177E2  5F16               	subwf	??i1___fladd& (0+255),f,b
 37514  0177E4  0E00               	movlw	0
 37515  0177E6  5B17               	subwfb	(??i1___fladd+1)& (0+255),f,b
 37516  0177E8  BF17               	btfsc	(??i1___fladd+1)& (0+255),7,b
 37517  0177EA  D02C               	goto	i1l3206
 37518  0177EC  5117               	movf	(??i1___fladd+1)& (0+255),w,b
 37519  0177EE  E104               	bnz	i1u1515_20
 37520  0177F0  0E1A               	movlw	26
 37521  0177F2  5D16               	subwf	??i1___fladd& (0+255),w,b
 37522  0177F4  A0D8               	btfss	status,0,c
 37523  0177F6  D026               	goto	i1l3206
 37524  0177F8                     i1u1515_20:
 37525                           
 37526                           ; BSR set to: 1
 37527  0177F8  510E               	movf	i1___fladd@b& (0+255),w,b
 37528  0177FA  110F               	iorwf	(i1___fladd@b+1)& (0+255),w,b
 37529  0177FC  1110               	iorwf	(i1___fladd@b+2)& (0+255),w,b
 37530  0177FE  1111               	iorwf	(i1___fladd@b+3)& (0+255),w,b
 37531  017800  B4D8               	btfsc	status,2,c
 37532  017802  D002               	goto	i1u1516_20
 37533  017804  0E01               	movlw	1
 37534  017806  D001               	goto	i1u1517_20
 37535  017808                     i1u1516_20:
 37536  017808  0E00               	movlw	0
 37537  01780A                     i1u1517_20:
 37538  01780A  6F1D               	movwf	i1___fladd@grs& (0+255),b
 37539                           
 37540                           ; BSR set to: 1
 37541  01780C  0E00               	movlw	0
 37542  01780E  6F0E               	movwf	i1___fladd@b& (0+255),b
 37543  017810  0E00               	movlw	0
 37544  017812  6F0F               	movwf	(i1___fladd@b+1)& (0+255),b
 37545  017814  0E00               	movlw	0
 37546  017816  6F10               	movwf	(i1___fladd@b+2)& (0+255),b
 37547  017818  0E00               	movlw	0
 37548  01781A  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 37549                           
 37550                           ; BSR set to: 1
 37551  01781C  C11B  F11C         	movff	i1___fladd@aexp,i1___fladd@bexp
 37552  017820  D015               	goto	i1u1520_20
 37553  017822                     i1l3207:
 37554                           
 37555                           ; BSR set to: 1
 37556  017822  A11D               	btfss	i1___fladd@grs& (0+255),0,b
 37557  017824  D005               	goto	i1l13362
 37558                           
 37559                           ; BSR set to: 1
 37560  017826  90D8               	bcf	status,0,c
 37561  017828  311D               	rrcf	i1___fladd@grs& (0+255),w,b
 37562  01782A  0901               	iorlw	1
 37563  01782C  6F1D               	movwf	i1___fladd@grs& (0+255),b
 37564  01782E  D002               	goto	i1l13364
 37565  017830                     i1l13362:
 37566                           
 37567                           ; BSR set to: 1
 37568  017830  90D8               	bcf	status,0,c
 37569  017832  331D               	rrcf	i1___fladd@grs& (0+255),f,b
 37570  017834                     i1l13364:
 37571                           
 37572                           ; BSR set to: 1
 37573  017834  B10E               	btfsc	i1___fladd@b& (0+255),0,b
 37574                           
 37575                           ; BSR set to: 1
 37576  017836  8F1D               	bsf	i1___fladd@grs& (0+255),7,b
 37577                           
 37578                           ; BSR set to: 1
 37579  017838  3511               	rlcf	(i1___fladd@b+3)& (0+255),w,b
 37580  01783A  3311               	rrcf	(i1___fladd@b+3)& (0+255),f,b
 37581  01783C  3310               	rrcf	(i1___fladd@b+2)& (0+255),f,b
 37582  01783E  330F               	rrcf	(i1___fladd@b+1)& (0+255),f,b
 37583  017840  330E               	rrcf	i1___fladd@b& (0+255),f,b
 37584                           
 37585                           ; BSR set to: 1
 37586  017842  2B1C               	incf	i1___fladd@bexp& (0+255),f,b
 37587  017844                     i1l3206:
 37588                           
 37589                           ; BSR set to: 1
 37590  017844  511B               	movf	i1___fladd@aexp& (0+255),w,b
 37591  017846  5D1C               	subwf	i1___fladd@bexp& (0+255),w,b
 37592  017848  A0D8               	btfss	status,0,c
 37593  01784A  D7EB               	goto	i1l3207
 37594  01784C                     i1u1520_20:
 37595                           
 37596                           ; BSR set to: 1
 37597  01784C  BD1A               	btfsc	i1___fladd@signs& (0+255),6,b
 37598  01784E  D028               	goto	i1l13396
 37599                           
 37600                           ; BSR set to: 1
 37601  017850  511C               	movf	i1___fladd@bexp& (0+255),w,b
 37602  017852  A4D8               	btfss	status,2,c
 37603  017854  D009               	goto	i1l13378
 37604                           
 37605                           ; BSR set to: 1
 37606  017856  0E00               	movlw	0
 37607  017858  6F0E               	movwf	?i1___fladd& (0+255),b
 37608  01785A  0E00               	movlw	0
 37609  01785C  6F0F               	movwf	(?i1___fladd+1)& (0+255),b
 37610  01785E  0E00               	movlw	0
 37611  017860  6F10               	movwf	(?i1___fladd+2)& (0+255),b
 37612  017862  0E00               	movlw	0
 37613  017864  6F11               	movwf	(?i1___fladd+3)& (0+255),b
 37614  017866  0012               	return	
 37615  017868                     i1l13378:
 37616                           
 37617                           ; BSR set to: 1
 37618  017868  5112               	movf	i1___fladd@a& (0+255),w,b
 37619  01786A  270E               	addwf	i1___fladd@b& (0+255),f,b
 37620  01786C  5113               	movf	(i1___fladd@a+1)& (0+255),w,b
 37621  01786E  230F               	addwfc	(i1___fladd@b+1)& (0+255),f,b
 37622  017870  5114               	movf	(i1___fladd@a+2)& (0+255),w,b
 37623  017872  2310               	addwfc	(i1___fladd@b+2)& (0+255),f,b
 37624  017874  5115               	movf	(i1___fladd@a+3)& (0+255),w,b
 37625  017876  2311               	addwfc	(i1___fladd@b+3)& (0+255),f,b
 37626                           
 37627                           ; BSR set to: 1
 37628  017878  A111               	btfss	(i1___fladd@b+3)& (0+255),0,b
 37629  01787A  D071               	goto	i1u1533_20
 37630                           
 37631                           ; BSR set to: 1
 37632  01787C  A11D               	btfss	i1___fladd@grs& (0+255),0,b
 37633  01787E  D005               	goto	i1l13386
 37634                           
 37635                           ; BSR set to: 1
 37636  017880  90D8               	bcf	status,0,c
 37637  017882  311D               	rrcf	i1___fladd@grs& (0+255),w,b
 37638  017884  0901               	iorlw	1
 37639  017886  6F1D               	movwf	i1___fladd@grs& (0+255),b
 37640  017888  D002               	goto	i1l13388
 37641  01788A                     i1l13386:
 37642                           
 37643                           ; BSR set to: 1
 37644  01788A  90D8               	bcf	status,0,c
 37645  01788C  331D               	rrcf	i1___fladd@grs& (0+255),f,b
 37646  01788E                     i1l13388:
 37647                           
 37648                           ; BSR set to: 1
 37649  01788E  B10E               	btfsc	i1___fladd@b& (0+255),0,b
 37650                           
 37651                           ; BSR set to: 1
 37652  017890  8F1D               	bsf	i1___fladd@grs& (0+255),7,b
 37653                           
 37654                           ; BSR set to: 1
 37655  017892  3511               	rlcf	(i1___fladd@b+3)& (0+255),w,b
 37656  017894  3311               	rrcf	(i1___fladd@b+3)& (0+255),f,b
 37657  017896  3310               	rrcf	(i1___fladd@b+2)& (0+255),f,b
 37658  017898  330F               	rrcf	(i1___fladd@b+1)& (0+255),f,b
 37659  01789A  330E               	rrcf	i1___fladd@b& (0+255),f,b
 37660                           
 37661                           ; BSR set to: 1
 37662  01789C  2B1C               	incf	i1___fladd@bexp& (0+255),f,b
 37663  01789E  D05F               	goto	i1u1533_20
 37664  0178A0                     i1l13396:
 37665                           
 37666                           ; BSR set to: 1
 37667  0178A0  5112               	movf	i1___fladd@a& (0+255),w,b
 37668  0178A2  5D0E               	subwf	i1___fladd@b& (0+255),w,b
 37669  0178A4  5113               	movf	(i1___fladd@a+1)& (0+255),w,b
 37670  0178A6  590F               	subwfb	(i1___fladd@b+1)& (0+255),w,b
 37671  0178A8  5114               	movf	(i1___fladd@a+2)& (0+255),w,b
 37672  0178AA  5910               	subwfb	(i1___fladd@b+2)& (0+255),w,b
 37673  0178AC  5111               	movf	(i1___fladd@b+3)& (0+255),w,b
 37674  0178AE  0A80               	xorlw	128
 37675  0178B0  6F16               	movwf	??i1___fladd& (0+255),b
 37676  0178B2  5115               	movf	(i1___fladd@a+3)& (0+255),w,b
 37677  0178B4  0A80               	xorlw	128
 37678  0178B6  5916               	subwfb	??i1___fladd& (0+255),w,b
 37679  0178B8  B0D8               	btfsc	status,0,c
 37680  0178BA  D025               	goto	i1l13406
 37681                           
 37682                           ; BSR set to: 1
 37683  0178BC  510E               	movf	i1___fladd@b& (0+255),w,b
 37684  0178BE  5D12               	subwf	i1___fladd@a& (0+255),w,b
 37685  0178C0  6F16               	movwf	??i1___fladd& (0+255),b
 37686  0178C2  510F               	movf	(i1___fladd@b+1)& (0+255),w,b
 37687  0178C4  5913               	subwfb	(i1___fladd@a+1)& (0+255),w,b
 37688  0178C6  6F17               	movwf	(??i1___fladd+1)& (0+255),b
 37689  0178C8  5110               	movf	(i1___fladd@b+2)& (0+255),w,b
 37690  0178CA  5914               	subwfb	(i1___fladd@a+2)& (0+255),w,b
 37691  0178CC  6F18               	movwf	(??i1___fladd+2)& (0+255),b
 37692  0178CE  5111               	movf	(i1___fladd@b+3)& (0+255),w,b
 37693  0178D0  5915               	subwfb	(i1___fladd@a+3)& (0+255),w,b
 37694  0178D2  6F19               	movwf	(??i1___fladd+3)& (0+255),b
 37695  0178D4  0EFF               	movlw	255
 37696  0178D6  2516               	addwf	??i1___fladd& (0+255),w,b
 37697  0178D8  6F0E               	movwf	i1___fladd@b& (0+255),b
 37698  0178DA  0EFF               	movlw	255
 37699  0178DC  2117               	addwfc	(??i1___fladd+1)& (0+255),w,b
 37700  0178DE  6F0F               	movwf	(i1___fladd@b+1)& (0+255),b
 37701  0178E0  0EFF               	movlw	255
 37702  0178E2  2118               	addwfc	(??i1___fladd+2)& (0+255),w,b
 37703  0178E4  6F10               	movwf	(i1___fladd@b+2)& (0+255),b
 37704  0178E6  0EFF               	movlw	255
 37705  0178E8  2119               	addwfc	(??i1___fladd+3)& (0+255),w,b
 37706  0178EA  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 37707  0178EC  0E80               	movlw	128
 37708  0178EE  1B1A               	xorwf	i1___fladd@signs& (0+255),f,b
 37709                           
 37710                           ; BSR set to: 1
 37711  0178F0  6D1D               	negf	i1___fladd@grs& (0+255),b
 37712                           
 37713                           ; BSR set to: 1
 37714  0178F2  511D               	movf	i1___fladd@grs& (0+255),w,b
 37715  0178F4  A4D8               	btfss	status,2,c
 37716  0178F6  D00F               	goto	i1l3222
 37717                           
 37718                           ; BSR set to: 1
 37719  0178F8  0E01               	movlw	1
 37720  0178FA  270E               	addwf	i1___fladd@b& (0+255),f,b
 37721  0178FC  0E00               	movlw	0
 37722  0178FE  230F               	addwfc	(i1___fladd@b+1)& (0+255),f,b
 37723  017900  2310               	addwfc	(i1___fladd@b+2)& (0+255),f,b
 37724  017902  2311               	addwfc	(i1___fladd@b+3)& (0+255),f,b
 37725  017904  D008               	goto	i1l3222
 37726  017906                     i1l13406:
 37727                           
 37728                           ; BSR set to: 1
 37729  017906  5112               	movf	i1___fladd@a& (0+255),w,b
 37730  017908  5F0E               	subwf	i1___fladd@b& (0+255),f,b
 37731  01790A  5113               	movf	(i1___fladd@a+1)& (0+255),w,b
 37732  01790C  5B0F               	subwfb	(i1___fladd@b+1)& (0+255),f,b
 37733  01790E  5114               	movf	(i1___fladd@a+2)& (0+255),w,b
 37734  017910  5B10               	subwfb	(i1___fladd@b+2)& (0+255),f,b
 37735  017912  5115               	movf	(i1___fladd@a+3)& (0+255),w,b
 37736  017914  5B11               	subwfb	(i1___fladd@b+3)& (0+255),f,b
 37737  017916                     i1l3222:
 37738                           
 37739                           ; BSR set to: 1
 37740  017916  510E               	movf	i1___fladd@b& (0+255),w,b
 37741  017918  110F               	iorwf	(i1___fladd@b+1)& (0+255),w,b
 37742  01791A  1110               	iorwf	(i1___fladd@b+2)& (0+255),w,b
 37743  01791C  1111               	iorwf	(i1___fladd@b+3)& (0+255),w,b
 37744  01791E  A4D8               	btfss	status,2,c
 37745  017920  D01C               	goto	i1l13430
 37746                           
 37747                           ; BSR set to: 1
 37748  017922  511D               	movf	i1___fladd@grs& (0+255),w,b
 37749  017924  A4D8               	btfss	status,2,c
 37750  017926  D019               	goto	i1l13430
 37751                           
 37752                           ; BSR set to: 1
 37753  017928  0E00               	movlw	0
 37754  01792A  6F0E               	movwf	?i1___fladd& (0+255),b
 37755  01792C  0E00               	movlw	0
 37756  01792E  6F0F               	movwf	(?i1___fladd+1)& (0+255),b
 37757  017930  0E00               	movlw	0
 37758  017932  6F10               	movwf	(?i1___fladd+2)& (0+255),b
 37759  017934  0E00               	movlw	0
 37760  017936  6F11               	movwf	(?i1___fladd+3)& (0+255),b
 37761  017938  0012               	return	
 37762  01793A                     i1l13414:
 37763                           
 37764                           ; BSR set to: 1
 37765  01793A  90D8               	bcf	status,0,c
 37766  01793C  370E               	rlcf	i1___fladd@b& (0+255),f,b
 37767  01793E  370F               	rlcf	(i1___fladd@b+1)& (0+255),f,b
 37768  017940  3710               	rlcf	(i1___fladd@b+2)& (0+255),f,b
 37769  017942  3711               	rlcf	(i1___fladd@b+3)& (0+255),f,b
 37770                           
 37771                           ; BSR set to: 1
 37772  017944  BF1D               	btfsc	i1___fladd@grs& (0+255),7,b
 37773                           
 37774                           ; BSR set to: 1
 37775  017946  810E               	bsf	i1___fladd@b& (0+255),0,b
 37776                           
 37777                           ; BSR set to: 1
 37778  017948  A11D               	btfss	i1___fladd@grs& (0+255),0,b
 37779  01794A  D002               	goto	i1l13424
 37780                           
 37781                           ; BSR set to: 1
 37782  01794C  80D8               	bsf	status,0,c
 37783  01794E  D001               	goto	L33
 37784  017950                     i1l13424:
 37785                           
 37786                           ; BSR set to: 1
 37787  017950  90D8               	bcf	status,0,c
 37788  017952                     L33:
 37789  017952  371D               	rlcf	i1___fladd@grs& (0+255),f,b
 37790                           
 37791                           ; BSR set to: 1
 37792  017954  511C               	movf	i1___fladd@bexp& (0+255),w,b
 37793  017956  A4D8               	btfss	status,2,c
 37794                           
 37795                           ; BSR set to: 1
 37796  017958  071C               	decf	i1___fladd@bexp& (0+255),f,b
 37797  01795A                     i1l13430:
 37798                           
 37799                           ; BSR set to: 1
 37800  01795A  AF10               	btfss	(i1___fladd@b+2)& (0+255),7,b
 37801  01795C  D7EE               	goto	i1l13414
 37802  01795E                     i1u1533_20:
 37803                           
 37804                           ; BSR set to: 1
 37805  01795E  0E00               	movlw	0
 37806  017960  6F1B               	movwf	i1___fladd@aexp& (0+255),b
 37807                           
 37808                           ; BSR set to: 1
 37809  017962  AF1D               	btfss	i1___fladd@grs& (0+255),7,b
 37810  017964  D00B               	goto	i1l3231
 37811                           
 37812                           ; BSR set to: 1
 37813  017966  C11D  F116         	movff	i1___fladd@grs,??i1___fladd
 37814  01796A  0E7F               	movlw	127
 37815  01796C  1716               	andwf	??i1___fladd& (0+255),f,b
 37816  01796E  B4D8               	btfsc	status,2,c
 37817  017970  D003               	goto	i1l3232
 37818  017972                     i1u1535_20:
 37819                           
 37820                           ; BSR set to: 1
 37821  017972  0E01               	movlw	1
 37822  017974  6F1B               	movwf	i1___fladd@aexp& (0+255),b
 37823  017976  D002               	goto	i1l3231
 37824  017978                     i1l3232:
 37825                           
 37826                           ; BSR set to: 1
 37827  017978  B10E               	btfsc	i1___fladd@b& (0+255),0,b
 37828  01797A  D7FB               	goto	i1u1535_20
 37829  01797C                     i1l3231:
 37830                           
 37831                           ; BSR set to: 1
 37832  01797C  511B               	movf	i1___fladd@aexp& (0+255),w,b
 37833  01797E  B4D8               	btfsc	status,2,c
 37834  017980  D020               	goto	i1l13450
 37835                           
 37836                           ; BSR set to: 1
 37837  017982  0E01               	movlw	1
 37838  017984  270E               	addwf	i1___fladd@b& (0+255),f,b
 37839  017986  0E00               	movlw	0
 37840  017988  230F               	addwfc	(i1___fladd@b+1)& (0+255),f,b
 37841  01798A  2310               	addwfc	(i1___fladd@b+2)& (0+255),f,b
 37842  01798C  2311               	addwfc	(i1___fladd@b+3)& (0+255),f,b
 37843                           
 37844                           ; BSR set to: 1
 37845  01798E  A111               	btfss	(i1___fladd@b+3)& (0+255),0,b
 37846  017990  D018               	goto	i1l13450
 37847                           
 37848                           ; BSR set to: 1
 37849  017992  C10E  F116         	movff	i1___fladd@b,??i1___fladd
 37850  017996  C10F  F117         	movff	i1___fladd@b+1,??i1___fladd+1
 37851  01799A  C110  F118         	movff	i1___fladd@b+2,??i1___fladd+2
 37852  01799E  C111  F119         	movff	i1___fladd@b+3,??i1___fladd+3
 37853  0179A2  3519               	rlcf	(??i1___fladd+3)& (0+255),w,b
 37854  0179A4  3319               	rrcf	(??i1___fladd+3)& (0+255),f,b
 37855  0179A6  3318               	rrcf	(??i1___fladd+2)& (0+255),f,b
 37856  0179A8  3317               	rrcf	(??i1___fladd+1)& (0+255),f,b
 37857  0179AA  3316               	rrcf	??i1___fladd& (0+255),f,b
 37858  0179AC  C116  F10E         	movff	??i1___fladd,i1___fladd@b
 37859  0179B0  C117  F10F         	movff	??i1___fladd+1,i1___fladd@b+1
 37860  0179B4  C118  F110         	movff	??i1___fladd+2,i1___fladd@b+2
 37861  0179B8  C119  F111         	movff	??i1___fladd+3,i1___fladd@b+3
 37862  0179BC  291C               	incf	i1___fladd@bexp& (0+255),w,b
 37863  0179BE  A4D8               	btfss	status,2,c
 37864                           
 37865                           ; BSR set to: 1
 37866  0179C0  2B1C               	incf	i1___fladd@bexp& (0+255),f,b
 37867  0179C2                     i1l13450:
 37868                           
 37869                           ; BSR set to: 1
 37870  0179C2  291C               	incf	i1___fladd@bexp& (0+255),w,b
 37871  0179C4  B4D8               	btfsc	status,2,c
 37872  0179C6  D003               	goto	i1u1541_20
 37873                           
 37874                           ; BSR set to: 1
 37875  0179C8  511C               	movf	i1___fladd@bexp& (0+255),w,b
 37876  0179CA  A4D8               	btfss	status,2,c
 37877  0179CC  D00D               	goto	i1l13458
 37878  0179CE                     i1u1541_20:
 37879                           
 37880                           ; BSR set to: 1
 37881  0179CE  0E00               	movlw	0
 37882  0179D0  6F0E               	movwf	i1___fladd@b& (0+255),b
 37883  0179D2  0E00               	movlw	0
 37884  0179D4  6F0F               	movwf	(i1___fladd@b+1)& (0+255),b
 37885  0179D6  0E00               	movlw	0
 37886  0179D8  6F10               	movwf	(i1___fladd@b+2)& (0+255),b
 37887  0179DA  0E00               	movlw	0
 37888  0179DC  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 37889  0179DE  511C               	movf	i1___fladd@bexp& (0+255),w,b
 37890  0179E0  A4D8               	btfss	status,2,c
 37891  0179E2  D002               	goto	i1l13458
 37892                           
 37893                           ; BSR set to: 1
 37894  0179E4  0E00               	movlw	0
 37895  0179E6  6F1A               	movwf	i1___fladd@signs& (0+255),b
 37896  0179E8                     i1l13458:
 37897                           
 37898                           ; BSR set to: 1
 37899  0179E8  A11C               	btfss	i1___fladd@bexp& (0+255),0,b
 37900  0179EA  D002               	goto	i1l13462
 37901                           
 37902                           ; BSR set to: 1
 37903  0179EC  8F10               	bsf	(i1___fladd@b+2)& (0+255),7,b
 37904  0179EE  D001               	goto	i1l13464
 37905  0179F0                     i1l13462:
 37906                           
 37907                           ; BSR set to: 1
 37908  0179F0  9F10               	bcf	(i1___fladd@b+2)& (0+255),7,b
 37909  0179F2                     i1l13464:
 37910                           
 37911                           ; BSR set to: 1
 37912  0179F2  90D8               	bcf	status,0,c
 37913  0179F4  311C               	rrcf	i1___fladd@bexp& (0+255),w,b
 37914  0179F6  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 37915                           
 37916                           ; BSR set to: 1
 37917  0179F8  BF1A               	btfsc	i1___fladd@signs& (0+255),7,b
 37918                           
 37919                           ; BSR set to: 1
 37920  0179FA  8F11               	bsf	(i1___fladd@b+3)& (0+255),7,b
 37921                           
 37922                           ; BSR set to: 1
 37923  0179FC  C10E  F10E         	movff	i1___fladd@b,?i1___fladd
 37924  017A00  C10F  F10F         	movff	i1___fladd@b+1,?i1___fladd+1
 37925  017A04  C110  F110         	movff	i1___fladd@b+2,?i1___fladd+2
 37926  017A08  C111  F111         	movff	i1___fladd@b+3,?i1___fladd+3
 37927                           
 37928                           ; BSR set to: 1
 37929  017A0C  0012               	return		;funcret
 37930  017A0E                     __end_ofi1___fladd:
 37931                           	opt callstack 0
 37932                           
 37933 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 37934 ;; Defined at:
 37935 ;;		line 101 in file "mcc_generated_files/interrupt_manager.c"
 37936 ;; Parameters:    Size  Location     Type
 37937 ;;		None
 37938 ;; Auto vars:     Size  Location     Type
 37939 ;;		None
 37940 ;; Return value:  Size  Location     Type
 37941 ;;                  1    wreg      void 
 37942 ;; Registers used:
 37943 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37944 ;; Tracked objects:
 37945 ;;		On entry : 0/0
 37946 ;;		On exit  : 0/0
 37947 ;;		Unchanged: 0/0
 37948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37951 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37952 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37953 ;;Total ram usage:       12 bytes
 37954 ;; Hardware stack levels used:    1
 37955 ;; Hardware stack levels required when called:    5
 37956 ;; This function calls:
 37957 ;;		Absolute function
 37958 ;;		_ADCC_ThresholdISR
 37959 ;;		_EUSART2_Receive_ISR
 37960 ;;		_INT1_ISR
 37961 ;;		_INT2_ISR
 37962 ;;		_PIN_MANAGER_IOC
 37963 ;;		_TMR0_ISR
 37964 ;;		_TMR1_ISR
 37965 ;; This function is called by:
 37966 ;;		Interrupt level 2
 37967 ;; This function uses a non-reentrant model
 37968 ;;
 37969                           
 37970                           	psect	intcode
 37971  000008                     __pintcode:
 37972                           	opt callstack 0
 37973  000008                     _INTERRUPT_InterruptManagerHigh:
 37974                           	opt callstack 12
 37975                           
 37976                           ; BSR set to: 1
 37977                           ;incstack = 0
 37978  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 37979  00000A  EF34  F0D4         	goto	int_func
 37980                           
 37981                           	psect	intcode_body
 37982  01A868                     __pintcode_body:
 37983                           	opt callstack 12
 37984  01A868                     int_func:
 37985                           	opt callstack 12
 37986  01A868  CFFA F0AD          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 37987  01A86C  CFFB F0AE          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 37988  01A870  CFE9 F0AF          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 37989  01A874  CFEA F0B0          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 37990  01A878  CFD9 F0B1          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+4
 37991  01A87C  CFDA F0B2          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+5
 37992  01A880  CFF3 F0B3          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+6
 37993  01A884  CFF4 F0B4          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+7
 37994  01A888  CFF6 F0B5          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+8
 37995  01A88C  CFF7 F0B6          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+9
 37996  01A890  CFF8 F0B7          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+10
 37997  01A894  CFF5 F0B8          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+11
 37998                           
 37999                           ;interrupt_manager.c: 104: if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 38000  01A898  010E               	movlb	14	; () banked
 38001  01A89A  B1C6               	btfsc	198,0,b	;volatile
 38002                           
 38003                           ; BSR set to: 14
 38004  01A89C  A1CE               	btfss	206,0,b	;volatile
 38005  01A89E  D003               	goto	i2l224
 38006                           
 38007                           ; BSR set to: 14
 38008                           ;interrupt_manager.c: 105: {;interrupt_manager.c: 106: TMR1_ISR();
 38009  01A8A0  EC37  F0E1         	call	_TMR1_ISR	;wreg free
 38010                           
 38011                           ;interrupt_manager.c: 107: }
 38012  01A8A4  D02D               	goto	i2l233
 38013  01A8A6                     i2l224:
 38014                           
 38015                           ; BSR set to: 14
 38016                           ;interrupt_manager.c: 108: else if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 38017  01A8A6  BBC2               	btfsc	194,5,b	;volatile
 38018                           
 38019                           ; BSR set to: 14
 38020  01A8A8  ABCA               	btfss	202,5,b	;volatile
 38021  01A8AA  D003               	goto	i2l226
 38022                           
 38023                           ; BSR set to: 14
 38024                           ;interrupt_manager.c: 109: {;interrupt_manager.c: 110: TMR0_ISR();
 38025  01A8AC  ECA1  F0E2         	call	_TMR0_ISR	;wreg free
 38026                           
 38027                           ;interrupt_manager.c: 111: }
 38028  01A8B0  D027               	goto	i2l233
 38029  01A8B2                     i2l226:
 38030                           
 38031                           ; BSR set to: 14
 38032                           ;interrupt_manager.c: 112: else if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 38033  01A8B2  BFC5               	btfsc	197,7,b	;volatile
 38034                           
 38035                           ; BSR set to: 14
 38036  01A8B4  AFCD               	btfss	205,7,b	;volatile
 38037  01A8B6  D00D               	goto	i2l228
 38038                           
 38039                           ; BSR set to: 14
 38040                           ;interrupt_manager.c: 113: {;interrupt_manager.c: 114: EUSART2_RxDefaultInterruptHandler
      +                          ();
 38041  01A8B8  D801               	call	i2u2876_48
 38042  01A8BA  D022               	goto	i2l233
 38043  01A8BC                     i2u2876_48:
 38044  01A8BC  0005               	push	
 38045  01A8BE  6EFA               	movwf	pclath,c
 38046  01A8C0  0100               	movlb	0	; () banked
 38047  01A8C2  51CF               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 38048  01A8C4  6EFD               	movwf	tosl,c
 38049  01A8C6  51D0               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 38050  01A8C8  6EFE               	movwf	tosh,c
 38051  01A8CA  51D1               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 38052  01A8CC  6EFF               	movwf	tosu,c
 38053  01A8CE  50FA               	movf	pclath,w,c
 38054  01A8D0  0012               	return		;indir
 38055  01A8D2                     i2l228:
 38056                           
 38057                           ; BSR set to: 14
 38058                           ;interrupt_manager.c: 116: else if(PIE1bits.ADTIE == 1 && PIR1bits.ADTIF == 1)
 38059  01A8D2  B3C3               	btfsc	195,1,b	;volatile
 38060                           
 38061                           ; BSR set to: 14
 38062  01A8D4  A3CB               	btfss	203,1,b	;volatile
 38063  01A8D6  D003               	goto	i2l230
 38064                           
 38065                           ; BSR set to: 14
 38066                           ;interrupt_manager.c: 117: {;interrupt_manager.c: 118: ADCC_ThresholdISR();
 38067  01A8D8  ECB5  F0E2         	call	_ADCC_ThresholdISR	;wreg free
 38068                           
 38069                           ;interrupt_manager.c: 119: }
 38070  01A8DC  D011               	goto	i2l233
 38071  01A8DE                     i2l230:
 38072                           
 38073                           ; BSR set to: 14
 38074                           ;interrupt_manager.c: 120: else if(PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1)
 38075  01A8DE  B9C2               	btfsc	194,4,b	;volatile
 38076                           
 38077                           ; BSR set to: 14
 38078  01A8E0  A9CA               	btfss	202,4,b	;volatile
 38079  01A8E2  D003               	goto	i2l232
 38080                           
 38081                           ; BSR set to: 14
 38082                           ;interrupt_manager.c: 121: {;interrupt_manager.c: 122: PIN_MANAGER_IOC();
 38083  01A8E4  EC70  F0E4         	call	_PIN_MANAGER_IOC	;wreg free
 38084                           
 38085                           ;interrupt_manager.c: 123: }
 38086  01A8E8  D00B               	goto	i2l233
 38087  01A8EA                     i2l232:
 38088                           
 38089                           ; BSR set to: 14
 38090                           ;interrupt_manager.c: 124: else if(PIE0bits.INT1IE == 1 && PIR0bits.INT1IF == 1)
 38091  01A8EA  B3C2               	btfsc	194,1,b	;volatile
 38092                           
 38093                           ; BSR set to: 14
 38094  01A8EC  A3CA               	btfss	202,1,b	;volatile
 38095  01A8EE  D003               	goto	i2l234
 38096                           
 38097                           ; BSR set to: 14
 38098                           ;interrupt_manager.c: 125: {;interrupt_manager.c: 126: INT1_ISR();
 38099  01A8F0  EC68  F0E5         	call	_INT1_ISR	;wreg free
 38100                           
 38101                           ;interrupt_manager.c: 127: }
 38102  01A8F4  D005               	goto	i2l233
 38103  01A8F6                     i2l234:
 38104                           
 38105                           ; BSR set to: 14
 38106                           ;interrupt_manager.c: 128: else if(PIE0bits.INT2IE == 1 && PIR0bits.INT2IF == 1)
 38107  01A8F6  B5C2               	btfsc	194,2,b	;volatile
 38108                           
 38109                           ; BSR set to: 14
 38110  01A8F8  A5CA               	btfss	202,2,b	;volatile
 38111  01A8FA  D002               	goto	i2l233
 38112                           
 38113                           ; BSR set to: 14
 38114                           ;interrupt_manager.c: 129: {;interrupt_manager.c: 130: INT2_ISR();
 38115  01A8FC  EC63  F0E5         	call	_INT2_ISR	;wreg free
 38116  01A900                     i2l233:
 38117                           
 38118                           ; BSR set to: 14
 38119  01A900  C0B8  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+11,tablat
 38120  01A904  C0B7  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptru
 38121  01A908  C0B6  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+9,tblptrh
 38122  01A90C  C0B5  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+8,tblptrl
 38123  01A910  C0B4  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+7,prodh
 38124  01A914  C0B3  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+6,prodl
 38125  01A918  C0B2  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr2h
 38126  01A91C  C0B1  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr2l
 38127  01A920  C0B0  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 38128  01A924  C0AF  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 38129  01A928  C0AE  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 38130  01A92C  C0AD  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 38131  01A930  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 38132  01A932  0011               	retfie		f
 38133  01A934                     __end_of_INTERRUPT_InterruptManagerHigh:
 38134                           	opt callstack 0
 38135                           
 38136 ;; *************** function _TMR1_ISR *****************
 38137 ;; Defined at:
 38138 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 38139 ;; Parameters:    Size  Location     Type
 38140 ;;		None
 38141 ;; Auto vars:     Size  Location     Type
 38142 ;;		None
 38143 ;; Return value:  Size  Location     Type
 38144 ;;                  1    wreg      void 
 38145 ;; Registers used:
 38146 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 38147 ;; Tracked objects:
 38148 ;;		On entry : 0/0
 38149 ;;		On exit  : 0/0
 38150 ;;		Unchanged: 0/0
 38151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38156 ;;Total ram usage:        0 bytes
 38157 ;; Hardware stack levels used:    1
 38158 ;; Hardware stack levels required when called:    3
 38159 ;; This function calls:
 38160 ;;		Absolute function
 38161 ;;		_QIErrorTimerHandler
 38162 ;;		_TMR1_DefaultInterruptHandler
 38163 ;;		i2_TMR1_WriteTimer
 38164 ;; This function is called by:
 38165 ;;		_INTERRUPT_InterruptManagerHigh
 38166 ;; This function uses a non-reentrant model
 38167 ;;
 38168                           
 38169                           	psect	text150
 38170  01C26E                     __ptext150:
 38171                           	opt callstack 0
 38172  01C26E                     _TMR1_ISR:
 38173                           	opt callstack 13
 38174                           
 38175                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 38176                           
 38177                           ;incstack = 0
 38178  01C26E  010E               	movlb	14	; () banked
 38179  01C270  91CE               	bcf	206,0,b	;volatile
 38180                           
 38181                           ; BSR set to: 14
 38182                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 38183  01C272  C186  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
 38184  01C276  C187  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
 38185  01C27A  ECDE  F0E3         	call	i2_TMR1_WriteTimer	;wreg free
 38186                           
 38187                           ;tmr1.c: 171: if(TMR1_InterruptHandler)
 38188  01C27E  0101               	movlb	1	; () banked
 38189  01C280  516E               	movf	_TMR1_InterruptHandler& (0+255),w,b
 38190  01C282  116F               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 38191  01C284  1170               	iorwf	(_TMR1_InterruptHandler+2)& (0+255),w,b
 38192  01C286  B4D8               	btfsc	status,2,c
 38193  01C288  0012               	return	
 38194                           
 38195                           ; BSR set to: 1
 38196                           ;tmr1.c: 172: {;tmr1.c: 173: TMR1_InterruptHandler();
 38197  01C28A  D801               	call	i2u1870_48
 38198  01C28C  0012               	return	
 38199  01C28E                     i2u1870_48:
 38200  01C28E  0005               	push	
 38201  01C290  6EFA               	movwf	pclath,c
 38202  01C292  516E               	movf	_TMR1_InterruptHandler& (0+255),w,b
 38203  01C294  6EFD               	movwf	tosl,c
 38204  01C296  516F               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 38205  01C298  6EFE               	movwf	tosh,c
 38206  01C29A  5170               	movf	(_TMR1_InterruptHandler+2)& (0+255),w,b
 38207  01C29C  6EFF               	movwf	tosu,c
 38208  01C29E  50FA               	movf	pclath,w,c
 38209  01C2A0  0012               	return		;indir
 38210  01C2A2                     __end_of_TMR1_ISR:
 38211                           	opt callstack 0
 38212                           
 38213 ;; *************** function _QIErrorTimerHandler *****************
 38214 ;; Defined at:
 38215 ;;		line 118 in file "NXQ_charge_state.c"
 38216 ;; Parameters:    Size  Location     Type
 38217 ;;		None
 38218 ;; Auto vars:     Size  Location     Type
 38219 ;;		None
 38220 ;; Return value:  Size  Location     Type
 38221 ;;                  1    wreg      void 
 38222 ;; Registers used:
 38223 ;;		wreg, status,2, cstack
 38224 ;; Tracked objects:
 38225 ;;		On entry : 0/0
 38226 ;;		On exit  : 0/0
 38227 ;;		Unchanged: 0/0
 38228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38233 ;;Total ram usage:        0 bytes
 38234 ;; Hardware stack levels used:    1
 38235 ;; Hardware stack levels required when called:    2
 38236 ;; This function calls:
 38237 ;;		i2_TMR1_Reload
 38238 ;;		i2_TMR1_StopTimer
 38239 ;; This function is called by:
 38240 ;;		_main
 38241 ;;		_TMR1_ISR
 38242 ;; This function uses a non-reentrant model
 38243 ;;
 38244                           
 38245                           	psect	text151
 38246  01C88A                     __ptext151:
 38247                           	opt callstack 0
 38248  01C88A                     _QIErrorTimerHandler:
 38249                           	opt callstack 13
 38250                           
 38251                           ;NXQ_charge_state.c: 120: if (PORTBbits.RB2 == 1 && PORTBbits.RB3 == 0) {
 38252                           
 38253                           ;incstack = 0
 38254  01C88A  B48E               	btfsc	3982,2,c	;volatile
 38255  01C88C  B68E               	btfsc	3982,3,c	;volatile
 38256  01C88E  D003               	goto	i2l15236
 38257                           
 38258                           ;NXQ_charge_state.c: 122: nxq_charge_state = QI_Error;
 38259  01C890  0E03               	movlw	3
 38260  01C892  0101               	movlb	1	; () banked
 38261  01C894  6F8C               	movwf	_nxq_charge_state& (0+255),b
 38262  01C896                     i2l15236:
 38263                           
 38264                           ;NXQ_charge_state.c: 124: };NXQ_charge_state.c: 126: TMR1_StopTimer();
 38265  01C896  EC8C  F0E5         	call	i2_TMR1_StopTimer	;wreg free
 38266                           
 38267                           ;NXQ_charge_state.c: 127: TMR1_Reload();
 38268  01C89A  EC33  F0E5         	call	i2_TMR1_Reload	;wreg free
 38269  01C89E  0012               	return		;funcret
 38270  01C8A0                     __end_of_QIErrorTimerHandler:
 38271                           	opt callstack 0
 38272                           
 38273 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 38274 ;; Defined at:
 38275 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 38276 ;; Parameters:    Size  Location     Type
 38277 ;;		None
 38278 ;; Auto vars:     Size  Location     Type
 38279 ;;		None
 38280 ;; Return value:  Size  Location     Type
 38281 ;;                  1    wreg      void 
 38282 ;; Registers used:
 38283 ;;		None
 38284 ;; Tracked objects:
 38285 ;;		On entry : 0/0
 38286 ;;		On exit  : 0/0
 38287 ;;		Unchanged: 0/0
 38288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38293 ;;Total ram usage:        0 bytes
 38294 ;; Hardware stack levels used:    1
 38295 ;; This function calls:
 38296 ;;		Nothing
 38297 ;; This function is called by:
 38298 ;;		_TMR1_Initialize
 38299 ;;		_TMR1_ISR
 38300 ;; This function uses a non-reentrant model
 38301 ;;
 38302                           
 38303                           	psect	text152
 38304  01CB36                     __ptext152:
 38305                           	opt callstack 0
 38306  01CB36                     _TMR1_DefaultInterruptHandler:
 38307                           	opt callstack 15
 38308                           
 38309                           ;incstack = 0
 38310  01CB36  0012               	return		;funcret
 38311  01CB38                     __end_of_TMR1_DefaultInterruptHandler:
 38312                           	opt callstack 0
 38313                           
 38314 ;; *************** function i2_TMR1_StopTimer *****************
 38315 ;; Defined at:
 38316 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 38317 ;; Parameters:    Size  Location     Type
 38318 ;;		None
 38319 ;; Auto vars:     Size  Location     Type
 38320 ;;		None
 38321 ;; Return value:  Size  Location     Type
 38322 ;;                  1    wreg      void 
 38323 ;; Registers used:
 38324 ;;		None
 38325 ;; Tracked objects:
 38326 ;;		On entry : 0/0
 38327 ;;		On exit  : 0/0
 38328 ;;		Unchanged: 0/0
 38329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38334 ;;Total ram usage:        0 bytes
 38335 ;; Hardware stack levels used:    1
 38336 ;; This function calls:
 38337 ;;		Nothing
 38338 ;; This function is called by:
 38339 ;;		_QIErrorTimerHandler
 38340 ;; This function uses a non-reentrant model
 38341 ;;
 38342                           
 38343                           	psect	text153
 38344  01CB18                     __ptext153:
 38345                           	opt callstack 0
 38346  01CB18                     i2_TMR1_StopTimer:
 38347                           	opt callstack 14
 38348                           
 38349                           ;tmr1.c: 108: T1CONbits.TMR1ON = 0;
 38350                           
 38351                           ;incstack = 0
 38352  01CB18  90CF               	bcf	4047,0,c	;volatile
 38353  01CB1A  0012               	return		;funcret
 38354  01CB1C                     __end_ofi2_TMR1_StopTimer:
 38355                           	opt callstack 0
 38356                           
 38357 ;; *************** function _TMR0_ISR *****************
 38358 ;; Defined at:
 38359 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 38360 ;; Parameters:    Size  Location     Type
 38361 ;;		None
 38362 ;; Auto vars:     Size  Location     Type
 38363 ;;		None
 38364 ;; Return value:  Size  Location     Type
 38365 ;;                  1    wreg      void 
 38366 ;; Registers used:
 38367 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 38368 ;; Tracked objects:
 38369 ;;		On entry : 0/0
 38370 ;;		On exit  : 0/0
 38371 ;;		Unchanged: 0/0
 38372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38377 ;;Total ram usage:        0 bytes
 38378 ;; Hardware stack levels used:    1
 38379 ;; Hardware stack levels required when called:    2
 38380 ;; This function calls:
 38381 ;;		Absolute function
 38382 ;;		_TMR0_DefaultInterruptHandler
 38383 ;;		_heartbeatTimerHandler
 38384 ;; This function is called by:
 38385 ;;		_INTERRUPT_InterruptManagerHigh
 38386 ;; This function uses a non-reentrant model
 38387 ;;
 38388                           
 38389                           	psect	text154
 38390  01C542                     __ptext154:
 38391                           	opt callstack 0
 38392  01C542                     _TMR0_ISR:
 38393                           	opt callstack 14
 38394                           
 38395                           ;tmr0.c: 124: PIR0bits.TMR0IF = 0;
 38396                           
 38397                           ;incstack = 0
 38398  01C542  010E               	movlb	14	; () banked
 38399  01C544  9BCA               	bcf	202,5,b	;volatile
 38400                           
 38401                           ; BSR set to: 14
 38402                           ;tmr0.c: 125: if(TMR0_InterruptHandler)
 38403  01C546  0100               	movlb	0	; () banked
 38404  01C548  51C9               	movf	_TMR0_InterruptHandler& (0+255),w,b
 38405  01C54A  11CA               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 38406  01C54C  11CB               	iorwf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 38407  01C54E  B4D8               	btfsc	status,2,c
 38408  01C550  0012               	return	
 38409                           
 38410                           ; BSR set to: 0
 38411                           ;tmr0.c: 126: {;tmr0.c: 127: TMR0_InterruptHandler();
 38412  01C552  D801               	call	i2u2749_48
 38413  01C554  0012               	return	
 38414  01C556                     i2u2749_48:
 38415  01C556  0005               	push	
 38416  01C558  6EFA               	movwf	pclath,c
 38417  01C55A  51C9               	movf	_TMR0_InterruptHandler& (0+255),w,b
 38418  01C55C  6EFD               	movwf	tosl,c
 38419  01C55E  51CA               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 38420  01C560  6EFE               	movwf	tosh,c
 38421  01C562  51CB               	movf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 38422  01C564  6EFF               	movwf	tosu,c
 38423  01C566  50FA               	movf	pclath,w,c
 38424  01C568  0012               	return		;indir
 38425  01C56A                     __end_of_TMR0_ISR:
 38426                           	opt callstack 0
 38427                           
 38428 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 38429 ;; Defined at:
 38430 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 38431 ;; Parameters:    Size  Location     Type
 38432 ;;		None
 38433 ;; Auto vars:     Size  Location     Type
 38434 ;;		None
 38435 ;; Return value:  Size  Location     Type
 38436 ;;                  1    wreg      void 
 38437 ;; Registers used:
 38438 ;;		None
 38439 ;; Tracked objects:
 38440 ;;		On entry : 0/0
 38441 ;;		On exit  : 0/0
 38442 ;;		Unchanged: 0/0
 38443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38448 ;;Total ram usage:        0 bytes
 38449 ;; Hardware stack levels used:    1
 38450 ;; This function calls:
 38451 ;;		Nothing
 38452 ;; This function is called by:
 38453 ;;		_TMR0_Initialize
 38454 ;;		_TMR0_ISR
 38455 ;; This function uses a non-reentrant model
 38456 ;;
 38457                           
 38458                           	psect	text155
 38459  01CB38                     __ptext155:
 38460                           	opt callstack 0
 38461  01CB38                     _TMR0_DefaultInterruptHandler:
 38462                           	opt callstack 15
 38463                           
 38464                           ;incstack = 0
 38465  01CB38  0012               	return		;funcret
 38466  01CB3A                     __end_of_TMR0_DefaultInterruptHandler:
 38467                           	opt callstack 0
 38468                           
 38469 ;; *************** function _heartbeatTimerHandler *****************
 38470 ;; Defined at:
 38471 ;;		line 21 in file "heartbeat_timer.c"
 38472 ;; Parameters:    Size  Location     Type
 38473 ;;		None
 38474 ;; Auto vars:     Size  Location     Type
 38475 ;;		None
 38476 ;; Return value:  Size  Location     Type
 38477 ;;                  1    wreg      void 
 38478 ;; Registers used:
 38479 ;;		wreg, status,2, status,0, cstack
 38480 ;; Tracked objects:
 38481 ;;		On entry : 0/0
 38482 ;;		On exit  : 0/0
 38483 ;;		Unchanged: 0/0
 38484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38487 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38488 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38489 ;;Total ram usage:        1 bytes
 38490 ;; Hardware stack levels used:    1
 38491 ;; Hardware stack levels required when called:    1
 38492 ;; This function calls:
 38493 ;;		i2___fladd
 38494 ;;		i2___llmod
 38495 ;; This function is called by:
 38496 ;;		_main
 38497 ;;		_TMR0_ISR
 38498 ;; This function uses a non-reentrant model
 38499 ;;
 38500                           
 38501                           	psect	text156
 38502  019AC0                     __ptext156:
 38503                           	opt callstack 0
 38504  019AC0                     _heartbeatTimerHandler:
 38505                           	opt callstack 14
 38506                           
 38507                           ;heartbeat_timer.c: 24: LATBbits.LATB6 = ~(LATBbits.LATB6);
 38508                           
 38509                           ;incstack = 0
 38510  019AC0  AC84               	btfss	3972,6,c	;volatile
 38511  019AC2  D002               	goto	i2u2715_40
 38512  019AC4  0E01               	movlw	1
 38513  019AC6  D001               	goto	i2u2715_46
 38514  019AC8                     i2u2715_40:
 38515  019AC8  0E00               	movlw	0
 38516  019ACA                     i2u2715_46:
 38517  019ACA  0AFF               	xorlw	255
 38518  019ACC  6E5E               	movwf	??_heartbeatTimerHandler& (0+255),c
 38519  019ACE  3A5E               	swapf	??_heartbeatTimerHandler,f,c
 38520  019AD0  465E               	rlncf	??_heartbeatTimerHandler,f,c
 38521  019AD2  465E               	rlncf	??_heartbeatTimerHandler,f,c
 38522  019AD4  5084               	movf	3972,w,c	;volatile
 38523  019AD6  185E               	xorwf	??_heartbeatTimerHandler,w,c
 38524  019AD8  0BBF               	andlw	-65
 38525  019ADA  185E               	xorwf	??_heartbeatTimerHandler,w,c
 38526  019ADC  6E84               	movwf	3972,c	;volatile
 38527                           
 38528                           ;heartbeat_timer.c: 27: device_on_time++;
 38529  019ADE  0E01               	movlw	1
 38530  019AE0  0100               	movlb	0	; () banked
 38531  019AE2  27C5               	addwf	_device_on_time& (0+255),f,b
 38532  019AE4  0E00               	movlw	0
 38533  019AE6  23C6               	addwfc	(_device_on_time+1)& (0+255),f,b
 38534  019AE8  23C7               	addwfc	(_device_on_time+2)& (0+255),f,b
 38535  019AEA  23C8               	addwfc	(_device_on_time+3)& (0+255),f,b
 38536                           
 38537                           ;heartbeat_timer.c: 30: if (nxq_charge_state == QI_Charging || nxq_charge_state == QI_Fu
      +                          lly_Charged) QI_charge_time++;
 38538  019AEC  0101               	movlb	1	; () banked
 38539  019AEE  058C               	decf	_nxq_charge_state& (0+255),w,b
 38540  019AF0  B4D8               	btfsc	status,2,c
 38541  019AF2  D004               	goto	i2u2717_40
 38542                           
 38543                           ; BSR set to: 1
 38544  019AF4  0E02               	movlw	2
 38545  019AF6  198C               	xorwf	_nxq_charge_state& (0+255),w,b
 38546  019AF8  A4D8               	btfss	status,2,c
 38547  019AFA  D008               	goto	i2l21120
 38548  019AFC                     i2u2717_40:
 38549                           
 38550                           ; BSR set to: 1
 38551  019AFC  0E01               	movlw	1
 38552  019AFE  0102               	movlb	2	; () banked
 38553  019B00  27D3               	addwf	_QI_charge_time& (0+255),f,b
 38554  019B02  0E00               	movlw	0
 38555  019B04  23D4               	addwfc	(_QI_charge_time+1)& (0+255),f,b
 38556  019B06  23D5               	addwfc	(_QI_charge_time+2)& (0+255),f,b
 38557  019B08  23D6               	addwfc	(_QI_charge_time+3)& (0+255),f,b
 38558  019B0A  D009               	goto	i2l21122
 38559  019B0C                     i2l21120:
 38560                           
 38561                           ; BSR set to: 1
 38562                           ;heartbeat_timer.c: 31: else QI_charge_time = 0;
 38563  019B0C  0E00               	movlw	0
 38564  019B0E  0102               	movlb	2	; () banked
 38565  019B10  6FD3               	movwf	_QI_charge_time& (0+255),b
 38566  019B12  0E00               	movlw	0
 38567  019B14  6FD4               	movwf	(_QI_charge_time+1)& (0+255),b
 38568  019B16  0E00               	movlw	0
 38569  019B18  6FD5               	movwf	(_QI_charge_time+2)& (0+255),b
 38570  019B1A  0E00               	movlw	0
 38571  019B1C  6FD6               	movwf	(_QI_charge_time+3)& (0+255),b
 38572  019B1E                     i2l21122:
 38573                           
 38574                           ; BSR set to: 2
 38575                           ;heartbeat_timer.c: 34: if (nxq_charge_state == QI_Charging || nxq_charge_state == QI_Fu
      +                          lly_Charged) adc_calculations.output_charge += adc_results.qi_isns_adc_result;
 38576  019B1E  0101               	movlb	1	; () banked
 38577  019B20  058C               	decf	_nxq_charge_state& (0+255),w,b
 38578  019B22  B4D8               	btfsc	status,2,c
 38579  019B24  D004               	goto	i2u2719_40
 38580                           
 38581                           ; BSR set to: 1
 38582  019B26  0E02               	movlw	2
 38583  019B28  198C               	xorwf	_nxq_charge_state& (0+255),w,b
 38584  019B2A  A4D8               	btfss	status,2,c
 38585  019B2C  D01B               	goto	i2l21128
 38586  019B2E                     i2u2719_40:
 38587                           
 38588                           ; BSR set to: 1
 38589  019B2E  C2CB  F052         	movff	_adc_calculations+12,i2___fladd@b
 38590  019B32  C2CC  F053         	movff	_adc_calculations+13,i2___fladd@b+1
 38591  019B36  C2CD  F054         	movff	_adc_calculations+14,i2___fladd@b+2
 38592  019B3A  C2CE  F055         	movff	_adc_calculations+15,i2___fladd@b+3
 38593  019B3E  C0F3  F056         	movff	_adc_results+20,i2___fladd@a
 38594  019B42  C0F4  F057         	movff	_adc_results+21,i2___fladd@a+1
 38595  019B46  C0F5  F058         	movff	_adc_results+22,i2___fladd@a+2
 38596  019B4A  C0F6  F059         	movff	_adc_results+23,i2___fladd@a+3
 38597  019B4E  EC07  F0BD         	call	i2___fladd	;wreg free
 38598  019B52  C052  F2CB         	movff	?i2___fladd,_adc_calculations+12
 38599  019B56  C053  F2CC         	movff	?i2___fladd+1,_adc_calculations+13
 38600  019B5A  C054  F2CD         	movff	?i2___fladd+2,_adc_calculations+14
 38601  019B5E  C055  F2CE         	movff	?i2___fladd+3,_adc_calculations+15
 38602  019B62  D009               	goto	i2l21130
 38603  019B64                     i2l21128:
 38604                           
 38605                           ; BSR set to: 1
 38606                           ;heartbeat_timer.c: 35: else adc_calculations.output_charge = 0.0;
 38607  019B64  0E00               	movlw	0
 38608  019B66  0102               	movlb	2	; () banked
 38609  019B68  6FCB               	movwf	(_adc_calculations+12)& (0+255),b
 38610  019B6A  0E00               	movlw	0
 38611  019B6C  6FCC               	movwf	(_adc_calculations+13)& (0+255),b
 38612  019B6E  0E00               	movlw	0
 38613  019B70  6FCD               	movwf	(_adc_calculations+14)& (0+255),b
 38614  019B72  0E00               	movlw	0
 38615  019B74  6FCE               	movwf	(_adc_calculations+15)& (0+255),b
 38616  019B76                     i2l21130:
 38617                           
 38618                           ;heartbeat_timer.c: 38: if (nxq_charge_state == QI_Charging || nxq_charge_state == QI_Fu
      +                          lly_Charged) adc_calculations.output_energy += adc_calculations.output_power;
 38619  019B76  0101               	movlb	1	; () banked
 38620  019B78  058C               	decf	_nxq_charge_state& (0+255),w,b
 38621  019B7A  B4D8               	btfsc	status,2,c
 38622  019B7C  D004               	goto	i2u2721_40
 38623                           
 38624                           ; BSR set to: 1
 38625  019B7E  0E02               	movlw	2
 38626  019B80  198C               	xorwf	_nxq_charge_state& (0+255),w,b
 38627  019B82  A4D8               	btfss	status,2,c
 38628  019B84  D01B               	goto	i2l21136
 38629  019B86                     i2u2721_40:
 38630                           
 38631                           ; BSR set to: 1
 38632  019B86  C2CF  F052         	movff	_adc_calculations+16,i2___fladd@b
 38633  019B8A  C2D0  F053         	movff	_adc_calculations+17,i2___fladd@b+1
 38634  019B8E  C2D1  F054         	movff	_adc_calculations+18,i2___fladd@b+2
 38635  019B92  C2D2  F055         	movff	_adc_calculations+19,i2___fladd@b+3
 38636  019B96  C2C3  F056         	movff	_adc_calculations+4,i2___fladd@a
 38637  019B9A  C2C4  F057         	movff	_adc_calculations+5,i2___fladd@a+1
 38638  019B9E  C2C5  F058         	movff	_adc_calculations+6,i2___fladd@a+2
 38639  019BA2  C2C6  F059         	movff	_adc_calculations+7,i2___fladd@a+3
 38640  019BA6  EC07  F0BD         	call	i2___fladd	;wreg free
 38641  019BAA  C052  F2CF         	movff	?i2___fladd,_adc_calculations+16
 38642  019BAE  C053  F2D0         	movff	?i2___fladd+1,_adc_calculations+17
 38643  019BB2  C054  F2D1         	movff	?i2___fladd+2,_adc_calculations+18
 38644  019BB6  C055  F2D2         	movff	?i2___fladd+3,_adc_calculations+19
 38645  019BBA  D009               	goto	i2l1731
 38646  019BBC                     i2l21136:
 38647                           
 38648                           ; BSR set to: 1
 38649                           ;heartbeat_timer.c: 39: else adc_calculations.output_energy = 0.0;
 38650  019BBC  0E00               	movlw	0
 38651  019BBE  0102               	movlb	2	; () banked
 38652  019BC0  6FCF               	movwf	(_adc_calculations+16)& (0+255),b
 38653  019BC2  0E00               	movlw	0
 38654  019BC4  6FD0               	movwf	(_adc_calculations+17)& (0+255),b
 38655  019BC6  0E00               	movlw	0
 38656  019BC8  6FD1               	movwf	(_adc_calculations+18)& (0+255),b
 38657  019BCA  0E00               	movlw	0
 38658  019BCC  6FD2               	movwf	(_adc_calculations+19)& (0+255),b
 38659  019BCE                     i2l1731:
 38660  019BCE  0004               	clrwdt		;# 
 38661                           
 38662                           ;heartbeat_timer.c: 45: LM73_start_flag = 1;
 38663  019BD0  0E01               	movlw	1
 38664  019BD2  0102               	movlb	2	; () banked
 38665  019BD4  6FD9               	movwf	_LM73_start_flag& (0+255),b
 38666                           
 38667                           ; BSR set to: 2
 38668                           ;heartbeat_timer.c: 48: if (device_on_time % OLED_update_time == 0) OLED_update_flag = 1
      +                          ;
 38669  019BD6  C0C5  F00E         	movff	_device_on_time,i2___llmod@dividend
 38670  019BDA  C0C6  F00F         	movff	_device_on_time+1,i2___llmod@dividend+1
 38671  019BDE  C0C7  F010         	movff	_device_on_time+2,i2___llmod@dividend+2
 38672  019BE2  C0C8  F011         	movff	_device_on_time+3,i2___llmod@dividend+3
 38673  019BE6  0100               	movlb	0	; () banked
 38674  019BE8  51FD               	movf	_OLED_update_time& (0+255),w,b
 38675  019BEA  6E12               	movwf	i2___llmod@divisor,c
 38676  019BEC  6A13               	clrf	i2___llmod@divisor+1,c
 38677  019BEE  6A14               	clrf	i2___llmod@divisor+2,c
 38678  019BF0  6A15               	clrf	i2___llmod@divisor+3,c
 38679  019BF2  EC6C  F0DB         	call	i2___llmod	;wreg free
 38680  019BF6  500E               	movf	?i2___llmod,w,c
 38681  019BF8  100F               	iorwf	?i2___llmod+1,w,c
 38682  019BFA  1010               	iorwf	?i2___llmod+2,w,c
 38683  019BFC  1011               	iorwf	?i2___llmod+3,w,c
 38684  019BFE  A4D8               	btfss	status,2,c
 38685  019C00  D003               	goto	i2l1732
 38686  019C02  0E01               	movlw	1
 38687  019C04  0102               	movlb	2	; () banked
 38688  019C06  6FD7               	movwf	_OLED_update_flag& (0+255),b
 38689  019C08                     i2l1732:
 38690                           
 38691                           ;heartbeat_timer.c: 51: freq_meas_start_flag = 1;
 38692  019C08  0E01               	movlw	1
 38693  019C0A  0102               	movlb	2	; () banked
 38694  019C0C  6FDA               	movwf	_freq_meas_start_flag& (0+255),b
 38695                           
 38696                           ; BSR set to: 2
 38697  019C0E  0012               	return		;funcret
 38698  019C10                     __end_of_heartbeatTimerHandler:
 38699                           	opt callstack 0
 38700                           
 38701 ;; *************** function _PIN_MANAGER_IOC *****************
 38702 ;; Defined at:
 38703 ;;		line 143 in file "mcc_generated_files/pin_manager.c"
 38704 ;; Parameters:    Size  Location     Type
 38705 ;;		None
 38706 ;; Auto vars:     Size  Location     Type
 38707 ;;		None
 38708 ;; Return value:  Size  Location     Type
 38709 ;;                  1    wreg      void 
 38710 ;; Registers used:
 38711 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 38712 ;; Tracked objects:
 38713 ;;		On entry : 0/0
 38714 ;;		On exit  : 0/0
 38715 ;;		Unchanged: 0/0
 38716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38721 ;;Total ram usage:        0 bytes
 38722 ;; Hardware stack levels used:    1
 38723 ;; Hardware stack levels required when called:    4
 38724 ;; This function calls:
 38725 ;;		_IOCBF2_ISR
 38726 ;;		_IOCBF3_ISR
 38727 ;; This function is called by:
 38728 ;;		_INTERRUPT_InterruptManagerHigh
 38729 ;; This function uses a non-reentrant model
 38730 ;;
 38731                           
 38732                           	psect	text157
 38733  01C8E0                     __ptext157:
 38734                           	opt callstack 0
 38735  01C8E0                     _PIN_MANAGER_IOC:
 38736                           	opt callstack 12
 38737                           
 38738                           ;pin_manager.c: 146: if(IOCBFbits.IOCBF2 == 1)
 38739                           
 38740                           ; BSR set to: 2
 38741                           ;incstack = 0
 38742  01C8E0  010F               	movlb	15	; () banked
 38743  01C8E2  B512               	btfsc	18,2,b	;volatile
 38744                           
 38745                           ; BSR set to: 15
 38746                           ;pin_manager.c: 147: {;pin_manager.c: 148: IOCBF2_ISR();
 38747  01C8E4  EC50  F0E2         	call	_IOCBF2_ISR	;wreg free
 38748                           
 38749                           ;pin_manager.c: 149: };pin_manager.c: 151: if(IOCBFbits.IOCBF3 == 1)
 38750  01C8E8  010F               	movlb	15	; () banked
 38751  01C8EA  A712               	btfss	18,3,b	;volatile
 38752  01C8EC  0012               	return	
 38753                           
 38754                           ; BSR set to: 15
 38755                           ;pin_manager.c: 152: {;pin_manager.c: 153: IOCBF3_ISR();
 38756  01C8EE  EC3B  F0E2         	call	_IOCBF3_ISR	;wreg free
 38757  01C8F2  0012               	return		;funcret
 38758  01C8F4                     __end_of_PIN_MANAGER_IOC:
 38759                           	opt callstack 0
 38760                           
 38761 ;; *************** function _IOCBF3_ISR *****************
 38762 ;; Defined at:
 38763 ;;		line 190 in file "mcc_generated_files/pin_manager.c"
 38764 ;; Parameters:    Size  Location     Type
 38765 ;;		None
 38766 ;; Auto vars:     Size  Location     Type
 38767 ;;		None
 38768 ;; Return value:  Size  Location     Type
 38769 ;;                  1    wreg      void 
 38770 ;; Registers used:
 38771 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 38772 ;; Tracked objects:
 38773 ;;		On entry : 0/0
 38774 ;;		On exit  : 0/0
 38775 ;;		Unchanged: 0/0
 38776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38781 ;;Total ram usage:        0 bytes
 38782 ;; Hardware stack levels used:    1
 38783 ;; Hardware stack levels required when called:    3
 38784 ;; This function calls:
 38785 ;;		Absolute function
 38786 ;;		_IOCBF3_DefaultInterruptHandler
 38787 ;;		_QIChargeIOCHandler
 38788 ;; This function is called by:
 38789 ;;		_PIN_MANAGER_IOC
 38790 ;; This function uses a non-reentrant model
 38791 ;;
 38792                           
 38793                           	psect	text158
 38794  01C476                     __ptext158:
 38795                           	opt callstack 0
 38796  01C476                     _IOCBF3_ISR:
 38797                           	opt callstack 12
 38798                           
 38799                           ;pin_manager.c: 195: if(IOCBF3_InterruptHandler)
 38800                           
 38801                           ;incstack = 0
 38802  01C476  0101               	movlb	1	; () banked
 38803  01C478  5177               	movf	_IOCBF3_InterruptHandler& (0+255),w,b
 38804  01C47A  1178               	iorwf	(_IOCBF3_InterruptHandler+1)& (0+255),w,b
 38805  01C47C  1179               	iorwf	(_IOCBF3_InterruptHandler+2)& (0+255),w,b
 38806  01C47E  B4D8               	btfsc	status,2,c
 38807  01C480  D00C               	goto	i2u1808_49
 38808                           
 38809                           ; BSR set to: 1
 38810                           ;pin_manager.c: 196: {;pin_manager.c: 197: IOCBF3_InterruptHandler();
 38811  01C482  D801               	call	i2u1808_48
 38812  01C484  D00A               	goto	i2u1808_49
 38813  01C486                     i2u1808_48:
 38814  01C486  0005               	push	
 38815  01C488  6EFA               	movwf	pclath,c
 38816  01C48A  5177               	movf	_IOCBF3_InterruptHandler& (0+255),w,b
 38817  01C48C  6EFD               	movwf	tosl,c
 38818  01C48E  5178               	movf	(_IOCBF3_InterruptHandler+1)& (0+255),w,b
 38819  01C490  6EFE               	movwf	tosh,c
 38820  01C492  5179               	movf	(_IOCBF3_InterruptHandler+2)& (0+255),w,b
 38821  01C494  6EFF               	movwf	tosu,c
 38822  01C496  50FA               	movf	pclath,w,c
 38823  01C498  0012               	return		;indir
 38824  01C49A                     i2u1808_49:
 38825                           
 38826                           ;pin_manager.c: 198: };pin_manager.c: 199: IOCBFbits.IOCBF3 = 0;
 38827  01C49A  010F               	movlb	15	; () banked
 38828  01C49C  9712               	bcf	18,3,b	;volatile
 38829                           
 38830                           ; BSR set to: 15
 38831  01C49E  0012               	return		;funcret
 38832  01C4A0                     __end_of_IOCBF3_ISR:
 38833                           	opt callstack 0
 38834                           
 38835 ;; *************** function _IOCBF3_DefaultInterruptHandler *****************
 38836 ;; Defined at:
 38837 ;;		line 212 in file "mcc_generated_files/pin_manager.c"
 38838 ;; Parameters:    Size  Location     Type
 38839 ;;		None
 38840 ;; Auto vars:     Size  Location     Type
 38841 ;;		None
 38842 ;; Return value:  Size  Location     Type
 38843 ;;                  1    wreg      void 
 38844 ;; Registers used:
 38845 ;;		None
 38846 ;; Tracked objects:
 38847 ;;		On entry : 0/0
 38848 ;;		On exit  : 0/0
 38849 ;;		Unchanged: 0/0
 38850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38855 ;;Total ram usage:        0 bytes
 38856 ;; Hardware stack levels used:    1
 38857 ;; This function calls:
 38858 ;;		Nothing
 38859 ;; This function is called by:
 38860 ;;		_PIN_MANAGER_Initialize
 38861 ;;		_IOCBF3_ISR
 38862 ;; This function uses a non-reentrant model
 38863 ;;
 38864                           
 38865                           	psect	text159
 38866  01CB3A                     __ptext159:
 38867                           	opt callstack 0
 38868  01CB3A                     _IOCBF3_DefaultInterruptHandler:
 38869                           	opt callstack 14
 38870                           
 38871                           ; BSR set to: 15
 38872                           ;incstack = 0
 38873  01CB3A  0012               	return		;funcret
 38874  01CB3C                     __end_of_IOCBF3_DefaultInterruptHandler:
 38875                           	opt callstack 0
 38876                           
 38877 ;; *************** function _QIChargeIOCHandler *****************
 38878 ;; Defined at:
 38879 ;;		line 82 in file "NXQ_charge_state.c"
 38880 ;; Parameters:    Size  Location     Type
 38881 ;;		None
 38882 ;; Auto vars:     Size  Location     Type
 38883 ;;		None
 38884 ;; Return value:  Size  Location     Type
 38885 ;;                  1    wreg      void 
 38886 ;; Registers used:
 38887 ;;		wreg, status,2, cstack
 38888 ;; Tracked objects:
 38889 ;;		On entry : 0/0
 38890 ;;		On exit  : 0/0
 38891 ;;		Unchanged: 0/0
 38892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38897 ;;Total ram usage:        0 bytes
 38898 ;; Hardware stack levels used:    1
 38899 ;; Hardware stack levels required when called:    2
 38900 ;; This function calls:
 38901 ;;		_TMR3_StartTimer
 38902 ;;		i2_TMR1_Reload
 38903 ;;		i2_TMR3_Reload
 38904 ;; This function is called by:
 38905 ;;		_main
 38906 ;;		_IOCBF3_ISR
 38907 ;; This function uses a non-reentrant model
 38908 ;;
 38909                           
 38910                           	psect	text160
 38911  01C7A0                     __ptext160:
 38912                           	opt callstack 0
 38913  01C7A0                     _QIChargeIOCHandler:
 38914                           	opt callstack 12
 38915                           
 38916                           ;NXQ_charge_state.c: 84: if (IOCBNbits.IOCBN3 && PORTBbits.RB2 == 1) {
 38917                           
 38918                           ;incstack = 0
 38919  01C7A0  010F               	movlb	15	; () banked
 38920  01C7A2  B713               	btfsc	19,3,b	;volatile
 38921                           
 38922                           ; BSR set to: 15
 38923  01C7A4  A48E               	btfss	3982,2,c	;volatile
 38924  01C7A6  D003               	goto	i2l13944
 38925                           
 38926                           ; BSR set to: 15
 38927                           ;NXQ_charge_state.c: 86: nxq_charge_state = QI_Charging;
 38928  01C7A8  0E01               	movlw	1
 38929  01C7AA  0101               	movlb	1	; () banked
 38930  01C7AC  6F8C               	movwf	_nxq_charge_state& (0+255),b
 38931  01C7AE                     i2l13944:
 38932                           
 38933                           ;NXQ_charge_state.c: 88: };NXQ_charge_state.c: 90: TMR3_Reload();
 38934  01C7AE  EC3A  F0E5         	call	i2_TMR3_Reload	;wreg free
 38935                           
 38936                           ;NXQ_charge_state.c: 91: TMR3_StartTimer();
 38937  01C7B2  EC8E  F0E5         	call	_TMR3_StartTimer	;wreg free
 38938                           
 38939                           ;NXQ_charge_state.c: 93: TMR1_Reload();
 38940  01C7B6  EC33  F0E5         	call	i2_TMR1_Reload	;wreg free
 38941  01C7BA  0012               	return		;funcret
 38942  01C7BC                     __end_of_QIChargeIOCHandler:
 38943                           	opt callstack 0
 38944                           
 38945 ;; *************** function i2_TMR1_Reload *****************
 38946 ;; Defined at:
 38947 ;;		line 149 in file "mcc_generated_files/tmr1.c"
 38948 ;; Parameters:    Size  Location     Type
 38949 ;;		None
 38950 ;; Auto vars:     Size  Location     Type
 38951 ;;		None
 38952 ;; Return value:  Size  Location     Type
 38953 ;;                  1    wreg      void 
 38954 ;; Registers used:
 38955 ;;		wreg, status,2, cstack
 38956 ;; Tracked objects:
 38957 ;;		On entry : 0/0
 38958 ;;		On exit  : 0/0
 38959 ;;		Unchanged: 0/0
 38960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38965 ;;Total ram usage:        0 bytes
 38966 ;; Hardware stack levels used:    1
 38967 ;; Hardware stack levels required when called:    1
 38968 ;; This function calls:
 38969 ;;		i2_TMR1_WriteTimer
 38970 ;; This function is called by:
 38971 ;;		_QIChargeIOCHandler
 38972 ;;		_QIErrorTimerHandler
 38973 ;; This function uses a non-reentrant model
 38974 ;;
 38975                           
 38976                           	psect	text161
 38977  01CA66                     __ptext161:
 38978                           	opt callstack 0
 38979  01CA66                     i2_TMR1_Reload:
 38980                           	opt callstack 13
 38981                           
 38982                           ;tmr1.c: 151: TMR1_WriteTimer(timer1ReloadVal);
 38983                           
 38984                           ;incstack = 0
 38985  01CA66  C186  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
 38986  01CA6A  C187  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
 38987  01CA6E  ECDE  F0E3         	call	i2_TMR1_WriteTimer	;wreg free
 38988  01CA72  0012               	return		;funcret
 38989  01CA74                     __end_ofi2_TMR1_Reload:
 38990                           	opt callstack 0
 38991                           
 38992 ;; *************** function i2_TMR1_WriteTimer *****************
 38993 ;; Defined at:
 38994 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 38995 ;; Parameters:    Size  Location     Type
 38996 ;;  timerVal        2    0[COMRAM] unsigned int 
 38997 ;; Auto vars:     Size  Location     Type
 38998 ;;		None
 38999 ;; Return value:  Size  Location     Type
 39000 ;;                  1    wreg      void 
 39001 ;; Registers used:
 39002 ;;		wreg, status,2
 39003 ;; Tracked objects:
 39004 ;;		On entry : 0/0
 39005 ;;		On exit  : 0/0
 39006 ;;		Unchanged: 0/0
 39007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39011 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39012 ;;Total ram usage:        2 bytes
 39013 ;; Hardware stack levels used:    1
 39014 ;; This function calls:
 39015 ;;		Nothing
 39016 ;; This function is called by:
 39017 ;;		_TMR1_ISR
 39018 ;;		i2_TMR1_Reload
 39019 ;; This function uses a non-reentrant model
 39020 ;;
 39021                           
 39022                           	psect	text162
 39023  01C7BC                     __ptext162:
 39024                           	opt callstack 0
 39025  01C7BC                     i2_TMR1_WriteTimer:
 39026                           	opt callstack 15
 39027                           
 39028                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 39029                           
 39030                           ;incstack = 0
 39031  01C7BC  A4CF               	btfss	4047,2,c	;volatile
 39032  01C7BE  D007               	goto	i2l12170
 39033                           
 39034                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 39035  01C7C0  90CF               	bcf	4047,0,c	;volatile
 39036                           
 39037                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 39038  01C7C2  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 39039  01C7C4  6ECE               	movwf	4046,c	;volatile
 39040                           
 39041                           ;tmr1.c: 136: TMR1L = timerVal;
 39042  01C7C6  C001  FFCD         	movff	i2TMR1_WriteTimer@timerVal,4045	;volatile
 39043                           
 39044                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 39045  01C7CA  80CF               	bsf	4047,0,c	;volatile
 39046                           
 39047                           ;tmr1.c: 140: }
 39048  01C7CC  0012               	return	
 39049  01C7CE                     i2l12170:
 39050                           
 39051                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 39052  01C7CE  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 39053  01C7D0  6ECE               	movwf	4046,c	;volatile
 39054                           
 39055                           ;tmr1.c: 145: TMR1L = timerVal;
 39056  01C7D2  C001  FFCD         	movff	i2TMR1_WriteTimer@timerVal,4045	;volatile
 39057  01C7D6  0012               	return		;funcret
 39058  01C7D8                     __end_ofi2_TMR1_WriteTimer:
 39059                           	opt callstack 0
 39060                           
 39061 ;; *************** function _IOCBF2_ISR *****************
 39062 ;; Defined at:
 39063 ;;		line 160 in file "mcc_generated_files/pin_manager.c"
 39064 ;; Parameters:    Size  Location     Type
 39065 ;;		None
 39066 ;; Auto vars:     Size  Location     Type
 39067 ;;		None
 39068 ;; Return value:  Size  Location     Type
 39069 ;;                  1    wreg      void 
 39070 ;; Registers used:
 39071 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39072 ;; Tracked objects:
 39073 ;;		On entry : 0/0
 39074 ;;		On exit  : 0/0
 39075 ;;		Unchanged: 0/0
 39076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39081 ;;Total ram usage:        0 bytes
 39082 ;; Hardware stack levels used:    1
 39083 ;; Hardware stack levels required when called:    3
 39084 ;; This function calls:
 39085 ;;		Absolute function
 39086 ;;		_IOCBF2_DefaultInterruptHandler
 39087 ;;		_QIIdleIOCHandler
 39088 ;; This function is called by:
 39089 ;;		_PIN_MANAGER_IOC
 39090 ;; This function uses a non-reentrant model
 39091 ;;
 39092                           
 39093                           	psect	text163
 39094  01C4A0                     __ptext163:
 39095                           	opt callstack 0
 39096  01C4A0                     _IOCBF2_ISR:
 39097                           	opt callstack 12
 39098                           
 39099                           ;pin_manager.c: 165: if(IOCBF2_InterruptHandler)
 39100                           
 39101                           ;incstack = 0
 39102  01C4A0  0101               	movlb	1	; () banked
 39103  01C4A2  517A               	movf	_IOCBF2_InterruptHandler& (0+255),w,b
 39104  01C4A4  117B               	iorwf	(_IOCBF2_InterruptHandler+1)& (0+255),w,b
 39105  01C4A6  117C               	iorwf	(_IOCBF2_InterruptHandler+2)& (0+255),w,b
 39106  01C4A8  B4D8               	btfsc	status,2,c
 39107  01C4AA  D00C               	goto	i2u1806_49
 39108                           
 39109                           ; BSR set to: 1
 39110                           ;pin_manager.c: 166: {;pin_manager.c: 167: IOCBF2_InterruptHandler();
 39111  01C4AC  D801               	call	i2u1806_48
 39112  01C4AE  D00A               	goto	i2u1806_49
 39113  01C4B0                     i2u1806_48:
 39114  01C4B0  0005               	push	
 39115  01C4B2  6EFA               	movwf	pclath,c
 39116  01C4B4  517A               	movf	_IOCBF2_InterruptHandler& (0+255),w,b
 39117  01C4B6  6EFD               	movwf	tosl,c
 39118  01C4B8  517B               	movf	(_IOCBF2_InterruptHandler+1)& (0+255),w,b
 39119  01C4BA  6EFE               	movwf	tosh,c
 39120  01C4BC  517C               	movf	(_IOCBF2_InterruptHandler+2)& (0+255),w,b
 39121  01C4BE  6EFF               	movwf	tosu,c
 39122  01C4C0  50FA               	movf	pclath,w,c
 39123  01C4C2  0012               	return		;indir
 39124  01C4C4                     i2u1806_49:
 39125                           
 39126                           ;pin_manager.c: 168: };pin_manager.c: 169: IOCBFbits.IOCBF2 = 0;
 39127  01C4C4  010F               	movlb	15	; () banked
 39128  01C4C6  9512               	bcf	18,2,b	;volatile
 39129                           
 39130                           ; BSR set to: 15
 39131  01C4C8  0012               	return		;funcret
 39132  01C4CA                     __end_of_IOCBF2_ISR:
 39133                           	opt callstack 0
 39134                           
 39135 ;; *************** function _IOCBF2_DefaultInterruptHandler *****************
 39136 ;; Defined at:
 39137 ;;		line 182 in file "mcc_generated_files/pin_manager.c"
 39138 ;; Parameters:    Size  Location     Type
 39139 ;;		None
 39140 ;; Auto vars:     Size  Location     Type
 39141 ;;		None
 39142 ;; Return value:  Size  Location     Type
 39143 ;;                  1    wreg      void 
 39144 ;; Registers used:
 39145 ;;		None
 39146 ;; Tracked objects:
 39147 ;;		On entry : 0/0
 39148 ;;		On exit  : 0/0
 39149 ;;		Unchanged: 0/0
 39150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39155 ;;Total ram usage:        0 bytes
 39156 ;; Hardware stack levels used:    1
 39157 ;; This function calls:
 39158 ;;		Nothing
 39159 ;; This function is called by:
 39160 ;;		_PIN_MANAGER_Initialize
 39161 ;;		_IOCBF2_ISR
 39162 ;; This function uses a non-reentrant model
 39163 ;;
 39164                           
 39165                           	psect	text164
 39166  01CB3C                     __ptext164:
 39167                           	opt callstack 0
 39168  01CB3C                     _IOCBF2_DefaultInterruptHandler:
 39169                           	opt callstack 14
 39170                           
 39171                           ; BSR set to: 15
 39172                           ;incstack = 0
 39173  01CB3C  0012               	return		;funcret
 39174  01CB3E                     __end_of_IOCBF2_DefaultInterruptHandler:
 39175                           	opt callstack 0
 39176                           
 39177 ;; *************** function _QIIdleIOCHandler *****************
 39178 ;; Defined at:
 39179 ;;		line 67 in file "NXQ_charge_state.c"
 39180 ;; Parameters:    Size  Location     Type
 39181 ;;		None
 39182 ;; Auto vars:     Size  Location     Type
 39183 ;;		None
 39184 ;; Return value:  Size  Location     Type
 39185 ;;                  1    wreg      void 
 39186 ;; Registers used:
 39187 ;;		wreg, status,2, cstack
 39188 ;; Tracked objects:
 39189 ;;		On entry : 0/0
 39190 ;;		On exit  : 0/0
 39191 ;;		Unchanged: 0/0
 39192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39197 ;;Total ram usage:        0 bytes
 39198 ;; Hardware stack levels used:    1
 39199 ;; Hardware stack levels required when called:    2
 39200 ;; This function calls:
 39201 ;;		_TMR1_StartTimer
 39202 ;;		_TMR3_StartTimer
 39203 ;;		i2_TMR3_Reload
 39204 ;; This function is called by:
 39205 ;;		_main
 39206 ;;		_IOCBF2_ISR
 39207 ;; This function uses a non-reentrant model
 39208 ;;
 39209                           
 39210                           	psect	text165
 39211  01C8F4                     __ptext165:
 39212                           	opt callstack 0
 39213  01C8F4                     _QIIdleIOCHandler:
 39214                           	opt callstack 12
 39215                           
 39216                           ;NXQ_charge_state.c: 69: if (IOCBNbits.IOCBN2 == 1) {
 39217                           
 39218                           ;incstack = 0
 39219  01C8F4  010F               	movlb	15	; () banked
 39220  01C8F6  A513               	btfss	19,2,b	;volatile
 39221  01C8F8  0012               	return	
 39222                           
 39223                           ; BSR set to: 15
 39224                           ;NXQ_charge_state.c: 71: TMR3_Reload();
 39225  01C8FA  EC3A  F0E5         	call	i2_TMR3_Reload	;wreg free
 39226                           
 39227                           ;NXQ_charge_state.c: 72: TMR3_StartTimer();
 39228  01C8FE  EC8E  F0E5         	call	_TMR3_StartTimer	;wreg free
 39229                           
 39230                           ;NXQ_charge_state.c: 75: TMR1_StartTimer();
 39231  01C902  EC90  F0E5         	call	_TMR1_StartTimer	;wreg free
 39232  01C906  0012               	return		;funcret
 39233  01C908                     __end_of_QIIdleIOCHandler:
 39234                           	opt callstack 0
 39235                           
 39236 ;; *************** function i2_TMR3_Reload *****************
 39237 ;; Defined at:
 39238 ;;		line 149 in file "mcc_generated_files/tmr3.c"
 39239 ;; Parameters:    Size  Location     Type
 39240 ;;		None
 39241 ;; Auto vars:     Size  Location     Type
 39242 ;;		None
 39243 ;; Return value:  Size  Location     Type
 39244 ;;                  1    wreg      void 
 39245 ;; Registers used:
 39246 ;;		wreg, status,2, cstack
 39247 ;; Tracked objects:
 39248 ;;		On entry : 0/0
 39249 ;;		On exit  : 0/0
 39250 ;;		Unchanged: 0/0
 39251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39256 ;;Total ram usage:        0 bytes
 39257 ;; Hardware stack levels used:    1
 39258 ;; Hardware stack levels required when called:    1
 39259 ;; This function calls:
 39260 ;;		i2_TMR3_WriteTimer
 39261 ;; This function is called by:
 39262 ;;		_QIIdleIOCHandler
 39263 ;;		_QIChargeIOCHandler
 39264 ;; This function uses a non-reentrant model
 39265 ;;
 39266                           
 39267                           	psect	text166
 39268  01CA74                     __ptext166:
 39269                           	opt callstack 0
 39270  01CA74                     i2_TMR3_Reload:
 39271                           	opt callstack 12
 39272                           
 39273                           ;tmr3.c: 151: TMR3_WriteTimer(timer3ReloadVal);
 39274                           
 39275                           ;incstack = 0
 39276  01CA74  C18A  F001         	movff	_timer3ReloadVal,i2TMR3_WriteTimer@timerVal	;volatile
 39277  01CA78  C18B  F002         	movff	_timer3ReloadVal+1,i2TMR3_WriteTimer@timerVal+1	;volatile
 39278  01CA7C  ECEC  F0E3         	call	i2_TMR3_WriteTimer	;wreg free
 39279  01CA80  0012               	return		;funcret
 39280  01CA82                     __end_ofi2_TMR3_Reload:
 39281                           	opt callstack 0
 39282                           
 39283 ;; *************** function i2_TMR3_WriteTimer *****************
 39284 ;; Defined at:
 39285 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 39286 ;; Parameters:    Size  Location     Type
 39287 ;;  timerVal        2    0[COMRAM] unsigned int 
 39288 ;; Auto vars:     Size  Location     Type
 39289 ;;		None
 39290 ;; Return value:  Size  Location     Type
 39291 ;;                  1    wreg      void 
 39292 ;; Registers used:
 39293 ;;		wreg, status,2
 39294 ;; Tracked objects:
 39295 ;;		On entry : 0/0
 39296 ;;		On exit  : 0/0
 39297 ;;		Unchanged: 0/0
 39298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39299 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39302 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39303 ;;Total ram usage:        2 bytes
 39304 ;; Hardware stack levels used:    1
 39305 ;; This function calls:
 39306 ;;		Nothing
 39307 ;; This function is called by:
 39308 ;;		i2_TMR3_Reload
 39309 ;; This function uses a non-reentrant model
 39310 ;;
 39311                           
 39312                           	psect	text167
 39313  01C7D8                     __ptext167:
 39314                           	opt callstack 0
 39315  01C7D8                     i2_TMR3_WriteTimer:
 39316                           	opt callstack 12
 39317                           
 39318                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 39319                           
 39320                           ;incstack = 0
 39321  01C7D8  A4C9               	btfss	4041,2,c	;volatile
 39322  01C7DA  D007               	goto	i2l12156
 39323                           
 39324                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 39325  01C7DC  90C9               	bcf	4041,0,c	;volatile
 39326                           
 39327                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 39328  01C7DE  5002               	movf	i2TMR3_WriteTimer@timerVal+1,w,c
 39329  01C7E0  6EC8               	movwf	4040,c	;volatile
 39330                           
 39331                           ;tmr3.c: 136: TMR3L = timerVal;
 39332  01C7E2  C001  FFC7         	movff	i2TMR3_WriteTimer@timerVal,4039	;volatile
 39333                           
 39334                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 39335  01C7E6  80C9               	bsf	4041,0,c	;volatile
 39336                           
 39337                           ;tmr3.c: 140: }
 39338  01C7E8  0012               	return	
 39339  01C7EA                     i2l12156:
 39340                           
 39341                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 39342  01C7EA  5002               	movf	i2TMR3_WriteTimer@timerVal+1,w,c
 39343  01C7EC  6EC8               	movwf	4040,c	;volatile
 39344                           
 39345                           ;tmr3.c: 145: TMR3L = timerVal;
 39346  01C7EE  C001  FFC7         	movff	i2TMR3_WriteTimer@timerVal,4039	;volatile
 39347  01C7F2  0012               	return		;funcret
 39348  01C7F4                     __end_ofi2_TMR3_WriteTimer:
 39349                           	opt callstack 0
 39350                           
 39351 ;; *************** function _TMR3_StartTimer *****************
 39352 ;; Defined at:
 39353 ;;		line 99 in file "mcc_generated_files/tmr3.c"
 39354 ;; Parameters:    Size  Location     Type
 39355 ;;		None
 39356 ;; Auto vars:     Size  Location     Type
 39357 ;;		None
 39358 ;; Return value:  Size  Location     Type
 39359 ;;                  1    wreg      void 
 39360 ;; Registers used:
 39361 ;;		None
 39362 ;; Tracked objects:
 39363 ;;		On entry : 0/0
 39364 ;;		On exit  : 0/0
 39365 ;;		Unchanged: 0/0
 39366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39371 ;;Total ram usage:        0 bytes
 39372 ;; Hardware stack levels used:    1
 39373 ;; This function calls:
 39374 ;;		Nothing
 39375 ;; This function is called by:
 39376 ;;		_QIIdleIOCHandler
 39377 ;;		_QIChargeIOCHandler
 39378 ;; This function uses a non-reentrant model
 39379 ;;
 39380                           
 39381                           	psect	text168
 39382  01CB1C                     __ptext168:
 39383                           	opt callstack 0
 39384  01CB1C                     _TMR3_StartTimer:
 39385                           	opt callstack 13
 39386                           
 39387                           ;tmr3.c: 102: T3CONbits.TMR3ON = 1;
 39388                           
 39389                           ;incstack = 0
 39390  01CB1C  80C9               	bsf	4041,0,c	;volatile
 39391  01CB1E  0012               	return		;funcret
 39392  01CB20                     __end_of_TMR3_StartTimer:
 39393                           	opt callstack 0
 39394                           
 39395 ;; *************** function _TMR1_StartTimer *****************
 39396 ;; Defined at:
 39397 ;;		line 99 in file "mcc_generated_files/tmr1.c"
 39398 ;; Parameters:    Size  Location     Type
 39399 ;;		None
 39400 ;; Auto vars:     Size  Location     Type
 39401 ;;		None
 39402 ;; Return value:  Size  Location     Type
 39403 ;;                  1    wreg      void 
 39404 ;; Registers used:
 39405 ;;		None
 39406 ;; Tracked objects:
 39407 ;;		On entry : 0/0
 39408 ;;		On exit  : 0/0
 39409 ;;		Unchanged: 0/0
 39410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39415 ;;Total ram usage:        0 bytes
 39416 ;; Hardware stack levels used:    1
 39417 ;; This function calls:
 39418 ;;		Nothing
 39419 ;; This function is called by:
 39420 ;;		_QIIdleIOCHandler
 39421 ;; This function uses a non-reentrant model
 39422 ;;
 39423                           
 39424                           	psect	text169
 39425  01CB20                     __ptext169:
 39426                           	opt callstack 0
 39427  01CB20                     _TMR1_StartTimer:
 39428                           	opt callstack 13
 39429                           
 39430                           ;tmr1.c: 102: T1CONbits.TMR1ON = 1;
 39431                           
 39432                           ;incstack = 0
 39433  01CB20  80CF               	bsf	4047,0,c	;volatile
 39434  01CB22  0012               	return		;funcret
 39435  01CB24                     __end_of_TMR1_StartTimer:
 39436                           	opt callstack 0
 39437                           
 39438 ;; *************** function _INT2_ISR *****************
 39439 ;; Defined at:
 39440 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 39441 ;; Parameters:    Size  Location     Type
 39442 ;;		None
 39443 ;; Auto vars:     Size  Location     Type
 39444 ;;		None
 39445 ;; Return value:  Size  Location     Type
 39446 ;;                  1    wreg      void 
 39447 ;; Registers used:
 39448 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39449 ;; Tracked objects:
 39450 ;;		On entry : 0/0
 39451 ;;		On exit  : 0/0
 39452 ;;		Unchanged: 0/0
 39453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39458 ;;Total ram usage:        0 bytes
 39459 ;; Hardware stack levels used:    1
 39460 ;; Hardware stack levels required when called:    2
 39461 ;; This function calls:
 39462 ;;		_INT2_CallBack
 39463 ;; This function is called by:
 39464 ;;		_INTERRUPT_InterruptManagerHigh
 39465 ;; This function uses a non-reentrant model
 39466 ;;
 39467                           
 39468                           	psect	text170
 39469  01CAC6                     __ptext170:
 39470                           	opt callstack 0
 39471  01CAC6                     _INT2_ISR:
 39472                           	opt callstack 14
 39473                           
 39474                           ;ext_int.c: 61: (PIR0bits.INT2IF = 0);
 39475                           
 39476                           ;incstack = 0
 39477  01CAC6  010E               	movlb	14	; () banked
 39478  01CAC8  95CA               	bcf	202,2,b	;volatile
 39479                           
 39480                           ; BSR set to: 14
 39481                           ;ext_int.c: 64: INT2_CallBack();
 39482  01CACA  ECEF  F0E2         	call	_INT2_CallBack	;wreg free
 39483  01CACE  0012               	return		;funcret
 39484  01CAD0                     __end_of_INT2_ISR:
 39485                           	opt callstack 0
 39486                           
 39487 ;; *************** function _INT2_CallBack *****************
 39488 ;; Defined at:
 39489 ;;		line 68 in file "mcc_generated_files/ext_int.c"
 39490 ;; Parameters:    Size  Location     Type
 39491 ;;		None
 39492 ;; Auto vars:     Size  Location     Type
 39493 ;;		None
 39494 ;; Return value:  Size  Location     Type
 39495 ;;                  1    wreg      void 
 39496 ;; Registers used:
 39497 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39498 ;; Tracked objects:
 39499 ;;		On entry : 0/0
 39500 ;;		On exit  : 0/0
 39501 ;;		Unchanged: 0/0
 39502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39507 ;;Total ram usage:        0 bytes
 39508 ;; Hardware stack levels used:    1
 39509 ;; Hardware stack levels required when called:    1
 39510 ;; This function calls:
 39511 ;;		Absolute function
 39512 ;;		_INT2_DefaultInterruptHandler
 39513 ;;		_rightCapTouchHandler
 39514 ;; This function is called by:
 39515 ;;		_INT2_ISR
 39516 ;; This function uses a non-reentrant model
 39517 ;;
 39518                           
 39519                           	psect	text171
 39520  01C5DE                     __ptext171:
 39521                           	opt callstack 0
 39522  01C5DE                     _INT2_CallBack:
 39523                           	opt callstack 14
 39524                           
 39525                           ;ext_int.c: 71: if(INT2_InterruptHandler)
 39526                           
 39527                           ;incstack = 0
 39528  01C5DE  0101               	movlb	1	; () banked
 39529  01C5E0  5180               	movf	_INT2_InterruptHandler& (0+255),w,b
 39530  01C5E2  1181               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 39531  01C5E4  1182               	iorwf	(_INT2_InterruptHandler+2)& (0+255),w,b
 39532  01C5E6  B4D8               	btfsc	status,2,c
 39533  01C5E8  0012               	return	
 39534                           
 39535                           ; BSR set to: 1
 39536                           ;ext_int.c: 72: {;ext_int.c: 73: INT2_InterruptHandler();
 39537  01C5EA  D801               	call	i2u1802_48
 39538  01C5EC  0012               	return	
 39539  01C5EE                     i2u1802_48:
 39540  01C5EE  0005               	push	
 39541  01C5F0  6EFA               	movwf	pclath,c
 39542  01C5F2  5180               	movf	_INT2_InterruptHandler& (0+255),w,b
 39543  01C5F4  6EFD               	movwf	tosl,c
 39544  01C5F6  5181               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 39545  01C5F8  6EFE               	movwf	tosh,c
 39546  01C5FA  5182               	movf	(_INT2_InterruptHandler+2)& (0+255),w,b
 39547  01C5FC  6EFF               	movwf	tosu,c
 39548  01C5FE  50FA               	movf	pclath,w,c
 39549  01C600  0012               	return		;indir
 39550  01C602                     __end_of_INT2_CallBack:
 39551                           	opt callstack 0
 39552                           
 39553 ;; *************** function _INT2_DefaultInterruptHandler *****************
 39554 ;; Defined at:
 39555 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 39556 ;; Parameters:    Size  Location     Type
 39557 ;;		None
 39558 ;; Auto vars:     Size  Location     Type
 39559 ;;		None
 39560 ;; Return value:  Size  Location     Type
 39561 ;;                  1    wreg      void 
 39562 ;; Registers used:
 39563 ;;		None
 39564 ;; Tracked objects:
 39565 ;;		On entry : 0/0
 39566 ;;		On exit  : 0/0
 39567 ;;		Unchanged: 0/0
 39568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39573 ;;Total ram usage:        0 bytes
 39574 ;; Hardware stack levels used:    1
 39575 ;; This function calls:
 39576 ;;		Nothing
 39577 ;; This function is called by:
 39578 ;;		_EXT_INT_Initialize
 39579 ;;		_INT2_CallBack
 39580 ;; This function uses a non-reentrant model
 39581 ;;
 39582                           
 39583                           	psect	text172
 39584  01CB3E                     __ptext172:
 39585                           	opt callstack 0
 39586  01CB3E                     _INT2_DefaultInterruptHandler:
 39587                           	opt callstack 14
 39588                           
 39589                           ;incstack = 0
 39590  01CB3E  0012               	return		;funcret
 39591  01CB40                     __end_of_INT2_DefaultInterruptHandler:
 39592                           	opt callstack 0
 39593                           
 39594 ;; *************** function _rightCapTouchHandler *****************
 39595 ;; Defined at:
 39596 ;;		line 20 in file "cap_touch_int.c"
 39597 ;; Parameters:    Size  Location     Type
 39598 ;;		None
 39599 ;; Auto vars:     Size  Location     Type
 39600 ;;		None
 39601 ;; Return value:  Size  Location     Type
 39602 ;;                  1    wreg      void 
 39603 ;; Registers used:
 39604 ;;		wreg, status,2, status,0
 39605 ;; Tracked objects:
 39606 ;;		On entry : 0/0
 39607 ;;		On exit  : 0/0
 39608 ;;		Unchanged: 0/0
 39609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39614 ;;Total ram usage:        0 bytes
 39615 ;; Hardware stack levels used:    1
 39616 ;; This function calls:
 39617 ;;		Nothing
 39618 ;; This function is called by:
 39619 ;;		_main
 39620 ;;		_INT2_CallBack
 39621 ;; This function uses a non-reentrant model
 39622 ;;
 39623                           
 39624                           	psect	text173
 39625  01C8A0                     __ptext173:
 39626                           	opt callstack 0
 39627  01C8A0                     _rightCapTouchHandler:
 39628                           	opt callstack 14
 39629                           
 39630                           ;cap_touch_int.c: 22: OLED_Frame++;
 39631                           
 39632                           ;incstack = 0
 39633  01C8A0  0102               	movlb	2	; () banked
 39634  01C8A2  2BD8               	incf	_OLED_Frame& (0+255),f,b
 39635                           
 39636                           ; BSR set to: 2
 39637                           ;cap_touch_int.c: 23: if (OLED_Frame == 25 + 1) OLED_Frame = 4;
 39638  01C8A4  0E1A               	movlw	26
 39639  01C8A6  19D8               	xorwf	_OLED_Frame& (0+255),w,b
 39640  01C8A8  A4D8               	btfss	status,2,c
 39641  01C8AA  D002               	goto	i2l1554
 39642                           
 39643                           ; BSR set to: 2
 39644  01C8AC  0E04               	movlw	4
 39645  01C8AE  6FD8               	movwf	_OLED_Frame& (0+255),b
 39646  01C8B0                     i2l1554:
 39647                           
 39648                           ; BSR set to: 2
 39649                           ;cap_touch_int.c: 24: OLED_update_flag = 1;
 39650  01C8B0  0E01               	movlw	1
 39651  01C8B2  6FD7               	movwf	_OLED_update_flag& (0+255),b
 39652                           
 39653                           ; BSR set to: 2
 39654  01C8B4  0012               	return		;funcret
 39655  01C8B6                     __end_of_rightCapTouchHandler:
 39656                           	opt callstack 0
 39657                           
 39658 ;; *************** function _INT1_ISR *****************
 39659 ;; Defined at:
 39660 ;;		line 33 in file "mcc_generated_files/ext_int.c"
 39661 ;; Parameters:    Size  Location     Type
 39662 ;;		None
 39663 ;; Auto vars:     Size  Location     Type
 39664 ;;		None
 39665 ;; Return value:  Size  Location     Type
 39666 ;;                  1    wreg      void 
 39667 ;; Registers used:
 39668 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39669 ;; Tracked objects:
 39670 ;;		On entry : 0/0
 39671 ;;		On exit  : 0/0
 39672 ;;		Unchanged: 0/0
 39673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39678 ;;Total ram usage:        0 bytes
 39679 ;; Hardware stack levels used:    1
 39680 ;; Hardware stack levels required when called:    2
 39681 ;; This function calls:
 39682 ;;		_INT1_CallBack
 39683 ;; This function is called by:
 39684 ;;		_INTERRUPT_InterruptManagerHigh
 39685 ;; This function uses a non-reentrant model
 39686 ;;
 39687                           
 39688                           	psect	text174
 39689  01CAD0                     __ptext174:
 39690                           	opt callstack 0
 39691  01CAD0                     _INT1_ISR:
 39692                           	opt callstack 14
 39693                           
 39694                           ;ext_int.c: 35: (PIR0bits.INT1IF = 0);
 39695                           
 39696                           ; BSR set to: 2
 39697                           ;incstack = 0
 39698  01CAD0  010E               	movlb	14	; () banked
 39699  01CAD2  93CA               	bcf	202,1,b	;volatile
 39700                           
 39701                           ; BSR set to: 14
 39702                           ;ext_int.c: 38: INT1_CallBack();
 39703  01CAD4  EC01  F0E3         	call	_INT1_CallBack	;wreg free
 39704  01CAD8  0012               	return		;funcret
 39705  01CADA                     __end_of_INT1_ISR:
 39706                           	opt callstack 0
 39707                           
 39708 ;; *************** function _INT1_CallBack *****************
 39709 ;; Defined at:
 39710 ;;		line 42 in file "mcc_generated_files/ext_int.c"
 39711 ;; Parameters:    Size  Location     Type
 39712 ;;		None
 39713 ;; Auto vars:     Size  Location     Type
 39714 ;;		None
 39715 ;; Return value:  Size  Location     Type
 39716 ;;                  1    wreg      void 
 39717 ;; Registers used:
 39718 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39719 ;; Tracked objects:
 39720 ;;		On entry : 0/0
 39721 ;;		On exit  : 0/0
 39722 ;;		Unchanged: 0/0
 39723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39728 ;;Total ram usage:        0 bytes
 39729 ;; Hardware stack levels used:    1
 39730 ;; Hardware stack levels required when called:    1
 39731 ;; This function calls:
 39732 ;;		Absolute function
 39733 ;;		_INT1_DefaultInterruptHandler
 39734 ;;		_leftCapTouchHandler
 39735 ;; This function is called by:
 39736 ;;		_INT1_ISR
 39737 ;; This function uses a non-reentrant model
 39738 ;;
 39739                           
 39740                           	psect	text175
 39741  01C602                     __ptext175:
 39742                           	opt callstack 0
 39743  01C602                     _INT1_CallBack:
 39744                           	opt callstack 14
 39745                           
 39746                           ;ext_int.c: 45: if(INT1_InterruptHandler)
 39747                           
 39748                           ;incstack = 0
 39749  01C602  0101               	movlb	1	; () banked
 39750  01C604  5183               	movf	_INT1_InterruptHandler& (0+255),w,b
 39751  01C606  1184               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 39752  01C608  1185               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 39753  01C60A  B4D8               	btfsc	status,2,c
 39754  01C60C  0012               	return	
 39755                           
 39756                           ; BSR set to: 1
 39757                           ;ext_int.c: 46: {;ext_int.c: 47: INT1_InterruptHandler();
 39758  01C60E  D801               	call	i2u1800_48
 39759  01C610  0012               	return	
 39760  01C612                     i2u1800_48:
 39761  01C612  0005               	push	
 39762  01C614  6EFA               	movwf	pclath,c
 39763  01C616  5183               	movf	_INT1_InterruptHandler& (0+255),w,b
 39764  01C618  6EFD               	movwf	tosl,c
 39765  01C61A  5184               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 39766  01C61C  6EFE               	movwf	tosh,c
 39767  01C61E  5185               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 39768  01C620  6EFF               	movwf	tosu,c
 39769  01C622  50FA               	movf	pclath,w,c
 39770  01C624  0012               	return		;indir
 39771  01C626                     __end_of_INT1_CallBack:
 39772                           	opt callstack 0
 39773                           
 39774 ;; *************** function _INT1_DefaultInterruptHandler *****************
 39775 ;; Defined at:
 39776 ;;		line 55 in file "mcc_generated_files/ext_int.c"
 39777 ;; Parameters:    Size  Location     Type
 39778 ;;		None
 39779 ;; Auto vars:     Size  Location     Type
 39780 ;;		None
 39781 ;; Return value:  Size  Location     Type
 39782 ;;                  1    wreg      void 
 39783 ;; Registers used:
 39784 ;;		None
 39785 ;; Tracked objects:
 39786 ;;		On entry : 0/0
 39787 ;;		On exit  : 0/0
 39788 ;;		Unchanged: 0/0
 39789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39794 ;;Total ram usage:        0 bytes
 39795 ;; Hardware stack levels used:    1
 39796 ;; This function calls:
 39797 ;;		Nothing
 39798 ;; This function is called by:
 39799 ;;		_EXT_INT_Initialize
 39800 ;;		_INT1_CallBack
 39801 ;; This function uses a non-reentrant model
 39802 ;;
 39803                           
 39804                           	psect	text176
 39805  01CB40                     __ptext176:
 39806                           	opt callstack 0
 39807  01CB40                     _INT1_DefaultInterruptHandler:
 39808                           	opt callstack 14
 39809                           
 39810                           ;incstack = 0
 39811  01CB40  0012               	return		;funcret
 39812  01CB42                     __end_of_INT1_DefaultInterruptHandler:
 39813                           	opt callstack 0
 39814                           
 39815 ;; *************** function _leftCapTouchHandler *****************
 39816 ;; Defined at:
 39817 ;;		line 11 in file "cap_touch_int.c"
 39818 ;; Parameters:    Size  Location     Type
 39819 ;;		None
 39820 ;; Auto vars:     Size  Location     Type
 39821 ;;		None
 39822 ;; Return value:  Size  Location     Type
 39823 ;;                  1    wreg      void 
 39824 ;; Registers used:
 39825 ;;		wreg, status,2, status,0
 39826 ;; Tracked objects:
 39827 ;;		On entry : 0/0
 39828 ;;		On exit  : 0/0
 39829 ;;		Unchanged: 0/0
 39830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39835 ;;Total ram usage:        0 bytes
 39836 ;; Hardware stack levels used:    1
 39837 ;; This function calls:
 39838 ;;		Nothing
 39839 ;; This function is called by:
 39840 ;;		_main
 39841 ;;		_INT1_CallBack
 39842 ;; This function uses a non-reentrant model
 39843 ;;
 39844                           
 39845                           	psect	text177
 39846  01C8B6                     __ptext177:
 39847                           	opt callstack 0
 39848  01C8B6                     _leftCapTouchHandler:
 39849                           	opt callstack 14
 39850                           
 39851                           ;cap_touch_int.c: 13: OLED_Frame--;
 39852                           
 39853                           ;incstack = 0
 39854  01C8B6  0102               	movlb	2	; () banked
 39855  01C8B8  07D8               	decf	_OLED_Frame& (0+255),f,b
 39856                           
 39857                           ; BSR set to: 2
 39858                           ;cap_touch_int.c: 14: if (OLED_Frame == 4 - 1) OLED_Frame = 25;
 39859  01C8BA  0E03               	movlw	3
 39860  01C8BC  19D8               	xorwf	_OLED_Frame& (0+255),w,b
 39861  01C8BE  A4D8               	btfss	status,2,c
 39862  01C8C0  D002               	goto	i2l1550
 39863                           
 39864                           ; BSR set to: 2
 39865  01C8C2  0E19               	movlw	25
 39866  01C8C4  6FD8               	movwf	_OLED_Frame& (0+255),b
 39867  01C8C6                     i2l1550:
 39868                           
 39869                           ; BSR set to: 2
 39870                           ;cap_touch_int.c: 15: OLED_update_flag = 1;
 39871  01C8C6  0E01               	movlw	1
 39872  01C8C8  6FD7               	movwf	_OLED_update_flag& (0+255),b
 39873                           
 39874                           ; BSR set to: 2
 39875  01C8CA  0012               	return		;funcret
 39876  01C8CC                     __end_of_leftCapTouchHandler:
 39877                           	opt callstack 0
 39878                           
 39879 ;; *************** function _EUSART2_Receive_ISR *****************
 39880 ;; Defined at:
 39881 ;;		line 206 in file "mcc_generated_files/eusart2.c"
 39882 ;; Parameters:    Size  Location     Type
 39883 ;;		None
 39884 ;; Auto vars:     Size  Location     Type
 39885 ;;		None
 39886 ;; Return value:  Size  Location     Type
 39887 ;;                  1    wreg      void 
 39888 ;; Registers used:
 39889 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39890 ;; Tracked objects:
 39891 ;;		On entry : 0/0
 39892 ;;		On exit  : 0/0
 39893 ;;		Unchanged: 0/0
 39894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39899 ;;Total ram usage:        0 bytes
 39900 ;; Hardware stack levels used:    1
 39901 ;; Hardware stack levels required when called:    4
 39902 ;; This function calls:
 39903 ;;		i2_printf
 39904 ;; This function is called by:
 39905 ;;		_EUSART2_Initialize
 39906 ;;		_INTERRUPT_InterruptManagerHigh
 39907 ;; This function uses a non-reentrant model
 39908 ;;
 39909                           
 39910                           	psect	text178
 39911  01AD90                     __ptext178:
 39912                           	opt callstack 0
 39913  01AD90                     _EUSART2_Receive_ISR:
 39914                           	opt callstack 12
 39915                           
 39916                           ;eusart2.c: 209: if(1 == RC2STAbits.OERR)
 39917                           
 39918                           ; BSR set to: 2
 39919                           ;incstack = 0
 39920  01AD90  010E               	movlb	14	; () banked
 39921  01AD92  A39D               	btfss	157,1,b	;volatile
 39922  01AD94  D005               	goto	i2l21360
 39923                           
 39924                           ; BSR set to: 14
 39925                           ;eusart2.c: 210: {;eusart2.c: 213: RC2STAbits.CREN = 0;
 39926  01AD96  999D               	bcf	157,4,b	;volatile
 39927                           
 39928                           ;eusart2.c: 214: RC2STAbits.CREN = 1;
 39929  01AD98  899D               	bsf	157,4,b	;volatile
 39930                           
 39931                           ; BSR set to: 14
 39932                           ;eusart2.c: 215: error_handler.USB_UART_COMM_error_flag = 1;
 39933  01AD9A  0E01               	movlw	1
 39934  01AD9C  0100               	movlb	0	; () banked
 39935  01AD9E  6FC0               	movwf	(_error_handler+7)& (0+255),b
 39936  01ADA0                     i2l21360:
 39937                           
 39938                           ;eusart2.c: 216: };eusart2.c: 219: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 39939  01ADA0  0E80               	movlw	low _eusart2RxBuffer
 39940  01ADA2  0100               	movlb	0	; () banked
 39941  01ADA4  25DE               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
 39942  01ADA6  6ED9               	movwf	fsr2l,c
 39943  01ADA8  6ADA               	clrf	fsr2h,c
 39944  01ADAA  0E04               	movlw	high _eusart2RxBuffer
 39945  01ADAC  22DA               	addwfc	fsr2h,f,c
 39946  01ADAE  CE99 FFDF          	movff	3737,indf2	;volatile
 39947                           
 39948                           ; BSR set to: 0
 39949  01ADB2  2BDE               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 39950                           
 39951                           ; BSR set to: 0
 39952                           ;eusart2.c: 220: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 39953  01ADB4  0E3F               	movlw	63
 39954  01ADB6  65DE               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 39955  01ADB8  D002               	goto	i2l21368
 39956                           
 39957                           ; BSR set to: 0
 39958                           ;eusart2.c: 221: {;eusart2.c: 222: eusart2RxHead = 0;
 39959  01ADBA  0E00               	movlw	0
 39960  01ADBC  6FDE               	movwf	_eusart2RxHead& (0+255),b	;volatile
 39961  01ADBE                     i2l21368:
 39962                           
 39963                           ; BSR set to: 0
 39964                           ;eusart2.c: 223: };eusart2.c: 224: eusart2RxCount++;
 39965  01ADBE  0101               	movlb	1	; () banked
 39966  01ADC0  2B8E               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 39967                           
 39968                           ; BSR set to: 1
 39969                           ;eusart2.c: 226: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 39970  01ADC2  0E0A               	movlw	10
 39971  01ADC4  010E               	movlb	14	; () banked
 39972  01ADC6  1999               	xorwf	153,w,b	;volatile
 39973  01ADC8  B4D8               	btfsc	status,2,c
 39974  01ADCA  D004               	goto	i2u2745_40
 39975                           
 39976                           ; BSR set to: 14
 39977  01ADCC  0E0D               	movlw	13
 39978  01ADCE  1999               	xorwf	153,w,b	;volatile
 39979  01ADD0  A4D8               	btfss	status,2,c
 39980  01ADD2  D006               	goto	i2l144
 39981  01ADD4                     i2u2745_40:
 39982                           
 39983                           ; BSR set to: 14
 39984                           ;eusart2.c: 228: eusart2RxStringReady = 1;
 39985  01ADD4  0100               	movlb	0	; () banked
 39986  01ADD6  81FF               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 39987                           
 39988                           ; BSR set to: 0
 39989                           ;eusart2.c: 231: RC2REG = 0;
 39990  01ADD8  0E00               	movlw	0
 39991  01ADDA  010E               	movlb	14	; () banked
 39992  01ADDC  6F99               	movwf	153,b	;volatile
 39993                           
 39994                           ;eusart2.c: 233: }
 39995  01ADDE  D002               	goto	i2l21376
 39996  01ADE0                     i2l144:
 39997                           
 39998                           ; BSR set to: 14
 39999                           ;eusart2.c: 235: else {;eusart2.c: 237: eusart2RxStringReady = 0;
 40000  01ADE0  0100               	movlb	0	; () banked
 40001  01ADE2  91FF               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 40002  01ADE4                     i2l21376:
 40003                           
 40004                           ;eusart2.c: 239: };eusart2.c: 242: if((RC2REG == (int) '\b')) {
 40005  01ADE4  0E08               	movlw	8
 40006  01ADE6  010E               	movlb	14	; () banked
 40007  01ADE8  1999               	xorwf	153,w,b	;volatile
 40008  01ADEA  A4D8               	btfss	status,2,c
 40009  01ADEC  0012               	return	
 40010                           
 40011                           ; BSR set to: 14
 40012                           ;eusart2.c: 244: eusart2RxBuffer[eusart2RxHead] = '\0';
 40013  01ADEE  0E80               	movlw	low _eusart2RxBuffer
 40014  01ADF0  0100               	movlb	0	; () banked
 40015  01ADF2  25DE               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
 40016  01ADF4  6ED9               	movwf	fsr2l,c
 40017  01ADF6  6ADA               	clrf	fsr2h,c
 40018  01ADF8  0E04               	movlw	high _eusart2RxBuffer
 40019  01ADFA  22DA               	addwfc	fsr2h,f,c
 40020  01ADFC  0E00               	movlw	0
 40021  01ADFE  6EDF               	movwf	indf2,c
 40022                           
 40023                           ; BSR set to: 0
 40024                           ;eusart2.c: 245: eusart2RxHead--;
 40025  01AE00  07DE               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 40026                           
 40027                           ; BSR set to: 0
 40028                           ;eusart2.c: 248: printf("\033[K");
 40029  01AE02  0EC6               	movlw	low STR_1
 40030  01AE04  6FA4               	movwf	i2printf@f& (0+255),b
 40031  01AE06  0EFF               	movlw	high STR_1
 40032  01AE08  6FA5               	movwf	(i2printf@f+1)& (0+255),b
 40033  01AE0A  EC90  F0E0         	call	i2_printf	;wreg free
 40034                           
 40035                           ;eusart2.c: 250: if(eusart2RxHead != eusart2RxTail) {
 40036  01AE0E  0101               	movlb	1	; () banked
 40037  01AE10  518F               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 40038  01AE12  0100               	movlb	0	; () banked
 40039  01AE14  19DE               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 40040  01AE16  B4D8               	btfsc	status,2,c
 40041  01AE18  D009               	goto	i2l21390
 40042                           
 40043                           ; BSR set to: 0
 40044                           ;eusart2.c: 252: eusart2RxBuffer[eusart2RxHead] = '\0';
 40045  01AE1A  0E80               	movlw	low _eusart2RxBuffer
 40046  01AE1C  25DE               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
 40047  01AE1E  6ED9               	movwf	fsr2l,c
 40048  01AE20  6ADA               	clrf	fsr2h,c
 40049  01AE22  0E04               	movlw	high _eusart2RxBuffer
 40050  01AE24  22DA               	addwfc	fsr2h,f,c
 40051  01AE26  0E00               	movlw	0
 40052  01AE28  6EDF               	movwf	indf2,c
 40053                           
 40054                           ; BSR set to: 0
 40055                           ;eusart2.c: 253: eusart2RxHead--;
 40056  01AE2A  07DE               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 40057  01AE2C                     i2l21390:
 40058                           
 40059                           ; BSR set to: 0
 40060                           ;eusart2.c: 255: };eusart2.c: 257: RC2REG = 0;
 40061  01AE2C  0E00               	movlw	0
 40062  01AE2E  010E               	movlb	14	; () banked
 40063  01AE30  6F99               	movwf	153,b	;volatile
 40064                           
 40065                           ; BSR set to: 14
 40066  01AE32  0012               	return		;funcret
 40067  01AE34                     __end_of_EUSART2_Receive_ISR:
 40068                           	opt callstack 0
 40069                           
 40070 ;; *************** function i2_printf *****************
 40071 ;; Defined at:
 40072 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\printf.c"
 40073 ;; Parameters:    Size  Location     Type
 40074 ;;  f               2   68[BANK0 ] PTR const unsigned char 
 40075 ;;		 -> STR_357(60), STR_356(24), STR_355(24), STR_354(24), 
 40076 ;;		 -> STR_353(27), STR_352(20), STR_351(35), STR_350(34), 
 40077 ;;		 -> STR_349(37), STR_348(34), STR_347(36), STR_346(35), 
 40078 ;;		 -> STR_345(33), STR_344(35), STR_343(20), STR_342(23), 
 40079 ;;		 -> STR_341(20), STR_340(22), STR_339(21), STR_338(19), 
 40080 ;;		 -> STR_337(21), STR_336(27), STR_335(18), STR_334(11), 
 40081 ;;		 -> terminalTextAttributes@print_string(16), STR_304(4), STR_303(4), STR_302(4), 
 40082 ;;		 -> STR_301(4), STR_300(5), STR_292(3), STR_291(39), 
 40083 ;;		 -> STR_290(96), STR_289(62), STR_288(34), STR_287(3), 
 40084 ;;		 -> STR_286(50), STR_285(56), STR_284(55), STR_283(27), 
 40085 ;;		 -> STR_282(3), STR_281(58), STR_280(40), STR_279(63), 
 40086 ;;		 -> STR_278(42), STR_277(36), STR_276(3), STR_275(61), 
 40087 ;;		 -> STR_274(3), STR_273(59), STR_272(3), STR_271(45), 
 40088 ;;		 -> STR_270(3), STR_269(58), STR_268(59), STR_267(20), 
 40089 ;;		 -> STR_266(3), STR_265(54), STR_264(52), STR_263(23), 
 40090 ;;		 -> STR_262(3), STR_261(43), STR_260(44), STR_259(23), 
 40091 ;;		 -> STR_258(48), STR_257(3), STR_256(50), STR_255(58), 
 40092 ;;		 -> STR_254(35), STR_253(32), STR_252(64), STR_251(30), 
 40093 ;;		 -> STR_250(31), STR_249(63), STR_248(33), STR_247(35), 
 40094 ;;		 -> STR_246(37), STR_245(40), STR_244(28), STR_243(46), 
 40095 ;;		 -> STR_242(31), STR_241(52), STR_240(14), STR_239(28), 
 40096 ;;		 -> STR_238(50), STR_237(29), STR_236(45), STR_235(88), 
 40097 ;;		 -> STR_234(37), STR_233(3), STR_232(30), STR_231(46), 
 40098 ;;		 -> STR_230(39), STR_229(62), STR_228(57), STR_227(559), 
 40099 ;;		 -> STR_226(22), STR_225(3), STR_223(3), STR_222(47), 
 40100 ;;		 -> STR_221(3), STR_218(24), STR_216(23), STR_214(23), 
 40101 ;;		 -> STR_212(3), STR_211(3), STR_210(54), STR_209(3), 
 40102 ;;		 -> STR_208(56), STR_207(3), STR_206(60), STR_205(61), 
 40103 ;;		 -> STR_204(3), STR_203(62), STR_202(3), STR_201(50), 
 40104 ;;		 -> STR_200(3), STR_199(45), STR_198(3), STR_196(54), 
 40105 ;;		 -> STR_194(4), STR_193(5), STR_191(4), STR_190(5), 
 40106 ;;		 -> STR_10(47), STR_9(30), STR_8(46), STR_7(39), 
 40107 ;;		 -> STR_6(62), STR_5(57), STR_4(39), STR_3(44), 
 40108 ;;		 -> STR_2(52), STR_1(4), 
 40109 ;; Auto vars:     Size  Location     Type
 40110 ;;  printf          5   72[BANK0 ] struct __prbuf
 40111 ;;  printf          2   70[BANK0 ] PTR void [1]
 40112 ;;		 -> ?i2_printf(2), ?_sprintf(2), ?_printf(2), 
 40113 ;; Return value:  Size  Location     Type
 40114 ;;                  2   68[BANK0 ] int 
 40115 ;; Registers used:
 40116 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40117 ;; Tracked objects:
 40118 ;;		On entry : 0/0
 40119 ;;		On exit  : 0/0
 40120 ;;		Unchanged: 0/0
 40121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40122 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40123 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40125 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40126 ;;Total ram usage:        9 bytes
 40127 ;; Hardware stack levels used:    1
 40128 ;; Hardware stack levels required when called:    3
 40129 ;; This function calls:
 40130 ;;		i2__doprnt
 40131 ;; This function is called by:
 40132 ;;		_EUSART2_Receive_ISR
 40133 ;; This function uses a non-reentrant model
 40134 ;;
 40135                           
 40136                           	psect	text179
 40137  01C120                     __ptext179:
 40138                           	opt callstack 0
 40139  01C120                     i2_printf:
 40140                           	opt callstack 12
 40141                           
 40142                           ; BSR set to: 14
 40143                           ;incstack = 0
 40144  01C120  0E00               	movlw	0
 40145  01C122  0100               	movlb	0	; () banked
 40146  01C124  6FA8               	movwf	i2printf@pb& (0+255),b
 40147  01C126  0E00               	movlw	0
 40148  01C128  6FA9               	movwf	(i2printf@pb+1)& (0+255),b
 40149  01C12A  0EDA               	movlw	low i2_putch
 40150  01C12C  6FAA               	movwf	(i2printf@pb+2)& (0+255),b
 40151  01C12E  0ECA               	movlw	high i2_putch
 40152  01C130  6FAB               	movwf	(i2printf@pb+3)& (0+255),b
 40153  01C132  0E01               	movlw	low (i2_putch shr (0+16))
 40154  01C134  6FAC               	movwf	(i2printf@pb+4)& (0+255),b
 40155  01C136  0EA6               	movlw	low (?i2_printf+2)
 40156  01C138  6FA6               	movwf	i2printf@ap& (0+255),b
 40157  01C13A  0E00               	movlw	high (?i2_printf+2)
 40158  01C13C  6FA7               	movwf	(i2printf@ap+1)& (0+255),b
 40159                           
 40160                           ; BSR set to: 0
 40161                           ;	Return value of i2_printf is never used
 40162  01C13E  0EA8               	movlw	low i2printf@pb
 40163  01C140  6F6C               	movwf	i2__doprnt@pb& (0+255),b
 40164  01C142  0E00               	movlw	high i2printf@pb
 40165  01C144  6F6D               	movwf	(i2__doprnt@pb+1)& (0+255),b
 40166  01C146  C0A4  F06E         	movff	i2printf@f,i2__doprnt@f
 40167  01C14A  C0A5  F06F         	movff	i2printf@f+1,i2__doprnt@f+1
 40168  01C14E  0EA6               	movlw	low i2printf@ap
 40169  01C150  6F70               	movwf	i2__doprnt@ap& (0+255),b
 40170  01C152  0E00               	movlw	high i2printf@ap
 40171  01C154  6F71               	movwf	(i2__doprnt@ap+1)& (0+255),b
 40172  01C156  EC92  F08B         	call	i2__doprnt	;wreg free
 40173  01C15A  0012               	return		;funcret
 40174  01C15C                     __end_ofi2_printf:
 40175                           	opt callstack 0
 40176                           
 40177 ;; *************** function i2__doprnt *****************
 40178 ;; Defined at:
 40179 ;;		line 466 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 40180 ;; Parameters:    Size  Location     Type
 40181 ;;  pb              2   12[BANK0 ] PTR struct __prbuf
 40182 ;;		 -> i2printf@pb(5), sprintf@pb(5), printf@pb(5), 
 40183 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 40184 ;;		 -> STR_360(11), STR_357(60), STR_356(24), STR_355(24), 
 40185 ;;		 -> STR_354(24), STR_353(27), STR_352(20), STR_351(35), 
 40186 ;;		 -> STR_350(34), STR_349(37), STR_348(34), STR_347(36), 
 40187 ;;		 -> STR_346(35), STR_345(33), STR_344(35), STR_343(20), 
 40188 ;;		 -> STR_342(23), STR_341(20), STR_340(22), STR_339(21), 
 40189 ;;		 -> STR_338(19), STR_337(21), STR_336(27), STR_335(18), 
 40190 ;;		 -> STR_334(11), terminalTextAttributes@print_string(16), STR_304(4), STR_303(4), 
 40191 ;;		 -> STR_302(4), STR_301(4), STR_300(5), STR_299(5), 
 40192 ;;		 -> STR_298(9), STR_297(9), STR_296(9), STR_295(8), 
 40193 ;;		 -> STR_294(9), STR_293(9), STR_292(3), STR_291(39), 
 40194 ;;		 -> STR_290(96), STR_289(62), STR_288(34), STR_287(3), 
 40195 ;;		 -> STR_286(50), STR_285(56), STR_284(55), STR_283(27), 
 40196 ;;		 -> STR_282(3), STR_281(58), STR_280(40), STR_279(63), 
 40197 ;;		 -> STR_278(42), STR_277(36), STR_276(3), STR_275(61), 
 40198 ;;		 -> STR_274(3), STR_273(59), STR_272(3), STR_271(45), 
 40199 ;;		 -> STR_270(3), STR_269(58), STR_268(59), STR_267(20), 
 40200 ;;		 -> STR_266(3), STR_265(54), STR_264(52), STR_263(23), 
 40201 ;;		 -> STR_262(3), STR_261(43), STR_260(44), STR_259(23), 
 40202 ;;		 -> STR_258(48), STR_257(3), STR_256(50), STR_255(58), 
 40203 ;;		 -> STR_254(35), STR_253(32), STR_252(64), STR_251(30), 
 40204 ;;		 -> STR_250(31), STR_249(63), STR_248(33), STR_247(35), 
 40205 ;;		 -> STR_246(37), STR_245(40), STR_244(28), STR_243(46), 
 40206 ;;		 -> STR_242(31), STR_241(52), STR_240(14), STR_239(28), 
 40207 ;;		 -> STR_238(50), STR_237(29), STR_236(45), STR_235(88), 
 40208 ;;		 -> STR_234(37), STR_233(3), STR_232(30), STR_231(46), 
 40209 ;;		 -> STR_230(39), STR_229(62), STR_228(57), STR_227(559), 
 40210 ;;		 -> STR_226(22), STR_225(3), STR_223(3), STR_222(47), 
 40211 ;;		 -> STR_221(3), STR_218(24), STR_216(23), STR_214(23), 
 40212 ;;		 -> STR_212(3), STR_211(3), STR_210(54), STR_209(3), 
 40213 ;;		 -> STR_208(56), STR_207(3), STR_206(60), STR_205(61), 
 40214 ;;		 -> STR_204(3), STR_203(62), STR_202(3), STR_201(50), 
 40215 ;;		 -> STR_200(3), STR_199(45), STR_198(3), STR_196(54), 
 40216 ;;		 -> STR_194(4), STR_193(5), STR_191(4), STR_190(5), 
 40217 ;;		 -> STR_180(7), STR_178(5), STR_171(4), STR_166(4), 
 40218 ;;		 -> STR_161(11), STR_156(11), STR_155(11), STR_154(11), 
 40219 ;;		 -> STR_153(11), STR_152(9), STR_148(11), STR_146(11), 
 40220 ;;		 -> STR_145(11), STR_144(11), STR_143(11), STR_142(9), 
 40221 ;;		 -> STR_141(11), STR_140(9), STR_139(8), STR_138(9), 
 40222 ;;		 -> STR_137(8), STR_136(9), STR_132(5), STR_122(8), 
 40223 ;;		 -> STR_118(8), STR_114(8), STR_110(8), STR_106(9), 
 40224 ;;		 -> STR_101(8), STR_96(8), STR_92(8), STR_87(8), 
 40225 ;;		 -> STR_83(8), STR_79(8), STR_66(7), STR_64(5), 
 40226 ;;		 -> STR_57(11), STR_56(10), STR_55(13), STR_54(12), 
 40227 ;;		 -> STR_53(11), STR_52(10), STR_51(10), STR_50(9), 
 40228 ;;		 -> STR_49(11), STR_48(10), STR_10(47), STR_9(30), 
 40229 ;;		 -> STR_8(46), STR_7(39), STR_6(62), STR_5(57), 
 40230 ;;		 -> STR_4(39), STR_3(44), STR_2(52), STR_1(4), 
 40231 ;;  ap              2   16[BANK0 ] PTR PTR void 
 40232 ;;		 -> i2printf@ap(2), sprintf@ap(2), printf@ap(2), 
 40233 ;; Auto vars:     Size  Location     Type
 40234 ;;  _doprnt         4   57[BANK0 ] unsigned long 
 40235 ;;  _doprnt         4   53[BANK0 ] unsigned long 
 40236 ;;  _doprnt         4   49[BANK0 ] struct .
 40237 ;;  _doprnt         2   65[BANK0 ] unsigned short 
 40238 ;;  _doprnt         2   63[BANK0 ] int 
 40239 ;;  _doprnt         2   61[BANK0 ] int 
 40240 ;;  _doprnt         2   47[BANK0 ] int 
 40241 ;;  _doprnt         2   45[BANK0 ] unsigned int 
 40242 ;;  _doprnt         2   43[BANK0 ] PTR const unsigned char 
 40243 ;;		 -> i2__doprnt@c(1), ?_sprintf(2), ?_printf(2), ftoa@buf(17), 
 40244 ;;		 -> STR_358(7), _doprnt@c(1), freqMeasConvert@qi_period(4), floatToEngineeringFormat@result(20), 
 40245 ;;		 -> OLED_updateHandler@rev_id_str(17), OLED_updateHandler@dev_id_str(17), OLED_RAM_Buffer(68), getStringSecondsAsTim
      +e@buff(20), 
 40246 ;;		 -> getStringSecondsAsTime@return_string(40), STR_47(10), STR_46(13), STR_45(13), 
 40247 ;;		 -> STR_44(12), STR_43(12), STR_42(13), STR_41(12), 
 40248 ;;		 -> STR_30(16), STR_29(22), STR_28(21), STR_27(27), 
 40249 ;;		 -> STR_26(41), STR_25(32), STR_24(19), STR_23(16), 
 40250 ;;		 -> STR_22(15), STR_21(16), STR_15(10), STR_14(6), 
 40251 ;;		 -> STR_13(14), STR_12(9), STR_11(5), LM73Convert@Ambient_Conv(2), 
 40252 ;;		 -> LM73Convert@POS5_Conv(2), LM73Convert@QI_Conv(2), NULL(0), 
 40253 ;;  _doprnt         1   67[BANK0 ] unsigned char 
 40254 ;;  _doprnt         1   26[BANK0 ] unsigned char 
 40255 ;;  _doprnt         1    0        unsigned char 
 40256 ;; Return value:  Size  Location     Type
 40257 ;;                  2   12[BANK0 ] int 
 40258 ;; Registers used:
 40259 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40260 ;; Tracked objects:
 40261 ;;		On entry : 0/0
 40262 ;;		On exit  : 0/0
 40263 ;;		Unchanged: 0/0
 40264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40265 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40266 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40267 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40268 ;;      Totals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40269 ;;Total ram usage:       56 bytes
 40270 ;; Hardware stack levels used:    1
 40271 ;; Hardware stack levels required when called:    2
 40272 ;; This function calls:
 40273 ;;		Absolute function
 40274 ;;		i2___awdiv
 40275 ;;		i2___fladd
 40276 ;;		i2___fleq
 40277 ;;		i2___flge
 40278 ;;		i2___flmul
 40279 ;;		i2___flneg
 40280 ;;		i2___flsub
 40281 ;;		i2___fltol
 40282 ;;		i2___lldiv
 40283 ;;		i2___llmod
 40284 ;;		i2___wmul
 40285 ;;		i2___xxtofl
 40286 ;;		i2__div_to_l_
 40287 ;;		i2__tdiv_to_l_
 40288 ;;		i2_fround
 40289 ;;		i2_isdigit
 40290 ;;		i2_putch
 40291 ;;		i2_scale
 40292 ;; This function is called by:
 40293 ;;		i2_printf
 40294 ;; This function uses a non-reentrant model
 40295 ;;
 40296                           
 40297                           	psect	text180
 40298  011724                     __ptext180:
 40299                           	opt callstack 0
 40300  011724                     i2__doprnt:
 40301                           	opt callstack 12
 40302                           
 40303                           ;doprnt.c: 507: char c;;doprnt.c: 509: int width;;doprnt.c: 512: int prec;;doprnt.c: 520
      +                          : unsigned short flag;;doprnt.c: 527: char d;;doprnt.c: 528: double fval;;doprnt.c: 529:
      +                           int eexp;;doprnt.c: 535: union {;doprnt.c: 536: unsigned long vd;;doprnt.c: 537: double
      +                           integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: unsigned long val;;doprnt.c: 541: unsign
      +                          ed len;;doprnt.c: 542: const char * cp;;doprnt.c: 548: while((c = *f++)) {
 40304                           
 40305                           ;incstack = 0
 40306  011724  EFFB  F096         	goto	i2u2691_40
 40307  011728                     i2l20126:
 40308                           
 40309                           ; BSR set to: 0
 40310                           ;doprnt.c: 550: if(c != '%')
 40311  011728  0E25               	movlw	37
 40312  01172A  19A3               	xorwf	i2__doprnt@c& (0+255),w,b
 40313  01172C  B4D8               	btfsc	status,2,c
 40314  01172E  D036               	goto	i2l20136
 40315                           
 40316                           ; BSR set to: 0
 40317  011730  EE20 F002          	lfsr	2,2
 40318  011734  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40319  011736  26D9               	addwf	fsr2l,f,c
 40320  011738  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40321  01173A  22DA               	addwfc	fsr2h,f,c
 40322  01173C  50DE               	movf	postinc2,w,c
 40323  01173E  10DE               	iorwf	postinc2,w,c
 40324  011740  10DE               	iorwf	postinc2,w,c
 40325  011742  B4D8               	btfsc	status,2,c
 40326  011744  D014               	goto	i2l20132
 40327                           
 40328                           ; BSR set to: 0
 40329  011746  EE20 F002          	lfsr	2,2
 40330  01174A  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40331  01174C  26D9               	addwf	fsr2l,f,c
 40332  01174E  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40333  011750  22DA               	addwfc	fsr2h,f,c
 40334  011752  D802               	call	i2u2563_48
 40335  011754  EFFB  F096         	goto	i2u2691_40
 40336  011758                     i2u2563_48:
 40337  011758  0005               	push	
 40338  01175A  6EFA               	movwf	pclath,c
 40339  01175C  50DE               	movf	postinc2,w,c
 40340  01175E  6EFD               	movwf	tosl,c
 40341  011760  50DE               	movf	postinc2,w,c
 40342  011762  6EFE               	movwf	tosh,c
 40343  011764  50DE               	movf	postinc2,w,c
 40344  011766  6EFF               	movwf	tosu,c
 40345  011768  50FA               	movf	pclath,w,c
 40346  01176A  51A3               	movf	i2__doprnt@c& (0+255),w,b
 40347  01176C  0012               	return		;indir
 40348  01176E                     i2l20132:
 40349                           
 40350                           ; BSR set to: 0
 40351  01176E  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40352  011772  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40353  011776  CFDE F072          	movff	postinc2,??i2__doprnt
 40354  01177A  CFDD F073          	movff	postdec2,??i2__doprnt+1
 40355  01177E  C072  FFD9         	movff	??i2__doprnt,fsr2l
 40356  011782  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 40357  011786  C0A3  FFDF         	movff	i2__doprnt@c,indf2
 40358                           
 40359                           ; BSR set to: 0
 40360  01178A  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40361  01178E  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40362  011792  2ADE               	incf	postinc2,f,c
 40363  011794  0E00               	movlw	0
 40364  011796  22DD               	addwfc	postdec2,f,c
 40365  011798  EFFB  F096         	goto	i2u2691_40
 40366  01179C                     i2l20136:
 40367                           
 40368                           ; BSR set to: 0
 40369                           ;doprnt.c: 555: };doprnt.c: 558: width = 0;
 40370  01179C  0E00               	movlw	0
 40371  01179E  6F9E               	movwf	(i2__doprnt@width+1)& (0+255),b
 40372  0117A0  0E00               	movlw	0
 40373  0117A2  6F9D               	movwf	i2__doprnt@width& (0+255),b
 40374                           
 40375                           ;doprnt.c: 560: flag = 0;
 40376  0117A4  0E00               	movlw	0
 40377  0117A6  6FA2               	movwf	(i2__doprnt@flag+1)& (0+255),b
 40378  0117A8  0E00               	movlw	0
 40379  0117AA  6FA1               	movwf	i2__doprnt@flag& (0+255),b
 40380  0117AC  D00A               	goto	i2l20146
 40381  0117AE                     i2l20138:
 40382                           
 40383                           ;doprnt.c: 573: flag |= 0x01;
 40384  0117AE  0100               	movlb	0	; () banked
 40385  0117B0  81A1               	bsf	i2__doprnt@flag& (0+255),0,b
 40386  0117B2  D005               	goto	L34
 40387  0117B4                     i2l20140:
 40388                           
 40389                           ;doprnt.c: 580: flag |= 0x02;
 40390  0117B4  0100               	movlb	0	; () banked
 40391  0117B6  83A1               	bsf	i2__doprnt@flag& (0+255),1,b
 40392  0117B8  D002               	goto	L34
 40393  0117BA                     i2l20142:
 40394                           
 40395                           ;doprnt.c: 592: flag |= 0x04;
 40396  0117BA  0100               	movlb	0	; () banked
 40397  0117BC  85A1               	bsf	i2__doprnt@flag& (0+255),2,b
 40398  0117BE                     L34:
 40399                           
 40400                           ;doprnt.c: 593: f++;
 40401  0117BE  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 40402  0117C0  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 40403  0117C2                     i2l20146:
 40404                           
 40405                           ; BSR set to: 0
 40406  0117C2  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 40407  0117C6  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 40408  0117CA  0E00               	movlw	low (__mediumconst shr (0+16))
 40409  0117CC  6EF8               	movwf	tblptru,c
 40410  0117CE  0E0E               	movlw	(high __ramtop+-1)
 40411  0117D0  64F7               	cpfsgt	tblptrh,c
 40412  0117D2  D003               	bra	i2u2564_47
 40413  0117D4  0008               	tblrd		*
 40414  0117D6  50F5               	movf	tablat,w,c
 40415  0117D8  D005               	bra	i2u2564_40
 40416  0117DA                     i2u2564_47:
 40417  0117DA  CFF6 FFE9          	movff	tblptrl,fsr0l
 40418  0117DE  CFF7 FFEA          	movff	tblptrh,fsr0h
 40419  0117E2  50EF               	movf	indf0,w,c
 40420  0117E4                     i2u2564_40:
 40421                           
 40422                           ; Switch size 1, requested type "simple"
 40423                           ; Number of cases is 3, Range of values is 32 to 48
 40424                           ; switch strategies available:
 40425                           ; Name         Instructions Cycles
 40426                           ; simple_byte           10     6 (average)
 40427                           ;	Chosen strategy is simple_byte
 40428  0117E4  0A20               	xorlw	32	; case 32
 40429  0117E6  B4D8               	btfsc	status,2,c
 40430  0117E8  D7E2               	goto	i2l20138
 40431  0117EA  0A0B               	xorlw	11	; case 43
 40432  0117EC  B4D8               	btfsc	status,2,c
 40433  0117EE  D7E2               	goto	i2l20140
 40434  0117F0  0A1B               	xorlw	27	; case 48
 40435  0117F2  B4D8               	btfsc	status,2,c
 40436  0117F4  D7E2               	goto	i2l20142
 40437                           
 40438                           ;doprnt.c: 601: if(flag & 0x02)
 40439  0117F6  0100               	movlb	0	; () banked
 40440  0117F8  B3A1               	btfsc	i2__doprnt@flag& (0+255),1,b
 40441                           
 40442                           ; BSR set to: 0
 40443                           ;doprnt.c: 602: flag &= ~0x01;
 40444  0117FA  91A1               	bcf	i2__doprnt@flag& (0+255),0,b
 40445                           
 40446                           ; BSR set to: 0
 40447                           ;doprnt.c: 609: if(isdigit((unsigned)*f)) {
 40448  0117FC  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 40449  011800  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 40450  011804  0E00               	movlw	low (__mediumconst shr (0+16))
 40451  011806  6EF8               	movwf	tblptru,c
 40452  011808  0E0E               	movlw	(high __ramtop+-1)
 40453  01180A  64F7               	cpfsgt	tblptrh,c
 40454  01180C  D003               	bra	i2u2566_47
 40455  01180E  0008               	tblrd		*
 40456  011810  50F5               	movf	tablat,w,c
 40457  011812  D005               	bra	i2u2566_40
 40458  011814                     i2u2566_47:
 40459  011814  CFF6 FFE9          	movff	tblptrl,fsr0l
 40460  011818  CFF7 FFEA          	movff	tblptrh,fsr0h
 40461  01181C  50EF               	movf	indf0,w,c
 40462  01181E                     i2u2566_40:
 40463  01181E  ECA5  F0E3         	call	i2_isdigit
 40464  011822  A0D8               	btfss	status,0,c
 40465  011824  D04B               	goto	i2u2570_40
 40466                           
 40467                           ;doprnt.c: 610: width = 0;
 40468  011826  0E00               	movlw	0
 40469  011828  0100               	movlb	0	; () banked
 40470  01182A  6F9E               	movwf	(i2__doprnt@width+1)& (0+255),b
 40471  01182C  0E00               	movlw	0
 40472  01182E  6F9D               	movwf	i2__doprnt@width& (0+255),b
 40473  011830                     i2l20154:
 40474                           
 40475                           ;doprnt.c: 612: width *= 10;
 40476  011830  C09D  F001         	movff	i2__doprnt@width,i2___wmul@multiplier
 40477  011834  C09E  F002         	movff	i2__doprnt@width+1,i2___wmul@multiplier+1
 40478  011838  0E00               	movlw	0
 40479  01183A  6E04               	movwf	i2___wmul@multiplicand+1,c
 40480  01183C  0E0A               	movlw	10
 40481  01183E  6E03               	movwf	i2___wmul@multiplicand,c
 40482  011840  ECDC  F0E2         	call	i2___wmul	;wreg free
 40483  011844  C001  F09D         	movff	?i2___wmul,i2__doprnt@width
 40484  011848  C002  F09E         	movff	?i2___wmul+1,i2__doprnt@width+1
 40485                           
 40486                           ;doprnt.c: 613: width += *f++ - '0';
 40487  01184C  0ED0               	movlw	208
 40488  01184E  0100               	movlb	0	; () banked
 40489  011850  6F72               	movwf	??i2__doprnt& (0+255),b
 40490  011852  0EFF               	movlw	255
 40491  011854  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 40492  011856  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 40493  01185A  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 40494  01185E  0E00               	movlw	low (__mediumconst shr (0+16))
 40495  011860  6EF8               	movwf	tblptru,c
 40496  011862  0E0E               	movlw	(high __ramtop+-1)
 40497  011864  64F7               	cpfsgt	tblptrh,c
 40498  011866  D003               	bra	i2u2568_47
 40499  011868  0008               	tblrd		*
 40500  01186A  50F5               	movf	tablat,w,c
 40501  01186C  D005               	bra	i2u2568_40
 40502  01186E                     i2u2568_47:
 40503  01186E  CFF6 FFE9          	movff	tblptrl,fsr0l
 40504  011872  CFF7 FFEA          	movff	tblptrh,fsr0h
 40505  011876  50EF               	movf	indf0,w,c
 40506  011878                     i2u2568_40:
 40507  011878  0100               	movlb	0	; () banked
 40508  01187A  6F74               	movwf	(??i2__doprnt+2)& (0+255),b
 40509  01187C  6B75               	clrf	(??i2__doprnt+3)& (0+255),b
 40510  01187E  5172               	movf	??i2__doprnt& (0+255),w,b
 40511  011880  2774               	addwf	(??i2__doprnt+2)& (0+255),f,b
 40512  011882  5173               	movf	(??i2__doprnt+1)& (0+255),w,b
 40513  011884  2375               	addwfc	(??i2__doprnt+3)& (0+255),f,b
 40514  011886  5174               	movf	(??i2__doprnt+2)& (0+255),w,b
 40515  011888  279D               	addwf	i2__doprnt@width& (0+255),f,b
 40516  01188A  5175               	movf	(??i2__doprnt+3)& (0+255),w,b
 40517  01188C  239E               	addwfc	(i2__doprnt@width+1)& (0+255),f,b
 40518                           
 40519                           ; BSR set to: 0
 40520  01188E  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 40521  011890  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 40522                           
 40523                           ; BSR set to: 0
 40524                           ;doprnt.c: 614: } while(isdigit((unsigned)*f));
 40525  011892  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 40526  011896  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 40527  01189A  0E00               	movlw	low (__mediumconst shr (0+16))
 40528  01189C  6EF8               	movwf	tblptru,c
 40529  01189E  0E0E               	movlw	(high __ramtop+-1)
 40530  0118A0  64F7               	cpfsgt	tblptrh,c
 40531  0118A2  D003               	bra	i2u2569_47
 40532  0118A4  0008               	tblrd		*
 40533  0118A6  50F5               	movf	tablat,w,c
 40534  0118A8  D005               	bra	i2u2569_40
 40535  0118AA                     i2u2569_47:
 40536  0118AA  CFF6 FFE9          	movff	tblptrl,fsr0l
 40537  0118AE  CFF7 FFEA          	movff	tblptrh,fsr0h
 40538  0118B2  50EF               	movf	indf0,w,c
 40539  0118B4                     i2u2569_40:
 40540  0118B4  ECA5  F0E3         	call	i2_isdigit
 40541  0118B8  B0D8               	btfsc	status,0,c
 40542  0118BA  D7BA               	goto	i2l20154
 40543  0118BC                     i2u2570_40:
 40544                           
 40545                           ;doprnt.c: 620: };doprnt.c: 623: if(*f == '.') {
 40546  0118BC  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 40547  0118C0  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 40548  0118C4  0E00               	movlw	low (__mediumconst shr (0+16))
 40549  0118C6  6EF8               	movwf	tblptru,c
 40550  0118C8  0E0E               	movlw	(high __ramtop+-1)
 40551  0118CA  64F7               	cpfsgt	tblptrh,c
 40552  0118CC  D003               	bra	i2u2571_47
 40553  0118CE  0008               	tblrd		*
 40554  0118D0  50F5               	movf	tablat,w,c
 40555  0118D2  D005               	bra	i2u2571_40
 40556  0118D4                     i2u2571_47:
 40557  0118D4  CFF6 FFE9          	movff	tblptrl,fsr0l
 40558  0118D8  CFF7 FFEA          	movff	tblptrh,fsr0h
 40559  0118DC  50EF               	movf	indf0,w,c
 40560  0118DE                     i2u2571_40:
 40561  0118DE  0A2E               	xorlw	46
 40562  0118E0  A4D8               	btfss	status,2,c
 40563  0118E2  D048               	goto	i2l20174
 40564                           
 40565                           ;doprnt.c: 624: flag |= 0x4000;
 40566  0118E4  0100               	movlb	0	; () banked
 40567  0118E6  8DA2               	bsf	(i2__doprnt@flag+1)& (0+255),6,b
 40568                           
 40569                           ;doprnt.c: 625: f++;
 40570  0118E8  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 40571  0118EA  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 40572                           
 40573                           ; BSR set to: 0
 40574                           ;doprnt.c: 639: {;doprnt.c: 640: prec = 0;
 40575  0118EC  0E00               	movlw	0
 40576  0118EE  6FA0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 40577  0118F0  0E00               	movlw	0
 40578  0118F2  6F9F               	movwf	i2__doprnt@prec& (0+255),b
 40579                           
 40580                           ;doprnt.c: 641: while(isdigit((unsigned)*f))
 40581  0118F4  D029               	goto	i2l20172
 40582  0118F6                     i2l20168:
 40583                           
 40584                           ;doprnt.c: 642: prec = prec*10 + *f++ - '0';
 40585  0118F6  C09F  F001         	movff	i2__doprnt@prec,i2___wmul@multiplier
 40586  0118FA  C0A0  F002         	movff	i2__doprnt@prec+1,i2___wmul@multiplier+1
 40587  0118FE  0E00               	movlw	0
 40588  011900  6E04               	movwf	i2___wmul@multiplicand+1,c
 40589  011902  0E0A               	movlw	10
 40590  011904  6E03               	movwf	i2___wmul@multiplicand,c
 40591  011906  ECDC  F0E2         	call	i2___wmul	;wreg free
 40592  01190A  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 40593  01190E  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 40594  011912  0E00               	movlw	low (__mediumconst shr (0+16))
 40595  011914  6EF8               	movwf	tblptru,c
 40596  011916  0E0E               	movlw	(high __ramtop+-1)
 40597  011918  64F7               	cpfsgt	tblptrh,c
 40598  01191A  D003               	bra	i2u2573_47
 40599  01191C  0008               	tblrd		*
 40600  01191E  50F5               	movf	tablat,w,c
 40601  011920  D005               	bra	i2u2573_40
 40602  011922                     i2u2573_47:
 40603  011922  CFF6 FFE9          	movff	tblptrl,fsr0l
 40604  011926  CFF7 FFEA          	movff	tblptrh,fsr0h
 40605  01192A  50EF               	movf	indf0,w,c
 40606  01192C                     i2u2573_40:
 40607  01192C  0100               	movlb	0	; () banked
 40608  01192E  6F72               	movwf	??i2__doprnt& (0+255),b
 40609  011930  5172               	movf	??i2__doprnt& (0+255),w,b
 40610  011932  2601               	addwf	?i2___wmul,f,c
 40611  011934  0E00               	movlw	0
 40612  011936  2202               	addwfc	?i2___wmul+1,f,c
 40613  011938  0ED0               	movlw	208
 40614  01193A  2401               	addwf	?i2___wmul,w,c
 40615  01193C  6F9F               	movwf	i2__doprnt@prec& (0+255),b
 40616  01193E  0EFF               	movlw	255
 40617  011940  2002               	addwfc	?i2___wmul+1,w,c
 40618  011942  6FA0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 40619                           
 40620                           ; BSR set to: 0
 40621  011944  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 40622  011946  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 40623  011948                     i2l20172:
 40624                           
 40625                           ; BSR set to: 0
 40626  011948  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 40627  01194C  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 40628  011950  0E00               	movlw	low (__mediumconst shr (0+16))
 40629  011952  6EF8               	movwf	tblptru,c
 40630  011954  0E0E               	movlw	(high __ramtop+-1)
 40631  011956  64F7               	cpfsgt	tblptrh,c
 40632  011958  D003               	bra	i2u2574_47
 40633  01195A  0008               	tblrd		*
 40634  01195C  50F5               	movf	tablat,w,c
 40635  01195E  D005               	bra	i2u2574_40
 40636  011960                     i2u2574_47:
 40637  011960  CFF6 FFE9          	movff	tblptrl,fsr0l
 40638  011964  CFF7 FFEA          	movff	tblptrh,fsr0h
 40639  011968  50EF               	movf	indf0,w,c
 40640  01196A                     i2u2574_40:
 40641  01196A  ECA5  F0E3         	call	i2_isdigit
 40642  01196E  A0D8               	btfss	status,0,c
 40643  011970  D12A               	goto	i2l20242
 40644  011972  D7C1               	goto	i2l20168
 40645  011974                     i2l20174:
 40646                           
 40647                           ;doprnt.c: 645: prec = 0;
 40648  011974  0E00               	movlw	0
 40649  011976  0100               	movlb	0	; () banked
 40650  011978  6FA0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 40651  01197A  0E00               	movlw	0
 40652  01197C  6F9F               	movwf	i2__doprnt@prec& (0+255),b
 40653                           
 40654                           ; BSR set to: 0
 40655                           ;doprnt.c: 647: flag |= 0x1000;
 40656  01197E  89A2               	bsf	(i2__doprnt@flag+1)& (0+255),4,b
 40657  011980  D122               	goto	i2l20242
 40658  011982                     i2l20178:
 40659                           
 40660                           ; BSR set to: 0
 40661                           ;doprnt.c: 662: flag |= 0x10;
 40662  011982  89A1               	bsf	i2__doprnt@flag& (0+255),4,b
 40663                           
 40664                           ;doprnt.c: 663: goto loop;
 40665  011984  D120               	goto	i2l20242
 40666  011986                     i2l20180:
 40667                           
 40668                           ; BSR set to: 0
 40669                           ;doprnt.c: 682: flag |= 0x400;
 40670  011986  85A2               	bsf	(i2__doprnt@flag+1)& (0+255),2,b
 40671                           
 40672                           ;doprnt.c: 683: break;
 40673  011988  D159               	goto	i2l20244
 40674  01198A                     i2l20182:
 40675                           
 40676                           ; BSR set to: 0
 40677                           ;doprnt.c: 737: case 'x':;doprnt.c: 740: flag |= 0x80;
 40678  01198A  8FA1               	bsf	i2__doprnt@flag& (0+255),7,b
 40679                           
 40680                           ;doprnt.c: 742: break;
 40681  01198C  D157               	goto	i2l20244
 40682  01198E                     i2l20184:
 40683                           
 40684                           ; BSR set to: 0
 40685                           ;doprnt.c: 753: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 40686  01198E  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 40687  011992  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 40688  011996  CFDF F072          	movff	indf2,??i2__doprnt
 40689  01199A  0E02               	movlw	2
 40690  01199C  26DE               	addwf	postinc2,f,c
 40691  01199E  CFDF F073          	movff	indf2,??i2__doprnt+1
 40692  0119A2  0E00               	movlw	0
 40693  0119A4  22DD               	addwfc	postdec2,f,c
 40694  0119A6  C072  FFD9         	movff	??i2__doprnt,fsr2l
 40695  0119AA  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 40696  0119AE  CFDE F08B          	movff	postinc2,i2__doprnt@cp
 40697  0119B2  CFDD F08C          	movff	postdec2,i2__doprnt@cp+1
 40698                           
 40699                           ; BSR set to: 0
 40700                           ;doprnt.c: 759: if(!cp)
 40701  0119B6  518B               	movf	i2__doprnt@cp& (0+255),w,b
 40702  0119B8  118C               	iorwf	(i2__doprnt@cp+1)& (0+255),w,b
 40703  0119BA  A4D8               	btfss	status,2,c
 40704  0119BC  D004               	goto	i2l20190
 40705                           
 40706                           ; BSR set to: 0
 40707                           ;doprnt.c: 760: cp = "(null)";
 40708  0119BE  0E69               	movlw	low STR_358
 40709  0119C0  6F8B               	movwf	i2__doprnt@cp& (0+255),b
 40710  0119C2  0EFF               	movlw	high STR_358
 40711  0119C4  6F8C               	movwf	(i2__doprnt@cp+1)& (0+255),b
 40712  0119C6                     i2l20190:
 40713                           
 40714                           ; BSR set to: 0
 40715                           ;doprnt.c: 764: len = 0;
 40716  0119C6  0E00               	movlw	0
 40717  0119C8  6F8E               	movwf	(i2__doprnt@len+1)& (0+255),b
 40718  0119CA  0E00               	movlw	0
 40719  0119CC  6F8D               	movwf	i2__doprnt@len& (0+255),b
 40720                           
 40721                           ;doprnt.c: 765: while(cp[len])
 40722  0119CE  D003               	goto	i2l20194
 40723  0119D0                     i2l20192:
 40724                           
 40725                           ;doprnt.c: 766: len++;
 40726  0119D0  0100               	movlb	0	; () banked
 40727  0119D2  4B8D               	infsnz	i2__doprnt@len& (0+255),f,b
 40728  0119D4  2B8E               	incf	(i2__doprnt@len+1)& (0+255),f,b
 40729  0119D6                     i2l20194:
 40730                           
 40731                           ; BSR set to: 0
 40732  0119D6  518D               	movf	i2__doprnt@len& (0+255),w,b
 40733  0119D8  258B               	addwf	i2__doprnt@cp& (0+255),w,b
 40734  0119DA  6F72               	movwf	??i2__doprnt& (0+255),b
 40735  0119DC  518E               	movf	(i2__doprnt@len+1)& (0+255),w,b
 40736  0119DE  218C               	addwfc	(i2__doprnt@cp+1)& (0+255),w,b
 40737  0119E0  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 40738  0119E2  C072  FFF6         	movff	??i2__doprnt,tblptrl
 40739  0119E6  C073  FFF7         	movff	??i2__doprnt+1,tblptrh
 40740  0119EA  0E00               	movlw	low (__mediumconst shr (0+16))
 40741  0119EC  6EF8               	movwf	tblptru,c
 40742  0119EE  0E0E               	movlw	(high __ramtop+-1)
 40743  0119F0  64F7               	cpfsgt	tblptrh,c
 40744  0119F2  D003               	bra	i2u2577_47
 40745  0119F4  0008               	tblrd		*
 40746  0119F6  50F5               	movf	tablat,w,c
 40747  0119F8  D005               	bra	i2u2577_40
 40748  0119FA                     i2u2577_47:
 40749  0119FA  CFF6 FFE9          	movff	tblptrl,fsr0l
 40750  0119FE  CFF7 FFEA          	movff	tblptrh,fsr0h
 40751  011A02  50EF               	movf	indf0,w,c
 40752  011A04                     i2u2577_40:
 40753  011A04  0900               	iorlw	0
 40754  011A06  A4D8               	btfss	status,2,c
 40755  011A08  D7E3               	goto	i2l20192
 40756  011A0A                     i2u2578_40:
 40757                           
 40758                           ;doprnt.c: 772: if(prec && prec < len)
 40759  011A0A  0100               	movlb	0	; () banked
 40760  011A0C  519F               	movf	i2__doprnt@prec& (0+255),w,b
 40761  011A0E  11A0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 40762  011A10  B4D8               	btfsc	status,2,c
 40763  011A12  D00A               	goto	i2l20202
 40764                           
 40765                           ; BSR set to: 0
 40766  011A14  518D               	movf	i2__doprnt@len& (0+255),w,b
 40767  011A16  5D9F               	subwf	i2__doprnt@prec& (0+255),w,b
 40768  011A18  518E               	movf	(i2__doprnt@len+1)& (0+255),w,b
 40769  011A1A  59A0               	subwfb	(i2__doprnt@prec+1)& (0+255),w,b
 40770  011A1C  B0D8               	btfsc	status,0,c
 40771  011A1E  D004               	goto	i2l20202
 40772                           
 40773                           ; BSR set to: 0
 40774                           ;doprnt.c: 773: len = prec;
 40775  011A20  C09F  F08D         	movff	i2__doprnt@prec,i2__doprnt@len
 40776  011A24  C0A0  F08E         	movff	i2__doprnt@prec+1,i2__doprnt@len+1
 40777  011A28                     i2l20202:
 40778                           
 40779                           ; BSR set to: 0
 40780                           ;doprnt.c: 776: if(width > len)
 40781  011A28  519D               	movf	i2__doprnt@width& (0+255),w,b
 40782  011A2A  5D8D               	subwf	i2__doprnt@len& (0+255),w,b
 40783  011A2C  519E               	movf	(i2__doprnt@width+1)& (0+255),w,b
 40784  011A2E  598E               	subwfb	(i2__doprnt@len+1)& (0+255),w,b
 40785  011A30  B0D8               	btfsc	status,0,c
 40786  011A32  D005               	goto	i2l20206
 40787                           
 40788                           ; BSR set to: 0
 40789                           ;doprnt.c: 777: width -= len;
 40790  011A34  518D               	movf	i2__doprnt@len& (0+255),w,b
 40791  011A36  5F9D               	subwf	i2__doprnt@width& (0+255),f,b
 40792  011A38  518E               	movf	(i2__doprnt@len+1)& (0+255),w,b
 40793  011A3A  5B9E               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 40794  011A3C  D038               	goto	i2l20216
 40795  011A3E                     i2l20206:
 40796                           
 40797                           ; BSR set to: 0
 40798                           ;doprnt.c: 778: else;doprnt.c: 779: width = 0;
 40799  011A3E  0E00               	movlw	0
 40800  011A40  6F9E               	movwf	(i2__doprnt@width+1)& (0+255),b
 40801  011A42  0E00               	movlw	0
 40802  011A44  6F9D               	movwf	i2__doprnt@width& (0+255),b
 40803  011A46  D033               	goto	i2l20216
 40804  011A48                     i2l20208:
 40805                           
 40806                           ; BSR set to: 0
 40807  011A48  EE20 F002          	lfsr	2,2
 40808  011A4C  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40809  011A4E  26D9               	addwf	fsr2l,f,c
 40810  011A50  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40811  011A52  22DA               	addwfc	fsr2h,f,c
 40812  011A54  50DE               	movf	postinc2,w,c
 40813  011A56  10DE               	iorwf	postinc2,w,c
 40814  011A58  10DE               	iorwf	postinc2,w,c
 40815  011A5A  B4D8               	btfsc	status,2,c
 40816  011A5C  D013               	goto	i2l20212
 40817                           
 40818                           ; BSR set to: 0
 40819  011A5E  EE20 F002          	lfsr	2,2
 40820  011A62  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40821  011A64  26D9               	addwf	fsr2l,f,c
 40822  011A66  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40823  011A68  22DA               	addwfc	fsr2h,f,c
 40824  011A6A  D801               	call	i2u2583_48
 40825  011A6C  D020               	goto	i2l20216
 40826  011A6E                     i2u2583_48:
 40827  011A6E  0005               	push	
 40828  011A70  6EFA               	movwf	pclath,c
 40829  011A72  50DE               	movf	postinc2,w,c
 40830  011A74  6EFD               	movwf	tosl,c
 40831  011A76  50DE               	movf	postinc2,w,c
 40832  011A78  6EFE               	movwf	tosh,c
 40833  011A7A  50DE               	movf	postinc2,w,c
 40834  011A7C  6EFF               	movwf	tosu,c
 40835  011A7E  50FA               	movf	pclath,w,c
 40836  011A80  0E20               	movlw	32
 40837  011A82  0012               	return		;indir
 40838  011A84                     i2l20212:
 40839                           
 40840                           ; BSR set to: 0
 40841  011A84  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40842  011A88  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40843  011A8C  CFDE F072          	movff	postinc2,??i2__doprnt
 40844  011A90  CFDD F073          	movff	postdec2,??i2__doprnt+1
 40845  011A94  C072  FFD9         	movff	??i2__doprnt,fsr2l
 40846  011A98  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 40847  011A9C  0E20               	movlw	32
 40848  011A9E  6EDF               	movwf	indf2,c
 40849                           
 40850                           ; BSR set to: 0
 40851  011AA0  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40852  011AA4  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40853  011AA8  2ADE               	incf	postinc2,f,c
 40854  011AAA  0E00               	movlw	0
 40855  011AAC  22DD               	addwfc	postdec2,f,c
 40856  011AAE                     i2l20216:
 40857  011AAE  0100               	movlb	0	; () banked
 40858  011AB0  079D               	decf	i2__doprnt@width& (0+255),f,b
 40859  011AB2  A0D8               	btfss	status,0,c
 40860  011AB4  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 40861  011AB6  299D               	incf	i2__doprnt@width& (0+255),w,b
 40862  011AB8  E1C7               	bnz	i2l20208
 40863  011ABA  299E               	incf	(i2__doprnt@width+1)& (0+255),w,b
 40864  011ABC  B4D8               	btfsc	status,2,c
 40865  011ABE  D05B               	goto	i2l20230
 40866  011AC0  D7C3               	goto	i2l20208
 40867  011AC2                     i2l20218:
 40868                           
 40869                           ; BSR set to: 0
 40870  011AC2  EE20 F002          	lfsr	2,2
 40871  011AC6  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40872  011AC8  26D9               	addwf	fsr2l,f,c
 40873  011ACA  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40874  011ACC  22DA               	addwfc	fsr2h,f,c
 40875  011ACE  50DE               	movf	postinc2,w,c
 40876  011AD0  10DE               	iorwf	postinc2,w,c
 40877  011AD2  10DE               	iorwf	postinc2,w,c
 40878  011AD4  B4D8               	btfsc	status,2,c
 40879  011AD6  D027               	goto	i2l20224
 40880                           
 40881                           ; BSR set to: 0
 40882  011AD8  EE20 F002          	lfsr	2,2
 40883  011ADC  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40884  011ADE  26D9               	addwf	fsr2l,f,c
 40885  011AE0  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40886  011AE2  22DA               	addwfc	fsr2h,f,c
 40887  011AE4  D801               	call	i2u2586_48
 40888  011AE6  D01B               	goto	i2u2586_49
 40889  011AE8                     i2u2586_48:
 40890  011AE8  0005               	push	
 40891  011AEA  6EFA               	movwf	pclath,c
 40892  011AEC  50DE               	movf	postinc2,w,c
 40893  011AEE  6EFD               	movwf	tosl,c
 40894  011AF0  50DE               	movf	postinc2,w,c
 40895  011AF2  6EFE               	movwf	tosh,c
 40896  011AF4  50DE               	movf	postinc2,w,c
 40897  011AF6  6EFF               	movwf	tosu,c
 40898  011AF8  50FA               	movf	pclath,w,c
 40899  011AFA  C08B  FFF6         	movff	i2__doprnt@cp,tblptrl
 40900  011AFE  C08C  FFF7         	movff	i2__doprnt@cp+1,tblptrh
 40901  011B02  0E00               	movlw	low (__mediumconst shr (0+16))
 40902  011B04  6EF8               	movwf	tblptru,c
 40903  011B06  0E0E               	movlw	(high __ramtop+-1)
 40904  011B08  64F7               	cpfsgt	tblptrh,c
 40905  011B0A  D003               	bra	i2u2587_47
 40906  011B0C  0008               	tblrd		*
 40907  011B0E  50F5               	movf	tablat,w,c
 40908  011B10  D005               	bra	i2u2587_40
 40909  011B12                     i2u2587_47:
 40910  011B12  CFF6 FFE9          	movff	tblptrl,fsr0l
 40911  011B16  CFF7 FFEA          	movff	tblptrh,fsr0h
 40912  011B1A  50EF               	movf	indf0,w,c
 40913  011B1C                     i2u2587_40:
 40914  011B1C  0012               	return		;indir
 40915  011B1E                     i2u2586_49:
 40916  011B1E  0100               	movlb	0	; () banked
 40917  011B20  4B8B               	infsnz	i2__doprnt@cp& (0+255),f,b
 40918  011B22  2B8C               	incf	(i2__doprnt@cp+1)& (0+255),f,b
 40919  011B24  D028               	goto	i2l20230
 40920  011B26                     i2l20224:
 40921                           
 40922                           ; BSR set to: 0
 40923  011B26  C08B  FFF6         	movff	i2__doprnt@cp,tblptrl
 40924  011B2A  C08C  FFF7         	movff	i2__doprnt@cp+1,tblptrh
 40925  011B2E  0E00               	movlw	low (__mediumconst shr (0+16))
 40926  011B30  6EF8               	movwf	tblptru,c
 40927  011B32  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40928  011B36  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40929  011B3A  CFDE F072          	movff	postinc2,??i2__doprnt
 40930  011B3E  CFDD F073          	movff	postdec2,??i2__doprnt+1
 40931  011B42  C072  FFD9         	movff	??i2__doprnt,fsr2l
 40932  011B46  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 40933  011B4A  0E0E               	movlw	(high __ramtop+-1)
 40934  011B4C  64F7               	cpfsgt	tblptrh,c
 40935  011B4E  D003               	bra	i2u2588_47
 40936  011B50  0008               	tblrd		*
 40937  011B52  50F5               	movf	tablat,w,c
 40938  011B54  D005               	bra	i2u2588_40
 40939  011B56                     i2u2588_47:
 40940  011B56  CFF6 FFE9          	movff	tblptrl,fsr0l
 40941  011B5A  CFF7 FFEA          	movff	tblptrh,fsr0h
 40942  011B5E  50EF               	movf	indf0,w,c
 40943  011B60                     i2u2588_40:
 40944  011B60  6EDF               	movwf	indf2,c
 40945  011B62  0100               	movlb	0	; () banked
 40946  011B64  4B8B               	infsnz	i2__doprnt@cp& (0+255),f,b
 40947  011B66  2B8C               	incf	(i2__doprnt@cp+1)& (0+255),f,b
 40948                           
 40949                           ; BSR set to: 0
 40950  011B68  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40951  011B6C  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40952  011B70  2ADE               	incf	postinc2,f,c
 40953  011B72  0E00               	movlw	0
 40954  011B74  22DD               	addwfc	postdec2,f,c
 40955  011B76                     i2l20230:
 40956                           
 40957                           ; BSR set to: 0
 40958  011B76  078D               	decf	i2__doprnt@len& (0+255),f,b
 40959  011B78  A0D8               	btfss	status,0,c
 40960  011B7A  078E               	decf	(i2__doprnt@len+1)& (0+255),f,b
 40961  011B7C  298D               	incf	i2__doprnt@len& (0+255),w,b
 40962  011B7E  E1A1               	bnz	i2l20218
 40963  011B80  298E               	incf	(i2__doprnt@len+1)& (0+255),w,b
 40964  011B82  B4D8               	btfsc	status,2,c
 40965  011B84  EFFB  F096         	goto	i2u2691_40
 40966  011B88  D79C               	goto	i2l20218
 40967  011B8A                     i2l20232:
 40968                           
 40969                           ; BSR set to: 0
 40970                           ;doprnt.c: 818: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 40971  011B8A  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 40972  011B8E  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 40973  011B92  CFDF F072          	movff	indf2,??i2__doprnt
 40974  011B96  0E02               	movlw	2
 40975  011B98  26DE               	addwf	postinc2,f,c
 40976  011B9A  CFDF F073          	movff	indf2,??i2__doprnt+1
 40977  011B9E  0E00               	movlw	0
 40978  011BA0  22DD               	addwfc	postdec2,f,c
 40979  011BA2  C072  FFD9         	movff	??i2__doprnt,fsr2l
 40980  011BA6  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 40981  011BAA  50DF               	movf	indf2,w,c
 40982  011BAC  6FA3               	movwf	i2__doprnt@c& (0+255),b
 40983  011BAE                     i2l20234:
 40984                           
 40985                           ; BSR set to: 0
 40986                           ;doprnt.c: 824: cp = (char *)&c;
 40987  011BAE  0EA3               	movlw	low i2__doprnt@c
 40988  011BB0  6F8B               	movwf	i2__doprnt@cp& (0+255),b
 40989  011BB2  0E00               	movlw	high i2__doprnt@c
 40990  011BB4  6F8C               	movwf	(i2__doprnt@cp+1)& (0+255),b
 40991                           
 40992                           ; BSR set to: 0
 40993                           ;doprnt.c: 825: len = 1;
 40994  011BB6  0E00               	movlw	0
 40995  011BB8  6F8E               	movwf	(i2__doprnt@len+1)& (0+255),b
 40996  011BBA  0E01               	movlw	1
 40997  011BBC  6F8D               	movwf	i2__doprnt@len& (0+255),b
 40998                           
 40999                           ;doprnt.c: 826: goto dostring;
 41000  011BBE  D725               	goto	i2u2578_40
 41001  011BC0                     i2l20238:
 41002                           
 41003                           ; BSR set to: 0
 41004                           ;doprnt.c: 837: flag |= 0xC0;
 41005  011BC0  0EC0               	movlw	192
 41006  011BC2  13A1               	iorwf	i2__doprnt@flag& (0+255),f,b
 41007                           
 41008                           ;doprnt.c: 838: break;
 41009  011BC4  D03B               	goto	i2l20244
 41010  011BC6                     i2l20242:
 41011  011BC6  0100               	movlb	0	; () banked
 41012  011BC8  516E               	movf	i2__doprnt@f& (0+255),w,b
 41013  011BCA  6F72               	movwf	??i2__doprnt& (0+255),b
 41014  011BCC  516F               	movf	(i2__doprnt@f+1)& (0+255),w,b
 41015  011BCE  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 41016  011BD0  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 41017  011BD2  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 41018  011BD4  C072  FFF6         	movff	??i2__doprnt,tblptrl
 41019  011BD8  C073  FFF7         	movff	??i2__doprnt+1,tblptrh
 41020  011BDC  0E00               	movlw	low (__mediumconst shr (0+16))
 41021  011BDE  6EF8               	movwf	tblptru,c
 41022  011BE0  0E0E               	movlw	(high __ramtop+-1)
 41023  011BE2  64F7               	cpfsgt	tblptrh,c
 41024  011BE4  D003               	bra	i2u2590_47
 41025  011BE6  0008               	tblrd		*
 41026  011BE8  50F5               	movf	tablat,w,c
 41027  011BEA  D005               	bra	i2u2590_40
 41028  011BEC                     i2u2590_47:
 41029  011BEC  CFF6 FFE9          	movff	tblptrl,fsr0l
 41030  011BF0  CFF7 FFEA          	movff	tblptrh,fsr0h
 41031  011BF4  50EF               	movf	indf0,w,c
 41032  011BF6                     i2u2590_40:
 41033  011BF6  0100               	movlb	0	; () banked
 41034  011BF8  6FA3               	movwf	i2__doprnt@c& (0+255),b
 41035  011BFA  51A3               	movf	i2__doprnt@c& (0+255),w,b
 41036                           
 41037                           ; Switch size 1, requested type "simple"
 41038                           ; Number of cases is 10, Range of values is 0 to 120
 41039                           ; switch strategies available:
 41040                           ; Name         Instructions Cycles
 41041                           ; simple_byte           31    16 (average)
 41042                           ;	Chosen strategy is simple_byte
 41043  011BFC  0A00               	xorlw	0	; case 0
 41044  011BFE  B4D8               	btfsc	status,2,c
 41045  011C00  EF19  F097         	goto	i2u2693_40
 41046  011C04  0A58               	xorlw	88	; case 88
 41047  011C06  B4D8               	btfsc	status,2,c
 41048  011C08  D6C0               	goto	i2l20182
 41049  011C0A  0A3B               	xorlw	59	; case 99
 41050  011C0C  B4D8               	btfsc	status,2,c
 41051  011C0E  D7BD               	goto	i2l20232
 41052  011C10  0A07               	xorlw	7	; case 100
 41053  011C12  B4D8               	btfsc	status,2,c
 41054  011C14  D013               	goto	i2l20244
 41055  011C16  0A02               	xorlw	2	; case 102
 41056  011C18  B4D8               	btfsc	status,2,c
 41057  011C1A  D6B5               	goto	i2l20180
 41058  011C1C  0A0F               	xorlw	15	; case 105
 41059  011C1E  B4D8               	btfsc	status,2,c
 41060  011C20  D00D               	goto	i2l20244
 41061  011C22  0A05               	xorlw	5	; case 108
 41062  011C24  B4D8               	btfsc	status,2,c
 41063  011C26  D6AD               	goto	i2l20178
 41064  011C28  0A1F               	xorlw	31	; case 115
 41065  011C2A  B4D8               	btfsc	status,2,c
 41066  011C2C  D6B0               	goto	i2l20184
 41067  011C2E  0A06               	xorlw	6	; case 117
 41068  011C30  B4D8               	btfsc	status,2,c
 41069  011C32  D7C6               	goto	i2l20238
 41070  011C34  0A0D               	xorlw	13	; case 120
 41071  011C36  B4D8               	btfsc	status,2,c
 41072  011C38  D6A8               	goto	i2l20182
 41073  011C3A  D7B9               	goto	i2l20234
 41074  011C3C                     i2l20244:
 41075                           
 41076                           ; BSR set to: 0
 41077                           ;doprnt.c: 844: if(flag & (0x700)) {
 41078  011C3C  0E07               	movlw	7
 41079  011C3E  15A2               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 41080  011C40  B4D8               	btfsc	status,2,c
 41081  011C42  EF9C  F093         	goto	i2l20488
 41082                           
 41083                           ; BSR set to: 0
 41084                           ;doprnt.c: 846: if(flag & 0x1000)
 41085  011C46  A9A2               	btfss	(i2__doprnt@flag+1)& (0+255),4,b
 41086  011C48  D004               	goto	i2l20250
 41087                           
 41088                           ; BSR set to: 0
 41089                           ;doprnt.c: 848: prec = 6;
 41090  011C4A  0E00               	movlw	0
 41091  011C4C  6FA0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 41092  011C4E  0E06               	movlw	6
 41093  011C50  6F9F               	movwf	i2__doprnt@prec& (0+255),b
 41094  011C52                     i2l20250:
 41095                           
 41096                           ; BSR set to: 0
 41097                           ;doprnt.c: 849: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 41098  011C52  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 41099  011C56  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 41100  011C5A  CFDF F072          	movff	indf2,??i2__doprnt
 41101  011C5E  0E04               	movlw	4
 41102  011C60  26DE               	addwf	postinc2,f,c
 41103  011C62  CFDF F073          	movff	indf2,??i2__doprnt+1
 41104  011C66  0E00               	movlw	0
 41105  011C68  22DD               	addwfc	postdec2,f,c
 41106  011C6A  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41107  011C6E  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41108  011C72  CFDE F095          	movff	postinc2,i2__doprnt@fval
 41109  011C76  CFDE F096          	movff	postinc2,i2__doprnt@fval+1
 41110  011C7A  CFDE F097          	movff	postinc2,i2__doprnt@fval+2
 41111  011C7E  CFDE F098          	movff	postinc2,i2__doprnt@fval+3
 41112                           
 41113                           ; BSR set to: 0
 41114                           ;doprnt.c: 850: if(fval < 0.0) {
 41115  011C82  AF98               	btfss	(i2__doprnt@fval+3)& (0+255),7,b
 41116  011C84  D015               	goto	i2l20258
 41117                           
 41118                           ; BSR set to: 0
 41119                           ;doprnt.c: 851: fval = -fval;
 41120  011C86  C095  F001         	movff	i2__doprnt@fval,i2___flneg@f1
 41121  011C8A  C096  F002         	movff	i2__doprnt@fval+1,i2___flneg@f1+1
 41122  011C8E  C097  F003         	movff	i2__doprnt@fval+2,i2___flneg@f1+2
 41123  011C92  C098  F004         	movff	i2__doprnt@fval+3,i2___flneg@f1+3
 41124  011C96  ECFA  F0E1         	call	i2___flneg
 41125  011C9A  C001  F095         	movff	?i2___flneg,i2__doprnt@fval
 41126  011C9E  C002  F096         	movff	?i2___flneg+1,i2__doprnt@fval+1
 41127  011CA2  C003  F097         	movff	?i2___flneg+2,i2__doprnt@fval+2
 41128  011CA6  C004  F098         	movff	?i2___flneg+3,i2__doprnt@fval+3
 41129                           
 41130                           ;doprnt.c: 852: flag |= 0x03;
 41131  011CAA  0E03               	movlw	3
 41132  011CAC  0100               	movlb	0	; () banked
 41133  011CAE  13A1               	iorwf	i2__doprnt@flag& (0+255),f,b
 41134  011CB0                     i2l20258:
 41135                           
 41136                           ; BSR set to: 0
 41137                           ;doprnt.c: 853: };doprnt.c: 854: eexp = 0;
 41138  011CB0  0E00               	movlw	0
 41139  011CB2  6F90               	movwf	(i2__doprnt@eexp+1)& (0+255),b
 41140  011CB4  0E00               	movlw	0
 41141  011CB6  6F8F               	movwf	i2__doprnt@eexp& (0+255),b
 41142                           
 41143                           ; BSR set to: 0
 41144                           ;doprnt.c: 855: if( fval!=0) {
 41145  011CB8  C095  F001         	movff	i2__doprnt@fval,i2___fleq@ff1
 41146  011CBC  C096  F002         	movff	i2__doprnt@fval+1,i2___fleq@ff1+1
 41147  011CC0  C097  F003         	movff	i2__doprnt@fval+2,i2___fleq@ff1+2
 41148  011CC4  C098  F004         	movff	i2__doprnt@fval+3,i2___fleq@ff1+3
 41149  011CC8  0E00               	movlw	0
 41150  011CCA  6E05               	movwf	i2___fleq@ff2,c
 41151  011CCC  0E00               	movlw	0
 41152  011CCE  6E06               	movwf	i2___fleq@ff2+1,c
 41153  011CD0  0E00               	movlw	0
 41154  011CD2  6E07               	movwf	i2___fleq@ff2+2,c
 41155  011CD4  0E00               	movlw	0
 41156  011CD6  6E08               	movwf	i2___fleq@ff2+3,c
 41157  011CD8  ECE1  F0D8         	call	i2___fleq	;wreg free
 41158  011CDC  B0D8               	btfsc	status,0,c
 41159  011CDE  D083               	goto	i2l20286
 41160                           
 41161                           ;doprnt.c: 856: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
 41162  011CE0  0100               	movlb	0	; () banked
 41163  011CE2  3597               	rlcf	(i2__doprnt@fval+2)& (0+255),w,b
 41164  011CE4  3598               	rlcf	(i2__doprnt@fval+3)& (0+255),w,b
 41165  011CE6  0F82               	addlw	130
 41166  011CE8  6F8F               	movwf	i2__doprnt@eexp& (0+255),b
 41167  011CEA  6B90               	clrf	(i2__doprnt@eexp+1)& (0+255),b
 41168  011CEC  0EFF               	movlw	255
 41169  011CEE  2390               	addwfc	(i2__doprnt@eexp+1)& (0+255),f,b
 41170                           
 41171                           ; BSR set to: 0
 41172                           ;doprnt.c: 857: eexp--;
 41173  011CF0  078F               	decf	i2__doprnt@eexp& (0+255),f,b
 41174  011CF2  A0D8               	btfss	status,0,c
 41175  011CF4  0790               	decf	(i2__doprnt@eexp+1)& (0+255),f,b
 41176                           
 41177                           ; BSR set to: 0
 41178                           ;doprnt.c: 858: eexp *= 3;
 41179  011CF6  C08F  F001         	movff	i2__doprnt@eexp,i2___wmul@multiplier
 41180  011CFA  C090  F002         	movff	i2__doprnt@eexp+1,i2___wmul@multiplier+1
 41181  011CFE  0E00               	movlw	0
 41182  011D00  6E04               	movwf	i2___wmul@multiplicand+1,c
 41183  011D02  0E03               	movlw	3
 41184  011D04  6E03               	movwf	i2___wmul@multiplicand,c
 41185  011D06  ECDC  F0E2         	call	i2___wmul	;wreg free
 41186  011D0A  C001  F08F         	movff	?i2___wmul,i2__doprnt@eexp
 41187  011D0E  C002  F090         	movff	?i2___wmul+1,i2__doprnt@eexp+1
 41188                           
 41189                           ;doprnt.c: 859: eexp /= 10;
 41190  011D12  C08F  F007         	movff	i2__doprnt@eexp,i2___awdiv@dividend
 41191  011D16  C090  F008         	movff	i2__doprnt@eexp+1,i2___awdiv@dividend+1
 41192  011D1A  0E00               	movlw	0
 41193  011D1C  6E0A               	movwf	i2___awdiv@divisor+1,c
 41194  011D1E  0E0A               	movlw	10
 41195  011D20  6E09               	movwf	i2___awdiv@divisor,c
 41196  011D22  ECAB  F0D9         	call	i2___awdiv	;wreg free
 41197  011D26  C007  F08F         	movff	?i2___awdiv,i2__doprnt@eexp
 41198  011D2A  C008  F090         	movff	?i2___awdiv+1,i2__doprnt@eexp+1
 41199                           
 41200                           ;doprnt.c: 860: if(eexp < 0)
 41201  011D2E  0100               	movlb	0	; () banked
 41202  011D30  AF90               	btfss	(i2__doprnt@eexp+1)& (0+255),7,b
 41203  011D32  D003               	goto	i2l20274
 41204                           
 41205                           ; BSR set to: 0
 41206                           ;doprnt.c: 861: eexp--;
 41207  011D34  078F               	decf	i2__doprnt@eexp& (0+255),f,b
 41208  011D36  A0D8               	btfss	status,0,c
 41209  011D38  0790               	decf	(i2__doprnt@eexp+1)& (0+255),f,b
 41210  011D3A                     i2l20274:
 41211                           
 41212                           ; BSR set to: 0
 41213                           ;doprnt.c: 865: tmpval.integ = scale(-eexp);
 41214  011D3A  518F               	movf	i2__doprnt@eexp& (0+255),w,b
 41215  011D3C  0800               	sublw	0
 41216  011D3E  EC6A  F0AF         	call	i2_scale
 41217  011D42  C045  F091         	movff	?i2_scale,i2__doprnt@tmpval
 41218  011D46  C046  F092         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 41219  011D4A  C047  F093         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 41220  011D4E  C048  F094         	movff	?i2_scale+3,i2__doprnt@tmpval+3
 41221                           
 41222                           ;doprnt.c: 866: tmpval.integ *= fval;
 41223  011D52  C091  F02C         	movff	i2__doprnt@tmpval,i2___flmul@b
 41224  011D56  C092  F02D         	movff	i2__doprnt@tmpval+1,i2___flmul@b+1
 41225  011D5A  C093  F02E         	movff	i2__doprnt@tmpval+2,i2___flmul@b+2
 41226  011D5E  C094  F02F         	movff	i2__doprnt@tmpval+3,i2___flmul@b+3
 41227  011D62  C095  F030         	movff	i2__doprnt@fval,i2___flmul@a
 41228  011D66  C096  F031         	movff	i2__doprnt@fval+1,i2___flmul@a+1
 41229  011D6A  C097  F032         	movff	i2__doprnt@fval+2,i2___flmul@a+2
 41230  011D6E  C098  F033         	movff	i2__doprnt@fval+3,i2___flmul@a+3
 41231  011D72  EC50  F0B8         	call	i2___flmul	;wreg free
 41232  011D76  C02C  F091         	movff	?i2___flmul,i2__doprnt@tmpval
 41233  011D7A  C02D  F092         	movff	?i2___flmul+1,i2__doprnt@tmpval+1
 41234  011D7E  C02E  F093         	movff	?i2___flmul+2,i2__doprnt@tmpval+2
 41235  011D82  C02F  F094         	movff	?i2___flmul+3,i2__doprnt@tmpval+3
 41236                           
 41237                           ;doprnt.c: 867: if(tmpval.integ < 1.0)
 41238  011D86  C091  F001         	movff	i2__doprnt@tmpval,i2___flge@ff1
 41239  011D8A  C092  F002         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 41240  011D8E  C093  F003         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 41241  011D92  C094  F004         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 41242  011D96  0E00               	movlw	0
 41243  011D98  6E05               	movwf	i2___flge@ff2,c
 41244  011D9A  0E00               	movlw	0
 41245  011D9C  6E06               	movwf	i2___flge@ff2+1,c
 41246  011D9E  0E80               	movlw	128
 41247  011DA0  6E07               	movwf	i2___flge@ff2+2,c
 41248  011DA2  0E3F               	movlw	63
 41249  011DA4  6E08               	movwf	i2___flge@ff2+3,c
 41250  011DA6  ECCC  F0D3         	call	i2___flge	;wreg free
 41251  011DAA  B0D8               	btfsc	status,0,c
 41252  011DAC  D005               	goto	i2l20282
 41253                           
 41254                           ;doprnt.c: 868: eexp--;
 41255  011DAE  0100               	movlb	0	; () banked
 41256  011DB0  078F               	decf	i2__doprnt@eexp& (0+255),f,b
 41257  011DB2  A0D8               	btfss	status,0,c
 41258  011DB4  0790               	decf	(i2__doprnt@eexp+1)& (0+255),f,b
 41259  011DB6  D017               	goto	i2l20286
 41260  011DB8                     i2l20282:
 41261                           
 41262                           ;doprnt.c: 869: else if(tmpval.integ >= 10.0)
 41263  011DB8  C091  F001         	movff	i2__doprnt@tmpval,i2___flge@ff1
 41264  011DBC  C092  F002         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 41265  011DC0  C093  F003         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 41266  011DC4  C094  F004         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 41267  011DC8  0E00               	movlw	0
 41268  011DCA  6E05               	movwf	i2___flge@ff2,c
 41269  011DCC  0E00               	movlw	0
 41270  011DCE  6E06               	movwf	i2___flge@ff2+1,c
 41271  011DD0  0E20               	movlw	32
 41272  011DD2  6E07               	movwf	i2___flge@ff2+2,c
 41273  011DD4  0E41               	movlw	65
 41274  011DD6  6E08               	movwf	i2___flge@ff2+3,c
 41275  011DD8  ECCC  F0D3         	call	i2___flge	;wreg free
 41276  011DDC  A0D8               	btfss	status,0,c
 41277  011DDE  D003               	goto	i2l20286
 41278                           
 41279                           ;doprnt.c: 870: eexp++;
 41280  011DE0  0100               	movlb	0	; () banked
 41281  011DE2  4B8F               	infsnz	i2__doprnt@eexp& (0+255),f,b
 41282  011DE4  2B90               	incf	(i2__doprnt@eexp+1)& (0+255),f,b
 41283  011DE6                     i2l20286:
 41284                           
 41285                           ;doprnt.c: 871: };doprnt.c: 1131: if(prec <= 12)
 41286  011DE6  0100               	movlb	0	; () banked
 41287  011DE8  BFA0               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 41288  011DEA  D006               	goto	i2u2598_40
 41289  011DEC  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 41290  011DEE  E121               	bnz	i2l20290
 41291  011DF0  0E0D               	movlw	13
 41292  011DF2  5D9F               	subwf	i2__doprnt@prec& (0+255),w,b
 41293  011DF4  B0D8               	btfsc	status,0,c
 41294  011DF6  D01D               	goto	i2l20290
 41295  011DF8                     i2u2598_40:
 41296                           
 41297                           ; BSR set to: 0
 41298                           ;doprnt.c: 1132: fval += fround((unsigned int)prec);
 41299  011DF8  C095  F052         	movff	i2__doprnt@fval,i2___fladd@b
 41300  011DFC  C096  F053         	movff	i2__doprnt@fval+1,i2___fladd@b+1
 41301  011E00  C097  F054         	movff	i2__doprnt@fval+2,i2___fladd@b+2
 41302  011E04  C098  F055         	movff	i2__doprnt@fval+3,i2___fladd@b+3
 41303  011E08  519F               	movf	i2__doprnt@prec& (0+255),w,b
 41304  011E0A  ECEF  F0BF         	call	i2_fround
 41305  011E0E  C045  F056         	movff	?i2_fround,i2___fladd@a
 41306  011E12  C046  F057         	movff	?i2_fround+1,i2___fladd@a+1
 41307  011E16  C047  F058         	movff	?i2_fround+2,i2___fladd@a+2
 41308  011E1A  C048  F059         	movff	?i2_fround+3,i2___fladd@a+3
 41309  011E1E  EC07  F0BD         	call	i2___fladd	;wreg free
 41310  011E22  C052  F095         	movff	?i2___fladd,i2__doprnt@fval
 41311  011E26  C053  F096         	movff	?i2___fladd+1,i2__doprnt@fval+1
 41312  011E2A  C054  F097         	movff	?i2___fladd+2,i2__doprnt@fval+2
 41313  011E2E  C055  F098         	movff	?i2___fladd+3,i2__doprnt@fval+3
 41314  011E32                     i2l20290:
 41315                           
 41316                           ;doprnt.c: 1135: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
 41317  011E32  0100               	movlb	0	; () banked
 41318  011E34  BF90               	btfsc	(i2__doprnt@eexp+1)& (0+255),7,b
 41319  011E36  D006               	goto	i2u2599_40
 41320  011E38  5190               	movf	(i2__doprnt@eexp+1)& (0+255),w,b
 41321  011E3A  E131               	bnz	i2l20298
 41322  011E3C  0E0A               	movlw	10
 41323  011E3E  5D8F               	subwf	i2__doprnt@eexp& (0+255),w,b
 41324  011E40  B0D8               	btfsc	status,0,c
 41325  011E42  D02D               	goto	i2u2602_40
 41326  011E44                     i2u2599_40:
 41327                           
 41328                           ; BSR set to: 0
 41329  011E44  C095  F001         	movff	i2__doprnt@fval,i2___fleq@ff1
 41330  011E48  C096  F002         	movff	i2__doprnt@fval+1,i2___fleq@ff1+1
 41331  011E4C  C097  F003         	movff	i2__doprnt@fval+2,i2___fleq@ff1+2
 41332  011E50  C098  F004         	movff	i2__doprnt@fval+3,i2___fleq@ff1+3
 41333  011E54  0E00               	movlw	0
 41334  011E56  6E05               	movwf	i2___fleq@ff2,c
 41335  011E58  0E00               	movlw	0
 41336  011E5A  6E06               	movwf	i2___fleq@ff2+1,c
 41337  011E5C  0E00               	movlw	0
 41338  011E5E  6E07               	movwf	i2___fleq@ff2+2,c
 41339  011E60  0E00               	movlw	0
 41340  011E62  6E08               	movwf	i2___fleq@ff2+3,c
 41341  011E64  ECE1  F0D8         	call	i2___fleq	;wreg free
 41342  011E68  B0D8               	btfsc	status,0,c
 41343  011E6A  D064               	goto	i2l20312
 41344  011E6C  C095  F04E         	movff	i2__doprnt@fval,i2___fltol@f1
 41345  011E70  C096  F04F         	movff	i2__doprnt@fval+1,i2___fltol@f1+1
 41346  011E74  C097  F050         	movff	i2__doprnt@fval+2,i2___fltol@f1+2
 41347  011E78  C098  F051         	movff	i2__doprnt@fval+3,i2___fltol@f1+3
 41348  011E7C  ECBF  F0D5         	call	i2___fltol	;wreg free
 41349  011E80  504E               	movf	?i2___fltol,w,c
 41350  011E82  104F               	iorwf	?i2___fltol+1,w,c
 41351  011E84  1050               	iorwf	?i2___fltol+2,w,c
 41352  011E86  1051               	iorwf	?i2___fltol+3,w,c
 41353  011E88  A4D8               	btfss	status,2,c
 41354  011E8A  D054               	goto	i2l20312
 41355  011E8C  0100               	movlb	0	; () banked
 41356  011E8E  BF90               	btfsc	(i2__doprnt@eexp+1)& (0+255),7,b
 41357  011E90  D051               	goto	i2l20312
 41358  011E92  5190               	movf	(i2__doprnt@eexp+1)& (0+255),w,b
 41359  011E94  E104               	bnz	i2u2602_40
 41360  011E96  0E02               	movlw	2
 41361  011E98  5D8F               	subwf	i2__doprnt@eexp& (0+255),w,b
 41362  011E9A  A0D8               	btfss	status,0,c
 41363  011E9C  D04B               	goto	i2l20312
 41364  011E9E                     i2u2602_40:
 41365  011E9E                     i2l20298:
 41366                           
 41367                           ; BSR set to: 0
 41368                           ;doprnt.c: 1139: if(tmpval.integ < 4.294967296){
 41369  011E9E  C091  F001         	movff	i2__doprnt@tmpval,i2___flge@ff1
 41370  011EA2  C092  F002         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 41371  011EA6  C093  F003         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 41372  011EAA  C094  F004         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 41373  011EAE  0E5F               	movlw	95
 41374  011EB0  6E05               	movwf	i2___flge@ff2,c
 41375  011EB2  0E70               	movlw	112
 41376  011EB4  6E06               	movwf	i2___flge@ff2+1,c
 41377  011EB6  0E89               	movlw	137
 41378  011EB8  6E07               	movwf	i2___flge@ff2+2,c
 41379  011EBA  0E40               	movlw	64
 41380  011EBC  6E08               	movwf	i2___flge@ff2+3,c
 41381  011EBE  ECCC  F0D3         	call	i2___flge	;wreg free
 41382  011EC2  B0D8               	btfsc	status,0,c
 41383  011EC4  D003               	goto	i2l20302
 41384                           
 41385                           ;doprnt.c: 1140: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
 41386  011EC6  0100               	movlb	0	; () banked
 41387  011EC8  0EF7               	movlw	247
 41388  011ECA  D002               	goto	L35
 41389  011ECC                     i2l20302:
 41390                           
 41391                           ;doprnt.c: 1142: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
 41392  011ECC  0100               	movlb	0	; () banked
 41393  011ECE  0EF8               	movlw	248
 41394  011ED0                     L35:
 41395  011ED0  278F               	addwf	i2__doprnt@eexp& (0+255),f,b
 41396  011ED2  0EFF               	movlw	255
 41397  011ED4  2390               	addwfc	(i2__doprnt@eexp+1)& (0+255),f,b
 41398                           
 41399                           ; BSR set to: 0
 41400                           ;doprnt.c: 1145: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 41401  011ED6  518F               	movf	i2__doprnt@eexp& (0+255),w,b
 41402  011ED8  EC6A  F0AF         	call	i2_scale
 41403  011EDC  C045  F091         	movff	?i2_scale,i2__doprnt@tmpval
 41404  011EE0  C046  F092         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 41405  011EE4  C047  F093         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 41406  011EE8  C048  F094         	movff	?i2_scale+3,i2__doprnt@tmpval+3
 41407  011EEC  C095  F001         	movff	i2__doprnt@fval,i2__div_to_l_@f1
 41408  011EF0  C096  F002         	movff	i2__doprnt@fval+1,i2__div_to_l_@f1+1
 41409  011EF4  C097  F003         	movff	i2__doprnt@fval+2,i2__div_to_l_@f1+2
 41410  011EF8  C098  F004         	movff	i2__doprnt@fval+3,i2__div_to_l_@f1+3
 41411  011EFC  C091  F005         	movff	i2__doprnt@tmpval,i2__div_to_l_@f2
 41412  011F00  C092  F006         	movff	i2__doprnt@tmpval+1,i2__div_to_l_@f2+1
 41413  011F04  C093  F007         	movff	i2__doprnt@tmpval+2,i2__div_to_l_@f2+2
 41414  011F08  C094  F008         	movff	i2__doprnt@tmpval+3,i2__div_to_l_@f2+3
 41415  011F0C  EC71  F0D2         	call	i2__div_to_l_	;wreg free
 41416  011F10  C001  F099         	movff	?i2__div_to_l_,i2__doprnt@val
 41417  011F14  C002  F09A         	movff	?i2__div_to_l_+1,i2__doprnt@val+1
 41418  011F18  C003  F09B         	movff	?i2__div_to_l_+2,i2__doprnt@val+2
 41419  011F1C  C004  F09C         	movff	?i2__div_to_l_+3,i2__doprnt@val+3
 41420                           
 41421                           ;doprnt.c: 1148: fval = 0.0;
 41422  011F20  0E00               	movlw	0
 41423  011F22  0100               	movlb	0	; () banked
 41424  011F24  6F95               	movwf	i2__doprnt@fval& (0+255),b
 41425  011F26  0E00               	movlw	0
 41426  011F28  6F96               	movwf	(i2__doprnt@fval+1)& (0+255),b
 41427  011F2A  0E00               	movlw	0
 41428  011F2C  6F97               	movwf	(i2__doprnt@fval+2)& (0+255),b
 41429  011F2E  0E00               	movlw	0
 41430  011F30  6F98               	movwf	(i2__doprnt@fval+3)& (0+255),b
 41431                           
 41432                           ;doprnt.c: 1149: } else {
 41433  011F32  D03C               	goto	i2l20316
 41434  011F34                     i2l20312:
 41435                           
 41436                           ;doprnt.c: 1150: val = (unsigned long)fval;
 41437  011F34  C095  F04E         	movff	i2__doprnt@fval,i2___fltol@f1
 41438  011F38  C096  F04F         	movff	i2__doprnt@fval+1,i2___fltol@f1+1
 41439  011F3C  C097  F050         	movff	i2__doprnt@fval+2,i2___fltol@f1+2
 41440  011F40  C098  F051         	movff	i2__doprnt@fval+3,i2___fltol@f1+3
 41441  011F44  ECBF  F0D5         	call	i2___fltol	;wreg free
 41442  011F48  C04E  F099         	movff	?i2___fltol,i2__doprnt@val
 41443  011F4C  C04F  F09A         	movff	?i2___fltol+1,i2__doprnt@val+1
 41444  011F50  C050  F09B         	movff	?i2___fltol+2,i2__doprnt@val+2
 41445  011F54  C051  F09C         	movff	?i2___fltol+3,i2__doprnt@val+3
 41446                           
 41447                           ;doprnt.c: 1151: fval -= (double)val;
 41448  011F58  C095  F064         	movff	i2__doprnt@fval,i2___flsub@b
 41449  011F5C  C096  F065         	movff	i2__doprnt@fval+1,i2___flsub@b+1
 41450  011F60  C097  F066         	movff	i2__doprnt@fval+2,i2___flsub@b+2
 41451  011F64  C098  F067         	movff	i2__doprnt@fval+3,i2___flsub@b+3
 41452  011F68  C099  F005         	movff	i2__doprnt@val,i2___xxtofl@val
 41453  011F6C  C09A  F006         	movff	i2__doprnt@val+1,i2___xxtofl@val+1
 41454  011F70  C09B  F007         	movff	i2__doprnt@val+2,i2___xxtofl@val+2
 41455  011F74  C09C  F008         	movff	i2__doprnt@val+3,i2___xxtofl@val+3
 41456  011F78  0E00               	movlw	0
 41457  011F7A  EC4C  F0CF         	call	i2___xxtofl
 41458  011F7E  C005  F068         	movff	?i2___xxtofl,i2___flsub@a
 41459  011F82  C006  F069         	movff	?i2___xxtofl+1,i2___flsub@a+1
 41460  011F86  C007  F06A         	movff	?i2___xxtofl+2,i2___flsub@a+2
 41461  011F8A  C008  F06B         	movff	?i2___xxtofl+3,i2___flsub@a+3
 41462  011F8E  EC63  F0DE         	call	i2___flsub	;wreg free
 41463  011F92  C064  F095         	movff	?i2___flsub,i2__doprnt@fval
 41464  011F96  C065  F096         	movff	?i2___flsub+1,i2__doprnt@fval+1
 41465  011F9A  C066  F097         	movff	?i2___flsub+2,i2__doprnt@fval+2
 41466  011F9E  C067  F098         	movff	?i2___flsub+3,i2__doprnt@fval+3
 41467                           
 41468                           ;doprnt.c: 1152: eexp = 0;
 41469  011FA2  0E00               	movlw	0
 41470  011FA4  0100               	movlb	0	; () banked
 41471  011FA6  6F90               	movwf	(i2__doprnt@eexp+1)& (0+255),b
 41472  011FA8  0E00               	movlw	0
 41473  011FAA  6F8F               	movwf	i2__doprnt@eexp& (0+255),b
 41474  011FAC                     i2l20316:
 41475                           
 41476                           ; BSR set to: 0
 41477                           ;doprnt.c: 1153: };doprnt.c: 1155: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
 41478  011FAC  0E01               	movlw	1
 41479  011FAE  6FA3               	movwf	i2__doprnt@c& (0+255),b
 41480  011FB0                     i2l20322:
 41481                           
 41482                           ; BSR set to: 0
 41483                           ;doprnt.c: 1156: if(val < dpowers[c])
 41484  011FB0  51A3               	movf	i2__doprnt@c& (0+255),w,b
 41485  011FB2  0D04               	mullw	4
 41486  011FB4  0E4B               	movlw	low _dpowers
 41487  011FB6  24F3               	addwf	prodl,w,c
 41488  011FB8  6EF6               	movwf	tblptrl,c
 41489  011FBA  0EE9               	movlw	high _dpowers
 41490  011FBC  20F4               	addwfc	prodh,w,c
 41491  011FBE  6EF7               	movwf	tblptrh,c
 41492  011FC0                     	if	1	;There are 3 active tblptr bytes
 41493  011FC0  6AF8               	clrf	tblptru,c
 41494  011FC2  0E00               	movlw	low (__mediumconst shr (0+16))
 41495  011FC4  22F8               	addwfc	tblptru,f,c
 41496  011FC6                     	endif
 41497  011FC6  0009               	tblrd		*+
 41498  011FC8  50F5               	movf	tablat,w,c
 41499  011FCA  5D99               	subwf	i2__doprnt@val& (0+255),w,b
 41500  011FCC  0009               	tblrd		*+
 41501  011FCE  50F5               	movf	tablat,w,c
 41502  011FD0  599A               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 41503  011FD2  0009               	tblrd		*+
 41504  011FD4  50F5               	movf	tablat,w,c
 41505  011FD6  599B               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 41506  011FD8  0009               	tblrd		*+
 41507  011FDA  50F5               	movf	tablat,w,c
 41508  011FDC  599C               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 41509  011FDE  A0D8               	btfss	status,0,c
 41510  011FE0  D005               	goto	i2u2605_40
 41511                           
 41512                           ; BSR set to: 0
 41513  011FE2  2BA3               	incf	i2__doprnt@c& (0+255),f,b
 41514                           
 41515                           ; BSR set to: 0
 41516  011FE4  0E0A               	movlw	10
 41517  011FE6  19A3               	xorwf	i2__doprnt@c& (0+255),w,b
 41518  011FE8  A4D8               	btfss	status,2,c
 41519  011FEA  D7E2               	goto	i2l20322
 41520  011FEC                     i2u2605_40:
 41521                           
 41522                           ; BSR set to: 0
 41523                           ;doprnt.c: 1161: width -= prec + c + eexp;
 41524  011FEC  51A3               	movf	i2__doprnt@c& (0+255),w,b
 41525  011FEE  259F               	addwf	i2__doprnt@prec& (0+255),w,b
 41526  011FF0  6F72               	movwf	??i2__doprnt& (0+255),b
 41527  011FF2  0E00               	movlw	0
 41528  011FF4  21A0               	addwfc	(i2__doprnt@prec+1)& (0+255),w,b
 41529  011FF6  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 41530  011FF8  518F               	movf	i2__doprnt@eexp& (0+255),w,b
 41531  011FFA  2772               	addwf	??i2__doprnt& (0+255),f,b
 41532  011FFC  5190               	movf	(i2__doprnt@eexp+1)& (0+255),w,b
 41533  011FFE  2373               	addwfc	(??i2__doprnt+1)& (0+255),f,b
 41534  012000  5172               	movf	??i2__doprnt& (0+255),w,b
 41535  012002  5F9D               	subwf	i2__doprnt@width& (0+255),f,b
 41536  012004  5173               	movf	(??i2__doprnt+1)& (0+255),w,b
 41537  012006  5B9E               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 41538                           
 41539                           ;doprnt.c: 1162: if(;doprnt.c: 1166: prec)
 41540  012008  519F               	movf	i2__doprnt@prec& (0+255),w,b
 41541  01200A  11A0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 41542  01200C  B4D8               	btfsc	status,2,c
 41543  01200E  D003               	goto	i2l20334
 41544                           
 41545                           ; BSR set to: 0
 41546                           ;doprnt.c: 1167: width--;
 41547  012010  079D               	decf	i2__doprnt@width& (0+255),f,b
 41548  012012  A0D8               	btfss	status,0,c
 41549  012014  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 41550  012016                     i2l20334:
 41551                           
 41552                           ; BSR set to: 0
 41553                           ;doprnt.c: 1168: if(flag & 0x03)
 41554  012016  0E03               	movlw	3
 41555  012018  15A1               	andwf	i2__doprnt@flag& (0+255),w,b
 41556  01201A  6F72               	movwf	??i2__doprnt& (0+255),b
 41557  01201C  0E00               	movlw	0
 41558  01201E  15A2               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 41559  012020  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 41560  012022  5172               	movf	??i2__doprnt& (0+255),w,b
 41561  012024  1173               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 41562  012026  B4D8               	btfsc	status,2,c
 41563  012028  D003               	goto	i2l20338
 41564                           
 41565                           ; BSR set to: 0
 41566                           ;doprnt.c: 1169: width--;
 41567  01202A  079D               	decf	i2__doprnt@width& (0+255),f,b
 41568  01202C  A0D8               	btfss	status,0,c
 41569  01202E  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 41570  012030                     i2l20338:
 41571                           
 41572                           ; BSR set to: 0
 41573                           ;doprnt.c: 1172: if(flag & 0x04) {
 41574  012030  A5A1               	btfss	i2__doprnt@flag& (0+255),2,b
 41575  012032  D0F0               	goto	i2l20390
 41576                           
 41577                           ; BSR set to: 0
 41578                           ;doprnt.c: 1174: if(flag & 0x02)
 41579  012034  A3A1               	btfss	i2__doprnt@flag& (0+255),1,b
 41580  012036  D041               	goto	i2l2469
 41581                           
 41582                           ; BSR set to: 0
 41583  012038  EE20 F002          	lfsr	2,2
 41584  01203C  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41585  01203E  26D9               	addwf	fsr2l,f,c
 41586  012040  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41587  012042  22DA               	addwfc	fsr2h,f,c
 41588  012044  50DE               	movf	postinc2,w,c
 41589  012046  10DE               	iorwf	postinc2,w,c
 41590  012048  10DE               	iorwf	postinc2,w,c
 41591  01204A  B4D8               	btfsc	status,2,c
 41592  01204C  D01D               	goto	i2l2471
 41593                           
 41594                           ; BSR set to: 0
 41595  01204E  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 41596  012050  D004               	goto	i2l20348
 41597                           
 41598                           ; BSR set to: 0
 41599  012052  0E00               	movlw	0
 41600  012054  6F7C               	movwf	(i2__doprnt$4976+1)& (0+255),b
 41601  012056  0E2B               	movlw	43
 41602  012058  D003               	goto	L36
 41603  01205A                     i2l20348:
 41604                           
 41605                           ; BSR set to: 0
 41606  01205A  0E00               	movlw	0
 41607  01205C  6F7C               	movwf	(i2__doprnt$4976+1)& (0+255),b
 41608  01205E  0E2D               	movlw	45
 41609  012060                     L36:
 41610  012060  6F7B               	movwf	i2__doprnt$4976& (0+255),b
 41611                           
 41612                           ; BSR set to: 0
 41613  012062  EE20 F002          	lfsr	2,2
 41614  012066  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41615  012068  26D9               	addwf	fsr2l,f,c
 41616  01206A  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41617  01206C  22DA               	addwfc	fsr2h,f,c
 41618  01206E  D801               	call	i2u2612_48
 41619  012070  D091               	goto	i2l20378
 41620  012072                     i2u2612_48:
 41621  012072  0005               	push	
 41622  012074  6EFA               	movwf	pclath,c
 41623  012076  50DE               	movf	postinc2,w,c
 41624  012078  6EFD               	movwf	tosl,c
 41625  01207A  50DE               	movf	postinc2,w,c
 41626  01207C  6EFE               	movwf	tosh,c
 41627  01207E  50DE               	movf	postinc2,w,c
 41628  012080  6EFF               	movwf	tosu,c
 41629  012082  50FA               	movf	pclath,w,c
 41630  012084  517B               	movf	i2__doprnt$4976& (0+255),w,b
 41631  012086  0012               	return		;indir
 41632  012088                     i2l2471:
 41633                           
 41634                           ; BSR set to: 0
 41635  012088  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 41636  01208A  D004               	goto	i2l20354
 41637                           
 41638                           ; BSR set to: 0
 41639  01208C  0E00               	movlw	0
 41640  01208E  6F7E               	movwf	(i2__doprnt$4977+1)& (0+255),b
 41641  012090  0E2B               	movlw	43
 41642  012092  D003               	goto	L37
 41643  012094                     i2l20354:
 41644                           
 41645                           ; BSR set to: 0
 41646  012094  0E00               	movlw	0
 41647  012096  6F7E               	movwf	(i2__doprnt$4977+1)& (0+255),b
 41648  012098  0E2D               	movlw	45
 41649  01209A                     L37:
 41650  01209A  6F7D               	movwf	i2__doprnt$4977& (0+255),b
 41651                           
 41652                           ; BSR set to: 0
 41653  01209C  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41654  0120A0  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41655  0120A4  CFDE F072          	movff	postinc2,??i2__doprnt
 41656  0120A8  CFDD F073          	movff	postdec2,??i2__doprnt+1
 41657  0120AC  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41658  0120B0  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41659  0120B4  C07D  FFDF         	movff	i2__doprnt$4977,indf2
 41660  0120B8  D02E               	goto	i2l20366
 41661  0120BA                     i2l2469:
 41662                           
 41663                           ; BSR set to: 0
 41664                           ;doprnt.c: 1180: else;doprnt.c: 1183: if(flag & 0x01)
 41665  0120BA  A1A1               	btfss	i2__doprnt@flag& (0+255),0,b
 41666  0120BC  D06B               	goto	i2l20378
 41667                           
 41668                           ; BSR set to: 0
 41669  0120BE  EE20 F002          	lfsr	2,2
 41670  0120C2  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41671  0120C4  26D9               	addwf	fsr2l,f,c
 41672  0120C6  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41673  0120C8  22DA               	addwfc	fsr2h,f,c
 41674  0120CA  50DE               	movf	postinc2,w,c
 41675  0120CC  10DE               	iorwf	postinc2,w,c
 41676  0120CE  10DE               	iorwf	postinc2,w,c
 41677  0120D0  B4D8               	btfsc	status,2,c
 41678  0120D2  D013               	goto	i2l20364
 41679                           
 41680                           ; BSR set to: 0
 41681  0120D4  EE20 F002          	lfsr	2,2
 41682  0120D8  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41683  0120DA  26D9               	addwf	fsr2l,f,c
 41684  0120DC  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41685  0120DE  22DA               	addwfc	fsr2h,f,c
 41686  0120E0  D801               	call	i2u2616_48
 41687  0120E2  D058               	goto	i2l20378
 41688  0120E4                     i2u2616_48:
 41689  0120E4  0005               	push	
 41690  0120E6  6EFA               	movwf	pclath,c
 41691  0120E8  50DE               	movf	postinc2,w,c
 41692  0120EA  6EFD               	movwf	tosl,c
 41693  0120EC  50DE               	movf	postinc2,w,c
 41694  0120EE  6EFE               	movwf	tosh,c
 41695  0120F0  50DE               	movf	postinc2,w,c
 41696  0120F2  6EFF               	movwf	tosu,c
 41697  0120F4  50FA               	movf	pclath,w,c
 41698  0120F6  0E20               	movlw	32
 41699  0120F8  0012               	return		;indir
 41700  0120FA                     i2l20364:
 41701                           
 41702                           ; BSR set to: 0
 41703  0120FA  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41704  0120FE  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41705  012102  CFDE F072          	movff	postinc2,??i2__doprnt
 41706  012106  CFDD F073          	movff	postdec2,??i2__doprnt+1
 41707  01210A  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41708  01210E  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41709  012112  0E20               	movlw	32
 41710  012114  6EDF               	movwf	indf2,c
 41711  012116                     i2l20366:
 41712                           
 41713                           ; BSR set to: 0
 41714  012116  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41715  01211A  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41716  01211E  2ADE               	incf	postinc2,f,c
 41717  012120  0E00               	movlw	0
 41718  012122  22DD               	addwfc	postdec2,f,c
 41719  012124  D037               	goto	i2l20378
 41720  012126                     i2l20368:
 41721                           
 41722                           ; BSR set to: 0
 41723  012126  EE20 F002          	lfsr	2,2
 41724  01212A  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41725  01212C  26D9               	addwf	fsr2l,f,c
 41726  01212E  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41727  012130  22DA               	addwfc	fsr2h,f,c
 41728  012132  50DE               	movf	postinc2,w,c
 41729  012134  10DE               	iorwf	postinc2,w,c
 41730  012136  10DE               	iorwf	postinc2,w,c
 41731  012138  B4D8               	btfsc	status,2,c
 41732  01213A  D013               	goto	i2l20372
 41733                           
 41734                           ; BSR set to: 0
 41735  01213C  EE20 F002          	lfsr	2,2
 41736  012140  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41737  012142  26D9               	addwf	fsr2l,f,c
 41738  012144  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41739  012146  22DA               	addwfc	fsr2h,f,c
 41740  012148  D801               	call	i2u2618_48
 41741  01214A  D020               	goto	i2l20376
 41742  01214C                     i2u2618_48:
 41743  01214C  0005               	push	
 41744  01214E  6EFA               	movwf	pclath,c
 41745  012150  50DE               	movf	postinc2,w,c
 41746  012152  6EFD               	movwf	tosl,c
 41747  012154  50DE               	movf	postinc2,w,c
 41748  012156  6EFE               	movwf	tosh,c
 41749  012158  50DE               	movf	postinc2,w,c
 41750  01215A  6EFF               	movwf	tosu,c
 41751  01215C  50FA               	movf	pclath,w,c
 41752  01215E  0E30               	movlw	48
 41753  012160  0012               	return		;indir
 41754  012162                     i2l20372:
 41755                           
 41756                           ; BSR set to: 0
 41757  012162  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41758  012166  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41759  01216A  CFDE F072          	movff	postinc2,??i2__doprnt
 41760  01216E  CFDD F073          	movff	postdec2,??i2__doprnt+1
 41761  012172  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41762  012176  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41763  01217A  0E30               	movlw	48
 41764  01217C  6EDF               	movwf	indf2,c
 41765                           
 41766                           ; BSR set to: 0
 41767  01217E  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41768  012182  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41769  012186  2ADE               	incf	postinc2,f,c
 41770  012188  0E00               	movlw	0
 41771  01218A  22DD               	addwfc	postdec2,f,c
 41772  01218C                     i2l20376:
 41773                           
 41774                           ;doprnt.c: 1189: width--;
 41775  01218C  0100               	movlb	0	; () banked
 41776  01218E  079D               	decf	i2__doprnt@width& (0+255),f,b
 41777  012190  A0D8               	btfss	status,0,c
 41778  012192  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 41779  012194                     i2l20378:
 41780  012194  0100               	movlb	0	; () banked
 41781  012196  BF9E               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 41782  012198  D12E               	goto	i2l20428
 41783  01219A  519E               	movf	(i2__doprnt@width+1)& (0+255),w,b
 41784  01219C  E1C4               	bnz	i2l20368
 41785  01219E  059D               	decf	i2__doprnt@width& (0+255),w,b
 41786  0121A0  A0D8               	btfss	status,0,c
 41787  0121A2  D129               	goto	i2l20428
 41788  0121A4  D7C0               	goto	i2l20368
 41789  0121A6                     i2l20380:
 41790                           
 41791                           ; BSR set to: 0
 41792  0121A6  EE20 F002          	lfsr	2,2
 41793  0121AA  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41794  0121AC  26D9               	addwf	fsr2l,f,c
 41795  0121AE  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41796  0121B0  22DA               	addwfc	fsr2h,f,c
 41797  0121B2  50DE               	movf	postinc2,w,c
 41798  0121B4  10DE               	iorwf	postinc2,w,c
 41799  0121B6  10DE               	iorwf	postinc2,w,c
 41800  0121B8  B4D8               	btfsc	status,2,c
 41801  0121BA  D013               	goto	i2l20384
 41802                           
 41803                           ; BSR set to: 0
 41804  0121BC  EE20 F002          	lfsr	2,2
 41805  0121C0  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41806  0121C2  26D9               	addwf	fsr2l,f,c
 41807  0121C4  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41808  0121C6  22DA               	addwfc	fsr2h,f,c
 41809  0121C8  D801               	call	i2u2621_48
 41810  0121CA  D020               	goto	i2l20388
 41811  0121CC                     i2u2621_48:
 41812  0121CC  0005               	push	
 41813  0121CE  6EFA               	movwf	pclath,c
 41814  0121D0  50DE               	movf	postinc2,w,c
 41815  0121D2  6EFD               	movwf	tosl,c
 41816  0121D4  50DE               	movf	postinc2,w,c
 41817  0121D6  6EFE               	movwf	tosh,c
 41818  0121D8  50DE               	movf	postinc2,w,c
 41819  0121DA  6EFF               	movwf	tosu,c
 41820  0121DC  50FA               	movf	pclath,w,c
 41821  0121DE  0E20               	movlw	32
 41822  0121E0  0012               	return		;indir
 41823  0121E2                     i2l20384:
 41824                           
 41825                           ; BSR set to: 0
 41826  0121E2  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41827  0121E6  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41828  0121EA  CFDE F072          	movff	postinc2,??i2__doprnt
 41829  0121EE  CFDD F073          	movff	postdec2,??i2__doprnt+1
 41830  0121F2  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41831  0121F6  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41832  0121FA  0E20               	movlw	32
 41833  0121FC  6EDF               	movwf	indf2,c
 41834                           
 41835                           ; BSR set to: 0
 41836  0121FE  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41837  012202  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41838  012206  2ADE               	incf	postinc2,f,c
 41839  012208  0E00               	movlw	0
 41840  01220A  22DD               	addwfc	postdec2,f,c
 41841  01220C                     i2l20388:
 41842                           
 41843                           ;doprnt.c: 1201: width--;
 41844  01220C  0100               	movlb	0	; () banked
 41845  01220E  079D               	decf	i2__doprnt@width& (0+255),f,b
 41846  012210  A0D8               	btfss	status,0,c
 41847  012212  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 41848  012214                     i2l20390:
 41849                           
 41850                           ; BSR set to: 0
 41851  012214  BF9E               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 41852  012216  D005               	goto	i2u2622_40
 41853  012218  519E               	movf	(i2__doprnt@width+1)& (0+255),w,b
 41854  01221A  E1C5               	bnz	i2l20380
 41855  01221C  059D               	decf	i2__doprnt@width& (0+255),w,b
 41856  01221E  B0D8               	btfsc	status,0,c
 41857  012220  D7C2               	goto	i2l20380
 41858  012222                     i2u2622_40:
 41859                           
 41860                           ; BSR set to: 0
 41861                           ;doprnt.c: 1202: };doprnt.c: 1205: if(flag & 0x02)
 41862  012222  A3A1               	btfss	i2__doprnt@flag& (0+255),1,b
 41863  012224  D041               	goto	i2l2503
 41864                           
 41865                           ; BSR set to: 0
 41866  012226  EE20 F002          	lfsr	2,2
 41867  01222A  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41868  01222C  26D9               	addwf	fsr2l,f,c
 41869  01222E  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41870  012230  22DA               	addwfc	fsr2h,f,c
 41871  012232  50DE               	movf	postinc2,w,c
 41872  012234  10DE               	iorwf	postinc2,w,c
 41873  012236  10DE               	iorwf	postinc2,w,c
 41874  012238  B4D8               	btfsc	status,2,c
 41875  01223A  D01D               	goto	i2l2505
 41876                           
 41877                           ; BSR set to: 0
 41878  01223C  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 41879  01223E  D004               	goto	i2l20398
 41880                           
 41881                           ; BSR set to: 0
 41882  012240  0E00               	movlw	0
 41883  012242  6F80               	movwf	(i2__doprnt$4978+1)& (0+255),b
 41884  012244  0E2B               	movlw	43
 41885  012246  D003               	goto	L38
 41886  012248                     i2l20398:
 41887                           
 41888                           ; BSR set to: 0
 41889  012248  0E00               	movlw	0
 41890  01224A  6F80               	movwf	(i2__doprnt$4978+1)& (0+255),b
 41891  01224C  0E2D               	movlw	45
 41892  01224E                     L38:
 41893  01224E  6F7F               	movwf	i2__doprnt$4978& (0+255),b
 41894                           
 41895                           ; BSR set to: 0
 41896  012250  EE20 F002          	lfsr	2,2
 41897  012254  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41898  012256  26D9               	addwf	fsr2l,f,c
 41899  012258  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41900  01225A  22DA               	addwfc	fsr2h,f,c
 41901  01225C  D801               	call	i2u2626_48
 41902  01225E  D0CB               	goto	i2l20428
 41903  012260                     i2u2626_48:
 41904  012260  0005               	push	
 41905  012262  6EFA               	movwf	pclath,c
 41906  012264  50DE               	movf	postinc2,w,c
 41907  012266  6EFD               	movwf	tosl,c
 41908  012268  50DE               	movf	postinc2,w,c
 41909  01226A  6EFE               	movwf	tosh,c
 41910  01226C  50DE               	movf	postinc2,w,c
 41911  01226E  6EFF               	movwf	tosu,c
 41912  012270  50FA               	movf	pclath,w,c
 41913  012272  517F               	movf	i2__doprnt$4978& (0+255),w,b
 41914  012274  0012               	return		;indir
 41915  012276                     i2l2505:
 41916                           
 41917                           ; BSR set to: 0
 41918  012276  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 41919  012278  D004               	goto	i2l20404
 41920                           
 41921                           ; BSR set to: 0
 41922  01227A  0E00               	movlw	0
 41923  01227C  6F82               	movwf	(i2__doprnt$4979+1)& (0+255),b
 41924  01227E  0E2B               	movlw	43
 41925  012280  D003               	goto	L39
 41926  012282                     i2l20404:
 41927                           
 41928                           ; BSR set to: 0
 41929  012282  0E00               	movlw	0
 41930  012284  6F82               	movwf	(i2__doprnt$4979+1)& (0+255),b
 41931  012286  0E2D               	movlw	45
 41932  012288                     L39:
 41933  012288  6F81               	movwf	i2__doprnt$4979& (0+255),b
 41934                           
 41935                           ; BSR set to: 0
 41936  01228A  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41937  01228E  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41938  012292  CFDE F072          	movff	postinc2,??i2__doprnt
 41939  012296  CFDD F073          	movff	postdec2,??i2__doprnt+1
 41940  01229A  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41941  01229E  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41942  0122A2  C081  FFDF         	movff	i2__doprnt$4979,indf2
 41943  0122A6  D0A0               	goto	L40
 41944  0122A8                     i2l2503:
 41945                           
 41946                           ; BSR set to: 0
 41947                           ;doprnt.c: 1211: else if(flag & 0x01)
 41948  0122A8  A1A1               	btfss	i2__doprnt@flag& (0+255),0,b
 41949  0122AA  D0A5               	goto	i2l20428
 41950                           
 41951                           ; BSR set to: 0
 41952  0122AC  EE20 F002          	lfsr	2,2
 41953  0122B0  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41954  0122B2  26D9               	addwf	fsr2l,f,c
 41955  0122B4  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41956  0122B6  22DA               	addwfc	fsr2h,f,c
 41957  0122B8  50DE               	movf	postinc2,w,c
 41958  0122BA  10DE               	iorwf	postinc2,w,c
 41959  0122BC  10DE               	iorwf	postinc2,w,c
 41960  0122BE  B4D8               	btfsc	status,2,c
 41961  0122C0  D013               	goto	i2l20414
 41962                           
 41963                           ; BSR set to: 0
 41964  0122C2  EE20 F002          	lfsr	2,2
 41965  0122C6  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41966  0122C8  26D9               	addwf	fsr2l,f,c
 41967  0122CA  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41968  0122CC  22DA               	addwfc	fsr2h,f,c
 41969  0122CE  D801               	call	i2u2630_48
 41970  0122D0  D092               	goto	i2l20428
 41971  0122D2                     i2u2630_48:
 41972  0122D2  0005               	push	
 41973  0122D4  6EFA               	movwf	pclath,c
 41974  0122D6  50DE               	movf	postinc2,w,c
 41975  0122D8  6EFD               	movwf	tosl,c
 41976  0122DA  50DE               	movf	postinc2,w,c
 41977  0122DC  6EFE               	movwf	tosh,c
 41978  0122DE  50DE               	movf	postinc2,w,c
 41979  0122E0  6EFF               	movwf	tosu,c
 41980  0122E2  50FA               	movf	pclath,w,c
 41981  0122E4  0E20               	movlw	32
 41982  0122E6  0012               	return		;indir
 41983  0122E8                     i2l20414:
 41984                           
 41985                           ; BSR set to: 0
 41986  0122E8  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41987  0122EC  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41988  0122F0  CFDE F072          	movff	postinc2,??i2__doprnt
 41989  0122F4  CFDD F073          	movff	postdec2,??i2__doprnt+1
 41990  0122F8  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41991  0122FC  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41992  012300  0E20               	movlw	32
 41993  012302  D071               	goto	L60
 41994  012304                     i2l20418:
 41995                           
 41996                           ; BSR set to: 0
 41997                           ;doprnt.c: 1219: {;doprnt.c: 1220: tmpval.vd = val/dpowers[c];
 41998  012304  C099  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 41999  012308  C09A  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 42000  01230C  C09B  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 42001  012310  C09C  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 42002  012314  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42003  012316  0D04               	mullw	4
 42004  012318  0E4B               	movlw	low _dpowers
 42005  01231A  24F3               	addwf	prodl,w,c
 42006  01231C  6EF6               	movwf	tblptrl,c
 42007  01231E  0EE9               	movlw	high _dpowers
 42008  012320  20F4               	addwfc	prodh,w,c
 42009  012322  6EF7               	movwf	tblptrh,c
 42010  012324                     	if	1	;There are 3 active tblptr bytes
 42011  012324  6AF8               	clrf	tblptru,c
 42012  012326  0E00               	movlw	low (__mediumconst shr (0+16))
 42013  012328  22F8               	addwfc	tblptru,f,c
 42014  01232A                     	endif
 42015  01232A  0009               	tblrd		*+
 42016  01232C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 42017  012330  0009               	tblrd		*+
 42018  012332  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 42019  012336  0009               	tblrd		*+
 42020  012338  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 42021  01233C  000A               	tblrd		*-
 42022  01233E  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 42023  012342  ECED  F0D9         	call	i2___lldiv
 42024  012346  C001  F091         	movff	?i2___lldiv,i2__doprnt@tmpval
 42025  01234A  C002  F092         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 42026  01234E  C003  F093         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 42027  012352  C004  F094         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 42028                           
 42029                           ;doprnt.c: 1221: tmpval.vd %= 10;
 42030  012356  C091  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 42031  01235A  C092  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 42032  01235E  C093  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 42033  012362  C094  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 42034  012366  0E0A               	movlw	10
 42035  012368  6E12               	movwf	i2___llmod@divisor,c
 42036  01236A  0E00               	movlw	0
 42037  01236C  6E13               	movwf	i2___llmod@divisor+1,c
 42038  01236E  0E00               	movlw	0
 42039  012370  6E14               	movwf	i2___llmod@divisor+2,c
 42040  012372  0E00               	movlw	0
 42041  012374  6E15               	movwf	i2___llmod@divisor+3,c
 42042  012376  EC6C  F0DB         	call	i2___llmod	;wreg free
 42043  01237A  C00E  F091         	movff	?i2___llmod,i2__doprnt@tmpval
 42044  01237E  C00F  F092         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 42045  012382  C010  F093         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 42046  012386  C011  F094         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 42047  01238A  0100               	movlb	0	; () banked
 42048  01238C  EE20 F002          	lfsr	2,2
 42049  012390  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42050  012392  26D9               	addwf	fsr2l,f,c
 42051  012394  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42052  012396  22DA               	addwfc	fsr2h,f,c
 42053  012398  50DE               	movf	postinc2,w,c
 42054  01239A  10DE               	iorwf	postinc2,w,c
 42055  01239C  10DE               	iorwf	postinc2,w,c
 42056  01239E  B4D8               	btfsc	status,2,c
 42057  0123A0  D014               	goto	i2l20426
 42058                           
 42059                           ; BSR set to: 0
 42060  0123A2  EE20 F002          	lfsr	2,2
 42061  0123A6  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42062  0123A8  26D9               	addwf	fsr2l,f,c
 42063  0123AA  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42064  0123AC  22DA               	addwfc	fsr2h,f,c
 42065  0123AE  D801               	call	i2u2632_48
 42066  0123B0  D022               	goto	i2l20428
 42067  0123B2                     i2u2632_48:
 42068  0123B2  0005               	push	
 42069  0123B4  6EFA               	movwf	pclath,c
 42070  0123B6  50DE               	movf	postinc2,w,c
 42071  0123B8  6EFD               	movwf	tosl,c
 42072  0123BA  50DE               	movf	postinc2,w,c
 42073  0123BC  6EFE               	movwf	tosh,c
 42074  0123BE  50DE               	movf	postinc2,w,c
 42075  0123C0  6EFF               	movwf	tosu,c
 42076  0123C2  50FA               	movf	pclath,w,c
 42077  0123C4  5191               	movf	i2__doprnt@tmpval& (0+255),w,b
 42078  0123C6  0F30               	addlw	48
 42079  0123C8  0012               	return		;indir
 42080  0123CA                     i2l20426:
 42081                           
 42082                           ; BSR set to: 0
 42083  0123CA  5191               	movf	i2__doprnt@tmpval& (0+255),w,b
 42084  0123CC  0F30               	addlw	48
 42085  0123CE  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42086  0123D2  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42087  0123D6  CFDE F072          	movff	postinc2,??i2__doprnt
 42088  0123DA  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42089  0123DE  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42090  0123E2  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42091  0123E6                     L60:
 42092  0123E6  6EDF               	movwf	indf2,c
 42093  0123E8                     L40:
 42094  0123E8  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42095  0123EC  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42096  0123F0  2ADE               	incf	postinc2,f,c
 42097  0123F2  0E00               	movlw	0
 42098  0123F4  22DD               	addwfc	postdec2,f,c
 42099  0123F6                     i2l20428:
 42100  0123F6  0100               	movlb	0	; () banked
 42101  0123F8  07A3               	decf	i2__doprnt@c& (0+255),f,b
 42102  0123FA  29A3               	incf	i2__doprnt@c& (0+255),w,b
 42103  0123FC  B4D8               	btfsc	status,2,c
 42104  0123FE  D038               	goto	i2l20440
 42105  012400  D781               	goto	i2l20418
 42106  012402                     i2l20430:
 42107                           
 42108                           ; BSR set to: 0
 42109  012402  EE20 F002          	lfsr	2,2
 42110  012406  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42111  012408  26D9               	addwf	fsr2l,f,c
 42112  01240A  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42113  01240C  22DA               	addwfc	fsr2h,f,c
 42114  01240E  50DE               	movf	postinc2,w,c
 42115  012410  10DE               	iorwf	postinc2,w,c
 42116  012412  10DE               	iorwf	postinc2,w,c
 42117  012414  B4D8               	btfsc	status,2,c
 42118  012416  D013               	goto	i2l20434
 42119                           
 42120                           ; BSR set to: 0
 42121  012418  EE20 F002          	lfsr	2,2
 42122  01241C  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42123  01241E  26D9               	addwf	fsr2l,f,c
 42124  012420  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42125  012422  22DA               	addwfc	fsr2h,f,c
 42126  012424  D801               	call	i2u2635_48
 42127  012426  D020               	goto	i2l20438
 42128  012428                     i2u2635_48:
 42129  012428  0005               	push	
 42130  01242A  6EFA               	movwf	pclath,c
 42131  01242C  50DE               	movf	postinc2,w,c
 42132  01242E  6EFD               	movwf	tosl,c
 42133  012430  50DE               	movf	postinc2,w,c
 42134  012432  6EFE               	movwf	tosh,c
 42135  012434  50DE               	movf	postinc2,w,c
 42136  012436  6EFF               	movwf	tosu,c
 42137  012438  50FA               	movf	pclath,w,c
 42138  01243A  0E30               	movlw	48
 42139  01243C  0012               	return		;indir
 42140  01243E                     i2l20434:
 42141                           
 42142                           ; BSR set to: 0
 42143  01243E  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42144  012442  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42145  012446  CFDE F072          	movff	postinc2,??i2__doprnt
 42146  01244A  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42147  01244E  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42148  012452  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42149  012456  0E30               	movlw	48
 42150  012458  6EDF               	movwf	indf2,c
 42151                           
 42152                           ; BSR set to: 0
 42153  01245A  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42154  01245E  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42155  012462  2ADE               	incf	postinc2,f,c
 42156  012464  0E00               	movlw	0
 42157  012466  22DD               	addwfc	postdec2,f,c
 42158  012468                     i2l20438:
 42159                           
 42160                           ;doprnt.c: 1228: eexp--;
 42161  012468  0100               	movlb	0	; () banked
 42162  01246A  078F               	decf	i2__doprnt@eexp& (0+255),f,b
 42163  01246C  A0D8               	btfss	status,0,c
 42164  01246E  0790               	decf	(i2__doprnt@eexp+1)& (0+255),f,b
 42165  012470                     i2l20440:
 42166                           
 42167                           ; BSR set to: 0
 42168  012470  BF90               	btfsc	(i2__doprnt@eexp+1)& (0+255),7,b
 42169  012472  D005               	goto	i2u2636_40
 42170  012474  5190               	movf	(i2__doprnt@eexp+1)& (0+255),w,b
 42171  012476  E1C5               	bnz	i2l20430
 42172  012478  058F               	decf	i2__doprnt@eexp& (0+255),w,b
 42173  01247A  B0D8               	btfsc	status,0,c
 42174  01247C  D7C2               	goto	i2l20430
 42175  01247E                     i2u2636_40:
 42176                           
 42177                           ; BSR set to: 0
 42178                           ;doprnt.c: 1229: };doprnt.c: 1230: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
 42179  01247E  BFA0               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 42180  012480  D009               	goto	i2l2536
 42181  012482  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 42182  012484  E104               	bnz	i2u2637_40
 42183  012486  0E09               	movlw	9
 42184  012488  5D9F               	subwf	i2__doprnt@prec& (0+255),w,b
 42185  01248A  A0D8               	btfss	status,0,c
 42186  01248C  D003               	goto	i2l2536
 42187  01248E                     i2u2637_40:
 42188                           
 42189                           ; BSR set to: 0
 42190                           ;doprnt.c: 1231: c = (sizeof dpowers/sizeof dpowers[0])-2;
 42191  01248E  0E08               	movlw	8
 42192  012490  6FA3               	movwf	i2__doprnt@c& (0+255),b
 42193  012492  D002               	goto	i2l20446
 42194  012494                     i2l2536:
 42195                           
 42196                           ; BSR set to: 0
 42197                           ;doprnt.c: 1232: else;doprnt.c: 1233: c = (char)prec;
 42198  012494  C09F  F0A3         	movff	i2__doprnt@prec,i2__doprnt@c
 42199  012498                     i2l20446:
 42200                           
 42201                           ; BSR set to: 0
 42202                           ;doprnt.c: 1234: prec -= (int)c;
 42203  012498  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42204  01249A  5F9F               	subwf	i2__doprnt@prec& (0+255),f,b
 42205  01249C  0E00               	movlw	0
 42206  01249E  5BA0               	subwfb	(i2__doprnt@prec+1)& (0+255),f,b
 42207                           
 42208                           ; BSR set to: 0
 42209                           ;doprnt.c: 1238: if(c)
 42210  0124A0  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42211  0124A2  B4D8               	btfsc	status,2,c
 42212  0124A4  D033               	goto	i2l20458
 42213                           
 42214                           ; BSR set to: 0
 42215  0124A6  EE20 F002          	lfsr	2,2
 42216  0124AA  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42217  0124AC  26D9               	addwf	fsr2l,f,c
 42218  0124AE  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42219  0124B0  22DA               	addwfc	fsr2h,f,c
 42220  0124B2  50DE               	movf	postinc2,w,c
 42221  0124B4  10DE               	iorwf	postinc2,w,c
 42222  0124B6  10DE               	iorwf	postinc2,w,c
 42223  0124B8  B4D8               	btfsc	status,2,c
 42224  0124BA  D013               	goto	i2l20454
 42225                           
 42226                           ; BSR set to: 0
 42227  0124BC  EE20 F002          	lfsr	2,2
 42228  0124C0  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42229  0124C2  26D9               	addwf	fsr2l,f,c
 42230  0124C4  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42231  0124C6  22DA               	addwfc	fsr2h,f,c
 42232  0124C8  D801               	call	i2u2640_48
 42233  0124CA  D020               	goto	i2l20458
 42234  0124CC                     i2u2640_48:
 42235  0124CC  0005               	push	
 42236  0124CE  6EFA               	movwf	pclath,c
 42237  0124D0  50DE               	movf	postinc2,w,c
 42238  0124D2  6EFD               	movwf	tosl,c
 42239  0124D4  50DE               	movf	postinc2,w,c
 42240  0124D6  6EFE               	movwf	tosh,c
 42241  0124D8  50DE               	movf	postinc2,w,c
 42242  0124DA  6EFF               	movwf	tosu,c
 42243  0124DC  50FA               	movf	pclath,w,c
 42244  0124DE  0E2E               	movlw	46
 42245  0124E0  0012               	return		;indir
 42246  0124E2                     i2l20454:
 42247                           
 42248                           ; BSR set to: 0
 42249  0124E2  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42250  0124E6  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42251  0124EA  CFDE F072          	movff	postinc2,??i2__doprnt
 42252  0124EE  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42253  0124F2  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42254  0124F6  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42255  0124FA  0E2E               	movlw	46
 42256  0124FC  6EDF               	movwf	indf2,c
 42257                           
 42258                           ; BSR set to: 0
 42259  0124FE  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42260  012502  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42261  012506  2ADE               	incf	postinc2,f,c
 42262  012508  0E00               	movlw	0
 42263  01250A  22DD               	addwfc	postdec2,f,c
 42264  01250C                     i2l20458:
 42265                           
 42266                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
 42267  01250C  0100               	movlb	0	; () banked
 42268  01250E  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42269  012510  EC6A  F0AF         	call	i2_scale
 42270  012514  C045  F076         	movff	?i2_scale,i2__doprnt$6415
 42271  012518  C046  F077         	movff	?i2_scale+1,i2__doprnt$6415+1
 42272  01251C  C047  F078         	movff	?i2_scale+2,i2__doprnt$6415+2
 42273  012520  C048  F079         	movff	?i2_scale+3,i2__doprnt$6415+3
 42274                           
 42275                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
 42276  012524  C095  F030         	movff	i2__doprnt@fval,i2___flmul@a
 42277  012528  C096  F031         	movff	i2__doprnt@fval+1,i2___flmul@a+1
 42278  01252C  C097  F032         	movff	i2__doprnt@fval+2,i2___flmul@a+2
 42279  012530  C098  F033         	movff	i2__doprnt@fval+3,i2___flmul@a+3
 42280  012534  C076  F02C         	movff	i2__doprnt$6415,i2___flmul@b
 42281  012538  C077  F02D         	movff	i2__doprnt$6415+1,i2___flmul@b+1
 42282  01253C  C078  F02E         	movff	i2__doprnt$6415+2,i2___flmul@b+2
 42283  012540  C079  F02F         	movff	i2__doprnt$6415+3,i2___flmul@b+3
 42284  012544  EC50  F0B8         	call	i2___flmul	;wreg free
 42285  012548  C02C  F04E         	movff	?i2___flmul,i2___fltol@f1
 42286  01254C  C02D  F04F         	movff	?i2___flmul+1,i2___fltol@f1+1
 42287  012550  C02E  F050         	movff	?i2___flmul+2,i2___fltol@f1+2
 42288  012554  C02F  F051         	movff	?i2___flmul+3,i2___fltol@f1+3
 42289  012558  ECBF  F0D5         	call	i2___fltol	;wreg free
 42290  01255C  C04E  F099         	movff	?i2___fltol,i2__doprnt@val
 42291  012560  C04F  F09A         	movff	?i2___fltol+1,i2__doprnt@val+1
 42292  012564  C050  F09B         	movff	?i2___fltol+2,i2__doprnt@val+2
 42293  012568  C051  F09C         	movff	?i2___fltol+3,i2__doprnt@val+3
 42294                           
 42295                           ;doprnt.c: 1247: while(c--) {
 42296  01256C  D0A3               	goto	i2l20474
 42297  01256E                     i2l20462:
 42298                           
 42299                           ; BSR set to: 0
 42300                           ;doprnt.c: 1248: tmpval.vd = val/dpowers[c];
 42301  01256E  C099  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 42302  012572  C09A  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 42303  012576  C09B  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 42304  01257A  C09C  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 42305  01257E  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42306  012580  0D04               	mullw	4
 42307  012582  0E4B               	movlw	low _dpowers
 42308  012584  24F3               	addwf	prodl,w,c
 42309  012586  6EF6               	movwf	tblptrl,c
 42310  012588  0EE9               	movlw	high _dpowers
 42311  01258A  20F4               	addwfc	prodh,w,c
 42312  01258C  6EF7               	movwf	tblptrh,c
 42313  01258E                     	if	1	;There are 3 active tblptr bytes
 42314  01258E  6AF8               	clrf	tblptru,c
 42315  012590  0E00               	movlw	low (__mediumconst shr (0+16))
 42316  012592  22F8               	addwfc	tblptru,f,c
 42317  012594                     	endif
 42318  012594  0009               	tblrd		*+
 42319  012596  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 42320  01259A  0009               	tblrd		*+
 42321  01259C  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 42322  0125A0  0009               	tblrd		*+
 42323  0125A2  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 42324  0125A6  000A               	tblrd		*-
 42325  0125A8  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 42326  0125AC  ECED  F0D9         	call	i2___lldiv	;wreg free
 42327  0125B0  C001  F091         	movff	?i2___lldiv,i2__doprnt@tmpval
 42328  0125B4  C002  F092         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 42329  0125B8  C003  F093         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 42330  0125BC  C004  F094         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 42331                           
 42332                           ;doprnt.c: 1249: tmpval.vd %= 10;
 42333  0125C0  C091  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 42334  0125C4  C092  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 42335  0125C8  C093  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 42336  0125CC  C094  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 42337  0125D0  0E0A               	movlw	10
 42338  0125D2  6E12               	movwf	i2___llmod@divisor,c
 42339  0125D4  0E00               	movlw	0
 42340  0125D6  6E13               	movwf	i2___llmod@divisor+1,c
 42341  0125D8  0E00               	movlw	0
 42342  0125DA  6E14               	movwf	i2___llmod@divisor+2,c
 42343  0125DC  0E00               	movlw	0
 42344  0125DE  6E15               	movwf	i2___llmod@divisor+3,c
 42345  0125E0  EC6C  F0DB         	call	i2___llmod	;wreg free
 42346  0125E4  C00E  F091         	movff	?i2___llmod,i2__doprnt@tmpval
 42347  0125E8  C00F  F092         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 42348  0125EC  C010  F093         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 42349  0125F0  C011  F094         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 42350  0125F4  0100               	movlb	0	; () banked
 42351  0125F6  EE20 F002          	lfsr	2,2
 42352  0125FA  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42353  0125FC  26D9               	addwf	fsr2l,f,c
 42354  0125FE  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42355  012600  22DA               	addwfc	fsr2h,f,c
 42356  012602  50DE               	movf	postinc2,w,c
 42357  012604  10DE               	iorwf	postinc2,w,c
 42358  012606  10DE               	iorwf	postinc2,w,c
 42359  012608  B4D8               	btfsc	status,2,c
 42360  01260A  D014               	goto	i2l20470
 42361                           
 42362                           ; BSR set to: 0
 42363  01260C  EE20 F002          	lfsr	2,2
 42364  012610  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42365  012612  26D9               	addwf	fsr2l,f,c
 42366  012614  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42367  012616  22DA               	addwfc	fsr2h,f,c
 42368  012618  D801               	call	i2u2642_48
 42369  01261A  D022               	goto	i2l20472
 42370  01261C                     i2u2642_48:
 42371  01261C  0005               	push	
 42372  01261E  6EFA               	movwf	pclath,c
 42373  012620  50DE               	movf	postinc2,w,c
 42374  012622  6EFD               	movwf	tosl,c
 42375  012624  50DE               	movf	postinc2,w,c
 42376  012626  6EFE               	movwf	tosh,c
 42377  012628  50DE               	movf	postinc2,w,c
 42378  01262A  6EFF               	movwf	tosu,c
 42379  01262C  50FA               	movf	pclath,w,c
 42380  01262E  5191               	movf	i2__doprnt@tmpval& (0+255),w,b
 42381  012630  0F30               	addlw	48
 42382  012632  0012               	return		;indir
 42383  012634                     i2l20470:
 42384                           
 42385                           ; BSR set to: 0
 42386  012634  5191               	movf	i2__doprnt@tmpval& (0+255),w,b
 42387  012636  0F30               	addlw	48
 42388  012638  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42389  01263C  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42390  012640  CFDE F072          	movff	postinc2,??i2__doprnt
 42391  012644  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42392  012648  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42393  01264C  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42394  012650  6EDF               	movwf	indf2,c
 42395  012652  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42396  012656  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42397  01265A  2ADE               	incf	postinc2,f,c
 42398  01265C  0E00               	movlw	0
 42399  01265E  22DD               	addwfc	postdec2,f,c
 42400  012660                     i2l20472:
 42401                           
 42402                           ;doprnt.c: 1251: val %= dpowers[c];
 42403  012660  C099  F00E         	movff	i2__doprnt@val,i2___llmod@dividend
 42404  012664  C09A  F00F         	movff	i2__doprnt@val+1,i2___llmod@dividend+1
 42405  012668  C09B  F010         	movff	i2__doprnt@val+2,i2___llmod@dividend+2
 42406  01266C  C09C  F011         	movff	i2__doprnt@val+3,i2___llmod@dividend+3
 42407  012670  0100               	movlb	0	; () banked
 42408  012672  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42409  012674  0D04               	mullw	4
 42410  012676  0E4B               	movlw	low _dpowers
 42411  012678  24F3               	addwf	prodl,w,c
 42412  01267A  6EF6               	movwf	tblptrl,c
 42413  01267C  0EE9               	movlw	high _dpowers
 42414  01267E  20F4               	addwfc	prodh,w,c
 42415  012680  6EF7               	movwf	tblptrh,c
 42416  012682                     	if	1	;There are 3 active tblptr bytes
 42417  012682  6AF8               	clrf	tblptru,c
 42418  012684  0E00               	movlw	low (__mediumconst shr (0+16))
 42419  012686  22F8               	addwfc	tblptru,f,c
 42420  012688                     	endif
 42421  012688  0009               	tblrd		*+
 42422  01268A  CFF5 F012          	movff	tablat,i2___llmod@divisor
 42423  01268E  0009               	tblrd		*+
 42424  012690  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 42425  012694  0009               	tblrd		*+
 42426  012696  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 42427  01269A  000A               	tblrd		*-
 42428  01269C  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 42429  0126A0  EC6C  F0DB         	call	i2___llmod
 42430  0126A4  C00E  F099         	movff	?i2___llmod,i2__doprnt@val
 42431  0126A8  C00F  F09A         	movff	?i2___llmod+1,i2__doprnt@val+1
 42432  0126AC  C010  F09B         	movff	?i2___llmod+2,i2__doprnt@val+2
 42433  0126B0  C011  F09C         	movff	?i2___llmod+3,i2__doprnt@val+3
 42434  0126B4                     i2l20474:
 42435  0126B4  0100               	movlb	0	; () banked
 42436  0126B6  07A3               	decf	i2__doprnt@c& (0+255),f,b
 42437  0126B8  29A3               	incf	i2__doprnt@c& (0+255),w,b
 42438  0126BA  B4D8               	btfsc	status,2,c
 42439  0126BC  D038               	goto	i2l20486
 42440  0126BE  D757               	goto	i2l20462
 42441  0126C0                     i2l20476:
 42442                           
 42443                           ; BSR set to: 0
 42444  0126C0  EE20 F002          	lfsr	2,2
 42445  0126C4  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42446  0126C6  26D9               	addwf	fsr2l,f,c
 42447  0126C8  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42448  0126CA  22DA               	addwfc	fsr2h,f,c
 42449  0126CC  50DE               	movf	postinc2,w,c
 42450  0126CE  10DE               	iorwf	postinc2,w,c
 42451  0126D0  10DE               	iorwf	postinc2,w,c
 42452  0126D2  B4D8               	btfsc	status,2,c
 42453  0126D4  D013               	goto	i2l20480
 42454                           
 42455                           ; BSR set to: 0
 42456  0126D6  EE20 F002          	lfsr	2,2
 42457  0126DA  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42458  0126DC  26D9               	addwf	fsr2l,f,c
 42459  0126DE  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42460  0126E0  22DA               	addwfc	fsr2h,f,c
 42461  0126E2  D801               	call	i2u2645_48
 42462  0126E4  D020               	goto	i2l20484
 42463  0126E6                     i2u2645_48:
 42464  0126E6  0005               	push	
 42465  0126E8  6EFA               	movwf	pclath,c
 42466  0126EA  50DE               	movf	postinc2,w,c
 42467  0126EC  6EFD               	movwf	tosl,c
 42468  0126EE  50DE               	movf	postinc2,w,c
 42469  0126F0  6EFE               	movwf	tosh,c
 42470  0126F2  50DE               	movf	postinc2,w,c
 42471  0126F4  6EFF               	movwf	tosu,c
 42472  0126F6  50FA               	movf	pclath,w,c
 42473  0126F8  0E30               	movlw	48
 42474  0126FA  0012               	return		;indir
 42475  0126FC                     i2l20480:
 42476                           
 42477                           ; BSR set to: 0
 42478  0126FC  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42479  012700  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42480  012704  CFDE F072          	movff	postinc2,??i2__doprnt
 42481  012708  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42482  01270C  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42483  012710  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42484  012714  0E30               	movlw	48
 42485  012716  6EDF               	movwf	indf2,c
 42486                           
 42487                           ; BSR set to: 0
 42488  012718  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42489  01271C  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42490  012720  2ADE               	incf	postinc2,f,c
 42491  012722  0E00               	movlw	0
 42492  012724  22DD               	addwfc	postdec2,f,c
 42493  012726                     i2l20484:
 42494                           
 42495                           ;doprnt.c: 1256: prec--;
 42496  012726  0100               	movlb	0	; () banked
 42497  012728  079F               	decf	i2__doprnt@prec& (0+255),f,b
 42498  01272A  A0D8               	btfss	status,0,c
 42499  01272C  07A0               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 42500  01272E                     i2l20486:
 42501                           
 42502                           ; BSR set to: 0
 42503  01272E  519F               	movf	i2__doprnt@prec& (0+255),w,b
 42504  012730  11A0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 42505  012732  B4D8               	btfsc	status,2,c
 42506  012734  D360               	goto	i2u2691_40
 42507  012736  D7C4               	goto	i2l20476
 42508  012738                     i2l20488:
 42509                           
 42510                           ; BSR set to: 0
 42511                           ;doprnt.c: 1265: };doprnt.c: 1270: if((flag & (0xC0)) == 0x00)
 42512  012738  0EC0               	movlw	192
 42513  01273A  15A1               	andwf	i2__doprnt@flag& (0+255),w,b
 42514  01273C  6F72               	movwf	??i2__doprnt& (0+255),b
 42515  01273E  0E00               	movlw	0
 42516  012740  15A2               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 42517  012742  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 42518  012744  5172               	movf	??i2__doprnt& (0+255),w,b
 42519  012746  1173               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 42520  012748  A4D8               	btfss	status,2,c
 42521  01274A  D041               	goto	i2l2557
 42522                           
 42523                           ; BSR set to: 0
 42524                           ;doprnt.c: 1272: {;doprnt.c: 1274: if(flag & 0x10)
 42525  01274C  A9A1               	btfss	i2__doprnt@flag& (0+255),4,b
 42526  01274E  D019               	goto	i2l20494
 42527                           
 42528                           ; BSR set to: 0
 42529                           ;doprnt.c: 1275: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 42530  012750  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 42531  012754  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 42532  012758  CFDF F072          	movff	indf2,??i2__doprnt
 42533  01275C  0E04               	movlw	4
 42534  01275E  26DE               	addwf	postinc2,f,c
 42535  012760  CFDF F073          	movff	indf2,??i2__doprnt+1
 42536  012764  0E00               	movlw	0
 42537  012766  22DD               	addwfc	postdec2,f,c
 42538  012768  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42539  01276C  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42540  012770  CFDE F099          	movff	postinc2,i2__doprnt@val
 42541  012774  CFDE F09A          	movff	postinc2,i2__doprnt@val+1
 42542  012778  CFDE F09B          	movff	postinc2,i2__doprnt@val+2
 42543  01277C  CFDE F09C          	movff	postinc2,i2__doprnt@val+3
 42544  012780  D019               	goto	i2l20496
 42545  012782                     i2l20494:
 42546                           
 42547                           ; BSR set to: 0
 42548                           ;doprnt.c: 1276: else;doprnt.c: 1278: val = (long)(*(int *)__va_arg((*(int **)ap), (int)
      +                          0));
 42549  012782  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 42550  012786  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 42551  01278A  CFDF F072          	movff	indf2,??i2__doprnt
 42552  01278E  0E02               	movlw	2
 42553  012790  26DE               	addwf	postinc2,f,c
 42554  012792  CFDF F073          	movff	indf2,??i2__doprnt+1
 42555  012796  0E00               	movlw	0
 42556  012798  22DD               	addwfc	postdec2,f,c
 42557  01279A  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42558  01279E  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42559  0127A2  CFDE F099          	movff	postinc2,i2__doprnt@val
 42560  0127A6  CFDD F09A          	movff	postdec2,i2__doprnt@val+1
 42561  0127AA  0E00               	movlw	0
 42562  0127AC  BF9A               	btfsc	(i2__doprnt@val+1)& (0+255),7,b
 42563  0127AE  0EFF               	movlw	-1
 42564  0127B0  6F9B               	movwf	(i2__doprnt@val+2)& (0+255),b
 42565  0127B2  6F9C               	movwf	(i2__doprnt@val+3)& (0+255),b
 42566  0127B4                     i2l20496:
 42567                           
 42568                           ; BSR set to: 0
 42569                           ;doprnt.c: 1280: if((long)val < 0) {
 42570  0127B4  AF9C               	btfss	(i2__doprnt@val+3)& (0+255),7,b
 42571  0127B6  D040               	goto	i2l20506
 42572                           
 42573                           ; BSR set to: 0
 42574                           ;doprnt.c: 1281: flag |= 0x03;
 42575  0127B8  0E03               	movlw	3
 42576  0127BA  13A1               	iorwf	i2__doprnt@flag& (0+255),f,b
 42577                           
 42578                           ; BSR set to: 0
 42579                           ;doprnt.c: 1282: val = -val;
 42580  0127BC  1F9C               	comf	(i2__doprnt@val+3)& (0+255),f,b
 42581  0127BE  1F9B               	comf	(i2__doprnt@val+2)& (0+255),f,b
 42582  0127C0  1F9A               	comf	(i2__doprnt@val+1)& (0+255),f,b
 42583  0127C2  6D99               	negf	i2__doprnt@val& (0+255),b
 42584  0127C4  0E00               	movlw	0
 42585  0127C6  239A               	addwfc	(i2__doprnt@val+1)& (0+255),f,b
 42586  0127C8  239B               	addwfc	(i2__doprnt@val+2)& (0+255),f,b
 42587  0127CA  239C               	addwfc	(i2__doprnt@val+3)& (0+255),f,b
 42588  0127CC  D035               	goto	i2l20506
 42589  0127CE                     i2l2557:
 42590                           
 42591                           ; BSR set to: 0
 42592                           ;doprnt.c: 1287: else;doprnt.c: 1292: {;doprnt.c: 1300: if(flag & 0x10)
 42593  0127CE  A9A1               	btfss	i2__doprnt@flag& (0+255),4,b
 42594  0127D0  D019               	goto	i2l20504
 42595                           
 42596                           ; BSR set to: 0
 42597                           ;doprnt.c: 1301: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 42598  0127D2  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 42599  0127D6  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 42600  0127DA  CFDF F072          	movff	indf2,??i2__doprnt
 42601  0127DE  0E04               	movlw	4
 42602  0127E0  26DE               	addwf	postinc2,f,c
 42603  0127E2  CFDF F073          	movff	indf2,??i2__doprnt+1
 42604  0127E6  0E00               	movlw	0
 42605  0127E8  22DD               	addwfc	postdec2,f,c
 42606  0127EA  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42607  0127EE  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42608  0127F2  CFDE F099          	movff	postinc2,i2__doprnt@val
 42609  0127F6  CFDE F09A          	movff	postinc2,i2__doprnt@val+1
 42610  0127FA  CFDE F09B          	movff	postinc2,i2__doprnt@val+2
 42611  0127FE  CFDE F09C          	movff	postinc2,i2__doprnt@val+3
 42612  012802  D01A               	goto	i2l20506
 42613  012804                     i2l20504:
 42614                           
 42615                           ; BSR set to: 0
 42616                           ;doprnt.c: 1302: else;doprnt.c: 1305: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
 42617  012804  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 42618  012808  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 42619  01280C  CFDF F072          	movff	indf2,??i2__doprnt
 42620  012810  0E02               	movlw	2
 42621  012812  26DE               	addwf	postinc2,f,c
 42622  012814  CFDF F073          	movff	indf2,??i2__doprnt+1
 42623  012818  0E00               	movlw	0
 42624  01281A  22DD               	addwfc	postdec2,f,c
 42625  01281C  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42626  012820  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42627  012824  CFDE F074          	movff	postinc2,??i2__doprnt+2
 42628  012828  CFDD F075          	movff	postdec2,??i2__doprnt+3
 42629  01282C  C074  F099         	movff	??i2__doprnt+2,i2__doprnt@val
 42630  012830  C075  F09A         	movff	??i2__doprnt+3,i2__doprnt@val+1
 42631  012834  6B9B               	clrf	(i2__doprnt@val+2)& (0+255),b
 42632  012836  6B9C               	clrf	(i2__doprnt@val+3)& (0+255),b
 42633  012838                     i2l20506:
 42634                           
 42635                           ; BSR set to: 0
 42636                           ;doprnt.c: 1306: };doprnt.c: 1309: if(prec == 0 && val == 0)
 42637  012838  519F               	movf	i2__doprnt@prec& (0+255),w,b
 42638  01283A  11A0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 42639  01283C  A4D8               	btfss	status,2,c
 42640  01283E  D04B               	goto	i2l20542
 42641                           
 42642                           ; BSR set to: 0
 42643  012840  5199               	movf	i2__doprnt@val& (0+255),w,b
 42644  012842  119A               	iorwf	(i2__doprnt@val+1)& (0+255),w,b
 42645  012844  119B               	iorwf	(i2__doprnt@val+2)& (0+255),w,b
 42646  012846  119C               	iorwf	(i2__doprnt@val+3)& (0+255),w,b
 42647  012848  A4D8               	btfss	status,2,c
 42648  01284A  D045               	goto	i2l20542
 42649                           
 42650                           ; BSR set to: 0
 42651                           ;doprnt.c: 1310: prec++;
 42652  01284C  4B9F               	infsnz	i2__doprnt@prec& (0+255),f,b
 42653  01284E  2BA0               	incf	(i2__doprnt@prec+1)& (0+255),f,b
 42654  012850  D042               	goto	i2l20542
 42655  012852                     i2l20512:
 42656                           
 42657                           ; BSR set to: 0
 42658                           ;doprnt.c: 1321: case 0xC0:;doprnt.c: 1324: for(c = 1 ; c != sizeof dpowers/sizeof dpowe
      +                          rs[0] ; c++)
 42659  012852  0E01               	movlw	1
 42660  012854  6FA3               	movwf	i2__doprnt@c& (0+255),b
 42661  012856                     i2l20518:
 42662                           
 42663                           ; BSR set to: 0
 42664                           ;doprnt.c: 1325: if(val < dpowers[c])
 42665  012856  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42666  012858  0D04               	mullw	4
 42667  01285A  0E4B               	movlw	low _dpowers
 42668  01285C  24F3               	addwf	prodl,w,c
 42669  01285E  6EF6               	movwf	tblptrl,c
 42670  012860  0EE9               	movlw	high _dpowers
 42671  012862  20F4               	addwfc	prodh,w,c
 42672  012864  6EF7               	movwf	tblptrh,c
 42673  012866                     	if	1	;There are 3 active tblptr bytes
 42674  012866  6AF8               	clrf	tblptru,c
 42675  012868  0E00               	movlw	low (__mediumconst shr (0+16))
 42676  01286A  22F8               	addwfc	tblptru,f,c
 42677  01286C                     	endif
 42678  01286C  0009               	tblrd		*+
 42679  01286E  50F5               	movf	tablat,w,c
 42680  012870  5D99               	subwf	i2__doprnt@val& (0+255),w,b
 42681  012872  0009               	tblrd		*+
 42682  012874  50F5               	movf	tablat,w,c
 42683  012876  599A               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 42684  012878  0009               	tblrd		*+
 42685  01287A  50F5               	movf	tablat,w,c
 42686  01287C  599B               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 42687  01287E  0009               	tblrd		*+
 42688  012880  50F5               	movf	tablat,w,c
 42689  012882  599C               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 42690  012884  A0D8               	btfss	status,0,c
 42691  012886  D032               	goto	i2l20544
 42692                           
 42693                           ; BSR set to: 0
 42694  012888  2BA3               	incf	i2__doprnt@c& (0+255),f,b
 42695                           
 42696                           ; BSR set to: 0
 42697  01288A  0E0A               	movlw	10
 42698  01288C  19A3               	xorwf	i2__doprnt@c& (0+255),w,b
 42699  01288E  B4D8               	btfsc	status,2,c
 42700  012890  D02D               	goto	i2l20544
 42701  012892  D7E1               	goto	i2l20518
 42702  012894                     i2l20526:
 42703                           
 42704                           ; BSR set to: 0
 42705                           ;doprnt.c: 1335: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 42706  012894  0E01               	movlw	1
 42707  012896  6FA3               	movwf	i2__doprnt@c& (0+255),b
 42708  012898                     i2l20532:
 42709                           
 42710                           ; BSR set to: 0
 42711                           ;doprnt.c: 1336: if(val < hexpowers[c])
 42712  012898  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42713  01289A  0D04               	mullw	4
 42714  01289C  0E2B               	movlw	low _hexpowers
 42715  01289E  24F3               	addwf	prodl,w,c
 42716  0128A0  6EF6               	movwf	tblptrl,c
 42717  0128A2  0EE6               	movlw	high _hexpowers
 42718  0128A4  20F4               	addwfc	prodh,w,c
 42719  0128A6  6EF7               	movwf	tblptrh,c
 42720  0128A8                     	if	1	;There are 3 active tblptr bytes
 42721  0128A8  6AF8               	clrf	tblptru,c
 42722  0128AA  0E00               	movlw	low (__mediumconst shr (0+16))
 42723  0128AC  22F8               	addwfc	tblptru,f,c
 42724  0128AE                     	endif
 42725  0128AE  0009               	tblrd		*+
 42726  0128B0  50F5               	movf	tablat,w,c
 42727  0128B2  5D99               	subwf	i2__doprnt@val& (0+255),w,b
 42728  0128B4  0009               	tblrd		*+
 42729  0128B6  50F5               	movf	tablat,w,c
 42730  0128B8  599A               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 42731  0128BA  0009               	tblrd		*+
 42732  0128BC  50F5               	movf	tablat,w,c
 42733  0128BE  599B               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 42734  0128C0  0009               	tblrd		*+
 42735  0128C2  50F5               	movf	tablat,w,c
 42736  0128C4  599C               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 42737  0128C6  A0D8               	btfss	status,0,c
 42738  0128C8  D011               	goto	i2l20544
 42739                           
 42740                           ; BSR set to: 0
 42741  0128CA  2BA3               	incf	i2__doprnt@c& (0+255),f,b
 42742                           
 42743                           ; BSR set to: 0
 42744  0128CC  0E08               	movlw	8
 42745  0128CE  19A3               	xorwf	i2__doprnt@c& (0+255),w,b
 42746  0128D0  B4D8               	btfsc	status,2,c
 42747  0128D2  D00C               	goto	i2l20544
 42748  0128D4  D7E1               	goto	i2l20532
 42749  0128D6                     i2l20542:
 42750                           
 42751                           ; BSR set to: 0
 42752  0128D6  51A1               	movf	i2__doprnt@flag& (0+255),w,b
 42753  0128D8  0BC0               	andlw	192
 42754                           
 42755                           ; Switch size 1, requested type "simple"
 42756                           ; Number of cases is 3, Range of values is 0 to 192
 42757                           ; switch strategies available:
 42758                           ; Name         Instructions Cycles
 42759                           ; simple_byte           10     6 (average)
 42760                           ;	Chosen strategy is simple_byte
 42761  0128DA  0A00               	xorlw	0	; case 0
 42762  0128DC  B4D8               	btfsc	status,2,c
 42763  0128DE  D7B9               	goto	i2l20512
 42764  0128E0  0A80               	xorlw	128	; case 128
 42765  0128E2  B4D8               	btfsc	status,2,c
 42766  0128E4  D7D7               	goto	i2l20526
 42767  0128E6  0A40               	xorlw	64	; case 192
 42768  0128E8  B4D8               	btfsc	status,2,c
 42769  0128EA  D7B3               	goto	i2l20512
 42770  0128EC                     i2l20544:
 42771                           
 42772                           ; BSR set to: 0
 42773                           ;doprnt.c: 1358: if(c < prec)
 42774  0128EC  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42775  0128EE  6F72               	movwf	??i2__doprnt& (0+255),b
 42776  0128F0  6B73               	clrf	(??i2__doprnt+1)& (0+255),b
 42777  0128F2  519F               	movf	i2__doprnt@prec& (0+255),w,b
 42778  0128F4  5D72               	subwf	??i2__doprnt& (0+255),w,b
 42779  0128F6  5173               	movf	(??i2__doprnt+1)& (0+255),w,b
 42780  0128F8  0A80               	xorlw	128
 42781  0128FA  6F74               	movwf	(??i2__doprnt+2)& (0+255),b
 42782  0128FC  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 42783  0128FE  0A80               	xorlw	128
 42784  012900  5974               	subwfb	(??i2__doprnt+2)& (0+255),w,b
 42785  012902  B0D8               	btfsc	status,0,c
 42786  012904  D003               	goto	i2l20548
 42787                           
 42788                           ; BSR set to: 0
 42789                           ;doprnt.c: 1359: c = prec;
 42790  012906  C09F  F0A3         	movff	i2__doprnt@prec,i2__doprnt@c
 42791  01290A  D010               	goto	i2l20552
 42792  01290C                     i2l20548:
 42793                           
 42794                           ; BSR set to: 0
 42795                           ;doprnt.c: 1360: else if(prec < c)
 42796  01290C  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42797  01290E  6F72               	movwf	??i2__doprnt& (0+255),b
 42798  012910  6B73               	clrf	(??i2__doprnt+1)& (0+255),b
 42799  012912  5172               	movf	??i2__doprnt& (0+255),w,b
 42800  012914  5D9F               	subwf	i2__doprnt@prec& (0+255),w,b
 42801  012916  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 42802  012918  0A80               	xorlw	128
 42803  01291A  6F74               	movwf	(??i2__doprnt+2)& (0+255),b
 42804  01291C  5173               	movf	(??i2__doprnt+1)& (0+255),w,b
 42805  01291E  0A80               	xorlw	128
 42806  012920  5974               	subwfb	(??i2__doprnt+2)& (0+255),w,b
 42807  012922  B0D8               	btfsc	status,0,c
 42808  012924  D003               	goto	i2l20552
 42809                           
 42810                           ; BSR set to: 0
 42811                           ;doprnt.c: 1361: prec = c;
 42812  012926  C0A3  F09F         	movff	i2__doprnt@c,i2__doprnt@prec
 42813  01292A  6BA0               	clrf	(i2__doprnt@prec+1)& (0+255),b
 42814  01292C                     i2l20552:
 42815                           
 42816                           ; BSR set to: 0
 42817                           ;doprnt.c: 1364: if(width && flag & 0x03)
 42818  01292C  519D               	movf	i2__doprnt@width& (0+255),w,b
 42819  01292E  119E               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 42820  012930  B4D8               	btfsc	status,2,c
 42821  012932  D00D               	goto	i2l20558
 42822                           
 42823                           ; BSR set to: 0
 42824  012934  0E03               	movlw	3
 42825  012936  15A1               	andwf	i2__doprnt@flag& (0+255),w,b
 42826  012938  6F72               	movwf	??i2__doprnt& (0+255),b
 42827  01293A  0E00               	movlw	0
 42828  01293C  15A2               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 42829  01293E  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 42830  012940  5172               	movf	??i2__doprnt& (0+255),w,b
 42831  012942  1173               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 42832  012944  B4D8               	btfsc	status,2,c
 42833  012946  D003               	goto	i2l20558
 42834                           
 42835                           ; BSR set to: 0
 42836                           ;doprnt.c: 1365: width--;
 42837  012948  079D               	decf	i2__doprnt@width& (0+255),f,b
 42838  01294A  A0D8               	btfss	status,0,c
 42839  01294C  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 42840  01294E                     i2l20558:
 42841                           
 42842                           ; BSR set to: 0
 42843                           ;doprnt.c: 1367: if(flag & 0x4000) {
 42844  01294E  ADA2               	btfss	(i2__doprnt@flag+1)& (0+255),6,b
 42845  012950  D013               	goto	i2l20566
 42846                           
 42847                           ; BSR set to: 0
 42848                           ;doprnt.c: 1368: if(width > prec)
 42849  012952  519D               	movf	i2__doprnt@width& (0+255),w,b
 42850  012954  5D9F               	subwf	i2__doprnt@prec& (0+255),w,b
 42851  012956  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 42852  012958  0A80               	xorlw	128
 42853  01295A  6F72               	movwf	??i2__doprnt& (0+255),b
 42854  01295C  519E               	movf	(i2__doprnt@width+1)& (0+255),w,b
 42855  01295E  0A80               	xorlw	128
 42856  012960  5972               	subwfb	??i2__doprnt& (0+255),w,b
 42857  012962  B0D8               	btfsc	status,0,c
 42858  012964  D005               	goto	i2l20564
 42859                           
 42860                           ; BSR set to: 0
 42861                           ;doprnt.c: 1369: width -= prec;
 42862  012966  519F               	movf	i2__doprnt@prec& (0+255),w,b
 42863  012968  5F9D               	subwf	i2__doprnt@width& (0+255),f,b
 42864  01296A  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 42865  01296C  5B9E               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 42866  01296E  D004               	goto	i2l20566
 42867  012970                     i2l20564:
 42868                           
 42869                           ; BSR set to: 0
 42870                           ;doprnt.c: 1370: else;doprnt.c: 1371: width = 0;
 42871  012970  0E00               	movlw	0
 42872  012972  6F9E               	movwf	(i2__doprnt@width+1)& (0+255),b
 42873  012974  0E00               	movlw	0
 42874  012976  6F9D               	movwf	i2__doprnt@width& (0+255),b
 42875  012978                     i2l20566:
 42876                           
 42877                           ; BSR set to: 0
 42878                           ;doprnt.c: 1372: };doprnt.c: 1400: if(width > c)
 42879  012978  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42880  01297A  6F72               	movwf	??i2__doprnt& (0+255),b
 42881  01297C  6B73               	clrf	(??i2__doprnt+1)& (0+255),b
 42882  01297E  519D               	movf	i2__doprnt@width& (0+255),w,b
 42883  012980  5D72               	subwf	??i2__doprnt& (0+255),w,b
 42884  012982  5173               	movf	(??i2__doprnt+1)& (0+255),w,b
 42885  012984  0A80               	xorlw	128
 42886  012986  6F74               	movwf	(??i2__doprnt+2)& (0+255),b
 42887  012988  519E               	movf	(i2__doprnt@width+1)& (0+255),w,b
 42888  01298A  0A80               	xorlw	128
 42889  01298C  5974               	subwfb	(??i2__doprnt+2)& (0+255),w,b
 42890  01298E  B0D8               	btfsc	status,0,c
 42891  012990  D005               	goto	i2l20570
 42892                           
 42893                           ; BSR set to: 0
 42894                           ;doprnt.c: 1401: width -= c;
 42895  012992  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42896  012994  5F9D               	subwf	i2__doprnt@width& (0+255),f,b
 42897  012996  0E00               	movlw	0
 42898  012998  5B9E               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 42899  01299A  D004               	goto	i2l20572
 42900  01299C                     i2l20570:
 42901                           
 42902                           ; BSR set to: 0
 42903                           ;doprnt.c: 1402: else;doprnt.c: 1403: width = 0;
 42904  01299C  0E00               	movlw	0
 42905  01299E  6F9E               	movwf	(i2__doprnt@width+1)& (0+255),b
 42906  0129A0  0E00               	movlw	0
 42907  0129A2  6F9D               	movwf	i2__doprnt@width& (0+255),b
 42908  0129A4                     i2l20572:
 42909                           
 42910                           ; BSR set to: 0
 42911                           ;doprnt.c: 1406: if(flag & 0x04) {
 42912  0129A4  A5A1               	btfss	i2__doprnt@flag& (0+255),2,b
 42913  0129A6  D0B5               	goto	i2l20614
 42914                           
 42915                           ; BSR set to: 0
 42916                           ;doprnt.c: 1408: if(flag & 0x02)
 42917  0129A8  A3A1               	btfss	i2__doprnt@flag& (0+255),1,b
 42918  0129AA  D041               	goto	i2l2586
 42919                           
 42920                           ; BSR set to: 0
 42921  0129AC  EE20 F002          	lfsr	2,2
 42922  0129B0  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42923  0129B2  26D9               	addwf	fsr2l,f,c
 42924  0129B4  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42925  0129B6  22DA               	addwfc	fsr2h,f,c
 42926  0129B8  50DE               	movf	postinc2,w,c
 42927  0129BA  10DE               	iorwf	postinc2,w,c
 42928  0129BC  10DE               	iorwf	postinc2,w,c
 42929  0129BE  B4D8               	btfsc	status,2,c
 42930  0129C0  D01D               	goto	i2l2588
 42931                           
 42932                           ; BSR set to: 0
 42933  0129C2  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 42934  0129C4  D004               	goto	i2l20582
 42935                           
 42936                           ; BSR set to: 0
 42937  0129C6  0E00               	movlw	0
 42938  0129C8  6F84               	movwf	(i2__doprnt$4980+1)& (0+255),b
 42939  0129CA  0E2B               	movlw	43
 42940  0129CC  D003               	goto	L41
 42941  0129CE                     i2l20582:
 42942                           
 42943                           ; BSR set to: 0
 42944  0129CE  0E00               	movlw	0
 42945  0129D0  6F84               	movwf	(i2__doprnt$4980+1)& (0+255),b
 42946  0129D2  0E2D               	movlw	45
 42947  0129D4                     L41:
 42948  0129D4  6F83               	movwf	i2__doprnt$4980& (0+255),b
 42949                           
 42950                           ; BSR set to: 0
 42951  0129D6  EE20 F002          	lfsr	2,2
 42952  0129DA  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42953  0129DC  26D9               	addwf	fsr2l,f,c
 42954  0129DE  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42955  0129E0  22DA               	addwfc	fsr2h,f,c
 42956  0129E2  D801               	call	i2u2668_48
 42957  0129E4  D059               	goto	i2l20602
 42958  0129E6                     i2u2668_48:
 42959  0129E6  0005               	push	
 42960  0129E8  6EFA               	movwf	pclath,c
 42961  0129EA  50DE               	movf	postinc2,w,c
 42962  0129EC  6EFD               	movwf	tosl,c
 42963  0129EE  50DE               	movf	postinc2,w,c
 42964  0129F0  6EFE               	movwf	tosh,c
 42965  0129F2  50DE               	movf	postinc2,w,c
 42966  0129F4  6EFF               	movwf	tosu,c
 42967  0129F6  50FA               	movf	pclath,w,c
 42968  0129F8  5183               	movf	i2__doprnt$4980& (0+255),w,b
 42969  0129FA  0012               	return		;indir
 42970  0129FC                     i2l2588:
 42971                           
 42972                           ; BSR set to: 0
 42973  0129FC  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 42974  0129FE  D004               	goto	i2l20588
 42975                           
 42976                           ; BSR set to: 0
 42977  012A00  0E00               	movlw	0
 42978  012A02  6F86               	movwf	(i2__doprnt$4981+1)& (0+255),b
 42979  012A04  0E2B               	movlw	43
 42980  012A06  D003               	goto	L42
 42981  012A08                     i2l20588:
 42982                           
 42983                           ; BSR set to: 0
 42984  012A08  0E00               	movlw	0
 42985  012A0A  6F86               	movwf	(i2__doprnt$4981+1)& (0+255),b
 42986  012A0C  0E2D               	movlw	45
 42987  012A0E                     L42:
 42988  012A0E  6F85               	movwf	i2__doprnt$4981& (0+255),b
 42989                           
 42990                           ; BSR set to: 0
 42991  012A10  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42992  012A14  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42993  012A18  CFDE F072          	movff	postinc2,??i2__doprnt
 42994  012A1C  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42995  012A20  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42996  012A24  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42997  012A28  C085  FFDF         	movff	i2__doprnt$4981,indf2
 42998  012A2C  D02E               	goto	i2l20600
 42999  012A2E                     i2l2586:
 43000                           
 43001                           ; BSR set to: 0
 43002                           ;doprnt.c: 1415: else;doprnt.c: 1418: if(flag & 0x01)
 43003  012A2E  A1A1               	btfss	i2__doprnt@flag& (0+255),0,b
 43004  012A30  D033               	goto	i2l20602
 43005                           
 43006                           ; BSR set to: 0
 43007  012A32  EE20 F002          	lfsr	2,2
 43008  012A36  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43009  012A38  26D9               	addwf	fsr2l,f,c
 43010  012A3A  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43011  012A3C  22DA               	addwfc	fsr2h,f,c
 43012  012A3E  50DE               	movf	postinc2,w,c
 43013  012A40  10DE               	iorwf	postinc2,w,c
 43014  012A42  10DE               	iorwf	postinc2,w,c
 43015  012A44  B4D8               	btfsc	status,2,c
 43016  012A46  D013               	goto	i2l20598
 43017                           
 43018                           ; BSR set to: 0
 43019  012A48  EE20 F002          	lfsr	2,2
 43020  012A4C  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43021  012A4E  26D9               	addwf	fsr2l,f,c
 43022  012A50  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43023  012A52  22DA               	addwfc	fsr2h,f,c
 43024  012A54  D801               	call	i2u2672_48
 43025  012A56  D020               	goto	i2l20602
 43026  012A58                     i2u2672_48:
 43027  012A58  0005               	push	
 43028  012A5A  6EFA               	movwf	pclath,c
 43029  012A5C  50DE               	movf	postinc2,w,c
 43030  012A5E  6EFD               	movwf	tosl,c
 43031  012A60  50DE               	movf	postinc2,w,c
 43032  012A62  6EFE               	movwf	tosh,c
 43033  012A64  50DE               	movf	postinc2,w,c
 43034  012A66  6EFF               	movwf	tosu,c
 43035  012A68  50FA               	movf	pclath,w,c
 43036  012A6A  0E20               	movlw	32
 43037  012A6C  0012               	return		;indir
 43038  012A6E                     i2l20598:
 43039                           
 43040                           ; BSR set to: 0
 43041  012A6E  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43042  012A72  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43043  012A76  CFDE F072          	movff	postinc2,??i2__doprnt
 43044  012A7A  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43045  012A7E  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43046  012A82  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43047  012A86  0E20               	movlw	32
 43048  012A88  6EDF               	movwf	indf2,c
 43049  012A8A                     i2l20600:
 43050                           
 43051                           ; BSR set to: 0
 43052  012A8A  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43053  012A8E  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43054  012A92  2ADE               	incf	postinc2,f,c
 43055  012A94  0E00               	movlw	0
 43056  012A96  22DD               	addwfc	postdec2,f,c
 43057  012A98                     i2l20602:
 43058                           
 43059                           ;doprnt.c: 1434: if(width)
 43060  012A98  0100               	movlb	0	; () banked
 43061  012A9A  519D               	movf	i2__doprnt@width& (0+255),w,b
 43062  012A9C  119E               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 43063  012A9E  B4D8               	btfsc	status,2,c
 43064  012AA0  D1A1               	goto	i2l20670
 43065                           
 43066                           ; BSR set to: 0
 43067  012AA2  EE20 F002          	lfsr	2,2
 43068  012AA6  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43069  012AA8  26D9               	addwf	fsr2l,f,c
 43070  012AAA  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43071  012AAC  22DA               	addwfc	fsr2h,f,c
 43072  012AAE  50DE               	movf	postinc2,w,c
 43073  012AB0  10DE               	iorwf	postinc2,w,c
 43074  012AB2  10DE               	iorwf	postinc2,w,c
 43075  012AB4  B4D8               	btfsc	status,2,c
 43076  012AB6  D013               	goto	i2l20608
 43077                           
 43078                           ; BSR set to: 0
 43079  012AB8  EE20 F002          	lfsr	2,2
 43080  012ABC  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43081  012ABE  26D9               	addwf	fsr2l,f,c
 43082  012AC0  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43083  012AC2  22DA               	addwfc	fsr2h,f,c
 43084  012AC4  D801               	call	i2u2675_48
 43085  012AC6  D020               	goto	i2l20612
 43086  012AC8                     i2u2675_48:
 43087  012AC8  0005               	push	
 43088  012ACA  6EFA               	movwf	pclath,c
 43089  012ACC  50DE               	movf	postinc2,w,c
 43090  012ACE  6EFD               	movwf	tosl,c
 43091  012AD0  50DE               	movf	postinc2,w,c
 43092  012AD2  6EFE               	movwf	tosh,c
 43093  012AD4  50DE               	movf	postinc2,w,c
 43094  012AD6  6EFF               	movwf	tosu,c
 43095  012AD8  50FA               	movf	pclath,w,c
 43096  012ADA  0E30               	movlw	48
 43097  012ADC  0012               	return		;indir
 43098  012ADE                     i2l20608:
 43099                           
 43100                           ; BSR set to: 0
 43101  012ADE  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43102  012AE2  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43103  012AE6  CFDE F072          	movff	postinc2,??i2__doprnt
 43104  012AEA  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43105  012AEE  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43106  012AF2  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43107  012AF6  0E30               	movlw	48
 43108  012AF8  6EDF               	movwf	indf2,c
 43109                           
 43110                           ; BSR set to: 0
 43111  012AFA  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43112  012AFE  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43113  012B02  2ADE               	incf	postinc2,f,c
 43114  012B04  0E00               	movlw	0
 43115  012B06  22DD               	addwfc	postdec2,f,c
 43116  012B08                     i2l20612:
 43117                           
 43118                           ;doprnt.c: 1437: while(--width);
 43119  012B08  0100               	movlb	0	; () banked
 43120  012B0A  079D               	decf	i2__doprnt@width& (0+255),f,b
 43121  012B0C  A0D8               	btfss	status,0,c
 43122  012B0E  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 43123  012B10  D7C4               	goto	L59
 43124  012B12                     i2l20614:
 43125                           
 43126                           ; BSR set to: 0
 43127                           ;doprnt.c: 1441: {;doprnt.c: 1443: if(width;doprnt.c: 1447: )
 43128  012B12  519D               	movf	i2__doprnt@width& (0+255),w,b
 43129  012B14  119E               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 43130  012B16  B4D8               	btfsc	status,2,c
 43131  012B18  D03B               	goto	i2u2680_40
 43132  012B1A                     i2u2677_40:
 43133                           
 43134                           ; BSR set to: 0
 43135  012B1A  EE20 F002          	lfsr	2,2
 43136  012B1E  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43137  012B20  26D9               	addwf	fsr2l,f,c
 43138  012B22  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43139  012B24  22DA               	addwfc	fsr2h,f,c
 43140  012B26  50DE               	movf	postinc2,w,c
 43141  012B28  10DE               	iorwf	postinc2,w,c
 43142  012B2A  10DE               	iorwf	postinc2,w,c
 43143  012B2C  B4D8               	btfsc	status,2,c
 43144  012B2E  D013               	goto	i2l20620
 43145                           
 43146                           ; BSR set to: 0
 43147  012B30  EE20 F002          	lfsr	2,2
 43148  012B34  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43149  012B36  26D9               	addwf	fsr2l,f,c
 43150  012B38  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43151  012B3A  22DA               	addwfc	fsr2h,f,c
 43152  012B3C  D801               	call	i2u2679_48
 43153  012B3E  D020               	goto	i2l20624
 43154  012B40                     i2u2679_48:
 43155  012B40  0005               	push	
 43156  012B42  6EFA               	movwf	pclath,c
 43157  012B44  50DE               	movf	postinc2,w,c
 43158  012B46  6EFD               	movwf	tosl,c
 43159  012B48  50DE               	movf	postinc2,w,c
 43160  012B4A  6EFE               	movwf	tosh,c
 43161  012B4C  50DE               	movf	postinc2,w,c
 43162  012B4E  6EFF               	movwf	tosu,c
 43163  012B50  50FA               	movf	pclath,w,c
 43164  012B52  0E20               	movlw	32
 43165  012B54  0012               	return		;indir
 43166  012B56                     i2l20620:
 43167                           
 43168                           ; BSR set to: 0
 43169  012B56  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43170  012B5A  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43171  012B5E  CFDE F072          	movff	postinc2,??i2__doprnt
 43172  012B62  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43173  012B66  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43174  012B6A  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43175  012B6E  0E20               	movlw	32
 43176  012B70  6EDF               	movwf	indf2,c
 43177                           
 43178                           ; BSR set to: 0
 43179  012B72  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43180  012B76  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43181  012B7A  2ADE               	incf	postinc2,f,c
 43182  012B7C  0E00               	movlw	0
 43183  012B7E  22DD               	addwfc	postdec2,f,c
 43184  012B80                     i2l20624:
 43185                           
 43186                           ;doprnt.c: 1450: while(--width);
 43187  012B80  0100               	movlb	0	; () banked
 43188  012B82  079D               	decf	i2__doprnt@width& (0+255),f,b
 43189  012B84  A0D8               	btfss	status,0,c
 43190  012B86  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 43191  012B88  519D               	movf	i2__doprnt@width& (0+255),w,b
 43192  012B8A  119E               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 43193  012B8C  A4D8               	btfss	status,2,c
 43194  012B8E  D7C5               	goto	i2u2677_40
 43195  012B90                     i2u2680_40:
 43196                           
 43197                           ; BSR set to: 0
 43198                           ;doprnt.c: 1453: if(flag & 0x02)
 43199  012B90  A3A1               	btfss	i2__doprnt@flag& (0+255),1,b
 43200  012B92  D041               	goto	i2l2620
 43201                           
 43202                           ; BSR set to: 0
 43203  012B94  EE20 F002          	lfsr	2,2
 43204  012B98  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43205  012B9A  26D9               	addwf	fsr2l,f,c
 43206  012B9C  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43207  012B9E  22DA               	addwfc	fsr2h,f,c
 43208  012BA0  50DE               	movf	postinc2,w,c
 43209  012BA2  10DE               	iorwf	postinc2,w,c
 43210  012BA4  10DE               	iorwf	postinc2,w,c
 43211  012BA6  B4D8               	btfsc	status,2,c
 43212  012BA8  D01D               	goto	i2l2622
 43213                           
 43214                           ; BSR set to: 0
 43215  012BAA  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 43216  012BAC  D004               	goto	i2l20632
 43217                           
 43218                           ; BSR set to: 0
 43219  012BAE  0E00               	movlw	0
 43220  012BB0  6F88               	movwf	(i2__doprnt$4982+1)& (0+255),b
 43221  012BB2  0E2B               	movlw	43
 43222  012BB4  D003               	goto	L43
 43223  012BB6                     i2l20632:
 43224                           
 43225                           ; BSR set to: 0
 43226  012BB6  0E00               	movlw	0
 43227  012BB8  6F88               	movwf	(i2__doprnt$4982+1)& (0+255),b
 43228  012BBA  0E2D               	movlw	45
 43229  012BBC                     L43:
 43230  012BBC  6F87               	movwf	i2__doprnt$4982& (0+255),b
 43231                           
 43232                           ; BSR set to: 0
 43233  012BBE  EE20 F002          	lfsr	2,2
 43234  012BC2  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43235  012BC4  26D9               	addwf	fsr2l,f,c
 43236  012BC6  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43237  012BC8  22DA               	addwfc	fsr2h,f,c
 43238  012BCA  D801               	call	i2u2684_48
 43239  012BCC  D10B               	goto	i2l20670
 43240  012BCE                     i2u2684_48:
 43241  012BCE  0005               	push	
 43242  012BD0  6EFA               	movwf	pclath,c
 43243  012BD2  50DE               	movf	postinc2,w,c
 43244  012BD4  6EFD               	movwf	tosl,c
 43245  012BD6  50DE               	movf	postinc2,w,c
 43246  012BD8  6EFE               	movwf	tosh,c
 43247  012BDA  50DE               	movf	postinc2,w,c
 43248  012BDC  6EFF               	movwf	tosu,c
 43249  012BDE  50FA               	movf	pclath,w,c
 43250  012BE0  5187               	movf	i2__doprnt$4982& (0+255),w,b
 43251  012BE2  0012               	return		;indir
 43252  012BE4                     i2l2622:
 43253                           
 43254                           ; BSR set to: 0
 43255  012BE4  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 43256  012BE6  D004               	goto	i2l20638
 43257                           
 43258                           ; BSR set to: 0
 43259  012BE8  0E00               	movlw	0
 43260  012BEA  6F8A               	movwf	(i2__doprnt$4983+1)& (0+255),b
 43261  012BEC  0E2B               	movlw	43
 43262  012BEE  D003               	goto	L44
 43263  012BF0                     i2l20638:
 43264                           
 43265                           ; BSR set to: 0
 43266  012BF0  0E00               	movlw	0
 43267  012BF2  6F8A               	movwf	(i2__doprnt$4983+1)& (0+255),b
 43268  012BF4  0E2D               	movlw	45
 43269  012BF6                     L44:
 43270  012BF6  6F89               	movwf	i2__doprnt$4983& (0+255),b
 43271                           
 43272                           ; BSR set to: 0
 43273  012BF8  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43274  012BFC  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43275  012C00  CFDE F072          	movff	postinc2,??i2__doprnt
 43276  012C04  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43277  012C08  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43278  012C0C  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43279  012C10  C089  FFDF         	movff	i2__doprnt$4983,indf2
 43280  012C14  D0E0               	goto	i2l20668
 43281  012C16                     i2l2620:
 43282                           
 43283                           ; BSR set to: 0
 43284                           ;doprnt.c: 1462: else if(flag & 0x01)
 43285  012C16  A1A1               	btfss	i2__doprnt@flag& (0+255),0,b
 43286  012C18  D0E5               	goto	i2l20670
 43287                           
 43288                           ; BSR set to: 0
 43289  012C1A  EE20 F002          	lfsr	2,2
 43290  012C1E  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43291  012C20  26D9               	addwf	fsr2l,f,c
 43292  012C22  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43293  012C24  22DA               	addwfc	fsr2h,f,c
 43294  012C26  50DE               	movf	postinc2,w,c
 43295  012C28  10DE               	iorwf	postinc2,w,c
 43296  012C2A  10DE               	iorwf	postinc2,w,c
 43297  012C2C  B4D8               	btfsc	status,2,c
 43298  012C2E  D013               	goto	i2l20648
 43299                           
 43300                           ; BSR set to: 0
 43301  012C30  EE20 F002          	lfsr	2,2
 43302  012C34  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43303  012C36  26D9               	addwf	fsr2l,f,c
 43304  012C38  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43305  012C3A  22DA               	addwfc	fsr2h,f,c
 43306  012C3C  D801               	call	i2u2688_48
 43307  012C3E  D0D2               	goto	i2l20670
 43308  012C40                     i2u2688_48:
 43309  012C40  0005               	push	
 43310  012C42  6EFA               	movwf	pclath,c
 43311  012C44  50DE               	movf	postinc2,w,c
 43312  012C46  6EFD               	movwf	tosl,c
 43313  012C48  50DE               	movf	postinc2,w,c
 43314  012C4A  6EFE               	movwf	tosh,c
 43315  012C4C  50DE               	movf	postinc2,w,c
 43316  012C4E  6EFF               	movwf	tosu,c
 43317  012C50  50FA               	movf	pclath,w,c
 43318  012C52  0E20               	movlw	32
 43319  012C54  0012               	return		;indir
 43320  012C56                     i2l20648:
 43321                           
 43322                           ; BSR set to: 0
 43323  012C56  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43324  012C5A  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43325  012C5E  CFDE F072          	movff	postinc2,??i2__doprnt
 43326  012C62  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43327  012C66  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43328  012C6A  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43329  012C6E  0E20               	movlw	32
 43330  012C70  6EDF               	movwf	indf2,c
 43331  012C72  D0B1               	goto	i2l20668
 43332  012C74                     i2l20652:
 43333                           
 43334                           ; BSR set to: 0
 43335                           ;doprnt.c: 1505: case 0xC0:;doprnt.c: 1508: c = (val / dpowers[prec]) % 10 + '0';
 43336  012C74  C09F  F072         	movff	i2__doprnt@prec,??i2__doprnt
 43337  012C78  C0A0  F073         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 43338  012C7C  90D8               	bcf	status,0,c
 43339  012C7E  3772               	rlcf	??i2__doprnt& (0+255),f,b
 43340  012C80  3773               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 43341  012C82  90D8               	bcf	status,0,c
 43342  012C84  3772               	rlcf	??i2__doprnt& (0+255),f,b
 43343  012C86  3773               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 43344  012C88  0E4B               	movlw	low _dpowers
 43345  012C8A  2572               	addwf	??i2__doprnt& (0+255),w,b
 43346  012C8C  6EF6               	movwf	tblptrl,c
 43347  012C8E  0EE9               	movlw	high _dpowers
 43348  012C90  2173               	addwfc	(??i2__doprnt+1)& (0+255),w,b
 43349  012C92  6EF7               	movwf	tblptrh,c
 43350  012C94                     	if	1	;There are 3 active tblptr bytes
 43351  012C94  6AF8               	clrf	tblptru,c
 43352  012C96  0E00               	movlw	low (__mediumconst shr (0+16))
 43353  012C98  22F8               	addwfc	tblptru,f,c
 43354  012C9A                     	endif
 43355  012C9A  0009               	tblrd		*+
 43356  012C9C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 43357  012CA0  0009               	tblrd		*+
 43358  012CA2  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 43359  012CA6  0009               	tblrd		*+
 43360  012CA8  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 43361  012CAC  000A               	tblrd		*-
 43362  012CAE  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 43363  012CB2  C099  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 43364  012CB6  C09A  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 43365  012CBA  C09B  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 43366  012CBE  C09C  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 43367  012CC2  ECED  F0D9         	call	i2___lldiv
 43368  012CC6  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 43369  012CCA  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 43370  012CCE  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 43371  012CD2  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 43372  012CD6  0E0A               	movlw	10
 43373  012CD8  6E12               	movwf	i2___llmod@divisor,c
 43374  012CDA  0E00               	movlw	0
 43375  012CDC  6E13               	movwf	i2___llmod@divisor+1,c
 43376  012CDE  0E00               	movlw	0
 43377  012CE0  6E14               	movwf	i2___llmod@divisor+2,c
 43378  012CE2  0E00               	movlw	0
 43379  012CE4  6E15               	movwf	i2___llmod@divisor+3,c
 43380  012CE6  EC6C  F0DB         	call	i2___llmod	;wreg free
 43381  012CEA  500E               	movf	?i2___llmod,w,c
 43382  012CEC  0F30               	addlw	48
 43383  012CEE  0100               	movlb	0	; () banked
 43384  012CF0  6FA3               	movwf	i2__doprnt@c& (0+255),b
 43385                           
 43386                           ;doprnt.c: 1510: break;
 43387  012CF2  D045               	goto	i2l20662
 43388  012CF4                     i2l20654:
 43389                           
 43390                           ; BSR set to: 0
 43391                           ;doprnt.c: 1518: {;doprnt.c: 1519: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 43392  012CF4  C099  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 43393  012CF8  C09A  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 43394  012CFC  C09B  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 43395  012D00  C09C  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 43396  012D04  C09F  F072         	movff	i2__doprnt@prec,??i2__doprnt
 43397  012D08  C0A0  F073         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 43398  012D0C  90D8               	bcf	status,0,c
 43399  012D0E  3772               	rlcf	??i2__doprnt& (0+255),f,b
 43400  012D10  3773               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 43401  012D12  90D8               	bcf	status,0,c
 43402  012D14  3772               	rlcf	??i2__doprnt& (0+255),f,b
 43403  012D16  3773               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 43404  012D18  0E2B               	movlw	low _hexpowers
 43405  012D1A  2572               	addwf	??i2__doprnt& (0+255),w,b
 43406  012D1C  6EF6               	movwf	tblptrl,c
 43407  012D1E  0EE6               	movlw	high _hexpowers
 43408  012D20  2173               	addwfc	(??i2__doprnt+1)& (0+255),w,b
 43409  012D22  6EF7               	movwf	tblptrh,c
 43410  012D24                     	if	1	;There are 3 active tblptr bytes
 43411  012D24  6AF8               	clrf	tblptru,c
 43412  012D26  0E00               	movlw	low (__mediumconst shr (0+16))
 43413  012D28  22F8               	addwfc	tblptru,f,c
 43414  012D2A                     	endif
 43415  012D2A  0009               	tblrd		*+
 43416  012D2C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 43417  012D30  0009               	tblrd		*+
 43418  012D32  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 43419  012D36  0009               	tblrd		*+
 43420  012D38  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 43421  012D3C  000A               	tblrd		*-
 43422  012D3E  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 43423  012D42  ECED  F0D9         	call	i2___lldiv	;wreg free
 43424  012D46  5001               	movf	?i2___lldiv,w,c
 43425  012D48  0B0F               	andlw	15
 43426  012D4A  0100               	movlb	0	; () banked
 43427  012D4C  6F7A               	movwf	i2__doprnt@idx& (0+255),b
 43428                           
 43429                           ; BSR set to: 0
 43430                           ;doprnt.c: 1523: c = "0123456789ABCDEF"[idx];
 43431  012D4E  0E1E               	movlw	low STR_359
 43432  012D50  257A               	addwf	i2__doprnt@idx& (0+255),w,b
 43433  012D52  6EF6               	movwf	tblptrl,c
 43434  012D54  6AF7               	clrf	tblptrh,c
 43435  012D56  0EFB               	movlw	high STR_359
 43436  012D58  22F7               	addwfc	tblptrh,f,c
 43437  012D5A                     	if	1	;There are 3 active tblptr bytes
 43438  012D5A  6AF8               	clrf	tblptru,c
 43439  012D5C  0E00               	movlw	low (__mediumconst shr (0+16))
 43440  012D5E  22F8               	addwfc	tblptru,f,c
 43441  012D60                     	endif
 43442  012D60  0008               	tblrd		*
 43443  012D62  CFF5 F0A3          	movff	tablat,i2__doprnt@c
 43444                           
 43445                           ;doprnt.c: 1527: };doprnt.c: 1529: break;
 43446  012D66  D00B               	goto	i2l20662
 43447  012D68                     i2l20660:
 43448                           
 43449                           ; BSR set to: 0
 43450  012D68  51A1               	movf	i2__doprnt@flag& (0+255),w,b
 43451  012D6A  0BC0               	andlw	192
 43452                           
 43453                           ; Switch size 1, requested type "simple"
 43454                           ; Number of cases is 3, Range of values is 0 to 192
 43455                           ; switch strategies available:
 43456                           ; Name         Instructions Cycles
 43457                           ; simple_byte           10     6 (average)
 43458                           ;	Chosen strategy is simple_byte
 43459  012D6C  0A00               	xorlw	0	; case 0
 43460  012D6E  B4D8               	btfsc	status,2,c
 43461  012D70  D781               	goto	i2l20652
 43462  012D72  0A80               	xorlw	128	; case 128
 43463  012D74  B4D8               	btfsc	status,2,c
 43464  012D76  D7BE               	goto	i2l20654
 43465  012D78  0A40               	xorlw	64	; case 192
 43466  012D7A  B4D8               	btfsc	status,2,c
 43467  012D7C  D77B               	goto	i2l20652
 43468  012D7E                     i2l20662:
 43469                           
 43470                           ; BSR set to: 0
 43471  012D7E  EE20 F002          	lfsr	2,2
 43472  012D82  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43473  012D84  26D9               	addwf	fsr2l,f,c
 43474  012D86  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43475  012D88  22DA               	addwfc	fsr2h,f,c
 43476  012D8A  50DE               	movf	postinc2,w,c
 43477  012D8C  10DE               	iorwf	postinc2,w,c
 43478  012D8E  10DE               	iorwf	postinc2,w,c
 43479  012D90  B4D8               	btfsc	status,2,c
 43480  012D92  D013               	goto	i2l20666
 43481                           
 43482                           ; BSR set to: 0
 43483  012D94  EE20 F002          	lfsr	2,2
 43484  012D98  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43485  012D9A  26D9               	addwf	fsr2l,f,c
 43486  012D9C  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43487  012D9E  22DA               	addwfc	fsr2h,f,c
 43488  012DA0  D801               	call	i2u2690_48
 43489  012DA2  D020               	goto	i2l20670
 43490  012DA4                     i2u2690_48:
 43491  012DA4  0005               	push	
 43492  012DA6  6EFA               	movwf	pclath,c
 43493  012DA8  50DE               	movf	postinc2,w,c
 43494  012DAA  6EFD               	movwf	tosl,c
 43495  012DAC  50DE               	movf	postinc2,w,c
 43496  012DAE  6EFE               	movwf	tosh,c
 43497  012DB0  50DE               	movf	postinc2,w,c
 43498  012DB2  6EFF               	movwf	tosu,c
 43499  012DB4  50FA               	movf	pclath,w,c
 43500  012DB6  51A3               	movf	i2__doprnt@c& (0+255),w,b
 43501  012DB8  0012               	return		;indir
 43502  012DBA                     i2l20666:
 43503                           
 43504                           ; BSR set to: 0
 43505  012DBA  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43506  012DBE  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43507  012DC2  CFDE F072          	movff	postinc2,??i2__doprnt
 43508  012DC6  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43509  012DCA  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43510  012DCE  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43511  012DD2  C0A3  FFDF         	movff	i2__doprnt@c,indf2
 43512  012DD6                     i2l20668:
 43513                           
 43514                           ; BSR set to: 0
 43515  012DD6  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43516  012DDA  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43517  012DDE  2ADE               	incf	postinc2,f,c
 43518  012DE0  0E00               	movlw	0
 43519  012DE2  22DD               	addwfc	postdec2,f,c
 43520  012DE4                     i2l20670:
 43521  012DE4  0100               	movlb	0	; () banked
 43522  012DE6  079F               	decf	i2__doprnt@prec& (0+255),f,b
 43523  012DE8  A0D8               	btfss	status,0,c
 43524  012DEA  07A0               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 43525  012DEC  299F               	incf	i2__doprnt@prec& (0+255),w,b
 43526  012DEE  E1BC               	bnz	i2l20660
 43527  012DF0  29A0               	incf	(i2__doprnt@prec+1)& (0+255),w,b
 43528  012DF2  A4D8               	btfss	status,2,c
 43529  012DF4  D7B9               	goto	i2l20660
 43530  012DF6                     i2u2691_40:
 43531  012DF6  0100               	movlb	0	; () banked
 43532  012DF8  516E               	movf	i2__doprnt@f& (0+255),w,b
 43533  012DFA  6F72               	movwf	??i2__doprnt& (0+255),b
 43534  012DFC  516F               	movf	(i2__doprnt@f+1)& (0+255),w,b
 43535  012DFE  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 43536  012E00  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 43537  012E02  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 43538  012E04  C072  FFF6         	movff	??i2__doprnt,tblptrl
 43539  012E08  C073  FFF7         	movff	??i2__doprnt+1,tblptrh
 43540  012E0C  0E00               	movlw	low (__mediumconst shr (0+16))
 43541  012E0E  6EF8               	movwf	tblptru,c
 43542  012E10  0E0E               	movlw	(high __ramtop+-1)
 43543  012E12  64F7               	cpfsgt	tblptrh,c
 43544  012E14  D003               	bra	i2u2692_47
 43545  012E16  0008               	tblrd		*
 43546  012E18  50F5               	movf	tablat,w,c
 43547  012E1A  D005               	bra	i2u2692_40
 43548  012E1C                     i2u2692_47:
 43549  012E1C  CFF6 FFE9          	movff	tblptrl,fsr0l
 43550  012E20  CFF7 FFEA          	movff	tblptrh,fsr0h
 43551  012E24  50EF               	movf	indf0,w,c
 43552  012E26                     i2u2692_40:
 43553  012E26  0100               	movlb	0	; () banked
 43554  012E28  6FA3               	movwf	i2__doprnt@c& (0+255),b
 43555  012E2A  51A3               	movf	i2__doprnt@c& (0+255),w,b
 43556  012E2C  A4D8               	btfss	status,2,c
 43557  012E2E  EF94  F08B         	goto	i2l20126
 43558  012E32                     i2u2693_40:
 43559                           
 43560                           ; BSR set to: 0
 43561                           ;doprnt.c: 1559: return 0;
 43562  012E32  0E00               	movlw	0
 43563  012E34  6F6D               	movwf	(?i2__doprnt+1)& (0+255),b
 43564  012E36  0E00               	movlw	0
 43565  012E38  6F6C               	movwf	?i2__doprnt& (0+255),b
 43566                           
 43567                           ; BSR set to: 0
 43568  012E3A  0012               	return		;funcret
 43569  012E3C                     __end_ofi2__doprnt:
 43570                           	opt callstack 0
 43571                           
 43572 ;; *************** function i2_scale *****************
 43573 ;; Defined at:
 43574 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 43575 ;; Parameters:    Size  Location     Type
 43576 ;;  scl             1    wreg     char 
 43577 ;; Auto vars:     Size  Location     Type
 43578 ;;  scl             1   76[COMRAM] char 
 43579 ;; Return value:  Size  Location     Type
 43580 ;;                  4   68[COMRAM] char 
 43581 ;; Registers used:
 43582 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43583 ;; Tracked objects:
 43584 ;;		On entry : 0/0
 43585 ;;		On exit  : 0/0
 43586 ;;		Unchanged: 0/0
 43587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43588 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43589 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43591 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43592 ;;Total ram usage:        9 bytes
 43593 ;; Hardware stack levels used:    1
 43594 ;; Hardware stack levels required when called:    1
 43595 ;; This function calls:
 43596 ;;		i2___awdiv
 43597 ;;		i2___awmod
 43598 ;;		i2___flmul
 43599 ;; This function is called by:
 43600 ;;		i2__doprnt
 43601 ;; This function uses a non-reentrant model
 43602 ;;
 43603                           
 43604                           	psect	text181
 43605  015ED4                     __ptext181:
 43606                           	opt callstack 0
 43607  015ED4                     i2_scale:
 43608                           	opt callstack 12
 43609                           
 43610                           ; BSR set to: 0
 43611                           ;incstack = 0
 43612                           ;i2scale@scl stored from wreg
 43613  015ED4  6E4D               	movwf	i2scale@scl,c
 43614                           
 43615                           ;doprnt.c: 436: if(scl < 0) {
 43616  015ED6  AE4D               	btfss	i2scale@scl,7,c
 43617  015ED8  D105               	goto	i2l19538
 43618                           
 43619                           ;doprnt.c: 437: scl = -scl;
 43620  015EDA  6C4D               	negf	i2scale@scl,c
 43621                           
 43622                           ;doprnt.c: 438: if(scl>=110)
 43623  015EDC  504D               	movf	i2scale@scl,w,c
 43624  015EDE  0A80               	xorlw	128
 43625  015EE0  0F12               	addlw	-238
 43626  015EE2  A0D8               	btfss	status,0,c
 43627  015EE4  D091               	goto	i2l19528
 43628                           
 43629                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 43630  015EE6  0E00               	movlw	0
 43631  015EE8  6E0A               	movwf	i2___awdiv@divisor+1,c
 43632  015EEA  0E0A               	movlw	10
 43633  015EEC  6E09               	movwf	i2___awdiv@divisor,c
 43634  015EEE  0E00               	movlw	0
 43635  015EF0  6E04               	movwf	i2___awmod@divisor+1,c
 43636  015EF2  0E64               	movlw	100
 43637  015EF4  6E03               	movwf	i2___awmod@divisor,c
 43638  015EF6  504D               	movf	i2scale@scl,w,c
 43639  015EF8  6E01               	movwf	i2___awmod@dividend,c
 43640  015EFA  6A02               	clrf	i2___awmod@dividend+1,c
 43641  015EFC  BE01               	btfsc	i2___awmod@dividend,7,c
 43642  015EFE  0602               	decf	i2___awmod@dividend+1,f,c
 43643  015F00  EC67  F0DA         	call	i2___awmod
 43644  015F04  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 43645  015F08  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 43646  015F0C  ECAB  F0D9         	call	i2___awdiv	;wreg free
 43647  015F10  0E09               	movlw	9
 43648  015F12  2607               	addwf	?i2___awdiv,f,c
 43649  015F14  5007               	movf	?i2___awdiv,w,c
 43650  015F16  0D04               	mullw	4
 43651  015F18  0EF7               	movlw	low __npowers_
 43652  015F1A  24F3               	addwf	prodl,w,c
 43653  015F1C  6EF6               	movwf	tblptrl,c
 43654  015F1E  0EE5               	movlw	high __npowers_
 43655  015F20  20F4               	addwfc	prodh,w,c
 43656  015F22  6EF7               	movwf	tblptrh,c
 43657  015F24                     	if	1	;There are 3 active tblptr bytes
 43658  015F24  6AF8               	clrf	tblptru,c
 43659  015F26  0E00               	movlw	low (__mediumconst shr (0+16))
 43660  015F28  22F8               	addwfc	tblptru,f,c
 43661  015F2A                     	endif
 43662  015F2A  0009               	tblrd		*+
 43663  015F2C  CFF5 F030          	movff	tablat,i2___flmul@a
 43664  015F30  0009               	tblrd		*+
 43665  015F32  CFF5 F031          	movff	tablat,i2___flmul@a+1
 43666  015F36  0009               	tblrd		*+
 43667  015F38  CFF5 F032          	movff	tablat,i2___flmul@a+2
 43668  015F3C  000A               	tblrd		*-
 43669  015F3E  CFF5 F033          	movff	tablat,i2___flmul@a+3
 43670  015F42  0E00               	movlw	0
 43671  015F44  6E0A               	movwf	i2___awdiv@divisor+1,c
 43672  015F46  0E64               	movlw	100
 43673  015F48  6E09               	movwf	i2___awdiv@divisor,c
 43674  015F4A  504D               	movf	i2scale@scl,w,c
 43675  015F4C  6E07               	movwf	i2___awdiv@dividend,c
 43676  015F4E  6A08               	clrf	i2___awdiv@dividend+1,c
 43677  015F50  BE07               	btfsc	i2___awdiv@dividend,7,c
 43678  015F52  0608               	decf	i2___awdiv@dividend+1,f,c
 43679  015F54  ECAB  F0D9         	call	i2___awdiv	;wreg free
 43680  015F58  0E12               	movlw	18
 43681  015F5A  2607               	addwf	?i2___awdiv,f,c
 43682  015F5C  5007               	movf	?i2___awdiv,w,c
 43683  015F5E  0D04               	mullw	4
 43684  015F60  0EF7               	movlw	low __npowers_
 43685  015F62  24F3               	addwf	prodl,w,c
 43686  015F64  6EF6               	movwf	tblptrl,c
 43687  015F66  0EE5               	movlw	high __npowers_
 43688  015F68  20F4               	addwfc	prodh,w,c
 43689  015F6A  6EF7               	movwf	tblptrh,c
 43690  015F6C                     	if	1	;There are 3 active tblptr bytes
 43691  015F6C  6AF8               	clrf	tblptru,c
 43692  015F6E  0E00               	movlw	low (__mediumconst shr (0+16))
 43693  015F70  22F8               	addwfc	tblptru,f,c
 43694  015F72                     	endif
 43695  015F72  0009               	tblrd		*+
 43696  015F74  CFF5 F02C          	movff	tablat,i2___flmul@b
 43697  015F78  0009               	tblrd		*+
 43698  015F7A  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 43699  015F7E  0009               	tblrd		*+
 43700  015F80  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 43701  015F84  000A               	tblrd		*-
 43702  015F86  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 43703  015F8A  EC50  F0B8         	call	i2___flmul	;wreg free
 43704  015F8E  C02C  F049         	movff	?i2___flmul,i2_scale$6414
 43705  015F92  C02D  F04A         	movff	?i2___flmul+1,i2_scale$6414+1
 43706  015F96  C02E  F04B         	movff	?i2___flmul+2,i2_scale$6414+2
 43707  015F9A  C02F  F04C         	movff	?i2___flmul+3,i2_scale$6414+3
 43708                           
 43709                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 43710  015F9E  C049  F02C         	movff	i2_scale$6414,i2___flmul@b
 43711  015FA2  C04A  F02D         	movff	i2_scale$6414+1,i2___flmul@b+1
 43712  015FA6  C04B  F02E         	movff	i2_scale$6414+2,i2___flmul@b+2
 43713  015FAA  C04C  F02F         	movff	i2_scale$6414+3,i2___flmul@b+3
 43714  015FAE  0E00               	movlw	0
 43715  015FB0  6E04               	movwf	i2___awmod@divisor+1,c
 43716  015FB2  0E0A               	movlw	10
 43717  015FB4  6E03               	movwf	i2___awmod@divisor,c
 43718  015FB6  504D               	movf	i2scale@scl,w,c
 43719  015FB8  6E01               	movwf	i2___awmod@dividend,c
 43720  015FBA  6A02               	clrf	i2___awmod@dividend+1,c
 43721  015FBC  BE01               	btfsc	i2___awmod@dividend,7,c
 43722  015FBE  0602               	decf	i2___awmod@dividend+1,f,c
 43723  015FC0  EC67  F0DA         	call	i2___awmod	;wreg free
 43724  015FC4  5001               	movf	?i2___awmod,w,c
 43725  015FC6  0D04               	mullw	4
 43726  015FC8  0EF7               	movlw	low __npowers_
 43727  015FCA  24F3               	addwf	prodl,w,c
 43728  015FCC  6EF6               	movwf	tblptrl,c
 43729  015FCE  0EE5               	movlw	high __npowers_
 43730  015FD0  20F4               	addwfc	prodh,w,c
 43731  015FD2  6EF7               	movwf	tblptrh,c
 43732  015FD4                     	if	1	;There are 3 active tblptr bytes
 43733  015FD4  6AF8               	clrf	tblptru,c
 43734  015FD6  0E00               	movlw	low (__mediumconst shr (0+16))
 43735  015FD8  22F8               	addwfc	tblptru,f,c
 43736  015FDA                     	endif
 43737  015FDA  0009               	tblrd		*+
 43738  015FDC  CFF5 F030          	movff	tablat,i2___flmul@a
 43739  015FE0  0009               	tblrd		*+
 43740  015FE2  CFF5 F031          	movff	tablat,i2___flmul@a+1
 43741  015FE6  0009               	tblrd		*+
 43742  015FE8  CFF5 F032          	movff	tablat,i2___flmul@a+2
 43743  015FEC  000A               	tblrd		*-
 43744  015FEE  CFF5 F033          	movff	tablat,i2___flmul@a+3
 43745  015FF2  EC50  F0B8         	call	i2___flmul	;wreg free
 43746  015FF6  C02C  F045         	movff	?i2___flmul,?i2_scale
 43747  015FFA  C02D  F046         	movff	?i2___flmul+1,?i2_scale+1
 43748  015FFE  C02E  F047         	movff	?i2___flmul+2,?i2_scale+2
 43749  016002  C02F  F048         	movff	?i2___flmul+3,?i2_scale+3
 43750  016006  0012               	return	
 43751  016008                     i2l19528:
 43752                           
 43753                           ;doprnt.c: 440: else if(scl > 10)
 43754  016008  504D               	movf	i2scale@scl,w,c
 43755  01600A  0A80               	xorlw	128
 43756  01600C  0F75               	addlw	-139
 43757  01600E  A0D8               	btfss	status,0,c
 43758  016010  D051               	goto	i2l19534
 43759                           
 43760                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
 43761  016012  0E00               	movlw	0
 43762  016014  6E0A               	movwf	i2___awdiv@divisor+1,c
 43763  016016  0E0A               	movlw	10
 43764  016018  6E09               	movwf	i2___awdiv@divisor,c
 43765  01601A  504D               	movf	i2scale@scl,w,c
 43766  01601C  6E07               	movwf	i2___awdiv@dividend,c
 43767  01601E  6A08               	clrf	i2___awdiv@dividend+1,c
 43768  016020  BE07               	btfsc	i2___awdiv@dividend,7,c
 43769  016022  0608               	decf	i2___awdiv@dividend+1,f,c
 43770  016024  ECAB  F0D9         	call	i2___awdiv	;wreg free
 43771  016028  0E09               	movlw	9
 43772  01602A  2607               	addwf	?i2___awdiv,f,c
 43773  01602C  5007               	movf	?i2___awdiv,w,c
 43774  01602E  0D04               	mullw	4
 43775  016030  0EF7               	movlw	low __npowers_
 43776  016032  24F3               	addwf	prodl,w,c
 43777  016034  6EF6               	movwf	tblptrl,c
 43778  016036  0EE5               	movlw	high __npowers_
 43779  016038  20F4               	addwfc	prodh,w,c
 43780  01603A  6EF7               	movwf	tblptrh,c
 43781  01603C                     	if	1	;There are 3 active tblptr bytes
 43782  01603C  6AF8               	clrf	tblptru,c
 43783  01603E  0E00               	movlw	low (__mediumconst shr (0+16))
 43784  016040  22F8               	addwfc	tblptru,f,c
 43785  016042                     	endif
 43786  016042  0009               	tblrd		*+
 43787  016044  CFF5 F02C          	movff	tablat,i2___flmul@b
 43788  016048  0009               	tblrd		*+
 43789  01604A  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 43790  01604E  0009               	tblrd		*+
 43791  016050  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 43792  016054  000A               	tblrd		*-
 43793  016056  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 43794  01605A  0E00               	movlw	0
 43795  01605C  6E04               	movwf	i2___awmod@divisor+1,c
 43796  01605E  0E0A               	movlw	10
 43797  016060  6E03               	movwf	i2___awmod@divisor,c
 43798  016062  504D               	movf	i2scale@scl,w,c
 43799  016064  6E01               	movwf	i2___awmod@dividend,c
 43800  016066  6A02               	clrf	i2___awmod@dividend+1,c
 43801  016068  BE01               	btfsc	i2___awmod@dividend,7,c
 43802  01606A  0602               	decf	i2___awmod@dividend+1,f,c
 43803  01606C  EC67  F0DA         	call	i2___awmod	;wreg free
 43804  016070  5001               	movf	?i2___awmod,w,c
 43805  016072  0D04               	mullw	4
 43806  016074  0EF7               	movlw	low __npowers_
 43807  016076  24F3               	addwf	prodl,w,c
 43808  016078  6EF6               	movwf	tblptrl,c
 43809  01607A  0EE5               	movlw	high __npowers_
 43810  01607C  20F4               	addwfc	prodh,w,c
 43811  01607E  6EF7               	movwf	tblptrh,c
 43812  016080                     	if	1	;There are 3 active tblptr bytes
 43813  016080  6AF8               	clrf	tblptru,c
 43814  016082  0E00               	movlw	low (__mediumconst shr (0+16))
 43815  016084  22F8               	addwfc	tblptru,f,c
 43816  016086                     	endif
 43817  016086  0009               	tblrd		*+
 43818  016088  CFF5 F030          	movff	tablat,i2___flmul@a
 43819  01608C  0009               	tblrd		*+
 43820  01608E  CFF5 F031          	movff	tablat,i2___flmul@a+1
 43821  016092  0009               	tblrd		*+
 43822  016094  CFF5 F032          	movff	tablat,i2___flmul@a+2
 43823  016098  000A               	tblrd		*-
 43824  01609A  CFF5 F033          	movff	tablat,i2___flmul@a+3
 43825  01609E  EC50  F0B8         	call	i2___flmul	;wreg free
 43826  0160A2  C02C  F045         	movff	?i2___flmul,?i2_scale
 43827  0160A6  C02D  F046         	movff	?i2___flmul+1,?i2_scale+1
 43828  0160AA  C02E  F047         	movff	?i2___flmul+2,?i2_scale+2
 43829  0160AE  C02F  F048         	movff	?i2___flmul+3,?i2_scale+3
 43830  0160B2  0012               	return	
 43831  0160B4                     i2l19534:
 43832                           
 43833                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
 43834  0160B4  504D               	movf	i2scale@scl,w,c
 43835  0160B6  0D04               	mullw	4
 43836  0160B8  0EF7               	movlw	low __npowers_
 43837  0160BA  24F3               	addwf	prodl,w,c
 43838  0160BC  6EF6               	movwf	tblptrl,c
 43839  0160BE  0EE5               	movlw	high __npowers_
 43840  0160C0  20F4               	addwfc	prodh,w,c
 43841  0160C2  6EF7               	movwf	tblptrh,c
 43842  0160C4                     	if	1	;There are 3 active tblptr bytes
 43843  0160C4  6AF8               	clrf	tblptru,c
 43844  0160C6  0E00               	movlw	low (__mediumconst shr (0+16))
 43845  0160C8  22F8               	addwfc	tblptru,f,c
 43846  0160CA                     	endif
 43847  0160CA  0009               	tblrd		*+
 43848  0160CC  CFF5 F045          	movff	tablat,?i2_scale
 43849  0160D0  0009               	tblrd		*+
 43850  0160D2  CFF5 F046          	movff	tablat,?i2_scale+1
 43851  0160D6  0009               	tblrd		*+
 43852  0160D8  CFF5 F047          	movff	tablat,?i2_scale+2
 43853  0160DC  000A               	tblrd		*-
 43854  0160DE  CFF5 F048          	movff	tablat,?i2_scale+3
 43855  0160E2  0012               	return	
 43856  0160E4                     i2l19538:
 43857                           
 43858                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
 43859  0160E4  504D               	movf	i2scale@scl,w,c
 43860  0160E6  0A80               	xorlw	128
 43861  0160E8  0F12               	addlw	-238
 43862  0160EA  A0D8               	btfss	status,0,c
 43863  0160EC  D091               	goto	i2l19546
 43864                           
 43865                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 43866  0160EE  0E00               	movlw	0
 43867  0160F0  6E0A               	movwf	i2___awdiv@divisor+1,c
 43868  0160F2  0E0A               	movlw	10
 43869  0160F4  6E09               	movwf	i2___awdiv@divisor,c
 43870  0160F6  0E00               	movlw	0
 43871  0160F8  6E04               	movwf	i2___awmod@divisor+1,c
 43872  0160FA  0E64               	movlw	100
 43873  0160FC  6E03               	movwf	i2___awmod@divisor,c
 43874  0160FE  504D               	movf	i2scale@scl,w,c
 43875  016100  6E01               	movwf	i2___awmod@dividend,c
 43876  016102  6A02               	clrf	i2___awmod@dividend+1,c
 43877  016104  BE01               	btfsc	i2___awmod@dividend,7,c
 43878  016106  0602               	decf	i2___awmod@dividend+1,f,c
 43879  016108  EC67  F0DA         	call	i2___awmod	;wreg free
 43880  01610C  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 43881  016110  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 43882  016114  ECAB  F0D9         	call	i2___awdiv	;wreg free
 43883  016118  0E09               	movlw	9
 43884  01611A  2607               	addwf	?i2___awdiv,f,c
 43885  01611C  5007               	movf	?i2___awdiv,w,c
 43886  01611E  0D04               	mullw	4
 43887  016120  0EC3               	movlw	low __powers_
 43888  016122  24F3               	addwf	prodl,w,c
 43889  016124  6EF6               	movwf	tblptrl,c
 43890  016126  0EE5               	movlw	high __powers_
 43891  016128  20F4               	addwfc	prodh,w,c
 43892  01612A  6EF7               	movwf	tblptrh,c
 43893  01612C                     	if	1	;There are 3 active tblptr bytes
 43894  01612C  6AF8               	clrf	tblptru,c
 43895  01612E  0E00               	movlw	low (__mediumconst shr (0+16))
 43896  016130  22F8               	addwfc	tblptru,f,c
 43897  016132                     	endif
 43898  016132  0009               	tblrd		*+
 43899  016134  CFF5 F030          	movff	tablat,i2___flmul@a
 43900  016138  0009               	tblrd		*+
 43901  01613A  CFF5 F031          	movff	tablat,i2___flmul@a+1
 43902  01613E  0009               	tblrd		*+
 43903  016140  CFF5 F032          	movff	tablat,i2___flmul@a+2
 43904  016144  000A               	tblrd		*-
 43905  016146  CFF5 F033          	movff	tablat,i2___flmul@a+3
 43906  01614A  0E00               	movlw	0
 43907  01614C  6E0A               	movwf	i2___awdiv@divisor+1,c
 43908  01614E  0E64               	movlw	100
 43909  016150  6E09               	movwf	i2___awdiv@divisor,c
 43910  016152  504D               	movf	i2scale@scl,w,c
 43911  016154  6E07               	movwf	i2___awdiv@dividend,c
 43912  016156  6A08               	clrf	i2___awdiv@dividend+1,c
 43913  016158  BE07               	btfsc	i2___awdiv@dividend,7,c
 43914  01615A  0608               	decf	i2___awdiv@dividend+1,f,c
 43915  01615C  ECAB  F0D9         	call	i2___awdiv	;wreg free
 43916  016160  0E12               	movlw	18
 43917  016162  2607               	addwf	?i2___awdiv,f,c
 43918  016164  5007               	movf	?i2___awdiv,w,c
 43919  016166  0D04               	mullw	4
 43920  016168  0EC3               	movlw	low __powers_
 43921  01616A  24F3               	addwf	prodl,w,c
 43922  01616C  6EF6               	movwf	tblptrl,c
 43923  01616E  0EE5               	movlw	high __powers_
 43924  016170  20F4               	addwfc	prodh,w,c
 43925  016172  6EF7               	movwf	tblptrh,c
 43926  016174                     	if	1	;There are 3 active tblptr bytes
 43927  016174  6AF8               	clrf	tblptru,c
 43928  016176  0E00               	movlw	low (__mediumconst shr (0+16))
 43929  016178  22F8               	addwfc	tblptru,f,c
 43930  01617A                     	endif
 43931  01617A  0009               	tblrd		*+
 43932  01617C  CFF5 F02C          	movff	tablat,i2___flmul@b
 43933  016180  0009               	tblrd		*+
 43934  016182  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 43935  016186  0009               	tblrd		*+
 43936  016188  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 43937  01618C  000A               	tblrd		*-
 43938  01618E  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 43939  016192  EC50  F0B8         	call	i2___flmul	;wreg free
 43940  016196  C02C  F049         	movff	?i2___flmul,i2_scale$6414
 43941  01619A  C02D  F04A         	movff	?i2___flmul+1,i2_scale$6414+1
 43942  01619E  C02E  F04B         	movff	?i2___flmul+2,i2_scale$6414+2
 43943  0161A2  C02F  F04C         	movff	?i2___flmul+3,i2_scale$6414+3
 43944                           
 43945                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 43946  0161A6  C049  F02C         	movff	i2_scale$6414,i2___flmul@b
 43947  0161AA  C04A  F02D         	movff	i2_scale$6414+1,i2___flmul@b+1
 43948  0161AE  C04B  F02E         	movff	i2_scale$6414+2,i2___flmul@b+2
 43949  0161B2  C04C  F02F         	movff	i2_scale$6414+3,i2___flmul@b+3
 43950  0161B6  0E00               	movlw	0
 43951  0161B8  6E04               	movwf	i2___awmod@divisor+1,c
 43952  0161BA  0E0A               	movlw	10
 43953  0161BC  6E03               	movwf	i2___awmod@divisor,c
 43954  0161BE  504D               	movf	i2scale@scl,w,c
 43955  0161C0  6E01               	movwf	i2___awmod@dividend,c
 43956  0161C2  6A02               	clrf	i2___awmod@dividend+1,c
 43957  0161C4  BE01               	btfsc	i2___awmod@dividend,7,c
 43958  0161C6  0602               	decf	i2___awmod@dividend+1,f,c
 43959  0161C8  EC67  F0DA         	call	i2___awmod	;wreg free
 43960  0161CC  5001               	movf	?i2___awmod,w,c
 43961  0161CE  0D04               	mullw	4
 43962  0161D0  0EC3               	movlw	low __powers_
 43963  0161D2  24F3               	addwf	prodl,w,c
 43964  0161D4  6EF6               	movwf	tblptrl,c
 43965  0161D6  0EE5               	movlw	high __powers_
 43966  0161D8  20F4               	addwfc	prodh,w,c
 43967  0161DA  6EF7               	movwf	tblptrh,c
 43968  0161DC                     	if	1	;There are 3 active tblptr bytes
 43969  0161DC  6AF8               	clrf	tblptru,c
 43970  0161DE  0E00               	movlw	low (__mediumconst shr (0+16))
 43971  0161E0  22F8               	addwfc	tblptru,f,c
 43972  0161E2                     	endif
 43973  0161E2  0009               	tblrd		*+
 43974  0161E4  CFF5 F030          	movff	tablat,i2___flmul@a
 43975  0161E8  0009               	tblrd		*+
 43976  0161EA  CFF5 F031          	movff	tablat,i2___flmul@a+1
 43977  0161EE  0009               	tblrd		*+
 43978  0161F0  CFF5 F032          	movff	tablat,i2___flmul@a+2
 43979  0161F4  000A               	tblrd		*-
 43980  0161F6  CFF5 F033          	movff	tablat,i2___flmul@a+3
 43981  0161FA  EC50  F0B8         	call	i2___flmul	;wreg free
 43982  0161FE  C02C  F045         	movff	?i2___flmul,?i2_scale
 43983  016202  C02D  F046         	movff	?i2___flmul+1,?i2_scale+1
 43984  016206  C02E  F047         	movff	?i2___flmul+2,?i2_scale+2
 43985  01620A  C02F  F048         	movff	?i2___flmul+3,?i2_scale+3
 43986  01620E  0012               	return	
 43987  016210                     i2l19546:
 43988                           
 43989                           ;doprnt.c: 446: else if(scl > 10)
 43990  016210  504D               	movf	i2scale@scl,w,c
 43991  016212  0A80               	xorlw	128
 43992  016214  0F75               	addlw	-139
 43993  016216  A0D8               	btfss	status,0,c
 43994  016218  D051               	goto	i2l19552
 43995                           
 43996                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
 43997  01621A  0E00               	movlw	0
 43998  01621C  6E0A               	movwf	i2___awdiv@divisor+1,c
 43999  01621E  0E0A               	movlw	10
 44000  016220  6E09               	movwf	i2___awdiv@divisor,c
 44001  016222  504D               	movf	i2scale@scl,w,c
 44002  016224  6E07               	movwf	i2___awdiv@dividend,c
 44003  016226  6A08               	clrf	i2___awdiv@dividend+1,c
 44004  016228  BE07               	btfsc	i2___awdiv@dividend,7,c
 44005  01622A  0608               	decf	i2___awdiv@dividend+1,f,c
 44006  01622C  ECAB  F0D9         	call	i2___awdiv	;wreg free
 44007  016230  0E09               	movlw	9
 44008  016232  2607               	addwf	?i2___awdiv,f,c
 44009  016234  5007               	movf	?i2___awdiv,w,c
 44010  016236  0D04               	mullw	4
 44011  016238  0EC3               	movlw	low __powers_
 44012  01623A  24F3               	addwf	prodl,w,c
 44013  01623C  6EF6               	movwf	tblptrl,c
 44014  01623E  0EE5               	movlw	high __powers_
 44015  016240  20F4               	addwfc	prodh,w,c
 44016  016242  6EF7               	movwf	tblptrh,c
 44017  016244                     	if	1	;There are 3 active tblptr bytes
 44018  016244  6AF8               	clrf	tblptru,c
 44019  016246  0E00               	movlw	low (__mediumconst shr (0+16))
 44020  016248  22F8               	addwfc	tblptru,f,c
 44021  01624A                     	endif
 44022  01624A  0009               	tblrd		*+
 44023  01624C  CFF5 F02C          	movff	tablat,i2___flmul@b
 44024  016250  0009               	tblrd		*+
 44025  016252  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 44026  016256  0009               	tblrd		*+
 44027  016258  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 44028  01625C  000A               	tblrd		*-
 44029  01625E  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 44030  016262  0E00               	movlw	0
 44031  016264  6E04               	movwf	i2___awmod@divisor+1,c
 44032  016266  0E0A               	movlw	10
 44033  016268  6E03               	movwf	i2___awmod@divisor,c
 44034  01626A  504D               	movf	i2scale@scl,w,c
 44035  01626C  6E01               	movwf	i2___awmod@dividend,c
 44036  01626E  6A02               	clrf	i2___awmod@dividend+1,c
 44037  016270  BE01               	btfsc	i2___awmod@dividend,7,c
 44038  016272  0602               	decf	i2___awmod@dividend+1,f,c
 44039  016274  EC67  F0DA         	call	i2___awmod	;wreg free
 44040  016278  5001               	movf	?i2___awmod,w,c
 44041  01627A  0D04               	mullw	4
 44042  01627C  0EC3               	movlw	low __powers_
 44043  01627E  24F3               	addwf	prodl,w,c
 44044  016280  6EF6               	movwf	tblptrl,c
 44045  016282  0EE5               	movlw	high __powers_
 44046  016284  20F4               	addwfc	prodh,w,c
 44047  016286  6EF7               	movwf	tblptrh,c
 44048  016288                     	if	1	;There are 3 active tblptr bytes
 44049  016288  6AF8               	clrf	tblptru,c
 44050  01628A  0E00               	movlw	low (__mediumconst shr (0+16))
 44051  01628C  22F8               	addwfc	tblptru,f,c
 44052  01628E                     	endif
 44053  01628E  0009               	tblrd		*+
 44054  016290  CFF5 F030          	movff	tablat,i2___flmul@a
 44055  016294  0009               	tblrd		*+
 44056  016296  CFF5 F031          	movff	tablat,i2___flmul@a+1
 44057  01629A  0009               	tblrd		*+
 44058  01629C  CFF5 F032          	movff	tablat,i2___flmul@a+2
 44059  0162A0  000A               	tblrd		*-
 44060  0162A2  CFF5 F033          	movff	tablat,i2___flmul@a+3
 44061  0162A6  EC50  F0B8         	call	i2___flmul	;wreg free
 44062  0162AA  C02C  F045         	movff	?i2___flmul,?i2_scale
 44063  0162AE  C02D  F046         	movff	?i2___flmul+1,?i2_scale+1
 44064  0162B2  C02E  F047         	movff	?i2___flmul+2,?i2_scale+2
 44065  0162B6  C02F  F048         	movff	?i2___flmul+3,?i2_scale+3
 44066  0162BA  0012               	return	
 44067  0162BC                     i2l19552:
 44068                           
 44069                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
 44070  0162BC  504D               	movf	i2scale@scl,w,c
 44071  0162BE  0D04               	mullw	4
 44072  0162C0  0EC3               	movlw	low __powers_
 44073  0162C2  24F3               	addwf	prodl,w,c
 44074  0162C4  6EF6               	movwf	tblptrl,c
 44075  0162C6  0EE5               	movlw	high __powers_
 44076  0162C8  20F4               	addwfc	prodh,w,c
 44077  0162CA  6EF7               	movwf	tblptrh,c
 44078  0162CC                     	if	1	;There are 3 active tblptr bytes
 44079  0162CC  6AF8               	clrf	tblptru,c
 44080  0162CE  0E00               	movlw	low (__mediumconst shr (0+16))
 44081  0162D0  22F8               	addwfc	tblptru,f,c
 44082  0162D2                     	endif
 44083  0162D2  0009               	tblrd		*+
 44084  0162D4  CFF5 F045          	movff	tablat,?i2_scale
 44085  0162D8  0009               	tblrd		*+
 44086  0162DA  CFF5 F046          	movff	tablat,?i2_scale+1
 44087  0162DE  0009               	tblrd		*+
 44088  0162E0  CFF5 F047          	movff	tablat,?i2_scale+2
 44089  0162E4  000A               	tblrd		*-
 44090  0162E6  CFF5 F048          	movff	tablat,?i2_scale+3
 44091  0162EA  0012               	return		;funcret
 44092  0162EC                     __end_ofi2_scale:
 44093                           	opt callstack 0
 44094                           
 44095 ;; *************** function i2___awmod *****************
 44096 ;; Defined at:
 44097 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
 44098 ;; Parameters:    Size  Location     Type
 44099 ;;  dividend        2    0[COMRAM] int 
 44100 ;;  divisor         2    2[COMRAM] int 
 44101 ;; Auto vars:     Size  Location     Type
 44102 ;;  __awmod         1    5[COMRAM] unsigned char 
 44103 ;;  __awmod         1    4[COMRAM] unsigned char 
 44104 ;; Return value:  Size  Location     Type
 44105 ;;                  2    0[COMRAM] int 
 44106 ;; Registers used:
 44107 ;;		wreg, status,2, status,0
 44108 ;; Tracked objects:
 44109 ;;		On entry : 0/0
 44110 ;;		On exit  : 0/0
 44111 ;;		Unchanged: 0/0
 44112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44113 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44114 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44116 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44117 ;;Total ram usage:        6 bytes
 44118 ;; Hardware stack levels used:    1
 44119 ;; This function calls:
 44120 ;;		Nothing
 44121 ;; This function is called by:
 44122 ;;		i2_scale
 44123 ;; This function uses a non-reentrant model
 44124 ;;
 44125                           
 44126                           	psect	text182
 44127  01B4CE                     __ptext182:
 44128                           	opt callstack 0
 44129  01B4CE                     i2___awmod:
 44130                           	opt callstack 12
 44131                           
 44132                           ;incstack = 0
 44133  01B4CE  0E00               	movlw	0
 44134  01B4D0  6E06               	movwf	i2___awmod@sign,c
 44135  01B4D2  AE02               	btfss	i2___awmod@dividend+1,7,c
 44136  01B4D4  D006               	goto	i2l18786
 44137  01B4D6  6C01               	negf	i2___awmod@dividend,c
 44138  01B4D8  1E02               	comf	i2___awmod@dividend+1,f,c
 44139  01B4DA  B0D8               	btfsc	status,0,c
 44140  01B4DC  2A02               	incf	i2___awmod@dividend+1,f,c
 44141  01B4DE  0E01               	movlw	1
 44142  01B4E0  6E06               	movwf	i2___awmod@sign,c
 44143  01B4E2                     i2l18786:
 44144  01B4E2  AE04               	btfss	i2___awmod@divisor+1,7,c
 44145  01B4E4  D004               	goto	i2l18790
 44146  01B4E6  6C03               	negf	i2___awmod@divisor,c
 44147  01B4E8  1E04               	comf	i2___awmod@divisor+1,f,c
 44148  01B4EA  B0D8               	btfsc	status,0,c
 44149  01B4EC  2A04               	incf	i2___awmod@divisor+1,f,c
 44150  01B4EE                     i2l18790:
 44151  01B4EE  5003               	movf	i2___awmod@divisor,w,c
 44152  01B4F0  1004               	iorwf	i2___awmod@divisor+1,w,c
 44153  01B4F2  B4D8               	btfsc	status,2,c
 44154  01B4F4  D018               	goto	i2l18806
 44155  01B4F6  0E01               	movlw	1
 44156  01B4F8  6E05               	movwf	i2___awmod@counter,c
 44157  01B4FA  D004               	goto	i2l18796
 44158  01B4FC                     i2l18794:
 44159  01B4FC  90D8               	bcf	status,0,c
 44160  01B4FE  3603               	rlcf	i2___awmod@divisor,f,c
 44161  01B500  3604               	rlcf	i2___awmod@divisor+1,f,c
 44162  01B502  2A05               	incf	i2___awmod@counter,f,c
 44163  01B504                     i2l18796:
 44164  01B504  AE04               	btfss	i2___awmod@divisor+1,7,c
 44165  01B506  D7FA               	goto	i2l18794
 44166  01B508                     i2u2374_40:
 44167  01B508  5003               	movf	i2___awmod@divisor,w,c
 44168  01B50A  5C01               	subwf	i2___awmod@dividend,w,c
 44169  01B50C  5004               	movf	i2___awmod@divisor+1,w,c
 44170  01B50E  5802               	subwfb	i2___awmod@dividend+1,w,c
 44171  01B510  A0D8               	btfss	status,0,c
 44172  01B512  D004               	goto	i2l18802
 44173  01B514  5003               	movf	i2___awmod@divisor,w,c
 44174  01B516  5E01               	subwf	i2___awmod@dividend,f,c
 44175  01B518  5004               	movf	i2___awmod@divisor+1,w,c
 44176  01B51A  5A02               	subwfb	i2___awmod@dividend+1,f,c
 44177  01B51C                     i2l18802:
 44178  01B51C  90D8               	bcf	status,0,c
 44179  01B51E  3204               	rrcf	i2___awmod@divisor+1,f,c
 44180  01B520  3203               	rrcf	i2___awmod@divisor,f,c
 44181  01B522  2E05               	decfsz	i2___awmod@counter,f,c
 44182  01B524  D7F1               	goto	i2u2374_40
 44183  01B526                     i2l18806:
 44184  01B526  5006               	movf	i2___awmod@sign,w,c
 44185  01B528  B4D8               	btfsc	status,2,c
 44186  01B52A  D004               	goto	i2l18810
 44187  01B52C  6C01               	negf	i2___awmod@dividend,c
 44188  01B52E  1E02               	comf	i2___awmod@dividend+1,f,c
 44189  01B530  B0D8               	btfsc	status,0,c
 44190  01B532  2A02               	incf	i2___awmod@dividend+1,f,c
 44191  01B534                     i2l18810:
 44192  01B534  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 44193  01B538  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 44194  01B53C  0012               	return		;funcret
 44195  01B53E                     __end_ofi2___awmod:
 44196                           	opt callstack 0
 44197                           
 44198 ;; *************** function i2___awdiv *****************
 44199 ;; Defined at:
 44200 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
 44201 ;; Parameters:    Size  Location     Type
 44202 ;;  dividend        2    6[COMRAM] int 
 44203 ;;  divisor         2    8[COMRAM] int 
 44204 ;; Auto vars:     Size  Location     Type
 44205 ;;  __awdiv         2   12[COMRAM] int 
 44206 ;;  __awdiv         1   11[COMRAM] unsigned char 
 44207 ;;  __awdiv         1   10[COMRAM] unsigned char 
 44208 ;; Return value:  Size  Location     Type
 44209 ;;                  2    6[COMRAM] int 
 44210 ;; Registers used:
 44211 ;;		wreg, status,2, status,0
 44212 ;; Tracked objects:
 44213 ;;		On entry : 0/0
 44214 ;;		On exit  : 0/0
 44215 ;;		Unchanged: 0/0
 44216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44217 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44218 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44220 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44221 ;;Total ram usage:        8 bytes
 44222 ;; Hardware stack levels used:    1
 44223 ;; This function calls:
 44224 ;;		Nothing
 44225 ;; This function is called by:
 44226 ;;		i2_scale
 44227 ;;		i2__doprnt
 44228 ;; This function uses a non-reentrant model
 44229 ;;
 44230                           
 44231                           	psect	text183
 44232  01B356                     __ptext183:
 44233                           	opt callstack 0
 44234  01B356                     i2___awdiv:
 44235                           	opt callstack 12
 44236                           
 44237                           ;incstack = 0
 44238  01B356  0E00               	movlw	0
 44239  01B358  6E0C               	movwf	i2___awdiv@sign,c
 44240  01B35A  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 44241  01B35C  D006               	goto	i2l18742
 44242  01B35E  6C09               	negf	i2___awdiv@divisor,c
 44243  01B360  1E0A               	comf	i2___awdiv@divisor+1,f,c
 44244  01B362  B0D8               	btfsc	status,0,c
 44245  01B364  2A0A               	incf	i2___awdiv@divisor+1,f,c
 44246  01B366  0E01               	movlw	1
 44247  01B368  6E0C               	movwf	i2___awdiv@sign,c
 44248  01B36A                     i2l18742:
 44249  01B36A  AE08               	btfss	i2___awdiv@dividend+1,7,c
 44250  01B36C  D006               	goto	i2l18748
 44251  01B36E  6C07               	negf	i2___awdiv@dividend,c
 44252  01B370  1E08               	comf	i2___awdiv@dividend+1,f,c
 44253  01B372  B0D8               	btfsc	status,0,c
 44254  01B374  2A08               	incf	i2___awdiv@dividend+1,f,c
 44255  01B376  0E01               	movlw	1
 44256  01B378  1A0C               	xorwf	i2___awdiv@sign,f,c
 44257  01B37A                     i2l18748:
 44258  01B37A  0E00               	movlw	0
 44259  01B37C  6E0E               	movwf	i2___awdiv@quotient+1,c
 44260  01B37E  0E00               	movlw	0
 44261  01B380  6E0D               	movwf	i2___awdiv@quotient,c
 44262  01B382  5009               	movf	i2___awdiv@divisor,w,c
 44263  01B384  100A               	iorwf	i2___awdiv@divisor+1,w,c
 44264  01B386  B4D8               	btfsc	status,2,c
 44265  01B388  D01C               	goto	i2l18770
 44266  01B38A  0E01               	movlw	1
 44267  01B38C  6E0B               	movwf	i2___awdiv@counter,c
 44268  01B38E  D004               	goto	i2l18756
 44269  01B390                     i2l18754:
 44270  01B390  90D8               	bcf	status,0,c
 44271  01B392  3609               	rlcf	i2___awdiv@divisor,f,c
 44272  01B394  360A               	rlcf	i2___awdiv@divisor+1,f,c
 44273  01B396  2A0B               	incf	i2___awdiv@counter,f,c
 44274  01B398                     i2l18756:
 44275  01B398  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 44276  01B39A  D7FA               	goto	i2l18754
 44277  01B39C                     i2u2368_40:
 44278  01B39C  90D8               	bcf	status,0,c
 44279  01B39E  360D               	rlcf	i2___awdiv@quotient,f,c
 44280  01B3A0  360E               	rlcf	i2___awdiv@quotient+1,f,c
 44281  01B3A2  5009               	movf	i2___awdiv@divisor,w,c
 44282  01B3A4  5C07               	subwf	i2___awdiv@dividend,w,c
 44283  01B3A6  500A               	movf	i2___awdiv@divisor+1,w,c
 44284  01B3A8  5808               	subwfb	i2___awdiv@dividend+1,w,c
 44285  01B3AA  A0D8               	btfss	status,0,c
 44286  01B3AC  D005               	goto	i2l18766
 44287  01B3AE  5009               	movf	i2___awdiv@divisor,w,c
 44288  01B3B0  5E07               	subwf	i2___awdiv@dividend,f,c
 44289  01B3B2  500A               	movf	i2___awdiv@divisor+1,w,c
 44290  01B3B4  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 44291  01B3B6  800D               	bsf	i2___awdiv@quotient,0,c
 44292  01B3B8                     i2l18766:
 44293  01B3B8  90D8               	bcf	status,0,c
 44294  01B3BA  320A               	rrcf	i2___awdiv@divisor+1,f,c
 44295  01B3BC  3209               	rrcf	i2___awdiv@divisor,f,c
 44296  01B3BE  2E0B               	decfsz	i2___awdiv@counter,f,c
 44297  01B3C0  D7ED               	goto	i2u2368_40
 44298  01B3C2                     i2l18770:
 44299  01B3C2  500C               	movf	i2___awdiv@sign,w,c
 44300  01B3C4  B4D8               	btfsc	status,2,c
 44301  01B3C6  D004               	goto	i2l18774
 44302  01B3C8  6C0D               	negf	i2___awdiv@quotient,c
 44303  01B3CA  1E0E               	comf	i2___awdiv@quotient+1,f,c
 44304  01B3CC  B0D8               	btfsc	status,0,c
 44305  01B3CE  2A0E               	incf	i2___awdiv@quotient+1,f,c
 44306  01B3D0                     i2l18774:
 44307  01B3D0  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 44308  01B3D4  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 44309  01B3D8  0012               	return		;funcret
 44310  01B3DA                     __end_ofi2___awdiv:
 44311                           	opt callstack 0
 44312                           
 44313 ;; *************** function i2_putch *****************
 44314 ;; Defined at:
 44315 ;;		line 182 in file "mcc_generated_files/eusart2.c"
 44316 ;; Parameters:    Size  Location     Type
 44317 ;;  txData          1    wreg     unsigned char 
 44318 ;; Auto vars:     Size  Location     Type
 44319 ;;  txData          1    1[COMRAM] unsigned char 
 44320 ;; Return value:  Size  Location     Type
 44321 ;;                  1    wreg      void 
 44322 ;; Registers used:
 44323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 44324 ;; Tracked objects:
 44325 ;;		On entry : 0/0
 44326 ;;		On exit  : 0/0
 44327 ;;		Unchanged: 0/0
 44328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44330 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44332 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44333 ;;Total ram usage:        1 bytes
 44334 ;; Hardware stack levels used:    1
 44335 ;; Hardware stack levels required when called:    1
 44336 ;; This function calls:
 44337 ;;		i2_EUSART2_Write
 44338 ;; This function is called by:
 44339 ;;		i2_printf
 44340 ;;		i2__doprnt
 44341 ;; This function uses a non-reentrant model
 44342 ;;
 44343                           
 44344                           	psect	text184
 44345  01CADA                     __ptext184:
 44346                           	opt callstack 0
 44347  01CADA                     i2_putch:
 44348                           	opt callstack 12
 44349                           
 44350                           ;incstack = 0
 44351                           ;i2putch@txData stored from wreg
 44352  01CADA  6E02               	movwf	i2putch@txData,c
 44353                           
 44354                           ;eusart2.c: 184: EUSART2_Write(txData);
 44355  01CADC  5002               	movf	i2putch@txData,w,c
 44356  01CADE  EC76  F0DF         	call	i2_EUSART2_Write
 44357  01CAE2  0012               	return		;funcret
 44358  01CAE4                     __end_ofi2_putch:
 44359                           	opt callstack 0
 44360                           
 44361 ;; *************** function i2_EUSART2_Write *****************
 44362 ;; Defined at:
 44363 ;;		line 153 in file "mcc_generated_files/eusart2.c"
 44364 ;; Parameters:    Size  Location     Type
 44365 ;;  txData          1    wreg     unsigned char 
 44366 ;; Auto vars:     Size  Location     Type
 44367 ;;  txData          1    0[COMRAM] unsigned char 
 44368 ;; Return value:  Size  Location     Type
 44369 ;;                  1    wreg      void 
 44370 ;; Registers used:
 44371 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 44372 ;; Tracked objects:
 44373 ;;		On entry : 0/0
 44374 ;;		On exit  : 0/0
 44375 ;;		Unchanged: 0/0
 44376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44378 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44380 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44381 ;;Total ram usage:        1 bytes
 44382 ;; Hardware stack levels used:    1
 44383 ;; This function calls:
 44384 ;;		Nothing
 44385 ;; This function is called by:
 44386 ;;		i2_putch
 44387 ;; This function uses a non-reentrant model
 44388 ;;
 44389                           
 44390                           	psect	text185
 44391  01BEEC                     __ptext185:
 44392                           	opt callstack 0
 44393  01BEEC                     i2_EUSART2_Write:
 44394                           	opt callstack 12
 44395                           
 44396                           ;incstack = 0
 44397                           ;i2EUSART2_Write@txData stored from wreg
 44398  01BEEC  6E01               	movwf	i2EUSART2_Write@txData,c
 44399                           
 44400                           ;eusart2.c: 155: while(0 == eusart2TxBufferRemaining)
 44401  01BEEE  D001               	goto	i2l18718
 44402  01BEF0                     i2l122:
 44403                           
 44404                           ; BSR set to: 1
 44405  01BEF0  0004               	clrwdt		;# 
 44406  01BEF2                     i2l18718:
 44407  01BEF2  0101               	movlb	1	; () banked
 44408  01BEF4  5190               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 44409  01BEF6  B4D8               	btfsc	status,2,c
 44410  01BEF8  D7FB               	goto	i2l122
 44411                           
 44412                           ; BSR set to: 1
 44413                           ;eusart2.c: 158: };eusart2.c: 160: if(0 == PIE3bits.TX2IE)
 44414  01BEFA  010E               	movlb	14	; () banked
 44415  01BEFC  BDC5               	btfsc	197,6,b	;volatile
 44416  01BEFE  D003               	goto	i2l124
 44417                           
 44418                           ; BSR set to: 14
 44419                           ;eusart2.c: 161: {;eusart2.c: 162: TX2REG = txData;
 44420  01BF00  C001  FE9A         	movff	i2EUSART2_Write@txData,3738	;volatile
 44421                           
 44422                           ;eusart2.c: 163: }
 44423  01BF04  D011               	goto	i2l18732
 44424  01BF06                     i2l124:
 44425                           
 44426                           ; BSR set to: 14
 44427                           ;eusart2.c: 164: else;eusart2.c: 165: {;eusart2.c: 166: PIE3bits.TX2IE = 0;
 44428  01BF06  9DC5               	bcf	197,6,b	;volatile
 44429                           
 44430                           ; BSR set to: 14
 44431                           ;eusart2.c: 167: eusart2TxBuffer[eusart2TxHead++] = txData;
 44432  01BF08  0EC0               	movlw	low _eusart2TxBuffer
 44433  01BF0A  0101               	movlb	1	; () banked
 44434  01BF0C  2592               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
 44435  01BF0E  6ED9               	movwf	fsr2l,c
 44436  01BF10  6ADA               	clrf	fsr2h,c
 44437  01BF12  0E04               	movlw	high _eusart2TxBuffer
 44438  01BF14  22DA               	addwfc	fsr2h,f,c
 44439  01BF16  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 44440                           
 44441                           ; BSR set to: 1
 44442  01BF1A  2B92               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 44443                           
 44444                           ; BSR set to: 1
 44445                           ;eusart2.c: 168: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 44446  01BF1C  0E3F               	movlw	63
 44447  01BF1E  6592               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 44448  01BF20  D002               	goto	i2l18730
 44449                           
 44450                           ; BSR set to: 1
 44451                           ;eusart2.c: 169: {;eusart2.c: 170: eusart2TxHead = 0;
 44452  01BF22  0E00               	movlw	0
 44453  01BF24  6F92               	movwf	_eusart2TxHead& (0+255),b	;volatile
 44454  01BF26                     i2l18730:
 44455                           
 44456                           ; BSR set to: 1
 44457                           ;eusart2.c: 171: };eusart2.c: 172: eusart2TxBufferRemaining--;
 44458  01BF26  0790               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 44459  01BF28                     i2l18732:
 44460                           
 44461                           ;eusart2.c: 173: };eusart2.c: 174: PIE3bits.TX2IE = 1;
 44462  01BF28  010E               	movlb	14	; () banked
 44463  01BF2A  8DC5               	bsf	197,6,b	;volatile
 44464                           
 44465                           ; BSR set to: 14
 44466  01BF2C  0012               	return		;funcret
 44467  01BF2E                     __end_ofi2_EUSART2_Write:
 44468                           	opt callstack 0
 44469                           
 44470 ;; *************** function i2_isdigit *****************
 44471 ;; Defined at:
 44472 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
 44473 ;; Parameters:    Size  Location     Type
 44474 ;;  c               1    wreg     unsigned char 
 44475 ;; Auto vars:     Size  Location     Type
 44476 ;;  c               1    2[COMRAM] unsigned char 
 44477 ;; Return value:  Size  Location     Type
 44478 ;;		None               void
 44479 ;; Registers used:
 44480 ;;		wreg, status,2, status,0
 44481 ;; Tracked objects:
 44482 ;;		On entry : 0/0
 44483 ;;		On exit  : 0/0
 44484 ;;		Unchanged: 0/0
 44485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44487 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44488 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44489 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44490 ;;Total ram usage:        3 bytes
 44491 ;; Hardware stack levels used:    1
 44492 ;; This function calls:
 44493 ;;		Nothing
 44494 ;; This function is called by:
 44495 ;;		i2__doprnt
 44496 ;; This function uses a non-reentrant model
 44497 ;;
 44498                           
 44499                           	psect	text186
 44500  01C74A                     __ptext186:
 44501                           	opt callstack 0
 44502  01C74A                     i2_isdigit:
 44503                           	opt callstack 13
 44504                           
 44505                           ; BSR set to: 14
 44506                           ;incstack = 0
 44507                           ;i2isdigit@c stored from wreg
 44508  01C74A  6E03               	movwf	i2isdigit@c,c
 44509  01C74C  0E00               	movlw	0
 44510  01C74E  6E02               	movwf	i2_isdigit$5450,c
 44511  01C750  0E3A               	movlw	58
 44512  01C752  6003               	cpfslt	i2isdigit@c,c
 44513  01C754  D005               	goto	i2l19866
 44514  01C756  0E2F               	movlw	47
 44515  01C758  6403               	cpfsgt	i2isdigit@c,c
 44516  01C75A  D002               	goto	i2l19866
 44517  01C75C  0E01               	movlw	1
 44518  01C75E  6E02               	movwf	i2_isdigit$5450,c
 44519  01C760                     i2l19866:
 44520  01C760  C002  F001         	movff	i2_isdigit$5450,??i2_isdigit
 44521  01C764  3001               	rrcf	??i2_isdigit,w,c
 44522  01C766  0012               	return		;funcret
 44523  01C768                     __end_ofi2_isdigit:
 44524                           	opt callstack 0
 44525                           
 44526 ;; *************** function i2_fround *****************
 44527 ;; Defined at:
 44528 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 44529 ;; Parameters:    Size  Location     Type
 44530 ;;  prec            1    wreg     unsigned char 
 44531 ;; Auto vars:     Size  Location     Type
 44532 ;;  prec            1   80[COMRAM] unsigned char 
 44533 ;; Return value:  Size  Location     Type
 44534 ;;                  4   68[COMRAM] unsigned char 
 44535 ;; Registers used:
 44536 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44537 ;; Tracked objects:
 44538 ;;		On entry : 0/0
 44539 ;;		On exit  : 0/0
 44540 ;;		Unchanged: 0/0
 44541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44542 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44543 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44545 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44546 ;;Total ram usage:       13 bytes
 44547 ;; Hardware stack levels used:    1
 44548 ;; Hardware stack levels required when called:    1
 44549 ;; This function calls:
 44550 ;;		i2___flmul
 44551 ;;		i2___lwdiv
 44552 ;;		i2___lwmod
 44553 ;; This function is called by:
 44554 ;;		i2__doprnt
 44555 ;; This function uses a non-reentrant model
 44556 ;;
 44557                           
 44558                           	psect	text187
 44559  017FDE                     __ptext187:
 44560                           	opt callstack 0
 44561  017FDE                     i2_fround:
 44562                           	opt callstack 12
 44563                           
 44564                           ;incstack = 0
 44565                           ;i2fround@prec stored from wreg
 44566  017FDE  6E51               	movwf	i2fround@prec,c
 44567                           
 44568                           ;doprnt.c: 421: if(prec>=110)
 44569  017FE0  0E6D               	movlw	109
 44570  017FE2  6451               	cpfsgt	i2fround@prec,c
 44571  017FE4  D0B5               	goto	i2l19508
 44572                           
 44573                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 44574  017FE6  0E00               	movlw	0
 44575  017FE8  6E30               	movwf	i2___flmul@a,c
 44576  017FEA  0E00               	movlw	0
 44577  017FEC  6E31               	movwf	i2___flmul@a+1,c
 44578  017FEE  0E00               	movlw	0
 44579  017FF0  6E32               	movwf	i2___flmul@a+2,c
 44580  017FF2  0E3F               	movlw	63
 44581  017FF4  6E33               	movwf	i2___flmul@a+3,c
 44582  017FF6  0E00               	movlw	0
 44583  017FF8  6E09               	movwf	i2___lwdiv@divisor+1,c
 44584  017FFA  0E64               	movlw	100
 44585  017FFC  6E08               	movwf	i2___lwdiv@divisor,c
 44586  017FFE  C051  F006         	movff	i2fround@prec,i2___lwdiv@dividend
 44587  018002  6A07               	clrf	i2___lwdiv@dividend+1,c
 44588  018004  EC06  F0DD         	call	i2___lwdiv	;wreg free
 44589  018008  90D8               	bcf	status,0,c
 44590  01800A  3606               	rlcf	?i2___lwdiv,f,c
 44591  01800C  3607               	rlcf	?i2___lwdiv+1,f,c
 44592  01800E  90D8               	bcf	status,0,c
 44593  018010  3606               	rlcf	?i2___lwdiv,f,c
 44594  018012  3607               	rlcf	?i2___lwdiv+1,f,c
 44595  018014  0E48               	movlw	72
 44596  018016  2606               	addwf	?i2___lwdiv,f,c
 44597  018018  0E00               	movlw	0
 44598  01801A  2207               	addwfc	?i2___lwdiv+1,f,c
 44599  01801C  0EF7               	movlw	low __npowers_
 44600  01801E  2406               	addwf	?i2___lwdiv,w,c
 44601  018020  6EF6               	movwf	tblptrl,c
 44602  018022  0EE5               	movlw	high __npowers_
 44603  018024  2007               	addwfc	?i2___lwdiv+1,w,c
 44604  018026  6EF7               	movwf	tblptrh,c
 44605  018028                     	if	1	;There are 3 active tblptr bytes
 44606  018028  6AF8               	clrf	tblptru,c
 44607  01802A  0E00               	movlw	low (__mediumconst shr (0+16))
 44608  01802C  22F8               	addwfc	tblptru,f,c
 44609  01802E                     	endif
 44610  01802E  0009               	tblrd		*+
 44611  018030  CFF5 F02C          	movff	tablat,i2___flmul@b
 44612  018034  0009               	tblrd		*+
 44613  018036  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 44614  01803A  0009               	tblrd		*+
 44615  01803C  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 44616  018040  000A               	tblrd		*-
 44617  018042  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 44618  018046  EC50  F0B8         	call	i2___flmul	;wreg free
 44619  01804A  C02C  F04D         	movff	?i2___flmul,i2_fround$6412
 44620  01804E  C02D  F04E         	movff	?i2___flmul+1,i2_fround$6412+1
 44621  018052  C02E  F04F         	movff	?i2___flmul+2,i2_fround$6412+2
 44622  018056  C02F  F050         	movff	?i2___flmul+3,i2_fround$6412+3
 44623                           
 44624                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 44625  01805A  0E00               	movlw	0
 44626  01805C  6E09               	movwf	i2___lwdiv@divisor+1,c
 44627  01805E  0E0A               	movlw	10
 44628  018060  6E08               	movwf	i2___lwdiv@divisor,c
 44629  018062  0E00               	movlw	0
 44630  018064  6E04               	movwf	i2___lwmod@divisor+1,c
 44631  018066  0E64               	movlw	100
 44632  018068  6E03               	movwf	i2___lwmod@divisor,c
 44633  01806A  C051  F001         	movff	i2fround@prec,i2___lwmod@dividend
 44634  01806E  6A02               	clrf	i2___lwmod@dividend+1,c
 44635  018070  EC97  F0DF         	call	i2___lwmod	;wreg free
 44636  018074  C001  F006         	movff	?i2___lwmod,i2___lwdiv@dividend
 44637  018078  C002  F007         	movff	?i2___lwmod+1,i2___lwdiv@dividend+1
 44638  01807C  EC06  F0DD         	call	i2___lwdiv	;wreg free
 44639  018080  90D8               	bcf	status,0,c
 44640  018082  3606               	rlcf	?i2___lwdiv,f,c
 44641  018084  3607               	rlcf	?i2___lwdiv+1,f,c
 44642  018086  90D8               	bcf	status,0,c
 44643  018088  3606               	rlcf	?i2___lwdiv,f,c
 44644  01808A  3607               	rlcf	?i2___lwdiv+1,f,c
 44645  01808C  0E24               	movlw	36
 44646  01808E  2606               	addwf	?i2___lwdiv,f,c
 44647  018090  0E00               	movlw	0
 44648  018092  2207               	addwfc	?i2___lwdiv+1,f,c
 44649  018094  0EF7               	movlw	low __npowers_
 44650  018096  2406               	addwf	?i2___lwdiv,w,c
 44651  018098  6EF6               	movwf	tblptrl,c
 44652  01809A  0EE5               	movlw	high __npowers_
 44653  01809C  2007               	addwfc	?i2___lwdiv+1,w,c
 44654  01809E  6EF7               	movwf	tblptrh,c
 44655  0180A0                     	if	1	;There are 3 active tblptr bytes
 44656  0180A0  6AF8               	clrf	tblptru,c
 44657  0180A2  0E00               	movlw	low (__mediumconst shr (0+16))
 44658  0180A4  22F8               	addwfc	tblptru,f,c
 44659  0180A6                     	endif
 44660  0180A6  0009               	tblrd		*+
 44661  0180A8  CFF5 F030          	movff	tablat,i2___flmul@a
 44662  0180AC  0009               	tblrd		*+
 44663  0180AE  CFF5 F031          	movff	tablat,i2___flmul@a+1
 44664  0180B2  0009               	tblrd		*+
 44665  0180B4  CFF5 F032          	movff	tablat,i2___flmul@a+2
 44666  0180B8  000A               	tblrd		*-
 44667  0180BA  CFF5 F033          	movff	tablat,i2___flmul@a+3
 44668  0180BE  C04D  F02C         	movff	i2_fround$6412,i2___flmul@b
 44669  0180C2  C04E  F02D         	movff	i2_fround$6412+1,i2___flmul@b+1
 44670  0180C6  C04F  F02E         	movff	i2_fround$6412+2,i2___flmul@b+2
 44671  0180CA  C050  F02F         	movff	i2_fround$6412+3,i2___flmul@b+3
 44672  0180CE  EC50  F0B8         	call	i2___flmul	;wreg free
 44673  0180D2  C02C  F049         	movff	?i2___flmul,i2_fround$6413
 44674  0180D6  C02D  F04A         	movff	?i2___flmul+1,i2_fround$6413+1
 44675  0180DA  C02E  F04B         	movff	?i2___flmul+2,i2_fround$6413+2
 44676  0180DE  C02F  F04C         	movff	?i2___flmul+3,i2_fround$6413+3
 44677                           
 44678                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 44679  0180E2  C049  F02C         	movff	i2_fround$6413,i2___flmul@b
 44680  0180E6  C04A  F02D         	movff	i2_fround$6413+1,i2___flmul@b+1
 44681  0180EA  C04B  F02E         	movff	i2_fround$6413+2,i2___flmul@b+2
 44682  0180EE  C04C  F02F         	movff	i2_fround$6413+3,i2___flmul@b+3
 44683  0180F2  0E00               	movlw	0
 44684  0180F4  6E04               	movwf	i2___lwmod@divisor+1,c
 44685  0180F6  0E0A               	movlw	10
 44686  0180F8  6E03               	movwf	i2___lwmod@divisor,c
 44687  0180FA  C051  F001         	movff	i2fround@prec,i2___lwmod@dividend
 44688  0180FE  6A02               	clrf	i2___lwmod@dividend+1,c
 44689  018100  EC97  F0DF         	call	i2___lwmod	;wreg free
 44690  018104  90D8               	bcf	status,0,c
 44691  018106  3601               	rlcf	?i2___lwmod,f,c
 44692  018108  3602               	rlcf	?i2___lwmod+1,f,c
 44693  01810A  90D8               	bcf	status,0,c
 44694  01810C  3601               	rlcf	?i2___lwmod,f,c
 44695  01810E  3602               	rlcf	?i2___lwmod+1,f,c
 44696  018110  0EF7               	movlw	low __npowers_
 44697  018112  2401               	addwf	?i2___lwmod,w,c
 44698  018114  6EF6               	movwf	tblptrl,c
 44699  018116  0EE5               	movlw	high __npowers_
 44700  018118  2002               	addwfc	?i2___lwmod+1,w,c
 44701  01811A  6EF7               	movwf	tblptrh,c
 44702  01811C                     	if	1	;There are 3 active tblptr bytes
 44703  01811C  6AF8               	clrf	tblptru,c
 44704  01811E  0E00               	movlw	low (__mediumconst shr (0+16))
 44705  018120  22F8               	addwfc	tblptru,f,c
 44706  018122                     	endif
 44707  018122  0009               	tblrd		*+
 44708  018124  CFF5 F030          	movff	tablat,i2___flmul@a
 44709  018128  0009               	tblrd		*+
 44710  01812A  CFF5 F031          	movff	tablat,i2___flmul@a+1
 44711  01812E  0009               	tblrd		*+
 44712  018130  CFF5 F032          	movff	tablat,i2___flmul@a+2
 44713  018134  000A               	tblrd		*-
 44714  018136  CFF5 F033          	movff	tablat,i2___flmul@a+3
 44715  01813A  EC50  F0B8         	call	i2___flmul	;wreg free
 44716  01813E  C02C  F045         	movff	?i2___flmul,?i2_fround
 44717  018142  C02D  F046         	movff	?i2___flmul+1,?i2_fround+1
 44718  018146  C02E  F047         	movff	?i2___flmul+2,?i2_fround+2
 44719  01814A  C02F  F048         	movff	?i2___flmul+3,?i2_fround+3
 44720  01814E  0012               	return	
 44721  018150                     i2l19508:
 44722                           
 44723                           ;doprnt.c: 423: else if(prec > 10)
 44724  018150  0E0A               	movlw	10
 44725  018152  6451               	cpfsgt	i2fround@prec,c
 44726  018154  D071               	goto	i2l19514
 44727                           
 44728                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 44729  018156  0E00               	movlw	0
 44730  018158  6E30               	movwf	i2___flmul@a,c
 44731  01815A  0E00               	movlw	0
 44732  01815C  6E31               	movwf	i2___flmul@a+1,c
 44733  01815E  0E00               	movlw	0
 44734  018160  6E32               	movwf	i2___flmul@a+2,c
 44735  018162  0E3F               	movlw	63
 44736  018164  6E33               	movwf	i2___flmul@a+3,c
 44737  018166  0E00               	movlw	0
 44738  018168  6E09               	movwf	i2___lwdiv@divisor+1,c
 44739  01816A  0E0A               	movlw	10
 44740  01816C  6E08               	movwf	i2___lwdiv@divisor,c
 44741  01816E  C051  F006         	movff	i2fround@prec,i2___lwdiv@dividend
 44742  018172  6A07               	clrf	i2___lwdiv@dividend+1,c
 44743  018174  EC06  F0DD         	call	i2___lwdiv	;wreg free
 44744  018178  90D8               	bcf	status,0,c
 44745  01817A  3606               	rlcf	?i2___lwdiv,f,c
 44746  01817C  3607               	rlcf	?i2___lwdiv+1,f,c
 44747  01817E  90D8               	bcf	status,0,c
 44748  018180  3606               	rlcf	?i2___lwdiv,f,c
 44749  018182  3607               	rlcf	?i2___lwdiv+1,f,c
 44750  018184  0E24               	movlw	36
 44751  018186  2606               	addwf	?i2___lwdiv,f,c
 44752  018188  0E00               	movlw	0
 44753  01818A  2207               	addwfc	?i2___lwdiv+1,f,c
 44754  01818C  0EF7               	movlw	low __npowers_
 44755  01818E  2406               	addwf	?i2___lwdiv,w,c
 44756  018190  6EF6               	movwf	tblptrl,c
 44757  018192  0EE5               	movlw	high __npowers_
 44758  018194  2007               	addwfc	?i2___lwdiv+1,w,c
 44759  018196  6EF7               	movwf	tblptrh,c
 44760  018198                     	if	1	;There are 3 active tblptr bytes
 44761  018198  6AF8               	clrf	tblptru,c
 44762  01819A  0E00               	movlw	low (__mediumconst shr (0+16))
 44763  01819C  22F8               	addwfc	tblptru,f,c
 44764  01819E                     	endif
 44765  01819E  0009               	tblrd		*+
 44766  0181A0  CFF5 F02C          	movff	tablat,i2___flmul@b
 44767  0181A4  0009               	tblrd		*+
 44768  0181A6  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 44769  0181AA  0009               	tblrd		*+
 44770  0181AC  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 44771  0181B0  000A               	tblrd		*-
 44772  0181B2  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 44773  0181B6  EC50  F0B8         	call	i2___flmul	;wreg free
 44774  0181BA  C02C  F04D         	movff	?i2___flmul,i2_fround$6412
 44775  0181BE  C02D  F04E         	movff	?i2___flmul+1,i2_fround$6412+1
 44776  0181C2  C02E  F04F         	movff	?i2___flmul+2,i2_fround$6412+2
 44777  0181C6  C02F  F050         	movff	?i2___flmul+3,i2_fround$6412+3
 44778                           
 44779                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 44780  0181CA  C04D  F02C         	movff	i2_fround$6412,i2___flmul@b
 44781  0181CE  C04E  F02D         	movff	i2_fround$6412+1,i2___flmul@b+1
 44782  0181D2  C04F  F02E         	movff	i2_fround$6412+2,i2___flmul@b+2
 44783  0181D6  C050  F02F         	movff	i2_fround$6412+3,i2___flmul@b+3
 44784  0181DA  0E00               	movlw	0
 44785  0181DC  6E04               	movwf	i2___lwmod@divisor+1,c
 44786  0181DE  0E0A               	movlw	10
 44787  0181E0  6E03               	movwf	i2___lwmod@divisor,c
 44788  0181E2  C051  F001         	movff	i2fround@prec,i2___lwmod@dividend
 44789  0181E6  6A02               	clrf	i2___lwmod@dividend+1,c
 44790  0181E8  EC97  F0DF         	call	i2___lwmod	;wreg free
 44791  0181EC  90D8               	bcf	status,0,c
 44792  0181EE  3601               	rlcf	?i2___lwmod,f,c
 44793  0181F0  3602               	rlcf	?i2___lwmod+1,f,c
 44794  0181F2  90D8               	bcf	status,0,c
 44795  0181F4  3601               	rlcf	?i2___lwmod,f,c
 44796  0181F6  3602               	rlcf	?i2___lwmod+1,f,c
 44797  0181F8  0EF7               	movlw	low __npowers_
 44798  0181FA  2401               	addwf	?i2___lwmod,w,c
 44799  0181FC  6EF6               	movwf	tblptrl,c
 44800  0181FE  0EE5               	movlw	high __npowers_
 44801  018200  2002               	addwfc	?i2___lwmod+1,w,c
 44802  018202  6EF7               	movwf	tblptrh,c
 44803  018204                     	if	1	;There are 3 active tblptr bytes
 44804  018204  6AF8               	clrf	tblptru,c
 44805  018206  0E00               	movlw	low (__mediumconst shr (0+16))
 44806  018208  22F8               	addwfc	tblptru,f,c
 44807  01820A                     	endif
 44808  01820A  0009               	tblrd		*+
 44809  01820C  CFF5 F030          	movff	tablat,i2___flmul@a
 44810  018210  0009               	tblrd		*+
 44811  018212  CFF5 F031          	movff	tablat,i2___flmul@a+1
 44812  018216  0009               	tblrd		*+
 44813  018218  CFF5 F032          	movff	tablat,i2___flmul@a+2
 44814  01821C  000A               	tblrd		*-
 44815  01821E  CFF5 F033          	movff	tablat,i2___flmul@a+3
 44816  018222  EC50  F0B8         	call	i2___flmul	;wreg free
 44817  018226  C02C  F045         	movff	?i2___flmul,?i2_fround
 44818  01822A  C02D  F046         	movff	?i2___flmul+1,?i2_fround+1
 44819  01822E  C02E  F047         	movff	?i2___flmul+2,?i2_fround+2
 44820  018232  C02F  F048         	movff	?i2___flmul+3,?i2_fround+3
 44821  018236  0012               	return	
 44822  018238                     i2l19514:
 44823                           
 44824                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
 44825  018238  5051               	movf	i2fround@prec,w,c
 44826  01823A  0D04               	mullw	4
 44827  01823C  0EF7               	movlw	low __npowers_
 44828  01823E  24F3               	addwf	prodl,w,c
 44829  018240  6EF6               	movwf	tblptrl,c
 44830  018242  0EE5               	movlw	high __npowers_
 44831  018244  20F4               	addwfc	prodh,w,c
 44832  018246  6EF7               	movwf	tblptrh,c
 44833  018248                     	if	1	;There are 3 active tblptr bytes
 44834  018248  6AF8               	clrf	tblptru,c
 44835  01824A  0E00               	movlw	low (__mediumconst shr (0+16))
 44836  01824C  22F8               	addwfc	tblptru,f,c
 44837  01824E                     	endif
 44838  01824E  0009               	tblrd		*+
 44839  018250  CFF5 F02C          	movff	tablat,i2___flmul@b
 44840  018254  0009               	tblrd		*+
 44841  018256  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 44842  01825A  0009               	tblrd		*+
 44843  01825C  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 44844  018260  000A               	tblrd		*-
 44845  018262  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 44846  018266  0E00               	movlw	0
 44847  018268  6E30               	movwf	i2___flmul@a,c
 44848  01826A  0E00               	movlw	0
 44849  01826C  6E31               	movwf	i2___flmul@a+1,c
 44850  01826E  0E00               	movlw	0
 44851  018270  6E32               	movwf	i2___flmul@a+2,c
 44852  018272  0E3F               	movlw	63
 44853  018274  6E33               	movwf	i2___flmul@a+3,c
 44854  018276  EC50  F0B8         	call	i2___flmul	;wreg free
 44855  01827A  C02C  F045         	movff	?i2___flmul,?i2_fround
 44856  01827E  C02D  F046         	movff	?i2___flmul+1,?i2_fround+1
 44857  018282  C02E  F047         	movff	?i2___flmul+2,?i2_fround+2
 44858  018286  C02F  F048         	movff	?i2___flmul+3,?i2_fround+3
 44859  01828A  0012               	return		;funcret
 44860  01828C                     __end_ofi2_fround:
 44861                           	opt callstack 0
 44862                           
 44863 ;; *************** function i2___lwmod *****************
 44864 ;; Defined at:
 44865 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
 44866 ;; Parameters:    Size  Location     Type
 44867 ;;  dividend        2    0[COMRAM] unsigned int 
 44868 ;;  divisor         2    2[COMRAM] unsigned int 
 44869 ;; Auto vars:     Size  Location     Type
 44870 ;;  __lwmod         1    4[COMRAM] unsigned char 
 44871 ;; Return value:  Size  Location     Type
 44872 ;;                  2    0[COMRAM] unsigned int 
 44873 ;; Registers used:
 44874 ;;		wreg, status,2, status,0
 44875 ;; Tracked objects:
 44876 ;;		On entry : 0/0
 44877 ;;		On exit  : 0/0
 44878 ;;		Unchanged: 0/0
 44879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44880 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44881 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44883 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44884 ;;Total ram usage:        5 bytes
 44885 ;; Hardware stack levels used:    1
 44886 ;; This function calls:
 44887 ;;		Nothing
 44888 ;; This function is called by:
 44889 ;;		i2_fround
 44890 ;; This function uses a non-reentrant model
 44891 ;;
 44892                           
 44893                           	psect	text188
 44894  01BF2E                     __ptext188:
 44895                           	opt callstack 0
 44896  01BF2E                     i2___lwmod:
 44897                           	opt callstack 12
 44898                           
 44899                           ;incstack = 0
 44900  01BF2E  5003               	movf	i2___lwmod@divisor,w,c
 44901  01BF30  1004               	iorwf	i2___lwmod@divisor+1,w,c
 44902  01BF32  B4D8               	btfsc	status,2,c
 44903  01BF34  D018               	goto	i2l3178
 44904  01BF36  0E01               	movlw	1
 44905  01BF38  6E05               	movwf	i2___lwmod@counter,c
 44906  01BF3A  D004               	goto	i2l18842
 44907  01BF3C                     i2l18840:
 44908  01BF3C  90D8               	bcf	status,0,c
 44909  01BF3E  3603               	rlcf	i2___lwmod@divisor,f,c
 44910  01BF40  3604               	rlcf	i2___lwmod@divisor+1,f,c
 44911  01BF42  2A05               	incf	i2___lwmod@counter,f,c
 44912  01BF44                     i2l18842:
 44913  01BF44  AE04               	btfss	i2___lwmod@divisor+1,7,c
 44914  01BF46  D7FA               	goto	i2l18840
 44915  01BF48                     i2u2381_40:
 44916  01BF48  5003               	movf	i2___lwmod@divisor,w,c
 44917  01BF4A  5C01               	subwf	i2___lwmod@dividend,w,c
 44918  01BF4C  5004               	movf	i2___lwmod@divisor+1,w,c
 44919  01BF4E  5802               	subwfb	i2___lwmod@dividend+1,w,c
 44920  01BF50  A0D8               	btfss	status,0,c
 44921  01BF52  D004               	goto	i2l18848
 44922  01BF54  5003               	movf	i2___lwmod@divisor,w,c
 44923  01BF56  5E01               	subwf	i2___lwmod@dividend,f,c
 44924  01BF58  5004               	movf	i2___lwmod@divisor+1,w,c
 44925  01BF5A  5A02               	subwfb	i2___lwmod@dividend+1,f,c
 44926  01BF5C                     i2l18848:
 44927  01BF5C  90D8               	bcf	status,0,c
 44928  01BF5E  3204               	rrcf	i2___lwmod@divisor+1,f,c
 44929  01BF60  3203               	rrcf	i2___lwmod@divisor,f,c
 44930  01BF62  2E05               	decfsz	i2___lwmod@counter,f,c
 44931  01BF64  D7F1               	goto	i2u2381_40
 44932  01BF66                     i2l3178:
 44933  01BF66  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
 44934  01BF6A  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
 44935  01BF6E  0012               	return		;funcret
 44936  01BF70                     __end_ofi2___lwmod:
 44937                           	opt callstack 0
 44938                           
 44939 ;; *************** function i2___lwdiv *****************
 44940 ;; Defined at:
 44941 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
 44942 ;; Parameters:    Size  Location     Type
 44943 ;;  dividend        2    5[COMRAM] unsigned int 
 44944 ;;  divisor         2    7[COMRAM] unsigned int 
 44945 ;; Auto vars:     Size  Location     Type
 44946 ;;  __lwdiv         2   10[COMRAM] unsigned int 
 44947 ;;  __lwdiv         1    9[COMRAM] unsigned char 
 44948 ;; Return value:  Size  Location     Type
 44949 ;;                  2    5[COMRAM] unsigned int 
 44950 ;; Registers used:
 44951 ;;		wreg, status,2, status,0
 44952 ;; Tracked objects:
 44953 ;;		On entry : 0/0
 44954 ;;		On exit  : 0/0
 44955 ;;		Unchanged: 0/0
 44956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44957 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44958 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44960 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44961 ;;Total ram usage:        7 bytes
 44962 ;; Hardware stack levels used:    1
 44963 ;; This function calls:
 44964 ;;		Nothing
 44965 ;; This function is called by:
 44966 ;;		i2_fround
 44967 ;; This function uses a non-reentrant model
 44968 ;;
 44969                           
 44970                           	psect	text189
 44971  01BA0C                     __ptext189:
 44972                           	opt callstack 0
 44973  01BA0C                     i2___lwdiv:
 44974                           	opt callstack 12
 44975                           
 44976                           ;incstack = 0
 44977  01BA0C  0E00               	movlw	0
 44978  01BA0E  6E0C               	movwf	i2___lwdiv@quotient+1,c
 44979  01BA10  0E00               	movlw	0
 44980  01BA12  6E0B               	movwf	i2___lwdiv@quotient,c
 44981  01BA14  5008               	movf	i2___lwdiv@divisor,w,c
 44982  01BA16  1009               	iorwf	i2___lwdiv@divisor+1,w,c
 44983  01BA18  B4D8               	btfsc	status,2,c
 44984  01BA1A  D01C               	goto	i2l3168
 44985  01BA1C  0E01               	movlw	1
 44986  01BA1E  6E0A               	movwf	i2___lwdiv@counter,c
 44987  01BA20  D004               	goto	i2l18822
 44988  01BA22                     i2l18820:
 44989  01BA22  90D8               	bcf	status,0,c
 44990  01BA24  3608               	rlcf	i2___lwdiv@divisor,f,c
 44991  01BA26  3609               	rlcf	i2___lwdiv@divisor+1,f,c
 44992  01BA28  2A0A               	incf	i2___lwdiv@counter,f,c
 44993  01BA2A                     i2l18822:
 44994  01BA2A  AE09               	btfss	i2___lwdiv@divisor+1,7,c
 44995  01BA2C  D7FA               	goto	i2l18820
 44996  01BA2E                     i2u2378_40:
 44997  01BA2E  90D8               	bcf	status,0,c
 44998  01BA30  360B               	rlcf	i2___lwdiv@quotient,f,c
 44999  01BA32  360C               	rlcf	i2___lwdiv@quotient+1,f,c
 45000  01BA34  5008               	movf	i2___lwdiv@divisor,w,c
 45001  01BA36  5C06               	subwf	i2___lwdiv@dividend,w,c
 45002  01BA38  5009               	movf	i2___lwdiv@divisor+1,w,c
 45003  01BA3A  5807               	subwfb	i2___lwdiv@dividend+1,w,c
 45004  01BA3C  A0D8               	btfss	status,0,c
 45005  01BA3E  D005               	goto	i2l18832
 45006  01BA40  5008               	movf	i2___lwdiv@divisor,w,c
 45007  01BA42  5E06               	subwf	i2___lwdiv@dividend,f,c
 45008  01BA44  5009               	movf	i2___lwdiv@divisor+1,w,c
 45009  01BA46  5A07               	subwfb	i2___lwdiv@dividend+1,f,c
 45010  01BA48  800B               	bsf	i2___lwdiv@quotient,0,c
 45011  01BA4A                     i2l18832:
 45012  01BA4A  90D8               	bcf	status,0,c
 45013  01BA4C  3209               	rrcf	i2___lwdiv@divisor+1,f,c
 45014  01BA4E  3208               	rrcf	i2___lwdiv@divisor,f,c
 45015  01BA50  2E0A               	decfsz	i2___lwdiv@counter,f,c
 45016  01BA52  D7ED               	goto	i2u2378_40
 45017  01BA54                     i2l3168:
 45018  01BA54  C00B  F006         	movff	i2___lwdiv@quotient,?i2___lwdiv
 45019  01BA58  C00C  F007         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 45020  01BA5C  0012               	return		;funcret
 45021  01BA5E                     __end_ofi2___lwdiv:
 45022                           	opt callstack 0
 45023                           
 45024 ;; *************** function i2__tdiv_to_l_ *****************
 45025 ;; Defined at:
 45026 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
 45027 ;; Parameters:    Size  Location     Type
 45028 ;;  f1              4    0[COMRAM] float 
 45029 ;;  f2              4    4[COMRAM] float 
 45030 ;; Auto vars:     Size  Location     Type
 45031 ;;  _tdiv_to_l_     4   11[COMRAM] unsigned long 
 45032 ;;  _tdiv_to_l_     1   16[COMRAM] unsigned char 
 45033 ;;  _tdiv_to_l_     1   15[COMRAM] unsigned char 
 45034 ;; Return value:  Size  Location     Type
 45035 ;;                  4    0[COMRAM] unsigned long 
 45036 ;; Registers used:
 45037 ;;		wreg, status,2, status,0
 45038 ;; Tracked objects:
 45039 ;;		On entry : 0/0
 45040 ;;		On exit  : 0/0
 45041 ;;		Unchanged: 0/0
 45042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45043 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45044 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45045 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45046 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45047 ;;Total ram usage:       17 bytes
 45048 ;; Hardware stack levels used:    1
 45049 ;; This function calls:
 45050 ;;		Nothing
 45051 ;; This function is called by:
 45052 ;;		i2__doprnt
 45053 ;; This function uses a non-reentrant model
 45054 ;;
 45055                           
 45056                           	psect	text190
 45057  01A1FA                     __ptext190:
 45058                           	opt callstack 0
 45059  01A1FA                     i2__tdiv_to_l_:
 45060                           	opt callstack 13
 45061                           
 45062                           ;incstack = 0
 45063  01A1FA  C003  F009         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 45064  01A1FE  6A0A               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 45065  01A200  6A0B               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 45066  01A202  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 45067  01A204  3609               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 45068  01A206  E301               	bnc	u2509_41
 45069  01A208  800A               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 45070  01A20A                     u2509_41:
 45071  01A20A  5009               	movf	??i2__tdiv_to_l_,w,c
 45072  01A20C  6E11               	movwf	i2__tdiv_to_l_@exp1,c
 45073  01A20E  5011               	movf	i2__tdiv_to_l_@exp1,w,c
 45074  01A210  A4D8               	btfss	status,2,c
 45075  01A212  D009               	goto	i2l19740
 45076  01A214                     i2u2510_40:
 45077  01A214  0E00               	movlw	0
 45078  01A216  6E01               	movwf	?i2__tdiv_to_l_,c
 45079  01A218  0E00               	movlw	0
 45080  01A21A  6E02               	movwf	?i2__tdiv_to_l_+1,c
 45081  01A21C  0E00               	movlw	0
 45082  01A21E  6E03               	movwf	?i2__tdiv_to_l_+2,c
 45083  01A220  0E00               	movlw	0
 45084  01A222  6E04               	movwf	?i2__tdiv_to_l_+3,c
 45085  01A224  0012               	return	
 45086  01A226                     i2l19740:
 45087  01A226  C007  F009         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 45088  01A22A  6A0A               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 45089  01A22C  6A0B               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 45090  01A22E  3406               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 45091  01A230  3609               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 45092  01A232  E301               	bnc	u2511_41
 45093  01A234  800A               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 45094  01A236                     u2511_41:
 45095  01A236  5009               	movf	??i2__tdiv_to_l_,w,c
 45096  01A238  6E10               	movwf	i2__tdiv_to_l_@cntr,c
 45097  01A23A  5010               	movf	i2__tdiv_to_l_@cntr,w,c
 45098  01A23C  B4D8               	btfsc	status,2,c
 45099  01A23E  D7EA               	goto	i2u2510_40
 45100  01A240  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 45101  01A242  0EFF               	movlw	255
 45102  01A244  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 45103  01A246  0EFF               	movlw	255
 45104  01A248  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 45105  01A24A  0E00               	movlw	0
 45106  01A24C  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 45107  01A24E  8E06               	bsf	i2__tdiv_to_l_@f2+1,7,c
 45108  01A250  0EFF               	movlw	255
 45109  01A252  1605               	andwf	i2__tdiv_to_l_@f2,f,c
 45110  01A254  0EFF               	movlw	255
 45111  01A256  1606               	andwf	i2__tdiv_to_l_@f2+1,f,c
 45112  01A258  0E00               	movlw	0
 45113  01A25A  1607               	andwf	i2__tdiv_to_l_@f2+2,f,c
 45114  01A25C  0E00               	movlw	0
 45115  01A25E  6E0C               	movwf	i2__tdiv_to_l_@quot,c
 45116  01A260  0E00               	movlw	0
 45117  01A262  6E0D               	movwf	i2__tdiv_to_l_@quot+1,c
 45118  01A264  0E00               	movlw	0
 45119  01A266  6E0E               	movwf	i2__tdiv_to_l_@quot+2,c
 45120  01A268  0E00               	movlw	0
 45121  01A26A  6E0F               	movwf	i2__tdiv_to_l_@quot+3,c
 45122  01A26C  0E7F               	movlw	127
 45123  01A26E  5E11               	subwf	i2__tdiv_to_l_@exp1,f,c
 45124  01A270  5010               	movf	i2__tdiv_to_l_@cntr,w,c
 45125  01A272  0F98               	addlw	152
 45126  01A274  5E11               	subwf	i2__tdiv_to_l_@exp1,f,c
 45127  01A276  0E18               	movlw	24
 45128  01A278  6E10               	movwf	i2__tdiv_to_l_@cntr,c
 45129  01A27A                     i2l3020:
 45130  01A27A  90D8               	bcf	status,0,c
 45131  01A27C  360C               	rlcf	i2__tdiv_to_l_@quot,f,c
 45132  01A27E  360D               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 45133  01A280  360E               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 45134  01A282  360F               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 45135  01A284  5005               	movf	i2__tdiv_to_l_@f2,w,c
 45136  01A286  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 45137  01A288  5006               	movf	i2__tdiv_to_l_@f2+1,w,c
 45138  01A28A  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 45139  01A28C  5007               	movf	i2__tdiv_to_l_@f2+2,w,c
 45140  01A28E  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 45141  01A290  A0D8               	btfss	status,0,c
 45142  01A292  D007               	goto	i2l3021
 45143  01A294  5005               	movf	i2__tdiv_to_l_@f2,w,c
 45144  01A296  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 45145  01A298  5006               	movf	i2__tdiv_to_l_@f2+1,w,c
 45146  01A29A  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 45147  01A29C  5007               	movf	i2__tdiv_to_l_@f2+2,w,c
 45148  01A29E  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 45149  01A2A0  800C               	bsf	i2__tdiv_to_l_@quot,0,c
 45150  01A2A2                     i2l3021:
 45151  01A2A2  90D8               	bcf	status,0,c
 45152  01A2A4  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 45153  01A2A6  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 45154  01A2A8  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 45155  01A2AA  2E10               	decfsz	i2__tdiv_to_l_@cntr,f,c
 45156  01A2AC  D7E6               	goto	i2l3020
 45157  01A2AE  AE11               	btfss	i2__tdiv_to_l_@exp1,7,c
 45158  01A2B0  D00D               	goto	i2l19780
 45159  01A2B2  5011               	movf	i2__tdiv_to_l_@exp1,w,c
 45160  01A2B4  0A80               	xorlw	128
 45161  01A2B6  0F97               	addlw	151
 45162  01A2B8  A0D8               	btfss	status,0,c
 45163  01A2BA  D7AC               	goto	i2u2510_40
 45164  01A2BC                     i2l19776:
 45165  01A2BC  90D8               	bcf	status,0,c
 45166  01A2BE  320F               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 45167  01A2C0  320E               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 45168  01A2C2  320D               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 45169  01A2C4  320C               	rrcf	i2__tdiv_to_l_@quot,f,c
 45170  01A2C6  3E11               	incfsz	i2__tdiv_to_l_@exp1,f,c
 45171  01A2C8  D7F9               	goto	i2l19776
 45172  01A2CA  D00D               	goto	i2u2517_40
 45173  01A2CC                     i2l19780:
 45174  01A2CC  0E17               	movlw	23
 45175  01A2CE  6411               	cpfsgt	i2__tdiv_to_l_@exp1,c
 45176  01A2D0  D007               	goto	i2l19788
 45177  01A2D2  D7A0               	goto	i2u2510_40
 45178  01A2D4                     i2l19786:
 45179  01A2D4  90D8               	bcf	status,0,c
 45180  01A2D6  360C               	rlcf	i2__tdiv_to_l_@quot,f,c
 45181  01A2D8  360D               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 45182  01A2DA  360E               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 45183  01A2DC  360F               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 45184  01A2DE  0611               	decf	i2__tdiv_to_l_@exp1,f,c
 45185  01A2E0                     i2l19788:
 45186  01A2E0  5011               	movf	i2__tdiv_to_l_@exp1,w,c
 45187  01A2E2  A4D8               	btfss	status,2,c
 45188  01A2E4  D7F7               	goto	i2l19786
 45189  01A2E6                     i2u2517_40:
 45190  01A2E6  C00C  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 45191  01A2EA  C00D  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 45192  01A2EE  C00E  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 45193  01A2F2  C00F  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 45194  01A2F6  0012               	return		;funcret
 45195  01A2F8                     __end_ofi2__tdiv_to_l_:
 45196                           	opt callstack 0
 45197                           
 45198 ;; *************** function i2__div_to_l_ *****************
 45199 ;; Defined at:
 45200 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
 45201 ;; Parameters:    Size  Location     Type
 45202 ;;  f1              4    0[COMRAM] unsigned long 
 45203 ;;  f2              4    4[COMRAM] unsigned long 
 45204 ;; Auto vars:     Size  Location     Type
 45205 ;;  _div_to_l_      4    8[COMRAM] unsigned long 
 45206 ;;  _div_to_l_      1   13[COMRAM] unsigned char 
 45207 ;;  _div_to_l_      1   12[COMRAM] unsigned char 
 45208 ;; Return value:  Size  Location     Type
 45209 ;;                  4    0[COMRAM] unsigned long 
 45210 ;; Registers used:
 45211 ;;		wreg, status,2, status,0
 45212 ;; Tracked objects:
 45213 ;;		On entry : 0/0
 45214 ;;		On exit  : 0/0
 45215 ;;		Unchanged: 0/0
 45216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45217 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45218 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45220 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45221 ;;Total ram usage:       14 bytes
 45222 ;; Hardware stack levels used:    1
 45223 ;; This function calls:
 45224 ;;		Nothing
 45225 ;; This function is called by:
 45226 ;;		i2__doprnt
 45227 ;; This function uses a non-reentrant model
 45228 ;;
 45229                           
 45230                           	psect	text191
 45231  01A4E2                     __ptext191:
 45232                           	opt callstack 0
 45233  01A4E2                     i2__div_to_l_:
 45234                           	opt callstack 13
 45235                           
 45236                           ;incstack = 0
 45237  01A4E2  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 45238  01A4E4  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 45239  01A4E6  6E0E               	movwf	i2__div_to_l_@exp1,c
 45240  01A4E8  500E               	movf	i2__div_to_l_@exp1,w,c
 45241  01A4EA  A4D8               	btfss	status,2,c
 45242  01A4EC  D009               	goto	i2l19590
 45243  01A4EE                     i2u2486_40:
 45244  01A4EE  0E00               	movlw	0
 45245  01A4F0  6E01               	movwf	?i2__div_to_l_,c
 45246  01A4F2  0E00               	movlw	0
 45247  01A4F4  6E02               	movwf	?i2__div_to_l_+1,c
 45248  01A4F6  0E00               	movlw	0
 45249  01A4F8  6E03               	movwf	?i2__div_to_l_+2,c
 45250  01A4FA  0E00               	movlw	0
 45251  01A4FC  6E04               	movwf	?i2__div_to_l_+3,c
 45252  01A4FE  0012               	return	
 45253  01A500                     i2l19590:
 45254  01A500  3407               	rlcf	i2__div_to_l_@f2+2,w,c
 45255  01A502  3408               	rlcf	i2__div_to_l_@f2+3,w,c
 45256  01A504  6E0D               	movwf	i2__div_to_l_@cntr,c
 45257  01A506  500D               	movf	i2__div_to_l_@cntr,w,c
 45258  01A508  B4D8               	btfsc	status,2,c
 45259  01A50A  D7F1               	goto	i2u2486_40
 45260  01A50C  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 45261  01A50E  0EFF               	movlw	255
 45262  01A510  1601               	andwf	i2__div_to_l_@f1,f,c
 45263  01A512  0EFF               	movlw	255
 45264  01A514  1602               	andwf	i2__div_to_l_@f1+1,f,c
 45265  01A516  0EFF               	movlw	255
 45266  01A518  1603               	andwf	i2__div_to_l_@f1+2,f,c
 45267  01A51A  0E00               	movlw	0
 45268  01A51C  1604               	andwf	i2__div_to_l_@f1+3,f,c
 45269  01A51E  8E07               	bsf	i2__div_to_l_@f2+2,7,c
 45270  01A520  0EFF               	movlw	255
 45271  01A522  1605               	andwf	i2__div_to_l_@f2,f,c
 45272  01A524  0EFF               	movlw	255
 45273  01A526  1606               	andwf	i2__div_to_l_@f2+1,f,c
 45274  01A528  0EFF               	movlw	255
 45275  01A52A  1607               	andwf	i2__div_to_l_@f2+2,f,c
 45276  01A52C  0E00               	movlw	0
 45277  01A52E  1608               	andwf	i2__div_to_l_@f2+3,f,c
 45278  01A530  0E00               	movlw	0
 45279  01A532  6E09               	movwf	i2__div_to_l_@quot,c
 45280  01A534  0E00               	movlw	0
 45281  01A536  6E0A               	movwf	i2__div_to_l_@quot+1,c
 45282  01A538  0E00               	movlw	0
 45283  01A53A  6E0B               	movwf	i2__div_to_l_@quot+2,c
 45284  01A53C  0E00               	movlw	0
 45285  01A53E  6E0C               	movwf	i2__div_to_l_@quot+3,c
 45286  01A540  0E7F               	movlw	127
 45287  01A542  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 45288  01A544  500D               	movf	i2__div_to_l_@cntr,w,c
 45289  01A546  0FA0               	addlw	160
 45290  01A548  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 45291  01A54A  0E20               	movlw	32
 45292  01A54C  6E0D               	movwf	i2__div_to_l_@cntr,c
 45293  01A54E                     i2l19610:
 45294  01A54E  90D8               	bcf	status,0,c
 45295  01A550  3609               	rlcf	i2__div_to_l_@quot,f,c
 45296  01A552  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 45297  01A554  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 45298  01A556  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 45299  01A558  5005               	movf	i2__div_to_l_@f2,w,c
 45300  01A55A  5C01               	subwf	i2__div_to_l_@f1,w,c
 45301  01A55C  5006               	movf	i2__div_to_l_@f2+1,w,c
 45302  01A55E  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 45303  01A560  5007               	movf	i2__div_to_l_@f2+2,w,c
 45304  01A562  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 45305  01A564  5008               	movf	i2__div_to_l_@f2+3,w,c
 45306  01A566  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 45307  01A568  A0D8               	btfss	status,0,c
 45308  01A56A  D009               	goto	i2l19618
 45309  01A56C  5005               	movf	i2__div_to_l_@f2,w,c
 45310  01A56E  5E01               	subwf	i2__div_to_l_@f1,f,c
 45311  01A570  5006               	movf	i2__div_to_l_@f2+1,w,c
 45312  01A572  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 45313  01A574  5007               	movf	i2__div_to_l_@f2+2,w,c
 45314  01A576  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 45315  01A578  5008               	movf	i2__div_to_l_@f2+3,w,c
 45316  01A57A  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 45317  01A57C  8009               	bsf	i2__div_to_l_@quot,0,c
 45318  01A57E                     i2l19618:
 45319  01A57E  90D8               	bcf	status,0,c
 45320  01A580  3601               	rlcf	i2__div_to_l_@f1,f,c
 45321  01A582  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 45322  01A584  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 45323  01A586  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 45324  01A588  2E0D               	decfsz	i2__div_to_l_@cntr,f,c
 45325  01A58A  D7E1               	goto	i2l19610
 45326  01A58C  AE0E               	btfss	i2__div_to_l_@exp1,7,c
 45327  01A58E  D00D               	goto	i2l19634
 45328  01A590  500E               	movf	i2__div_to_l_@exp1,w,c
 45329  01A592  0A80               	xorlw	128
 45330  01A594  0F9F               	addlw	159
 45331  01A596  A0D8               	btfss	status,0,c
 45332  01A598  D7AA               	goto	i2u2486_40
 45333  01A59A                     i2l19630:
 45334  01A59A  90D8               	bcf	status,0,c
 45335  01A59C  320C               	rrcf	i2__div_to_l_@quot+3,f,c
 45336  01A59E  320B               	rrcf	i2__div_to_l_@quot+2,f,c
 45337  01A5A0  320A               	rrcf	i2__div_to_l_@quot+1,f,c
 45338  01A5A2  3209               	rrcf	i2__div_to_l_@quot,f,c
 45339  01A5A4  3E0E               	incfsz	i2__div_to_l_@exp1,f,c
 45340  01A5A6  D7F9               	goto	i2l19630
 45341  01A5A8  D00D               	goto	i2u2492_40
 45342  01A5AA                     i2l19634:
 45343  01A5AA  0E1F               	movlw	31
 45344  01A5AC  640E               	cpfsgt	i2__div_to_l_@exp1,c
 45345  01A5AE  D007               	goto	i2l19642
 45346  01A5B0  D79E               	goto	i2u2486_40
 45347  01A5B2                     i2l19640:
 45348  01A5B2  90D8               	bcf	status,0,c
 45349  01A5B4  3609               	rlcf	i2__div_to_l_@quot,f,c
 45350  01A5B6  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 45351  01A5B8  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 45352  01A5BA  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 45353  01A5BC  060E               	decf	i2__div_to_l_@exp1,f,c
 45354  01A5BE                     i2l19642:
 45355  01A5BE  500E               	movf	i2__div_to_l_@exp1,w,c
 45356  01A5C0  A4D8               	btfss	status,2,c
 45357  01A5C2  D7F7               	goto	i2l19640
 45358  01A5C4                     i2u2492_40:
 45359  01A5C4  C009  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 45360  01A5C8  C00A  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 45361  01A5CC  C00B  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 45362  01A5D0  C00C  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 45363  01A5D4  0012               	return		;funcret
 45364  01A5D6                     __end_ofi2__div_to_l_:
 45365                           	opt callstack 0
 45366                           
 45367 ;; *************** function i2___wmul *****************
 45368 ;; Defined at:
 45369 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 45370 ;; Parameters:    Size  Location     Type
 45371 ;;  multiplier      2    0[COMRAM] unsigned int 
 45372 ;;  multiplicand    2    2[COMRAM] unsigned int 
 45373 ;; Auto vars:     Size  Location     Type
 45374 ;;  __wmul          2    4[COMRAM] unsigned int 
 45375 ;; Return value:  Size  Location     Type
 45376 ;;                  2    0[COMRAM] unsigned int 
 45377 ;; Registers used:
 45378 ;;		wreg, status,2, status,0, prodl, prodh
 45379 ;; Tracked objects:
 45380 ;;		On entry : 0/0
 45381 ;;		On exit  : 0/0
 45382 ;;		Unchanged: 0/0
 45383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45384 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45385 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45387 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45388 ;;Total ram usage:        6 bytes
 45389 ;; Hardware stack levels used:    1
 45390 ;; This function calls:
 45391 ;;		Nothing
 45392 ;; This function is called by:
 45393 ;;		i2__doprnt
 45394 ;; This function uses a non-reentrant model
 45395 ;;
 45396                           
 45397                           	psect	text192
 45398  01C5B8                     __ptext192:
 45399                           	opt callstack 0
 45400  01C5B8                     i2___wmul:
 45401                           	opt callstack 13
 45402                           
 45403                           ;incstack = 0
 45404  01C5B8  5001               	movf	i2___wmul@multiplier,w,c
 45405  01C5BA  0203               	mulwf	i2___wmul@multiplicand,c
 45406  01C5BC  CFF3 F005          	movff	prodl,i2___wmul@product
 45407  01C5C0  CFF4 F006          	movff	prodh,i2___wmul@product+1
 45408  01C5C4  5001               	movf	i2___wmul@multiplier,w,c
 45409  01C5C6  0204               	mulwf	i2___wmul@multiplicand+1,c
 45410  01C5C8  50F3               	movf	prodl,w,c
 45411  01C5CA  2606               	addwf	i2___wmul@product+1,f,c
 45412  01C5CC  5002               	movf	i2___wmul@multiplier+1,w,c
 45413  01C5CE  0203               	mulwf	i2___wmul@multiplicand,c
 45414  01C5D0  50F3               	movf	prodl,w,c
 45415  01C5D2  2606               	addwf	i2___wmul@product+1,f,c
 45416  01C5D4  C005  F001         	movff	i2___wmul@product,?i2___wmul
 45417  01C5D8  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 45418  01C5DC  0012               	return		;funcret
 45419  01C5DE                     __end_ofi2___wmul:
 45420                           	opt callstack 0
 45421                           
 45422 ;; *************** function i2___llmod *****************
 45423 ;; Defined at:
 45424 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
 45425 ;; Parameters:    Size  Location     Type
 45426 ;;  dividend        4   13[COMRAM] unsigned long 
 45427 ;;  divisor         4   17[COMRAM] unsigned long 
 45428 ;; Auto vars:     Size  Location     Type
 45429 ;;  __llmod         1   21[COMRAM] unsigned char 
 45430 ;; Return value:  Size  Location     Type
 45431 ;;                  4   13[COMRAM] unsigned long 
 45432 ;; Registers used:
 45433 ;;		wreg, status,2, status,0
 45434 ;; Tracked objects:
 45435 ;;		On entry : 0/0
 45436 ;;		On exit  : 0/0
 45437 ;;		Unchanged: 0/0
 45438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45439 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45442 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45443 ;;Total ram usage:        9 bytes
 45444 ;; Hardware stack levels used:    1
 45445 ;; This function calls:
 45446 ;;		Nothing
 45447 ;; This function is called by:
 45448 ;;		_heartbeatTimerHandler
 45449 ;;		i2__doprnt
 45450 ;; This function uses a non-reentrant model
 45451 ;;
 45452                           
 45453                           	psect	text193
 45454  01B6D8                     __ptext193:
 45455                           	opt callstack 0
 45456  01B6D8                     i2___llmod:
 45457                           	opt callstack 14
 45458                           
 45459                           ;incstack = 0
 45460  01B6D8  5012               	movf	i2___llmod@divisor,w,c
 45461  01B6DA  1013               	iorwf	i2___llmod@divisor+1,w,c
 45462  01B6DC  1014               	iorwf	i2___llmod@divisor+2,w,c
 45463  01B6DE  1015               	iorwf	i2___llmod@divisor+3,w,c
 45464  01B6E0  B4D8               	btfsc	status,2,c
 45465  01B6E2  D024               	goto	i2l3097
 45466  01B6E4  0E01               	movlw	1
 45467  01B6E6  6E16               	movwf	i2___llmod@counter,c
 45468  01B6E8  D006               	goto	i2l19796
 45469  01B6EA                     i2l19794:
 45470  01B6EA  90D8               	bcf	status,0,c
 45471  01B6EC  3612               	rlcf	i2___llmod@divisor,f,c
 45472  01B6EE  3613               	rlcf	i2___llmod@divisor+1,f,c
 45473  01B6F0  3614               	rlcf	i2___llmod@divisor+2,f,c
 45474  01B6F2  3615               	rlcf	i2___llmod@divisor+3,f,c
 45475  01B6F4  2A16               	incf	i2___llmod@counter,f,c
 45476  01B6F6                     i2l19796:
 45477  01B6F6  AE15               	btfss	i2___llmod@divisor+3,7,c
 45478  01B6F8  D7F8               	goto	i2l19794
 45479  01B6FA                     i2u2519_40:
 45480  01B6FA  5012               	movf	i2___llmod@divisor,w,c
 45481  01B6FC  5C0E               	subwf	i2___llmod@dividend,w,c
 45482  01B6FE  5013               	movf	i2___llmod@divisor+1,w,c
 45483  01B700  580F               	subwfb	i2___llmod@dividend+1,w,c
 45484  01B702  5014               	movf	i2___llmod@divisor+2,w,c
 45485  01B704  5810               	subwfb	i2___llmod@dividend+2,w,c
 45486  01B706  5015               	movf	i2___llmod@divisor+3,w,c
 45487  01B708  5811               	subwfb	i2___llmod@dividend+3,w,c
 45488  01B70A  A0D8               	btfss	status,0,c
 45489  01B70C  D008               	goto	i2l19802
 45490  01B70E  5012               	movf	i2___llmod@divisor,w,c
 45491  01B710  5E0E               	subwf	i2___llmod@dividend,f,c
 45492  01B712  5013               	movf	i2___llmod@divisor+1,w,c
 45493  01B714  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 45494  01B716  5014               	movf	i2___llmod@divisor+2,w,c
 45495  01B718  5A10               	subwfb	i2___llmod@dividend+2,f,c
 45496  01B71A  5015               	movf	i2___llmod@divisor+3,w,c
 45497  01B71C  5A11               	subwfb	i2___llmod@dividend+3,f,c
 45498  01B71E                     i2l19802:
 45499  01B71E  90D8               	bcf	status,0,c
 45500  01B720  3215               	rrcf	i2___llmod@divisor+3,f,c
 45501  01B722  3214               	rrcf	i2___llmod@divisor+2,f,c
 45502  01B724  3213               	rrcf	i2___llmod@divisor+1,f,c
 45503  01B726  3212               	rrcf	i2___llmod@divisor,f,c
 45504  01B728  2E16               	decfsz	i2___llmod@counter,f,c
 45505  01B72A  D7E7               	goto	i2u2519_40
 45506  01B72C                     i2l3097:
 45507  01B72C  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 45508  01B730  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 45509  01B734  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 45510  01B738  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 45511  01B73C  0012               	return		;funcret
 45512  01B73E                     __end_ofi2___llmod:
 45513                           	opt callstack 0
 45514                           
 45515 ;; *************** function i2___lldiv *****************
 45516 ;; Defined at:
 45517 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
 45518 ;; Parameters:    Size  Location     Type
 45519 ;;  dividend        4    0[COMRAM] unsigned long 
 45520 ;;  divisor         4    4[COMRAM] unsigned long 
 45521 ;; Auto vars:     Size  Location     Type
 45522 ;;  __lldiv         4    8[COMRAM] unsigned long 
 45523 ;;  __lldiv         1   12[COMRAM] unsigned char 
 45524 ;; Return value:  Size  Location     Type
 45525 ;;                  4    0[COMRAM] unsigned long 
 45526 ;; Registers used:
 45527 ;;		wreg, status,2, status,0
 45528 ;; Tracked objects:
 45529 ;;		On entry : 0/0
 45530 ;;		On exit  : 0/0
 45531 ;;		Unchanged: 0/0
 45532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45533 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45534 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45536 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45537 ;;Total ram usage:       13 bytes
 45538 ;; Hardware stack levels used:    1
 45539 ;; This function calls:
 45540 ;;		Nothing
 45541 ;; This function is called by:
 45542 ;;		i2__doprnt
 45543 ;; This function uses a non-reentrant model
 45544 ;;
 45545                           
 45546                           	psect	text194
 45547  01B3DA                     __ptext194:
 45548                           	opt callstack 0
 45549  01B3DA                     i2___lldiv:
 45550                           	opt callstack 13
 45551                           
 45552                           ;incstack = 0
 45553  01B3DA  0E00               	movlw	0
 45554  01B3DC  6E09               	movwf	i2___lldiv@quotient,c
 45555  01B3DE  0E00               	movlw	0
 45556  01B3E0  6E0A               	movwf	i2___lldiv@quotient+1,c
 45557  01B3E2  0E00               	movlw	0
 45558  01B3E4  6E0B               	movwf	i2___lldiv@quotient+2,c
 45559  01B3E6  0E00               	movlw	0
 45560  01B3E8  6E0C               	movwf	i2___lldiv@quotient+3,c
 45561  01B3EA  5005               	movf	i2___lldiv@divisor,w,c
 45562  01B3EC  1006               	iorwf	i2___lldiv@divisor+1,w,c
 45563  01B3EE  1007               	iorwf	i2___lldiv@divisor+2,w,c
 45564  01B3F0  1008               	iorwf	i2___lldiv@divisor+3,w,c
 45565  01B3F2  B4D8               	btfsc	status,2,c
 45566  01B3F4  D02A               	goto	i2l2682
 45567  01B3F6  0E01               	movlw	1
 45568  01B3F8  6E0D               	movwf	i2___lldiv@counter,c
 45569  01B3FA  D006               	goto	i2l19570
 45570  01B3FC                     i2l19568:
 45571  01B3FC  90D8               	bcf	status,0,c
 45572  01B3FE  3605               	rlcf	i2___lldiv@divisor,f,c
 45573  01B400  3606               	rlcf	i2___lldiv@divisor+1,f,c
 45574  01B402  3607               	rlcf	i2___lldiv@divisor+2,f,c
 45575  01B404  3608               	rlcf	i2___lldiv@divisor+3,f,c
 45576  01B406  2A0D               	incf	i2___lldiv@counter,f,c
 45577  01B408                     i2l19570:
 45578  01B408  AE08               	btfss	i2___lldiv@divisor+3,7,c
 45579  01B40A  D7F8               	goto	i2l19568
 45580  01B40C                     i2u2484_40:
 45581  01B40C  90D8               	bcf	status,0,c
 45582  01B40E  3609               	rlcf	i2___lldiv@quotient,f,c
 45583  01B410  360A               	rlcf	i2___lldiv@quotient+1,f,c
 45584  01B412  360B               	rlcf	i2___lldiv@quotient+2,f,c
 45585  01B414  360C               	rlcf	i2___lldiv@quotient+3,f,c
 45586  01B416  5005               	movf	i2___lldiv@divisor,w,c
 45587  01B418  5C01               	subwf	i2___lldiv@dividend,w,c
 45588  01B41A  5006               	movf	i2___lldiv@divisor+1,w,c
 45589  01B41C  5802               	subwfb	i2___lldiv@dividend+1,w,c
 45590  01B41E  5007               	movf	i2___lldiv@divisor+2,w,c
 45591  01B420  5803               	subwfb	i2___lldiv@dividend+2,w,c
 45592  01B422  5008               	movf	i2___lldiv@divisor+3,w,c
 45593  01B424  5804               	subwfb	i2___lldiv@dividend+3,w,c
 45594  01B426  A0D8               	btfss	status,0,c
 45595  01B428  D009               	goto	i2l19580
 45596  01B42A  5005               	movf	i2___lldiv@divisor,w,c
 45597  01B42C  5E01               	subwf	i2___lldiv@dividend,f,c
 45598  01B42E  5006               	movf	i2___lldiv@divisor+1,w,c
 45599  01B430  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 45600  01B432  5007               	movf	i2___lldiv@divisor+2,w,c
 45601  01B434  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 45602  01B436  5008               	movf	i2___lldiv@divisor+3,w,c
 45603  01B438  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 45604  01B43A  8009               	bsf	i2___lldiv@quotient,0,c
 45605  01B43C                     i2l19580:
 45606  01B43C  90D8               	bcf	status,0,c
 45607  01B43E  3208               	rrcf	i2___lldiv@divisor+3,f,c
 45608  01B440  3207               	rrcf	i2___lldiv@divisor+2,f,c
 45609  01B442  3206               	rrcf	i2___lldiv@divisor+1,f,c
 45610  01B444  3205               	rrcf	i2___lldiv@divisor,f,c
 45611  01B446  2E0D               	decfsz	i2___lldiv@counter,f,c
 45612  01B448  D7E1               	goto	i2u2484_40
 45613  01B44A                     i2l2682:
 45614  01B44A  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 45615  01B44E  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 45616  01B452  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 45617  01B456  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 45618  01B45A  0012               	return		;funcret
 45619  01B45C                     __end_ofi2___lldiv:
 45620                           	opt callstack 0
 45621                           
 45622 ;; *************** function i2___fltol *****************
 45623 ;; Defined at:
 45624 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
 45625 ;; Parameters:    Size  Location     Type
 45626 ;;  f1              4   77[COMRAM] unsigned long 
 45627 ;; Auto vars:     Size  Location     Type
 45628 ;;  __fltol         1   86[COMRAM] unsigned char 
 45629 ;;  __fltol         1   85[COMRAM] unsigned char 
 45630 ;; Return value:  Size  Location     Type
 45631 ;;                  4   77[COMRAM] long 
 45632 ;; Registers used:
 45633 ;;		wreg, status,2, status,0
 45634 ;; Tracked objects:
 45635 ;;		On entry : 0/0
 45636 ;;		On exit  : 0/0
 45637 ;;		Unchanged: 0/0
 45638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45639 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45640 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45641 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45642 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45643 ;;Total ram usage:       10 bytes
 45644 ;; Hardware stack levels used:    1
 45645 ;; This function calls:
 45646 ;;		Nothing
 45647 ;; This function is called by:
 45648 ;;		i2__doprnt
 45649 ;; This function uses a non-reentrant model
 45650 ;;
 45651                           
 45652                           	psect	text195
 45653  01AB7E                     __ptext195:
 45654                           	opt callstack 0
 45655  01AB7E                     i2___fltol:
 45656                           	opt callstack 13
 45657                           
 45658                           ;incstack = 0
 45659  01AB7E  3450               	rlcf	i2___fltol@f1+2,w,c
 45660  01AB80  3451               	rlcf	i2___fltol@f1+3,w,c
 45661  01AB82  6E57               	movwf	i2___fltol@exp1,c
 45662  01AB84  5057               	movf	i2___fltol@exp1,w,c
 45663  01AB86  A4D8               	btfss	status,2,c
 45664  01AB88  D009               	goto	i2l19696
 45665  01AB8A                     i2u2502_40:
 45666  01AB8A  0E00               	movlw	0
 45667  01AB8C  6E4E               	movwf	?i2___fltol,c
 45668  01AB8E  0E00               	movlw	0
 45669  01AB90  6E4F               	movwf	?i2___fltol+1,c
 45670  01AB92  0E00               	movlw	0
 45671  01AB94  6E50               	movwf	?i2___fltol+2,c
 45672  01AB96  0E00               	movlw	0
 45673  01AB98  6E51               	movwf	?i2___fltol+3,c
 45674  01AB9A  0012               	return	
 45675  01AB9C                     i2l19696:
 45676  01AB9C  C04E  F052         	movff	i2___fltol@f1,??i2___fltol
 45677  01ABA0  C04F  F053         	movff	i2___fltol@f1+1,??i2___fltol+1
 45678  01ABA4  C050  F054         	movff	i2___fltol@f1+2,??i2___fltol+2
 45679  01ABA8  C051  F055         	movff	i2___fltol@f1+3,??i2___fltol+3
 45680  01ABAC  0E20               	movlw	32
 45681  01ABAE  D005               	goto	i2u2503_40
 45682  01ABB0                     i2u2503_45:
 45683  01ABB0  90D8               	bcf	status,0,c
 45684  01ABB2  3255               	rrcf	??i2___fltol+3,f,c
 45685  01ABB4  3254               	rrcf	??i2___fltol+2,f,c
 45686  01ABB6  3253               	rrcf	??i2___fltol+1,f,c
 45687  01ABB8  3252               	rrcf	??i2___fltol,f,c
 45688  01ABBA                     i2u2503_40:
 45689  01ABBA  2EE8               	decfsz	wreg,f,c
 45690  01ABBC  D7F9               	goto	i2u2503_45
 45691  01ABBE  5052               	movf	??i2___fltol,w,c
 45692  01ABC0  6E56               	movwf	i2___fltol@sign1,c
 45693  01ABC2  8E50               	bsf	i2___fltol@f1+2,7,c
 45694  01ABC4  0EFF               	movlw	255
 45695  01ABC6  164E               	andwf	i2___fltol@f1,f,c
 45696  01ABC8  0EFF               	movlw	255
 45697  01ABCA  164F               	andwf	i2___fltol@f1+1,f,c
 45698  01ABCC  0EFF               	movlw	255
 45699  01ABCE  1650               	andwf	i2___fltol@f1+2,f,c
 45700  01ABD0  0E00               	movlw	0
 45701  01ABD2  1651               	andwf	i2___fltol@f1+3,f,c
 45702  01ABD4  0E96               	movlw	150
 45703  01ABD6  5E57               	subwf	i2___fltol@exp1,f,c
 45704  01ABD8  AE57               	btfss	i2___fltol@exp1,7,c
 45705  01ABDA  D00D               	goto	i2l19716
 45706  01ABDC  5057               	movf	i2___fltol@exp1,w,c
 45707  01ABDE  0A80               	xorlw	128
 45708  01ABE0  0F97               	addlw	151
 45709  01ABE2  A0D8               	btfss	status,0,c
 45710  01ABE4  D7D2               	goto	i2u2502_40
 45711  01ABE6                     i2l19712:
 45712  01ABE6  90D8               	bcf	status,0,c
 45713  01ABE8  3251               	rrcf	i2___fltol@f1+3,f,c
 45714  01ABEA  3250               	rrcf	i2___fltol@f1+2,f,c
 45715  01ABEC  324F               	rrcf	i2___fltol@f1+1,f,c
 45716  01ABEE  324E               	rrcf	i2___fltol@f1,f,c
 45717  01ABF0  3E57               	incfsz	i2___fltol@exp1,f,c
 45718  01ABF2  D7F9               	goto	i2l19712
 45719  01ABF4  D00D               	goto	i2u2507_40
 45720  01ABF6                     i2l19716:
 45721  01ABF6  0E1F               	movlw	31
 45722  01ABF8  6457               	cpfsgt	i2___fltol@exp1,c
 45723  01ABFA  D007               	goto	i2l19724
 45724  01ABFC  D7C6               	goto	i2u2502_40
 45725  01ABFE                     i2l19722:
 45726  01ABFE  90D8               	bcf	status,0,c
 45727  01AC00  364E               	rlcf	i2___fltol@f1,f,c
 45728  01AC02  364F               	rlcf	i2___fltol@f1+1,f,c
 45729  01AC04  3650               	rlcf	i2___fltol@f1+2,f,c
 45730  01AC06  3651               	rlcf	i2___fltol@f1+3,f,c
 45731  01AC08  0657               	decf	i2___fltol@exp1,f,c
 45732  01AC0A                     i2l19724:
 45733  01AC0A  5057               	movf	i2___fltol@exp1,w,c
 45734  01AC0C  A4D8               	btfss	status,2,c
 45735  01AC0E  D7F7               	goto	i2l19722
 45736  01AC10                     i2u2507_40:
 45737  01AC10  5056               	movf	i2___fltol@sign1,w,c
 45738  01AC12  B4D8               	btfsc	status,2,c
 45739  01AC14  D008               	goto	i2l19730
 45740  01AC16  1E51               	comf	i2___fltol@f1+3,f,c
 45741  01AC18  1E50               	comf	i2___fltol@f1+2,f,c
 45742  01AC1A  1E4F               	comf	i2___fltol@f1+1,f,c
 45743  01AC1C  6C4E               	negf	i2___fltol@f1,c
 45744  01AC1E  0E00               	movlw	0
 45745  01AC20  224F               	addwfc	i2___fltol@f1+1,f,c
 45746  01AC22  2250               	addwfc	i2___fltol@f1+2,f,c
 45747  01AC24  2251               	addwfc	i2___fltol@f1+3,f,c
 45748  01AC26                     i2l19730:
 45749  01AC26  C04E  F04E         	movff	i2___fltol@f1,?i2___fltol
 45750  01AC2A  C04F  F04F         	movff	i2___fltol@f1+1,?i2___fltol+1
 45751  01AC2E  C050  F050         	movff	i2___fltol@f1+2,?i2___fltol+2
 45752  01AC32  C051  F051         	movff	i2___fltol@f1+3,?i2___fltol+3
 45753  01AC36  0012               	return		;funcret
 45754  01AC38                     __end_ofi2___fltol:
 45755                           	opt callstack 0
 45756                           
 45757 ;; *************** function i2___fleq *****************
 45758 ;; Defined at:
 45759 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
 45760 ;; Parameters:    Size  Location     Type
 45761 ;;  ff1             4    0[COMRAM] long 
 45762 ;;  ff2             4    4[COMRAM] long 
 45763 ;; Auto vars:     Size  Location     Type
 45764 ;;		None
 45765 ;; Return value:  Size  Location     Type
 45766 ;;		None               void
 45767 ;; Registers used:
 45768 ;;		wreg, status,2, status,0
 45769 ;; Tracked objects:
 45770 ;;		On entry : 0/0
 45771 ;;		On exit  : 0/0
 45772 ;;		Unchanged: 0/0
 45773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45774 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45776 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45777 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45778 ;;Total ram usage:       12 bytes
 45779 ;; Hardware stack levels used:    1
 45780 ;; This function calls:
 45781 ;;		Nothing
 45782 ;; This function is called by:
 45783 ;;		i2__doprnt
 45784 ;; This function uses a non-reentrant model
 45785 ;;
 45786                           
 45787                           	psect	text196
 45788  01B1C2                     __ptext196:
 45789                           	opt callstack 0
 45790  01B1C2                     i2___fleq:
 45791                           	opt callstack 13
 45792                           
 45793                           ;incstack = 0
 45794  01B1C2  0E00               	movlw	0
 45795  01B1C4  1401               	andwf	i2___fleq@ff1,w,c
 45796  01B1C6  6E09               	movwf	??i2___fleq& (0+255),c
 45797  01B1C8  0E00               	movlw	0
 45798  01B1CA  1402               	andwf	i2___fleq@ff1+1,w,c
 45799  01B1CC  6E0A               	movwf	(??i2___fleq+1)& (0+255),c
 45800  01B1CE  0E80               	movlw	128
 45801  01B1D0  1403               	andwf	i2___fleq@ff1+2,w,c
 45802  01B1D2  6E0B               	movwf	(??i2___fleq+2)& (0+255),c
 45803  01B1D4  0E7F               	movlw	127
 45804  01B1D6  1404               	andwf	i2___fleq@ff1+3,w,c
 45805  01B1D8  6E0C               	movwf	(??i2___fleq+3)& (0+255),c
 45806  01B1DA  5009               	movf	??i2___fleq,w,c
 45807  01B1DC  100A               	iorwf	??i2___fleq+1,w,c
 45808  01B1DE  100B               	iorwf	??i2___fleq+2,w,c
 45809  01B1E0  100C               	iorwf	??i2___fleq+3,w,c
 45810  01B1E2  A4D8               	btfss	status,2,c
 45811  01B1E4  D008               	goto	i2l19648
 45812  01B1E6  0E00               	movlw	0
 45813  01B1E8  6E01               	movwf	i2___fleq@ff1,c
 45814  01B1EA  0E00               	movlw	0
 45815  01B1EC  6E02               	movwf	i2___fleq@ff1+1,c
 45816  01B1EE  0E00               	movlw	0
 45817  01B1F0  6E03               	movwf	i2___fleq@ff1+2,c
 45818  01B1F2  0E00               	movlw	0
 45819  01B1F4  6E04               	movwf	i2___fleq@ff1+3,c
 45820  01B1F6                     i2l19648:
 45821  01B1F6  0E00               	movlw	0
 45822  01B1F8  1405               	andwf	i2___fleq@ff2,w,c
 45823  01B1FA  6E09               	movwf	??i2___fleq& (0+255),c
 45824  01B1FC  0E00               	movlw	0
 45825  01B1FE  1406               	andwf	i2___fleq@ff2+1,w,c
 45826  01B200  6E0A               	movwf	(??i2___fleq+1)& (0+255),c
 45827  01B202  0E80               	movlw	128
 45828  01B204  1407               	andwf	i2___fleq@ff2+2,w,c
 45829  01B206  6E0B               	movwf	(??i2___fleq+2)& (0+255),c
 45830  01B208  0E7F               	movlw	127
 45831  01B20A  1408               	andwf	i2___fleq@ff2+3,w,c
 45832  01B20C  6E0C               	movwf	(??i2___fleq+3)& (0+255),c
 45833  01B20E  5009               	movf	??i2___fleq,w,c
 45834  01B210  100A               	iorwf	??i2___fleq+1,w,c
 45835  01B212  100B               	iorwf	??i2___fleq+2,w,c
 45836  01B214  100C               	iorwf	??i2___fleq+3,w,c
 45837  01B216  A4D8               	btfss	status,2,c
 45838  01B218  D008               	goto	i2l19652
 45839  01B21A  0E00               	movlw	0
 45840  01B21C  6E05               	movwf	i2___fleq@ff2,c
 45841  01B21E  0E00               	movlw	0
 45842  01B220  6E06               	movwf	i2___fleq@ff2+1,c
 45843  01B222  0E00               	movlw	0
 45844  01B224  6E07               	movwf	i2___fleq@ff2+2,c
 45845  01B226  0E00               	movlw	0
 45846  01B228  6E08               	movwf	i2___fleq@ff2+3,c
 45847  01B22A                     i2l19652:
 45848  01B22A  5005               	movf	i2___fleq@ff2,w,c
 45849  01B22C  1801               	xorwf	i2___fleq@ff1,w,c
 45850  01B22E  E10A               	bnz	i2u2495_40
 45851  01B230  5006               	movf	i2___fleq@ff2+1,w,c
 45852  01B232  1802               	xorwf	i2___fleq@ff1+1,w,c
 45853  01B234  E107               	bnz	i2u2495_40
 45854  01B236  5007               	movf	i2___fleq@ff2+2,w,c
 45855  01B238  1803               	xorwf	i2___fleq@ff1+2,w,c
 45856  01B23A  E104               	bnz	i2u2495_40
 45857  01B23C  5008               	movf	i2___fleq@ff2+3,w,c
 45858  01B23E  1804               	xorwf	i2___fleq@ff1+3,w,c
 45859  01B240  B4D8               	btfsc	status,2,c
 45860  01B242  D002               	goto	i2l19656
 45861  01B244                     i2u2495_40:
 45862  01B244  90D8               	bcf	status,0,c
 45863  01B246  0012               	return	
 45864  01B248                     i2l19656:
 45865  01B248  80D8               	bsf	status,0,c
 45866  01B24A  0012               	return		;funcret
 45867  01B24C                     __end_ofi2___fleq:
 45868                           	opt callstack 0
 45869                           
 45870 ;; *************** function _ADCC_ThresholdISR *****************
 45871 ;; Defined at:
 45872 ;;		line 298 in file "mcc_generated_files/adcc.c"
 45873 ;; Parameters:    Size  Location     Type
 45874 ;;		None
 45875 ;; Auto vars:     Size  Location     Type
 45876 ;;		None
 45877 ;; Return value:  Size  Location     Type
 45878 ;;                  1    wreg      void 
 45879 ;; Registers used:
 45880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 45881 ;; Tracked objects:
 45882 ;;		On entry : 0/0
 45883 ;;		On exit  : 0/0
 45884 ;;		Unchanged: 0/0
 45885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45890 ;;Total ram usage:        0 bytes
 45891 ;; Hardware stack levels used:    1
 45892 ;; Hardware stack levels required when called:    3
 45893 ;; This function calls:
 45894 ;;		Absolute function
 45895 ;;		_ADCC_DefaultInterruptHandler
 45896 ;;		_ADC_PostProcessingHandler
 45897 ;; This function is called by:
 45898 ;;		_INTERRUPT_InterruptManagerHigh
 45899 ;; This function uses a non-reentrant model
 45900 ;;
 45901                           
 45902                           	psect	text197
 45903  01C56A                     __ptext197:
 45904                           	opt callstack 0
 45905  01C56A                     _ADCC_ThresholdISR:
 45906                           	opt callstack 13
 45907                           
 45908                           ;adcc.c: 301: PIR1bits.ADTIF = 0;
 45909                           
 45910                           ;incstack = 0
 45911  01C56A  010E               	movlb	14	; () banked
 45912  01C56C  93CB               	bcf	203,1,b	;volatile
 45913                           
 45914                           ; BSR set to: 14
 45915                           ;adcc.c: 303: if (ADCC_ADTI_InterruptHandler)
 45916  01C56E  0100               	movlb	0	; () banked
 45917  01C570  51CC               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 45918  01C572  11CD               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 45919  01C574  11CE               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 45920  01C576  B4D8               	btfsc	status,2,c
 45921  01C578  0012               	return	
 45922                           
 45923                           ; BSR set to: 0
 45924                           ;adcc.c: 304: ADCC_ADTI_InterruptHandler();
 45925  01C57A  D801               	call	i2u2751_48
 45926  01C57C  0012               	return	
 45927  01C57E                     i2u2751_48:
 45928  01C57E  0005               	push	
 45929  01C580  6EFA               	movwf	pclath,c
 45930  01C582  51CC               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 45931  01C584  6EFD               	movwf	tosl,c
 45932  01C586  51CD               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 45933  01C588  6EFE               	movwf	tosh,c
 45934  01C58A  51CE               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 45935  01C58C  6EFF               	movwf	tosu,c
 45936  01C58E  50FA               	movf	pclath,w,c
 45937  01C590  0012               	return		;indir
 45938  01C592                     __end_of_ADCC_ThresholdISR:
 45939                           	opt callstack 0
 45940                           
 45941 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 45942 ;; Defined at:
 45943 ;;		line 310 in file "mcc_generated_files/adcc.c"
 45944 ;; Parameters:    Size  Location     Type
 45945 ;;		None
 45946 ;; Auto vars:     Size  Location     Type
 45947 ;;		None
 45948 ;; Return value:  Size  Location     Type
 45949 ;;                  1    wreg      void 
 45950 ;; Registers used:
 45951 ;;		None
 45952 ;; Tracked objects:
 45953 ;;		On entry : 0/0
 45954 ;;		On exit  : 0/0
 45955 ;;		Unchanged: 0/0
 45956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45961 ;;Total ram usage:        0 bytes
 45962 ;; Hardware stack levels used:    1
 45963 ;; This function calls:
 45964 ;;		Nothing
 45965 ;; This function is called by:
 45966 ;;		_ADCC_Initialize
 45967 ;;		_ADCC_ThresholdISR
 45968 ;; This function uses a non-reentrant model
 45969 ;;
 45970                           
 45971                           	psect	text198
 45972  01CB42                     __ptext198:
 45973                           	opt callstack 0
 45974  01CB42                     _ADCC_DefaultInterruptHandler:
 45975                           	opt callstack 15
 45976                           
 45977                           ;incstack = 0
 45978  01CB42  0012               	return		;funcret
 45979  01CB44                     __end_of_ADCC_DefaultInterruptHandler:
 45980                           	opt callstack 0
 45981                           
 45982 ;; *************** function _ADC_PostProcessingHandler *****************
 45983 ;; Defined at:
 45984 ;;		line 13 in file "adc_postprocessing.c"
 45985 ;; Parameters:    Size  Location     Type
 45986 ;;		None
 45987 ;; Auto vars:     Size  Location     Type
 45988 ;;  i               1   26[BANK0 ] unsigned char 
 45989 ;;  i               1   25[BANK0 ] unsigned char 
 45990 ;;  current_adc_    1   24[BANK0 ] enum E9492
 45991 ;; Return value:  Size  Location     Type
 45992 ;;                  1    wreg      void 
 45993 ;; Registers used:
 45994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45995 ;; Tracked objects:
 45996 ;;		On entry : 0/0
 45997 ;;		On exit  : 0/0
 45998 ;;		Unchanged: 0/0
 45999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46001 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46003 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46004 ;;Total ram usage:       23 bytes
 46005 ;; Hardware stack levels used:    1
 46006 ;; Hardware stack levels required when called:    2
 46007 ;; This function calls:
 46008 ;;		_ADCC_GetConversionResult
 46009 ;;		_ADCC_GetCurrentCountofConversions
 46010 ;;		_ADCC_GetFilterValue
 46011 ;;		_ADCC_HasAccumulatorOverflowed
 46012 ;;		_ADCC_StopConversion
 46013 ;;		_TMR2_StartTimer
 46014 ;;		_fabs
 46015 ;;		i2___fladd
 46016 ;;		i2___fldiv
 46017 ;;		i2___flge
 46018 ;;		i2___flmul
 46019 ;;		i2___flsub
 46020 ;;		i2___xxtofl
 46021 ;; This function is called by:
 46022 ;;		_main
 46023 ;;		_ADCC_ThresholdISR
 46024 ;; This function uses a non-reentrant model
 46025 ;;
 46026                           
 46027                           	psect	text199
 46028  014082                     __ptext199:
 46029                           	opt callstack 0
 46030  014082                     _ADC_PostProcessingHandler:
 46031                           	opt callstack 13
 46032                           
 46033                           ;adc_postprocessing.c: 16: ADCC_StopConversion();
 46034                           
 46035                           ;incstack = 0
 46036  014082  EC94  F0E5         	call	_ADCC_StopConversion	;wreg free
 46037                           
 46038                           ;adc_postprocessing.c: 19: adcc_channel_t current_adc_channel = ADPCH;
 46039  014086  CF5F F078          	movff	3935,ADC_PostProcessingHandler@current_adc_channel	;volatile
 46040                           
 46041                           ;adc_postprocessing.c: 22: switch (current_adc_channel) {
 46042  01408A  EF52  F0A4         	goto	i2l21080
 46043  01408E                     i2l20996:
 46044                           
 46045                           ; BSR set to: 0
 46046                           ;adc_postprocessing.c: 26: adc_results.avss_adc_result = (ADCC_GetConversionResult()) * 
      +                          (5.0/1023.0);
 46047  01408E  EC8E  F0E4         	call	_ADCC_GetConversionResult	;wreg free
 46048  014092  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 46049  014096  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 46050  01409A  6A07               	clrf	i2___xxtofl@val+2,c
 46051  01409C  6A08               	clrf	i2___xxtofl@val+3,c
 46052  01409E  0E00               	movlw	0
 46053  0140A0  EC4C  F0CF         	call	i2___xxtofl
 46054  0140A4  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 46055  0140A8  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 46056  0140AC  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 46057  0140B0  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 46058  0140B4  0E0A               	movlw	10
 46059  0140B6  6E30               	movwf	i2___flmul@a,c
 46060  0140B8  0E28               	movlw	40
 46061  0140BA  6E31               	movwf	i2___flmul@a+1,c
 46062  0140BC  0EA0               	movlw	160
 46063  0140BE  6E32               	movwf	i2___flmul@a+2,c
 46064  0140C0  0E3B               	movlw	59
 46065  0140C2  6E33               	movwf	i2___flmul@a+3,c
 46066  0140C4  EC50  F0B8         	call	i2___flmul	;wreg free
 46067  0140C8  C02C  F0DF         	movff	?i2___flmul,_adc_results
 46068  0140CC  C02D  F0E0         	movff	?i2___flmul+1,_adc_results+1
 46069  0140D0  C02E  F0E1         	movff	?i2___flmul+2,_adc_results+2
 46070  0140D4  C02F  F0E2         	movff	?i2___flmul+3,_adc_results+3
 46071                           
 46072                           ;adc_postprocessing.c: 28: next_adc_channel = channel_FVR_buf1;
 46073  0140D8  0E3F               	movlw	63
 46074  0140DA  D3DE               	goto	L50
 46075  0140DC                     i2l21000:
 46076                           
 46077                           ; BSR set to: 0
 46078                           ;adc_postprocessing.c: 35: adc_results.fvr_adc_result = (ADCC_GetConversionResult()) * (
      +                          5.0/1023.0) + adc_results.avss_adc_result;
 46079  0140DC  0E0A               	movlw	10
 46080  0140DE  6E30               	movwf	i2___flmul@a,c
 46081  0140E0  0E28               	movlw	40
 46082  0140E2  6E31               	movwf	i2___flmul@a+1,c
 46083  0140E4  0EA0               	movlw	160
 46084  0140E6  6E32               	movwf	i2___flmul@a+2,c
 46085  0140E8  0E3B               	movlw	59
 46086  0140EA  6E33               	movwf	i2___flmul@a+3,c
 46087  0140EC  EC8E  F0E4         	call	_ADCC_GetConversionResult	;wreg free
 46088  0140F0  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 46089  0140F4  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 46090  0140F8  6A07               	clrf	i2___xxtofl@val+2,c
 46091  0140FA  6A08               	clrf	i2___xxtofl@val+3,c
 46092  0140FC  0E00               	movlw	0
 46093  0140FE  EC4C  F0CF         	call	i2___xxtofl
 46094  014102  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 46095  014106  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 46096  01410A  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 46097  01410E  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 46098  014112  EC50  F0B8         	call	i2___flmul	;wreg free
 46099  014116  C02C  F052         	movff	?i2___flmul,i2___fladd@b
 46100  01411A  C02D  F053         	movff	?i2___flmul+1,i2___fladd@b+1
 46101  01411E  C02E  F054         	movff	?i2___flmul+2,i2___fladd@b+2
 46102  014122  C02F  F055         	movff	?i2___flmul+3,i2___fladd@b+3
 46103  014126  C0DF  F056         	movff	_adc_results,i2___fladd@a
 46104  01412A  C0E0  F057         	movff	_adc_results+1,i2___fladd@a+1
 46105  01412E  C0E1  F058         	movff	_adc_results+2,i2___fladd@a+2
 46106  014132  C0E2  F059         	movff	_adc_results+3,i2___fladd@a+3
 46107  014136  EC07  F0BD         	call	i2___fladd	;wreg free
 46108  01413A  C052  F0E3         	movff	?i2___fladd,_adc_results+4
 46109  01413E  C053  F0E4         	movff	?i2___fladd+1,_adc_results+5
 46110  014142  C054  F0E5         	movff	?i2___fladd+2,_adc_results+6
 46111  014146  C055  F0E6         	movff	?i2___fladd+3,_adc_results+7
 46112                           
 46113                           ;adc_postprocessing.c: 36: adc_result_scaling = 4.096/adc_results.fvr_adc_result;
 46114  01414A  0E6F               	movlw	111
 46115  01414C  6E13               	movwf	i2___fldiv@b,c
 46116  01414E  0E12               	movlw	18
 46117  014150  6E14               	movwf	i2___fldiv@b+1,c
 46118  014152  0E83               	movlw	131
 46119  014154  6E15               	movwf	i2___fldiv@b+2,c
 46120  014156  0E40               	movlw	64
 46121  014158  6E16               	movwf	i2___fldiv@b+3,c
 46122  01415A  C0E3  F017         	movff	_adc_results+4,i2___fldiv@a
 46123  01415E  C0E4  F018         	movff	_adc_results+5,i2___fldiv@a+1
 46124  014162  C0E5  F019         	movff	_adc_results+6,i2___fldiv@a+2
 46125  014166  C0E6  F01A         	movff	_adc_results+7,i2___fldiv@a+3
 46126  01416A  ECD0  F0C3         	call	i2___fldiv	;wreg free
 46127  01416E  C013  F0C1         	movff	?i2___fldiv,_adc_result_scaling
 46128  014172  C014  F0C2         	movff	?i2___fldiv+1,_adc_result_scaling+1
 46129  014176  C015  F0C3         	movff	?i2___fldiv+2,_adc_result_scaling+2
 46130  01417A  C016  F0C4         	movff	?i2___fldiv+3,_adc_result_scaling+3
 46131                           
 46132                           ;adc_postprocessing.c: 38: if (adc_results.fvr_adc_result > 5.0 || adc_results.fvr_adc_r
      +                          esult < 3.9) {
 46133  01417E  0E00               	movlw	0
 46134  014180  6E01               	movwf	i2___flge@ff1,c
 46135  014182  0E00               	movlw	0
 46136  014184  6E02               	movwf	i2___flge@ff1+1,c
 46137  014186  0EA0               	movlw	160
 46138  014188  6E03               	movwf	i2___flge@ff1+2,c
 46139  01418A  0E40               	movlw	64
 46140  01418C  6E04               	movwf	i2___flge@ff1+3,c
 46141  01418E  C0E3  F005         	movff	_adc_results+4,i2___flge@ff2
 46142  014192  C0E4  F006         	movff	_adc_results+5,i2___flge@ff2+1
 46143  014196  C0E5  F007         	movff	_adc_results+6,i2___flge@ff2+2
 46144  01419A  C0E6  F008         	movff	_adc_results+7,i2___flge@ff2+3
 46145  01419E  ECCC  F0D3         	call	i2___flge	;wreg free
 46146  0141A2  A0D8               	btfss	status,0,c
 46147  0141A4  D014               	goto	i2u2706_40
 46148  0141A6  C0E3  F001         	movff	_adc_results+4,i2___flge@ff1
 46149  0141AA  C0E4  F002         	movff	_adc_results+5,i2___flge@ff1+1
 46150  0141AE  C0E5  F003         	movff	_adc_results+6,i2___flge@ff1+2
 46151  0141B2  C0E6  F004         	movff	_adc_results+7,i2___flge@ff1+3
 46152  0141B6  0E9A               	movlw	154
 46153  0141B8  6E05               	movwf	i2___flge@ff2,c
 46154  0141BA  0E99               	movlw	153
 46155  0141BC  6E06               	movwf	i2___flge@ff2+1,c
 46156  0141BE  0E79               	movlw	121
 46157  0141C0  6E07               	movwf	i2___flge@ff2+2,c
 46158  0141C2  0E40               	movlw	64
 46159  0141C4  6E08               	movwf	i2___flge@ff2+3,c
 46160  0141C6  ECCC  F0D3         	call	i2___flge	;wreg free
 46161  0141CA  B0D8               	btfsc	status,0,c
 46162  0141CC  D003               	goto	i2l1510
 46163  0141CE                     i2u2706_40:
 46164                           
 46165                           ;adc_postprocessing.c: 40: error_handler.FVR_ADC_error_flag = 1;
 46166  0141CE  0E01               	movlw	1
 46167  0141D0  0100               	movlb	0	; () banked
 46168  0141D2  6FB9               	movwf	_error_handler& (0+255),b
 46169  0141D4                     i2l1510:
 46170                           
 46171                           ;adc_postprocessing.c: 42: };adc_postprocessing.c: 44: next_adc_channel = POS5_ADC;
 46172  0141D4  0E04               	movlw	4
 46173  0141D6  D360               	goto	L50
 46174  0141D8                     i2l21010:
 46175                           
 46176                           ; BSR set to: 0
 46177                           ;adc_postprocessing.c: 49: adc_results.pos5_adc_result = (((ADCC_GetFilterValue()) * (5.
      +                          0/1023.0)) * 2.0 - adc_results.avss_adc_result) * adc_result_scaling;
 46178  0141D8  0E0A               	movlw	10
 46179  0141DA  6E30               	movwf	i2___flmul@a,c
 46180  0141DC  0E28               	movlw	40
 46181  0141DE  6E31               	movwf	i2___flmul@a+1,c
 46182  0141E0  0EA0               	movlw	160
 46183  0141E2  6E32               	movwf	i2___flmul@a+2,c
 46184  0141E4  0E3B               	movlw	59
 46185  0141E6  6E33               	movwf	i2___flmul@a+3,c
 46186  0141E8  EC84  F0E4         	call	_ADCC_GetFilterValue	;wreg free
 46187  0141EC  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 46188  0141F0  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 46189  0141F4  6A07               	clrf	i2___xxtofl@val+2,c
 46190  0141F6  6A08               	clrf	i2___xxtofl@val+3,c
 46191  0141F8  0E00               	movlw	0
 46192  0141FA  EC4C  F0CF         	call	i2___xxtofl
 46193  0141FE  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 46194  014202  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 46195  014206  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 46196  01420A  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 46197  01420E  EC50  F0B8         	call	i2___flmul	;wreg free
 46198  014212  C02C  F07B         	movff	?i2___flmul,_ADC_PostProcessingHandler$6407
 46199  014216  C02D  F07C         	movff	?i2___flmul+1,_ADC_PostProcessingHandler$6407+1
 46200  01421A  C02E  F07D         	movff	?i2___flmul+2,_ADC_PostProcessingHandler$6407+2
 46201  01421E  C02F  F07E         	movff	?i2___flmul+3,_ADC_PostProcessingHandler$6407+3
 46202                           
 46203                           ;adc_postprocessing.c: 49: adc_results.pos5_adc_result = (((ADCC_GetFilterValue()) * (5.
      +                          0/1023.0)) * 2.0 - adc_results.avss_adc_result) * adc_result_scaling;
 46204  014222  C0DF  F068         	movff	_adc_results,i2___flsub@a
 46205  014226  C0E0  F069         	movff	_adc_results+1,i2___flsub@a+1
 46206  01422A  C0E1  F06A         	movff	_adc_results+2,i2___flsub@a+2
 46207  01422E  C0E2  F06B         	movff	_adc_results+3,i2___flsub@a+3
 46208  014232  0E00               	movlw	0
 46209  014234  6E30               	movwf	i2___flmul@a,c
 46210  014236  0E00               	movlw	0
 46211  014238  6E31               	movwf	i2___flmul@a+1,c
 46212  01423A  0E00               	movlw	0
 46213  01423C  6E32               	movwf	i2___flmul@a+2,c
 46214  01423E  0E40               	movlw	64
 46215  014240  6E33               	movwf	i2___flmul@a+3,c
 46216  014242  C07B  F02C         	movff	_ADC_PostProcessingHandler$6407,i2___flmul@b
 46217  014246  C07C  F02D         	movff	_ADC_PostProcessingHandler$6407+1,i2___flmul@b+1
 46218  01424A  C07D  F02E         	movff	_ADC_PostProcessingHandler$6407+2,i2___flmul@b+2
 46219  01424E  C07E  F02F         	movff	_ADC_PostProcessingHandler$6407+3,i2___flmul@b+3
 46220  014252  EC50  F0B8         	call	i2___flmul	;wreg free
 46221  014256  C02C  F064         	movff	?i2___flmul,i2___flsub@b
 46222  01425A  C02D  F065         	movff	?i2___flmul+1,i2___flsub@b+1
 46223  01425E  C02E  F066         	movff	?i2___flmul+2,i2___flsub@b+2
 46224  014262  C02F  F067         	movff	?i2___flmul+3,i2___flsub@b+3
 46225  014266  EC63  F0DE         	call	i2___flsub	;wreg free
 46226  01426A  C064  F07F         	movff	?i2___flsub,_ADC_PostProcessingHandler$6408
 46227  01426E  C065  F080         	movff	?i2___flsub+1,_ADC_PostProcessingHandler$6408+1
 46228  014272  C066  F081         	movff	?i2___flsub+2,_ADC_PostProcessingHandler$6408+2
 46229  014276  C067  F082         	movff	?i2___flsub+3,_ADC_PostProcessingHandler$6408+3
 46230                           
 46231                           ;adc_postprocessing.c: 49: adc_results.pos5_adc_result = (((ADCC_GetFilterValue()) * (5.
      +                          0/1023.0)) * 2.0 - adc_results.avss_adc_result) * adc_result_scaling;
 46232  01427A  C07F  F02C         	movff	_ADC_PostProcessingHandler$6408,i2___flmul@b
 46233  01427E  C080  F02D         	movff	_ADC_PostProcessingHandler$6408+1,i2___flmul@b+1
 46234  014282  C081  F02E         	movff	_ADC_PostProcessingHandler$6408+2,i2___flmul@b+2
 46235  014286  C082  F02F         	movff	_ADC_PostProcessingHandler$6408+3,i2___flmul@b+3
 46236  01428A  C0C1  F030         	movff	_adc_result_scaling,i2___flmul@a
 46237  01428E  C0C2  F031         	movff	_adc_result_scaling+1,i2___flmul@a+1
 46238  014292  C0C3  F032         	movff	_adc_result_scaling+2,i2___flmul@a+2
 46239  014296  C0C4  F033         	movff	_adc_result_scaling+3,i2___flmul@a+3
 46240  01429A  EC50  F0B8         	call	i2___flmul	;wreg free
 46241  01429E  C02C  F0E7         	movff	?i2___flmul,_adc_results+8
 46242  0142A2  C02D  F0E8         	movff	?i2___flmul+1,_adc_results+9
 46243  0142A6  C02E  F0E9         	movff	?i2___flmul+2,_adc_results+10
 46244  0142AA  C02F  F0EA         	movff	?i2___flmul+3,_adc_results+11
 46245                           
 46246                           ;adc_postprocessing.c: 51: next_adc_channel = POS12_ADC;
 46247  0142AE  0E00               	movlw	0
 46248  0142B0  D2F3               	goto	L50
 46249  0142B2                     i2l21014:
 46250                           
 46251                           ; BSR set to: 0
 46252                           ;adc_postprocessing.c: 55: adc_results.pos12_adc_result = (((ADCC_GetFilterValue()) * (a
      +                          dc_results.pos5_adc_result/1023.0)) * 2.96078 - adc_results.avss_adc_result) * adc_resul
      +                          t_scaling;
 46253  0142B2  0E00               	movlw	0
 46254  0142B4  6E17               	movwf	i2___fldiv@a,c
 46255  0142B6  0EC0               	movlw	192
 46256  0142B8  6E18               	movwf	i2___fldiv@a+1,c
 46257  0142BA  0E7F               	movlw	127
 46258  0142BC  6E19               	movwf	i2___fldiv@a+2,c
 46259  0142BE  0E44               	movlw	68
 46260  0142C0  6E1A               	movwf	i2___fldiv@a+3,c
 46261  0142C2  C0E7  F013         	movff	_adc_results+8,i2___fldiv@b
 46262  0142C6  C0E8  F014         	movff	_adc_results+9,i2___fldiv@b+1
 46263  0142CA  C0E9  F015         	movff	_adc_results+10,i2___fldiv@b+2
 46264  0142CE  C0EA  F016         	movff	_adc_results+11,i2___fldiv@b+3
 46265  0142D2  ECD0  F0C3         	call	i2___fldiv	;wreg free
 46266  0142D6  C013  F030         	movff	?i2___fldiv,i2___flmul@a
 46267  0142DA  C014  F031         	movff	?i2___fldiv+1,i2___flmul@a+1
 46268  0142DE  C015  F032         	movff	?i2___fldiv+2,i2___flmul@a+2
 46269  0142E2  C016  F033         	movff	?i2___fldiv+3,i2___flmul@a+3
 46270  0142E6  EC84  F0E4         	call	_ADCC_GetFilterValue	;wreg free
 46271  0142EA  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 46272  0142EE  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 46273  0142F2  6A07               	clrf	i2___xxtofl@val+2,c
 46274  0142F4  6A08               	clrf	i2___xxtofl@val+3,c
 46275  0142F6  0E00               	movlw	0
 46276  0142F8  EC4C  F0CF         	call	i2___xxtofl
 46277  0142FC  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 46278  014300  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 46279  014304  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 46280  014308  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 46281  01430C  EC50  F0B8         	call	i2___flmul	;wreg free
 46282  014310  C02C  F07B         	movff	?i2___flmul,_ADC_PostProcessingHandler$6407
 46283  014314  C02D  F07C         	movff	?i2___flmul+1,_ADC_PostProcessingHandler$6407+1
 46284  014318  C02E  F07D         	movff	?i2___flmul+2,_ADC_PostProcessingHandler$6407+2
 46285  01431C  C02F  F07E         	movff	?i2___flmul+3,_ADC_PostProcessingHandler$6407+3
 46286                           
 46287                           ;adc_postprocessing.c: 55: adc_results.pos12_adc_result = (((ADCC_GetFilterValue()) * (a
      +                          dc_results.pos5_adc_result/1023.0)) * 2.96078 - adc_results.avss_adc_result) * adc_resul
      +                          t_scaling;
 46288  014320  C0DF  F068         	movff	_adc_results,i2___flsub@a
 46289  014324  C0E0  F069         	movff	_adc_results+1,i2___flsub@a+1
 46290  014328  C0E1  F06A         	movff	_adc_results+2,i2___flsub@a+2
 46291  01432C  C0E2  F06B         	movff	_adc_results+3,i2___flsub@a+3
 46292  014330  0E6B               	movlw	107
 46293  014332  6E30               	movwf	i2___flmul@a,c
 46294  014334  0E7D               	movlw	125
 46295  014336  6E31               	movwf	i2___flmul@a+1,c
 46296  014338  0E3D               	movlw	61
 46297  01433A  6E32               	movwf	i2___flmul@a+2,c
 46298  01433C  0E40               	movlw	64
 46299  01433E  6E33               	movwf	i2___flmul@a+3,c
 46300  014340  C07B  F02C         	movff	_ADC_PostProcessingHandler$6407,i2___flmul@b
 46301  014344  C07C  F02D         	movff	_ADC_PostProcessingHandler$6407+1,i2___flmul@b+1
 46302  014348  C07D  F02E         	movff	_ADC_PostProcessingHandler$6407+2,i2___flmul@b+2
 46303  01434C  C07E  F02F         	movff	_ADC_PostProcessingHandler$6407+3,i2___flmul@b+3
 46304  014350  EC50  F0B8         	call	i2___flmul	;wreg free
 46305  014354  C02C  F064         	movff	?i2___flmul,i2___flsub@b
 46306  014358  C02D  F065         	movff	?i2___flmul+1,i2___flsub@b+1
 46307  01435C  C02E  F066         	movff	?i2___flmul+2,i2___flsub@b+2
 46308  014360  C02F  F067         	movff	?i2___flmul+3,i2___flsub@b+3
 46309  014364  EC63  F0DE         	call	i2___flsub	;wreg free
 46310  014368  C064  F07F         	movff	?i2___flsub,_ADC_PostProcessingHandler$6408
 46311  01436C  C065  F080         	movff	?i2___flsub+1,_ADC_PostProcessingHandler$6408+1
 46312  014370  C066  F081         	movff	?i2___flsub+2,_ADC_PostProcessingHandler$6408+2
 46313  014374  C067  F082         	movff	?i2___flsub+3,_ADC_PostProcessingHandler$6408+3
 46314                           
 46315                           ;adc_postprocessing.c: 55: adc_results.pos12_adc_result = (((ADCC_GetFilterValue()) * (a
      +                          dc_results.pos5_adc_result/1023.0)) * 2.96078 - adc_results.avss_adc_result) * adc_resul
      +                          t_scaling;
 46316  014378  C07F  F02C         	movff	_ADC_PostProcessingHandler$6408,i2___flmul@b
 46317  01437C  C080  F02D         	movff	_ADC_PostProcessingHandler$6408+1,i2___flmul@b+1
 46318  014380  C081  F02E         	movff	_ADC_PostProcessingHandler$6408+2,i2___flmul@b+2
 46319  014384  C082  F02F         	movff	_ADC_PostProcessingHandler$6408+3,i2___flmul@b+3
 46320  014388  C0C1  F030         	movff	_adc_result_scaling,i2___flmul@a
 46321  01438C  C0C2  F031         	movff	_adc_result_scaling+1,i2___flmul@a+1
 46322  014390  C0C3  F032         	movff	_adc_result_scaling+2,i2___flmul@a+2
 46323  014394  C0C4  F033         	movff	_adc_result_scaling+3,i2___flmul@a+3
 46324  014398  EC50  F0B8         	call	i2___flmul	;wreg free
 46325  01439C  C02C  F0EB         	movff	?i2___flmul,_adc_results+12
 46326  0143A0  C02D  F0EC         	movff	?i2___flmul+1,_adc_results+13
 46327  0143A4  C02E  F0ED         	movff	?i2___flmul+2,_adc_results+14
 46328  0143A8  C02F  F0EE         	movff	?i2___flmul+3,_adc_results+15
 46329                           
 46330                           ;adc_postprocessing.c: 57: next_adc_channel = POS12_ISNS_ADC;
 46331  0143AC  0E01               	movlw	1
 46332  0143AE  D274               	goto	L50
 46333  0143B0                     i2l21018:
 46334                           
 46335                           ; BSR set to: 0
 46336                           ;adc_postprocessing.c: 62: pos12_isns_average_buffer[pos12_isns_average_index] = (((ADCC
      +                          _GetFilterValue()) * (adc_results.pos5_adc_result/1023.0)) * 0.501002004 - adc_results.a
      +                          vss_adc_result) * adc_result_scaling;
 46337  0143B0  0E00               	movlw	0
 46338  0143B2  6E17               	movwf	i2___fldiv@a,c
 46339  0143B4  0EC0               	movlw	192
 46340  0143B6  6E18               	movwf	i2___fldiv@a+1,c
 46341  0143B8  0E7F               	movlw	127
 46342  0143BA  6E19               	movwf	i2___fldiv@a+2,c
 46343  0143BC  0E44               	movlw	68
 46344  0143BE  6E1A               	movwf	i2___fldiv@a+3,c
 46345  0143C0  C0E7  F013         	movff	_adc_results+8,i2___fldiv@b
 46346  0143C4  C0E8  F014         	movff	_adc_results+9,i2___fldiv@b+1
 46347  0143C8  C0E9  F015         	movff	_adc_results+10,i2___fldiv@b+2
 46348  0143CC  C0EA  F016         	movff	_adc_results+11,i2___fldiv@b+3
 46349  0143D0  ECD0  F0C3         	call	i2___fldiv	;wreg free
 46350  0143D4  C013  F030         	movff	?i2___fldiv,i2___flmul@a
 46351  0143D8  C014  F031         	movff	?i2___fldiv+1,i2___flmul@a+1
 46352  0143DC  C015  F032         	movff	?i2___fldiv+2,i2___flmul@a+2
 46353  0143E0  C016  F033         	movff	?i2___fldiv+3,i2___flmul@a+3
 46354  0143E4  EC84  F0E4         	call	_ADCC_GetFilterValue	;wreg free
 46355  0143E8  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 46356  0143EC  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 46357  0143F0  6A07               	clrf	i2___xxtofl@val+2,c
 46358  0143F2  6A08               	clrf	i2___xxtofl@val+3,c
 46359  0143F4  0E00               	movlw	0
 46360  0143F6  EC4C  F0CF         	call	i2___xxtofl
 46361  0143FA  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 46362  0143FE  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 46363  014402  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 46364  014406  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 46365  01440A  EC50  F0B8         	call	i2___flmul	;wreg free
 46366  01440E  C02C  F07B         	movff	?i2___flmul,_ADC_PostProcessingHandler$6407
 46367  014412  C02D  F07C         	movff	?i2___flmul+1,_ADC_PostProcessingHandler$6407+1
 46368  014416  C02E  F07D         	movff	?i2___flmul+2,_ADC_PostProcessingHandler$6407+2
 46369  01441A  C02F  F07E         	movff	?i2___flmul+3,_ADC_PostProcessingHandler$6407+3
 46370                           
 46371                           ;adc_postprocessing.c: 62: pos12_isns_average_buffer[pos12_isns_average_index] = (((ADCC
      +                          _GetFilterValue()) * (adc_results.pos5_adc_result/1023.0)) * 0.501002004 - adc_results.a
      +                          vss_adc_result) * adc_result_scaling;
 46372  01441E  C0DF  F068         	movff	_adc_results,i2___flsub@a
 46373  014422  C0E0  F069         	movff	_adc_results+1,i2___flsub@a+1
 46374  014426  C0E1  F06A         	movff	_adc_results+2,i2___flsub@a+2
 46375  01442A  C0E2  F06B         	movff	_adc_results+3,i2___flsub@a+3
 46376  01442E  0EAB               	movlw	171
 46377  014430  6E30               	movwf	i2___flmul@a,c
 46378  014432  0E41               	movlw	65
 46379  014434  6E31               	movwf	i2___flmul@a+1,c
 46380  014436  0E00               	movlw	0
 46381  014438  6E32               	movwf	i2___flmul@a+2,c
 46382  01443A  0E3F               	movlw	63
 46383  01443C  6E33               	movwf	i2___flmul@a+3,c
 46384  01443E  C07B  F02C         	movff	_ADC_PostProcessingHandler$6407,i2___flmul@b
 46385  014442  C07C  F02D         	movff	_ADC_PostProcessingHandler$6407+1,i2___flmul@b+1
 46386  014446  C07D  F02E         	movff	_ADC_PostProcessingHandler$6407+2,i2___flmul@b+2
 46387  01444A  C07E  F02F         	movff	_ADC_PostProcessingHandler$6407+3,i2___flmul@b+3
 46388  01444E  EC50  F0B8         	call	i2___flmul	;wreg free
 46389  014452  C02C  F064         	movff	?i2___flmul,i2___flsub@b
 46390  014456  C02D  F065         	movff	?i2___flmul+1,i2___flsub@b+1
 46391  01445A  C02E  F066         	movff	?i2___flmul+2,i2___flsub@b+2
 46392  01445E  C02F  F067         	movff	?i2___flmul+3,i2___flsub@b+3
 46393  014462  EC63  F0DE         	call	i2___flsub	;wreg free
 46394  014466  C064  F07F         	movff	?i2___flsub,_ADC_PostProcessingHandler$6408
 46395  01446A  C065  F080         	movff	?i2___flsub+1,_ADC_PostProcessingHandler$6408+1
 46396  01446E  C066  F081         	movff	?i2___flsub+2,_ADC_PostProcessingHandler$6408+2
 46397  014472  C067  F082         	movff	?i2___flsub+3,_ADC_PostProcessingHandler$6408+3
 46398                           
 46399                           ;adc_postprocessing.c: 62: pos12_isns_average_buffer[pos12_isns_average_index] = (((ADCC
      +                          _GetFilterValue()) * (adc_results.pos5_adc_result/1023.0)) * 0.501002004 - adc_results.a
      +                          vss_adc_result) * adc_result_scaling;
 46400  014476  C07F  F02C         	movff	_ADC_PostProcessingHandler$6408,i2___flmul@b
 46401  01447A  C080  F02D         	movff	_ADC_PostProcessingHandler$6408+1,i2___flmul@b+1
 46402  01447E  C081  F02E         	movff	_ADC_PostProcessingHandler$6408+2,i2___flmul@b+2
 46403  014482  C082  F02F         	movff	_ADC_PostProcessingHandler$6408+3,i2___flmul@b+3
 46404  014486  C0C1  F030         	movff	_adc_result_scaling,i2___flmul@a
 46405  01448A  C0C2  F031         	movff	_adc_result_scaling+1,i2___flmul@a+1
 46406  01448E  C0C3  F032         	movff	_adc_result_scaling+2,i2___flmul@a+2
 46407  014492  C0C4  F033         	movff	_adc_result_scaling+3,i2___flmul@a+3
 46408  014496  EC50  F0B8         	call	i2___flmul	;wreg free
 46409  01449A  0100               	movlb	0	; () banked
 46410  01449C  51D9               	movf	_pos12_isns_average_index& (0+255),w,b
 46411  01449E  0D04               	mullw	4
 46412  0144A0  0E40               	movlw	low _pos12_isns_average_buffer
 46413  0144A2  24F3               	addwf	prodl,w,c
 46414  0144A4  6ED9               	movwf	fsr2l,c
 46415  0144A6  0E04               	movlw	high _pos12_isns_average_buffer
 46416  0144A8  20F4               	addwfc	prodh,w,c
 46417  0144AA  6EDA               	movwf	fsr2h,c
 46418  0144AC  C02C  FFDE         	movff	?i2___flmul,postinc2
 46419  0144B0  C02D  FFDE         	movff	?i2___flmul+1,postinc2
 46420  0144B4  C02E  FFDE         	movff	?i2___flmul+2,postinc2
 46421  0144B8  C02F  FFDE         	movff	?i2___flmul+3,postinc2
 46422                           
 46423                           ; BSR set to: 0
 46424                           ;adc_postprocessing.c: 63: pos12_isns_average_index++;
 46425  0144BC  2BD9               	incf	_pos12_isns_average_index& (0+255),f,b
 46426                           
 46427                           ; BSR set to: 0
 46428                           ;adc_postprocessing.c: 66: if (pos12_isns_average_index == 16) {
 46429  0144BE  0E10               	movlw	16
 46430  0144C0  19D9               	xorwf	_pos12_isns_average_index& (0+255),w,b
 46431  0144C2  A4D8               	btfss	status,2,c
 46432  0144C4  D057               	goto	i2l21040
 46433                           
 46434                           ; BSR set to: 0
 46435                           ;adc_postprocessing.c: 67: pos12_isns_average_index = 0;
 46436  0144C6  0E00               	movlw	0
 46437  0144C8  6FD9               	movwf	_pos12_isns_average_index& (0+255),b
 46438                           
 46439                           ;adc_postprocessing.c: 69: adc_results.pos12_isns_adc_result = 0.0;
 46440  0144CA  0E00               	movlw	0
 46441  0144CC  6FEF               	movwf	(_adc_results+16)& (0+255),b
 46442  0144CE  0E00               	movlw	0
 46443  0144D0  6FF0               	movwf	(_adc_results+17)& (0+255),b
 46444  0144D2  0E00               	movlw	0
 46445  0144D4  6FF1               	movwf	(_adc_results+18)& (0+255),b
 46446  0144D6  0E00               	movlw	0
 46447  0144D8  6FF2               	movwf	(_adc_results+19)& (0+255),b
 46448                           
 46449                           ;adc_postprocessing.c: 70: for (uint8_t i = 0; i < 16; i++) {
 46450  0144DA  0E00               	movlw	0
 46451  0144DC  6F79               	movwf	ADC_PostProcessingHandler@i& (0+255),b
 46452  0144DE                     i2l21032:
 46453                           
 46454                           ; BSR set to: 0
 46455                           ;adc_postprocessing.c: 71: adc_results.pos12_isns_adc_result += fabs(pos12_isns_average_
      +                          buffer[i]);
 46456  0144DE  C0EF  F052         	movff	_adc_results+16,i2___fladd@b
 46457  0144E2  C0F0  F053         	movff	_adc_results+17,i2___fladd@b+1
 46458  0144E6  C0F1  F054         	movff	_adc_results+18,i2___fladd@b+2
 46459  0144EA  C0F2  F055         	movff	_adc_results+19,i2___fladd@b+3
 46460  0144EE  5179               	movf	ADC_PostProcessingHandler@i& (0+255),w,b
 46461  0144F0  0D04               	mullw	4
 46462  0144F2  0E40               	movlw	low _pos12_isns_average_buffer
 46463  0144F4  24F3               	addwf	prodl,w,c
 46464  0144F6  6ED9               	movwf	fsr2l,c
 46465  0144F8  0E04               	movlw	high _pos12_isns_average_buffer
 46466  0144FA  20F4               	addwfc	prodh,w,c
 46467  0144FC  6EDA               	movwf	fsr2h,c
 46468  0144FE  CFDE F005          	movff	postinc2,fabs@d
 46469  014502  CFDE F006          	movff	postinc2,fabs@d+1
 46470  014506  CFDE F007          	movff	postinc2,fabs@d+2
 46471  01450A  CFDE F008          	movff	postinc2,fabs@d+3
 46472  01450E  ECAE  F0E0         	call	_fabs	;wreg free
 46473  014512  C005  F056         	movff	?_fabs,i2___fladd@a
 46474  014516  C006  F057         	movff	?_fabs+1,i2___fladd@a+1
 46475  01451A  C007  F058         	movff	?_fabs+2,i2___fladd@a+2
 46476  01451E  C008  F059         	movff	?_fabs+3,i2___fladd@a+3
 46477  014522  EC07  F0BD         	call	i2___fladd	;wreg free
 46478  014526  C052  F0EF         	movff	?i2___fladd,_adc_results+16
 46479  01452A  C053  F0F0         	movff	?i2___fladd+1,_adc_results+17
 46480  01452E  C054  F0F1         	movff	?i2___fladd+2,_adc_results+18
 46481  014532  C055  F0F2         	movff	?i2___fladd+3,_adc_results+19
 46482  014536  0100               	movlb	0	; () banked
 46483  014538  2B79               	incf	ADC_PostProcessingHandler@i& (0+255),f,b
 46484                           
 46485                           ; BSR set to: 0
 46486  01453A  0E0F               	movlw	15
 46487  01453C  6579               	cpfsgt	ADC_PostProcessingHandler@i& (0+255),b
 46488  01453E  D7CF               	goto	i2l21032
 46489                           
 46490                           ; BSR set to: 0
 46491                           ;adc_postprocessing.c: 72: };adc_postprocessing.c: 73: adc_results.pos12_isns_adc_result
      +                           /= (float) 16;
 46492  014540  C0EF  F013         	movff	_adc_results+16,i2___fldiv@b
 46493  014544  C0F0  F014         	movff	_adc_results+17,i2___fldiv@b+1
 46494  014548  C0F1  F015         	movff	_adc_results+18,i2___fldiv@b+2
 46495  01454C  C0F2  F016         	movff	_adc_results+19,i2___fldiv@b+3
 46496  014550  0E00               	movlw	0
 46497  014552  6E17               	movwf	i2___fldiv@a,c
 46498  014554  0E00               	movlw	0
 46499  014556  6E18               	movwf	i2___fldiv@a+1,c
 46500  014558  0E80               	movlw	128
 46501  01455A  6E19               	movwf	i2___fldiv@a+2,c
 46502  01455C  0E41               	movlw	65
 46503  01455E  6E1A               	movwf	i2___fldiv@a+3,c
 46504  014560  ECD0  F0C3         	call	i2___fldiv	;wreg free
 46505  014564  C013  F0EF         	movff	?i2___fldiv,_adc_results+16
 46506  014568  C014  F0F0         	movff	?i2___fldiv+1,_adc_results+17
 46507  01456C  C015  F0F1         	movff	?i2___fldiv+2,_adc_results+18
 46508  014570  C016  F0F2         	movff	?i2___fldiv+3,_adc_results+19
 46509  014574                     i2l21040:
 46510                           
 46511                           ;adc_postprocessing.c: 74: };adc_postprocessing.c: 76: next_adc_channel = QI_ISNS_ADC;
 46512  014574  0E05               	movlw	5
 46513  014576  D190               	goto	L50
 46514  014578                     i2l21042:
 46515                           
 46516                           ; BSR set to: 0
 46517                           ;adc_postprocessing.c: 81: qi_isns_average_buffer[qi_isns_average_index] = (((ADCC_GetFi
      +                          lterValue()) * (adc_results.pos5_adc_result/1023.0)) * 1.004016064 - adc_results.avss_ad
      +                          c_result) * adc_result_scaling;
 46518  014578  0E00               	movlw	0
 46519  01457A  6E17               	movwf	i2___fldiv@a,c
 46520  01457C  0EC0               	movlw	192
 46521  01457E  6E18               	movwf	i2___fldiv@a+1,c
 46522  014580  0E7F               	movlw	127
 46523  014582  6E19               	movwf	i2___fldiv@a+2,c
 46524  014584  0E44               	movlw	68
 46525  014586  6E1A               	movwf	i2___fldiv@a+3,c
 46526  014588  C0E7  F013         	movff	_adc_results+8,i2___fldiv@b
 46527  01458C  C0E8  F014         	movff	_adc_results+9,i2___fldiv@b+1
 46528  014590  C0E9  F015         	movff	_adc_results+10,i2___fldiv@b+2
 46529  014594  C0EA  F016         	movff	_adc_results+11,i2___fldiv@b+3
 46530  014598  ECD0  F0C3         	call	i2___fldiv	;wreg free
 46531  01459C  C013  F030         	movff	?i2___fldiv,i2___flmul@a
 46532  0145A0  C014  F031         	movff	?i2___fldiv+1,i2___flmul@a+1
 46533  0145A4  C015  F032         	movff	?i2___fldiv+2,i2___flmul@a+2
 46534  0145A8  C016  F033         	movff	?i2___fldiv+3,i2___flmul@a+3
 46535  0145AC  EC84  F0E4         	call	_ADCC_GetFilterValue	;wreg free
 46536  0145B0  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 46537  0145B4  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 46538  0145B8  6A07               	clrf	i2___xxtofl@val+2,c
 46539  0145BA  6A08               	clrf	i2___xxtofl@val+3,c
 46540  0145BC  0E00               	movlw	0
 46541  0145BE  EC4C  F0CF         	call	i2___xxtofl
 46542  0145C2  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 46543  0145C6  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 46544  0145CA  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 46545  0145CE  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 46546  0145D2  EC50  F0B8         	call	i2___flmul	;wreg free
 46547  0145D6  C02C  F07B         	movff	?i2___flmul,_ADC_PostProcessingHandler$6407
 46548  0145DA  C02D  F07C         	movff	?i2___flmul+1,_ADC_PostProcessingHandler$6407+1
 46549  0145DE  C02E  F07D         	movff	?i2___flmul+2,_ADC_PostProcessingHandler$6407+2
 46550  0145E2  C02F  F07E         	movff	?i2___flmul+3,_ADC_PostProcessingHandler$6407+3
 46551                           
 46552                           ;adc_postprocessing.c: 81: qi_isns_average_buffer[qi_isns_average_index] = (((ADCC_GetFi
      +                          lterValue()) * (adc_results.pos5_adc_result/1023.0)) * 1.004016064 - adc_results.avss_ad
      +                          c_result) * adc_result_scaling;
 46553  0145E6  C0DF  F068         	movff	_adc_results,i2___flsub@a
 46554  0145EA  C0E0  F069         	movff	_adc_results+1,i2___flsub@a+1
 46555  0145EE  C0E1  F06A         	movff	_adc_results+2,i2___flsub@a+2
 46556  0145F2  C0E2  F06B         	movff	_adc_results+3,i2___flsub@a+3
 46557  0145F6  0E99               	movlw	153
 46558  0145F8  6E30               	movwf	i2___flmul@a,c
 46559  0145FA  0E83               	movlw	131
 46560  0145FC  6E31               	movwf	i2___flmul@a+1,c
 46561  0145FE  0E80               	movlw	128
 46562  014600  6E32               	movwf	i2___flmul@a+2,c
 46563  014602  0E3F               	movlw	63
 46564  014604  6E33               	movwf	i2___flmul@a+3,c
 46565  014606  C07B  F02C         	movff	_ADC_PostProcessingHandler$6407,i2___flmul@b
 46566  01460A  C07C  F02D         	movff	_ADC_PostProcessingHandler$6407+1,i2___flmul@b+1
 46567  01460E  C07D  F02E         	movff	_ADC_PostProcessingHandler$6407+2,i2___flmul@b+2
 46568  014612  C07E  F02F         	movff	_ADC_PostProcessingHandler$6407+3,i2___flmul@b+3
 46569  014616  EC50  F0B8         	call	i2___flmul	;wreg free
 46570  01461A  C02C  F064         	movff	?i2___flmul,i2___flsub@b
 46571  01461E  C02D  F065         	movff	?i2___flmul+1,i2___flsub@b+1
 46572  014622  C02E  F066         	movff	?i2___flmul+2,i2___flsub@b+2
 46573  014626  C02F  F067         	movff	?i2___flmul+3,i2___flsub@b+3
 46574  01462A  EC63  F0DE         	call	i2___flsub	;wreg free
 46575  01462E  C064  F07F         	movff	?i2___flsub,_ADC_PostProcessingHandler$6408
 46576  014632  C065  F080         	movff	?i2___flsub+1,_ADC_PostProcessingHandler$6408+1
 46577  014636  C066  F081         	movff	?i2___flsub+2,_ADC_PostProcessingHandler$6408+2
 46578  01463A  C067  F082         	movff	?i2___flsub+3,_ADC_PostProcessingHandler$6408+3
 46579                           
 46580                           ;adc_postprocessing.c: 81: qi_isns_average_buffer[qi_isns_average_index] = (((ADCC_GetFi
      +                          lterValue()) * (adc_results.pos5_adc_result/1023.0)) * 1.004016064 - adc_results.avss_ad
      +                          c_result) * adc_result_scaling;
 46581  01463E  C07F  F02C         	movff	_ADC_PostProcessingHandler$6408,i2___flmul@b
 46582  014642  C080  F02D         	movff	_ADC_PostProcessingHandler$6408+1,i2___flmul@b+1
 46583  014646  C081  F02E         	movff	_ADC_PostProcessingHandler$6408+2,i2___flmul@b+2
 46584  01464A  C082  F02F         	movff	_ADC_PostProcessingHandler$6408+3,i2___flmul@b+3
 46585  01464E  C0C1  F030         	movff	_adc_result_scaling,i2___flmul@a
 46586  014652  C0C2  F031         	movff	_adc_result_scaling+1,i2___flmul@a+1
 46587  014656  C0C3  F032         	movff	_adc_result_scaling+2,i2___flmul@a+2
 46588  01465A  C0C4  F033         	movff	_adc_result_scaling+3,i2___flmul@a+3
 46589  01465E  EC50  F0B8         	call	i2___flmul	;wreg free
 46590  014662  0100               	movlb	0	; () banked
 46591  014664  51D8               	movf	_qi_isns_average_index& (0+255),w,b
 46592  014666  0D04               	mullw	4
 46593  014668  0E00               	movlw	low _qi_isns_average_buffer
 46594  01466A  24F3               	addwf	prodl,w,c
 46595  01466C  6ED9               	movwf	fsr2l,c
 46596  01466E  0E04               	movlw	high _qi_isns_average_buffer
 46597  014670  20F4               	addwfc	prodh,w,c
 46598  014672  6EDA               	movwf	fsr2h,c
 46599  014674  C02C  FFDE         	movff	?i2___flmul,postinc2
 46600  014678  C02D  FFDE         	movff	?i2___flmul+1,postinc2
 46601  01467C  C02E  FFDE         	movff	?i2___flmul+2,postinc2
 46602  014680  C02F  FFDE         	movff	?i2___flmul+3,postinc2
 46603                           
 46604                           ; BSR set to: 0
 46605                           ;adc_postprocessing.c: 82: qi_isns_average_index++;
 46606  014684  2BD8               	incf	_qi_isns_average_index& (0+255),f,b
 46607                           
 46608                           ; BSR set to: 0
 46609                           ;adc_postprocessing.c: 85: if (qi_isns_average_index == 16) {
 46610  014686  0E10               	movlw	16
 46611  014688  19D8               	xorwf	_qi_isns_average_index& (0+255),w,b
 46612  01468A  A4D8               	btfss	status,2,c
 46613  01468C  D057               	goto	i2l21064
 46614                           
 46615                           ; BSR set to: 0
 46616                           ;adc_postprocessing.c: 86: qi_isns_average_index = 0;
 46617  01468E  0E00               	movlw	0
 46618  014690  6FD8               	movwf	_qi_isns_average_index& (0+255),b
 46619                           
 46620                           ;adc_postprocessing.c: 88: adc_results.qi_isns_adc_result = 0.0;
 46621  014692  0E00               	movlw	0
 46622  014694  6FF3               	movwf	(_adc_results+20)& (0+255),b
 46623  014696  0E00               	movlw	0
 46624  014698  6FF4               	movwf	(_adc_results+21)& (0+255),b
 46625  01469A  0E00               	movlw	0
 46626  01469C  6FF5               	movwf	(_adc_results+22)& (0+255),b
 46627  01469E  0E00               	movlw	0
 46628  0146A0  6FF6               	movwf	(_adc_results+23)& (0+255),b
 46629                           
 46630                           ;adc_postprocessing.c: 89: for (uint8_t i = 0; i < 16; i++) {
 46631  0146A2  0E00               	movlw	0
 46632  0146A4  6F7A               	movwf	ADC_PostProcessingHandler@i_3369& (0+255),b
 46633  0146A6                     i2l21056:
 46634                           
 46635                           ; BSR set to: 0
 46636                           ;adc_postprocessing.c: 90: adc_results.qi_isns_adc_result += fabs(qi_isns_average_buffer
      +                          [i]);
 46637  0146A6  C0F3  F052         	movff	_adc_results+20,i2___fladd@b
 46638  0146AA  C0F4  F053         	movff	_adc_results+21,i2___fladd@b+1
 46639  0146AE  C0F5  F054         	movff	_adc_results+22,i2___fladd@b+2
 46640  0146B2  C0F6  F055         	movff	_adc_results+23,i2___fladd@b+3
 46641  0146B6  517A               	movf	ADC_PostProcessingHandler@i_3369& (0+255),w,b
 46642  0146B8  0D04               	mullw	4
 46643  0146BA  0E00               	movlw	low _qi_isns_average_buffer
 46644  0146BC  24F3               	addwf	prodl,w,c
 46645  0146BE  6ED9               	movwf	fsr2l,c
 46646  0146C0  0E04               	movlw	high _qi_isns_average_buffer
 46647  0146C2  20F4               	addwfc	prodh,w,c
 46648  0146C4  6EDA               	movwf	fsr2h,c
 46649  0146C6  CFDE F005          	movff	postinc2,fabs@d
 46650  0146CA  CFDE F006          	movff	postinc2,fabs@d+1
 46651  0146CE  CFDE F007          	movff	postinc2,fabs@d+2
 46652  0146D2  CFDE F008          	movff	postinc2,fabs@d+3
 46653  0146D6  ECAE  F0E0         	call	_fabs	;wreg free
 46654  0146DA  C005  F056         	movff	?_fabs,i2___fladd@a
 46655  0146DE  C006  F057         	movff	?_fabs+1,i2___fladd@a+1
 46656  0146E2  C007  F058         	movff	?_fabs+2,i2___fladd@a+2
 46657  0146E6  C008  F059         	movff	?_fabs+3,i2___fladd@a+3
 46658  0146EA  EC07  F0BD         	call	i2___fladd	;wreg free
 46659  0146EE  C052  F0F3         	movff	?i2___fladd,_adc_results+20
 46660  0146F2  C053  F0F4         	movff	?i2___fladd+1,_adc_results+21
 46661  0146F6  C054  F0F5         	movff	?i2___fladd+2,_adc_results+22
 46662  0146FA  C055  F0F6         	movff	?i2___fladd+3,_adc_results+23
 46663  0146FE  0100               	movlb	0	; () banked
 46664  014700  2B7A               	incf	ADC_PostProcessingHandler@i_3369& (0+255),f,b
 46665                           
 46666                           ; BSR set to: 0
 46667  014702  0E0F               	movlw	15
 46668  014704  657A               	cpfsgt	ADC_PostProcessingHandler@i_3369& (0+255),b
 46669  014706  D7CF               	goto	i2l21056
 46670                           
 46671                           ; BSR set to: 0
 46672                           ;adc_postprocessing.c: 91: };adc_postprocessing.c: 92: adc_results.qi_isns_adc_result /=
      +                           (float) 16;
 46673  014708  C0F3  F013         	movff	_adc_results+20,i2___fldiv@b
 46674  01470C  C0F4  F014         	movff	_adc_results+21,i2___fldiv@b+1
 46675  014710  C0F5  F015         	movff	_adc_results+22,i2___fldiv@b+2
 46676  014714  C0F6  F016         	movff	_adc_results+23,i2___fldiv@b+3
 46677  014718  0E00               	movlw	0
 46678  01471A  6E17               	movwf	i2___fldiv@a,c
 46679  01471C  0E00               	movlw	0
 46680  01471E  6E18               	movwf	i2___fldiv@a+1,c
 46681  014720  0E80               	movlw	128
 46682  014722  6E19               	movwf	i2___fldiv@a+2,c
 46683  014724  0E41               	movlw	65
 46684  014726  6E1A               	movwf	i2___fldiv@a+3,c
 46685  014728  ECD0  F0C3         	call	i2___fldiv	;wreg free
 46686  01472C  C013  F0F3         	movff	?i2___fldiv,_adc_results+20
 46687  014730  C014  F0F4         	movff	?i2___fldiv+1,_adc_results+21
 46688  014734  C015  F0F5         	movff	?i2___fldiv+2,_adc_results+22
 46689  014738  C016  F0F6         	movff	?i2___fldiv+3,_adc_results+23
 46690  01473C                     i2l21064:
 46691                           
 46692                           ;adc_postprocessing.c: 93: };adc_postprocessing.c: 95: next_adc_channel = channel_Temp;
 46693  01473C  0E3D               	movlw	61
 46694  01473E  D0AC               	goto	L50
 46695  014740                     i2l21066:
 46696                           
 46697                           ; BSR set to: 0
 46698                           ;adc_postprocessing.c: 99: adc_results.die_temp_adc_result = ((0.659 - (5.0 / 4.0) * (1.
      +                          0 - ADCC_GetFilterValue()/1023.0)) / .00132) - 40.0 + temp_adc_offset;
 46699  014740  0E00               	movlw	0
 46700  014742  6E30               	movwf	i2___flmul@a,c
 46701  014744  0E00               	movlw	0
 46702  014746  6E31               	movwf	i2___flmul@a+1,c
 46703  014748  0EA0               	movlw	160
 46704  01474A  6E32               	movwf	i2___flmul@a+2,c
 46705  01474C  0E3F               	movlw	63
 46706  01474E  6E33               	movwf	i2___flmul@a+3,c
 46707  014750  0E00               	movlw	0
 46708  014752  6E17               	movwf	i2___fldiv@a,c
 46709  014754  0EC0               	movlw	192
 46710  014756  6E18               	movwf	i2___fldiv@a+1,c
 46711  014758  0E7F               	movlw	127
 46712  01475A  6E19               	movwf	i2___fldiv@a+2,c
 46713  01475C  0E44               	movlw	68
 46714  01475E  6E1A               	movwf	i2___fldiv@a+3,c
 46715  014760  EC84  F0E4         	call	_ADCC_GetFilterValue	;wreg free
 46716  014764  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 46717  014768  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 46718  01476C  6A07               	clrf	i2___xxtofl@val+2,c
 46719  01476E  6A08               	clrf	i2___xxtofl@val+3,c
 46720  014770  0E00               	movlw	0
 46721  014772  EC4C  F0CF         	call	i2___xxtofl
 46722  014776  C005  F013         	movff	?i2___xxtofl,i2___fldiv@b
 46723  01477A  C006  F014         	movff	?i2___xxtofl+1,i2___fldiv@b+1
 46724  01477E  C007  F015         	movff	?i2___xxtofl+2,i2___fldiv@b+2
 46725  014782  C008  F016         	movff	?i2___xxtofl+3,i2___fldiv@b+3
 46726  014786  ECD0  F0C3         	call	i2___fldiv	;wreg free
 46727  01478A  C013  F068         	movff	?i2___fldiv,i2___flsub@a
 46728  01478E  C014  F069         	movff	?i2___fldiv+1,i2___flsub@a+1
 46729  014792  C015  F06A         	movff	?i2___fldiv+2,i2___flsub@a+2
 46730  014796  C016  F06B         	movff	?i2___fldiv+3,i2___flsub@a+3
 46731  01479A  0E00               	movlw	0
 46732  01479C  0100               	movlb	0	; () banked
 46733  01479E  6F64               	movwf	i2___flsub@b& (0+255),b
 46734  0147A0  0E00               	movlw	0
 46735  0147A2  6F65               	movwf	(i2___flsub@b+1)& (0+255),b
 46736  0147A4  0E80               	movlw	128
 46737  0147A6  6F66               	movwf	(i2___flsub@b+2)& (0+255),b
 46738  0147A8  0E3F               	movlw	63
 46739  0147AA  6F67               	movwf	(i2___flsub@b+3)& (0+255),b
 46740  0147AC  EC63  F0DE         	call	i2___flsub	;wreg free
 46741  0147B0  C064  F02C         	movff	?i2___flsub,i2___flmul@b
 46742  0147B4  C065  F02D         	movff	?i2___flsub+1,i2___flmul@b+1
 46743  0147B8  C066  F02E         	movff	?i2___flsub+2,i2___flmul@b+2
 46744  0147BC  C067  F02F         	movff	?i2___flsub+3,i2___flmul@b+3
 46745  0147C0  EC50  F0B8         	call	i2___flmul	;wreg free
 46746  0147C4  C02C  F06C         	movff	?i2___flmul,_ADC_PostProcessingHandler$6409
 46747  0147C8  C02D  F06D         	movff	?i2___flmul+1,_ADC_PostProcessingHandler$6409+1
 46748  0147CC  C02E  F06E         	movff	?i2___flmul+2,_ADC_PostProcessingHandler$6409+2
 46749  0147D0  C02F  F06F         	movff	?i2___flmul+3,_ADC_PostProcessingHandler$6409+3
 46750                           
 46751                           ;adc_postprocessing.c: 99: adc_results.die_temp_adc_result = ((0.659 - (5.0 / 4.0) * (1.
      +                          0 - ADCC_GetFilterValue()/1023.0)) / .00132) - 40.0 + temp_adc_offset;
 46752  0147D4  0EDA               	movlw	218
 46753  0147D6  6E17               	movwf	i2___fldiv@a,c
 46754  0147D8  0E03               	movlw	3
 46755  0147DA  6E18               	movwf	i2___fldiv@a+1,c
 46756  0147DC  0EAD               	movlw	173
 46757  0147DE  6E19               	movwf	i2___fldiv@a+2,c
 46758  0147E0  0E3A               	movlw	58
 46759  0147E2  6E1A               	movwf	i2___fldiv@a+3,c
 46760  0147E4  C06C  F068         	movff	_ADC_PostProcessingHandler$6409,i2___flsub@a
 46761  0147E8  C06D  F069         	movff	_ADC_PostProcessingHandler$6409+1,i2___flsub@a+1
 46762  0147EC  C06E  F06A         	movff	_ADC_PostProcessingHandler$6409+2,i2___flsub@a+2
 46763  0147F0  C06F  F06B         	movff	_ADC_PostProcessingHandler$6409+3,i2___flsub@a+3
 46764  0147F4  0E39               	movlw	57
 46765  0147F6  0100               	movlb	0	; () banked
 46766  0147F8  6F64               	movwf	i2___flsub@b& (0+255),b
 46767  0147FA  0EB4               	movlw	180
 46768  0147FC  6F65               	movwf	(i2___flsub@b+1)& (0+255),b
 46769  0147FE  0E28               	movlw	40
 46770  014800  6F66               	movwf	(i2___flsub@b+2)& (0+255),b
 46771  014802  0E3F               	movlw	63
 46772  014804  6F67               	movwf	(i2___flsub@b+3)& (0+255),b
 46773  014806  EC63  F0DE         	call	i2___flsub	;wreg free
 46774  01480A  C064  F013         	movff	?i2___flsub,i2___fldiv@b
 46775  01480E  C065  F014         	movff	?i2___flsub+1,i2___fldiv@b+1
 46776  014812  C066  F015         	movff	?i2___flsub+2,i2___fldiv@b+2
 46777  014816  C067  F016         	movff	?i2___flsub+3,i2___fldiv@b+3
 46778  01481A  ECD0  F0C3         	call	i2___fldiv	;wreg free
 46779  01481E  C013  F070         	movff	?i2___fldiv,_ADC_PostProcessingHandler$6410
 46780  014822  C014  F071         	movff	?i2___fldiv+1,_ADC_PostProcessingHandler$6410+1
 46781  014826  C015  F072         	movff	?i2___fldiv+2,_ADC_PostProcessingHandler$6410+2
 46782  01482A  C016  F073         	movff	?i2___fldiv+3,_ADC_PostProcessingHandler$6410+3
 46783                           
 46784                           ;adc_postprocessing.c: 99: adc_results.die_temp_adc_result = ((0.659 - (5.0 / 4.0) * (1.
      +                          0 - ADCC_GetFilterValue()/1023.0)) / .00132) - 40.0 + temp_adc_offset;
 46785  01482E  0E00               	movlw	0
 46786  014830  6E56               	movwf	i2___fladd@a,c
 46787  014832  0E00               	movlw	0
 46788  014834  6E57               	movwf	i2___fladd@a+1,c
 46789  014836  0E20               	movlw	32
 46790  014838  6E58               	movwf	i2___fladd@a+2,c
 46791  01483A  0EC2               	movlw	194
 46792  01483C  6E59               	movwf	i2___fladd@a+3,c
 46793  01483E  C070  F052         	movff	_ADC_PostProcessingHandler$6410,i2___fladd@b
 46794  014842  C071  F053         	movff	_ADC_PostProcessingHandler$6410+1,i2___fladd@b+1
 46795  014846  C072  F054         	movff	_ADC_PostProcessingHandler$6410+2,i2___fladd@b+2
 46796  01484A  C073  F055         	movff	_ADC_PostProcessingHandler$6410+3,i2___fladd@b+3
 46797  01484E  EC07  F0BD         	call	i2___fladd	;wreg free
 46798  014852  C052  F074         	movff	?i2___fladd,_ADC_PostProcessingHandler$6411
 46799  014856  C053  F075         	movff	?i2___fladd+1,_ADC_PostProcessingHandler$6411+1
 46800  01485A  C054  F076         	movff	?i2___fladd+2,_ADC_PostProcessingHandler$6411+2
 46801  01485E  C055  F077         	movff	?i2___fladd+3,_ADC_PostProcessingHandler$6411+3
 46802                           
 46803                           ;adc_postprocessing.c: 99: adc_results.die_temp_adc_result = ((0.659 - (5.0 / 4.0) * (1.
      +                          0 - ADCC_GetFilterValue()/1023.0)) / .00132) - 40.0 + temp_adc_offset;
 46804  014862  C074  F052         	movff	_ADC_PostProcessingHandler$6411,i2___fladd@b
 46805  014866  C075  F053         	movff	_ADC_PostProcessingHandler$6411+1,i2___fladd@b+1
 46806  01486A  C076  F054         	movff	_ADC_PostProcessingHandler$6411+2,i2___fladd@b+2
 46807  01486E  C077  F055         	movff	_ADC_PostProcessingHandler$6411+3,i2___fladd@b+3
 46808  014872  0EB8               	movlw	184
 46809  014874  6E56               	movwf	i2___fladd@a,c
 46810  014876  0E0E               	movlw	14
 46811  014878  6E57               	movwf	i2___fladd@a+1,c
 46812  01487A  0EBC               	movlw	188
 46813  01487C  6E58               	movwf	i2___fladd@a+2,c
 46814  01487E  0E43               	movlw	67
 46815  014880  6E59               	movwf	i2___fladd@a+3,c
 46816  014882  EC07  F0BD         	call	i2___fladd	;wreg free
 46817  014886  C052  F0F7         	movff	?i2___fladd,_adc_results+24
 46818  01488A  C053  F0F8         	movff	?i2___fladd+1,_adc_results+25
 46819  01488E  C054  F0F9         	movff	?i2___fladd+2,_adc_results+26
 46820  014892  C055  F0FA         	movff	?i2___fladd+3,_adc_results+27
 46821                           
 46822                           ;adc_postprocessing.c: 101: next_adc_channel = channel_VSS;
 46823  014896  0E3C               	movlw	60
 46824  014898                     L50:
 46825  014898  0100               	movlb	0	; () banked
 46826  01489A  6FFE               	movwf	_next_adc_channel& (0+255),b
 46827                           
 46828                           ;adc_postprocessing.c: 102: break;
 46829  01489C  D01C               	goto	i2l21082
 46830  01489E                     i2l21076:
 46831                           
 46832                           ; BSR set to: 0
 46833                           ;adc_postprocessing.c: 107: error_handler.ADC_general_error_flag = 1;
 46834  01489E  0E01               	movlw	1
 46835  0148A0  6FBA               	movwf	(_error_handler+1)& (0+255),b
 46836                           
 46837                           ;adc_postprocessing.c: 108: break;
 46838  0148A2  D019               	goto	i2l21082
 46839  0148A4                     i2l21080:
 46840  0148A4  0100               	movlb	0	; () banked
 46841  0148A6  5178               	movf	ADC_PostProcessingHandler@current_adc_channel& (0+255),w,b
 46842                           
 46843                           ; Switch size 1, requested type "simple"
 46844                           ; Number of cases is 7, Range of values is 0 to 63
 46845                           ; switch strategies available:
 46846                           ; Name         Instructions Cycles
 46847                           ; simple_byte           22    12 (average)
 46848                           ;	Chosen strategy is simple_byte
 46849  0148A8  0A00               	xorlw	0	; case 0
 46850  0148AA  B4D8               	btfsc	status,2,c
 46851  0148AC  D502               	goto	i2l21014
 46852  0148AE  0A01               	xorlw	1	; case 1
 46853  0148B0  B4D8               	btfsc	status,2,c
 46854  0148B2  D57E               	goto	i2l21018
 46855  0148B4  0A05               	xorlw	5	; case 4
 46856  0148B6  B4D8               	btfsc	status,2,c
 46857  0148B8  D48F               	goto	i2l21010
 46858  0148BA  0A01               	xorlw	1	; case 5
 46859  0148BC  B4D8               	btfsc	status,2,c
 46860  0148BE  D65C               	goto	i2l21042
 46861  0148C0  0A39               	xorlw	57	; case 60
 46862  0148C2  B4D8               	btfsc	status,2,c
 46863  0148C4  EF47  F0A0         	goto	i2l20996
 46864  0148C8  0A01               	xorlw	1	; case 61
 46865  0148CA  B4D8               	btfsc	status,2,c
 46866  0148CC  D739               	goto	i2l21066
 46867  0148CE  0A02               	xorlw	2	; case 63
 46868  0148D0  B4D8               	btfsc	status,2,c
 46869  0148D2  D404               	goto	i2l21000
 46870  0148D4  D7E4               	goto	i2l21076
 46871  0148D6                     i2l21082:
 46872                           
 46873                           ; BSR set to: 0
 46874                           ;adc_postprocessing.c: 112: if (ADCC_GetCurrentCountofConversions() != 255) {
 46875  0148D6  EC96  F0E5         	call	_ADCC_GetCurrentCountofConversions	;wreg free
 46876  0148DA  0AFF               	xorlw	255
 46877  0148DC  B4D8               	btfsc	status,2,c
 46878  0148DE  D003               	goto	i2l21086
 46879                           
 46880                           ;adc_postprocessing.c: 113: error_handler.ADC_general_error_flag = 1;
 46881  0148E0  0E01               	movlw	1
 46882  0148E2  0100               	movlb	0	; () banked
 46883  0148E4  6FBA               	movwf	(_error_handler+1)& (0+255),b
 46884  0148E6                     i2l21086:
 46885                           
 46886                           ;adc_postprocessing.c: 114: };adc_postprocessing.c: 116: if (ADCC_HasAccumulatorOverflow
      +                          ed()) {
 46887  0148E6  EC53  F0E5         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 46888  0148EA  0900               	iorlw	0
 46889  0148EC  B4D8               	btfsc	status,2,c
 46890  0148EE  D003               	goto	i2l21090
 46891                           
 46892                           ;adc_postprocessing.c: 117: error_handler.ADC_general_error_flag = 1;
 46893  0148F0  0E01               	movlw	1
 46894  0148F2  0100               	movlb	0	; () banked
 46895  0148F4  6FBA               	movwf	(_error_handler+1)& (0+255),b
 46896  0148F6                     i2l21090:
 46897                           
 46898                           ;adc_postprocessing.c: 118: };adc_postprocessing.c: 121: adc_calculations.input_power = 
      +                          adc_results.pos12_adc_result * adc_results.pos12_isns_adc_result;
 46899  0148F6  C0EB  F02C         	movff	_adc_results+12,i2___flmul@b
 46900  0148FA  C0EC  F02D         	movff	_adc_results+13,i2___flmul@b+1
 46901  0148FE  C0ED  F02E         	movff	_adc_results+14,i2___flmul@b+2
 46902  014902  C0EE  F02F         	movff	_adc_results+15,i2___flmul@b+3
 46903  014906  C0EF  F030         	movff	_adc_results+16,i2___flmul@a
 46904  01490A  C0F0  F031         	movff	_adc_results+17,i2___flmul@a+1
 46905  01490E  C0F1  F032         	movff	_adc_results+18,i2___flmul@a+2
 46906  014912  C0F2  F033         	movff	_adc_results+19,i2___flmul@a+3
 46907  014916  EC50  F0B8         	call	i2___flmul	;wreg free
 46908  01491A  C02C  F2BF         	movff	?i2___flmul,_adc_calculations
 46909  01491E  C02D  F2C0         	movff	?i2___flmul+1,_adc_calculations+1
 46910  014922  C02E  F2C1         	movff	?i2___flmul+2,_adc_calculations+2
 46911  014926  C02F  F2C2         	movff	?i2___flmul+3,_adc_calculations+3
 46912                           
 46913                           ;adc_postprocessing.c: 122: adc_calculations.output_power = adc_results.pos5_adc_result 
      +                          * adc_results.qi_isns_adc_result;
 46914  01492A  C0E7  F02C         	movff	_adc_results+8,i2___flmul@b
 46915  01492E  C0E8  F02D         	movff	_adc_results+9,i2___flmul@b+1
 46916  014932  C0E9  F02E         	movff	_adc_results+10,i2___flmul@b+2
 46917  014936  C0EA  F02F         	movff	_adc_results+11,i2___flmul@b+3
 46918  01493A  C0F3  F030         	movff	_adc_results+20,i2___flmul@a
 46919  01493E  C0F4  F031         	movff	_adc_results+21,i2___flmul@a+1
 46920  014942  C0F5  F032         	movff	_adc_results+22,i2___flmul@a+2
 46921  014946  C0F6  F033         	movff	_adc_results+23,i2___flmul@a+3
 46922  01494A  EC50  F0B8         	call	i2___flmul	;wreg free
 46923  01494E  C02C  F2C3         	movff	?i2___flmul,_adc_calculations+4
 46924  014952  C02D  F2C4         	movff	?i2___flmul+1,_adc_calculations+5
 46925  014956  C02E  F2C5         	movff	?i2___flmul+2,_adc_calculations+6
 46926  01495A  C02F  F2C6         	movff	?i2___flmul+3,_adc_calculations+7
 46927                           
 46928                           ;adc_postprocessing.c: 123: adc_calculations.efficiency = (adc_calculations.output_power
      +                           / adc_calculations.input_power) * 100.0;
 46929  01495E  C2BF  F017         	movff	_adc_calculations,i2___fldiv@a
 46930  014962  C2C0  F018         	movff	_adc_calculations+1,i2___fldiv@a+1
 46931  014966  C2C1  F019         	movff	_adc_calculations+2,i2___fldiv@a+2
 46932  01496A  C2C2  F01A         	movff	_adc_calculations+3,i2___fldiv@a+3
 46933  01496E  C2C3  F013         	movff	_adc_calculations+4,i2___fldiv@b
 46934  014972  C2C4  F014         	movff	_adc_calculations+5,i2___fldiv@b+1
 46935  014976  C2C5  F015         	movff	_adc_calculations+6,i2___fldiv@b+2
 46936  01497A  C2C6  F016         	movff	_adc_calculations+7,i2___fldiv@b+3
 46937  01497E  ECD0  F0C3         	call	i2___fldiv	;wreg free
 46938  014982  C013  F02C         	movff	?i2___fldiv,i2___flmul@b
 46939  014986  C014  F02D         	movff	?i2___fldiv+1,i2___flmul@b+1
 46940  01498A  C015  F02E         	movff	?i2___fldiv+2,i2___flmul@b+2
 46941  01498E  C016  F02F         	movff	?i2___fldiv+3,i2___flmul@b+3
 46942  014992  0E00               	movlw	0
 46943  014994  6E30               	movwf	i2___flmul@a,c
 46944  014996  0E00               	movlw	0
 46945  014998  6E31               	movwf	i2___flmul@a+1,c
 46946  01499A  0EC8               	movlw	200
 46947  01499C  6E32               	movwf	i2___flmul@a+2,c
 46948  01499E  0E42               	movlw	66
 46949  0149A0  6E33               	movwf	i2___flmul@a+3,c
 46950  0149A2  EC50  F0B8         	call	i2___flmul	;wreg free
 46951  0149A6  C02C  F2C7         	movff	?i2___flmul,_adc_calculations+8
 46952  0149AA  C02D  F2C8         	movff	?i2___flmul+1,_adc_calculations+9
 46953  0149AE  C02E  F2C9         	movff	?i2___flmul+2,_adc_calculations+10
 46954  0149B2  C02F  F2CA         	movff	?i2___flmul+3,_adc_calculations+11
 46955                           
 46956                           ;adc_postprocessing.c: 126: if (adc_calculations.efficiency > 99.0) adc_calculations.eff
      +                          iciency = 99.0;
 46957  0149B6  0E00               	movlw	0
 46958  0149B8  6E01               	movwf	i2___flge@ff1,c
 46959  0149BA  0E00               	movlw	0
 46960  0149BC  6E02               	movwf	i2___flge@ff1+1,c
 46961  0149BE  0EC6               	movlw	198
 46962  0149C0  6E03               	movwf	i2___flge@ff1+2,c
 46963  0149C2  0E42               	movlw	66
 46964  0149C4  6E04               	movwf	i2___flge@ff1+3,c
 46965  0149C6  C2C7  F005         	movff	_adc_calculations+8,i2___flge@ff2
 46966  0149CA  C2C8  F006         	movff	_adc_calculations+9,i2___flge@ff2+1
 46967  0149CE  C2C9  F007         	movff	_adc_calculations+10,i2___flge@ff2+2
 46968  0149D2  C2CA  F008         	movff	_adc_calculations+11,i2___flge@ff2+3
 46969  0149D6  ECCC  F0D3         	call	i2___flge	;wreg free
 46970  0149DA  B0D8               	btfsc	status,0,c
 46971  0149DC  D009               	goto	i2l21100
 46972  0149DE  0E00               	movlw	0
 46973  0149E0  0102               	movlb	2	; () banked
 46974  0149E2  6FC7               	movwf	(_adc_calculations+8)& (0+255),b
 46975  0149E4  0E00               	movlw	0
 46976  0149E6  6FC8               	movwf	(_adc_calculations+9)& (0+255),b
 46977  0149E8  0EC6               	movlw	198
 46978  0149EA  6FC9               	movwf	(_adc_calculations+10)& (0+255),b
 46979  0149EC  0E42               	movlw	66
 46980  0149EE  6FCA               	movwf	(_adc_calculations+11)& (0+255),b
 46981  0149F0                     i2l21100:
 46982                           
 46983                           ;adc_postprocessing.c: 129: TMR2_StartTimer();
 46984  0149F0  EC7F  F0E5         	call	_TMR2_StartTimer	;wreg free
 46985  0149F4  0012               	return		;funcret
 46986  0149F6                     __end_of_ADC_PostProcessingHandler:
 46987                           	opt callstack 0
 46988                           
 46989 ;; *************** function i2___xxtofl *****************
 46990 ;; Defined at:
 46991 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
 46992 ;; Parameters:    Size  Location     Type
 46993 ;;  sign            1    wreg     unsigned char 
 46994 ;;  val             4    4[COMRAM] long 
 46995 ;; Auto vars:     Size  Location     Type
 46996 ;;  sign            1   12[COMRAM] unsigned char 
 46997 ;;  __xxtofl        4   14[COMRAM] unsigned long 
 46998 ;;  __xxtofl        1   13[COMRAM] unsigned char 
 46999 ;; Return value:  Size  Location     Type
 47000 ;;                  4    4[COMRAM] unsigned char 
 47001 ;; Registers used:
 47002 ;;		wreg, status,2, status,0
 47003 ;; Tracked objects:
 47004 ;;		On entry : 0/0
 47005 ;;		On exit  : 0/0
 47006 ;;		Unchanged: 0/0
 47007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47008 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47009 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47010 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47011 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47012 ;;Total ram usage:       14 bytes
 47013 ;; Hardware stack levels used:    1
 47014 ;; This function calls:
 47015 ;;		Nothing
 47016 ;; This function is called by:
 47017 ;;		_ADC_PostProcessingHandler
 47018 ;;		i2__doprnt
 47019 ;; This function uses a non-reentrant model
 47020 ;;
 47021                           
 47022                           	psect	text200
 47023  019E98                     __ptext200:
 47024                           	opt callstack 0
 47025  019E98                     i2___xxtofl:
 47026                           	opt callstack 13
 47027                           
 47028                           ;incstack = 0
 47029                           ;i2___xxtofl@sign stored from wreg
 47030  019E98  6E0D               	movwf	i2___xxtofl@sign,c
 47031  019E9A  500D               	movf	i2___xxtofl@sign,w,c
 47032  019E9C  A4D8               	btfss	status,2,c
 47033  019E9E  AE08               	btfss	i2___xxtofl@val+3,7,c
 47034  019EA0  D01A               	goto	i2l3332
 47035  019EA2  C005  F009         	movff	i2___xxtofl@val,??i2___xxtofl
 47036  019EA6  C006  F00A         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 47037  019EAA  C007  F00B         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 47038  019EAE  C008  F00C         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 47039  019EB2  1E09               	comf	??i2___xxtofl,f,c
 47040  019EB4  1E0A               	comf	??i2___xxtofl+1,f,c
 47041  019EB6  1E0B               	comf	??i2___xxtofl+2,f,c
 47042  019EB8  1E0C               	comf	??i2___xxtofl+3,f,c
 47043  019EBA  2A09               	incf	??i2___xxtofl,f,c
 47044  019EBC  0E00               	movlw	0
 47045  019EBE  220A               	addwfc	??i2___xxtofl+1,f,c
 47046  019EC0  220B               	addwfc	??i2___xxtofl+2,f,c
 47047  019EC2  220C               	addwfc	??i2___xxtofl+3,f,c
 47048  019EC4  C009  F00F         	movff	??i2___xxtofl,i2___xxtofl@arg
 47049  019EC8  C00A  F010         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 47050  019ECC  C00B  F011         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 47051  019ED0  C00C  F012         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 47052  019ED4  D008               	goto	i2l19818
 47053  019ED6                     i2l3332:
 47054  019ED6  C005  F00F         	movff	i2___xxtofl@val,i2___xxtofl@arg
 47055  019EDA  C006  F010         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 47056  019EDE  C007  F011         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 47057  019EE2  C008  F012         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 47058  019EE6                     i2l19818:
 47059  019EE6  5005               	movf	i2___xxtofl@val,w,c
 47060  019EE8  1006               	iorwf	i2___xxtofl@val+1,w,c
 47061  019EEA  1007               	iorwf	i2___xxtofl@val+2,w,c
 47062  019EEC  1008               	iorwf	i2___xxtofl@val+3,w,c
 47063  019EEE  A4D8               	btfss	status,2,c
 47064  019EF0  D009               	goto	i2l19824
 47065  019EF2  0E00               	movlw	0
 47066  019EF4  6E05               	movwf	?i2___xxtofl,c
 47067  019EF6  0E00               	movlw	0
 47068  019EF8  6E06               	movwf	?i2___xxtofl+1,c
 47069  019EFA  0E00               	movlw	0
 47070  019EFC  6E07               	movwf	?i2___xxtofl+2,c
 47071  019EFE  0E00               	movlw	0
 47072  019F00  6E08               	movwf	?i2___xxtofl+3,c
 47073  019F02  0012               	return	
 47074  019F04                     i2l19824:
 47075  019F04  0E96               	movlw	150
 47076  019F06  6E0E               	movwf	i2___xxtofl@exp,c
 47077  019F08  D006               	goto	i2l19828
 47078  019F0A                     i2l19826:
 47079  019F0A  2A0E               	incf	i2___xxtofl@exp,f,c
 47080  019F0C  90D8               	bcf	status,0,c
 47081  019F0E  3212               	rrcf	i2___xxtofl@arg+3,f,c
 47082  019F10  3211               	rrcf	i2___xxtofl@arg+2,f,c
 47083  019F12  3210               	rrcf	i2___xxtofl@arg+1,f,c
 47084  019F14  320F               	rrcf	i2___xxtofl@arg,f,c
 47085  019F16                     i2l19828:
 47086  019F16  0E00               	movlw	0
 47087  019F18  140F               	andwf	i2___xxtofl@arg,w,c
 47088  019F1A  6E09               	movwf	??i2___xxtofl& (0+255),c
 47089  019F1C  0E00               	movlw	0
 47090  019F1E  1410               	andwf	i2___xxtofl@arg+1,w,c
 47091  019F20  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 47092  019F22  0E00               	movlw	0
 47093  019F24  1411               	andwf	i2___xxtofl@arg+2,w,c
 47094  019F26  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 47095  019F28  0EFE               	movlw	254
 47096  019F2A  1412               	andwf	i2___xxtofl@arg+3,w,c
 47097  019F2C  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 47098  019F2E  5009               	movf	??i2___xxtofl,w,c
 47099  019F30  100A               	iorwf	??i2___xxtofl+1,w,c
 47100  019F32  100B               	iorwf	??i2___xxtofl+2,w,c
 47101  019F34  100C               	iorwf	??i2___xxtofl+3,w,c
 47102  019F36  B4D8               	btfsc	status,2,c
 47103  019F38  D00D               	goto	i2l3339
 47104  019F3A  D7E7               	goto	i2l19826
 47105  019F3C                     i2l19830:
 47106  019F3C  2A0E               	incf	i2___xxtofl@exp,f,c
 47107  019F3E  0E01               	movlw	1
 47108  019F40  260F               	addwf	i2___xxtofl@arg,f,c
 47109  019F42  0E00               	movlw	0
 47110  019F44  2210               	addwfc	i2___xxtofl@arg+1,f,c
 47111  019F46  2211               	addwfc	i2___xxtofl@arg+2,f,c
 47112  019F48  2212               	addwfc	i2___xxtofl@arg+3,f,c
 47113  019F4A  90D8               	bcf	status,0,c
 47114  019F4C  3212               	rrcf	i2___xxtofl@arg+3,f,c
 47115  019F4E  3211               	rrcf	i2___xxtofl@arg+2,f,c
 47116  019F50  3210               	rrcf	i2___xxtofl@arg+1,f,c
 47117  019F52  320F               	rrcf	i2___xxtofl@arg,f,c
 47118  019F54                     i2l3339:
 47119  019F54  0E00               	movlw	0
 47120  019F56  140F               	andwf	i2___xxtofl@arg,w,c
 47121  019F58  6E09               	movwf	??i2___xxtofl& (0+255),c
 47122  019F5A  0E00               	movlw	0
 47123  019F5C  1410               	andwf	i2___xxtofl@arg+1,w,c
 47124  019F5E  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 47125  019F60  0E00               	movlw	0
 47126  019F62  1411               	andwf	i2___xxtofl@arg+2,w,c
 47127  019F64  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 47128  019F66  0EFF               	movlw	255
 47129  019F68  1412               	andwf	i2___xxtofl@arg+3,w,c
 47130  019F6A  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 47131  019F6C  5009               	movf	??i2___xxtofl,w,c
 47132  019F6E  100A               	iorwf	??i2___xxtofl+1,w,c
 47133  019F70  100B               	iorwf	??i2___xxtofl+2,w,c
 47134  019F72  100C               	iorwf	??i2___xxtofl+3,w,c
 47135  019F74  B4D8               	btfsc	status,2,c
 47136  019F76  D007               	goto	i2l19838
 47137  019F78  D7E1               	goto	i2l19830
 47138  019F7A                     i2l19836:
 47139  019F7A  060E               	decf	i2___xxtofl@exp,f,c
 47140  019F7C  90D8               	bcf	status,0,c
 47141  019F7E  360F               	rlcf	i2___xxtofl@arg,f,c
 47142  019F80  3610               	rlcf	i2___xxtofl@arg+1,f,c
 47143  019F82  3611               	rlcf	i2___xxtofl@arg+2,f,c
 47144  019F84  3612               	rlcf	i2___xxtofl@arg+3,f,c
 47145  019F86                     i2l19838:
 47146  019F86  BE11               	btfsc	i2___xxtofl@arg+2,7,c
 47147  019F88  D003               	goto	i2u2527_40
 47148  019F8A  0E02               	movlw	2
 47149  019F8C  600E               	cpfslt	i2___xxtofl@exp,c
 47150  019F8E  D7F5               	goto	i2l19836
 47151  019F90                     i2u2527_40:
 47152  019F90  A00E               	btfss	i2___xxtofl@exp,0,c
 47153  019F92  9E11               	bcf	i2___xxtofl@arg+2,7,c
 47154  019F94  90D8               	bcf	status,0,c
 47155  019F96  320E               	rrcf	i2___xxtofl@exp,f,c
 47156  019F98  C00E  F009         	movff	i2___xxtofl@exp,??i2___xxtofl
 47157  019F9C  6A0A               	clrf	(??i2___xxtofl+1)& (0+255),c
 47158  019F9E  6A0B               	clrf	(??i2___xxtofl+2)& (0+255),c
 47159  019FA0  6A0C               	clrf	(??i2___xxtofl+3)& (0+255),c
 47160  019FA2  C009  F00C         	movff	??i2___xxtofl,??i2___xxtofl+3
 47161  019FA6  6A0B               	clrf	??i2___xxtofl+2,c
 47162  019FA8  6A0A               	clrf	??i2___xxtofl+1,c
 47163  019FAA  6A09               	clrf	??i2___xxtofl,c
 47164  019FAC  5009               	movf	??i2___xxtofl,w,c
 47165  019FAE  120F               	iorwf	i2___xxtofl@arg,f,c
 47166  019FB0  500A               	movf	??i2___xxtofl+1,w,c
 47167  019FB2  1210               	iorwf	i2___xxtofl@arg+1,f,c
 47168  019FB4  500B               	movf	??i2___xxtofl+2,w,c
 47169  019FB6  1211               	iorwf	i2___xxtofl@arg+2,f,c
 47170  019FB8  500C               	movf	??i2___xxtofl+3,w,c
 47171  019FBA  1212               	iorwf	i2___xxtofl@arg+3,f,c
 47172  019FBC  500D               	movf	i2___xxtofl@sign,w,c
 47173  019FBE  A4D8               	btfss	status,2,c
 47174  019FC0  AE08               	btfss	i2___xxtofl@val+3,7,c
 47175  019FC2  D001               	goto	i2l19854
 47176  019FC4  8E12               	bsf	i2___xxtofl@arg+3,7,c
 47177  019FC6                     i2l19854:
 47178  019FC6  C00F  F005         	movff	i2___xxtofl@arg,?i2___xxtofl
 47179  019FCA  C010  F006         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 47180  019FCE  C011  F007         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 47181  019FD2  C012  F008         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 47182  019FD6  0012               	return		;funcret
 47183  019FD8                     __end_ofi2___xxtofl:
 47184                           	opt callstack 0
 47185                           
 47186 ;; *************** function i2___flsub *****************
 47187 ;; Defined at:
 47188 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 47189 ;; Parameters:    Size  Location     Type
 47190 ;;  b               4    4[BANK0 ] unsigned char 
 47191 ;;  a               4    8[BANK0 ] unsigned char 
 47192 ;; Auto vars:     Size  Location     Type
 47193 ;;		None
 47194 ;; Return value:  Size  Location     Type
 47195 ;;                  4    4[BANK0 ] unsigned char 
 47196 ;; Registers used:
 47197 ;;		wreg, status,2, status,0, cstack
 47198 ;; Tracked objects:
 47199 ;;		On entry : 0/0
 47200 ;;		On exit  : 0/0
 47201 ;;		Unchanged: 0/0
 47202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47203 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47206 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47207 ;;Total ram usage:        8 bytes
 47208 ;; Hardware stack levels used:    1
 47209 ;; Hardware stack levels required when called:    1
 47210 ;; This function calls:
 47211 ;;		i2___fladd
 47212 ;; This function is called by:
 47213 ;;		_ADC_PostProcessingHandler
 47214 ;;		i2__doprnt
 47215 ;; This function uses a non-reentrant model
 47216 ;;
 47217                           
 47218                           	psect	text201
 47219  01BCC6                     __ptext201:
 47220                           	opt callstack 0
 47221  01BCC6                     i2___flsub:
 47222                           	opt callstack 12
 47223                           
 47224                           ;incstack = 0
 47225  01BCC6  0E00               	movlw	0
 47226  01BCC8  0100               	movlb	0	; () banked
 47227  01BCCA  1B68               	xorwf	i2___flsub@a& (0+255),f,b
 47228  01BCCC  0E00               	movlw	0
 47229  01BCCE  1B69               	xorwf	(i2___flsub@a+1)& (0+255),f,b
 47230  01BCD0  0E00               	movlw	0
 47231  01BCD2  1B6A               	xorwf	(i2___flsub@a+2)& (0+255),f,b
 47232  01BCD4  0E80               	movlw	128
 47233  01BCD6  1B6B               	xorwf	(i2___flsub@a+3)& (0+255),f,b
 47234                           
 47235                           ; BSR set to: 0
 47236  01BCD8  C064  F052         	movff	i2___flsub@b,i2___fladd@b
 47237  01BCDC  C065  F053         	movff	i2___flsub@b+1,i2___fladd@b+1
 47238  01BCE0  C066  F054         	movff	i2___flsub@b+2,i2___fladd@b+2
 47239  01BCE4  C067  F055         	movff	i2___flsub@b+3,i2___fladd@b+3
 47240  01BCE8  C068  F056         	movff	i2___flsub@a,i2___fladd@a
 47241  01BCEC  C069  F057         	movff	i2___flsub@a+1,i2___fladd@a+1
 47242  01BCF0  C06A  F058         	movff	i2___flsub@a+2,i2___fladd@a+2
 47243  01BCF4  C06B  F059         	movff	i2___flsub@a+3,i2___fladd@a+3
 47244  01BCF8  EC07  F0BD         	call	i2___fladd	;wreg free
 47245  01BCFC  C052  F064         	movff	?i2___fladd,?i2___flsub
 47246  01BD00  C053  F065         	movff	?i2___fladd+1,?i2___flsub+1
 47247  01BD04  C054  F066         	movff	?i2___fladd+2,?i2___flsub+2
 47248  01BD08  C055  F067         	movff	?i2___fladd+3,?i2___flsub+3
 47249  01BD0C  0012               	return		;funcret
 47250  01BD0E                     __end_ofi2___flsub:
 47251                           	opt callstack 0
 47252                           
 47253 ;; *************** function i2___fladd *****************
 47254 ;; Defined at:
 47255 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 47256 ;; Parameters:    Size  Location     Type
 47257 ;;  b               4   81[COMRAM] unsigned char 
 47258 ;;  a               4   85[COMRAM] unsigned char 
 47259 ;; Auto vars:     Size  Location     Type
 47260 ;;  __fladd         1    3[BANK0 ] unsigned char 
 47261 ;;  __fladd         1    2[BANK0 ] unsigned char 
 47262 ;;  __fladd         1    1[BANK0 ] unsigned char 
 47263 ;;  __fladd         1    0[BANK0 ] unsigned char 
 47264 ;; Return value:  Size  Location     Type
 47265 ;;                  4   81[COMRAM] unsigned char 
 47266 ;; Registers used:
 47267 ;;		wreg, status,2, status,0
 47268 ;; Tracked objects:
 47269 ;;		On entry : 0/0
 47270 ;;		On exit  : 0/0
 47271 ;;		Unchanged: 0/0
 47272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47273 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47274 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47275 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47276 ;;      Totals:        12       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47277 ;;Total ram usage:       16 bytes
 47278 ;; Hardware stack levels used:    1
 47279 ;; This function calls:
 47280 ;;		Nothing
 47281 ;; This function is called by:
 47282 ;;		_ADC_PostProcessingHandler
 47283 ;;		_heartbeatTimerHandler
 47284 ;;		i2__doprnt
 47285 ;;		i2___flsub
 47286 ;; This function uses a non-reentrant model
 47287 ;;
 47288                           
 47289                           	psect	text202
 47290  017A0E                     __ptext202:
 47291                           	opt callstack 0
 47292  017A0E                     i2___fladd:
 47293                           	opt callstack 14
 47294                           
 47295                           ;incstack = 0
 47296  017A0E  5055               	movf	i2___fladd@b+3,w,c
 47297  017A10  0B80               	andlw	128
 47298  017A12  0100               	movlb	0	; () banked
 47299  017A14  6F60               	movwf	i2___fladd@signs& (0+255),b
 47300  017A16  5055               	movf	i2___fladd@b+3,w,c
 47301  017A18  2455               	addwf	i2___fladd@b+3,w,c
 47302  017A1A  6F62               	movwf	i2___fladd@bexp& (0+255),b
 47303                           
 47304                           ; BSR set to: 0
 47305  017A1C  BE54               	btfsc	i2___fladd@b+2,7,c
 47306                           
 47307                           ; BSR set to: 0
 47308  017A1E  8162               	bsf	i2___fladd@bexp& (0+255),0,b
 47309                           
 47310                           ; BSR set to: 0
 47311  017A20  5162               	movf	i2___fladd@bexp& (0+255),w,b
 47312  017A22  B4D8               	btfsc	status,2,c
 47313  017A24  D00D               	goto	i2l18868
 47314                           
 47315                           ; BSR set to: 0
 47316  017A26  2962               	incf	i2___fladd@bexp& (0+255),w,b
 47317  017A28  A4D8               	btfss	status,2,c
 47318  017A2A  D008               	goto	i2l18864
 47319                           
 47320                           ; BSR set to: 0
 47321  017A2C  0E00               	movlw	0
 47322  017A2E  6E52               	movwf	i2___fladd@b,c
 47323  017A30  0E00               	movlw	0
 47324  017A32  6E53               	movwf	i2___fladd@b+1,c
 47325  017A34  0E00               	movlw	0
 47326  017A36  6E54               	movwf	i2___fladd@b+2,c
 47327  017A38  0E00               	movlw	0
 47328  017A3A  6E55               	movwf	i2___fladd@b+3,c
 47329  017A3C                     i2l18864:
 47330                           
 47331                           ; BSR set to: 0
 47332  017A3C  8E54               	bsf	i2___fladd@b+2,7,c
 47333  017A3E  D006               	goto	L51
 47334  017A40                     i2l18868:
 47335                           
 47336                           ; BSR set to: 0
 47337  017A40  0E00               	movlw	0
 47338  017A42  6E52               	movwf	i2___fladd@b,c
 47339  017A44  0E00               	movlw	0
 47340  017A46  6E53               	movwf	i2___fladd@b+1,c
 47341  017A48  0E00               	movlw	0
 47342  017A4A  6E54               	movwf	i2___fladd@b+2,c
 47343  017A4C                     L51:
 47344  017A4C  0E00               	movlw	0
 47345  017A4E  6E55               	movwf	i2___fladd@b+3,c
 47346                           
 47347                           ; BSR set to: 0
 47348  017A50  5059               	movf	i2___fladd@a+3,w,c
 47349  017A52  0B80               	andlw	128
 47350  017A54  6F61               	movwf	i2___fladd@aexp& (0+255),b
 47351                           
 47352                           ; BSR set to: 0
 47353  017A56  5160               	movf	i2___fladd@signs& (0+255),w,b
 47354  017A58  1961               	xorwf	i2___fladd@aexp& (0+255),w,b
 47355  017A5A  A4D8               	btfss	status,2,c
 47356                           
 47357                           ; BSR set to: 0
 47358  017A5C  8D60               	bsf	i2___fladd@signs& (0+255),6,b
 47359                           
 47360                           ; BSR set to: 0
 47361  017A5E  5059               	movf	i2___fladd@a+3,w,c
 47362  017A60  2459               	addwf	i2___fladd@a+3,w,c
 47363  017A62  6F61               	movwf	i2___fladd@aexp& (0+255),b
 47364                           
 47365                           ; BSR set to: 0
 47366  017A64  BE58               	btfsc	i2___fladd@a+2,7,c
 47367                           
 47368                           ; BSR set to: 0
 47369  017A66  8161               	bsf	i2___fladd@aexp& (0+255),0,b
 47370                           
 47371                           ; BSR set to: 0
 47372  017A68  5161               	movf	i2___fladd@aexp& (0+255),w,b
 47373  017A6A  B4D8               	btfsc	status,2,c
 47374  017A6C  D00D               	goto	i2l18892
 47375                           
 47376                           ; BSR set to: 0
 47377  017A6E  2961               	incf	i2___fladd@aexp& (0+255),w,b
 47378  017A70  A4D8               	btfss	status,2,c
 47379  017A72  D008               	goto	i2l18888
 47380                           
 47381                           ; BSR set to: 0
 47382  017A74  0E00               	movlw	0
 47383  017A76  6E56               	movwf	i2___fladd@a,c
 47384  017A78  0E00               	movlw	0
 47385  017A7A  6E57               	movwf	i2___fladd@a+1,c
 47386  017A7C  0E00               	movlw	0
 47387  017A7E  6E58               	movwf	i2___fladd@a+2,c
 47388  017A80  0E00               	movlw	0
 47389  017A82  6E59               	movwf	i2___fladd@a+3,c
 47390  017A84                     i2l18888:
 47391                           
 47392                           ; BSR set to: 0
 47393  017A84  8E58               	bsf	i2___fladd@a+2,7,c
 47394  017A86  D006               	goto	L52
 47395  017A88                     i2l18892:
 47396                           
 47397                           ; BSR set to: 0
 47398  017A88  0E00               	movlw	0
 47399  017A8A  6E56               	movwf	i2___fladd@a,c
 47400  017A8C  0E00               	movlw	0
 47401  017A8E  6E57               	movwf	i2___fladd@a+1,c
 47402  017A90  0E00               	movlw	0
 47403  017A92  6E58               	movwf	i2___fladd@a+2,c
 47404  017A94                     L52:
 47405  017A94  0E00               	movlw	0
 47406  017A96  6E59               	movwf	i2___fladd@a+3,c
 47407                           
 47408                           ; BSR set to: 0
 47409  017A98  5162               	movf	i2___fladd@bexp& (0+255),w,b
 47410  017A9A  5D61               	subwf	i2___fladd@aexp& (0+255),w,b
 47411  017A9C  B0D8               	btfsc	status,0,c
 47412  017A9E  D022               	goto	i2l18930
 47413                           
 47414                           ; BSR set to: 0
 47415  017AA0  AD60               	btfss	i2___fladd@signs& (0+255),6,b
 47416  017AA2  D002               	goto	i2l18900
 47417                           
 47418                           ; BSR set to: 0
 47419  017AA4  0E80               	movlw	128
 47420  017AA6  1B60               	xorwf	i2___fladd@signs& (0+255),f,b
 47421  017AA8                     i2l18900:
 47422                           
 47423                           ; BSR set to: 0
 47424  017AA8  C062  F063         	movff	i2___fladd@bexp,i2___fladd@grs
 47425                           
 47426                           ; BSR set to: 0
 47427  017AAC  C061  F062         	movff	i2___fladd@aexp,i2___fladd@bexp
 47428                           
 47429                           ; BSR set to: 0
 47430  017AB0  C063  F061         	movff	i2___fladd@grs,i2___fladd@aexp
 47431                           
 47432                           ; BSR set to: 0
 47433  017AB4  C052  F063         	movff	i2___fladd@b,i2___fladd@grs
 47434                           
 47435                           ; BSR set to: 0
 47436  017AB8  C056  F052         	movff	i2___fladd@a,i2___fladd@b
 47437                           
 47438                           ; BSR set to: 0
 47439  017ABC  C063  F056         	movff	i2___fladd@grs,i2___fladd@a
 47440                           
 47441                           ; BSR set to: 0
 47442  017AC0  C053  F063         	movff	i2___fladd@b+1,i2___fladd@grs
 47443                           
 47444                           ; BSR set to: 0
 47445  017AC4  C057  F053         	movff	i2___fladd@a+1,i2___fladd@b+1
 47446                           
 47447                           ; BSR set to: 0
 47448  017AC8  C063  F057         	movff	i2___fladd@grs,i2___fladd@a+1
 47449                           
 47450                           ; BSR set to: 0
 47451  017ACC  C054  F063         	movff	i2___fladd@b+2,i2___fladd@grs
 47452                           
 47453                           ; BSR set to: 0
 47454  017AD0  C058  F054         	movff	i2___fladd@a+2,i2___fladd@b+2
 47455                           
 47456                           ; BSR set to: 0
 47457  017AD4  C063  F058         	movff	i2___fladd@grs,i2___fladd@a+2
 47458                           
 47459                           ; BSR set to: 0
 47460  017AD8  C055  F063         	movff	i2___fladd@b+3,i2___fladd@grs
 47461                           
 47462                           ; BSR set to: 0
 47463  017ADC  C059  F055         	movff	i2___fladd@a+3,i2___fladd@b+3
 47464                           
 47465                           ; BSR set to: 0
 47466  017AE0  C063  F059         	movff	i2___fladd@grs,i2___fladd@a+3
 47467  017AE4                     i2l18930:
 47468                           
 47469                           ; BSR set to: 0
 47470  017AE4  0E00               	movlw	0
 47471  017AE6  6F63               	movwf	i2___fladd@grs& (0+255),b
 47472                           
 47473                           ; BSR set to: 0
 47474  017AE8  5162               	movf	i2___fladd@bexp& (0+255),w,b
 47475  017AEA  C061  F05A         	movff	i2___fladd@aexp,??i2___fladd
 47476  017AEE  6A5B               	clrf	(??i2___fladd+1)& (0+255),c
 47477  017AF0  5E5A               	subwf	??i2___fladd,f,c
 47478  017AF2  0E00               	movlw	0
 47479  017AF4  5A5B               	subwfb	??i2___fladd+1,f,c
 47480  017AF6  BE5B               	btfsc	??i2___fladd+1,7,c
 47481  017AF8  D02C               	goto	i2l3206
 47482  017AFA  505B               	movf	??i2___fladd+1,w,c
 47483  017AFC  E104               	bnz	i2u2392_40
 47484  017AFE  0E1A               	movlw	26
 47485  017B00  5C5A               	subwf	??i2___fladd,w,c
 47486  017B02  A0D8               	btfss	status,0,c
 47487  017B04  D026               	goto	i2l3206
 47488  017B06                     i2u2392_40:
 47489                           
 47490                           ; BSR set to: 0
 47491  017B06  5052               	movf	i2___fladd@b,w,c
 47492  017B08  1053               	iorwf	i2___fladd@b+1,w,c
 47493  017B0A  1054               	iorwf	i2___fladd@b+2,w,c
 47494  017B0C  1055               	iorwf	i2___fladd@b+3,w,c
 47495  017B0E  B4D8               	btfsc	status,2,c
 47496  017B10  D002               	goto	i2u2393_40
 47497  017B12  0E01               	movlw	1
 47498  017B14  D001               	goto	i2u2394_40
 47499  017B16                     i2u2393_40:
 47500  017B16  0E00               	movlw	0
 47501  017B18                     i2u2394_40:
 47502  017B18  6F63               	movwf	i2___fladd@grs& (0+255),b
 47503                           
 47504                           ; BSR set to: 0
 47505  017B1A  0E00               	movlw	0
 47506  017B1C  6E52               	movwf	i2___fladd@b,c
 47507  017B1E  0E00               	movlw	0
 47508  017B20  6E53               	movwf	i2___fladd@b+1,c
 47509  017B22  0E00               	movlw	0
 47510  017B24  6E54               	movwf	i2___fladd@b+2,c
 47511  017B26  0E00               	movlw	0
 47512  017B28  6E55               	movwf	i2___fladd@b+3,c
 47513                           
 47514                           ; BSR set to: 0
 47515  017B2A  C061  F062         	movff	i2___fladd@aexp,i2___fladd@bexp
 47516  017B2E  D015               	goto	i2u2397_40
 47517  017B30                     i2l3207:
 47518                           
 47519                           ; BSR set to: 0
 47520  017B30  A163               	btfss	i2___fladd@grs& (0+255),0,b
 47521  017B32  D005               	goto	i2l18942
 47522                           
 47523                           ; BSR set to: 0
 47524  017B34  90D8               	bcf	status,0,c
 47525  017B36  3163               	rrcf	i2___fladd@grs& (0+255),w,b
 47526  017B38  0901               	iorlw	1
 47527  017B3A  6F63               	movwf	i2___fladd@grs& (0+255),b
 47528  017B3C  D002               	goto	i2l18944
 47529  017B3E                     i2l18942:
 47530                           
 47531                           ; BSR set to: 0
 47532  017B3E  90D8               	bcf	status,0,c
 47533  017B40  3363               	rrcf	i2___fladd@grs& (0+255),f,b
 47534  017B42                     i2l18944:
 47535                           
 47536                           ; BSR set to: 0
 47537  017B42  B052               	btfsc	i2___fladd@b,0,c
 47538                           
 47539                           ; BSR set to: 0
 47540  017B44  8F63               	bsf	i2___fladd@grs& (0+255),7,b
 47541                           
 47542                           ; BSR set to: 0
 47543  017B46  3455               	rlcf	i2___fladd@b+3,w,c
 47544  017B48  3255               	rrcf	i2___fladd@b+3,f,c
 47545  017B4A  3254               	rrcf	i2___fladd@b+2,f,c
 47546  017B4C  3253               	rrcf	i2___fladd@b+1,f,c
 47547  017B4E  3252               	rrcf	i2___fladd@b,f,c
 47548                           
 47549                           ; BSR set to: 0
 47550  017B50  2B62               	incf	i2___fladd@bexp& (0+255),f,b
 47551  017B52                     i2l3206:
 47552                           
 47553                           ; BSR set to: 0
 47554  017B52  5161               	movf	i2___fladd@aexp& (0+255),w,b
 47555  017B54  5D62               	subwf	i2___fladd@bexp& (0+255),w,b
 47556  017B56  A0D8               	btfss	status,0,c
 47557  017B58  D7EB               	goto	i2l3207
 47558  017B5A                     i2u2397_40:
 47559                           
 47560                           ; BSR set to: 0
 47561  017B5A  BD60               	btfsc	i2___fladd@signs& (0+255),6,b
 47562  017B5C  D028               	goto	i2l18976
 47563                           
 47564                           ; BSR set to: 0
 47565  017B5E  5162               	movf	i2___fladd@bexp& (0+255),w,b
 47566  017B60  A4D8               	btfss	status,2,c
 47567  017B62  D009               	goto	i2l18958
 47568                           
 47569                           ; BSR set to: 0
 47570  017B64  0E00               	movlw	0
 47571  017B66  6E52               	movwf	?i2___fladd,c
 47572  017B68  0E00               	movlw	0
 47573  017B6A  6E53               	movwf	?i2___fladd+1,c
 47574  017B6C  0E00               	movlw	0
 47575  017B6E  6E54               	movwf	?i2___fladd+2,c
 47576  017B70  0E00               	movlw	0
 47577  017B72  6E55               	movwf	?i2___fladd+3,c
 47578  017B74  0012               	return	
 47579  017B76                     i2l18958:
 47580                           
 47581                           ; BSR set to: 0
 47582  017B76  5056               	movf	i2___fladd@a,w,c
 47583  017B78  2652               	addwf	i2___fladd@b,f,c
 47584  017B7A  5057               	movf	i2___fladd@a+1,w,c
 47585  017B7C  2253               	addwfc	i2___fladd@b+1,f,c
 47586  017B7E  5058               	movf	i2___fladd@a+2,w,c
 47587  017B80  2254               	addwfc	i2___fladd@b+2,f,c
 47588  017B82  5059               	movf	i2___fladd@a+3,w,c
 47589  017B84  2255               	addwfc	i2___fladd@b+3,f,c
 47590                           
 47591                           ; BSR set to: 0
 47592  017B86  A055               	btfss	i2___fladd@b+3,0,c
 47593  017B88  D071               	goto	i2u2410_40
 47594                           
 47595                           ; BSR set to: 0
 47596  017B8A  A163               	btfss	i2___fladd@grs& (0+255),0,b
 47597  017B8C  D005               	goto	i2l18966
 47598                           
 47599                           ; BSR set to: 0
 47600  017B8E  90D8               	bcf	status,0,c
 47601  017B90  3163               	rrcf	i2___fladd@grs& (0+255),w,b
 47602  017B92  0901               	iorlw	1
 47603  017B94  6F63               	movwf	i2___fladd@grs& (0+255),b
 47604  017B96  D002               	goto	i2l18968
 47605  017B98                     i2l18966:
 47606                           
 47607                           ; BSR set to: 0
 47608  017B98  90D8               	bcf	status,0,c
 47609  017B9A  3363               	rrcf	i2___fladd@grs& (0+255),f,b
 47610  017B9C                     i2l18968:
 47611                           
 47612                           ; BSR set to: 0
 47613  017B9C  B052               	btfsc	i2___fladd@b,0,c
 47614                           
 47615                           ; BSR set to: 0
 47616  017B9E  8F63               	bsf	i2___fladd@grs& (0+255),7,b
 47617                           
 47618                           ; BSR set to: 0
 47619  017BA0  3455               	rlcf	i2___fladd@b+3,w,c
 47620  017BA2  3255               	rrcf	i2___fladd@b+3,f,c
 47621  017BA4  3254               	rrcf	i2___fladd@b+2,f,c
 47622  017BA6  3253               	rrcf	i2___fladd@b+1,f,c
 47623  017BA8  3252               	rrcf	i2___fladd@b,f,c
 47624                           
 47625                           ; BSR set to: 0
 47626  017BAA  2B62               	incf	i2___fladd@bexp& (0+255),f,b
 47627  017BAC  D05F               	goto	i2u2410_40
 47628  017BAE                     i2l18976:
 47629                           
 47630                           ; BSR set to: 0
 47631  017BAE  5056               	movf	i2___fladd@a,w,c
 47632  017BB0  5C52               	subwf	i2___fladd@b,w,c
 47633  017BB2  5057               	movf	i2___fladd@a+1,w,c
 47634  017BB4  5853               	subwfb	i2___fladd@b+1,w,c
 47635  017BB6  5058               	movf	i2___fladd@a+2,w,c
 47636  017BB8  5854               	subwfb	i2___fladd@b+2,w,c
 47637  017BBA  5055               	movf	i2___fladd@b+3,w,c
 47638  017BBC  0A80               	xorlw	128
 47639  017BBE  6E5A               	movwf	??i2___fladd& (0+255),c
 47640  017BC0  5059               	movf	i2___fladd@a+3,w,c
 47641  017BC2  0A80               	xorlw	128
 47642  017BC4  585A               	subwfb	??i2___fladd& (0+255),w,c
 47643  017BC6  B0D8               	btfsc	status,0,c
 47644  017BC8  D025               	goto	i2l18986
 47645                           
 47646                           ; BSR set to: 0
 47647  017BCA  5052               	movf	i2___fladd@b,w,c
 47648  017BCC  5C56               	subwf	i2___fladd@a,w,c
 47649  017BCE  6E5A               	movwf	??i2___fladd& (0+255),c
 47650  017BD0  5053               	movf	i2___fladd@b+1,w,c
 47651  017BD2  5857               	subwfb	i2___fladd@a+1,w,c
 47652  017BD4  6E5B               	movwf	(??i2___fladd+1)& (0+255),c
 47653  017BD6  5054               	movf	i2___fladd@b+2,w,c
 47654  017BD8  5858               	subwfb	i2___fladd@a+2,w,c
 47655  017BDA  6E5C               	movwf	(??i2___fladd+2)& (0+255),c
 47656  017BDC  5055               	movf	i2___fladd@b+3,w,c
 47657  017BDE  5859               	subwfb	i2___fladd@a+3,w,c
 47658  017BE0  6E5D               	movwf	(??i2___fladd+3)& (0+255),c
 47659  017BE2  0EFF               	movlw	255
 47660  017BE4  245A               	addwf	??i2___fladd,w,c
 47661  017BE6  6E52               	movwf	i2___fladd@b,c
 47662  017BE8  0EFF               	movlw	255
 47663  017BEA  205B               	addwfc	??i2___fladd+1,w,c
 47664  017BEC  6E53               	movwf	i2___fladd@b+1,c
 47665  017BEE  0EFF               	movlw	255
 47666  017BF0  205C               	addwfc	??i2___fladd+2,w,c
 47667  017BF2  6E54               	movwf	i2___fladd@b+2,c
 47668  017BF4  0EFF               	movlw	255
 47669  017BF6  205D               	addwfc	??i2___fladd+3,w,c
 47670  017BF8  6E55               	movwf	i2___fladd@b+3,c
 47671  017BFA  0E80               	movlw	128
 47672  017BFC  1B60               	xorwf	i2___fladd@signs& (0+255),f,b
 47673                           
 47674                           ; BSR set to: 0
 47675  017BFE  6D63               	negf	i2___fladd@grs& (0+255),b
 47676                           
 47677                           ; BSR set to: 0
 47678  017C00  5163               	movf	i2___fladd@grs& (0+255),w,b
 47679  017C02  A4D8               	btfss	status,2,c
 47680  017C04  D00F               	goto	i2l3222
 47681                           
 47682                           ; BSR set to: 0
 47683  017C06  0E01               	movlw	1
 47684  017C08  2652               	addwf	i2___fladd@b,f,c
 47685  017C0A  0E00               	movlw	0
 47686  017C0C  2253               	addwfc	i2___fladd@b+1,f,c
 47687  017C0E  2254               	addwfc	i2___fladd@b+2,f,c
 47688  017C10  2255               	addwfc	i2___fladd@b+3,f,c
 47689  017C12  D008               	goto	i2l3222
 47690  017C14                     i2l18986:
 47691                           
 47692                           ; BSR set to: 0
 47693  017C14  5056               	movf	i2___fladd@a,w,c
 47694  017C16  5E52               	subwf	i2___fladd@b,f,c
 47695  017C18  5057               	movf	i2___fladd@a+1,w,c
 47696  017C1A  5A53               	subwfb	i2___fladd@b+1,f,c
 47697  017C1C  5058               	movf	i2___fladd@a+2,w,c
 47698  017C1E  5A54               	subwfb	i2___fladd@b+2,f,c
 47699  017C20  5059               	movf	i2___fladd@a+3,w,c
 47700  017C22  5A55               	subwfb	i2___fladd@b+3,f,c
 47701  017C24                     i2l3222:
 47702                           
 47703                           ; BSR set to: 0
 47704  017C24  5052               	movf	i2___fladd@b,w,c
 47705  017C26  1053               	iorwf	i2___fladd@b+1,w,c
 47706  017C28  1054               	iorwf	i2___fladd@b+2,w,c
 47707  017C2A  1055               	iorwf	i2___fladd@b+3,w,c
 47708  017C2C  A4D8               	btfss	status,2,c
 47709  017C2E  D01C               	goto	i2l19010
 47710                           
 47711                           ; BSR set to: 0
 47712  017C30  5163               	movf	i2___fladd@grs& (0+255),w,b
 47713  017C32  A4D8               	btfss	status,2,c
 47714  017C34  D019               	goto	i2l19010
 47715                           
 47716                           ; BSR set to: 0
 47717  017C36  0E00               	movlw	0
 47718  017C38  6E52               	movwf	?i2___fladd,c
 47719  017C3A  0E00               	movlw	0
 47720  017C3C  6E53               	movwf	?i2___fladd+1,c
 47721  017C3E  0E00               	movlw	0
 47722  017C40  6E54               	movwf	?i2___fladd+2,c
 47723  017C42  0E00               	movlw	0
 47724  017C44  6E55               	movwf	?i2___fladd+3,c
 47725  017C46  0012               	return	
 47726  017C48                     i2l18994:
 47727                           
 47728                           ; BSR set to: 0
 47729  017C48  90D8               	bcf	status,0,c
 47730  017C4A  3652               	rlcf	i2___fladd@b,f,c
 47731  017C4C  3653               	rlcf	i2___fladd@b+1,f,c
 47732  017C4E  3654               	rlcf	i2___fladd@b+2,f,c
 47733  017C50  3655               	rlcf	i2___fladd@b+3,f,c
 47734                           
 47735                           ; BSR set to: 0
 47736  017C52  BF63               	btfsc	i2___fladd@grs& (0+255),7,b
 47737                           
 47738                           ; BSR set to: 0
 47739  017C54  8052               	bsf	i2___fladd@b,0,c
 47740                           
 47741                           ; BSR set to: 0
 47742  017C56  A163               	btfss	i2___fladd@grs& (0+255),0,b
 47743  017C58  D002               	goto	i2l19004
 47744                           
 47745                           ; BSR set to: 0
 47746  017C5A  80D8               	bsf	status,0,c
 47747  017C5C  D001               	goto	L53
 47748  017C5E                     i2l19004:
 47749                           
 47750                           ; BSR set to: 0
 47751  017C5E  90D8               	bcf	status,0,c
 47752  017C60                     L53:
 47753  017C60  3763               	rlcf	i2___fladd@grs& (0+255),f,b
 47754                           
 47755                           ; BSR set to: 0
 47756  017C62  5162               	movf	i2___fladd@bexp& (0+255),w,b
 47757  017C64  A4D8               	btfss	status,2,c
 47758                           
 47759                           ; BSR set to: 0
 47760  017C66  0762               	decf	i2___fladd@bexp& (0+255),f,b
 47761  017C68                     i2l19010:
 47762                           
 47763                           ; BSR set to: 0
 47764  017C68  AE54               	btfss	i2___fladd@b+2,7,c
 47765  017C6A  D7EE               	goto	i2l18994
 47766  017C6C                     i2u2410_40:
 47767                           
 47768                           ; BSR set to: 0
 47769  017C6C  0E00               	movlw	0
 47770  017C6E  6F61               	movwf	i2___fladd@aexp& (0+255),b
 47771                           
 47772                           ; BSR set to: 0
 47773  017C70  AF63               	btfss	i2___fladd@grs& (0+255),7,b
 47774  017C72  D00B               	goto	i2l3231
 47775                           
 47776                           ; BSR set to: 0
 47777  017C74  C063  F05A         	movff	i2___fladd@grs,??i2___fladd
 47778  017C78  0E7F               	movlw	127
 47779  017C7A  165A               	andwf	??i2___fladd,f,c
 47780  017C7C  B4D8               	btfsc	status,2,c
 47781  017C7E  D003               	goto	i2l3232
 47782  017C80                     i2u2412_40:
 47783                           
 47784                           ; BSR set to: 0
 47785  017C80  0E01               	movlw	1
 47786  017C82  6F61               	movwf	i2___fladd@aexp& (0+255),b
 47787  017C84  D002               	goto	i2l3231
 47788  017C86                     i2l3232:
 47789                           
 47790                           ; BSR set to: 0
 47791  017C86  B052               	btfsc	i2___fladd@b,0,c
 47792  017C88  D7FB               	goto	i2u2412_40
 47793  017C8A                     i2l3231:
 47794                           
 47795                           ; BSR set to: 0
 47796  017C8A  5161               	movf	i2___fladd@aexp& (0+255),w,b
 47797  017C8C  B4D8               	btfsc	status,2,c
 47798  017C8E  D020               	goto	i2l19030
 47799                           
 47800                           ; BSR set to: 0
 47801  017C90  0E01               	movlw	1
 47802  017C92  2652               	addwf	i2___fladd@b,f,c
 47803  017C94  0E00               	movlw	0
 47804  017C96  2253               	addwfc	i2___fladd@b+1,f,c
 47805  017C98  2254               	addwfc	i2___fladd@b+2,f,c
 47806  017C9A  2255               	addwfc	i2___fladd@b+3,f,c
 47807                           
 47808                           ; BSR set to: 0
 47809  017C9C  A055               	btfss	i2___fladd@b+3,0,c
 47810  017C9E  D018               	goto	i2l19030
 47811                           
 47812                           ; BSR set to: 0
 47813  017CA0  C052  F05A         	movff	i2___fladd@b,??i2___fladd
 47814  017CA4  C053  F05B         	movff	i2___fladd@b+1,??i2___fladd+1
 47815  017CA8  C054  F05C         	movff	i2___fladd@b+2,??i2___fladd+2
 47816  017CAC  C055  F05D         	movff	i2___fladd@b+3,??i2___fladd+3
 47817  017CB0  345D               	rlcf	??i2___fladd+3,w,c
 47818  017CB2  325D               	rrcf	??i2___fladd+3,f,c
 47819  017CB4  325C               	rrcf	??i2___fladd+2,f,c
 47820  017CB6  325B               	rrcf	??i2___fladd+1,f,c
 47821  017CB8  325A               	rrcf	??i2___fladd,f,c
 47822  017CBA  C05A  F052         	movff	??i2___fladd,i2___fladd@b
 47823  017CBE  C05B  F053         	movff	??i2___fladd+1,i2___fladd@b+1
 47824  017CC2  C05C  F054         	movff	??i2___fladd+2,i2___fladd@b+2
 47825  017CC6  C05D  F055         	movff	??i2___fladd+3,i2___fladd@b+3
 47826  017CCA  2962               	incf	i2___fladd@bexp& (0+255),w,b
 47827  017CCC  A4D8               	btfss	status,2,c
 47828                           
 47829                           ; BSR set to: 0
 47830  017CCE  2B62               	incf	i2___fladd@bexp& (0+255),f,b
 47831  017CD0                     i2l19030:
 47832                           
 47833                           ; BSR set to: 0
 47834  017CD0  2962               	incf	i2___fladd@bexp& (0+255),w,b
 47835  017CD2  B4D8               	btfsc	status,2,c
 47836  017CD4  D003               	goto	i2u2418_40
 47837                           
 47838                           ; BSR set to: 0
 47839  017CD6  5162               	movf	i2___fladd@bexp& (0+255),w,b
 47840  017CD8  A4D8               	btfss	status,2,c
 47841  017CDA  D00D               	goto	i2l19038
 47842  017CDC                     i2u2418_40:
 47843                           
 47844                           ; BSR set to: 0
 47845  017CDC  0E00               	movlw	0
 47846  017CDE  6E52               	movwf	i2___fladd@b,c
 47847  017CE0  0E00               	movlw	0
 47848  017CE2  6E53               	movwf	i2___fladd@b+1,c
 47849  017CE4  0E00               	movlw	0
 47850  017CE6  6E54               	movwf	i2___fladd@b+2,c
 47851  017CE8  0E00               	movlw	0
 47852  017CEA  6E55               	movwf	i2___fladd@b+3,c
 47853  017CEC  5162               	movf	i2___fladd@bexp& (0+255),w,b
 47854  017CEE  A4D8               	btfss	status,2,c
 47855  017CF0  D002               	goto	i2l19038
 47856                           
 47857                           ; BSR set to: 0
 47858  017CF2  0E00               	movlw	0
 47859  017CF4  6F60               	movwf	i2___fladd@signs& (0+255),b
 47860  017CF6                     i2l19038:
 47861                           
 47862                           ; BSR set to: 0
 47863  017CF6  A162               	btfss	i2___fladd@bexp& (0+255),0,b
 47864  017CF8  D002               	goto	i2l19042
 47865                           
 47866                           ; BSR set to: 0
 47867  017CFA  8E54               	bsf	i2___fladd@b+2,7,c
 47868  017CFC  D001               	goto	i2l19044
 47869  017CFE                     i2l19042:
 47870                           
 47871                           ; BSR set to: 0
 47872  017CFE  9E54               	bcf	i2___fladd@b+2,7,c
 47873  017D00                     i2l19044:
 47874                           
 47875                           ; BSR set to: 0
 47876  017D00  90D8               	bcf	status,0,c
 47877  017D02  3162               	rrcf	i2___fladd@bexp& (0+255),w,b
 47878  017D04  6E55               	movwf	i2___fladd@b+3,c
 47879                           
 47880                           ; BSR set to: 0
 47881  017D06  BF60               	btfsc	i2___fladd@signs& (0+255),7,b
 47882                           
 47883                           ; BSR set to: 0
 47884  017D08  8E55               	bsf	i2___fladd@b+3,7,c
 47885                           
 47886                           ; BSR set to: 0
 47887  017D0A  C052  F052         	movff	i2___fladd@b,?i2___fladd
 47888  017D0E  C053  F053         	movff	i2___fladd@b+1,?i2___fladd+1
 47889  017D12  C054  F054         	movff	i2___fladd@b+2,?i2___fladd+2
 47890  017D16  C055  F055         	movff	i2___fladd@b+3,?i2___fladd+3
 47891                           
 47892                           ; BSR set to: 0
 47893  017D1A  0012               	return		;funcret
 47894  017D1C                     __end_ofi2___fladd:
 47895                           	opt callstack 0
 47896                           
 47897 ;; *************** function i2___flmul *****************
 47898 ;; Defined at:
 47899 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
 47900 ;; Parameters:    Size  Location     Type
 47901 ;;  b               4   43[COMRAM] unsigned char 
 47902 ;;  a               4   47[COMRAM] unsigned char 
 47903 ;; Auto vars:     Size  Location     Type
 47904 ;;  __flmul         4   62[COMRAM] struct .
 47905 ;;  __flmul         4   57[COMRAM] unsigned long 
 47906 ;;  __flmul         2   66[COMRAM] struct .
 47907 ;;  __flmul         1   61[COMRAM] unsigned char 
 47908 ;;  __flmul         1   56[COMRAM] unsigned char 
 47909 ;;  __flmul         1   55[COMRAM] unsigned char 
 47910 ;; Return value:  Size  Location     Type
 47911 ;;                  4   43[COMRAM] unsigned char 
 47912 ;; Registers used:
 47913 ;;		wreg, status,2, status,0, prodl, prodh
 47914 ;; Tracked objects:
 47915 ;;		On entry : 0/0
 47916 ;;		On exit  : 0/0
 47917 ;;		Unchanged: 0/0
 47918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47919 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47920 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47921 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47922 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47923 ;;Total ram usage:       25 bytes
 47924 ;; Hardware stack levels used:    1
 47925 ;; This function calls:
 47926 ;;		Nothing
 47927 ;; This function is called by:
 47928 ;;		_ADC_PostProcessingHandler
 47929 ;;		i2_fround
 47930 ;;		i2_scale
 47931 ;;		i2__doprnt
 47932 ;; This function uses a non-reentrant model
 47933 ;;
 47934                           
 47935                           	psect	text203
 47936  0170A0                     __ptext203:
 47937                           	opt callstack 0
 47938  0170A0                     i2___flmul:
 47939                           	opt callstack 12
 47940                           
 47941                           ; BSR set to: 0
 47942                           ;incstack = 0
 47943  0170A0  502F               	movf	i2___flmul@b+3,w,c
 47944  0170A2  0B80               	andlw	128
 47945  0170A4  6E38               	movwf	i2___flmul@sign,c
 47946  0170A6  502F               	movf	i2___flmul@b+3,w,c
 47947  0170A8  242F               	addwf	i2___flmul@b+3,w,c
 47948  0170AA  6E3E               	movwf	i2___flmul@bexp,c
 47949  0170AC  BE2E               	btfsc	i2___flmul@b+2,7,c
 47950  0170AE  803E               	bsf	i2___flmul@bexp,0,c
 47951  0170B0  503E               	movf	i2___flmul@bexp,w,c
 47952  0170B2  B4D8               	btfsc	status,2,c
 47953  0170B4  D00D               	goto	i2l19068
 47954  0170B6  283E               	incf	i2___flmul@bexp,w,c
 47955  0170B8  A4D8               	btfss	status,2,c
 47956  0170BA  D008               	goto	i2l19066
 47957  0170BC  0E00               	movlw	0
 47958  0170BE  6E2C               	movwf	i2___flmul@b,c
 47959  0170C0  0E00               	movlw	0
 47960  0170C2  6E2D               	movwf	i2___flmul@b+1,c
 47961  0170C4  0E00               	movlw	0
 47962  0170C6  6E2E               	movwf	i2___flmul@b+2,c
 47963  0170C8  0E00               	movlw	0
 47964  0170CA  6E2F               	movwf	i2___flmul@b+3,c
 47965  0170CC                     i2l19066:
 47966  0170CC  8E2E               	bsf	i2___flmul@b+2,7,c
 47967  0170CE  D008               	goto	i2l19070
 47968  0170D0                     i2l19068:
 47969  0170D0  0E00               	movlw	0
 47970  0170D2  6E2C               	movwf	i2___flmul@b,c
 47971  0170D4  0E00               	movlw	0
 47972  0170D6  6E2D               	movwf	i2___flmul@b+1,c
 47973  0170D8  0E00               	movlw	0
 47974  0170DA  6E2E               	movwf	i2___flmul@b+2,c
 47975  0170DC  0E00               	movlw	0
 47976  0170DE  6E2F               	movwf	i2___flmul@b+3,c
 47977  0170E0                     i2l19070:
 47978  0170E0  5033               	movf	i2___flmul@a+3,w,c
 47979  0170E2  0B80               	andlw	128
 47980  0170E4  1A38               	xorwf	i2___flmul@sign,f,c
 47981  0170E6  5033               	movf	i2___flmul@a+3,w,c
 47982  0170E8  2433               	addwf	i2___flmul@a+3,w,c
 47983  0170EA  6E39               	movwf	i2___flmul@aexp,c
 47984  0170EC  BE32               	btfsc	i2___flmul@a+2,7,c
 47985  0170EE  8039               	bsf	i2___flmul@aexp,0,c
 47986  0170F0  5039               	movf	i2___flmul@aexp,w,c
 47987  0170F2  B4D8               	btfsc	status,2,c
 47988  0170F4  D00D               	goto	i2l19086
 47989  0170F6  2839               	incf	i2___flmul@aexp,w,c
 47990  0170F8  A4D8               	btfss	status,2,c
 47991  0170FA  D008               	goto	i2l19084
 47992  0170FC  0E00               	movlw	0
 47993  0170FE  6E30               	movwf	i2___flmul@a,c
 47994  017100  0E00               	movlw	0
 47995  017102  6E31               	movwf	i2___flmul@a+1,c
 47996  017104  0E00               	movlw	0
 47997  017106  6E32               	movwf	i2___flmul@a+2,c
 47998  017108  0E00               	movlw	0
 47999  01710A  6E33               	movwf	i2___flmul@a+3,c
 48000  01710C                     i2l19084:
 48001  01710C  8E32               	bsf	i2___flmul@a+2,7,c
 48002  01710E  D008               	goto	i2l3291
 48003  017110                     i2l19086:
 48004  017110  0E00               	movlw	0
 48005  017112  6E30               	movwf	i2___flmul@a,c
 48006  017114  0E00               	movlw	0
 48007  017116  6E31               	movwf	i2___flmul@a+1,c
 48008  017118  0E00               	movlw	0
 48009  01711A  6E32               	movwf	i2___flmul@a+2,c
 48010  01711C  0E00               	movlw	0
 48011  01711E  6E33               	movwf	i2___flmul@a+3,c
 48012  017120                     i2l3291:
 48013  017120  5039               	movf	i2___flmul@aexp,w,c
 48014  017122  B4D8               	btfsc	status,2,c
 48015  017124  D003               	goto	i2u2429_40
 48016  017126  503E               	movf	i2___flmul@bexp,w,c
 48017  017128  A4D8               	btfss	status,2,c
 48018  01712A  D009               	goto	i2l19094
 48019  01712C                     i2u2429_40:
 48020  01712C  0E00               	movlw	0
 48021  01712E  6E2C               	movwf	?i2___flmul,c
 48022  017130  0E00               	movlw	0
 48023  017132  6E2D               	movwf	?i2___flmul+1,c
 48024  017134  0E00               	movlw	0
 48025  017136  6E2E               	movwf	?i2___flmul+2,c
 48026  017138  0E00               	movlw	0
 48027  01713A  6E2F               	movwf	?i2___flmul+3,c
 48028  01713C  0012               	return	
 48029  01713E                     i2l19094:
 48030  01713E  5032               	movf	i2___flmul@a+2,w,c
 48031  017140  022C               	mulwf	i2___flmul@b,c
 48032  017142  CFF3 F043          	movff	prodl,i2___flmul@temp
 48033  017146  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48034  01714A  5043               	movf	i2___flmul@temp,w,c
 48035  01714C  6E3A               	movwf	i2___flmul@grs,c
 48036  01714E  6A3B               	clrf	i2___flmul@grs+1,c
 48037  017150  6A3C               	clrf	i2___flmul@grs+2,c
 48038  017152  6A3D               	clrf	i2___flmul@grs+3,c
 48039  017154  5044               	movf	i2___flmul@temp+1,w,c
 48040  017156  6E3F               	movwf	i2___flmul@prod,c
 48041  017158  6A40               	clrf	i2___flmul@prod+1,c
 48042  01715A  6A41               	clrf	i2___flmul@prod+2,c
 48043  01715C  6A42               	clrf	i2___flmul@prod+3,c
 48044  01715E  5031               	movf	i2___flmul@a+1,w,c
 48045  017160  022D               	mulwf	i2___flmul@b+1,c
 48046  017162  CFF3 F043          	movff	prodl,i2___flmul@temp
 48047  017166  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48048  01716A  5043               	movf	i2___flmul@temp,w,c
 48049  01716C  263A               	addwf	i2___flmul@grs,f,c
 48050  01716E  0E00               	movlw	0
 48051  017170  223B               	addwfc	i2___flmul@grs+1,f,c
 48052  017172  223C               	addwfc	i2___flmul@grs+2,f,c
 48053  017174  223D               	addwfc	i2___flmul@grs+3,f,c
 48054  017176  5044               	movf	i2___flmul@temp+1,w,c
 48055  017178  263F               	addwf	i2___flmul@prod,f,c
 48056  01717A  0E00               	movlw	0
 48057  01717C  2240               	addwfc	i2___flmul@prod+1,f,c
 48058  01717E  2241               	addwfc	i2___flmul@prod+2,f,c
 48059  017180  2242               	addwfc	i2___flmul@prod+3,f,c
 48060  017182  5030               	movf	i2___flmul@a,w,c
 48061  017184  022E               	mulwf	i2___flmul@b+2,c
 48062  017186  CFF3 F043          	movff	prodl,i2___flmul@temp
 48063  01718A  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48064  01718E  5043               	movf	i2___flmul@temp,w,c
 48065  017190  263A               	addwf	i2___flmul@grs,f,c
 48066  017192  0E00               	movlw	0
 48067  017194  223B               	addwfc	i2___flmul@grs+1,f,c
 48068  017196  223C               	addwfc	i2___flmul@grs+2,f,c
 48069  017198  223D               	addwfc	i2___flmul@grs+3,f,c
 48070  01719A  5044               	movf	i2___flmul@temp+1,w,c
 48071  01719C  263F               	addwf	i2___flmul@prod,f,c
 48072  01719E  0E00               	movlw	0
 48073  0171A0  2240               	addwfc	i2___flmul@prod+1,f,c
 48074  0171A2  2241               	addwfc	i2___flmul@prod+2,f,c
 48075  0171A4  2242               	addwfc	i2___flmul@prod+3,f,c
 48076  0171A6  C03C  F03D         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 48077  0171AA  C03B  F03C         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 48078  0171AE  C03A  F03B         	movff	i2___flmul@grs,i2___flmul@grs+1
 48079  0171B2  6A3A               	clrf	i2___flmul@grs,c
 48080  0171B4  5030               	movf	i2___flmul@a,w,c
 48081  0171B6  022D               	mulwf	i2___flmul@b+1,c
 48082  0171B8  CFF3 F043          	movff	prodl,i2___flmul@temp
 48083  0171BC  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48084  0171C0  5043               	movf	i2___flmul@temp,w,c
 48085  0171C2  263A               	addwf	i2___flmul@grs,f,c
 48086  0171C4  5044               	movf	i2___flmul@temp+1,w,c
 48087  0171C6  223B               	addwfc	i2___flmul@grs+1,f,c
 48088  0171C8  0E00               	movlw	0
 48089  0171CA  223C               	addwfc	i2___flmul@grs+2,f,c
 48090  0171CC  0E00               	movlw	0
 48091  0171CE  223D               	addwfc	i2___flmul@grs+3,f,c
 48092  0171D0  5031               	movf	i2___flmul@a+1,w,c
 48093  0171D2  022C               	mulwf	i2___flmul@b,c
 48094  0171D4  CFF3 F043          	movff	prodl,i2___flmul@temp
 48095  0171D8  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48096  0171DC  5043               	movf	i2___flmul@temp,w,c
 48097  0171DE  263A               	addwf	i2___flmul@grs,f,c
 48098  0171E0  5044               	movf	i2___flmul@temp+1,w,c
 48099  0171E2  223B               	addwfc	i2___flmul@grs+1,f,c
 48100  0171E4  0E00               	movlw	0
 48101  0171E6  223C               	addwfc	i2___flmul@grs+2,f,c
 48102  0171E8  0E00               	movlw	0
 48103  0171EA  223D               	addwfc	i2___flmul@grs+3,f,c
 48104  0171EC  C03C  F03D         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 48105  0171F0  C03B  F03C         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 48106  0171F4  C03A  F03B         	movff	i2___flmul@grs,i2___flmul@grs+1
 48107  0171F8  6A3A               	clrf	i2___flmul@grs,c
 48108  0171FA  5030               	movf	i2___flmul@a,w,c
 48109  0171FC  022C               	mulwf	i2___flmul@b,c
 48110  0171FE  CFF3 F043          	movff	prodl,i2___flmul@temp
 48111  017202  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48112  017206  5043               	movf	i2___flmul@temp,w,c
 48113  017208  263A               	addwf	i2___flmul@grs,f,c
 48114  01720A  5044               	movf	i2___flmul@temp+1,w,c
 48115  01720C  223B               	addwfc	i2___flmul@grs+1,f,c
 48116  01720E  0E00               	movlw	0
 48117  017210  223C               	addwfc	i2___flmul@grs+2,f,c
 48118  017212  0E00               	movlw	0
 48119  017214  223D               	addwfc	i2___flmul@grs+3,f,c
 48120  017216  5032               	movf	i2___flmul@a+2,w,c
 48121  017218  022D               	mulwf	i2___flmul@b+1,c
 48122  01721A  CFF3 F043          	movff	prodl,i2___flmul@temp
 48123  01721E  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48124  017222  5043               	movf	i2___flmul@temp,w,c
 48125  017224  263F               	addwf	i2___flmul@prod,f,c
 48126  017226  5044               	movf	i2___flmul@temp+1,w,c
 48127  017228  2240               	addwfc	i2___flmul@prod+1,f,c
 48128  01722A  0E00               	movlw	0
 48129  01722C  2241               	addwfc	i2___flmul@prod+2,f,c
 48130  01722E  0E00               	movlw	0
 48131  017230  2242               	addwfc	i2___flmul@prod+3,f,c
 48132  017232  5031               	movf	i2___flmul@a+1,w,c
 48133  017234  022E               	mulwf	i2___flmul@b+2,c
 48134  017236  CFF3 F043          	movff	prodl,i2___flmul@temp
 48135  01723A  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48136  01723E  5043               	movf	i2___flmul@temp,w,c
 48137  017240  263F               	addwf	i2___flmul@prod,f,c
 48138  017242  5044               	movf	i2___flmul@temp+1,w,c
 48139  017244  2240               	addwfc	i2___flmul@prod+1,f,c
 48140  017246  0E00               	movlw	0
 48141  017248  2241               	addwfc	i2___flmul@prod+2,f,c
 48142  01724A  0E00               	movlw	0
 48143  01724C  2242               	addwfc	i2___flmul@prod+3,f,c
 48144  01724E  5032               	movf	i2___flmul@a+2,w,c
 48145  017250  022E               	mulwf	i2___flmul@b+2,c
 48146  017252  CFF3 F043          	movff	prodl,i2___flmul@temp
 48147  017256  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48148  01725A  5043               	movf	i2___flmul@temp,w,c
 48149  01725C  6E34               	movwf	??i2___flmul& (0+255),c
 48150  01725E  5044               	movf	i2___flmul@temp+1,w,c
 48151  017260  6E35               	movwf	(??i2___flmul+1)& (0+255),c
 48152  017262  6A36               	clrf	(??i2___flmul+2)& (0+255),c
 48153  017264  6A37               	clrf	(??i2___flmul+3)& (0+255),c
 48154  017266  C036  F037         	movff	??i2___flmul+2,??i2___flmul+3
 48155  01726A  C035  F036         	movff	??i2___flmul+1,??i2___flmul+2
 48156  01726E  C034  F035         	movff	??i2___flmul,??i2___flmul+1
 48157  017272  6A34               	clrf	??i2___flmul,c
 48158  017274  5034               	movf	??i2___flmul,w,c
 48159  017276  263F               	addwf	i2___flmul@prod,f,c
 48160  017278  5035               	movf	??i2___flmul+1,w,c
 48161  01727A  2240               	addwfc	i2___flmul@prod+1,f,c
 48162  01727C  5036               	movf	??i2___flmul+2,w,c
 48163  01727E  2241               	addwfc	i2___flmul@prod+2,f,c
 48164  017280  5037               	movf	??i2___flmul+3,w,c
 48165  017282  2242               	addwfc	i2___flmul@prod+3,f,c
 48166  017284  C03A  F034         	movff	i2___flmul@grs,??i2___flmul
 48167  017288  C03B  F035         	movff	i2___flmul@grs+1,??i2___flmul+1
 48168  01728C  C03C  F036         	movff	i2___flmul@grs+2,??i2___flmul+2
 48169  017290  C03D  F037         	movff	i2___flmul@grs+3,??i2___flmul+3
 48170  017294  0E19               	movlw	25
 48171  017296  D005               	goto	i2u2430_40
 48172  017298                     i2u2430_45:
 48173  017298  90D8               	bcf	status,0,c
 48174  01729A  3237               	rrcf	??i2___flmul+3,f,c
 48175  01729C  3236               	rrcf	??i2___flmul+2,f,c
 48176  01729E  3235               	rrcf	??i2___flmul+1,f,c
 48177  0172A0  3234               	rrcf	??i2___flmul,f,c
 48178  0172A2                     i2u2430_40:
 48179  0172A2  2EE8               	decfsz	wreg,f,c
 48180  0172A4  D7F9               	goto	i2u2430_45
 48181  0172A6  5034               	movf	??i2___flmul,w,c
 48182  0172A8  263F               	addwf	i2___flmul@prod,f,c
 48183  0172AA  5035               	movf	??i2___flmul+1,w,c
 48184  0172AC  2240               	addwfc	i2___flmul@prod+1,f,c
 48185  0172AE  5036               	movf	??i2___flmul+2,w,c
 48186  0172B0  2241               	addwfc	i2___flmul@prod+2,f,c
 48187  0172B2  5037               	movf	??i2___flmul+3,w,c
 48188  0172B4  2242               	addwfc	i2___flmul@prod+3,f,c
 48189  0172B6  C03C  F03D         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 48190  0172BA  C03B  F03C         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 48191  0172BE  C03A  F03B         	movff	i2___flmul@grs,i2___flmul@grs+1
 48192  0172C2  6A3A               	clrf	i2___flmul@grs,c
 48193  0172C4  5039               	movf	i2___flmul@aexp,w,c
 48194  0172C6  C03E  F034         	movff	i2___flmul@bexp,??i2___flmul
 48195  0172CA  6A35               	clrf	(??i2___flmul+1)& (0+255),c
 48196  0172CC  2634               	addwf	??i2___flmul,f,c
 48197  0172CE  0E00               	movlw	0
 48198  0172D0  2235               	addwfc	??i2___flmul+1,f,c
 48199  0172D2  0E82               	movlw	130
 48200  0172D4  2434               	addwf	??i2___flmul,w,c
 48201  0172D6  6E43               	movwf	i2___flmul@temp,c
 48202  0172D8  0EFF               	movlw	255
 48203  0172DA  2035               	addwfc	??i2___flmul+1,w,c
 48204  0172DC  6E44               	movwf	i2___flmul@temp+1,c
 48205  0172DE  D00F               	goto	i2l19142
 48206  0172E0                     i2l19136:
 48207  0172E0  90D8               	bcf	status,0,c
 48208  0172E2  363F               	rlcf	i2___flmul@prod,f,c
 48209  0172E4  3640               	rlcf	i2___flmul@prod+1,f,c
 48210  0172E6  3641               	rlcf	i2___flmul@prod+2,f,c
 48211  0172E8  3642               	rlcf	i2___flmul@prod+3,f,c
 48212  0172EA  BE3D               	btfsc	i2___flmul@grs+3,7,c
 48213  0172EC  803F               	bsf	i2___flmul@prod,0,c
 48214  0172EE  90D8               	bcf	status,0,c
 48215  0172F0  363A               	rlcf	i2___flmul@grs,f,c
 48216  0172F2  363B               	rlcf	i2___flmul@grs+1,f,c
 48217  0172F4  363C               	rlcf	i2___flmul@grs+2,f,c
 48218  0172F6  363D               	rlcf	i2___flmul@grs+3,f,c
 48219  0172F8  0643               	decf	i2___flmul@temp,f,c
 48220  0172FA  A0D8               	btfss	status,0,c
 48221  0172FC  0644               	decf	i2___flmul@temp+1,f,c
 48222  0172FE                     i2l19142:
 48223  0172FE  AE41               	btfss	i2___flmul@prod+2,7,c
 48224  017300  D7EF               	goto	i2l19136
 48225  017302  0E00               	movlw	0
 48226  017304  6E39               	movwf	i2___flmul@aexp,c
 48227  017306  AE3D               	btfss	i2___flmul@grs+3,7,c
 48228  017308  D017               	goto	i2l3300
 48229  01730A  0EFF               	movlw	255
 48230  01730C  143A               	andwf	i2___flmul@grs,w,c
 48231  01730E  6E34               	movwf	??i2___flmul& (0+255),c
 48232  017310  0EFF               	movlw	255
 48233  017312  143B               	andwf	i2___flmul@grs+1,w,c
 48234  017314  6E35               	movwf	(??i2___flmul+1)& (0+255),c
 48235  017316  0EFF               	movlw	255
 48236  017318  143C               	andwf	i2___flmul@grs+2,w,c
 48237  01731A  6E36               	movwf	(??i2___flmul+2)& (0+255),c
 48238  01731C  0E7F               	movlw	127
 48239  01731E  143D               	andwf	i2___flmul@grs+3,w,c
 48240  017320  6E37               	movwf	(??i2___flmul+3)& (0+255),c
 48241  017322  5034               	movf	??i2___flmul,w,c
 48242  017324  1035               	iorwf	??i2___flmul+1,w,c
 48243  017326  1036               	iorwf	??i2___flmul+2,w,c
 48244  017328  1037               	iorwf	??i2___flmul+3,w,c
 48245  01732A  B4D8               	btfsc	status,2,c
 48246  01732C  D003               	goto	i2l3301
 48247  01732E                     i2u2434_40:
 48248  01732E  0E01               	movlw	1
 48249  017330  6E39               	movwf	i2___flmul@aexp,c
 48250  017332  D002               	goto	i2l3300
 48251  017334                     i2l3301:
 48252  017334  B03F               	btfsc	i2___flmul@prod,0,c
 48253  017336  D7FB               	goto	i2u2434_40
 48254  017338                     i2l3300:
 48255  017338  5039               	movf	i2___flmul@aexp,w,c
 48256  01733A  B4D8               	btfsc	status,2,c
 48257  01733C  D01F               	goto	i2l19162
 48258  01733E  0E01               	movlw	1
 48259  017340  263F               	addwf	i2___flmul@prod,f,c
 48260  017342  0E00               	movlw	0
 48261  017344  2240               	addwfc	i2___flmul@prod+1,f,c
 48262  017346  2241               	addwfc	i2___flmul@prod+2,f,c
 48263  017348  2242               	addwfc	i2___flmul@prod+3,f,c
 48264  01734A  A042               	btfss	i2___flmul@prod+3,0,c
 48265  01734C  D017               	goto	i2l19162
 48266  01734E  C03F  F034         	movff	i2___flmul@prod,??i2___flmul
 48267  017352  C040  F035         	movff	i2___flmul@prod+1,??i2___flmul+1
 48268  017356  C041  F036         	movff	i2___flmul@prod+2,??i2___flmul+2
 48269  01735A  C042  F037         	movff	i2___flmul@prod+3,??i2___flmul+3
 48270  01735E  3437               	rlcf	??i2___flmul+3,w,c
 48271  017360  3237               	rrcf	??i2___flmul+3,f,c
 48272  017362  3236               	rrcf	??i2___flmul+2,f,c
 48273  017364  3235               	rrcf	??i2___flmul+1,f,c
 48274  017366  3234               	rrcf	??i2___flmul,f,c
 48275  017368  C034  F03F         	movff	??i2___flmul,i2___flmul@prod
 48276  01736C  C035  F040         	movff	??i2___flmul+1,i2___flmul@prod+1
 48277  017370  C036  F041         	movff	??i2___flmul+2,i2___flmul@prod+2
 48278  017374  C037  F042         	movff	??i2___flmul+3,i2___flmul@prod+3
 48279  017378  4A43               	infsnz	i2___flmul@temp,f,c
 48280  01737A  2A44               	incf	i2___flmul@temp+1,f,c
 48281  01737C                     i2l19162:
 48282  01737C  BE44               	btfsc	i2___flmul@temp+1,7,c
 48283  01737E  D00D               	goto	i2l19166
 48284  017380  5044               	movf	i2___flmul@temp+1,w,c
 48285  017382  E103               	bnz	i2u2438_40
 48286  017384  2843               	incf	i2___flmul@temp,w,c
 48287  017386  A0D8               	btfss	status,0,c
 48288  017388  D008               	goto	i2l19166
 48289  01738A                     i2u2438_40:
 48290  01738A  0E00               	movlw	0
 48291  01738C  6E3F               	movwf	i2___flmul@prod,c
 48292  01738E  0E00               	movlw	0
 48293  017390  6E40               	movwf	i2___flmul@prod+1,c
 48294  017392  0E80               	movlw	128
 48295  017394  6E41               	movwf	i2___flmul@prod+2,c
 48296  017396  0E7F               	movlw	127
 48297  017398  D020               	goto	L54
 48298  01739A                     i2l19166:
 48299  01739A  BE44               	btfsc	i2___flmul@temp+1,7,c
 48300  01739C  D005               	goto	i2u2439_40
 48301  01739E  5044               	movf	i2___flmul@temp+1,w,c
 48302  0173A0  E10E               	bnz	i2l3308
 48303  0173A2  0443               	decf	i2___flmul@temp,w,c
 48304  0173A4  B0D8               	btfsc	status,0,c
 48305  0173A6  D00B               	goto	i2l3308
 48306  0173A8                     i2u2439_40:
 48307  0173A8  0E00               	movlw	0
 48308  0173AA  6E3F               	movwf	i2___flmul@prod,c
 48309  0173AC  0E00               	movlw	0
 48310  0173AE  6E40               	movwf	i2___flmul@prod+1,c
 48311  0173B0  0E00               	movlw	0
 48312  0173B2  6E41               	movwf	i2___flmul@prod+2,c
 48313  0173B4  0E00               	movlw	0
 48314  0173B6  6E42               	movwf	i2___flmul@prod+3,c
 48315  0173B8  0E00               	movlw	0
 48316  0173BA  6E38               	movwf	i2___flmul@sign,c
 48317  0173BC  D00F               	goto	i2l19178
 48318  0173BE                     i2l3308:
 48319  0173BE  C043  F03E         	movff	i2___flmul@temp,i2___flmul@bexp
 48320  0173C2  0EFF               	movlw	255
 48321  0173C4  163F               	andwf	i2___flmul@prod,f,c
 48322  0173C6  0EFF               	movlw	255
 48323  0173C8  1640               	andwf	i2___flmul@prod+1,f,c
 48324  0173CA  0E7F               	movlw	127
 48325  0173CC  1641               	andwf	i2___flmul@prod+2,f,c
 48326  0173CE  0E00               	movlw	0
 48327  0173D0  1642               	andwf	i2___flmul@prod+3,f,c
 48328  0173D2  B03E               	btfsc	i2___flmul@bexp,0,c
 48329  0173D4  8E41               	bsf	i2___flmul@prod+2,7,c
 48330  0173D6  90D8               	bcf	status,0,c
 48331  0173D8  303E               	rrcf	i2___flmul@bexp,w,c
 48332  0173DA                     L54:
 48333  0173DA  6E42               	movwf	i2___flmul@prod+3,c
 48334  0173DC                     i2l19178:
 48335  0173DC  5038               	movf	i2___flmul@sign,w,c
 48336  0173DE  1242               	iorwf	i2___flmul@prod+3,f,c
 48337  0173E0  C03F  F02C         	movff	i2___flmul@prod,?i2___flmul
 48338  0173E4  C040  F02D         	movff	i2___flmul@prod+1,?i2___flmul+1
 48339  0173E8  C041  F02E         	movff	i2___flmul@prod+2,?i2___flmul+2
 48340  0173EC  C042  F02F         	movff	i2___flmul@prod+3,?i2___flmul+3
 48341  0173F0  0012               	return		;funcret
 48342  0173F2                     __end_ofi2___flmul:
 48343                           	opt callstack 0
 48344                           
 48345 ;; *************** function i2___flge *****************
 48346 ;; Defined at:
 48347 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
 48348 ;; Parameters:    Size  Location     Type
 48349 ;;  ff1             4    0[COMRAM] unsigned char 
 48350 ;;  ff2             4    4[COMRAM] unsigned char 
 48351 ;; Auto vars:     Size  Location     Type
 48352 ;;		None
 48353 ;; Return value:  Size  Location     Type
 48354 ;;		None               void
 48355 ;; Registers used:
 48356 ;;		wreg, status,2, status,0
 48357 ;; Tracked objects:
 48358 ;;		On entry : 0/0
 48359 ;;		On exit  : 0/0
 48360 ;;		Unchanged: 0/0
 48361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48362 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48364 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48365 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48366 ;;Total ram usage:       12 bytes
 48367 ;; Hardware stack levels used:    1
 48368 ;; This function calls:
 48369 ;;		Nothing
 48370 ;; This function is called by:
 48371 ;;		_ADC_PostProcessingHandler
 48372 ;;		i2__doprnt
 48373 ;; This function uses a non-reentrant model
 48374 ;;
 48375                           
 48376                           	psect	text204
 48377  01A798                     __ptext204:
 48378                           	opt callstack 0
 48379  01A798                     i2___flge:
 48380                           	opt callstack 13
 48381                           
 48382                           ;incstack = 0
 48383  01A798  0E00               	movlw	0
 48384  01A79A  1401               	andwf	i2___flge@ff1,w,c
 48385  01A79C  6E09               	movwf	??i2___flge& (0+255),c
 48386  01A79E  0E00               	movlw	0
 48387  01A7A0  1402               	andwf	i2___flge@ff1+1,w,c
 48388  01A7A2  6E0A               	movwf	(??i2___flge+1)& (0+255),c
 48389  01A7A4  0E80               	movlw	128
 48390  01A7A6  1403               	andwf	i2___flge@ff1+2,w,c
 48391  01A7A8  6E0B               	movwf	(??i2___flge+2)& (0+255),c
 48392  01A7AA  0E7F               	movlw	127
 48393  01A7AC  1404               	andwf	i2___flge@ff1+3,w,c
 48394  01A7AE  6E0C               	movwf	(??i2___flge+3)& (0+255),c
 48395  01A7B0  5009               	movf	??i2___flge,w,c
 48396  01A7B2  100A               	iorwf	??i2___flge+1,w,c
 48397  01A7B4  100B               	iorwf	??i2___flge+2,w,c
 48398  01A7B6  100C               	iorwf	??i2___flge+3,w,c
 48399  01A7B8  A4D8               	btfss	status,2,c
 48400  01A7BA  D008               	goto	i2l19664
 48401  01A7BC  0E00               	movlw	0
 48402  01A7BE  6E01               	movwf	i2___flge@ff1,c
 48403  01A7C0  0E00               	movlw	0
 48404  01A7C2  6E02               	movwf	i2___flge@ff1+1,c
 48405  01A7C4  0E00               	movlw	0
 48406  01A7C6  6E03               	movwf	i2___flge@ff1+2,c
 48407  01A7C8  0E00               	movlw	0
 48408  01A7CA  6E04               	movwf	i2___flge@ff1+3,c
 48409  01A7CC                     i2l19664:
 48410  01A7CC  0E00               	movlw	0
 48411  01A7CE  1405               	andwf	i2___flge@ff2,w,c
 48412  01A7D0  6E09               	movwf	??i2___flge& (0+255),c
 48413  01A7D2  0E00               	movlw	0
 48414  01A7D4  1406               	andwf	i2___flge@ff2+1,w,c
 48415  01A7D6  6E0A               	movwf	(??i2___flge+1)& (0+255),c
 48416  01A7D8  0E80               	movlw	128
 48417  01A7DA  1407               	andwf	i2___flge@ff2+2,w,c
 48418  01A7DC  6E0B               	movwf	(??i2___flge+2)& (0+255),c
 48419  01A7DE  0E7F               	movlw	127
 48420  01A7E0  1408               	andwf	i2___flge@ff2+3,w,c
 48421  01A7E2  6E0C               	movwf	(??i2___flge+3)& (0+255),c
 48422  01A7E4  5009               	movf	??i2___flge,w,c
 48423  01A7E6  100A               	iorwf	??i2___flge+1,w,c
 48424  01A7E8  100B               	iorwf	??i2___flge+2,w,c
 48425  01A7EA  100C               	iorwf	??i2___flge+3,w,c
 48426  01A7EC  A4D8               	btfss	status,2,c
 48427  01A7EE  D008               	goto	i2l19668
 48428  01A7F0  0E00               	movlw	0
 48429  01A7F2  6E05               	movwf	i2___flge@ff2,c
 48430  01A7F4  0E00               	movlw	0
 48431  01A7F6  6E06               	movwf	i2___flge@ff2+1,c
 48432  01A7F8  0E00               	movlw	0
 48433  01A7FA  6E07               	movwf	i2___flge@ff2+2,c
 48434  01A7FC  0E00               	movlw	0
 48435  01A7FE  6E08               	movwf	i2___flge@ff2+3,c
 48436  01A800                     i2l19668:
 48437  01A800  AE04               	btfss	i2___flge@ff1+3,7,c
 48438  01A802  D009               	goto	i2l19672
 48439  01A804  6C01               	negf	i2___flge@ff1,c
 48440  01A806  1E02               	comf	i2___flge@ff1+1,f,c
 48441  01A808  B0D8               	btfsc	status,0,c
 48442  01A80A  2A02               	incf	i2___flge@ff1+1,f,c
 48443  01A80C  1E03               	comf	i2___flge@ff1+2,f,c
 48444  01A80E  B0D8               	btfsc	status,0,c
 48445  01A810  2A03               	incf	i2___flge@ff1+2,f,c
 48446  01A812  0E80               	movlw	128
 48447  01A814  5604               	subfwb	i2___flge@ff1+3,f,c
 48448  01A816                     i2l19672:
 48449  01A816  AE08               	btfss	i2___flge@ff2+3,7,c
 48450  01A818  D009               	goto	i2l2933
 48451  01A81A  6C05               	negf	i2___flge@ff2,c
 48452  01A81C  1E06               	comf	i2___flge@ff2+1,f,c
 48453  01A81E  B0D8               	btfsc	status,0,c
 48454  01A820  2A06               	incf	i2___flge@ff2+1,f,c
 48455  01A822  1E07               	comf	i2___flge@ff2+2,f,c
 48456  01A824  B0D8               	btfsc	status,0,c
 48457  01A826  2A07               	incf	i2___flge@ff2+2,f,c
 48458  01A828  0E80               	movlw	128
 48459  01A82A  5608               	subfwb	i2___flge@ff2+3,f,c
 48460  01A82C                     i2l2933:
 48461  01A82C  0E00               	movlw	0
 48462  01A82E  1A01               	xorwf	i2___flge@ff1,f,c
 48463  01A830  0E00               	movlw	0
 48464  01A832  1A02               	xorwf	i2___flge@ff1+1,f,c
 48465  01A834  0E00               	movlw	0
 48466  01A836  1A03               	xorwf	i2___flge@ff1+2,f,c
 48467  01A838  0E80               	movlw	128
 48468  01A83A  1A04               	xorwf	i2___flge@ff1+3,f,c
 48469  01A83C  0E00               	movlw	0
 48470  01A83E  1A05               	xorwf	i2___flge@ff2,f,c
 48471  01A840  0E00               	movlw	0
 48472  01A842  1A06               	xorwf	i2___flge@ff2+1,f,c
 48473  01A844  0E00               	movlw	0
 48474  01A846  1A07               	xorwf	i2___flge@ff2+2,f,c
 48475  01A848  0E80               	movlw	128
 48476  01A84A  1A08               	xorwf	i2___flge@ff2+3,f,c
 48477  01A84C  5005               	movf	i2___flge@ff2,w,c
 48478  01A84E  5C01               	subwf	i2___flge@ff1,w,c
 48479  01A850  5006               	movf	i2___flge@ff2+1,w,c
 48480  01A852  5802               	subwfb	i2___flge@ff1+1,w,c
 48481  01A854  5007               	movf	i2___flge@ff2+2,w,c
 48482  01A856  5803               	subwfb	i2___flge@ff1+2,w,c
 48483  01A858  5008               	movf	i2___flge@ff2+3,w,c
 48484  01A85A  5804               	subwfb	i2___flge@ff1+3,w,c
 48485  01A85C  B0D8               	btfsc	status,0,c
 48486  01A85E  D002               	goto	i2l19678
 48487  01A860  90D8               	bcf	status,0,c
 48488  01A862  0012               	return	
 48489  01A864                     i2l19678:
 48490  01A864  80D8               	bsf	status,0,c
 48491  01A866  0012               	return		;funcret
 48492  01A868                     __end_ofi2___flge:
 48493                           	opt callstack 0
 48494                           
 48495 ;; *************** function i2___fldiv *****************
 48496 ;; Defined at:
 48497 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
 48498 ;; Parameters:    Size  Location     Type
 48499 ;;  b               4   18[COMRAM] unsigned char 
 48500 ;;  a               4   22[COMRAM] unsigned char 
 48501 ;; Auto vars:     Size  Location     Type
 48502 ;;  __fldiv         4   37[COMRAM] unsigned long 
 48503 ;;  __fldiv         4   30[COMRAM] unsigned long 
 48504 ;;  __fldiv         2   35[COMRAM] int 
 48505 ;;  __fldiv         1   42[COMRAM] unsigned char 
 48506 ;;  __fldiv         1   41[COMRAM] unsigned char 
 48507 ;;  __fldiv         1   34[COMRAM] unsigned char 
 48508 ;; Return value:  Size  Location     Type
 48509 ;;                  4   18[COMRAM] unsigned char 
 48510 ;; Registers used:
 48511 ;;		wreg, status,2, status,0
 48512 ;; Tracked objects:
 48513 ;;		On entry : 0/0
 48514 ;;		On exit  : 0/0
 48515 ;;		Unchanged: 0/0
 48516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48517 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48518 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48519 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48520 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48521 ;;Total ram usage:       25 bytes
 48522 ;; Hardware stack levels used:    1
 48523 ;; This function calls:
 48524 ;;		Nothing
 48525 ;; This function is called by:
 48526 ;;		_ADC_PostProcessingHandler
 48527 ;; This function uses a non-reentrant model
 48528 ;;
 48529                           
 48530                           	psect	text205
 48531  0187A0                     __ptext205:
 48532                           	opt callstack 0
 48533  0187A0                     i2___fldiv:
 48534                           	opt callstack 14
 48535                           
 48536                           ;incstack = 0
 48537  0187A0  5016               	movf	i2___fldiv@b+3,w,c
 48538  0187A2  0B80               	andlw	128
 48539  0187A4  6E23               	movwf	i2___fldiv@sign,c
 48540  0187A6  5016               	movf	i2___fldiv@b+3,w,c
 48541  0187A8  2416               	addwf	i2___fldiv@b+3,w,c
 48542  0187AA  6E2A               	movwf	i2___fldiv@bexp,c
 48543  0187AC  BE15               	btfsc	i2___fldiv@b+2,7,c
 48544  0187AE  802A               	bsf	i2___fldiv@bexp,0,c
 48545  0187B0  502A               	movf	i2___fldiv@bexp,w,c
 48546  0187B2  B4D8               	btfsc	status,2,c
 48547  0187B4  D00D               	goto	i2l14748
 48548  0187B6  282A               	incf	i2___fldiv@bexp,w,c
 48549  0187B8  A4D8               	btfss	status,2,c
 48550  0187BA  D008               	goto	i2l14744
 48551  0187BC  0E00               	movlw	0
 48552  0187BE  6E13               	movwf	i2___fldiv@b,c
 48553  0187C0  0E00               	movlw	0
 48554  0187C2  6E14               	movwf	i2___fldiv@b+1,c
 48555  0187C4  0E00               	movlw	0
 48556  0187C6  6E15               	movwf	i2___fldiv@b+2,c
 48557  0187C8  0E00               	movlw	0
 48558  0187CA  6E16               	movwf	i2___fldiv@b+3,c
 48559  0187CC                     i2l14744:
 48560  0187CC  8E15               	bsf	i2___fldiv@b+2,7,c
 48561  0187CE  D006               	goto	L55
 48562  0187D0                     i2l14748:
 48563  0187D0  0E00               	movlw	0
 48564  0187D2  6E13               	movwf	i2___fldiv@b,c
 48565  0187D4  0E00               	movlw	0
 48566  0187D6  6E14               	movwf	i2___fldiv@b+1,c
 48567  0187D8  0E00               	movlw	0
 48568  0187DA  6E15               	movwf	i2___fldiv@b+2,c
 48569  0187DC                     L55:
 48570  0187DC  0E00               	movlw	0
 48571  0187DE  6E16               	movwf	i2___fldiv@b+3,c
 48572  0187E0  501A               	movf	i2___fldiv@a+3,w,c
 48573  0187E2  0B80               	andlw	128
 48574  0187E4  1A23               	xorwf	i2___fldiv@sign,f,c
 48575  0187E6  501A               	movf	i2___fldiv@a+3,w,c
 48576  0187E8  241A               	addwf	i2___fldiv@a+3,w,c
 48577  0187EA  6E2B               	movwf	i2___fldiv@aexp,c
 48578  0187EC  BE19               	btfsc	i2___fldiv@a+2,7,c
 48579  0187EE  802B               	bsf	i2___fldiv@aexp,0,c
 48580  0187F0  502B               	movf	i2___fldiv@aexp,w,c
 48581  0187F2  B4D8               	btfsc	status,2,c
 48582  0187F4  D00D               	goto	i2l14768
 48583  0187F6  282B               	incf	i2___fldiv@aexp,w,c
 48584  0187F8  A4D8               	btfss	status,2,c
 48585  0187FA  D008               	goto	i2l14764
 48586  0187FC  0E00               	movlw	0
 48587  0187FE  6E17               	movwf	i2___fldiv@a,c
 48588  018800  0E00               	movlw	0
 48589  018802  6E18               	movwf	i2___fldiv@a+1,c
 48590  018804  0E00               	movlw	0
 48591  018806  6E19               	movwf	i2___fldiv@a+2,c
 48592  018808  0E00               	movlw	0
 48593  01880A  6E1A               	movwf	i2___fldiv@a+3,c
 48594  01880C                     i2l14764:
 48595  01880C  8E19               	bsf	i2___fldiv@a+2,7,c
 48596  01880E  D006               	goto	L56
 48597  018810                     i2l14768:
 48598  018810  0E00               	movlw	0
 48599  018812  6E17               	movwf	i2___fldiv@a,c
 48600  018814  0E00               	movlw	0
 48601  018816  6E18               	movwf	i2___fldiv@a+1,c
 48602  018818  0E00               	movlw	0
 48603  01881A  6E19               	movwf	i2___fldiv@a+2,c
 48604  01881C                     L56:
 48605  01881C  0E00               	movlw	0
 48606  01881E  6E1A               	movwf	i2___fldiv@a+3,c
 48607  018820  5017               	movf	i2___fldiv@a,w,c
 48608  018822  1018               	iorwf	i2___fldiv@a+1,w,c
 48609  018824  1019               	iorwf	i2___fldiv@a+2,w,c
 48610  018826  101A               	iorwf	i2___fldiv@a+3,w,c
 48611  018828  A4D8               	btfss	status,2,c
 48612  01882A  D017               	goto	i2l14782
 48613  01882C  0E00               	movlw	0
 48614  01882E  6E13               	movwf	i2___fldiv@b,c
 48615  018830  0E00               	movlw	0
 48616  018832  6E14               	movwf	i2___fldiv@b+1,c
 48617  018834  0E00               	movlw	0
 48618  018836  6E15               	movwf	i2___fldiv@b+2,c
 48619  018838  0E00               	movlw	0
 48620  01883A  6E16               	movwf	i2___fldiv@b+3,c
 48621  01883C  0E80               	movlw	128
 48622  01883E  1215               	iorwf	i2___fldiv@b+2,f,c
 48623  018840  0E7F               	movlw	127
 48624  018842  1216               	iorwf	i2___fldiv@b+3,f,c
 48625  018844                     i2l14776:
 48626  018844  5023               	movf	i2___fldiv@sign,w,c
 48627  018846  1216               	iorwf	i2___fldiv@b+3,f,c
 48628  018848  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 48629  01884C  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 48630  018850  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 48631  018854  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 48632  018858  0012               	return	
 48633  01885A                     i2l14782:
 48634  01885A  502A               	movf	i2___fldiv@bexp,w,c
 48635  01885C  A4D8               	btfss	status,2,c
 48636  01885E  D009               	goto	i2l14790
 48637  018860  0E00               	movlw	0
 48638  018862  6E13               	movwf	?i2___fldiv,c
 48639  018864  0E00               	movlw	0
 48640  018866  6E14               	movwf	?i2___fldiv+1,c
 48641  018868  0E00               	movlw	0
 48642  01886A  6E15               	movwf	?i2___fldiv+2,c
 48643  01886C  0E00               	movlw	0
 48644  01886E  6E16               	movwf	?i2___fldiv+3,c
 48645  018870  0012               	return	
 48646  018872                     i2l14790:
 48647  018872  502B               	movf	i2___fldiv@aexp,w,c
 48648  018874  C02A  F01B         	movff	i2___fldiv@bexp,??i2___fldiv
 48649  018878  6A1C               	clrf	(??i2___fldiv+1)& (0+255),c
 48650  01887A  5E1B               	subwf	??i2___fldiv,f,c
 48651  01887C  0E00               	movlw	0
 48652  01887E  5A1C               	subwfb	??i2___fldiv+1,f,c
 48653  018880  0E7F               	movlw	127
 48654  018882  241B               	addwf	??i2___fldiv,w,c
 48655  018884  6E24               	movwf	i2___fldiv@new_exp,c
 48656  018886  0E00               	movlw	0
 48657  018888  201C               	addwfc	??i2___fldiv+1,w,c
 48658  01888A  6E25               	movwf	i2___fldiv@new_exp+1,c
 48659  01888C  C013  F01F         	movff	i2___fldiv@b,i2___fldiv@rem
 48660  018890  C014  F020         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 48661  018894  C015  F021         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 48662  018898  C016  F022         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 48663  01889C  0E00               	movlw	0
 48664  01889E  6E13               	movwf	i2___fldiv@b,c
 48665  0188A0  0E00               	movlw	0
 48666  0188A2  6E14               	movwf	i2___fldiv@b+1,c
 48667  0188A4  0E00               	movlw	0
 48668  0188A6  6E15               	movwf	i2___fldiv@b+2,c
 48669  0188A8  0E00               	movlw	0
 48670  0188AA  6E16               	movwf	i2___fldiv@b+3,c
 48671  0188AC  0E00               	movlw	0
 48672  0188AE  6E26               	movwf	i2___fldiv@grs,c
 48673  0188B0  0E00               	movlw	0
 48674  0188B2  6E27               	movwf	i2___fldiv@grs+1,c
 48675  0188B4  0E00               	movlw	0
 48676  0188B6  6E28               	movwf	i2___fldiv@grs+2,c
 48677  0188B8  0E00               	movlw	0
 48678  0188BA  6E29               	movwf	i2___fldiv@grs+3,c
 48679  0188BC  0E00               	movlw	0
 48680  0188BE  6E2B               	movwf	i2___fldiv@aexp,c
 48681  0188C0  D028               	goto	i2l3261
 48682  0188C2                     i2l14800:
 48683  0188C2  502B               	movf	i2___fldiv@aexp,w,c
 48684  0188C4  B4D8               	btfsc	status,2,c
 48685  0188C6  D011               	goto	i2l14808
 48686  0188C8  90D8               	bcf	status,0,c
 48687  0188CA  361F               	rlcf	i2___fldiv@rem,f,c
 48688  0188CC  3620               	rlcf	i2___fldiv@rem+1,f,c
 48689  0188CE  3621               	rlcf	i2___fldiv@rem+2,f,c
 48690  0188D0  3622               	rlcf	i2___fldiv@rem+3,f,c
 48691  0188D2  90D8               	bcf	status,0,c
 48692  0188D4  3613               	rlcf	i2___fldiv@b,f,c
 48693  0188D6  3614               	rlcf	i2___fldiv@b+1,f,c
 48694  0188D8  3615               	rlcf	i2___fldiv@b+2,f,c
 48695  0188DA  3616               	rlcf	i2___fldiv@b+3,f,c
 48696  0188DC  BE29               	btfsc	i2___fldiv@grs+3,7,c
 48697  0188DE  8013               	bsf	i2___fldiv@b,0,c
 48698  0188E0  90D8               	bcf	status,0,c
 48699  0188E2  3626               	rlcf	i2___fldiv@grs,f,c
 48700  0188E4  3627               	rlcf	i2___fldiv@grs+1,f,c
 48701  0188E6  3628               	rlcf	i2___fldiv@grs+2,f,c
 48702  0188E8  3629               	rlcf	i2___fldiv@grs+3,f,c
 48703  0188EA                     i2l14808:
 48704  0188EA  5017               	movf	i2___fldiv@a,w,c
 48705  0188EC  5C1F               	subwf	i2___fldiv@rem,w,c
 48706  0188EE  5018               	movf	i2___fldiv@a+1,w,c
 48707  0188F0  5820               	subwfb	i2___fldiv@rem+1,w,c
 48708  0188F2  5019               	movf	i2___fldiv@a+2,w,c
 48709  0188F4  5821               	subwfb	i2___fldiv@rem+2,w,c
 48710  0188F6  501A               	movf	i2___fldiv@a+3,w,c
 48711  0188F8  5822               	subwfb	i2___fldiv@rem+3,w,c
 48712  0188FA  A0D8               	btfss	status,0,c
 48713  0188FC  D009               	goto	i2l14814
 48714  0188FE  8C29               	bsf	i2___fldiv@grs+3,6,c
 48715  018900  5017               	movf	i2___fldiv@a,w,c
 48716  018902  5E1F               	subwf	i2___fldiv@rem,f,c
 48717  018904  5018               	movf	i2___fldiv@a+1,w,c
 48718  018906  5A20               	subwfb	i2___fldiv@rem+1,f,c
 48719  018908  5019               	movf	i2___fldiv@a+2,w,c
 48720  01890A  5A21               	subwfb	i2___fldiv@rem+2,f,c
 48721  01890C  501A               	movf	i2___fldiv@a+3,w,c
 48722  01890E  5A22               	subwfb	i2___fldiv@rem+3,f,c
 48723  018910                     i2l14814:
 48724  018910  2A2B               	incf	i2___fldiv@aexp,f,c
 48725  018912                     i2l3261:
 48726  018912  0E19               	movlw	25
 48727  018914  642B               	cpfsgt	i2___fldiv@aexp,c
 48728  018916  D7D5               	goto	i2l14800
 48729  018918  501F               	movf	i2___fldiv@rem,w,c
 48730  01891A  1020               	iorwf	i2___fldiv@rem+1,w,c
 48731  01891C  1021               	iorwf	i2___fldiv@rem+2,w,c
 48732  01891E  1022               	iorwf	i2___fldiv@rem+3,w,c
 48733  018920  B4D8               	btfsc	status,2,c
 48734  018922  D011               	goto	i2l14826
 48735  018924  8026               	bsf	i2___fldiv@grs,0,c
 48736  018926  D00F               	goto	i2l14826
 48737  018928                     i2l14820:
 48738  018928  90D8               	bcf	status,0,c
 48739  01892A  3613               	rlcf	i2___fldiv@b,f,c
 48740  01892C  3614               	rlcf	i2___fldiv@b+1,f,c
 48741  01892E  3615               	rlcf	i2___fldiv@b+2,f,c
 48742  018930  3616               	rlcf	i2___fldiv@b+3,f,c
 48743  018932  BE29               	btfsc	i2___fldiv@grs+3,7,c
 48744  018934  8013               	bsf	i2___fldiv@b,0,c
 48745  018936  90D8               	bcf	status,0,c
 48746  018938  3626               	rlcf	i2___fldiv@grs,f,c
 48747  01893A  3627               	rlcf	i2___fldiv@grs+1,f,c
 48748  01893C  3628               	rlcf	i2___fldiv@grs+2,f,c
 48749  01893E  3629               	rlcf	i2___fldiv@grs+3,f,c
 48750  018940  0624               	decf	i2___fldiv@new_exp,f,c
 48751  018942  A0D8               	btfss	status,0,c
 48752  018944  0625               	decf	i2___fldiv@new_exp+1,f,c
 48753  018946                     i2l14826:
 48754  018946  AE15               	btfss	i2___fldiv@b+2,7,c
 48755  018948  D7EF               	goto	i2l14820
 48756  01894A  0E00               	movlw	0
 48757  01894C  6E2B               	movwf	i2___fldiv@aexp,c
 48758  01894E  AE29               	btfss	i2___fldiv@grs+3,7,c
 48759  018950  D017               	goto	i2l3272
 48760  018952  0EFF               	movlw	255
 48761  018954  1426               	andwf	i2___fldiv@grs,w,c
 48762  018956  6E1B               	movwf	??i2___fldiv& (0+255),c
 48763  018958  0EFF               	movlw	255
 48764  01895A  1427               	andwf	i2___fldiv@grs+1,w,c
 48765  01895C  6E1C               	movwf	(??i2___fldiv+1)& (0+255),c
 48766  01895E  0EFF               	movlw	255
 48767  018960  1428               	andwf	i2___fldiv@grs+2,w,c
 48768  018962  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 48769  018964  0E7F               	movlw	127
 48770  018966  1429               	andwf	i2___fldiv@grs+3,w,c
 48771  018968  6E1E               	movwf	(??i2___fldiv+3)& (0+255),c
 48772  01896A  501B               	movf	??i2___fldiv,w,c
 48773  01896C  101C               	iorwf	??i2___fldiv+1,w,c
 48774  01896E  101D               	iorwf	??i2___fldiv+2,w,c
 48775  018970  101E               	iorwf	??i2___fldiv+3,w,c
 48776  018972  B4D8               	btfsc	status,2,c
 48777  018974  D003               	goto	i2l3273
 48778  018976                     i2u1792_40:
 48779  018976  0E01               	movlw	1
 48780  018978  6E2B               	movwf	i2___fldiv@aexp,c
 48781  01897A  D002               	goto	i2l3272
 48782  01897C                     i2l3273:
 48783  01897C  B013               	btfsc	i2___fldiv@b,0,c
 48784  01897E  D7FB               	goto	i2u1792_40
 48785  018980                     i2l3272:
 48786  018980  502B               	movf	i2___fldiv@aexp,w,c
 48787  018982  B4D8               	btfsc	status,2,c
 48788  018984  D01F               	goto	i2l14846
 48789  018986  0E01               	movlw	1
 48790  018988  2613               	addwf	i2___fldiv@b,f,c
 48791  01898A  0E00               	movlw	0
 48792  01898C  2214               	addwfc	i2___fldiv@b+1,f,c
 48793  01898E  2215               	addwfc	i2___fldiv@b+2,f,c
 48794  018990  2216               	addwfc	i2___fldiv@b+3,f,c
 48795  018992  A016               	btfss	i2___fldiv@b+3,0,c
 48796  018994  D017               	goto	i2l14846
 48797  018996  C013  F01B         	movff	i2___fldiv@b,??i2___fldiv
 48798  01899A  C014  F01C         	movff	i2___fldiv@b+1,??i2___fldiv+1
 48799  01899E  C015  F01D         	movff	i2___fldiv@b+2,??i2___fldiv+2
 48800  0189A2  C016  F01E         	movff	i2___fldiv@b+3,??i2___fldiv+3
 48801  0189A6  341E               	rlcf	??i2___fldiv+3,w,c
 48802  0189A8  321E               	rrcf	??i2___fldiv+3,f,c
 48803  0189AA  321D               	rrcf	??i2___fldiv+2,f,c
 48804  0189AC  321C               	rrcf	??i2___fldiv+1,f,c
 48805  0189AE  321B               	rrcf	??i2___fldiv,f,c
 48806  0189B0  C01B  F013         	movff	??i2___fldiv,i2___fldiv@b
 48807  0189B4  C01C  F014         	movff	??i2___fldiv+1,i2___fldiv@b+1
 48808  0189B8  C01D  F015         	movff	??i2___fldiv+2,i2___fldiv@b+2
 48809  0189BC  C01E  F016         	movff	??i2___fldiv+3,i2___fldiv@b+3
 48810  0189C0  4A24               	infsnz	i2___fldiv@new_exp,f,c
 48811  0189C2  2A25               	incf	i2___fldiv@new_exp+1,f,c
 48812  0189C4                     i2l14846:
 48813  0189C4  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 48814  0189C6  D010               	goto	i2l14850
 48815  0189C8  5025               	movf	i2___fldiv@new_exp+1,w,c
 48816  0189CA  E103               	bnz	i2u1796_40
 48817  0189CC  2824               	incf	i2___fldiv@new_exp,w,c
 48818  0189CE  A0D8               	btfss	status,0,c
 48819  0189D0  D00B               	goto	i2l14850
 48820  0189D2                     i2u1796_40:
 48821  0189D2  0E00               	movlw	0
 48822  0189D4  6E25               	movwf	i2___fldiv@new_exp+1,c
 48823  0189D6  6824               	setf	i2___fldiv@new_exp,c
 48824  0189D8  0E00               	movlw	0
 48825  0189DA  6E13               	movwf	i2___fldiv@b,c
 48826  0189DC  0E00               	movlw	0
 48827  0189DE  6E14               	movwf	i2___fldiv@b+1,c
 48828  0189E0  0E00               	movlw	0
 48829  0189E2  6E15               	movwf	i2___fldiv@b+2,c
 48830  0189E4  0E00               	movlw	0
 48831  0189E6  6E16               	movwf	i2___fldiv@b+3,c
 48832  0189E8                     i2l14850:
 48833  0189E8  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 48834  0189EA  D005               	goto	i2u1797_40
 48835  0189EC  5025               	movf	i2___fldiv@new_exp+1,w,c
 48836  0189EE  E111               	bnz	i2l14854
 48837  0189F0  0424               	decf	i2___fldiv@new_exp,w,c
 48838  0189F2  B0D8               	btfsc	status,0,c
 48839  0189F4  D00E               	goto	i2l14854
 48840  0189F6                     i2u1797_40:
 48841  0189F6  0E00               	movlw	0
 48842  0189F8  6E25               	movwf	i2___fldiv@new_exp+1,c
 48843  0189FA  0E00               	movlw	0
 48844  0189FC  6E24               	movwf	i2___fldiv@new_exp,c
 48845  0189FE  0E00               	movlw	0
 48846  018A00  6E13               	movwf	i2___fldiv@b,c
 48847  018A02  0E00               	movlw	0
 48848  018A04  6E14               	movwf	i2___fldiv@b+1,c
 48849  018A06  0E00               	movlw	0
 48850  018A08  6E15               	movwf	i2___fldiv@b+2,c
 48851  018A0A  0E00               	movlw	0
 48852  018A0C  6E16               	movwf	i2___fldiv@b+3,c
 48853  018A0E  0E00               	movlw	0
 48854  018A10  6E23               	movwf	i2___fldiv@sign,c
 48855  018A12                     i2l14854:
 48856  018A12  C024  F02A         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 48857  018A16  A02A               	btfss	i2___fldiv@bexp,0,c
 48858  018A18  D002               	goto	i2l14860
 48859  018A1A  8E15               	bsf	i2___fldiv@b+2,7,c
 48860  018A1C  D001               	goto	i2l14862
 48861  018A1E                     i2l14860:
 48862  018A1E  9E15               	bcf	i2___fldiv@b+2,7,c
 48863  018A20                     i2l14862:
 48864  018A20  90D8               	bcf	status,0,c
 48865  018A22  302A               	rrcf	i2___fldiv@bexp,w,c
 48866  018A24  6E16               	movwf	i2___fldiv@b+3,c
 48867  018A26  D70E               	goto	i2l14776
 48868  018A28                     __end_ofi2___fldiv:
 48869                           	opt callstack 0
 48870                           
 48871 ;; *************** function _fabs *****************
 48872 ;; Defined at:
 48873 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fabs.c"
 48874 ;; Parameters:    Size  Location     Type
 48875 ;;  d               4    4[COMRAM] unsigned char 
 48876 ;; Auto vars:     Size  Location     Type
 48877 ;;		None
 48878 ;; Return value:  Size  Location     Type
 48879 ;;                  4    4[COMRAM] unsigned char 
 48880 ;; Registers used:
 48881 ;;		wreg, status,2, status,0, cstack
 48882 ;; Tracked objects:
 48883 ;;		On entry : 0/0
 48884 ;;		On exit  : 0/0
 48885 ;;		Unchanged: 0/0
 48886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48887 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48890 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48891 ;;Total ram usage:        4 bytes
 48892 ;; Hardware stack levels used:    1
 48893 ;; Hardware stack levels required when called:    1
 48894 ;; This function calls:
 48895 ;;		i2___flneg
 48896 ;; This function is called by:
 48897 ;;		_ADC_PostProcessingHandler
 48898 ;; This function uses a non-reentrant model
 48899 ;;
 48900                           
 48901                           	psect	text206
 48902  01C15C                     __ptext206:
 48903                           	opt callstack 0
 48904  01C15C                     _fabs:
 48905                           	opt callstack 13
 48906                           
 48907                           ;incstack = 0
 48908  01C15C  AE08               	btfss	fabs@d+3,7,c
 48909  01C15E  D013               	goto	i2l3355
 48910  01C160  C005  F001         	movff	fabs@d,i2___flneg@f1
 48911  01C164  C006  F002         	movff	fabs@d+1,i2___flneg@f1+1
 48912  01C168  C007  F003         	movff	fabs@d+2,i2___flneg@f1+2
 48913  01C16C  C008  F004         	movff	fabs@d+3,i2___flneg@f1+3
 48914  01C170  ECFA  F0E1         	call	i2___flneg	;wreg free
 48915  01C174  C001  F005         	movff	?i2___flneg,?_fabs
 48916  01C178  C002  F006         	movff	?i2___flneg+1,?_fabs+1
 48917  01C17C  C003  F007         	movff	?i2___flneg+2,?_fabs+2
 48918  01C180  C004  F008         	movff	?i2___flneg+3,?_fabs+3
 48919  01C184  0012               	return	
 48920  01C186                     i2l3355:
 48921  01C186  C005  F005         	movff	fabs@d,?_fabs
 48922  01C18A  C006  F006         	movff	fabs@d+1,?_fabs+1
 48923  01C18E  C007  F007         	movff	fabs@d+2,?_fabs+2
 48924  01C192  C008  F008         	movff	fabs@d+3,?_fabs+3
 48925  01C196  0012               	return		;funcret
 48926  01C198                     __end_of_fabs:
 48927                           	opt callstack 0
 48928                           
 48929 ;; *************** function i2___flneg *****************
 48930 ;; Defined at:
 48931 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
 48932 ;; Parameters:    Size  Location     Type
 48933 ;;  f1              4    0[COMRAM] unsigned char 
 48934 ;; Auto vars:     Size  Location     Type
 48935 ;;		None
 48936 ;; Return value:  Size  Location     Type
 48937 ;;                  4    0[COMRAM] unsigned char 
 48938 ;; Registers used:
 48939 ;;		wreg, status,2, status,0
 48940 ;; Tracked objects:
 48941 ;;		On entry : 0/0
 48942 ;;		On exit  : 0/0
 48943 ;;		Unchanged: 0/0
 48944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48945 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48948 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48949 ;;Total ram usage:        4 bytes
 48950 ;; Hardware stack levels used:    1
 48951 ;; This function calls:
 48952 ;;		Nothing
 48953 ;; This function is called by:
 48954 ;;		_fabs
 48955 ;;		i2__doprnt
 48956 ;; This function uses a non-reentrant model
 48957 ;;
 48958                           
 48959                           	psect	text207
 48960  01C3F4                     __ptext207:
 48961                           	opt callstack 0
 48962  01C3F4                     i2___flneg:
 48963                           	opt callstack 13
 48964                           
 48965                           ;incstack = 0
 48966  01C3F4  5001               	movf	i2___flneg@f1,w,c
 48967  01C3F6  1002               	iorwf	i2___flneg@f1+1,w,c
 48968  01C3F8  1003               	iorwf	i2___flneg@f1+2,w,c
 48969  01C3FA  1004               	iorwf	i2___flneg@f1+3,w,c
 48970  01C3FC  B4D8               	btfsc	status,2,c
 48971  01C3FE  D008               	goto	i2l19686
 48972  01C400  0E00               	movlw	0
 48973  01C402  1A01               	xorwf	i2___flneg@f1,f,c
 48974  01C404  0E00               	movlw	0
 48975  01C406  1A02               	xorwf	i2___flneg@f1+1,f,c
 48976  01C408  0E00               	movlw	0
 48977  01C40A  1A03               	xorwf	i2___flneg@f1+2,f,c
 48978  01C40C  0E80               	movlw	128
 48979  01C40E  1A04               	xorwf	i2___flneg@f1+3,f,c
 48980  01C410                     i2l19686:
 48981  01C410  C001  F001         	movff	i2___flneg@f1,?i2___flneg
 48982  01C414  C002  F002         	movff	i2___flneg@f1+1,?i2___flneg+1
 48983  01C418  C003  F003         	movff	i2___flneg@f1+2,?i2___flneg+2
 48984  01C41C  C004  F004         	movff	i2___flneg@f1+3,?i2___flneg+3
 48985  01C420  0012               	return		;funcret
 48986  01C422                     __end_ofi2___flneg:
 48987                           	opt callstack 0
 48988                           
 48989 ;; *************** function _TMR2_StartTimer *****************
 48990 ;; Defined at:
 48991 ;;		line 114 in file "mcc_generated_files/tmr2.c"
 48992 ;; Parameters:    Size  Location     Type
 48993 ;;		None
 48994 ;; Auto vars:     Size  Location     Type
 48995 ;;		None
 48996 ;; Return value:  Size  Location     Type
 48997 ;;                  1    wreg      void 
 48998 ;; Registers used:
 48999 ;;		cstack
 49000 ;; Tracked objects:
 49001 ;;		On entry : 0/0
 49002 ;;		On exit  : 0/0
 49003 ;;		Unchanged: 0/0
 49004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49009 ;;Total ram usage:        0 bytes
 49010 ;; Hardware stack levels used:    1
 49011 ;; Hardware stack levels required when called:    1
 49012 ;; This function calls:
 49013 ;;		_TMR2_Start
 49014 ;; This function is called by:
 49015 ;;		_ADC_PostProcessingHandler
 49016 ;; This function uses a non-reentrant model
 49017 ;;
 49018                           
 49019                           	psect	text208
 49020  01CAFE                     __ptext208:
 49021                           	opt callstack 0
 49022  01CAFE                     _TMR2_StartTimer:
 49023                           	opt callstack 13
 49024                           
 49025                           ;tmr2.c: 116: TMR2_Start();
 49026                           
 49027                           ;incstack = 0
 49028  01CAFE  EC92  F0E5         	call	_TMR2_Start	;wreg free
 49029  01CB02  0012               	return		;funcret
 49030  01CB04                     __end_of_TMR2_StartTimer:
 49031                           	opt callstack 0
 49032                           
 49033 ;; *************** function _TMR2_Start *****************
 49034 ;; Defined at:
 49035 ;;		line 108 in file "mcc_generated_files/tmr2.c"
 49036 ;; Parameters:    Size  Location     Type
 49037 ;;		None
 49038 ;; Auto vars:     Size  Location     Type
 49039 ;;		None
 49040 ;; Return value:  Size  Location     Type
 49041 ;;                  1    wreg      void 
 49042 ;; Registers used:
 49043 ;;		None
 49044 ;; Tracked objects:
 49045 ;;		On entry : 0/0
 49046 ;;		On exit  : 0/0
 49047 ;;		Unchanged: 0/0
 49048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49053 ;;Total ram usage:        0 bytes
 49054 ;; Hardware stack levels used:    1
 49055 ;; This function calls:
 49056 ;;		Nothing
 49057 ;; This function is called by:
 49058 ;;		_TMR2_StartTimer
 49059 ;; This function uses a non-reentrant model
 49060 ;;
 49061                           
 49062                           	psect	text209
 49063  01CB24                     __ptext209:
 49064                           	opt callstack 0
 49065  01CB24                     _TMR2_Start:
 49066                           	opt callstack 13
 49067                           
 49068                           ;tmr2.c: 111: T2CONbits.TMR2ON = 1;
 49069                           
 49070                           ;incstack = 0
 49071  01CB24  8EBD               	bsf	4029,7,c	;volatile
 49072  01CB26  0012               	return		;funcret
 49073  01CB28                     __end_of_TMR2_Start:
 49074                           	opt callstack 0
 49075                           
 49076 ;; *************** function _ADCC_StopConversion *****************
 49077 ;; Defined at:
 49078 ;;		line 162 in file "mcc_generated_files/adcc.c"
 49079 ;; Parameters:    Size  Location     Type
 49080 ;;		None
 49081 ;; Auto vars:     Size  Location     Type
 49082 ;;		None
 49083 ;; Return value:  Size  Location     Type
 49084 ;;                  1    wreg      void 
 49085 ;; Registers used:
 49086 ;;		None
 49087 ;; Tracked objects:
 49088 ;;		On entry : 0/0
 49089 ;;		On exit  : 0/0
 49090 ;;		Unchanged: 0/0
 49091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49096 ;;Total ram usage:        0 bytes
 49097 ;; Hardware stack levels used:    1
 49098 ;; This function calls:
 49099 ;;		Nothing
 49100 ;; This function is called by:
 49101 ;;		_ADC_PostProcessingHandler
 49102 ;; This function uses a non-reentrant model
 49103 ;;
 49104                           
 49105                           	psect	text210
 49106  01CB28                     __ptext210:
 49107                           	opt callstack 0
 49108  01CB28                     _ADCC_StopConversion:
 49109                           	opt callstack 14
 49110                           
 49111                           ;adcc.c: 165: ADCON0bits.ADGO = 0;
 49112                           
 49113                           ;incstack = 0
 49114  01CB28  9060               	bcf	3936,0,c	;volatile
 49115  01CB2A  0012               	return		;funcret
 49116  01CB2C                     __end_of_ADCC_StopConversion:
 49117                           	opt callstack 0
 49118                           
 49119 ;; *************** function _ADCC_HasAccumulatorOverflowed *****************
 49120 ;; Defined at:
 49121 ;;		line 216 in file "mcc_generated_files/adcc.c"
 49122 ;; Parameters:    Size  Location     Type
 49123 ;;		None
 49124 ;; Auto vars:     Size  Location     Type
 49125 ;;		None
 49126 ;; Return value:  Size  Location     Type
 49127 ;;                  1    wreg      unsigned char 
 49128 ;; Registers used:
 49129 ;;		wreg
 49130 ;; Tracked objects:
 49131 ;;		On entry : 0/0
 49132 ;;		On exit  : 0/0
 49133 ;;		Unchanged: 0/0
 49134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49139 ;;Total ram usage:        0 bytes
 49140 ;; Hardware stack levels used:    1
 49141 ;; This function calls:
 49142 ;;		Nothing
 49143 ;; This function is called by:
 49144 ;;		_ADC_PostProcessingHandler
 49145 ;; This function uses a non-reentrant model
 49146 ;;
 49147                           
 49148                           	psect	text211
 49149  01CAA6                     __ptext211:
 49150                           	opt callstack 0
 49151  01CAA6                     _ADCC_HasAccumulatorOverflowed:
 49152                           	opt callstack 14
 49153                           
 49154                           ;adcc.c: 219: return ADSTATbits.ADAOV;
 49155                           
 49156                           ;incstack = 0
 49157  01CAA6  AE65               	btfss	3941,7,c	;volatile
 49158  01CAA8  D002               	goto	i2u1609_40
 49159  01CAAA  0E01               	movlw	1
 49160  01CAAC  0012               	return	
 49161  01CAAE                     i2u1609_40:
 49162  01CAAE  0E00               	movlw	0
 49163  01CAB0  0012               	return		;funcret
 49164  01CAB2                     __end_of_ADCC_HasAccumulatorOverflowed:
 49165                           	opt callstack 0
 49166                           
 49167 ;; *************** function _ADCC_GetFilterValue *****************
 49168 ;; Defined at:
 49169 ;;		line 222 in file "mcc_generated_files/adcc.c"
 49170 ;; Parameters:    Size  Location     Type
 49171 ;;		None
 49172 ;; Auto vars:     Size  Location     Type
 49173 ;;		None
 49174 ;; Return value:  Size  Location     Type
 49175 ;;                  2    0[COMRAM] unsigned int 
 49176 ;; Registers used:
 49177 ;;		wreg, status,2, status,0
 49178 ;; Tracked objects:
 49179 ;;		On entry : 0/0
 49180 ;;		On exit  : 0/0
 49181 ;;		Unchanged: 0/0
 49182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49183 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49185 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49186 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49187 ;;Total ram usage:        4 bytes
 49188 ;; Hardware stack levels used:    1
 49189 ;; This function calls:
 49190 ;;		Nothing
 49191 ;; This function is called by:
 49192 ;;		_ADC_PostProcessingHandler
 49193 ;; This function uses a non-reentrant model
 49194 ;;
 49195                           
 49196                           	psect	text212
 49197  01C908                     __ptext212:
 49198                           	opt callstack 0
 49199  01C908                     _ADCC_GetFilterValue:
 49200                           	opt callstack 14
 49201                           
 49202                           ;adcc.c: 225: return ((uint16_t)((ADFLTRH << 8) + ADFLTRL));
 49203                           
 49204                           ;incstack = 0
 49205  01C908  5073               	movf	3955,w,c	;volatile
 49206  01C90A  6E04               	movwf	(??_ADCC_GetFilterValue+1)& (0+255),c
 49207  01C90C  6A03               	clrf	??_ADCC_GetFilterValue& (0+255),c
 49208  01C90E  5072               	movf	3954,w,c	;volatile
 49209  01C910  2403               	addwf	??_ADCC_GetFilterValue,w,c
 49210  01C912  6E01               	movwf	?_ADCC_GetFilterValue,c
 49211  01C914  0E00               	movlw	0
 49212  01C916  2004               	addwfc	??_ADCC_GetFilterValue+1,w,c
 49213  01C918  6E02               	movwf	?_ADCC_GetFilterValue+1,c
 49214  01C91A  0012               	return		;funcret
 49215  01C91C                     __end_of_ADCC_GetFilterValue:
 49216                           	opt callstack 0
 49217                           
 49218 ;; *************** function _ADCC_GetCurrentCountofConversions *****************
 49219 ;; Defined at:
 49220 ;;		line 198 in file "mcc_generated_files/adcc.c"
 49221 ;; Parameters:    Size  Location     Type
 49222 ;;		None
 49223 ;; Auto vars:     Size  Location     Type
 49224 ;;		None
 49225 ;; Return value:  Size  Location     Type
 49226 ;;                  1    wreg      unsigned char 
 49227 ;; Registers used:
 49228 ;;		wreg, status,2
 49229 ;; Tracked objects:
 49230 ;;		On entry : 0/0
 49231 ;;		On exit  : 0/0
 49232 ;;		Unchanged: 0/0
 49233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49238 ;;Total ram usage:        0 bytes
 49239 ;; Hardware stack levels used:    1
 49240 ;; This function calls:
 49241 ;;		Nothing
 49242 ;; This function is called by:
 49243 ;;		_ADC_PostProcessingHandler
 49244 ;; This function uses a non-reentrant model
 49245 ;;
 49246                           
 49247                           	psect	text213
 49248  01CB2C                     __ptext213:
 49249                           	opt callstack 0
 49250  01CB2C                     _ADCC_GetCurrentCountofConversions:
 49251                           	opt callstack 14
 49252                           
 49253                           ;adcc.c: 201: return ADCNT;
 49254                           
 49255                           ;incstack = 0
 49256  01CB2C  5067               	movf	3943,w,c	;volatile
 49257  01CB2E  0012               	return		;funcret
 49258  01CB30                     __end_of_ADCC_GetCurrentCountofConversions:
 49259                           	opt callstack 0
 49260                           
 49261 ;; *************** function _ADCC_GetConversionResult *****************
 49262 ;; Defined at:
 49263 ;;		line 130 in file "mcc_generated_files/adcc.c"
 49264 ;; Parameters:    Size  Location     Type
 49265 ;;		None
 49266 ;; Auto vars:     Size  Location     Type
 49267 ;;		None
 49268 ;; Return value:  Size  Location     Type
 49269 ;;                  2    0[COMRAM] unsigned int 
 49270 ;; Registers used:
 49271 ;;		wreg, status,2, status,0
 49272 ;; Tracked objects:
 49273 ;;		On entry : 0/0
 49274 ;;		On exit  : 0/0
 49275 ;;		Unchanged: 0/0
 49276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49279 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49280 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49281 ;;Total ram usage:        4 bytes
 49282 ;; Hardware stack levels used:    1
 49283 ;; This function calls:
 49284 ;;		Nothing
 49285 ;; This function is called by:
 49286 ;;		_ADC_PostProcessingHandler
 49287 ;; This function uses a non-reentrant model
 49288 ;;
 49289                           
 49290                           	psect	text214
 49291  01C91C                     __ptext214:
 49292                           	opt callstack 0
 49293  01C91C                     _ADCC_GetConversionResult:
 49294                           	opt callstack 14
 49295                           
 49296                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 49297                           
 49298                           ;incstack = 0
 49299  01C91C  5064               	movf	3940,w,c	;volatile
 49300  01C91E  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 49301  01C920  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 49302  01C922  5063               	movf	3939,w,c	;volatile
 49303  01C924  2403               	addwf	??_ADCC_GetConversionResult,w,c
 49304  01C926  6E01               	movwf	?_ADCC_GetConversionResult,c
 49305  01C928  0E00               	movlw	0
 49306  01C92A  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 49307  01C92C  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 49308  01C92E  0012               	return		;funcret
 49309  01C930                     __end_of_ADCC_GetConversionResult:
 49310                           	opt callstack 0
 49311                           
 49312                           	psect	text215
 49313  000000                     __ptext215:
 49314                           	opt callstack 0
 49315                           
 49316                           	psect	rparam
 49317  0000                     
 49318                           	psect	temp
 49319  00005F                     btemp:
 49320                           	opt callstack 0
 49321  00005F                     	ds	1
 49322  0000                     int$flags	set	btemp
 49323  0000                     wtemp8	set	btemp+1
 49324  0000                     ttemp5	set	btemp+1
 49325  0000                     ttemp6	set	btemp+4
 49326  0000                     ttemp7	set	btemp+8
 49327                           tosu	equ	0xFFF
 49328                           tosh	equ	0xFFE
 49329                           tosl	equ	0xFFD
 49330                           stkptr	equ	0xFFC
 49331                           pclatu	equ	0xFFB
 49332                           pclath	equ	0xFFA
 49333                           pcl	equ	0xFF9
 49334                           tblptru	equ	0xFF8
 49335                           tblptrh	equ	0xFF7
 49336                           tblptrl	equ	0xFF6
 49337                           tablat	equ	0xFF5
 49338                           prodh	equ	0xFF4
 49339                           prodl	equ	0xFF3
 49340                           indf0	equ	0xFEF
 49341                           postinc0	equ	0xFEE
 49342                           postdec0	equ	0xFED
 49343                           preinc0	equ	0xFEC
 49344                           plusw0	equ	0xFEB
 49345                           fsr0h	equ	0xFEA
 49346                           fsr0l	equ	0xFE9
 49347                           wreg	equ	0xFE8
 49348                           indf1	equ	0xFE7
 49349                           postinc1	equ	0xFE6
 49350                           postdec1	equ	0xFE5
 49351                           preinc1	equ	0xFE4
 49352                           plusw1	equ	0xFE3
 49353                           fsr1h	equ	0xFE2
 49354                           fsr1l	equ	0xFE1
 49355                           bsr	equ	0xFE0
 49356                           indf2	equ	0xFDF
 49357                           postinc2	equ	0xFDE
 49358                           postdec2	equ	0xFDD
 49359                           preinc2	equ	0xFDC
 49360                           plusw2	equ	0xFDB
 49361                           fsr2h	equ	0xFDA
 49362                           fsr2l	equ	0xFD9
 49363                           status	equ	0xFD8


Data Sizes:
    Strings     5767
    Constant    948
    Data        38
    BSS         645
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     89     160
    BANK1           256     97     181
    BANK2           256    191     256
    BANK3           256     46     255
    BANK4           256      0     256
    BANK5           256     24      24
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2printf@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> i2_putch(), putch(), Absolute function(), 

    i2printf@pb.ptr	PTR unsigned char  size(2) Largest target is 0
		 -> ftoa@buf(BANK3[17]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), 
		 -> OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), NULL(NULL[0]), 

    i2c2_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    i2c2_tr_queue.pTrFlag	PTR enum E9433 size(2) Largest target is 0
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    i2c2_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    OLED_updateHandler$6024	PTR const unsigned char  size(2) Largest target is 20
		 -> floatToEngineeringFormat@result(BANK3[20]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_305(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 16
		 -> terminalTextAttributes@print_string(BANK5[16]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 16
		 -> terminalTextAttributes@print_string(BANK5[16]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 68
		 -> line(BANK3[64]), OLED_RAM_Buffer.line3(BANK3[17]), OLED_RAM_Buffer.line2(BANK3[17]), OLED_RAM_Buffer.line1(BANK3[17]), 
		 -> OLED_RAM_Buffer.line0(BANK3[17]), OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@return_string(BANK3[40]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 68
		 -> line(BANK3[64]), OLED_RAM_Buffer.line3(BANK3[17]), OLED_RAM_Buffer.line2(BANK3[17]), OLED_RAM_Buffer.line1(BANK3[17]), 
		 -> OLED_RAM_Buffer.line0(BANK3[17]), OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@return_string(BANK3[40]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_188(CODE[12]), STR_187(CODE[13]), STR_186(CODE[16]), STR_185(CODE[14]), 
		 -> STR_184(CODE[15]), STR_183(CODE[16]), STR_182(CODE[10]), STR_181(CODE[16]), 
		 -> STR_179(CODE[13]), STR_177(CODE[11]), STR_176(CODE[2]), STR_175(CODE[2]), 
		 -> STR_174(CODE[16]), STR_173(CODE[2]), STR_172(CODE[2]), STR_170(CODE[13]), 
		 -> STR_169(CODE[15]), STR_168(CODE[2]), STR_167(CODE[2]), STR_165(CODE[13]), 
		 -> STR_164(CODE[15]), STR_163(CODE[2]), STR_162(CODE[2]), STR_160(CODE[2]), 
		 -> STR_159(CODE[2]), STR_158(CODE[13]), STR_157(CODE[2]), STR_151(CODE[13]), 
		 -> STR_150(CODE[2]), STR_149(CODE[2]), STR_147(CODE[2]), STR_135(CODE[14]), 
		 -> STR_134(CODE[2]), STR_133(CODE[2]), STR_131(CODE[11]), STR_130(CODE[13]), 
		 -> STR_129(CODE[2]), STR_128(CODE[2]), STR_127(CODE[9]), STR_126(CODE[11]), 
		 -> STR_125(CODE[14]), STR_124(CODE[2]), STR_123(CODE[2]), STR_121(CODE[12]), 
		 -> STR_120(CODE[2]), STR_119(CODE[2]), STR_117(CODE[14]), STR_116(CODE[2]), 
		 -> STR_115(CODE[2]), STR_113(CODE[10]), STR_112(CODE[2]), STR_111(CODE[2]), 
		 -> STR_109(CODE[9]), STR_108(CODE[2]), STR_107(CODE[2]), STR_105(CODE[13]), 
		 -> STR_104(CODE[12]), STR_103(CODE[2]), STR_102(CODE[2]), STR_100(CODE[13]), 
		 -> STR_99(CODE[14]), STR_98(CODE[2]), STR_97(CODE[2]), STR_95(CODE[13]), 
		 -> STR_94(CODE[2]), STR_93(CODE[2]), STR_91(CODE[13]), STR_90(CODE[12]), 
		 -> STR_89(CODE[2]), STR_88(CODE[2]), STR_86(CODE[14]), STR_85(CODE[2]), 
		 -> STR_84(CODE[2]), STR_82(CODE[13]), STR_81(CODE[2]), STR_80(CODE[2]), 
		 -> STR_78(CODE[14]), STR_77(CODE[2]), STR_76(CODE[2]), STR_75(CODE[15]), 
		 -> STR_74(CODE[16]), STR_73(CODE[14]), STR_72(CODE[11]), STR_71(CODE[14]), 
		 -> STR_70(CODE[15]), STR_69(CODE[16]), STR_68(CODE[10]), STR_67(CODE[16]), 
		 -> OLED_updateHandler@rev_id_str(BANK3[17]), STR_65(CODE[13]), OLED_updateHandler@dev_id_str(BANK3[17]), STR_63(CODE[11]), 
		 -> STR_62(CODE[16]), STR_61(CODE[16]), STR_60(CODE[14]), STR_40(CODE[10]), 
		 -> STR_39(CODE[11]), STR_38(CODE[11]), STR_37(CODE[15]), STR_36(CODE[11]), 
		 -> STR_35(CODE[10]), STR_34(CODE[11]), STR_33(CODE[10]), STR_32(CODE[10]), 
		 -> STR_31(CODE[10]), STR_20(CODE[10]), STR_19(CODE[6]), STR_18(CODE[14]), 
		 -> STR_17(CODE[9]), STR_16(CODE[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 68
		 -> OLED_RAM_Buffer(BANK3[68]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 68
		 -> OLED_RAM_Buffer(BANK3[68]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_224(CODE[5]), STR_220(CODE[22]), STR_219(CODE[14]), STR_217(CODE[18]), 
		 -> STR_215(CODE[17]), STR_213(CODE[17]), STR_197(CODE[15]), STR_195(CODE[6]), 
		 -> STR_192(CODE[6]), STR_189(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_333(CODE[2]), STR_332(CODE[3]), STR_331(CODE[3]), STR_330(CODE[3]), 
		 -> STR_329(CODE[3]), STR_328(CODE[3]), STR_327(CODE[3]), STR_326(CODE[3]), 
		 -> STR_325(CODE[3]), STR_324(CODE[3]), STR_323(CODE[2]), STR_322(CODE[3]), 
		 -> STR_321(CODE[3]), STR_320(CODE[3]), STR_319(CODE[3]), STR_318(CODE[3]), 
		 -> STR_317(CODE[3]), STR_316(CODE[3]), STR_315(CODE[3]), STR_314(CODE[3]), 
		 -> STR_313(CODE[2]), STR_312(CODE[2]), STR_311(CODE[2]), STR_310(CODE[2]), 
		 -> STR_309(CODE[2]), STR_308(CODE[2]), STR_307(CODE[2]), STR_306(CODE[2]), 
		 -> getStringSecondsAsTime@buff(BANK3[20]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 40
		 -> terminalTextAttributes@print_string(BANK5[16]), getStringSecondsAsTime@return_string(BANK3[40]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> terminalTextAttributes@print_string(BANK5[16]), getStringSecondsAsTime@return_string(BANK3[40]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_360(CODE[11]), STR_299(CODE[5]), STR_298(CODE[9]), STR_297(CODE[9]), 
		 -> STR_296(CODE[9]), STR_295(CODE[8]), STR_294(CODE[9]), STR_293(CODE[9]), 
		 -> STR_180(CODE[7]), STR_178(CODE[5]), STR_171(CODE[4]), STR_166(CODE[4]), 
		 -> STR_161(CODE[11]), STR_156(CODE[11]), STR_155(CODE[11]), STR_154(CODE[11]), 
		 -> STR_153(CODE[11]), STR_152(CODE[9]), STR_148(CODE[11]), STR_146(CODE[11]), 
		 -> STR_145(CODE[11]), STR_144(CODE[11]), STR_143(CODE[11]), STR_142(CODE[9]), 
		 -> STR_141(CODE[11]), STR_140(CODE[9]), STR_139(CODE[8]), STR_138(CODE[9]), 
		 -> STR_137(CODE[8]), STR_136(CODE[9]), STR_132(CODE[5]), STR_122(CODE[8]), 
		 -> STR_118(CODE[8]), STR_114(CODE[8]), STR_110(CODE[8]), STR_106(CODE[9]), 
		 -> STR_101(CODE[8]), STR_96(CODE[8]), STR_92(CODE[8]), STR_87(CODE[8]), 
		 -> STR_83(CODE[8]), STR_79(CODE[8]), STR_66(CODE[7]), STR_64(CODE[5]), 
		 -> STR_57(CODE[11]), STR_56(CODE[10]), STR_55(CODE[13]), STR_54(CODE[12]), 
		 -> STR_53(CODE[11]), STR_52(CODE[10]), STR_51(CODE[10]), STR_50(CODE[9]), 
		 -> STR_49(CODE[11]), STR_48(CODE[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK2[2]), ?_printf(BANK3[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), 
		 -> OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), 
		 -> OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 559
		 -> STR_357(CODE[60]), STR_356(CODE[24]), STR_355(CODE[24]), STR_354(CODE[24]), 
		 -> STR_353(CODE[27]), STR_352(CODE[20]), STR_351(CODE[35]), STR_350(CODE[34]), 
		 -> STR_349(CODE[37]), STR_348(CODE[34]), STR_347(CODE[36]), STR_346(CODE[35]), 
		 -> STR_345(CODE[33]), STR_344(CODE[35]), STR_343(CODE[20]), STR_342(CODE[23]), 
		 -> STR_341(CODE[20]), STR_340(CODE[22]), STR_339(CODE[21]), STR_338(CODE[19]), 
		 -> STR_337(CODE[21]), STR_336(CODE[27]), STR_335(CODE[18]), STR_334(CODE[11]), 
		 -> terminalTextAttributes@print_string(BANK5[16]), STR_304(CODE[4]), STR_303(CODE[4]), STR_302(CODE[4]), 
		 -> STR_301(CODE[4]), STR_300(CODE[5]), STR_292(CODE[3]), STR_291(CODE[39]), 
		 -> STR_290(CODE[96]), STR_289(CODE[62]), STR_288(CODE[34]), STR_287(CODE[3]), 
		 -> STR_286(CODE[50]), STR_285(CODE[56]), STR_284(CODE[55]), STR_283(CODE[27]), 
		 -> STR_282(CODE[3]), STR_281(CODE[58]), STR_280(CODE[40]), STR_279(CODE[63]), 
		 -> STR_278(CODE[42]), STR_277(CODE[36]), STR_276(CODE[3]), STR_275(CODE[61]), 
		 -> STR_274(CODE[3]), STR_273(CODE[59]), STR_272(CODE[3]), STR_271(CODE[45]), 
		 -> STR_270(CODE[3]), STR_269(CODE[58]), STR_268(CODE[59]), STR_267(CODE[20]), 
		 -> STR_266(CODE[3]), STR_265(CODE[54]), STR_264(CODE[52]), STR_263(CODE[23]), 
		 -> STR_262(CODE[3]), STR_261(CODE[43]), STR_260(CODE[44]), STR_259(CODE[23]), 
		 -> STR_258(CODE[48]), STR_257(CODE[3]), STR_256(CODE[50]), STR_255(CODE[58]), 
		 -> STR_254(CODE[35]), STR_253(CODE[32]), STR_252(CODE[64]), STR_251(CODE[30]), 
		 -> STR_250(CODE[31]), STR_249(CODE[63]), STR_248(CODE[33]), STR_247(CODE[35]), 
		 -> STR_246(CODE[37]), STR_245(CODE[40]), STR_244(CODE[28]), STR_243(CODE[46]), 
		 -> STR_242(CODE[31]), STR_241(CODE[52]), STR_240(CODE[14]), STR_239(CODE[28]), 
		 -> STR_238(CODE[50]), STR_237(CODE[29]), STR_236(CODE[45]), STR_235(CODE[88]), 
		 -> STR_234(CODE[37]), STR_233(CODE[3]), STR_232(CODE[30]), STR_231(CODE[46]), 
		 -> STR_230(CODE[39]), STR_229(CODE[62]), STR_228(CODE[57]), STR_227(CODE[559]), 
		 -> STR_226(CODE[22]), STR_225(CODE[3]), STR_223(CODE[3]), STR_222(CODE[47]), 
		 -> STR_221(CODE[3]), STR_218(CODE[24]), STR_216(CODE[23]), STR_214(CODE[23]), 
		 -> STR_212(CODE[3]), STR_211(CODE[3]), STR_210(CODE[54]), STR_209(CODE[3]), 
		 -> STR_208(CODE[56]), STR_207(CODE[3]), STR_206(CODE[60]), STR_205(CODE[61]), 
		 -> STR_204(CODE[3]), STR_203(CODE[62]), STR_202(CODE[3]), STR_201(CODE[50]), 
		 -> STR_200(CODE[3]), STR_199(CODE[45]), STR_198(CODE[3]), STR_196(CODE[54]), 
		 -> STR_194(CODE[4]), STR_193(CODE[5]), STR_191(CODE[4]), STR_190(CODE[5]), 
		 -> STR_10(CODE[47]), STR_9(CODE[30]), STR_8(CODE[46]), STR_7(CODE[39]), 
		 -> STR_6(CODE[62]), STR_5(CODE[57]), STR_4(CODE[39]), STR_3(CODE[44]), 
		 -> STR_2(CODE[52]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK2[2]), ?_printf(BANK3[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> i2_putch(), putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), 
		 -> OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), NULL(NULL[0]), 

    memmove@d1	PTR void  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), 

    memmove@s1	PTR const void  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_WriteInteger@s(COMRAM[20]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK2[2]), printf@ap(BANK3[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK2[2]), ?_printf(BANK3[2]), ftoa@buf(BANK3[17]), STR_358(CODE[7]), 
		 -> _doprnt@c(BANK2[1]), freqMeasConvert@qi_period(BANK1[4]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), 
		 -> OLED_updateHandler@dev_id_str(BANK3[17]), OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), getStringSecondsAsTime@return_string(BANK3[40]), 
		 -> STR_47(CODE[10]), STR_46(CODE[13]), STR_45(CODE[13]), STR_44(CODE[12]), 
		 -> STR_43(CODE[12]), STR_42(CODE[13]), STR_41(CODE[12]), STR_30(CODE[16]), 
		 -> STR_29(CODE[22]), STR_28(CODE[21]), STR_27(CODE[27]), STR_26(CODE[41]), 
		 -> STR_25(CODE[32]), STR_24(CODE[19]), STR_23(CODE[16]), STR_22(CODE[15]), 
		 -> STR_21(CODE[16]), STR_15(CODE[10]), STR_14(CODE[6]), STR_13(CODE[14]), 
		 -> STR_12(CODE[9]), STR_11(CODE[5]), LM73Convert@Ambient_Conv(BANK2[2]), LM73Convert@POS5_Conv(BANK2[2]), 
		 -> LM73Convert@QI_Conv(BANK2[2]), NULL(NULL[0]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 559
		 -> STR_360(CODE[11]), STR_357(CODE[60]), STR_356(CODE[24]), STR_355(CODE[24]), 
		 -> STR_354(CODE[24]), STR_353(CODE[27]), STR_352(CODE[20]), STR_351(CODE[35]), 
		 -> STR_350(CODE[34]), STR_349(CODE[37]), STR_348(CODE[34]), STR_347(CODE[36]), 
		 -> STR_346(CODE[35]), STR_345(CODE[33]), STR_344(CODE[35]), STR_343(CODE[20]), 
		 -> STR_342(CODE[23]), STR_341(CODE[20]), STR_340(CODE[22]), STR_339(CODE[21]), 
		 -> STR_338(CODE[19]), STR_337(CODE[21]), STR_336(CODE[27]), STR_335(CODE[18]), 
		 -> STR_334(CODE[11]), terminalTextAttributes@print_string(BANK5[16]), STR_304(CODE[4]), STR_303(CODE[4]), 
		 -> STR_302(CODE[4]), STR_301(CODE[4]), STR_300(CODE[5]), STR_299(CODE[5]), 
		 -> STR_298(CODE[9]), STR_297(CODE[9]), STR_296(CODE[9]), STR_295(CODE[8]), 
		 -> STR_294(CODE[9]), STR_293(CODE[9]), STR_292(CODE[3]), STR_291(CODE[39]), 
		 -> STR_290(CODE[96]), STR_289(CODE[62]), STR_288(CODE[34]), STR_287(CODE[3]), 
		 -> STR_286(CODE[50]), STR_285(CODE[56]), STR_284(CODE[55]), STR_283(CODE[27]), 
		 -> STR_282(CODE[3]), STR_281(CODE[58]), STR_280(CODE[40]), STR_279(CODE[63]), 
		 -> STR_278(CODE[42]), STR_277(CODE[36]), STR_276(CODE[3]), STR_275(CODE[61]), 
		 -> STR_274(CODE[3]), STR_273(CODE[59]), STR_272(CODE[3]), STR_271(CODE[45]), 
		 -> STR_270(CODE[3]), STR_269(CODE[58]), STR_268(CODE[59]), STR_267(CODE[20]), 
		 -> STR_266(CODE[3]), STR_265(CODE[54]), STR_264(CODE[52]), STR_263(CODE[23]), 
		 -> STR_262(CODE[3]), STR_261(CODE[43]), STR_260(CODE[44]), STR_259(CODE[23]), 
		 -> STR_258(CODE[48]), STR_257(CODE[3]), STR_256(CODE[50]), STR_255(CODE[58]), 
		 -> STR_254(CODE[35]), STR_253(CODE[32]), STR_252(CODE[64]), STR_251(CODE[30]), 
		 -> STR_250(CODE[31]), STR_249(CODE[63]), STR_248(CODE[33]), STR_247(CODE[35]), 
		 -> STR_246(CODE[37]), STR_245(CODE[40]), STR_244(CODE[28]), STR_243(CODE[46]), 
		 -> STR_242(CODE[31]), STR_241(CODE[52]), STR_240(CODE[14]), STR_239(CODE[28]), 
		 -> STR_238(CODE[50]), STR_237(CODE[29]), STR_236(CODE[45]), STR_235(CODE[88]), 
		 -> STR_234(CODE[37]), STR_233(CODE[3]), STR_232(CODE[30]), STR_231(CODE[46]), 
		 -> STR_230(CODE[39]), STR_229(CODE[62]), STR_228(CODE[57]), STR_227(CODE[559]), 
		 -> STR_226(CODE[22]), STR_225(CODE[3]), STR_223(CODE[3]), STR_222(CODE[47]), 
		 -> STR_221(CODE[3]), STR_218(CODE[24]), STR_216(CODE[23]), STR_214(CODE[23]), 
		 -> STR_212(CODE[3]), STR_211(CODE[3]), STR_210(CODE[54]), STR_209(CODE[3]), 
		 -> STR_208(CODE[56]), STR_207(CODE[3]), STR_206(CODE[60]), STR_205(CODE[61]), 
		 -> STR_204(CODE[3]), STR_203(CODE[62]), STR_202(CODE[3]), STR_201(CODE[50]), 
		 -> STR_200(CODE[3]), STR_199(CODE[45]), STR_198(CODE[3]), STR_196(CODE[54]), 
		 -> STR_194(CODE[4]), STR_193(CODE[5]), STR_191(CODE[4]), STR_190(CODE[5]), 
		 -> STR_180(CODE[7]), STR_178(CODE[5]), STR_171(CODE[4]), STR_166(CODE[4]), 
		 -> STR_161(CODE[11]), STR_156(CODE[11]), STR_155(CODE[11]), STR_154(CODE[11]), 
		 -> STR_153(CODE[11]), STR_152(CODE[9]), STR_148(CODE[11]), STR_146(CODE[11]), 
		 -> STR_145(CODE[11]), STR_144(CODE[11]), STR_143(CODE[11]), STR_142(CODE[9]), 
		 -> STR_141(CODE[11]), STR_140(CODE[9]), STR_139(CODE[8]), STR_138(CODE[9]), 
		 -> STR_137(CODE[8]), STR_136(CODE[9]), STR_132(CODE[5]), STR_122(CODE[8]), 
		 -> STR_118(CODE[8]), STR_114(CODE[8]), STR_110(CODE[8]), STR_106(CODE[9]), 
		 -> STR_101(CODE[8]), STR_96(CODE[8]), STR_92(CODE[8]), STR_87(CODE[8]), 
		 -> STR_83(CODE[8]), STR_79(CODE[8]), STR_66(CODE[7]), STR_64(CODE[5]), 
		 -> STR_57(CODE[11]), STR_56(CODE[10]), STR_55(CODE[13]), STR_54(CODE[12]), 
		 -> STR_53(CODE[11]), STR_52(CODE[10]), STR_51(CODE[10]), STR_50(CODE[9]), 
		 -> STR_49(CODE[11]), STR_48(CODE[10]), STR_10(CODE[47]), STR_9(CODE[30]), 
		 -> STR_8(CODE[46]), STR_7(CODE[39]), STR_6(CODE[62]), STR_5(CODE[57]), 
		 -> STR_4(CODE[39]), STR_3(CODE[44]), STR_2(CODE[52]), STR_1(CODE[4]), 

    S4916__prbuf$func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    S4916__prbuf$ptr	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), 
		 -> OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), 
		 -> OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 6
		 -> sprintf@pb(BANK2[5]), printf@pb(BANK3[5]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), QIErrorTimerHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), QIErrorTimerHandler(), Absolute function(), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 16
		 -> terminalTextAttributes@print_string(BANK5[16]), 

    floatToEngineeringFormat@res	PTR unsigned char  size(2) Largest target is 20
		 -> floatToEngineeringFormat@result(BANK3[20]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), 

    sp__floatToEngineeringFormat	PTR unsigned char  size(2) Largest target is 20
		 -> floatToEngineeringFormat@result(BANK3[20]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 68
		 -> OLED_RAM_Buffer(BANK3[68]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK3[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_WriteInteger@s(COMRAM[20]), 

    OLED_WriteString@s	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), OLED_RAM_Buffer(BANK3[68]), STR_59(CODE[1]), STR_58(CODE[1]), 
		 -> OLED_WriteInteger@s(COMRAM[20]), 

    sp__memmove	PTR void  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), 

    OLED_PutChar@input_base	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    sp__getStringSecondsAsTime	PTR unsigned char  size(2) Largest target is 40
		 -> getStringSecondsAsTime@return_string(BANK3[40]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 40
		 -> terminalTextAttributes@print_string(BANK5[16]), getStringSecondsAsTime@return_string(BANK3[40]), 

    sp__getDeviceIDString	PTR inline unsigned char  size(2) Largest target is 13
		 -> STR_47(CODE[10]), STR_46(CODE[13]), STR_45(CODE[13]), STR_44(CODE[12]), 
		 -> STR_43(CODE[12]), STR_42(CODE[13]), STR_41(CODE[12]), 

    sp__getCauseOfResetStringSmall	PTR inline unsigned char  size(2) Largest target is 15
		 -> STR_40(CODE[10]), STR_39(CODE[11]), STR_38(CODE[11]), STR_37(CODE[15]), 
		 -> STR_36(CODE[11]), STR_35(CODE[10]), STR_34(CODE[11]), STR_33(CODE[10]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), 

    getCauseOfResetStringSmall@strings	PTR unsigned char [9] size(2) Largest target is 15
		 -> STR_39(CODE[11]), STR_38(CODE[11]), STR_37(CODE[15]), STR_36(CODE[11]), 
		 -> STR_35(CODE[10]), STR_34(CODE[11]), STR_33(CODE[10]), STR_32(CODE[10]), 
		 -> STR_31(CODE[10]), 

    getCauseOfResetString@strings	PTR unsigned char [9] size(2) Largest target is 41
		 -> STR_29(CODE[22]), STR_28(CODE[21]), STR_27(CODE[27]), STR_26(CODE[41]), 
		 -> STR_25(CODE[32]), STR_24(CODE[19]), STR_23(CODE[16]), STR_22(CODE[15]), 
		 -> STR_21(CODE[16]), 

    sp__getNXQChargeStateStringCaps	PTR unsigned char  size(2) Largest target is 14
		 -> STR_20(CODE[10]), STR_19(CODE[6]), STR_18(CODE[14]), STR_17(CODE[9]), 
		 -> STR_16(CODE[5]), 

    sp__getNXQChargeStateString	PTR unsigned char  size(2) Largest target is 14
		 -> STR_15(CODE[10]), STR_14(CODE[6]), STR_13(CODE[14]), STR_12(CODE[9]), 
		 -> STR_11(CODE[5]), 

    sp__getCauseOfResetString	PTR inline unsigned char  size(2) Largest target is 41
		 -> STR_30(CODE[16]), STR_29(CODE[22]), STR_28(CODE[21]), STR_27(CODE[27]), 
		 -> STR_26(CODE[41]), STR_25(CODE[32]), STR_24(CODE[19]), STR_23(CODE[16]), 
		 -> STR_22(CODE[15]), STR_21(CODE[16]), 

    I2C2_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73TempSensorInitialize@output_data_array(BANK2[2]), 
		 -> NULL(NULL[0]), 

    I2C2_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    I2C2_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterWrite@trBlock(BANK1[5]), 

    I2C2_MasterReadTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 18
		 -> LM73_temp_results(BANK2[18]), 

    I2C2_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    I2C2_MasterReadTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), 

    i2c2_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    i2c2_object.pTrTail.pTrFlag	PTR enum E9433 size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    i2c2_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    I2C2_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    I2C2_MasterTRBInsert@pflag	PTR enum E9433 size(2) Largest target is 1
		 -> I2C_STATUS(BANK1[1]), 

    I2C2_MasterRead@pflag	PTR enum E9433 size(2) Largest target is 1
		 -> I2C_STATUS(BANK1[1]), 

    I2C2_MasterRead@pdata	PTR unsigned char  size(2) Largest target is 18
		 -> LM73_temp_results(BANK2[18]), 

    F10007.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    I2C2_MasterWrite@pflag	PTR enum E9433 size(2) Largest target is 1
		 -> I2C_STATUS(BANK1[1]), 

    I2C2_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73TempSensorInitialize@output_data_array(BANK2[2]), 
		 -> NULL(NULL[0]), 

    F10002.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    I2C2_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    p_i2c2_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    p_i2c2_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), NULL(NULL[0]), 

    i2c2_object.pTrHead.pTrFlag	PTR enum E9433 size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    i2c2_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    S2089$pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    p_i2c2_current.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    S2093$pTrFlag	PTR enum E9433 size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    p_i2c2_current.pTrFlag	PTR enum E9433 size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    S2093$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    p_i2c2_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    p_i2c2_current	PTR volatile struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK1[5]), NULL(NULL[0]), 

    S2104$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK1[5]), 

    i2c2_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK1[5]), 

    S2104$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK1[5]), 

    i2c2_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK1[5]), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIIdleChargedTimerHandler(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIIdleChargedTimerHandler(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_acquisitionTimerHandler(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_acquisitionTimerHandler(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerHandler(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerHandler(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_PostProcessingHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_PostProcessingHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    IOCBF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIChargeIOCHandler(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIChargeIOCHandler(), IOCBF3_DefaultInterruptHandler(), Absolute function(), 

    IOCBF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIIdleIOCHandler(), IOCBF2_DefaultInterruptHandler(), 

    IOCBF2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIIdleIOCHandler(), IOCBF2_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> rightCapTouchHandler(), INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> rightCapTouchHandler(), INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> leftCapTouchHandler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> leftCapTouchHandler(), INT1_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR1_ISR->i2_TMR1_WriteTimer
    _TMR0_ISR->_heartbeatTimerHandler
    _heartbeatTimerHandler->i2___fladd
    i2_TMR1_Reload->i2_TMR1_WriteTimer
    i2_TMR3_Reload->i2_TMR3_WriteTimer
    i2__doprnt->i2___fladd
    i2_scale->i2___flmul
    i2___awdiv->i2___awmod
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___flmul
    i2___lwdiv->i2___lwmod
    i2___llmod->i2___lldiv
    i2___fltol->i2_scale
    _ADC_PostProcessingHandler->i2___fladd
    i2___xxtofl->_ADCC_GetConversionResult
    i2___xxtofl->_ADCC_GetFilterValue
    i2___flsub->i2___fladd
    i2___fladd->i2_fround
    i2___flmul->i2___fldiv
    i2___fldiv->i2___xxtofl
    _fabs->i2___flneg

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _heartbeatTimerHandler->i2___fladd
    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2__doprnt
    i2__doprnt->i2___flsub
    _ADCC_ThresholdISR->_ADC_PostProcessingHandler
    _ADC_PostProcessingHandler->i2___flsub
    i2___flsub->i2___fladd

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _INTERRUPT_InterruptManagerLow->_CCP2_CaptureISR
    _TMR3_ISR->i1_TMR3_WriteTimer
    i1_TMR3_Reload->i1_TMR3_WriteTimer
    _ADC_acquisitionTimerHandler->_ADCC_StartConversion
    _I2C2_ISR->_I2C2_Stop
    _CCP2_CaptureISR->_CCP2_CallBack
    _CCP2_CallBack->_freqMeasConvert
    _freqMeasConvert->i1___flmul
    i1___flmul->i1___fldiv
    i1___fldiv->i1___fladd
    i1___fladd->i1___xxtofl

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminalTextAttributes
    _printErrorHandlerStatus->_terminalTextAttributes
    _printCurrentMeasurements->_terminalTextAttributes
    _getStringSecondsAsTime->_sprintf
    _getUserID->_FLASH_ReadWord
    _getDeviceIDString->_getDeviceID
    _clearUARTErrors->_updateErrorLEDs
    _clearI2CErrors->_updateErrorLEDs
    _clearADCErrors->_updateErrorLEDs
    _printf->_floatToEngineeringFormat
    _TMR3_Reload->_TMR3_WriteTimer
    _TMR1_Reload->_TMR1_WriteTimer
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR3_Initialize
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF3_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _OLED_updateHandler->_floatToEngineeringFormat
    _strcpy->_getCauseOfResetStringSmall
    _getYearsFromOnTime->___lldiv
    _getSecondsFromOnTime->___lldiv
    _getMinutesFromOnTime->___lldiv
    _getMinorRevisionID->_FLASH_ReadWord
    _getMajorRevisionID->_FLASH_ReadWord
    _getHoursFromOnTime->___lldiv
    _getDeviceID->_FLASH_ReadWord
    _FLASH_ReadWord->_FLASH_ReadByte
    _getDaysFromOnTime->___lldiv
    _floatToEngineeringFormat->_sprintf
    _sprintf->__doprnt
    __doprnt->___flge
    _scale->___flmul
    ___awdiv->___awmod
    _putch->_EUSART2_Write
    _fround->___flmul
    ___lwdiv->___lwmod
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___xxtofl
    ___fladd->_fround
    ___flge->___xxtofl
    _abs->___fltol
    ___fldiv->___flmul
    _OLED_UpdateFromRAMBuffer->_OLED_WriteString
    _OLED_YX->_OLED_Command
    _OLED_WriteString->_OLED_PutChar
    _OLED_Init->_OLED_Command
    _OLED_Command->_I2C2_MasterWrite
    _OLED_Clear->_OLED_PutChar
    _OLED_PutChar->_I2C2_MasterWrite
    _LM73TempSensorInitialize->_I2C2_MasterWrite
    _LM73AcquisitionHandler->_LM73Convert
    _LM73Convert->___xxtofl
    ___xxtofl->_abs
    ___flmul->___awdiv
    _I2C2_MasterWrite->_I2C2_MasterWriteTRBBuild
    _I2C2_MasterRead->_I2C2_MasterReadTRBBuild

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_terminal_ringBufferPull
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_printf
    _printErrorHandlerStatus->_printf
    _printCurrentMeasurements->_printf
    _terminalTextAttributesReset->_printf
    _terminalTextAttributes->_printf
    _terminalSetCursorHome->_printf
    _terminalClearScreen->_printf
    _printf->_getStringSecondsAsTime

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    _main->_terminal_ringBufferPull
    _ringBufferLUT->_terminalTextAttributes
    _printErrorHandlerStatus->_terminalTextAttributes
    _printCurrentMeasurements->_terminalTextAttributes

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 1880437
                                             44 BANK3      2     2      0
       _ADCC_SetADTIInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
         _IOCBF2_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
             _LM73AcquisitionHandler
           _LM73TempSensorInitialize
                         _OLED_Clear
                          _OLED_Init
                 _OLED_updateHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                        _TMR1_Reload
           _TMR1_SetInterruptHandler
                     _TMR1_StopTimer
           _TMR2_SetInterruptHandler
                        _TMR3_Reload
           _TMR3_SetInterruptHandler
                     _TMR3_StopTimer
                     _TMR5_StopTimer
                    _TMR5_WriteTimer
              _freqMeasStartCaptures
                    _getCauseOfReset
              _getCauseOfResetString
                             _printf
                _terminalClearScreen
              _terminalSetCursorHome
             _terminalTextAttributes
        _terminalTextAttributesReset
            _terminal_ringBufferPull
                    _updateErrorLEDs
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              7     7      0 1134453
                                             43 BANK3      1     1      0
                                             18 BANK5      6     6      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                        6     4      2 1133275
                                            187 BANK2      4     2      2
                                             41 BANK3      2     2      0
                     _clearADCErrors
                     _clearI2CErrors
                    _clearUARTErrors
              _getCauseOfResetString
                        _getDeviceID
                  _getDeviceIDString
                 _getMajorRevisionID
                 _getMinorRevisionID
             _getStringSecondsAsTime
                          _getUserID
           _printCurrentMeasurements
            _printErrorHandlerStatus
                             _printf
                             _strcmp
                             _strlen
             _terminalTextAttributes
        _terminalTextAttributesReset
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               7     3      4    1933
                                              0 BANK2      7     3      4
 ---------------------------------------------------------------------------------
 (3) _printErrorHandlerStatus                              0     0      0  273826
                        _getADCError
                        _getI2CError
                       _getUARTError
                             _printf
             _terminalTextAttributes
        _terminalTextAttributesReset
 ---------------------------------------------------------------------------------
 (3) _printCurrentMeasurements                             0     0      0  480158
                             ___flge
           _floatToEngineeringFormat
            _getNXQChargeStateString
             _getStringSecondsAsTime
                             _printf
             _terminalTextAttributes
        _terminalTextAttributesReset
 ---------------------------------------------------------------------------------
 (3) _terminalTextAttributesReset                          0     0      0   84477
                             _printf
 ---------------------------------------------------------------------------------
 (3) _terminalTextAttributes                              20    18      2  104872
                                            185 BANK2      2     0      2
                                              0 BANK5     18    18      0
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (4) _strncpy                                              8     2      6     472
                                              0 BANK2      8     2      6
 ---------------------------------------------------------------------------------
 (4) _getStringSecondsAsTime                              35    31      4   98510
                                            163 BANK2      8     4      4
                                              0 BANK3     26    26      0
                            ___lldiv
                             ___wmul
                            _sprintf
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strcat                                               6     2      4    6083
                                              0 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 (4) _getNXQChargeStateString                              2     0      2       0
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (3) _getUserID                                            8     6      2     884
                                             11 BANK2      8     6      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getDeviceIDString                                    4     2      2     121
                                             13 BANK2      4     2      2
                        _getDeviceID (ARG)
 ---------------------------------------------------------------------------------
 (3) _getCauseOfResetString                                3     1      2      62
                                              0 BANK2      3     1      2
 ---------------------------------------------------------------------------------
 (3) _clearUARTErrors                                      0     0      0       0
                    _updateErrorLEDs
 ---------------------------------------------------------------------------------
 (3) _clearI2CErrors                                       0     0      0       0
                    _updateErrorLEDs
 ---------------------------------------------------------------------------------
 (3) _clearADCErrors                                       0     0      0       0
                    _updateErrorLEDs
 ---------------------------------------------------------------------------------
 (1) _updateErrorLEDs                                      1     1      0       0
                                              0 BANK2      1     1      0
                        _getADCError
                        _getI2CError
                       _getUARTError
 ---------------------------------------------------------------------------------
 (2) _getUARTError                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getI2CError                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getADCError                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      37
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminalSetCursorHome                                0     0      0   84477
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminalClearScreen                                  0     0      0   84477
                             _printf
 ---------------------------------------------------------------------------------
 (4) _printf                                              15     7      8   84477
                                             26 BANK3     15     7      8
                            __doprnt
           _floatToEngineeringFormat (ARG)
              _getCauseOfResetString (ARG)
                        _getDeviceID (ARG)
                  _getDeviceIDString (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
            _getNXQChargeStateString (ARG)
             _getStringSecondsAsTime (ARG)
                          _getUserID (ARG)
 ---------------------------------------------------------------------------------
 (1) _getCauseOfReset                                      1     1      0      58
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _freqMeasStartCaptures                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR5_WriteTimer                                      2     0      2     304
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR5_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR3_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR3_Reload                                          0     0      0     269
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR3_WriteTimer                                      2     0      2     269
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_Reload                                          0     0      0     269
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_WriteTimer                                      2     0      2     269
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2141
                    _ADCC_Initialize
                    _CCP2_Initialize
                 _EUSART2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
                    _I2C2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0       0
                                              0 BANK2      2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0     211
                                              3 BANK2      2     2      0
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     211
                                              3 BANK2      2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     422
         _IOCBF2_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF3_SetInterruptHandler                           3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (3) _IOCBF2_SetInterruptHandler                           3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     422
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (1) _OLED_updateHandler                                  38    38      0  259785
                                            185 BANK2      2     2      0
                                              0 BANK3     36    36      0
           _OLED_UpdateFromRAMBuffer
           _floatToEngineeringFormat
         _getCauseOfResetStringSmall
                  _getDaysFromOnTime
                        _getDeviceID
                 _getHoursFromOnTime
                 _getMajorRevisionID
                 _getMinorRevisionID
               _getMinutesFromOnTime
        _getNXQChargeStateStringCaps
               _getSecondsFromOnTime
                 _getYearsFromOnTime
                            _sprintf
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4   18109
                                              3 BANK2      6     2      4
         _getCauseOfResetStringSmall (ARG)
        _getNXQChargeStateStringCaps (ARG)
 ---------------------------------------------------------------------------------
 (2) _getYearsFromOnTime                                   5     1      4    4325
                                             13 BANK2      5     1      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _getSecondsFromOnTime                                13     9      4    8199
                                             13 BANK2     13     9      4
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _getNXQChargeStateStringCaps                          2     0      2       0
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (2) _getMinutesFromOnTime                                12     8      4    8041
                                             13 BANK2     12     8      4
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _getMinorRevisionID                                   2     2      0     819
                                             11 BANK2      2     2      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMajorRevisionID                                   5     5      0     819
                                             11 BANK2      5     5      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (2) _getHoursFromOnTime                                  11     7      4    7883
                                             13 BANK2     11     7      4
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _getDeviceID                                          2     0      2     785
                                             11 BANK2      2     0      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (4) _FLASH_ReadWord                                       7     3      4     785
                                              4 BANK2      7     3      4
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (5) _FLASH_ReadByte                                       4     0      4     363
                                              0 BANK2      4     0      4
 ---------------------------------------------------------------------------------
 (2) _getDaysFromOnTime                                   10     6      4    7635
                                             13 BANK2     10     6      4
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _getCauseOfResetStringSmall                           3     1      2      62
                                              0 BANK2      3     1      2
 ---------------------------------------------------------------------------------
 (4) _floatToEngineeringFormat                            22    18      4  105066
                                            163 BANK2     22    18      4
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _abs
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             19     7     12   82216
                                            144 BANK2     19     7     12
                            ___fldiv (ARG)
                            __doprnt
                  _getDaysFromOnTime (ARG)
                        _getDeviceID (ARG)
                 _getHoursFromOnTime (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
               _getMinutesFromOnTime (ARG)
               _getSecondsFromOnTime (ARG)
                 _getYearsFromOnTime (ARG)
 ---------------------------------------------------------------------------------
 (5) __doprnt                                             57    51      6   71602
                                             88 BANK2     56    50      6
                   Absolute function *
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch *
                              _scale
 ---------------------------------------------------------------------------------
 (6) _scale                                                9     5      4   13098
                                             39 BANK2      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4    1513
                                              0 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4    1705
                                              6 BANK2      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      93
                                              1 BANK2      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART2_Write                                        1     1      0      62
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              3     3      0      99
                                              0 BANK2      3     3      0
 ---------------------------------------------------------------------------------
 (6) _fround                                              13     9      4   11574
                                             39 BANK2     13     9      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     912
                                              0 BANK2      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4    1061
                                              5 BANK2      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (6) __tdiv_to_l_                                         17     9      8     634
                                              0 BANK2     17     9      8
 ---------------------------------------------------------------------------------
 (6) __div_to_l_                                          14     6      8     634
                                              0 BANK2     14     6      8
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    3152
                                              0 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8    1062
                                             13 BANK2      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8    4201
                                              0 BANK2     13     5      8
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1295
                                             48 BANK2     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    5515
                                             76 BANK2      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    4322
                                             52 BANK2     16     8      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     284
                                              0 BANK2      4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    2756
                                             76 BANK2     12     4      8
                            ___fltol (ARG)
                           ___xxtofl (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     950
                                              0 BANK2     12     4      8
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     633
                                             58 BANK2      4     2      2
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4113
                                             39 BANK2     25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _OLED_UpdateFromRAMBuffer                             4     4      0   14918
                                             35 BANK2      4     4      0
                   _OLED_WriteString
                            _OLED_YX
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     940
                                              0 BANK2      4     2      2
 ---------------------------------------------------------------------------------
 (3) _OLED_YX                                              5     4      1    6177
                                             20 BANK2      5     4      1
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (3) _OLED_WriteString                                     2     0      2    7405
                                             33 BANK2      2     0      2
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (1) _OLED_Init                                            0     0      0    5724
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (4) _OLED_Command                                         4     4      0    5724
                                             16 BANK2      4     4      0
                   _I2C2_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _OLED_Clear                                           4     4      0    6756
                                             33 BANK2      4     4      0
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (4) _OLED_PutChar                                        17    17      0    6620
                                             16 BANK2     17    17      0
                   _I2C2_MasterWrite
                            _memmove
 ---------------------------------------------------------------------------------
 (5) _memmove                                             12     6      6     791
                                              0 BANK2     12     6      6
 ---------------------------------------------------------------------------------
 (1) _LM73TempSensorInitialize                             3     3      0    6046
                                             16 BANK2      3     3      0
                   _I2C2_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _LM73AcquisitionHandler                               0     0      0   19891
                    _I2C2_MasterRead
                   _I2C2_MasterWrite
                        _LM73Convert
 ---------------------------------------------------------------------------------
 (2) _LM73Convert                                          9     9      0   11966
                                             76 BANK2      9     9      0
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    2160
                                             62 BANK2     14    10      4
                            ___flmul (ARG)
                            ___fltol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    9251
                                             14 BANK2     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (5) _I2C2_MasterWrite                                     7     0      7    5567
                                              9 BANK2      7     0      7
               _I2C2_MasterTRBInsert
           _I2C2_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (6) _I2C2_MasterWriteTRBBuild                             9     2      7     546
                                              0 BANK2      9     2      7
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterRead                                      7     0      7    2358
                                              9 BANK2      7     0      7
            _I2C2_MasterReadTRBBuild
               _I2C2_MasterTRBInsert
 ---------------------------------------------------------------------------------
 (6) _I2C2_MasterTRBInsert                                 6     2      4     546
                                              0 BANK2      6     2      4
   _I2C2_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (7) _I2C2_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C2_MasterReadTRBBuild                              9     2      7     577
                                              0 BANK2      9     2      7
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerLow                        9     9      0    5634
                                             88 BANK1      9     9      0
                   Absolute function *
                    _CCP2_CaptureISR
               _EUSART2_Transmit_ISR *
               _I2C2_BusCollisionISR
                           _I2C2_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR3_ISR                                            0     0      0     280
                   Absolute function *
          _QIIdleChargedTimerHandler *
       _TMR3_DefaultInterruptHandler *
                  i1_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (11) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _QIIdleChargedTimerHandler                           0     0      0     140
                      i1_TMR3_Reload
                   i1_TMR3_StopTimer
 ---------------------------------------------------------------------------------
 (12) i1_TMR3_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i1_TMR3_Reload                                       0     0      0     140
                  i1_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (11) i1_TMR3_WriteTimer                                   2     0      2     140
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR2_ISR                                            0     0      0      22
                   Absolute function *
        _ADC_acquisitionTimerHandler *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_acquisitionTimerHandler                         0     0      0      22
              _ADCC_ClearAccumulator
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
                     _TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (12) _TMR2_StopTimer                                      0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (13) _TMR2_Stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADCC_StartConversion                                1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADCC_ClearAccumulator                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C2_ISR                                            2     2      0      31
                                              3 BANK1      2     2      0
              _I2C2_FunctionComplete
                          _I2C2_Stop
 ---------------------------------------------------------------------------------
 (11) _I2C2_Stop                                           3     3      0      31
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (11) _I2C2_FunctionComplete                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C2_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _CCP2_CaptureISR                                     2     2      0    5301
                                             86 BANK1      2     2      0
                      _CCP2_CallBack
 ---------------------------------------------------------------------------------
 (11) _CCP2_CallBack                                       2     0      2    5254
                                             84 BANK1      2     0      2
                    _freqMeasConvert
 ---------------------------------------------------------------------------------
 (12) _freqMeasConvert                                     4     4      0    5156
                                             80 BANK1      4     4      0
                          i1___fladd
                          i1___fldiv
                          i1___flmul
                         i1___xxtofl
 ---------------------------------------------------------------------------------
 (13) i1___xxtofl                                         14    10      4     348
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (13) i1___flmul                                          25    17      8    1518
                                             55 BANK1     25    17      8
                          i1___fladd (ARG)
                          i1___fldiv (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) i1___fldiv                                          25    17      8    1225
                                             30 BANK1     25    17      8
                          i1___fladd (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) i1___fladd                                          16     8      8    2036
                                             14 BANK1     16     8      8
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManagerHigh                     12    12      0   60547
                                             77 BANK0     12    12      0
                   Absolute function *
                  _ADCC_ThresholdISR
                _EUSART2_Receive_ISR *
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0     280
                   Absolute function *
                _QIErrorTimerHandler *
       _TMR1_DefaultInterruptHandler *
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _QIErrorTimerHandler                                 0     0      0     140
                      i2_TMR1_Reload
                   i2_TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (17) i2_TMR1_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0    4154
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
              _heartbeatTimerHandler *
 ---------------------------------------------------------------------------------
 (16) _heartbeatTimerHandler                               1     1      0    4154
                                             93 COMRAM     1     1      0
                          i2___fladd
                          i2___llmod
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _PIN_MANAGER_IOC                                     0     0      0     368
                         _IOCBF2_ISR
                         _IOCBF3_ISR
 ---------------------------------------------------------------------------------
 (16) _IOCBF3_ISR                                          0     0      0     254
                   Absolute function *
     _IOCBF3_DefaultInterruptHandler *
                 _QIChargeIOCHandler *
 ---------------------------------------------------------------------------------
 (17) _QIChargeIOCHandler                                  0     0      0     254
                    _TMR3_StartTimer
                      i2_TMR1_Reload
                      i2_TMR3_Reload
 ---------------------------------------------------------------------------------
 (17) i2_TMR1_Reload                                       0     0      0     140
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (16) i2_TMR1_WriteTimer                                   2     0      2     140
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _IOCBF3_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _IOCBF2_ISR                                          0     0      0     114
                   Absolute function *
     _IOCBF2_DefaultInterruptHandler *
                   _QIIdleIOCHandler *
 ---------------------------------------------------------------------------------
 (17) _QIIdleIOCHandler                                    0     0      0     114
                    _TMR1_StartTimer
                    _TMR3_StartTimer
                      i2_TMR3_Reload
 ---------------------------------------------------------------------------------
 (18) i2_TMR3_Reload                                       0     0      0     114
                  i2_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (19) i2_TMR3_WriteTimer                                   2     0      2     114
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _TMR3_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _TMR1_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _IOCBF2_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
               _rightCapTouchHandler *
 ---------------------------------------------------------------------------------
 (17) _rightCapTouchHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                _leftCapTouchHandler *
 ---------------------------------------------------------------------------------
 (17) _leftCapTouchHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_Receive_ISR                                 0     0      0   39568
                           i2_printf
 ---------------------------------------------------------------------------------
 (16) i2_printf                                            9     7      2   39568
                                             68 BANK0      9     7      2
                          i2__doprnt
 ---------------------------------------------------------------------------------
 (17) i2__doprnt                                          57    51      6   39040
                                             12 BANK0     56    50      6
                   Absolute function *
                          i2___awdiv
                          i2___fladd
                           i2___fleq
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                          i2___lldiv
                          i2___llmod
                           i2___wmul
                         i2___xxtofl
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch *
                            i2_scale
 ---------------------------------------------------------------------------------
 (18) i2_scale                                             9     5      4    6850
                                             68 COMRAM     9     5      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (19) i2___awmod                                           6     2      4     853
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (19) i2___awdiv                                           8     4      4     935
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (18) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (19) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (18) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) i2_fround                                           13     9      4    5676
                                             68 COMRAM    13     9      4
                          i2___flmul
                          i2___lwdiv
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (19) i2___lwmod                                           5     1      4     442
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (19) i2___lwdiv                                           7     3      4     451
                                              5 COMRAM     7     3      4
                          i2___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (18) i2__tdiv_to_l_                                      17     9      8     524
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (18) i2__div_to_l_                                       14     6      8     524
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (18) i2___wmul                                            6     2      4     442
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) i2___llmod                                           9     1      8     582
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (18) i2___fltol                                          10     6      4     442
                                             77 COMRAM    10     6      4
                          i2___flmul (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___fleq                                           12     4      8     270
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (15) _ADCC_ThresholdISR                                   0     0      0   16177
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
          _ADC_PostProcessingHandler *
 ---------------------------------------------------------------------------------
 (16) _ADC_PostProcessingHandler                          23    23      0   16177
                                             12 BANK0     23    23      0
           _ADCC_GetConversionResult
  _ADCC_GetCurrentCountofConversions
                _ADCC_GetFilterValue
      _ADCC_HasAccumulatorOverflowed
                _ADCC_StopConversion
                    _TMR2_StartTimer
                               _fabs
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flsub
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (18) i2___xxtofl                                         14    10      4     756
                                              4 COMRAM    14    10      4
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___flsub                                           8     0      8    4127
                                              4 BANK0      8     0      8
                _ADCC_GetFilterValue (ARG)
                          i2___fladd
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___fladd                                          16     8      8    3572
                                             81 COMRAM    12     4      8
                                              0 BANK0      4     4      0
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                               _fabs (ARG)
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (19) i2___flmul                                          25    17      8    4433
                                             43 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___fldiv (ARG)
                          i2___lwdiv (ARG)
                          i2___lwmod (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___flge                                           12     4      8     686
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (17) i2___fldiv                                          25    17      8    1589
                                             18 COMRAM    25    17      8
                _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) _fabs                                                4     0      4     408
                                              4 COMRAM     4     0      4
                          i2___flneg
 ---------------------------------------------------------------------------------
 (18) i2___flneg                                           4     0      4     135
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (17) _TMR2_StartTimer                                     0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (18) _TMR2_Start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ADCC_StopConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ADCC_HasAccumulatorOverflowed                       0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetFilterValue                                 4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetCurrentCountofConversions                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADTIInterruptHandler
   _INT1_SetInterruptHandler
   _INT2_SetInterruptHandler
   _IOCBF2_SetInterruptHandler
   _IOCBF3_SetInterruptHandler
   _LM73AcquisitionHandler
     _I2C2_MasterRead
       _I2C2_MasterReadTRBBuild
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
     _I2C2_MasterWrite
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
       _I2C2_MasterWriteTRBBuild
     _LM73Convert
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___xxtofl
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
   _LM73TempSensorInitialize
     _I2C2_MasterWrite
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
       _I2C2_MasterWriteTRBBuild
   _OLED_Clear
     _OLED_PutChar
       _I2C2_MasterWrite
         _I2C2_MasterTRBInsert
           _I2C2_WaitForLastPacketToComplete
         _I2C2_MasterWriteTRBBuild
       _memmove
   _OLED_Init
     _OLED_Command
       _I2C2_MasterWrite
         _I2C2_MasterTRBInsert
           _I2C2_WaitForLastPacketToComplete
         _I2C2_MasterWriteTRBBuild
   _OLED_updateHandler
     _OLED_UpdateFromRAMBuffer
       _OLED_WriteString
         _OLED_PutChar
           _I2C2_MasterWrite
             _I2C2_MasterTRBInsert
               _I2C2_WaitForLastPacketToComplete
             _I2C2_MasterWriteTRBBuild
           _memmove
       _OLED_YX
         _OLED_Command
           _I2C2_MasterWrite
             _I2C2_MasterTRBInsert
               _I2C2_WaitForLastPacketToComplete
             _I2C2_MasterWriteTRBBuild
       _strlen
     _floatToEngineeringFormat
       ___fldiv
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
       ___fleq
       ___flge
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___xxtofl
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
       _abs
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
       _sprintf
         ___fldiv (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _getDaysFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getHoursFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinutesFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getSecondsFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getYearsFromOnTime (ARG)
           ___lldiv
     _getCauseOfResetStringSmall
     _getDaysFromOnTime
       ___lldiv
       ___wmul
     _getDeviceID
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getHoursFromOnTime
       ___lldiv
       ___wmul
     _getMajorRevisionID
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getMinorRevisionID
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getMinutesFromOnTime
       ___lldiv
       ___wmul
     _getNXQChargeStateStringCaps
     _getSecondsFromOnTime
       ___lldiv
       ___wmul
     _getYearsFromOnTime
       ___lldiv
     _sprintf
       ___fldiv (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
       __doprnt (ARG)
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       _getDaysFromOnTime (ARG)
         ___lldiv
         ___wmul
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getHoursFromOnTime (ARG)
         ___lldiv
         ___wmul
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinutesFromOnTime (ARG)
         ___lldiv
         ___wmul
       _getSecondsFromOnTime (ARG)
         ___lldiv
         ___wmul
       _getYearsFromOnTime (ARG)
         ___lldiv
     _strcpy
       _getCauseOfResetStringSmall (ARG)
       _getNXQChargeStateStringCaps (ARG)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _CCP2_Initialize
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _FVR_Initialize
     _I2C2_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF2_SetInterruptHandler
       _IOCBF3_SetInterruptHandler
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
   _TMR0_SetInterruptHandler
   _TMR1_Reload
     _TMR1_WriteTimer
   _TMR1_SetInterruptHandler
   _TMR1_StopTimer
   _TMR2_SetInterruptHandler
   _TMR3_Reload
     _TMR3_WriteTimer
   _TMR3_SetInterruptHandler
   _TMR3_StopTimer
   _TMR5_StopTimer
   _TMR5_WriteTimer
   _freqMeasStartCaptures
   _getCauseOfReset
   _getCauseOfResetString
   _printf
     __doprnt
       Absolute function(Fake) *
       ___awdiv *
         ___awmod (ARG)
       ___fladd *
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq *
       ___flge *
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
       ___flmul *
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___flneg *
       ___flsub *
         ___fladd
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
       ___fltol *
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___lldiv *
       ___llmod *
         ___lldiv (ARG)
       ___wmul *
       ___xxtofl *
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
       __div_to_l_ *
       __tdiv_to_l_ *
       _fround *
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit *
       _putch *
         _EUSART2_Write
       _scale *
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     _floatToEngineeringFormat (ARG)
       ___fldiv
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
       ___fleq
       ___flge
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___xxtofl
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
       _abs
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
       _sprintf
         ___fldiv (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _getDaysFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getHoursFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinutesFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getSecondsFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getYearsFromOnTime (ARG)
           ___lldiv
     _getCauseOfResetString (ARG)
     _getDeviceID (ARG)
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getDeviceIDString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
     _getMajorRevisionID (ARG)
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getMinorRevisionID (ARG)
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getNXQChargeStateString (ARG)
     _getStringSecondsAsTime (ARG)
       ___lldiv
       ___wmul
       _sprintf
         ___fldiv (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _getDaysFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getHoursFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinutesFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getSecondsFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getYearsFromOnTime (ARG)
           ___lldiv
       _strcat
       _strlen
     _getUserID (ARG)
       _FLASH_ReadWord
         _FLASH_ReadByte
   _terminalClearScreen
     _printf
       __doprnt
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       _floatToEngineeringFormat (ARG)
         ___fldiv
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
         ___fleq
         ___flge
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___xxtofl
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _abs
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
         _sprintf
           ___fldiv (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getNXQChargeStateString (ARG)
       _getStringSecondsAsTime (ARG)
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
   _terminalSetCursorHome
     _printf
       __doprnt
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       _floatToEngineeringFormat (ARG)
         ___fldiv
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
         ___fleq
         ___flge
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___xxtofl
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _abs
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
         _sprintf
           ___fldiv (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getNXQChargeStateString (ARG)
       _getStringSecondsAsTime (ARG)
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
   _terminalTextAttributes
     _printf
       __doprnt
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       _floatToEngineeringFormat (ARG)
         ___fldiv
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
         ___fleq
         ___flge
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___xxtofl
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _abs
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
         _sprintf
           ___fldiv (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getNXQChargeStateString (ARG)
       _getStringSecondsAsTime (ARG)
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
     _strcat
     _strncpy
   _terminalTextAttributesReset
     _printf
       __doprnt
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       _floatToEngineeringFormat (ARG)
         ___fldiv
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
         ___fleq
         ___flge
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___xxtofl
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _abs
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
         _sprintf
           ___fldiv (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getNXQChargeStateString (ARG)
       _getStringSecondsAsTime (ARG)
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _clearADCErrors
         _updateErrorLEDs
           _getADCError
           _getI2CError
           _getUARTError
       _clearI2CErrors
         _updateErrorLEDs
           _getADCError
           _getI2CError
           _getUARTError
       _clearUARTErrors
         _updateErrorLEDs
           _getADCError
           _getI2CError
           _getUARTError
       _getCauseOfResetString
       _getDeviceID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getStringSecondsAsTime
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _printCurrentMeasurements
         ___flge
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _floatToEngineeringFormat
           ___fldiv
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
           ___fleq
           ___flge
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
           _sprintf
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
         _getNXQChargeStateString
         _getStringSecondsAsTime
           ___lldiv
           ___wmul
           _sprintf
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
           _strcat
           _strlen
         _printf
           __doprnt
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _floatToEngineeringFormat (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
             ___fleq
             ___flge
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
             _sprintf
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getNXQChargeStateString (ARG)
           _getStringSecondsAsTime (ARG)
             ___lldiv
             ___wmul
             _sprintf
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
             _strcat
             _strlen
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _terminalTextAttributes
           _printf
             __doprnt
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _floatToEngineeringFormat (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
               ___fleq
               ___flge
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
               _sprintf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getNXQChargeStateString (ARG)
             _getStringSecondsAsTime (ARG)
               ___lldiv
               ___wmul
               _sprintf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
               _strcat
               _strlen
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _strcat
           _strncpy
         _terminalTextAttributesReset
           _printf
             __doprnt
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _floatToEngineeringFormat (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
               ___fleq
               ___flge
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
               _sprintf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getNXQChargeStateString (ARG)
             _getStringSecondsAsTime (ARG)
               ___lldiv
               ___wmul
               _sprintf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
               _strcat
               _strlen
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
       _printErrorHandlerStatus
         _getADCError
         _getI2CError
         _getUARTError
         _printf
           __doprnt
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _floatToEngineeringFormat (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
             ___fleq
             ___flge
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
             _sprintf
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getNXQChargeStateString (ARG)
           _getStringSecondsAsTime (ARG)
             ___lldiv
             ___wmul
             _sprintf
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
             _strcat
             _strlen
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _terminalTextAttributes
           _printf
             __doprnt
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _floatToEngineeringFormat (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
               ___fleq
               ___flge
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
               _sprintf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getNXQChargeStateString (ARG)
             _getStringSecondsAsTime (ARG)
               ___lldiv
               ___wmul
               _sprintf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
               _strcat
               _strlen
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _strcat
           _strncpy
         _terminalTextAttributesReset
           _printf
             __doprnt
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _floatToEngineeringFormat (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
               ___fleq
               ___flge
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
               _sprintf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getNXQChargeStateString (ARG)
             _getStringSecondsAsTime (ARG)
               ___lldiv
               ___wmul
               _sprintf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
               _strcat
               _strlen
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
       _printf
         __doprnt
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _floatToEngineeringFormat (ARG)
           ___fldiv
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
           ___fleq
           ___flge
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
           _sprintf
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getNXQChargeStateString (ARG)
         _getStringSecondsAsTime (ARG)
           ___lldiv
           ___wmul
           _sprintf
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
           _strcat
           _strlen
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _strcmp
       _strlen
       _terminalTextAttributes
         _printf
           __doprnt
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _floatToEngineeringFormat (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
             ___fleq
             ___flge
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
             _sprintf
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getNXQChargeStateString (ARG)
           _getStringSecondsAsTime (ARG)
             ___lldiv
             ___wmul
             _sprintf
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
             _strcat
             _strlen
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _strcat
         _strncpy
       _terminalTextAttributesReset
         _printf
           __doprnt
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _floatToEngineeringFormat (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
             ___fleq
             ___flge
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
             _sprintf
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getNXQChargeStateString (ARG)
           _getStringSecondsAsTime (ARG)
             ___lldiv
             ___wmul
             _sprintf
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
             _strcat
             _strlen
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
     _strlen
   _updateErrorLEDs
     _getADCError
     _getI2CError
     _getUARTError

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _CCP2_CaptureISR *
     _CCP2_CallBack
       _freqMeasConvert
         i1___fladd
           i1___xxtofl (ARG)
         i1___fldiv
           i1___fladd (ARG)
             i1___xxtofl (ARG)
           i1___xxtofl (ARG)
         i1___flmul
           i1___fladd (ARG)
             i1___xxtofl (ARG)
           i1___fldiv (ARG)
             i1___fladd (ARG)
               i1___xxtofl (ARG)
             i1___xxtofl (ARG)
           i1___xxtofl (ARG)
         i1___xxtofl
   _EUSART2_Transmit_ISR *
   _I2C2_BusCollisionISR *
   _I2C2_ISR *
     _I2C2_FunctionComplete
     _I2C2_Stop
   _TMR2_ISR *
     Absolute function(Fake) *
     _ADC_acquisitionTimerHandler *
       _ADCC_ClearAccumulator
       _ADCC_DischargeSampleCapacitor
       _ADCC_StartConversion
       _TMR2_StopTimer
         _TMR2_Stop
     _TMR2_DefaultInterruptHandler *
   _TMR3_ISR *
     Absolute function(Fake) *
     _QIIdleChargedTimerHandler *
       i1_TMR3_Reload
         i1_TMR3_WriteTimer
       i1_TMR3_StopTimer
     _TMR3_DefaultInterruptHandler *
     i1_TMR3_WriteTimer *

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADC_PostProcessingHandler *
       _ADCC_GetConversionResult
       _ADCC_GetCurrentCountofConversions
       _ADCC_GetFilterValue
       _ADCC_HasAccumulatorOverflowed
       _ADCC_StopConversion
       _TMR2_StartTimer
         _TMR2_Start
       _fabs
         i2___flneg
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         _fabs (ARG)
           i2___flneg
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv
             i2___lwmod (ARG)
           i2___lwmod
       i2___fldiv
         _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flge
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___lwdiv (ARG)
           i2___lwmod (ARG)
         i2___lwmod (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flsub
         _ADCC_GetFilterValue (ARG)
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           _fabs (ARG)
             i2___flneg
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___lwdiv (ARG)
                 i2___lwmod (ARG)
               i2___lwmod (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv
               i2___lwmod (ARG)
             i2___lwmod
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2__doprnt
         Absolute function(Fake) *
         i2___awdiv *
           i2___awmod (ARG)
         i2___fladd *
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           _fabs (ARG)
             i2___flneg
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___lwdiv (ARG)
                 i2___lwmod (ARG)
               i2___lwmod (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv
               i2___lwmod (ARG)
             i2___lwmod
         i2___fleq *
         i2___flge *
         i2___flmul *
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg *
         i2___flsub *
           _ADCC_GetFilterValue (ARG)
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             _fabs (ARG)
               i2___flneg
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___lwdiv (ARG)
                 i2___lwmod (ARG)
               i2___lwmod (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___lwdiv (ARG)
                   i2___lwmod (ARG)
                 i2___lwmod (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___lwdiv
                 i2___lwmod (ARG)
               i2___lwmod
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___fltol *
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___lwdiv (ARG)
                 i2___lwmod (ARG)
               i2___lwmod (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___lldiv *
         i2___llmod *
           i2___lldiv (ARG)
         i2___wmul *
         i2___xxtofl *
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2__div_to_l_ *
         i2__tdiv_to_l_ *
         i2_fround *
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv
             i2___lwmod (ARG)
           i2___lwmod
         i2_isdigit *
         i2_putch *
           i2_EUSART2_Write
         i2_scale *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
   _INT1_ISR *
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
       _leftCapTouchHandler *
   _INT2_ISR *
     _INT2_CallBack
       Absolute function(Fake) *
       _INT2_DefaultInterruptHandler *
       _rightCapTouchHandler *
   _PIN_MANAGER_IOC *
     _IOCBF2_ISR
       Absolute function(Fake) *
       _IOCBF2_DefaultInterruptHandler *
       _QIIdleIOCHandler *
         _TMR1_StartTimer
         _TMR3_StartTimer
         i2_TMR3_Reload
           i2_TMR3_WriteTimer
     _IOCBF3_ISR
       Absolute function(Fake) *
       _IOCBF3_DefaultInterruptHandler *
       _QIChargeIOCHandler *
         _TMR3_StartTimer
         i2_TMR1_Reload
           i2_TMR1_WriteTimer
         i2_TMR3_Reload
           i2_TMR3_WriteTimer
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _heartbeatTimerHandler *
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         _fabs (ARG)
           i2___flneg
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv
             i2___lwmod (ARG)
           i2___lwmod
       i2___llmod
         i2___lldiv (ARG)
   _TMR1_ISR *
     Absolute function(Fake) *
     _QIErrorTimerHandler *
       i2_TMR1_Reload
         i2_TMR1_WriteTimer
       i2_TMR1_StopTimer
     _TMR1_DefaultInterruptHandler *
     i2_TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100     18      18      16        9.4%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0     100      14      100.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100     2E      FF      12       99.6%
BITBANK2           100      0       0       9        0.0%
BANK2              100     BF     100      10      100.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     61      B5       8       70.7%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     59      A0       5      100.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4CA       6        0.0%
DATA                 0      0     4CA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Mar 11 15:23:19 2019

                              _temp_adc_offset E973               __end_of_TMR2_SetInterruptHandler C9CC  
                                 ___fldiv@aexp 023F                                   ___fldiv@bexp 023E  
                                  i1___fladd@a 0112                                    i1___fladd@b 010E  
             ??_IOCBF3_DefaultInterruptHandler 0001                ?_IOCBF3_DefaultInterruptHandler 0001  
                                 ___fldiv@sign 0237                           ??_OLED_updateHandler 02B9  
                    _QIIdleChargedTimerHandler C70A                          __end_ofi1_TMR3_Reload CA58  
                                  i1___fldiv@a 0122                                    i1___fldiv@b 011E  
                                  __CFG_CP$OFF 000000                          ?_I2C2_MasterTRBInsert 0200  
                                 ___awdiv@sign 020B                                    i1___flmul@a 013B  
                                  i1___flmul@b 0137                         __end_of_FVR_Initialize CA9A  
                        _freqMeasStartCaptures CAB2                 __size_of_heartbeatTimerHandler 0150  
                                           bsr 000FE0                            ___wmul@multiplicand 0202  
                           i2___lwdiv@dividend 0006                  __end_of_heartbeatTimerHandler 9C10  
                            ??_TMR5_WriteTimer 0202                 I2C2_MasterReadTRBBuild@address 0205  
                                   i1___xxtofl 9D54                                            l122 BDA0  
                                          l115 BFB2                                            l124 BDB6  
                                          _PR2 000FBC                                   __CFG_CPD$OFF 000000  
                     ?_printErrorHandlerStatus 0001                                    i2___fladd@a 0056  
                                  i2___fladd@b 0052                      _pos12_isns_average_buffer 0440  
                              _timer1ReloadVal 0186                                            _abs C44C  
                                  i2___fldiv@a 0017                                    i2___fldiv@b 0013  
                    __end_of_getDeviceIDString B00E                        __size_of_PMD_Initialize 001C  
                                 ___awmod@sign 0205              __size_of_LM73TempSensorInitialize 0238  
                       ??_rightCapTouchHandler 0001                                   __CFG_IDLOC0$ 00000D  
                                   i2___xxtofl 9E98                                   __CFG_IDLOC1$ 00000E  
                                 __CFG_IDLOC2$ 00000A                                   __CFG_IDLOC3$ 00000D  
                                 __CFG_IDLOC4$ 00000B                                   __CFG_IDLOC5$ 00000E  
                                 __CFG_IDLOC6$ 00000E                                   __CFG_IDLOC7$ 00000F  
                              _TMR2_Initialize C2A2                                            prod 000FF3  
                    ?_LM73TempSensorInitialize 0001                                            tosl 000FFD  
                                          wreg 000FE8                                    i2___flmul@a 0030  
                                i1___fladd@grs 011D                                    i2___flmul@b 002C  
                                  i2___flsub@a 0068                                    i2___flsub@b 0064  
                 __end_of_getSecondsFromOnTime 9970                                   ___flmul@aexp 021B  
                                 ___flmul@bexp 0220                       __end_of_OLED_WriteString B966  
                             OLED_Command@temp 0210                                   ___flmul@sign 021A  
                                 ___flmul@temp 0225                                   ___flmul@prod 0221  
                                 __CFG_LVP$OFF 000000                                  _INT1_CallBack C602  
                                 __CFG_ZCD$OFF 000000                                  i1___fldiv@grs 0131  
                                i1___fldiv@rem 012A                               __end_of_I2C2_ISR 919E  
                                 ___fltol@exp1 0239                                           ?_abs 023A  
                                         l1321 92BE                                           l3020 A17C  
                                         l2204 A488                                           l3021 A1A4  
                                         l2134 50B6                                           l2126 9740  
                                         l1270 8EF0                                           l2119 9664  
                                         l2137 510C                                           l2147 543A  
                                         l2139 5394                                _timer3ReloadVal 018A  
                                         l3300 6C92                                           l3301 6C8E  
                                         l1269 8DFC                                           l3222 7608  
                                         l3206 7536                                           l3231 766E  
                                         l3207 7514                                           l2503 0B8A  
                                         l3232 766A                                           l2168 502E  
                                         l2505 0B58                                           l1570 B8DC  
                                         l1562 B8BC                ??_ADCC_DischargeSampleCapacitor 0100  
                                         l3308 6D18                                           l3332 9C52  
                                         l2620 14FC                                           l1572 B8E4  
                                         l1564 B8C4                                           l3261 8400  
                                         l2622 14CA                                           l1574 B8EC  
                                         l1566 B8CC                                           l3351 C46C  
                                         l2471 096A                                           l3272 846E  
                                         l3168 B9B0                                           l2536 0D78  
                                         l1568 B8D4                                           l3273 846A  
                                         l3097 B594                                           l3178 BE18  
                                         l3291 6A7A                                           l3339 9CD0  
                                         l2557 10B4                                           l2469 099C  
                         _ADCC_StartConversion CA58                                           l1960 3644  
                                         l1890 AA14                                           l2682 B344  
                                         l2586 1314                                           l2588 12E2  
                                         l2933 A75C                          __size_ofi2__div_to_l_ 00F4  
                                         STR_1 FFC6                                           STR_2 F1D6  
                                         STR_3 F442                                           STR_4 F563  
                                         STR_5 EFEC                                           STR_6 ED98  
                                         STR_7 F58A                                           STR_8 F38E  
                                         STR_9 F83B                                __end_of_OLED_YX BE66  
                                  ?_OLED_Clear 0001                                           _LATA 000F83  
                                         _LATB 000F84                                           _LATC 000F85  
                                         _T2PR 000FBC                                           _PMD0 000EE1  
                                         _PMD1 000EE2                                           _PMD2 000EE3  
                                         _PMD3 000EE4                                           _PMD4 000EE5  
                                         _PMD5 000EE6                                           _TMR2 000FBB  
                        ??_leftCapTouchHandler 0001                                           _WPUA 000F10  
                                         _WPUB 000F18                                           _WPUC 000F20  
                                         _WPUE 000F2D                                  _INT2_CallBack C5DE  
                        ??_EUSART2_Receive_ISR 005E                                   i2___flge@ff1 0001  
                                 i2___flge@ff2 0005                                  __CFG_FCMEN$ON 000000  
                                _EUSART2_Write BD9A                ??_ADCC_HasAccumulatorOverflowed 0001  
                     ??_LM73AcquisitionHandler 0255                                   i2___fleq@ff1 0001  
                                 i2___fleq@ff2 0005                                           abs@a 023A  
                                         _fabs C15C                           __end_of_getUARTError CAF2  
                      __end_of_CCP2_Initialize C648                                           _main 8CAC  
                                  i2__doprnt@c 00A3                                           _line 0344  
                                  i2__doprnt@f 006E                                  i1___flmul@grs 0144  
                       OLED_Command@data_array 0212                                  ?_EUSART2_Read 0001  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                           i2___lwdiv@quotient 000B                                           indf0 000FEF  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                           btemp 005F  
               __size_of_ADCC_ClearAccumulator 0006                                   i2___flneg@f1 0001  
                              _OLED_RAM_Buffer 0300              __size_of_INT2_SetInterruptHandler 000E  
                  I2C2_MasterReadTRBBuild@ptrb 0200                  __end_of_ADCC_ClearAccumulator CAFE  
                               _clearI2CErrors C768                      ?_INT2_SetInterruptHandler 0200  
                   __size_ofi2_TMR3_WriteTimer 001C                                           prodh 000FF4  
                                         prodl 000FF3                                 i1___fladd@aexp 011B  
                           _QIChargeIOCHandler C7A0                                 i1___fladd@bexp 011C  
                                         start 00C2                                _timer5ReloadVal 0188  
                            ??_clearUARTErrors 0201                                   i2___fltol@f1 004E  
                               _clearADCErrors C964                                ___fldiv@new_exp 0238  
                              __end_ofi2_scale 62EC                   __end_of_EUSART2_Transmit_ISR C306  
                              _TMR3_Initialize BAAE                                __end_ofi2_putch CAE4  
                   ??_TMR1_SetInterruptHandler 0203                                  __CFG_CSWEN$ON 000000  
                          _QIErrorTimerHandler C88A                                   ___param_bank 000000  
                      __end_of_updateErrorLEDs BD54                           __size_of_getI2CError 0028  
                                __CFG_SCANE$ON 000000                          __end_ofi2_TMR1_Reload CA74  
                         __size_of_getADCError 0016                       __size_ofi2_EUSART2_Write 0042  
                          ?_QIChargeIOCHandler 0001                                          ??_abs 023C  
                           __size_of_OLED_Init 0098                          __end_ofi2_TMR3_Reload CA82  
                      __end_of_TMR0_Initialize C44C                       ?_getNXQChargeStateString 0200  
                             __end_of_INT1_ISR CADA                               __end_of_INT2_ISR CAD0  
                               i1___fldiv@aexp 0136                                 i1___fldiv@bexp 0135  
                                   _i2c2_state 00DD                 ??_TMR0_DefaultInterruptHandler 0001  
                              ?_FVR_Initialize 0001                           getUserID@inputUserID 0211  
               __size_of_OSCILLATOR_Initialize 0018                                 i1___fldiv@sign 012E  
                          __size_of_IOCBF2_ISR 002A                            __size_of_IOCBF3_ISR 002A  
                __end_of_OSCILLATOR_Initialize C874                                          l20022 B910  
                                        l20030 BA60                                          l20104 5322  
                                        l20032 BA68                                          l20026 B93C  
                                        l20122 5410                                          l20114 53D2  
                                        l20116 53F0                                          l20052 9688  
                                        l21110 C38C                                          l20070 9714  
                                        l20062 96E8                                          l20054 96AA  
                                        l22000 3A44                                          l20080 9786  
                                        l20048 964E                                          l21210 A022  
                                        l20090 5064                                          l20074 972A  
                                        l20066 96FE                                          l21204 A008  
                                        l22020 3BA4                                          l20084 97D2  
                                        l21230 A076                                          l21222 A050  
                                        l21206 A01A                                          l22030 3C50  
                                        l22014 3B16                                          l22006 3A4E  
                                        l20094 508C                                          l20078 9764  
                                        l21240 A092                                          l21216 A036  
                                        l22112 3EDE                                          l22024 3BF2  
                      _I2C2_MasterReadTRBBuild B9BA                                          l21234 A07E  
                                        l21218 A048                                          l21330 5A3C  
                                        l21322 58EC                                          l21228 A064  
                                        l22044 3C96                                          l22036 3C5A  
                                        l21308 5886                                          l22222 931E  
                                        l21254 BBF8                                          l22046 3CD0  
                                        l22150 3FB4                                          l21326 594A  
                                        l21318 58C8                                          l21270 5636  
                                        l21262 55BA                                          l22240 9398  
                                        l22224 9340                                          l22208 92E8  
                                        l22160 91D8                                          l21256 BC02  
                                        l22144 3FA2                                          l22128 3F40  
                                        l22064 3D42                                          l22056 3D06  
                                        l21344 C6BE                                          l21280 5738  
                                        l22322 9496                                          l22306 943E  
                                        l22154 91A4                                          l21194 9FEC  
                                        l22146 3FA8                                          l22066 3D7C  
                                        l20722 BFB4                                          l21266 55F6  
                                        l22340 9510                                          l22324 94B8  
                                        l22308 9460                                          l22092 3E22  
                                        l22076 3DB2                                          l20732 BFDC  
                                        l20910 BBE0                                          l22254 93CE  
                                        l22238 9376                                          l22190 9266  
                                        l22174 920E                                          l21198 9FF4  
                                        l21606 B8F4                                          l20920 8AA8  
                                        l22192 9288                                          l22176 9230  
                                        l21800 3234                                          l21712 2FD0  
                                        l21296 583E                                          l21288 57FE  
                                        l22280 A46A                                          l22370 959E  
                                        l22354 9546                                          l22338 94EE  
                                        l21642 C074                                          l21802 3258  
                                        l21298 5844                                          l22274 A42C  
                                        l22266 A3FE                                          l22372 95C0  
                                        l22356 9568                                          l22292 9408  
                                        l17020 BDA2                                          l21900 350A  
                                        l21812 328C                                          l21660 2E40  
                                        l20934 8B7C                                          l22278 A44A  
                                        l22534 8DEE                                          l22288 93DC  
                                        l21648 C07C                                          l17032 BDD6  
                                        l21760 3114                                          l21744 30A2  
                                        l21728 3032                                          l21584 C67E  
                                        l22386 95F6                                          l17114 74C8  
                                        l17034 BDD8                                          l18010 04A0  
                                        l18002 0456                                          l20970 B872  
                                        l20948 8C50                                          l17052 7424  
                                        l18004 046A                                          l20964 B866  
                                        l21932 35EE                                          l21916 357C  
                                        l21836 333A                                          l21828 32FE  
                                        l21676 2EB2                                          l22548 8EFC  
                                        l17222 76DA                                          l17214 76B4  
                                        l17150 757C                                          l17142 755A  
                                        l17126 7522                                          l18110 0912  
                                        l18102 08CE                                          l18030 0590  
                                        l18022 0532                                          l18006 048E  
                                        l18014 04A6                                          l20982 B88A  
                                        l20958 B85A                                          l20990 B896  
                                        l21950 3678                                          l21942 362E  
                                        l21838 335E                                          l20886 C69E  
                                        l17320 6C3A                                          l17152 7580  
                                        l17160 7592                                          l17128 7526  
                                        l17072 7468                                          l17048 7420  
                                        l17400 B2B0                                          l18200 0CDA  
                                        l18120 093C                                          l18016 051C  
                                        l20976 B87E                                          l21960 36B8  
                                        l21856 33CE                                          l21848 3392  
                                        l21792 31F8                                          l21776 3186  
                                        l21696 2F6E                                          l17250 6A26  
                                        l17226 76E2                                          l17170 75F8  
                                        l18210 0D4C                                          l18202 0CE6  
                                        l18106 08F8                                          l21962 36F2  
                                        l21858 33F2                                          l22690 AFF4  
                                        l17252 6A2A                                          l17228 76E4  
                                        l17084 748C                                          l17076 746C  
                                        l17500 7E9C                                          l17404 B2BA  
                                        l17420 B472                                          l18300 117E  
                                        l18212 0D54                                          l18140 0A08  
                                        l21980 37F2                                          l21972 3726  
                                        l21884 3498                                          l21868 3426  
                                        l22692 B004                                          l17350 6CF4  
                                        l17326 6C58                                          l17270 6A6A  
                                        l17254 6A3A                                          l17430 B494  
                                        l18230 0DF0                                          l18206 0D22  
                                        l18126 0976                                          l18150 0A76  
                                        l18070 0780                                          l18062 0714  
                                        l18054 069C                                          l18046 061C  
                                        l17408 B2C8                                          l17440 B4B6  
                                        l17424 B47E                                          l17520 5BE0  
                                        l18320 11F2                                          l18160 0AEE  
                                        l18152 0A88                                          l18144 0A44  
                                        l18136 09DC                                          l21984 38A4  
                                        l22688 AFDE                                          l17362 6D36  
                                        l17346 6CD6                                          l17178 762C  
                                        l17194 764C                                          l17602 A1BE  
                                        l17506 7F8A                                          l17530 5CC0  
                                        l18410 14D6                                          l18330 1234  
                                        l18314 11BC                                          l18242 0F1A  
                                        l18234 0E52                                          l18226 0DC6  
                                        l18218 0D7C                                          l18170 0B2A  
                                        l18138 09F8                                          l18162 0AF6  
                                        l18090 0890                                          l18074 07AE  
                                        l18058 06CA                                          l21994 39E4  
                                        l19210 672C                                          l19202 66D4  
                                        l17268 6A66                                          l17188 7642  
                                        l17700 B336                                          l17612 A1D6  
                                        l17444 B4C4                                          l17436 B4AC  
                                        l17428 B48C                                          l18420 153C  
                                        l18404 149C                                          l18324 1212  
                                        l18316 11D2                                          l18252 0FE2  
                                        l18244 0F46                                          l18156 0AC4  
                                        l18148 0A6E                                          l18084 0814  
                                        l18260 101E                                          l21988 3954  
                                        l19212 6742                                          l19204 66EA  
                                        l19220 6798                                          l17278 6A98  
                                        l17622 A318                                          l17614 A1E2  
                                        l17606 A1CE                                          l17454 B97E  
                                        l17390 B290                                          l17382 B272  
                                        l17526 5C90                                          l18342 1282  
                                        l18246 0F9A                                          l18190 0BE6  
                                        l19302 B82E                                          l19310 B83A  
                                        l19230 6810                                          l19222 67B0  
                                        l19214 6758                                          l19206 6700  
                                        l18512 C3D0                                          l17456 B986  
                                        l17376 B262                                          l17544 5EA4  
                                        l18440 16BE                                          l18432 1650  
                                        l18424 155A                                          l18360 12EE  
                                        l18344 128A                                          l18336 1256  
                                        l18256 100C                                          l18248 0FA6  
                                        l18176 0B64                                          l18088 088C  
                                        l19232 6828                                          l19224 67C8  
                                        l19208 6716                                          l18514 C3D6  
                                        l18610 82FA                                          l17722 B1BE  
                                        l17714 B16C                                          l17730 A6FC  
                                        l17650 A396                                          l17642 A366  
                                        l17466 B9A6                                          l17482 BE0E  
                                        l17474 BDEE                                          l17538 5DF4  
                                        l18426 15DC                                          l18434 1666  
                                        l18442 16CC                                          l18370 1354  
                                        l18354 12B4                                          l18338 125E  
                                        l18266 1068                                          l18258 1014  
                                        l18186 0BCA                                          l18506 C4EE  
                                        l18530 B7A8                                          l19314 62F4  
                                        l19250 6902                                          l19234 6840  
                                        l19226 67E0                                          l19242 6888  
                                        l19218 676E                                          ?_fabs 0005  
                                        l18700 8500                                          l17812 B586  
                                        l17804 B552                                          l17476 BDF6  
                                        l17556 C662                                          l17388 B288  
                                        l18380 13C4                                          l18372 1370  
                                        l18284 1138                                          l18276 10EA  
                                        l18268 109A                                          l18532 B7AE  
                                        l19340 64DC                                          l19260 6970  
                                        l19252 6918                                          l19236 6858  
                                        l19228 67F8                                          l19244 68BE  
                                        l18470 BB90                                          l17830 9C86  
                                        l17822 9C62                                          l18622 8332  
                                        l18614 82FE                                          l17718 B1A0  
                                        l17734 A730                                          l17806 B55E  
                                        l17662 A3B2                                          l17566 A128  
                                        l18438 16A2                                          l18374 137E  
                                        l18286 113C                                          l18278 111E  
                                        l18198 0CAE                                          l17910 008A  
                                        l18534 B7BE                                          l19350 653A  
                                        l19342 64F8                                          l19318 6308  
                                        l19262 6986                                          l19254 692E  
                                        l19246 68D6                                          l19238 6870  
                                        l17840 9CF6                                          l17832 9C92  
                                        l18544 AC7E                                          l19424 AA8A  
                                        l17744 A794                                          l17752 C3B4  
                                        l17672 A3CA                                          l18392 143C  
                                        l18384 13EE                                          l17912 0090  
                                        l17904 004A                                          l18536 B7C8  
                                        l19360 6598                                          l19352 6556  
                                        l19344 650E                                          l19256 6944  
                                        l19248 68EC                                          l17842 9D02  
                                        l17834 9CB8                                          l18706 850C  
                                        l17738 A746                                          l17762 AAE2  
                                        l17690 B302                                          l17674 A3D6  
                                        l17666 A3C2                                          l18386 13F8  
                                        l18298 117A                                          l17914 0096  
                                        l19450 4A60                                          l18482 C886  
                                        l19290 B816                                          l19370 65F6  
                                        l19362 65B4                                          l19354 656C  
                                        l18570 B5DE                                          l19258 695A  
                                        l19266 699C                                          l19194 669C  
                                        l17828 9C80                                          l18548 ACB4  
                                        l18708 850E                                          l18660 83FE  
                                        l18636 8360                                          l18628 8348  
                                        l18396 1466                                          l17940 01D4  
                                        l17908 0078                                          l19460 4B68  
                                        l19452 4A70                                          l19284 B80A  
                                        l19380 6654                                          l19372 6612  
                                        l19364 65CA                                          l18572 B5EA  
                                        l18564 B5B0                                          l19268 69D2  
                                        l18654 83D8                                          l18646 83B0  
                                        l18590 82BA                                          l17790 AB50  
                                        l17782 AB3C                                          l17950 0262  
                                        l17926 010C                                          l17918 009E  
                                        l19446 4A3E                                          l19278 B7FE  
                                        l19382 6670                                          l19374 6628  
                                        l18672 8434                                          l17688 B2F6  
                                        l17952 0266                                          l17944 0228  
                                        l19472 4D38                                          l19296 B822  
                                        l19384 6686                                          l18576 B5FA  
                                        l17890 AEBC                                          l17858 9D42  
                                        l18666 8416                                          l18594 82BE  
                                        l17778 AB2C                                          l17962 02A6  
                                        l17954 026A                                          l17946 0254  
                                        l19490 4FF0                                          l19466 4C50  
                                        l17884 AE9C                                          l19396 B6A0  
                                        l18692 84B2                                          l17796 AB6C  
                                        l17788 AB44                                          l17980 0328  
                                        l17964 02B0                                          l17956 026E  
                                        l19484 4F08                                          l17990 03A2  
                                        l17974 0308                                          l17966 02B6  
                                        l19478 4E20                                  ___fltol@sign1 0238  
                                        l17888 AEB0                                          l18696 84D6  
                                        l17984 0364                                          l17978 031E  
                                        l17898 0004                                          l17996 0406  
                                        l17988 038E                                          l19908 C32C  
                                        l19942 AF82                                          l19960 AFA0  
                                        l19936 AF78                                          l19954 AF96  
                   __size_of_getDaysFromOnTime 0090                                          l19972 AFB4  
                                        l19948 AF8C                                          l19980 AFBE  
                                        l19966 AFAA                                          _ADACQ 000F5C  
                                        _ADCAP 000F5D                                          _ADACT 000F56  
                              __end_of___fladd 7700                                          ?_main 0001  
                                        _ADCLK 000F57                                          _ADCNT 000F67  
                                        _ADPCH 000F5F                                __end_of___fldiv 8516  
                                        _ADREF 000F58                                __end_of___awdiv B2D2  
                              __end_of___flneg C3C6                                          _ADPRE 000F5E  
                                        STR_10 F331                                          STR_11 FFAD  
                                        STR_12 FF30                                          STR_20 FEB9  
                                        STR_13 FCD2                                          STR_21 FBA1  
                                        STR_30 FBA1                                          STR_14 FF89  
                                        STR_22 FC1B                                          STR_15 FEC3  
                                        STR_31 FEB9                                          STR_23 FBB1  
                                        STR_40 FEB9                                          STR_16 FFA8  
                                        STR_32 FEAF                                          STR_24 FAE7  
                                        STR_17 FD25                                          STR_41 FDC3  
                                        STR_33 FEA5                                          STR_25 F4CC  
                                        STR_50 FF27                                          STR_42 FD62  
                                        STR_18 FCC4                                          STR_34 FE53  
                                        STR_26 F4C3                                          STR_19 FF83  
                                        STR_51 FE91                                          STR_43 FDAB  
                                        STR_35 FE5F                                          STR_27 F8FF  
                                        STR_52 FE87                                          STR_44 FDB7  
                                        STR_60 FC46                                          STR_36 FE5E  
                                        STR_28 FA6F                                __end_of___awmod B4CE  
                                        STR_53 FE27                                          STR_45 FD48  
                                        STR_61 FB81                                          STR_37 FC0C  
                                        STR_29 FA2F                                          STR_54 FD9F  
                                        STR_46 FD55                                          STR_70 FBFD  
                                        STR_62 FB71                                          STR_38 FE3D  
                                        STR_47 FEB9                                          STR_63 FDE5  
                                        STR_55 FD3B                                          STR_71 FCA8  
                                        STR_39 FE48                                          STR_80 FDA9  
                                        STR_64 FF9E                                          STR_56 FE9B  
                                        STR_48 FE7D                                          STR_72 FDF0  
                                        _ADRPT 000F66                                          STR_81 FDA9  
                                        STR_57 FE32                                          STR_49 FE1C  
                                        STR_65 FCE0                                          STR_73 FCB6  
                                        STR_66 FF70                                          STR_90 FD87  
                                        STR_82 FCED                                          STR_74 FB51  
                                        STR_83 FF51                                          STR_91 FD21  
                                        STR_75 FBDF                                          STR_67 FB61  
                                        STR_84 FDA9                                          STR_76 FDA9  
                                        STR_92 FF41                                          STR_68 FE73  
                                        STR_93 FDA9                                          STR_85 FDA9  
                                        STR_77 FDA9                                          STR_69 FB91  
                            __end_of_I2C2_Stop BEAA                                          STR_94 FDA9  
                                        STR_86 FC9A                                          STR_78 FC54  
                                        STR_79 FF51                                          STR_87 FF41  
                                        STR_95 FD14                                          STR_88 FDA9  
                                        STR_96 FF59                                __end_of___flmul 6D4C  
                                        STR_97 FDA9                                          STR_89 FDA9  
                                        STR_98 FDA9                                          STR_99 FC8C  
                              __end_of___flsub BCC6                                __end_of___fltol AB7E  
                              _TMR1_StartTimer CB20                                __end_of___lldiv B356  
                                        _T1CLK 000FD2                                          u21020 6CE4  
                              ___awdiv@divisor 0208                                          u21030 6D02  
                                        _T1CON 000FCF                                __end_of___llmod B5A6  
                                        u21210 BDFA                                          u22010 02E4  
                                        u21140 B498                                          u22020 02EA  
                                        u22110 03FC                                          _T3CLK 000FCC  
                                        u21080 B294                                          u22120 0440  
                                        _T2CON 000FBD                                          u22017 02DA  
                                        u20610 753E                                          u21410 A1E8  
                                        u23010 1400                                          u21331 A10C  
                                        u21500 B306                                          u21420 A306  
                                        u21340 A116                                          u21180 B98A  
                                        u22220 06DA                                          u22140 04D6  
                                        u22108 03C8                                          u22117 03F2  
                                        u22109 03FE                                          u22230 0726  
                                        u21351 A138                                          u22127 0436  
                                        u20560 74EA                                          u23040 1476  
                                        u23200 C882                                          _T3CON 000FC9  
                                        u20570 74FA                                          u21610 AAD0  
                                        u22147 04CC                                          u21540 B1BA  
                                        u20820 76C0                                          u20740 7650  
                                        u20580 74FC                                          u21620 AB00  
                                        u22260 0780                                          u23150 16DE  
                                        u23038 1426                                          u22078 034E  
                                        _T5CLK 000FC6                                          u20760 7664  
                                        u21480 A3DC                                          u23160 170E  
                                        u23128 1526                                          u22600 0D62  
                                        u22408 09C6                                          u21625 AAF6  
                                        u20930 6A86                                          u23170 171A  
                                        u22610 0D72                                          u23250 C4EA  
                                        u20940 6BFC                                          u21660 AB56  
                                        u23148 168C                                          u22508 0B42  
                                        u22460 0B04                                          u22428 0A2E  
                                        u21900 00FA                                          _T2HLT 000FBE  
                                        u23167 1704                                          u23600 84E4  
                                        u23088 14B4                                          u22368 0954  
                                        u21920 0156                                          u23280 B7F2  
                                        _T5CON 000FC3                                          u20945 6BF2  
                                        u21770 9D0C                                          u21690 B562  
                                        u22458 0AAE                                          u21930 0192  
                                        u21907 00F0                                          u20980 6C88  
                                        u22548 0BB4                                          u21940 019A  
                                        u23550 8464                                          u21950 01BC  
                                        u21927 014C                                          u23287 B7E8  
                                        u24600 AA10                                          u22648 0DB0  
                                        u22568 0C96                                          u21880 00C0  
                                        u21937 0188                                          u21970 020C  
                                        u25410 BAA2                                          u22668 0F02  
                                        u21980 024A                                          u21957 01B2  
                                        u23590 84C0                                          u22598 0D0C  
                                        u21878 0034                                 __CFG_DEBUG$OFF 000000  
                                        u27015 8B06                                          u21887 00B6  
                                        u22928 12CC                                          u25600 5400  
                                        u21977 0202                                          u25370 B932  
                                        u22698 0FCC                                          u27035 8BDA  
                                        u21987 0240                                          u25355 C110  
                                        u28100 92B8                                          u24660 AABA  
                                        u24580 B6D0                                          u25380 B95E  
                                        u25365 BE50                                          u28040 9260  
                                        u22968 133E                                          u25377 B928  
                                        u27330 577A                                          u25387 B954  
                              __end_of___lwdiv B9BA                                          u28220 9370  
                                        u25580 53C2                                          u22998 13AE  
                                        u27270 BC2C                                          u28160 9318  
                   _ADCC_ADTI_InterruptHandler 00CC                                          u27277 BC22  
                                        u28510 94E8                                          u28280 93C8  
                                        u27800 3616                                          u28450 9490  
                                        u28290 A422                                          u27740 C094  
                                        u27820 36A0                                          _T2TMR 000FBB  
               __size_of_I2C2_FunctionComplete 001A                                          u29157 8CC0  
                                        u28630 9598                                          u28390 9438  
                                        u27750 C0A6                                          i1l136 C300  
                                        u27840 3806                                          i1l250 009A  
                                        u28570 9540                                          u27850 38B6  
                                        _T2RST 000FC0                                          i1l251 0090  
                                        i1l243 004C                                          u27860 3964  
                                        i1l245 0058                                          u27870 3A7A  
                                        i1l247 0064                                          u27880 3B26  
                                        i1l249 0070                                __end_of___lwmod BE22  
                                        i2l122 BEF0                                          u28690 95F0  
                                        u26995 8A32                                          i2l124 BF06  
                                        u27980 9208                                          i2l230 A8DE  
                                        i2l144 ADE0                                          i2l232 A8EA  
                                        i2l224 A8A6                                          i2l233 A900  
                                        i2l234 A8F6                                          i2l226 A8B2  
                                        i2l228 A8D2                                          i1l940 8FC2  
                                        i1l943 8FCE                                          i1l953 9088  
                                        i1l937 8F62                                          i1l971 9134  
                                        i1l963 90CA                                          i1l948 900A  
                                        i1l949 901C                                          i1l966 90E6  
                                        i1l967 90FC                                          i1l959 9096  
                              ___awdiv@counter 020A                  __end_of_I2C2_FunctionComplete C842  
                                        _OSCEN 000EDC                                          _TMR0H 000FD4  
                                        _TMR1H 000FCE                                          _TMR0L 000FD3  
                     _OLED_UpdateFromRAMBuffer 9FD8                                          _TMR3H 000FC8  
                                        _TMR1L 000FCD                                          _TMR3L 000FC7  
                                        _TMR5H 000FC2                                          _TMR5L 000FC1  
                                 i2__div_to_l_ A4E2                                __end_of__doprnt 1724  
                                        _TRISA 000F88                                          _TRISB 000F89  
                                        _TRISC 000F8A              __size_of_TMR0_SetInterruptHandler 000E  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000              __size_of_TMR3_SetInterruptHandler 000E  
                    ?_TMR0_SetInterruptHandler 0200                        terminalTextAttributes@i 0511  
                                __CFG_WRT3$OFF 000000                                  __CFG_PWRTE$ON 000000  
                         ?_QIErrorTimerHandler 0001                                  __CFG_WRT4$OFF 000000  
                                i2___fladd@grs 0063                                  __CFG_WRT5$OFF 000000  
                                __CFG_WRT6$OFF 000000                                  __CFG_WRT7$OFF 000000  
                    ?_TMR3_SetInterruptHandler 0200                                 __CFG_EBTR0$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                                 __CFG_EBTR4$OFF 000000  
                               __CFG_EBTR5$OFF 000000                                 __CFG_EBTR6$OFF 000000  
                             __end_of_TMR0_ISR C56A                                 __CFG_EBTR7$OFF 000000  
                             __end_of_TMR1_ISR C2A2                               __end_of_TMR2_ISR C542  
                                __CFG_WRTB$OFF 000000                               __end_of_TMR3_ISR C26E  
                         _getMinutesFromOnTime 9970                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                       __end_of_QIIdleIOCHandler C908  
                               ?_INT1_CallBack 0001                               ?_CCP2_CaptureISR 0001  
                       __size_of_CCP2_CallBack 0040                                 __CFG_EBTRB$OFF 000000  
                                   i2isdigit@c 0003                      ??_terminal_ringBufferPull 03FC  
               ??_TMR3_DefaultInterruptHandler 0100                        __end_of_PIN_MANAGER_IOC C8F4  
                              __end_of_dpowers E973                             __size_of_TMR2_Stop 0004  
                                  ?_TMR2_Start 0001                                          fabs@d 0005  
                                   i2scale@scl 004D                 ??_INT1_DefaultInterruptHandler 0001  
                               i1___flmul@aexp 0148                                 i1___flmul@bexp 0149  
                                 i2__doprnt@ap 0070                                   i2__doprnt@cp 008B  
                        ?_ADCC_StartConversion 0001                           ??_QIChargeIOCHandler 0003  
                                 i2__doprnt@pb 006C                                          _scale 5AA0  
                              __end_of_isdigit C66A                                __end_of_memmove ACE6  
                                i2___fldiv@grs 0026                             __CFG_MCLRE$EXTMCLR 000000  
                                i2___fldiv@rem 001F                                 i1___flmul@sign 0143  
                               i1___flmul@temp 014E                                 i1___flmul@prod 014A  
                                        _putch C8CC                                 ?_INT2_CallBack 0001  
                 I2C2_MasterReadTRBBuild@pdata 0202                       _INT1_SetInterruptHandler CA12  
                      __end_of_TMR1_Initialize BB4E                                 ?_EUSART2_Write 0001  
                                        pclath 000FFA                               __end_ofi2___flge A868  
                             __end_ofi2___fleq B24C                                          tablat 000FF5  
                     __end_ofi1_TMR3_StopTimer CB14                         __end_of_clearI2CErrors C784  
                             __end_ofi2___wmul C5DE                                          plusw2 000FDB  
                               ??_EUSART2_Read 0200                   __size_of_ADCC_GetFilterValue 0014  
                                        ttemp5 0060                                          ttemp6 0063  
                                        ttemp7 0067                                          status 000FD8  
                      __end_of_temp_adc_offset E977                         __end_of_clearADCErrors C974  
                                        wtemp8 0060                                __end_of_sprintf BC7E  
                           __size_ofi1___fladd 030E                    getCauseOfResetStringSmall@r 0202  
                           __size_ofi1___fldiv 028A                                  i2___flmul@grs 003A  
                              _TMR2_StartTimer CAFE                                i1___fladd@signs 011A  
                           __size_ofi1___flmul 0354                                __end_of_strncpy B60C  
                             __end_ofi2_fround 828C                                _TMR1_WriteTimer C6AA  
               ?_INTERRUPT_InterruptManagerLow 0001                             __size_ofi2___fladd 030E  
                           __size_ofi2___fldiv 0288                             __size_ofi2___awdiv 0084  
                           __size_ofi2___flneg 002E                             __size_ofi2___awmod 0070  
                            getUserID@IDOffset 0212                             __size_ofi2___flmul 0352  
                           __size_ofi2___flsub 0048                             __size_ofi2___fltol 00BA  
                           __size_ofi2___lldiv 0082                             __size_ofi2___llmod 0066  
                             __end_ofi2_printf C15C                             __size_ofi2___lwdiv 0052  
                           __size_ofi2___lwmod 0042                   ??_getCauseOfResetStringSmall 0202  
        __end_of_EUSART2_SetTxInterruptHandler CA2E         __size_of_EUSART2_SetTxInterruptHandler 000E  
                _EUSART2_SetTxInterruptHandler CA20                                _TMR5_Initialize C0A8  
                            ??_I2C2_MasterRead 0210                             __size_ofi2__doprnt 1718  
                            ??_I2C2_Initialize 0200                                __initialization ACE6  
               __size_of_terminalSetCursorHome 0010                        getStringSecondsAsTime@i 03E5  
                __end_of_terminalSetCursorHome C984                              i2___lldiv@divisor 0005  
                                 __end_of_fabs C198                                   __end_of_main 8F28  
                       ??_I2C2_MasterTRBInsert 0204                              i2___lldiv@counter 000D  
                                   i2printf@ap 00A6                                     i2printf@pb 00A8  
                       ?_freqMeasStartCaptures 0001                          __end_of_ringBufferLUT 5AA0  
                      FLASH_ReadByte@flashAddr 0200                        __end_of_TMR2_Initialize C2D4  
                           __size_ofi2_isdigit 001E                           __size_of_getDeviceID 0020  
                             __end_of_OledFont E94B                            __size_of_OLED_Clear 003E  
              getYearsFromOnTime@input_seconds 020D                                         ??_fabs 0009  
             __end_of_I2C2_MasterWriteTRBBuild BD9A                       _TMR2_SetInterruptHandler C9BE  
                                       ??_main 03FD                                    ?i1___xxtofl 0100  
                                  _i2c2_object 0161                                _TMR3_StartTimer CB1C  
                                __activetblptr 000003                        __size_of_FLASH_ReadByte 001A  
                        _TMR3_InterruptHandler 0171                           __size_of_LM73Convert 0284  
                      __size_of_FLASH_ReadWord 0042                       ??_getStringSecondsAsTime 02A7  
                   __size_of_getDeviceIDString 0098                           __size_of__tdiv_to_l_ 0100  
                        ??_QIErrorTimerHandler 0003                                    ?i2___xxtofl 0005  
                 ?_getNXQChargeStateStringCaps 0200                                      ??_OLED_YX 0215  
                        ?_getMinutesFromOnTime 020D                    __size_of_getYearsFromOnTime 0030  
                                       _ADACCH 000F71                                         _ADACCL 000F70  
                   __end_of_EUSART2_Initialize B672                   ??_IOCBF2_SetInterruptHandler 0203  
                                       _ADCON0 000F60                                         _ADCON1 000F59  
                                       _ADCON2 000F5A                                         _ADCON3 000F5B  
                     _eusart2TxBufferRemaining 0190                                         _ADERRH 000F6F  
                                       _ADERRL 000F6E                               ___llmod@dividend 020D  
                                       _ADLTHH 000F6B                                         ?_scale 0227  
                                       STR_100 FD21                                         _ADLTHL 000F6A  
                                       STR_101 FF59                                         STR_102 FDA9  
                                       STR_110 FF49                                         STR_111 FDA9  
                                       STR_103 FDA9                                         STR_200 F92F  
                                       STR_120 FDA9                                         STR_112 FDA9  
                                       STR_104 FD93                                         STR_105 FD21  
                                       STR_113 FE69                                         STR_121 FD7B  
                                       STR_201 F20A                                         STR_202 F92F  
                                       STR_122 FF49                                         STR_114 FF49  
                                       STR_106 FEFA                                         STR_130 FD07  
                                       STR_210 F102                                         _ADRESH 000F64  
                                       STR_211 F92F                                         STR_123 FDA9  
                                       STR_115 FDA9                                         STR_107 FDA9  
                                       STR_131 FDFB                                         STR_203 ED5A  
                                       STR_212 F92F                                         STR_204 F92F  
                                       STR_124 FDA9                                         STR_116 FDA9  
                                       STR_108 FDA9                                         STR_300 FF94  
                                       STR_140 FF15                                         STR_132 FFA3  
                                       STR_220 FA19                                         STR_221 F92F  
                                       STR_133 FDA9                                         STR_301 FFBA  
                                       STR_109 FF03                                         STR_141 FE11  
                                       STR_125 FC7E                                         STR_117 FC70  
                                       STR_213 FB40                                         STR_205 EDD6  
                                       STR_230 F58A                                         STR_150 FDA9  
                                       STR_134 FDA9                                         STR_310 FFF2  
                                       STR_118 FF49                                         STR_142 FF15  
                                       STR_126 FDFB                                         STR_214 F9BF  
                                       STR_222 F302                                         STR_206 EE8C  
                                       _ADRESL 000F63                                         STR_223 F92F  
                                       STR_207 F92F                                         STR_231 F38E  
                                       STR_119 FDA9                                         STR_143 FE11  
                                       STR_311 FFFA                                         STR_303 FFB2  
                                       STR_127 FF1E                                         STR_151 FCFA  
                                       STR_135 FC62                                         STR_215 FB2F  
                                       STR_232 F83B                                         STR_160 FDA9  
                                       STR_128 FDA9                                         STR_312 FFCB  
                                       STR_152 FF15                                         STR_320 FFEB  
                                       STR_304 FFB6                                         STR_224 FF99  
                                       STR_136 FF0C                                         STR_144 FE06  
                                       STR_240 FC2A                                         STR_216 F9D6  
                                       STR_208 F05D                                         STR_233 F92F  
                                       STR_225 F92F                                         STR_209 F92F  
                                       STR_129 FDA9                                         STR_161 FE06  
                                       STR_153 FE11                                         STR_145 FE11  
                                       STR_313 FFFC                                         STR_305 FFF7  
                                       STR_321 FFF1                                         STR_137 FF61  
                                       STR_217 FB0C                                         STR_241 F16E  
                                       STR_162 FDA9                                         STR_306 FFCB  
                                       STR_322 FFF1                                         STR_170 FD21  
                                       STR_154 FE06                                         STR_146 FE06  
                                       STR_330 FFEE                                         STR_314 FFCA  
                                       STR_138 FF15                                         STR_226 FA03  
                                       STR_218 F962                                         STR_242 F7FE  
                                       STR_250 F7DF                                         STR_234 F5D6  
                                       STR_163 FDA9                                         STR_147 FDA9  
                                       STR_307 FFCE                                         STR_323 FFFC  
                                       STR_155 FE11                                         STR_139 FF61  
                                       STR_331 FFF4                                         STR_315 FFCD  
                                       STR_171 FFC2                                         STR_219 FC38  
                                       STR_251 F81D                                         STR_243 F360  
                                       STR_235 EC06                                         STR_227 E977  
                                       STR_236 F333                                         STR_228 EFEC  
                                       STR_172 FDA9                                         STR_332 FDB4  
                                       STR_324 FDB4                                         STR_308 FFE0  
                                       STR_180 FF70                                         STR_156 FE06  
                                       STR_148 FE06                                         STR_316 FFD3  
                                       STR_164 FBD0                                         STR_340 F9ED  
                                       STR_244 F876                                         STR_260 F416  
                                       STR_252 EC5E                                         STR_229 ED98  
                                       STR_173 FDA9                                         STR_157 FDA9  
                                       STR_149 FDA9                                         STR_309 FFE6  
                                       STR_181 FB61                                         STR_165 FD21  
                                       STR_333 FEE6                                         STR_317 FFD9  
                                       STR_325 FFD0                                         STR_341 FA98  
                                       STR_237 F859                                         STR_253 F7BF  
                                       STR_245 F514                                         STR_261 F46E  
                                       STR_270 F92F                                         STR_262 F92F  
                                       STR_174 FB71                                         STR_158 FD21  
                                       STR_182 FE73                                         STR_318 FFDF  
                                       STR_326 FFD6                                         STR_166 FFBE  
                                       STR_190 FF94                                         STR_334 FDDA  
                                       STR_342 F97A                                         STR_350 F739  
                                       STR_254 F6D1                                         STR_246 F5FB  
                                       STR_238 F23C                                         STR_175 FDA9  
                                       STR_167 FDA9                                         STR_159 FDA9  
                                       STR_183 FB91                                         STR_319 FFE5  
                                       STR_327 FFDC                                         STR_191 FFBA  
                                       STR_335 FAFA                                         STR_343 FAAC  
                                       STR_263 F9A8                                         STR_239 F892  
                                       STR_247 F6F4                                         STR_351 F668  
                                       STR_271 F3BC                                         STR_255 EF3E  
                                       STR_272 F92F                                         STR_176 FDA9  
                                       STR_168 FDA9                                         STR_184 FBFD  
                                       STR_328 FFE2                                         STR_192 FF7D  
                                       STR_360 FDCF                                         STR_352 FA84  
                                       STR_336 F8AE                                         STR_248 F79E  
                                       STR_344 F68B                                         STR_280 F4EC  
                                       STR_256 F2A0                                         STR_264 F1A2  
                                       STR_257 F92F                                         STR_185 FC46  
                                       STR_177 FDE5                                         STR_193 FF94  
                                       STR_329 FFE8                                         STR_169 FBEE  
                                       STR_337 FA45                                         STR_353 F8C9  
                                       STR_345 F77D                                         STR_265 F138  
                                       STR_281 EFB2                                         STR_273 EEC8  
                                       STR_249 EC9E                                         STR_282 F92F  
                                       STR_274 F92F                                         STR_266 F92F  
                                       STR_194 FFBA                                         STR_178 FF9E  
                                       STR_186 FB81                                         STR_338 FAD4  
                                       STR_354 F94A                                         STR_346 F6AE  
                                       STR_258 F2D2                                         STR_290 EBA6  
                                       STR_179 FCE0                                         STR_195 FF77  
                                       STR_187 FD2E                                         STR_267 FAC0  
                                       STR_339 FA5A                                         STR_259 F991  
                                       STR_355 F932                                         STR_283 F8E4  
                                       STR_347 F620                                         STR_291 F53C  
                                       STR_275 EE13                                         STR_292 F92F  
                                       STR_276 F92F                                         STR_188 FD6F  
                                       STR_356 F91A                                         STR_348 F717  
                                       STR_196 F0CC                                         STR_284 F095  
                                       STR_268 EF03                                         _CCPR2H 000FA7  
                                       STR_189 FE42                                         STR_293 FECD  
                                       STR_197 FBC1                                         STR_277 F644  
                                       STR_349 F5B1                                         STR_285 F025  
                                       STR_269 EF78                                         STR_357 EE50  
                                       STR_198 F92F                                         STR_358 FF69  
                                       STR_294 FED6                                         STR_278 F499  
                                       STR_286 F26E                                         STR_287 F92F  
                                       STR_295 FF39                                         STR_359 FB1E  
                                       STR_199 F3E9                                         STR_279 ECDD  
                                       STR_296 FEDF                                         STR_288 F75B  
                                       _CCPR2L 000FA6                                         STR_297 FEF1  
                                       STR_289 ED1C                                         STR_298 FEE8  
                                       STR_299 FF8F                                         _ADSTAT 000F65  
                                       _ADUTHH 000F6D                               ___awdiv@dividend 0206  
                                       _ADUTHL 000F6C                                         _ANSELA 000F11  
                                       ?_putch 0001                                         _ANSELB 000F19  
                                       _ANSELC 000F21                                         _T0CON0 000FD5  
                                       _T0CON1 000FD6                                         _T1GATE 000FD1  
                                       _T1GCON 000FD0                                         _T3GATE 000FCB  
                                       _T3GCON 000FCA                              __end_of_OLED_Init B0A6  
                                       _T5GATE 000FC5                                         _T5GCON 000FC4  
                                       _RC2REG 000E99                                         _RB4PPS 000EF3  
                                       _RC2STA 000E9D                                         _RB5PPS 000EF4  
                      TMR1_WriteTimer@timerVal 0200                                         _RC4PPS 000EFB  
                 __end_of_I2C2_BusCollisionISR CAA6                                         i1l1069 BF82  
                                       _ODCONA 000F0F                                         _ODCONB 000F17  
                                       _ODCONC 000F1F                                         i1l3300 6FE6  
                                       i1l1444 C714                                         i1l3301 6FE2  
                                       i1l3222 7916                                         i1l3206 7844  
                                       i1l3231 797C                                         i1l3207 7822  
                                       i1l3232 7978                                         i1l3308 706C  
                                       i1l3332 9D96                                         i1l3261 868A  
                                       i1l3272 86F8       __end_of_I2C2_WaitForLastPacketToComplete CAC6  
    __size_of_I2C2_WaitForLastPacketToComplete 000A              ?_I2C2_WaitForLastPacketToComplete 0001  
           ??_I2C2_WaitForLastPacketToComplete 0200               _I2C2_WaitForLastPacketToComplete CABC  
                                       i1l3273 86F4                                         i1l3291 6DCE  
                                       i1l3339 9E14                        __end_of_TMR3_Initialize BAFE  
                                       i2l3020 A27A                                         i2l3021 A2A2  
                                       i2l1510 41D4                                         i2l3300 7338  
                                       i2l3301 7334                                         i2l3222 7C24  
                                       i2l3206 7B52                                         i2l1550 C8C6  
                                       i2l3231 7C8A                                         i2l3207 7B30  
                                       i2l2503 22A8                                         i2l3232 7C86  
                                       i2l2505 2276                                         i2l1554 C8B0  
                                       i2l1731 9BCE                                         i2l3308 73BE  
                                       i2l3332 9ED6                                         i2l2620 2C16  
                                       i2l1732 9C08                                         i2l3261 8912  
                                       i2l2622 2BE4                                         i2l2471 2088  
                                       i2l3272 8980                                         i2l3168 BA54  
                                       i2l2536 2494                                         i2l3273 897C  
                                       i2l3097 B72C                                         i2l3178 BF66  
                                       i2l3355 C186                                         i2l3291 7120  
                                       i2l3339 9F54                                         i2l2557 27CE  
                                       i2l2469 20BA                                         i2l2682 B44A  
                                       i2l2586 2A2E                                         i2l2588 29FC  
                                       i2l2933 A82C                                         _TABLAT 000FF5  
                                i2putch@txData 0002                                         _FVRCON 000F31  
                                    ??i2_scale 0049                    ?_getCauseOfResetStringSmall 0200  
                                       _OSCFRQ 000EDE                                ?_clearI2CErrors 0001  
                                ?_OLED_Command 0001                                         _NVMDAT 000F80  
                                    ??i2_putch 0002                                         _RX2PPS 000E8D  
                             _adc_calculations 02BF                                         _TX2REG 000E9A  
                                       _TX2STA 000E9E                __size_of_LM73AcquisitionHandler 022C  
                             ?_CCP2_Initialize 0001                                ?_clearADCErrors 0001  
                              _freqMeasConvert A934                               __end_of___xxtofl 9D54  
                        I2C2_MasterRead@length 020B                      __size_ofi2_TMR1_StopTimer 0004  
        __end_of_ADCC_DischargeSampleCapacitor CAEC         __size_of_ADCC_DischargeSampleCapacitor 0008  
                _ADCC_DischargeSampleCapacitor CAE4                     ??_ADCC_GetConversionResult 0003  
                       __size_ofi2__tdiv_to_l_ 00FE                                _TMR3_WriteTimer C68A  
                               i2___fladd@aexp 0061                                 i2___fladd@bexp 0062  
                                ?_OLED_PutChar 0001          __end_of_ADCC_HasAccumulatorOverflowed CAB2  
       __size_of_ADCC_HasAccumulatorOverflowed 000C                  _ADCC_HasAccumulatorOverflowed CAA6  
                               __CFG_XINST$OFF 000000                                   __doprnt$6029 0262  
                                 __doprnt$4980 026F                                   __doprnt$4981 0271  
                                 __doprnt$4982 0273                                   __doprnt$4983 0275  
                                 __doprnt$4976 0267                                   __doprnt$4977 0269  
                                 __doprnt$4978 026B                                   __doprnt$4979 026D  
                                 i2_scale$6414 0049                               __end_of__powers_ E5F7  
         __end_of_TMR1_DefaultInterruptHandler CB38          __size_of_TMR1_DefaultInterruptHandler 0002  
                 _TMR1_DefaultInterruptHandler CB36                                  _CCP2_CallBack BF70  
              __end_of_terminal_ringBufferPull A4E2                           _getSecondsFromOnTime 97F6  
                                       ___flge A6C6                                         ___fleq B136  
                             ?_updateErrorLEDs 0001                        __end_of_TMR1_StartTimer CB24  
                                 ?_TMR1_Reload 0001                              _ADCC_ThresholdISR C56A  
                                    ??___fladd 023C                                         ___wmul C4F2  
                                    ??___fldiv 022F                                      ??___awdiv 020A  
                                    ??___flneg 0204                                 _p_i2c2_current 00D4  
                               __CFG_STVREN$ON 000000                                      ??___awmod 0204  
                            __end_of_TMR2_Stop CB18                                      ??___flmul 0216  
                    ??_I2C2_MasterReadTRBBuild 0207                                      ??___flsub 0254  
                                    ??___fltol 0234                                      ??___lldiv 0208  
                                    ??___llmod 0215                                   ?_TMR3_Reload 0001  
                                    ??___lwdiv 0209                                      ??___lwmod 0204  
                          __size_of_TMR2_Start 0004                      i2TMR3_WriteTimer@timerVal 0001  
                                    ??__doprnt 025E                               ?_TMR0_Initialize 0001  
                           ?_ADCC_ThresholdISR 0001                                  i2__doprnt@idx 007A  
                                       _fround 7D1C                                  i2__doprnt@len 008D  
                                    ?_I2C2_ISR 0001                                  i2__doprnt@val 0099  
                                       clear_0 AD46                                         clear_1 AD58  
                                       clear_2 AD64                                         clear_3 AD70  
                                       clear_4 AD80                           _eusart2RxStringReady 07F8  
                             ___awdiv@quotient 020C                                 i2___fldiv@aexp 002B  
                               i2___fldiv@bexp 002A                                ___awmod@divisor 0202  
                               i2___fldiv@sign 0023                                   __doprnt@flag 028D  
                     I2C2_Stop@completion_code 0102                                ___awmod@counter 0204  
                                       _printf BFEE                                   __doprnt@eexp 027B  
                                 __doprnt@fval 0281            __size_of_IOCBF2_SetInterruptHandler 000E  
                                 __doprnt@prec 028B                                         _strcat B79E  
                                       _strcmp BA5E                  I2C2_MasterReadTRBBuild@length 0204  
                                       _strcpy BBEE                                         _strlen C3C6  
                               i2___awdiv@sign 000C                              __end_ofi1___fladd 7A0E  
                 getCauseOfResetString@strings 01A3                              __end_ofi1___fldiv 87A0  
                              _ADCC_Initialize B73E                              __end_ofi1___flmul 70A0  
                            ??i2_EUSART2_Write 0001                                 _PMD_Initialize C784  
         __end_of_INT2_DefaultInterruptHandler CB40          __size_of_INT2_DefaultInterruptHandler 0002  
                 _INT2_DefaultInterruptHandler CB3E                        FLASH_ReadWord@flashAddr 0204  
                            __end_ofi2___fladd 7D1C                                      ??_isdigit 0200  
                                    ??_memmove 0206                              __end_ofi2___fldiv 8A28  
                            __end_ofi2___awdiv B3DA                              __end_ofi2___flneg C422  
                              ??_INT1_CallBack 0001                              __end_ofi2___awmod B53E  
                            __end_ofi2___flmul 73F2                              __end_ofi2___flsub BD0E  
                            __end_ofi2___fltol AC38                              __end_ofi2___lldiv B45C  
                          ??_ADCC_ThresholdISR 005E                              __end_ofi2___llmod B73E  
                            __end_ofi2___lwdiv BA5E                                   __mediumconst E5C2  
                            __end_ofi2___lwmod BF70                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                          _ADCC_StopConversion CB28                           _EUSART2_Transmit_ISR C2D4  
                            __end_ofi2__doprnt 2E3C                         ??_ADCC_StartConversion 0100  
                              ??_INT2_CallBack 0001                                 i2___awmod@sign 0006  
                        __size_of_getUARTError 0006                        __end_of_TMR2_StartTimer CB04  
                              ??_EUSART2_Write 0200       TMR1_SetInterruptHandler@InterruptHandler 0200  
     TMR3_SetInterruptHandler@InterruptHandler 0200       TMR2_SetInterruptHandler@InterruptHandler 0200  
     TMR0_SetInterruptHandler@InterruptHandler 0200   ADCC_SetADTIInterruptHandler@InterruptHandler 0200  
   IOCBF3_SetInterruptHandler@InterruptHandler 0200     IOCBF2_SetInterruptHandler@InterruptHandler 0200  
     INT2_SetInterruptHandler@InterruptHandler 0200       INT1_SetInterruptHandler@InterruptHandler 0200  
                             ?_PIN_MANAGER_IOC 0001                                      ??_sprintf 029C  
                      __end_of_TMR1_WriteTimer C6CA                                 i2___flmul@aexp 0039  
                               i2___flmul@bexp 003E                                      ??_strncpy 0206  
                                 ??_IOCBF2_ISR 0003                                 i2___flmul@sign 0038  
                               i2___flmul@temp 0043                                   ??_IOCBF3_ISR 0003  
                               i2___flmul@prod 003F                  __size_of_INTERRUPT_Initialize 0020  
                              _eusart2RxBuffer 0480                               _OLED_update_flag 02D7  
                                   ___flge@ff1 024C                                     ___flge@ff2 0250  
                               ??_OLED_Command 0210                               ?_TMR1_Initialize 0001  
                      __end_of_TMR5_Initialize C0E4                                   ___xxtofl@arg 0248  
                            __end_ofi2_isdigit C768                                   ___xxtofl@exp 0247  
              ?_INTERRUPT_InterruptManagerHigh 0001               ??_INTERRUPT_InterruptManagerHigh 00AD  
                             _OLED_update_time 00FD                              _SYSTEM_Initialize C02C  
                                 ___xxtofl@val 023E                                     ___fleq@ff1 0200  
                                   ___fleq@ff2 0204                                _eusart2TxBuffer 04C0  
                                   __accesstop 0060                        __end_of__initialization AD86  
                               i2___fltol@exp1 0057                                      ?_INT1_ISR 0001  
                                   ___flneg@f1 0200                                      ?_INT2_ISR 0001  
                       _qi_isns_average_buffer 0400                             ?_SYSTEM_Initialize 0001  
                          __size_ofi1___xxtofl 0144                                  ___rparam_used 000001  
    __end_of_ADCC_GetCurrentCountofConversions CB30     __size_of_ADCC_GetCurrentCountofConversions 0004  
          ??_ADCC_GetCurrentCountofConversions 0001             ?_ADCC_GetCurrentCountofConversions 0001  
            _ADCC_GetCurrentCountofConversions CB2C                                     ___fltol@f1 0230  
                            ?_I2C2_MasterWrite 0209                                _TMR5_WriteTimer C66A  
                               ??_OLED_PutChar 0210                             i2__tdiv_to_l_@exp1 0011  
                            i2___llmod@divisor 0012                             i2__tdiv_to_l_@cntr 0010  
                    __end_of_ADCC_ThresholdISR C592                                 ?_CCP2_CallBack 0154  
    LM73TempSensorInitialize@output_data_array 0210                              i2___llmod@counter 0016  
                         ?_ADCC_StopConversion 0001                             i2__tdiv_to_l_@quot 000C  
            terminal_ringBufferPull@charNumber 0512                            __size_ofi2___xxtofl 0140  
                        ?_getSecondsFromOnTime 020D                   ?_ADC_acquisitionTimerHandler 0001  
                           ??_I2C2_MasterWrite 0210                     __end_of_getMajorRevisionID C120  
                           i2___lwmod@dividend 0001                                 __pcstackCOMRAM 0001  
                           i2___lldiv@dividend 0001               __end_of_LM73TempSensorInitialize 93D6  
                  __size_of_getHoursFromOnTime 00F0                                   __pidataBANK0 CB30  
                                 __pidataBANK1 C930                                   __pidataBANK2 C942  
                          ??_SYSTEM_Initialize 0205                        __end_of_TMR3_StartTimer CB20  
                                    ?_TMR0_ISR 0001                                      ?_TMR1_ISR 0001  
                                    ?_TMR2_ISR 0001                  ?_TMR1_DefaultInterruptHandler 0001  
                                    ?_TMR3_ISR 0001                                  __end_of_scale 5ED4  
               ?_EUSART2_SetTxInterruptHandler 0200                                 _i2c2_trb_count 00DC  
                                __end_of_putch C8E0                                     ??_I2C2_ISR 0103  
                             ?_TMR2_Initialize 0001                       __size_of_getCauseOfReset 005A  
                               _QI_charge_time 02D3                         __end_of_PMD_Initialize C7A0  
                       _LM73AcquisitionHandler 93D6                          _getCauseOfResetString C306  
                           __end_of_IOCBF2_ISR C4CA                                      ?i2___flge 0001  
                           __end_of_IOCBF3_ISR C4A0                                      ?i2___fleq 0001  
                         __end_of_EUSART2_Read BFEE                                   _getUARTError CAEC  
                                    ?i2___wmul 0001                                  i2__tdiv_to_l_ A1FA  
                  __size_of_EXT_INT_Initialize 0038                                     __div_to_l_ A2F8  
                       ??_getMinutesFromOnTime 0211                       _printCurrentMeasurements 503A  
              __size_of_getStringSecondsAsTime 03A6                             __size_of_getUserID 0034  
                                    ?i2_fround 0045                          ?_EUSART2_Transmit_ISR 0001  
                  __size_of_getMinorRevisionID 0026               __end_of_INT2_SetInterruptHandler CA12  
                  __end_of_terminalClearScreen C994                       _I2C2_MasterWriteTRBBuild BD54  
                ?_INT2_DefaultInterruptHandler 0001                                      ?i2_printf 00A4  
       __end_of_IOCBF3_DefaultInterruptHandler CB3C        __size_of_IOCBF3_DefaultInterruptHandler 0002  
               _IOCBF3_DefaultInterruptHandler CB3A                    ADCC_StartConversion@channel 0100  
                            ?_OLED_WriteString 0221                                _clearUARTErrors CA82  
                                   __doprnt@ap 025C                                     __doprnt@cp 0277  
                 I2C2_MasterWriteTRBBuild@ptrb 0200                                     __doprnt@pb 0258  
                      __end_of_freqMeasConvert A9FE                                __div_to_l_@exp1 020D  
                              __div_to_l_@cntr 020C                                        ??_scale 022B  
                    __end_of_SYSTEM_Initialize C06A                                __div_to_l_@quot 0208  
                      __end_of_TMR3_WriteTimer C6AA                                        ??_putch 0201  
                           i2___lldiv@quotient 0009                                   ??_OLED_Clear 0221  
                           ??_OLED_WriteString 0223                                  _eusart2RxHead 00DE  
                                _eusart2TxHead 0192                                     __pbssBANK0 00B9  
                                   __pbssBANK1 0161                                     __pbssBANK2 02BF  
                                   __pbssBANK3 0300                                     __pbssBANK4 0400  
                                _eusart2RxTail 018F                                  _eusart2TxTail 0191  
                             i2__tdiv_to_l_@f1 0001                               i2__tdiv_to_l_@f2 0005  
                             ?_TMR3_Initialize 0001               __size_of_printErrorHandlerStatus 01F4  
              getHoursFromOnTime@input_seconds 020D                                     ??_INT1_ISR 0001  
                                   ??_INT2_ISR 0001                                 i1___xxtofl@arg 010A  
                     _floatToEngineeringFormat 49F6                                 i1___xxtofl@exp 0109  
                               i1___xxtofl@val 0100                                  __div_to_l_@f1 0200  
                                __div_to_l_@f2 0204                              _freq_meas_results 0168  
                        EUSART2_Read@readValue 0200                          ??_ADCC_StopConversion 0001  
         __size_of_getNXQChargeStateStringCaps 005C                               ??_FVR_Initialize 0200  
                    getMinutesFromOnTime@hours 0218                                  _error_handler 00B9  
                    getMinutesFromOnTime@years 0216                                        ?___flge 024C  
                                      ?___fleq 0200               __end_of_TMR0_SetInterruptHandler C9E8  
               ?_ADCC_DischargeSampleCapacitor 0001              terminal_ringBufferPull@index_4555 0514  
                   ??_OLED_UpdateFromRAMBuffer 0223               __end_of_TMR3_SetInterruptHandler C9BE  
                                      ?___wmul 0200                               ?_TMR1_StartTimer 0001  
                                   ??_TMR0_ISR 005F                                     ??_TMR1_ISR 0003  
                              __CFG_PPS1WAY$ON 000000                                     ??_TMR2_ISR 0101  
                                   ??_TMR3_ISR 0102                        __end_of_ADCC_Initialize B79E  
                  __size_of_OLED_updateHandler 1246                                        _CCP2CAP 000FA9  
                                      _CCP2CON 000FA8                 ?_ADCC_HasAccumulatorOverflowed 0001  
                                      _ADFLTRH 000F73                                        _ADFLTRL 000F72  
                                      _CCP2PPS 000EB0                                        ?_fround 0227  
                                      _ADPREVH 000F62                                        _ADPREVL 000F61  
         __end_of_ADCC_SetADTIInterruptHandler CA4A          __size_of_ADCC_SetADTIInterruptHandler 000E  
                 _ADCC_SetADTIInterruptHandler CA3C             OLED_UpdateFromRAMBuffer@char_index 0223  
                                      _ADSTPTH 000F69                                        _ADSTPTL 000F68  
                         _I2C2_BusCollisionISR CA9A                                        ?_printf 03EB  
                              ?_PMD_Initialize 0001                            _ADCC_GetFilterValue C908  
            getCauseOfResetStringSmall@strings 02ED                                 ?i2__tdiv_to_l_ 0001  
                                   ??i2___flge 0009                             __end_of_OLED_Clear C0A8  
                                   ??i2___fleq 0009                                        ?_strcat 0200  
                                      ?_strcmp 0200                                        ?_strcpy 0203  
                                      ?_strlen 0200                                 _FLASH_ReadByte C7F4  
                      __size_of_TMR1_StopTimer 0004                                     ??i2___wmul 0005  
                               _FLASH_ReadWord BEAA                          _heartbeatTimerHandler 9AC0  
                   ??_INT1_SetInterruptHandler 0203                                        i1l13320 779A  
                                      i1l13312 777A                                        i1l13308 7776  
                                      u2511_41 A236                                        i1l13414 793A  
                                      i1l13430 795A                                        i1l13406 7906  
                                      i1l13350 77D6                                        i1l21510 9106  
                                      i1l13424 7950                                        i1l13512 8584  
                                      i1l21440 8FE0                                        i1l21432 8FC6  
                                      i1l13450 79C2                                        i1l13362 7830  
                                      i1l13610 8798                                        i1l13602 878A  
                                      i1l13530 85D2                                        i1l21530 914A  
                                      i1l21514 9110                                        i1l13364 7834  
                                      i1l13284 772E                                        i1l13524 85BC  
                                      i1l13516 8588                                        i1l13700 6F8E  
                                      i1l21460 904E                                        i1l21428 8FB2  
                                      i1l13462 79F0                                        i1l13630 6D7A  
                                      i1l15126 BF72                                        i1l21526 913C  
                                      i1l21446 9004                                        i1l13464 79F2  
                                      i1l13288 7732                                        i1l13608 8796  
                                      i1l13632 6D7E                                        i1l15136 BF9E  
                                      i1l20904 C83C                                        i1l21528 9142  
                                      i1l21536 9156                                        i1l13458 79E8  
                                      i1l13386 788A                                        i1l13378 7868  
                                      i1l13562 8688                                        i1l13538 85EA  
                                      i1l13730 7048                                        i1l13706 6FAC  
                                      i1l13650 6DBE                                        i1l13634 6D8E  
                                      i1l13388 788E                                        i1l13396 78A0  
                                      i1l13556 8662                                        i1l13548 863A  
                                      i1l13492 8544                                        i1l15228 C720  
                                      i1l13574 86BE                                        i1l13742 708A  
                                      i1l13726 702A                                        i1l13568 86A0  
                                      i1l13496 8548                                        i1l13648 6DBA  
                                      i1l13760 9DC4                                        i1l21488 90AC  
                                      i1l13594 873C                                        i1l13658 6DEC  
                                      i1l13762 9DCA                                        i1l13754 9DA6  
                                      i1l21498 90D0                                        i1l13772 9E3A  
                                      i1l13764 9DD6                                        i1l13598 8760  
                                      i1l13790 9E86                                        i1l13774 9E46  
                                      i1l13766 9DFC                                        i1l12958 C73E  
                                      i1l20896 BEA4                                        i1l15626 C2FC  
                                      i2l21000 40DC                                        i2l21010 41D8  
                                      i2l20202 1A28                                        _INT1PPS 000EA2  
                                      i2l21100 49F0                                        i2l20212 1A84  
                                      i2l20140 17B4                                        i2l20132 176E  
                                      u2509_41 A20A                                        i2l21014 42B2  
                                      i2l20302 1ECC                                        i2l20230 1B76  
                                      i2l20206 1A3E                                        i2l20142 17BA  
                                      i2l20126 1728                                        i2l21032 44DE  
                                      i2l21040 4574                                        i2l20312 1F34  
                                      i2l20232 1B8A                                        i2l20224 1B26  
                                      i2l20208 1A48                                        i2l20216 1AAE  
                                      i2l20136 179C                                        i2l21120 9B0C  
                                      i2l21042 4578                                        i2l21018 43B0  
                                      i2l20322 1FB0                                        i2l20250 1C52  
                                      i2l20234 1BAE                                        i2l20218 1AC2  
                                      i2l20242 1BC6                                        i2l20154 1830  
                                      i2l20138 17AE                                        i2l20146 17C2  
                                      i2l12170 C7CE                                        i2l21130 9B76  
                                      i2l21122 9B1E                                        _INT2PPS 000EA3  
                                      i2l20404 2282                                        i2l20316 1FAC  
                                      i2l20244 1C3C                                        i2l20180 1986  
                                      i2l20172 1948                                        i2l12156 C7EA  
                                      i2l20430 2402                                        i2l20414 22E8  
                                      i2l20334 2016                                        i2l20238 1BC0  
                                      i2l20190 19C6                                        i2l20182 198A  
                                      i2l20174 1974                                        i2l21056 46A6  
                                      i2l21064 473C                                        i2l21080 48A4  
                                      i2l20600 2A8A                                        i2l20512 2852  
                                      i2l20504 2804                                        i2l20440 2470  
                                      i2l20192 19D0                                        i2l20184 198E  
                                      i2l20168 18F6                                        i2l21136 9BBC  
                                      i2l21128 9B64                                        i2l21090 48F6  
                                      i2l21066 4740                                        i2l21082 48D6  
                                      i2l20602 2A98                                        i2l20506 2838  
                                      i2l20434 243E                                        i2l20426 23CA  
                                      i2l20418 2304                                        i2l20354 2094  
                                      i2l20338 2030                                        i2l20290 1E32  
                                      i2l20282 1DB8                                        i2l20274 1D3A  
                                      i2l20258 1CB0                                        i2l20194 19D6  
                                      i2l20178 1982                                        i2l21076 489E  
                                      i2l20620 2B56                                        i2l20612 2B08  
                                      i2l20532 2898                                        i2l20380 21A6  
                                      i2l20428 23F6                                        i2l20372 2162  
                                      i2l20364 20FA                                        i2l20348 205A  
                                      i2l21086 48E6                                        i2l20614 2B12  
                                      i2l20526 2894                                        i2l20518 2856  
                                      i2l20542 28D6                                        i2l20470 2634  
                                      i2l20462 256E                                        i2l20454 24E2  
                                      i2l20446 2498                                        i2l20438 2468  
                                      i2l20366 2116                                        i2l20390 2214  
                                      i2l20286 1DE6                                        i2l20632 2BB6  
                                      i2l20624 2B80                                        i2l20608 2ADE  
                                      i2l20552 292C                                        i2l20544 28EC  
                                      i2l20480 26FC                                        i2l20472 2660  
                                      i2l20384 21E2                                        i2l20376 218C  
                                      i2l20368 2126                                        i2l21360 ADA0  
                                      i2l20570 299C                                        i2l20474 26B4  
                                      i2l20458 250C                                        i2l20378 2194  
                                      i2l20298 1E9E                                        i2l20660 2D68  
                                      i2l20652 2C74                                        i2l20572 29A4  
                                      i2l20564 2970                                        i2l20548 290C  
                                      i2l20484 2726                                        i2l20476 26C0  
                                      i2l20388 220C                                        i2l20654 2CF4  
                                      i2l20662 2D7E                                        i2l20638 2BF0  
                                      i2l20670 2DE4                                        i2l20582 29CE  
                                      i2l20566 2978                                        i2l20558 294E  
                                      i2l20494 2782                                        i2l20486 272E  
                                      i2l20398 2248                                        i2l21390 AE2C  
                                      i2l20648 2C56                                        i2l20496 27B4  
                                      i2l20488 2738                                        i2l21376 ADE4  
                                      i2l21368 ADBE                                        i2l20666 2DBA  
                                      i2l20668 2DD6                                        i2l20588 2A08  
                                      i2l15236 C896                                        i2l20598 2A6E  
                                      i2l14800 88C2                                        i2l14820 8928  
                                      i2l14814 8910                                        i2l14808 88EA  
                                      i2l14744 87CC                                        i2l13944 C7AE  
                                      i2l14850 89E8                                        i2l14826 8946  
                                      i2l19010 7C68                                        i2l14860 8A1E  
                                      i2l14764 880C                                        i2l14748 87D0  
                                      i2l19004 7C5E                                        i2l20996 408E  
                                      i2l14862 8A20                                        i2l14854 8A12  
                                      i2l14846 89C4                                        i2l14790 8872  
                                      i2l14782 885A                                        i2l19030 7CD0  
                                      i2l14776 8844                                        i2l14768 8810  
                                      i2l19042 7CFE                                        i2l19044 7D00  
                                      i2l19142 72FE                                        i2l19070 70E0  
                                      i2l19038 7CF6                                        i2l19136 72E0  
                                      i2l19162 737C                                        i2l19066 70CC  
                                      i2l19084 710C                                        i2l19068 70D0  
                                      i2l19166 739A                                        i2l19094 713E  
                                      i2l19086 7110                                        i2l19178 73DC  
                                      i2l19610 A54E                                        i2l19514 8238  
                                      i2l18730 BF26                                        i2l18810 B534  
                                      i2l18802 B51C                                        i2l18900 7AA8  
                                      i2l18820 BA22                                        i2l19508 8150  
                                      i2l18732 BF28                                        i2l19630 A59A  
                                      i2l18822 BA2A                                        i2l18718 BEF2  
                                      i2l18742 B36A                                        i2l18806 B526  
                                      i2l19534 60B4                                        i2l19712 ABE6  
                                      i2l19640 A5B2                                        i2l18832 BA4A  
                                      i2l18840 BF3C                                        i2l19552 62BC  
                                      i2l19528 6008                   ?_terminalTextAttributesReset 0001  
                                      i2l18930 7AE4                                        i2l19730 AC26  
                                      i2l19722 ABFE                                        i2l19570 B408  
                                      i2l19802 B71E                                        i2l19642 A5BE  
                                      i2l19634 A5AA                                        i2l19618 A57E  
                                      i2l18842 BF44                                        i2l18754 B390  
                                      i2l18770 B3C2                                        i2l19546 6210  
                                      i2l19538 60E4                                        i2l19652 B22A  
                                      i2l19724 AC0A                                        i2l19716 ABF6  
                                      i2l19580 B43C                                        i2l19740 A226  
                                      i2l18756 B398                                        i2l18748 B37A  
                                      i2l18942 7B3E                                        i2l19830 9F3C  
                                      i2l19590 A500                                        i2l18774 B3D0  
                                      i2l18766 B3B8                                        i2l18790 B4EE  
                                      i2l19672 A816                                        i2l19664 A7CC  
                                      i2l18944 7B42                                        i2l18864 7A3C  
                                      i2l19824 9F04                                        i2l19656 B248  
                                      i2l19648 B1F6                                        i2l19568 B3FC  
                                      i2l18848 BF5C                                        i2l19826 9F0A  
                                      i2l19818 9EE6                                        i2l18794 B4FC  
                                      i2l18786 B4E2                                        i2l19668 A800  
                                      i2l18892 7A88                                        i2l18868 7A40  
                                      i2l19836 9F7A                                        i2l19828 9F16  
                                      i2l19780 A2CC                                        i2l18796 B504  
                                      i2l19686 C410                                        i2l19678 A864  
                                      i2l18966 7B98                                        i2l18958 7B76  
                                      i2l19854 9FC6                                        i2l19838 9F86  
                                      i2l18968 7B9C                                        i2l18976 7BAE  
                                      i2l18888 7A84                                        i2l19696 AB9C  
                                      i2l19776 A2BC                                        i2l18994 7C48  
                                      i2l18986 7C14                                        i2l19794 B6EA  
                                      i2l19786 A2D4                                        i2l19866 C760  
                                      i2l19796 B6F6                                        i2l19788 A2E0  
                                    ?___xxtofl 023E              I2C2_ISR@i2c_10bit_address_restart 00DA  
                                      _SP2BRGH 000E9C                                     ??i2_fround 0049  
                                      _SP2BRGL 000E9B                                        _OLED_YX BE22  
                  __end_of_leftCapTouchHandler C8CC                                        _OSCCON1 000ED8  
                                      _OSCCON3 000EDA                         I2C2_MasterRead@address 020C  
                  __end_of_EUSART2_Receive_ISR AE34             __end_of_IOCBF2_SetInterruptHandler CA04  
                   _IOCBF2_SetInterruptHandler C9F6                                        _TBLPTRH 000FF7  
                                      _TBLPTRL 000FF6                                        _TBLPTRU 000FF8  
                                    _I2C2_Stop BE66                                     ??i2_printf 005E  
                                      _NVMADRH 000F7F                                        _NVMADRL 000F7E  
                                      _OSCTUNE 000EDD                                        _NVMCON2 000F82  
                                      _SSP2ADD 000E93                  __size_of_rightCapTouchHandler 0016  
                     getMinutesFromOnTime@days 0217                                        _SLRCONA 000F0E  
                                      _SLRCONB 000F16                                        _SLRCONC 000F1E  
                                      _SSP2BUF 000E92                                   ??_TMR2_Start 0001  
                      __size_of_TMR2_StopTimer 0006                              ?_QIIdleIOCHandler 0001  
             __size_of_getNXQChargeStateString 005C                               ?_TMR2_StartTimer 0001  
                getStringSecondsAsTime@minutes 03EA                  getStringSecondsAsTime@seconds 03E6  
                              _I2C2_MasterRead BB9E                               ?_TMR1_WriteTimer 0200  
                      __end_of_TMR5_WriteTimer C68A                                _I2C2_Initialize C1D0  
                           ??_QIIdleIOCHandler 0003                         __size_ofi1_TMR3_Reload 000E  
                                      i2_scale 5ED4                               ?_TMR5_Initialize 0001  
                       I2C2_MasterRead@trBlock 0193                           ?_ADCC_GetFilterValue 0001  
                                      i2_putch CADA                              ?i1_TMR3_StopTimer 0001  
                      __size_of_TMR3_StopTimer 0004                               i2_TMR1_StopTimer CB18  
                              ??_CCP2_CallBack 0156                                i2___fladd@signs 0060  
                       _getStringSecondsAsTime 62EC                                  ??_getI2CError 0200  
                           ??i1_TMR3_StopTimer 0100            getStringSecondsAsTime@input_seconds 02A3  
                       ??_getSecondsFromOnTime 0211                                  ??_getADCError 0200  
                            __end_of__npowers_ E62B                                        __Hparam 0000  
                      ??_freqMeasStartCaptures 0200                     __size_of_ADCC_ThresholdISR 0028  
                                   _scale$6028 022B                                        __Lparam 0000  
                            __end_of_getUserID C23A                          _ADCC_ClearAccumulator CAF8  
                   ??_TMR2_SetInterruptHandler 0203                       ??_terminalTextAttributes 02BB  
                   __CFG_RSTOSC$HFINTOSC_64MHZ 000000                                __size_of___flge 00D2  
                              __size_of___fleq 008C                                        ___fladd 73F2  
                                      ___fldiv 828C                        getHoursFromOnTime@hours 0215  
                                      ___awdiv B24C                                        ___flneg C396  
                                      ___awmod B45C                                 i2__doprnt$6415 0076  
                                      ___flmul 69F8                               ?_TMR3_StartTimer 0001  
                               i2__doprnt$4980 0083                                 i2__doprnt$4981 0085  
                               i2__doprnt$4982 0087                                 i2__doprnt$4983 0089  
                               i2__doprnt$4976 007B                                        ___flsub BC7E  
                               i2__doprnt$4977 007D                                 i2__doprnt$4978 007F  
                                      ___fltol AAC2                                 i2__doprnt$4979 0081  
                                      ___lldiv B2D2                                __size_of___wmul 0028  
                      getHoursFromOnTime@years 0216                                        ___llmod B53E  
                                      ___lwdiv B966                                        ___lwmod BDDE  
                       __end_of_FLASH_ReadByte C80E                                        __doprnt 0000  
                       ?_getCauseOfResetString 0200                             __end_of_TMR2_Start CB28  
                        ?_I2C2_BusCollisionISR 0001                           __size_of_TMR1_Reload 000E  
                       __end_of_FLASH_ReadWord BEEC                                        __pcinit ACE6  
                              __size_of_fround 02C2                                        __ramtop 0F00  
                         __end_of_OLED_Command B6D8                       _LM73TempSensorInitialize 919E  
                    I2C2_MasterTRBInsert@count 0205                           __size_of_TMR3_Reload 000E  
                                 ??i1___xxtofl 0104                                        __ptext0 8CAC  
                                      __ptext1 A3EE                                        __ptext2 557A  
                                      __ptext3 BA5E                                        __ptext4 9602  
                                      __ptext5 503A                                        __ptext6 C954  
                                      __ptext7 6692                                        __ptext8 B5A6  
                                      __ptext9 62EC                      I2C2_MasterTRBInsert@pflag 0202  
                              __size_of_printf 003E                        __end_of_clearUARTErrors CA8E  
               ??_TMR1_DefaultInterruptHandler 0001                  ?_ADCC_SetADTIInterruptHandler 0200  
                      __size_of_TMR5_StopTimer 0004                                __size_of_strcat 005E  
                              __size_of_strcmp 0050                                  i2_fround$6412 004D  
                                i2_fround$6413 0049                                __size_of_strcpy 0048  
                              __size_of_strlen 002E                              __end_of_hexpowers E64B  
                                    _T1CONbits 000FCF                         getCauseOfResetString@r 0202  
                                  ?__div_to_l_ 0200                                        _dpowers E94B  
                        _OSCILLATOR_Initialize C85C                         ??_EUSART2_Transmit_ISR 0100  
                                    _T2CONbits 000FBD                                   __size_of_abs 002A  
                                 i2fround@prec 0051                                        _isdigit C648  
                               i2__doprnt@flag 00A1                                   ??i2___xxtofl 0009  
                                      _memmove AC38                                 i2__doprnt@eexp 008F  
                                   ??___xxtofl 0242                                      _T3CONbits 000FC9  
                               i2__doprnt@fval 0095                               ___awmod@dividend 0200  
                               i2__doprnt@prec 009F              __size_of_TMR1_SetInterruptHandler 000E  
                         __end_of_OLED_PutChar AAC2                       ??_PIN_MANAGER_Initialize 0203  
                    ?_TMR1_SetInterruptHandler 0200                                      _T2HLTbits 000FBE  
                                    _IOCBFbits 000F12                                      _T5CONbits 000FC3  
                            ??_getCauseOfReset 0200                                     ?_I2C2_Stop 0001  
                              _LM73_start_flag 02D9                                      _IOCBNbits 000F13  
                        _I2C2_FunctionComplete C828                  ??_terminalTextAttributesReset 02B9  
                                    _IOCBPbits 000F14           __size_of_ADC_acquisitionTimerHandler 001A  
                             ??_clearI2CErrors 0201                               ??_clearADCErrors 0201  
                   __size_of_SYSTEM_Initialize 003E                               ?_freqMeasConvert 0001  
                                      _sprintf BC36                                  __doprnt@width 0289  
                _floatToEngineeringFormat$6025 02B5                  _floatToEngineeringFormat$4522 02A7  
                _floatToEngineeringFormat$4523 02AB                          i2EUSART2_Write@txData 0001  
                  __size_of_QIChargeIOCHandler 001C                                 __pintcode_body A868  
                                      _strncpy B5A6                           end_of_initialization AD86  
                             ?_TMR3_WriteTimer 0200                                        ftoa@buf 03C0  
                       __size_ofi2_TMR1_Reload 000E                                      _T2RSTbits 000FC0  
                     _INT2_SetInterruptHandler CA04                 ??_INT2_DefaultInterruptHandler 0001  
                        ??_ADCC_GetFilterValue 0003                                      _PCON0bits 000FD7  
                       __size_ofi2_TMR3_Reload 000E                                        int_func A868  
                                    i1u1520_20 784C                            i2___wmul@multiplier 0001  
                                    i1u1515_20 77F8                                      i1u1516_20 7808  
                                    i1u1541_20 79CE                                      i1u1533_20 795E  
                                    i1u1517_20 780A                                      i1u1535_20 7972  
                                    i1u1561_20 86EE                                      i1u1580_20 6FDC  
                                    i1u1565_20 874A                                      i1u1566_20 876E  
                                    i1u1575_20 6DDA                                      i1u1584_20 7038  
                                    i1u1576_20 6F50                       __size_of_CCP2_CaptureISR 001A  
                                    i1u1576_25 6F46                                      i1u1585_20 7056  
                                    i1u1593_20 9E50                                 i2___xxtofl@arg 000F  
                                    _OLED_Init B00E                                      i1u1893_28 C25A  
                                    i1u1878_28 C52E                                 i2___xxtofl@exp 000E  
                               i2___xxtofl@val 0005                                      i2u2410_40 7C6C  
                                    i2u2412_40 7C80                                      i2u2430_40 72A2  
                                    i2u2502_40 AB8A                                      i2u2510_40 A214  
                                    i2u2430_45 7298                                      i2u2503_40 ABBA  
                                    i1u2895_28 007A                                      i2u2503_45 ABB0  
                                    i2u1609_40 CAAE                                      i2u1800_48 C612  
                                    i2u2434_40 732E                                      i2u2418_40 7CDC  
                                    i2u2602_40 1E9E                                      i2u2507_40 AC10  
                                    i2u1802_48 C5EE                                      i2u2429_40 712C  
                                    i2u2517_40 A2E6                                      i2u2381_40 BF48  
                                    i2u2612_48 2072                                      i2u2605_40 1FEC  
                                    i2u2438_40 738A                                      i2u2374_40 B508  
                                    i2u2622_40 2222                                      i2u2621_48 21CC  
                                    i2u2439_40 73A8                                      i2u2527_40 9F90  
                                    i2u2519_40 B6FA                                      i2u2630_48 22D2  
                                    i2u1806_48 C4B0                                      i2u1806_49 C4C4  
                                    i2u2392_40 7B06                                      i2u2368_40 B39C  
                                    i2u2393_40 7B16                                      i2u2640_48 24CC  
                                    i2u2632_48 23B2                                      i2u2616_48 20E4  
                                    i2u1808_48 C486                                      i2u2721_40 9B86  
                                    i2u1808_49 C49A                                      i2u2394_40 7B18  
                                    i2u2706_40 41CE                                      i2u2378_40 BA2E  
                                    i2u2570_40 18BC                                      i2u2642_48 261C  
                                    i2u2626_48 2260                                      i2u2618_48 214C  
                                    i2u2571_40 18DE                                      i2u2715_40 9AC8  
                                    i2u2715_46 9ACA                                      i2u2571_47 18D4  
                                    i2u2484_40 B40C                                      i2u2492_40 A5C4  
                                    i2u2636_40 247E                                      i2u2635_48 2428  
                                    i2u2564_40 17E4                                      i2u2563_48 1758  
                                    i2u2564_47 17DA                                      i2u2397_40 7B5A  
                                    i2u2637_40 248E                                      i2u2573_40 192C  
                                    i2u2717_40 9AFC                                      i2u2573_47 1922  
                                    i2u2486_40 A4EE                                      i2u2645_48 26E6  
                                    i2u2590_40 1BF6                                      i2u2574_40 196A  
                                    i2u2566_40 181E                                      i2u2590_47 1BEC  
                                    i2u2574_47 1960                                      i2u2566_47 1814  
                                    i2u2495_40 B244                                      i2u2719_40 9B2E  
                                    i2u1870_48 C28E                                      i2u1792_40 8976  
                                    i2u2751_48 C57E                                      i2u2680_40 2B90  
                                    i2u2583_48 1A6E                                      i2u2568_40 1878  
                                    i2u2568_47 186E                                      i2u2672_48 2A58  
                                    i2u2577_40 1A04                                      i2u2569_40 18B4  
                                    i2u2745_40 ADD4                                      i2u2577_47 19FA  
                                    i2u2569_47 18AA                                      i2u2578_40 1A0A  
                              ___lldiv@divisor 0204                                      i2u2691_40 2DF6  
                                    i2u2690_48 2DA4                                      i2u2587_40 1B1C  
                                    i2u2586_48 1AE8                                      i2u2586_49 1B1E  
                                    i2u2587_47 1B12                                      i2u1796_40 89D2  
                                    i2u2692_40 2E26                                      i2u2675_48 2AC8  
                                    i2u2588_40 1B60                             __end_ofi1___xxtofl 9E98  
                                    i2u2692_47 2E1C                                      i2u2588_47 1B56  
                                    i2u1797_40 89F6                                      i2u2693_40 2E32  
                                    i2u2684_48 2BCE                                      i2u2677_40 2B1A  
                                    i2u2668_48 29E6                                      i2u2598_40 1DF8  
                                    i2u2749_48 C556                                      i2u2599_40 1E44  
                                    i2u2679_48 2B40                                      i2u2688_48 2C40  
                                    i2u2876_48 A8BC                                ___lldiv@counter 020C  
                           _EUSART2_Initialize B60C                    getDeviceIDString@inputDevID 020D  
                              i2_EUSART2_Write BEEC                                  ??_getDeviceID 020D  
                        I2C2_MasterWrite@pdata 0209                             _p_i2c2_trb_current 00D6  
                        I2C2_MasterWrite@pflag 020E                                        printf@f 03EB  
                           __end_ofi2___xxtofl 9FD8                                        postdec1 000FE5  
                                      postdec2 000FDD                         I2C2_ISR@i2c_bytes_left 00DB  
                                      postinc0 000FEE                                        postinc2 000FDE  
                        __size_of_EUSART2_Read 003E                ADC_PostProcessingHandler@i_3369 007A  
                             ?_ADCC_Initialize 0001                                 __tdiv_to_l_@f1 0200  
                               __tdiv_to_l_@f2 0204                          _terminalSetCursorHome C974  
                          __end_of_getI2CError C4F2                                ??i2__tdiv_to_l_ 0009  
                __size_of_I2C2_MasterTRBInsert 00A2                                        strcmp@r 0206  
                  __end_of_QIErrorTimerHandler C8A0                          __CFG_WDTCPS$WDTCPS_11 000000  
                              ?_FLASH_ReadByte 0200                            ?_EUSART2_Initialize 0001  
                                i1_TMR3_Reload CA4A                                  ??_LM73Convert 024C  
                          __end_of_getADCError C88A                                        strlen@s 0200  
                 terminal_ringBufferPull@index 0516                                  ??__tdiv_to_l_ 0208  
                              ?_FLASH_ReadWord 0204                       _TMR0_SetInterruptHandler C9DA  
                       ?_heartbeatTimerHandler 0001                     CCP2_CallBack@capturedValue 0154  
                        _INT1_InterruptHandler 0183                                      _PORTBbits 000F8E  
                                    _TMR2_Stop CB14                       _TMR3_SetInterruptHandler C9B0  
                           LM73Convert@QI_Conv 024F                         getDaysFromOnTime@years 0216  
                            __size_of_I2C2_ISR 0276                     __end_of_getYearsFromOnTime C366  
                     ?_terminal_ringBufferPull 0001                        __end_of_I2C2_MasterRead BBEE  
                                  ___fladd@grs 0243                        _IOCBF2_InterruptHandler 017A  
                      __end_of_I2C2_Initialize C206                           __CFG_WDTCCS$LFINTOSC 000000  
                                ___xxtofl@sign 0246                                      i1___fladd 7700  
                                    i1___fldiv 8516                               _next_adc_channel 00FE  
                                    i1___flmul 6D4C                                    ___fldiv@grs 023A  
                                  ___fldiv@rem 0233                                i2___fltol@sign1 0056  
                 ??_IOCBF3_SetInterruptHandler 0203                                      i2___fladd 7A0E  
                                    i2___fldiv 87A0                                      i2___awdiv B356  
                                    i2___flneg C3F4                                      i2___awmod B4CE  
                                    i2___flmul 70A0                                      i2___flsub BCC6  
                                    i2___fltol AB7E                               __CFG_FEXTOSC$OFF 000000  
                            i2___lwdiv@divisor 0008                                      i2___lldiv B3DA  
                                    i2___llmod B6D8                                      i2___lwdiv BA0C  
                                    i2___lwmod BF2E                              i2___lwdiv@counter 000A  
                             ?_TMR5_WriteTimer 0200                           ??_EUSART2_Initialize 0203  
                      _printErrorHandlerStatus 9602                                      i2__doprnt 1724  
                  getMinutesFromOnTime@minutes 0215                        TMR5_WriteTimer@timerVal 0200  
                  getSecondsFromOnTime@minutes 0219                    getSecondsFromOnTime@seconds 0215  
                       __size_of_ringBufferLUT 0526                              OLED_WriteString@s 0221  
                                  ___flmul@grs 021C                                    _CCP2CONbits 000FA8  
                                 _EUSART2_Read BFB0                             i2___llmod@dividend 000E  
                                   ?_OLED_Init 0001                             i2___awdiv@dividend 0007  
                       ?_ADCC_ClearAccumulator 0001                                      i2_isdigit C74A  
         __size_of_terminalTextAttributesReset 0010                            __size_of__div_to_l_ 00F6  
                            __size_of_INT1_ISR 000A                             _adc_result_scaling 00C1  
                            __size_of_INT2_ISR 000A         terminalTextAttributes@foreground_color 0500  
              __size_of_terminalTextAttributes 0366                        ?_LM73AcquisitionHandler 0001  
                   ??_printCurrentMeasurements 02BB                       __size_of_CCP2_Initialize 0022  
                 __end_of_INTERRUPT_Initialize C6EA           __end_of_TMR2_DefaultInterruptHandler CB36  
        __size_of_TMR2_DefaultInterruptHandler 0002                   _TMR2_DefaultInterruptHandler CB34  
                       ??_I2C2_BusCollisionISR 0100                 ??_ADCC_DefaultInterruptHandler 0001  
                               __end_of___flge A798                                 __end_of___fleq B1C2  
                               ?i1_TMR3_Reload 0001                                  i2_TMR1_Reload CA66  
                    i2TMR1_WriteTimer@timerVal 0001                     ??_I2C2_MasterWriteTRBBuild 0207  
                               __end_of___wmul C51A             __size_of_ADC_PostProcessingHandler 0974  
                                i2_TMR3_Reload CA74                              __size_of_TMR0_ISR 0028  
                            __size_of_TMR1_ISR 0034                              __size_of_TMR2_ISR 0028  
                   ?_ADC_PostProcessingHandler 0001                              __size_of_TMR3_ISR 0034  
                               _TMR1_StopTimer CB0C            __size_of_IOCBF3_SetInterruptHandler 000E  
                                   ?_TMR2_Stop 0001                         ?_OSCILLATOR_Initialize 0001  
                                __pbitbssBANK0 07F8                            __end_of_getDeviceID C70A  
                               __end_of_fround 7FDE              __size_of_ADCC_GetConversionResult 0014  
                    __size_of_I2C2_MasterWrite 0050                               ?_clearUARTErrors 0001  
                    ?_ADCC_GetConversionResult 0001                       __size_of_updateErrorLEDs 0046  
                             i2___wmul@product 0005                                 __end_of_printf C02C  
                                  _adc_results 00DF                             _getMajorRevisionID C0E4  
                               __end_of_strcat B7FC                                 __end_of_strcmp BAAE  
                               __end_of_strcpy BC36                                 __end_of_strlen C3F4  
                       ?_I2C2_FunctionComplete 0001                              __size_ofi2___flge 00D0  
                          start_initialization ACE6                              __size_ofi2___fleq 008A  
                           i2___awdiv@quotient 000D                              __size_ofi2___wmul 0026  
                          __end_of_LM73Convert 8CAC                                    ??_I2C2_Stop 0100  
                     __size_of_TMR0_Initialize 002A                __size_of_PIN_MANAGER_Initialize 00A0  
                          __end_of__tdiv_to_l_ A1FA                        _getNXQChargeStateString B7FC  
                                  __end_of_abs C476                          __end_of_INT1_CallBack C626  
                   ??_floatToEngineeringFormat 02A7                                     ?i1___fladd 010E  
                               _TMR2_StopTimer CAF2                                     ?i1___fldiv 011E  
                                   ?i1___flmul 0137                                      i2printf@f 00A4  
      OLED_UpdateFromRAMBuffer@char_index_4111 0224        OLED_UpdateFromRAMBuffer@char_index_4112 0225  
      OLED_UpdateFromRAMBuffer@char_index_4113 0226                                     ?i2___fladd 0052  
EUSART2_SetRxInterruptHandler@interruptHandler 0200  EUSART2_SetTxInterruptHandler@interruptHandler 0200  
                                   ?i2___fldiv 0013                              __size_ofi2_fround 02AE  
                                   ?i2___awdiv 0007                                     ?i2___flneg 0001  
                                   ?i2___awmod 0001                                     ?i2___flmul 002C  
                                   ?i2___flsub 0064                                     ?i2___fltol 004E  
                                   ?i2___lldiv 0001                                     ?i2___llmod 000E  
                __size_of_ADCC_StartConversion 000E                            ?_getMajorRevisionID 0001  
                                  putch@txData 0201                                     ?i2___lwdiv 0006  
                        __end_of_INT2_CallBack C602                                     ?i2___lwmod 0001  
                            __size_ofi2_printf 003C                          __end_of_EUSART2_Write BDDE  
                               _device_on_time 00C5                                     ?i2__doprnt 006C  
                      __end_ofi2_EUSART2_Write BF2E                                 _TMR3_StopTimer CB08  
                              ___llmod@divisor 0211                              _LM73_temp_results 02DB  
                              ___llmod@counter 0215                               _nxq_charge_state 018C  
              I2C2_MasterWriteTRBBuild@address 0205                       __size_of_PIN_MANAGER_IOC 0014  
                                   ?i2_isdigit 0001                           I2C2_MasterRead@pdata 0209  
                     ?_I2C2_MasterReadTRBBuild 0200                           I2C2_MasterRead@pflag 020E  
                   __end_of_getHoursFromOnTime A6C6                                    _getI2CError C4CA  
                             __CFG_LPBOREN$OFF 000000                                    _getADCError C874  
                    __size_of_OLED_WriteString 0058                 __end_of_LM73AcquisitionHandler 9602  
                     __size_of_TMR1_Initialize 0050                 _ADC_PostProcessingHandler$6410 0070  
               _ADC_PostProcessingHandler$6411 0074                 _ADC_PostProcessingHandler$6407 007B  
               _ADC_PostProcessingHandler$6408 007F                 _ADC_PostProcessingHandler$6409 006C  
                                     ??___flge 0254                          __size_of_OLED_Command 0066  
                                     ??___fleq 0208                               ??_PMD_Initialize 0200  
                       ?_terminalSetCursorHome 0001                                       ??___wmul 0204  
                            ??_CCP2_CaptureISR 0156                  I2C2_MasterWriteTRBBuild@pdata 0202  
                               ?i2_TMR1_Reload 0001                           I2C2_ISR@pi2c_buf_ptr 00D2  
                                  _CCPTMRSbits 000FAE                           ??_getMajorRevisionID 020B  
                                   OLED_YX@Row 0218                                    __doprnt@idx 0266  
                                  __doprnt@len 0279                                    __doprnt@val 0285  
                       __end_of_TMR1_StopTimer CB10                                    __pdataBANK0 00FD  
                                  __pdataBANK1 01A3                                    __pdataBANK2 02ED  
                               ?i2_TMR3_Reload 0001                                       ??_fround 022B  
                                _ringBufferLUT 557A                     __end_of_EXT_INT_Initialize C1D0  
                ?_TMR2_DefaultInterruptHandler 0001                          __size_of_OLED_PutChar 00C4  
                                     ??_printf 02B9              getCauseOfReset@return_reset_cause 0200  
                               _TMR5_StopTimer CB04                       getSecondsFromOnTime@days 0217  
                                     ??_strcat 0204                                       ??_strcmp 0204  
                                     ??_strcpy 0207                                       ??_strlen 0202  
            __end_of_ADC_PostProcessingHandler 49F6                     __end_of_getMinorRevisionID C5B8  
                                    ___fladd@a 0238                                      ___fladd@b 0234  
                     __end_ofi2_TMR1_StopTimer CB1C                                     fround@prec 0233  
                               _eusart2RxCount 018E                                  ?i2__div_to_l_ 0001  
                                    ___fldiv@a 022B                                      ___fldiv@b 0227  
          __end_of_getNXQChargeStateStringCaps B8B4                    _getNXQChargeStateStringCaps B858  
                       __end_of_TMR2_StopTimer CAF8                               ?_I2C2_MasterRead 0209  
                        _qi_isns_average_index 00D8                                      ___flmul@a 0212  
                                    ___flmul@b 020E                               ?_I2C2_Initialize 0001  
                                    ___flsub@a 0250                                      ___flsub@b 024C  
                                     ?_OLED_YX 0214                                  __pcstackBANK0 0060  
                                __pcstackBANK1 0100                                  __pcstackBANK2 0200  
                                __pcstackBANK3 03D1                                  __pcstackBANK5 0500  
                       _terminalTextAttributes 6692                       __size_of_TMR2_Initialize 0032  
                __size_of_getMinutesFromOnTime 0150                    ?_IOCBF2_SetInterruptHandler 0200  
                            i2___lwmod@divisor 0003                      ??_printErrorHandlerStatus 02BB  
                            __size_of___xxtofl 0144                              i2___lwmod@counter 0005  
                                 _isdigit$5450 0201             __size_of_QIIdleChargedTimerHandler 0020  
                          EUSART2_Write@txData 0200                     ?_QIIdleChargedTimerHandler 0001  
                                _i2c2_tr_queue 019D                         __end_of_TMR3_StopTimer CB0C  
                              i1___xxtofl@sign 0108                           _freq_meas_start_flag 02DA  
                ??_getNXQChargeStateStringCaps 0202                    __end_of_ADCC_StopConversion CB2C  
                      ?_getStringSecondsAsTime 02A3                                       ?i2_scale 0045  
              ??_EUSART2_SetRxInterruptHandler 0203                   __size_of_terminalClearScreen 0010  
                                     ?i2_putch 0001                                      __doprnt@c 028F  
                                    __doprnt@f 025A                          _INT2_InterruptHandler 0180  
                                 _OLED_Command B672                              i1___fldiv@new_exp 012F  
                                  ??_OLED_Init 0214                          _TMR0_InterruptHandler 00C9  
                                    __pnvBANK2 02FF                    getMinorRevisionID@REVID_RAW 020B  
                      _IOCBF3_InterruptHandler 0177                     ??_LM73TempSensorInitialize 0210  
                             ___lwdiv@dividend 0205                         _PIN_MANAGER_Initialize AED6  
                 __end_of_rightCapTouchHandler C8B6               ??_IOCBF2_DefaultInterruptHandler 0001  
              ?_IOCBF2_DefaultInterruptHandler 0001                                   _OLED_PutChar A9FE  
                   __end_of_OLED_updateHandler 4082                       __size_of_TMR3_Initialize 0050  
                    __size_of_QIIdleIOCHandler 0014                        ??_getCauseOfResetString 0202  
                              ??i1_TMR3_Reload 0102                 __size_of_freqMeasStartCaptures 000A  
                                    __pintcode 0008                  __end_of_freqMeasStartCaptures CABC  
                                  _getDeviceID C6EA               __end_of_TMR1_SetInterruptHandler C9DA  
                                __pmediumconst E5C2                                       ?___fladd 0234  
                                     ?___fldiv 0227                                       ?___awdiv 0206  
                                    __ptext100 C44C                                      __ptext101 828C  
                                    __ptext110 AC38                                      __ptext102 9FD8  
                                     ?___flneg 0200                                      __ptext111 919E  
                                    __ptext103 C3C6                                      __ptext200 9E98  
                                    __ptext120 CABC                                      __ptext112 93D6  
                                    __ptext104 BE22                                      __ptext201 BCC6  
                                    __ptext121 B9BA                                      __ptext113 8A28  
                                    __ptext105 B90E                                      __ptext210 CB28  
                                    __ptext202 7A0E                                      __ptext130 C80E  
                                    __ptext114 9C10                                      __ptext106 B00E  
                                    __ptext211 CAA6                                      __ptext203 70A0  
                                    __ptext131 CB34                                      __ptext123 C23A  
                                    __ptext115 69F8                                      __ptext107 B672  
                                    __ptext212 C908                                      __ptext204 A798  
                                    __ptext140 CA9A                                      __ptext132 CAF2  
                                    __ptext124 C70A                                      __ptext116 BB4E  
                                    __ptext108 C06A                                      __ptext213 CB2C  
                                    __ptext205 87A0                                      __ptext141 C2D4  
                                    __ptext133 CB14                                      __ptext125 CB32  
                                    __ptext117 BD54                                      __ptext109 A9FE  
                                    __ptext214 C91C                                      __ptext206 C15C  
                                    __ptext150 C26E                                      __ptext142 C842  
                                    __ptext134 CA58                                      __ptext126 CB10  
                                    __ptext118 BB9E                                      __ptext215 0000  
                                    __ptext207 C3F4                                      __ptext151 C88A  
                                    __ptext143 BF70                                      __ptext135 CAE4  
                                    __ptext127 CA4A                                      __ptext119 AE34  
                                    __ptext208 CAFE                                      __ptext160 C7A0  
                                    __ptext152 CB36                                      __ptext144 A934  
                                    __ptext136 CAF8                                      __ptext128 C72A  
                                    __ptext209 CB24                                      __ptext161 CA66  
                                    __ptext153 CB18                                      __ptext145 9D54  
                                    __ptext137 8F28                                      __ptext129 C51A  
                                    __ptext170 CAC6                                      __ptext162 C7BC  
                                    __ptext154 C542                                      __ptext146 6D4C  
                                    __ptext138 BE66                                      __ptext171 C5DE  
                                    __ptext163 C4A0                                      __ptext155 CB38  
                                    __ptext147 8516                                      __ptext139 C828  
                                    __ptext180 1724                                      __ptext172 CB3E  
                                    __ptext164 CB3C                                      __ptext156 9AC0  
                                    __ptext148 7700                                      __ptext181 5ED4  
                                    __ptext173 C8A0                                      __ptext165 C8F4  
                                    __ptext157 C8E0                                      __ptext190 A1FA  
                                    __ptext182 B4CE                                      __ptext174 CAD0  
                                    __ptext166 CA74                                      __ptext158 C476  
                                    __ptext191 A4E2                                      __ptext183 B356  
                                    __ptext175 C602                                      __ptext167 C7D8  
                                    __ptext159 CB3A                                      __ptext192 C5B8  
                                    __ptext184 CADA                                      __ptext176 CB40  
                                    __ptext168 CB1C                                      __ptext193 B6D8  
                                    __ptext185 BEEC                                      __ptext177 C8B6  
                                    __ptext169 CB20                                      __ptext194 B3DA  
                                    __ptext186 C74A                                      __ptext178 AD90  
                                    __ptext195 AB7E                                      __ptext187 7FDE  
                                    __ptext179 C120                                       ?___awmod 0200  
                                    __ptext196 B1C2                                      __ptext188 BF2E  
                                    __ptext197 C56A                                      __ptext189 BA0C  
                                    __ptext198 CB42                                      __ptext199 4082  
                                     ?___flmul 020E                                       ?___flsub 024C  
                                     ?___fltol 0230                                       ?___lldiv 0200  
                                     ?___llmod 020D                                      __npowers_ E5F7  
                                     ?___lwdiv 0205                                _getCauseOfReset B8B4  
                                     ?___lwmod 0200                                 ?_ringBufferLUT 02BB  
                                    _getUserID C206                                ?_TMR1_StopTimer 0001  
                       __end_of_TMR5_StopTimer CB08              _EUSART2_TxDefaultInterruptHandler 017D  
                                     ?__doprnt 0258                         OLED_PutChar@data_array 0214  
                                  __pintcodelo 0018                                       _I2C2_ISR 8F28  
                    __size_ofi1_TMR3_StopTimer 0004                                    _LM73Convert 8A28  
                                  __tdiv_to_l_ A0FA                                    ??_TMR2_Stop 0100  
                               ??i2__div_to_l_ 0009                                   ??__div_to_l_ 0208  
                                     _BAUD2CON 000E9F                              ??_CCP2_Initialize 0200  
                    ??_getNXQChargeStateString 0202                     ??_INT2_SetInterruptHandler 0203  
                     __size_of_TMR1_StartTimer 0004                                       ?_isdigit 0001  
                                     ?_memmove 0200                    floatToEngineeringFormat@res 02B3  
                              ?_TMR2_StopTimer 0001                    getStringSecondsAsTime@hours 03E9  
                  getStringSecondsAsTime@years 03E7                               __CFG_WDTE$NSLEEP 000000  
           __end_of_IOCBF3_SetInterruptHandler C9F6                     _IOCBF3_SetInterruptHandler C9E8  
                                  ??i1___fladd 0116                         getHoursFromOnTime@days 0217  
                                  ??i1___fldiv 0126                                    ??i1___flmul 013F  
                                    _hexpowers E62B              __size_of_OLED_UpdateFromRAMBuffer 0122  
                    ?_OLED_UpdateFromRAMBuffer 0001                               ___lwdiv@quotient 020A  
                      _OLED_updateHandler$6024 03F3                                    ??i2___fladd 005A  
                                  ??i2___fldiv 001B                                    ??i2___awdiv 000B  
                                  ??i2___flneg 0005                                    ??i2___awmod 0005  
                                     ?_sprintf 0290                                    ??i2___flmul 0034  
                                  ??i2___flsub 005E                                    ??i2___fltol 0052  
                            ??_updateErrorLEDs 0200                                    ??i2___lldiv 0009  
                                     _T2CLKCON 000FBF                                 __size_of_scale 0434  
                                  ??i2___llmod 0016                 __end_of_getStringSecondsAsTime 6692  
                                     ?_strncpy 0200                                    ??i2___lwdiv 000A  
                                  ??i2___lwmod 0005                                 __size_of_putch 0014  
                         _INTERRUPT_Initialize C6CA                                ?_TMR3_StopTimer 0001  
                                  ??i2__doprnt 0072              __end_of_QIIdleChargedTimerHandler C72A  
              __end_of_I2C2_MasterReadTRBBuild BA0C                              ??_TMR0_Initialize 0203  
                 __size_of_leftCapTouchHandler 0016                   __size_of_EUSART2_Receive_ISR 00A4  
                     _pos12_isns_average_index 00D9                                       _INT1_ISR CAD0  
                                     _INT2_ISR CAC6                                 ___wmul@product 0204  
                             i2__doprnt@tmpval 0091                               ?i2_EUSART2_Write 0001  
                                     _LATBbits 000F84                                       _LATCbits 000F85  
            __size_of_INT1_SetInterruptHandler 000E                      ?_INT1_SetInterruptHandler 0200  
                                  strncpy@from 0202                                       _IPR0bits 000EBA  
                                     _IPR1bits 000EBB                                       _PIE0bits 000EC2  
                                     _IPR3bits 000EBD                                       _PIE1bits 000EC3  
                                     _IPR4bits 000EBE                                    strncpy@size 0204  
                                     _PIE3bits 000EC5                                       _IPR6bits 000EC0  
                                     _PIE4bits 000EC6                                       _PIE6bits 000EC8  
                                  ??i2_isdigit 0001                       __size_of_TMR2_StartTimer 0006  
                          __CFG_BORV$VBOR_2P45 000000                       __size_of_TMR1_WriteTimer 0020  
          __end_of_ADC_acquisitionTimerHandler C828                    _ADC_acquisitionTimerHandler C80E  
                        __end_of_CCP2_CallBack BFB0                     ??_TMR0_SetInterruptHandler 0203  
                                     _PIR0bits 000ECA                                       _PIR1bits 000ECB  
                           __end_of__div_to_l_ A3EE                               ??_FLASH_ReadByte 0204  
                                     _PIR3bits 000ECD                                       _PIR4bits 000ECE  
                              ??i2_TMR1_Reload 0003                     ??_TMR3_SetInterruptHandler 0203  
                                     _PIR6bits 000ED0                                       _PIR7bits 000ED1  
              __end_of_printErrorHandlerStatus 97F6                               ??_FLASH_ReadWord 0208  
                     __size_of_TMR5_Initialize 003C                  __size_of_getSecondsFromOnTime 017A  
             __end_of_printCurrentMeasurements 557A                                  ??_TMR1_Reload 0202  
                            i2___fldiv@new_exp 0024                   OLED_updateHandler@dev_id_str 03D1  
                              ??i2_TMR3_Reload 0003                                       _SSP2CON1 000E96  
                                     _SSP2CON3 000E98                                       _TMR0_ISR C542  
                      ??_heartbeatTimerHandler 005E                                       _TMR1_ISR C26E  
                                ??_TMR3_Reload 0202                                       _TMR2_ISR C51A  
                                     _TMR3_ISR C23A                          getDaysFromOnTime@days 0215  
                                     _SSP2STAT 000E95                              ??_PIN_MANAGER_IOC 0003  
                              i2__div_to_l_@f1 0001                                i2__div_to_l_@f2 0005  
                                   ?_getUserID 020B                        getYearsFromOnTime@years 0211  
                              ?_TMR5_StopTimer 0001                  I2C2_MasterTRBInsert@ptrb_list 0200  
                ??_ADC_acquisitionTimerHandler 0101                              ??_TMR1_Initialize 0203  
                                   _ADCON0bits 000F60                                     _ADCON1bits 000F59  
                                   _ADCON2bits 000F5A                                       i2___flge A798  
                                   _ADCON3bits 000F5B                                       i2___fleq B1C2  
                            ___wmul@multiplier 0200                               _I2C2_MasterWrite BB4E  
                                     i2___wmul C5B8                        __size_of_FVR_Initialize 000C  
            getMinutesFromOnTime@input_seconds 020D                       __size_of_TMR3_StartTimer 0004  
               ??_TMR2_DefaultInterruptHandler 0100              __size_of_TMR2_SetInterruptHandler 000E  
                            i2___awdiv@divisor 0009                                       i2_fround 7FDE  
             __end_of_floatToEngineeringFormat 503A                      ?_TMR2_SetInterruptHandler 0200  
                                   _I2C_STATUS 01A2                              i2___awdiv@counter 000B  
                   __end_of_QIChargeIOCHandler C7BC   ADC_PostProcessingHandler@current_adc_channel 0078  
                  __end_of_ADCC_GetFilterValue C91C                  __size_of_EUSART2_Transmit_ISR 0032  
          __size_of_getCauseOfResetStringSmall 0030                                       i2_printf C120  
                             __size_of_OLED_YX 0044                                      copy_data0 ACFA  
                                    copy_data1 AD1A                   __end_of_I2C2_MasterTRBInsert AED6  
                        ?_INTERRUPT_Initialize 0001                             i2___awmod@dividend 0001  
          getStringSecondsAsTime@return_string 0384                        ??_ADCC_ClearAccumulator 0100  
                            i1_TMR3_WriteTimer C72A                             _getYearsFromOnTime C336  
                            ??_TMR2_Initialize 0203               __size_of_terminal_ringBufferPull 00F4  
                             __size_ofi2_scale 0418                                       _OledFont E64B  
                             __size_ofi2_putch 000A                __end_of_getNXQChargeStateString B858  
                           ?i1_TMR3_WriteTimer 0100                        __end_of_getCauseOfReset B90E  
                     __size_of_freqMeasConvert 00CA                                     _ADSTATbits 000F65  
                                     __Hrparam 0000               __end_of_ADCC_GetConversionResult C930  
                     freqMeasConvert@qi_period 0150          __end_of_EUSART2_SetRxInterruptHandler CA3C  
       __size_of_EUSART2_SetRxInterruptHandler 000E                  _EUSART2_SetRxInterruptHandler CA2E  
                     __size_of_TMR3_WriteTimer 0020                         OLED_PutChar@input_base 021D  
                             _OLED_WriteString B90E                              i2_TMR1_WriteTimer C7BC  
                          ?_getYearsFromOnTime 020D                                       __Lrparam 0000  
                           __CFG_BOREN$SBORDIS 000000                 I2C2_MasterWriteTRBBuild@length 0204  
                              ??_ringBufferLUT 02BD                             ?i2_TMR1_WriteTimer 0001  
                          ??i1_TMR3_WriteTimer 0102                        LM73Convert@Ambient_Conv 0253  
            getSecondsFromOnTime@input_seconds 020D                        ??_OSCILLATOR_Initialize 0200  
                                    memmove@d1 0200                                      memmove@s1 0202  
               getDaysFromOnTime@input_seconds 020D                               __size_of___fladd 030E  
                             __size_of___fldiv 028A                               __size_of___awdiv 0086  
                             __size_of___flneg 0030                               __size_of___awmod 0072  
                             __size_of___flmul 0354                               __size_of___flsub 0048  
                             __size_of___fltol 00BC                          i2___wmul@multiplicand 0003  
                             __size_of___lldiv 0084                               __size_of___llmod 0068  
                             __size_of___lwdiv 0054                               __size_of___lwmod 0044  
                      ??_I2C2_FunctionComplete 0100                               __size_of__doprnt 1724  
                                  _fround$6026 022F                                    _fround$6027 022B  
                  ??_ADC_PostProcessingHandler 005E                              ??_TMR3_Initialize 0203  
                     _TMR1_SetInterruptHandler C9CC                          __end_ofi2__tdiv_to_l_ A2F8  
                                ?_getUARTError 0001                                _putch$intlevel0 C8D2  
                          __end_of_TMR1_Reload C9B0                            ??i2_TMR1_WriteTimer 0003  
          __end_of_terminalTextAttributesReset C964                    _terminalTextAttributesReset C954  
                        _TMR1_InterruptHandler 016E                            __end_of_TMR3_Reload C9A2  
                                     ___xxtofl 9C10                                     _T0CON0bits 000FD5  
                     __size_of_ADCC_Initialize 0060                                     strcat@from 0202  
              ??_INTERRUPT_InterruptManagerLow 0158                               __size_of_isdigit 0022  
                         ??_getYearsFromOnTime 0211                   __size_of_QIErrorTimerHandler 0016  
                             __size_of_memmove 00AE                      getSecondsFromOnTime@hours 0218  
                              ___lwdiv@divisor 0207                      getSecondsFromOnTime@years 0216  
                              ___lwdiv@counter 0209                           _rightCapTouchHandler C8A0  
                                     __ptext10 B79E                                       __ptext11 B7FC  
                                     __ptext20 C4CA                                       __ptext12 C206  
                                     __ptext21 C874                                       __ptext13 AF76  
                                   _T1GCONbits 000FD0                                       __ptext30 CB08  
                                     __ptext22 BFB0                                       __ptext14 C306  
                                     __ptext31 C994                                       __ptext23 C974  
                                     __ptext15 CA82                                       __ptext40 C2A2  
                                     __ptext32 C68A                                       __ptext24 C984  
                                     __ptext16 C768                                       __ptext41 C9BE  
                                     __ptext33 CB0C                                       __ptext25 BFEE  
                                     __ptext17 C964                                       __ptext50 C85C  
                                     __ptext42 BAFE                                       __ptext34 C9A2  
                                     __ptext26 B8B4                                       __ptext18 BD0E  
                                     __ptext51 C6CA                                       __ptext43 C9CC  
                                     __ptext35 C6AA                                       __ptext27 CAB2  
                                     __ptext19 CAEC                                       __ptext60 C626  
                                     __ptext52 C1D0                                       __ptext44 C422  
                                     __ptext36 C02C                                       __ptext28 C66A  
                                     __ptext61 B73E                                       __ptext53 CA8E  
                                     __ptext45 C9DA                                       __ptext37 C0A8  
                                     __ptext29 CB04                                       __ptext70 C0E4  
                                     __ptext62 CA3C                                       __ptext54 C198  
                                     __ptext46 C784                                       __ptext38 BAAE  
                                     __ptext71 A5D6                                       __ptext63 2E3C  
                                     __ptext55 CA04                                       __ptext47 AED6  
                                     __ptext39 C9B0                                       __ptext80 5AA0  
                                     __ptext72 C6EA                                       __ptext64 BBEE  
                                     __ptext56 CA12                                       __ptext48 C9E8  
                                     __ptext81 B45C                                       __ptext73 BEAA  
                                     __ptext65 C336                                       __ptext57 B60C  
                                     __ptext49 C9F6                                       __ptext90 A2F8  
                                     __ptext82 B24C                                       __ptext74 C7F4  
                                     __ptext66 97F6                                       __ptext58 CA20  
                                     __ptext91 C4F2                                       __ptext83 C8CC  
                                     __ptext75 B0A6                                       __ptext67 B858  
                                     __ptext59 CA2E                                       __ptext92 B53E  
                                     __ptext84 BD9A                                       __ptext76 C366  
                                     __ptext68 9970                                       __ptext93 B2D2  
                                     __ptext85 C648                                       __ptext77 49F6  
                                     __ptext69 C592                                       __ptext94 AAC2  
                                     __ptext86 7D1C                                       __ptext78 BC36  
                                     __ptext95 BC7E                                       __ptext87 BDDE  
                                     __ptext79 0000                                       __ptext96 73F2  
                                     __ptext88 B966                                       __ptext97 C396  
                                     __ptext89 A0FA                                       __ptext98 A6C6  
                                     __ptext99 B136                                       __powers_ E5C3  
                    __end_ofi1_TMR3_WriteTimer C74A                                   _SSP2CON1bits 000E96  
                                 _SSP2CON2bits 000E97                            ringBufferLUT@userID 03FA  
                            ??_TMR1_StartTimer 0001                               __size_of_sprintf 0048  
                                   _IOCBF2_ISR C4A0                                     _IOCBF3_ISR C476  
                                   _T3GCONbits 000FCA            floatToEngineeringFormat@input_value 02A3  
                   getStringSecondsAsTime@days 03E8                     getStringSecondsAsTime@buff 03D1  
                      TMR3_WriteTimer@timerVal 0200                               __size_of_strncpy 0066  
                  __size_of_EUSART2_Initialize 0066                                     strcpy@from 0205  
                               i2_isdigit$5450 0002                                _CCP2_CaptureISR C842  
                                __size_of_fabs 003C                                  __size_of_main 027C  
                                   _T5GCONbits 000FC4                   OLED_updateHandler@rev_id_str 03E2  
                                OLED_Clear@col 0223                      __end_ofi2_TMR1_WriteTimer C7D8  
                         __end_ofi2__div_to_l_ A5D6                                  OLED_Clear@row 0221  
         __end_of_TMR0_DefaultInterruptHandler CB3A          __size_of_TMR0_DefaultInterruptHandler 0002  
                 _TMR0_DefaultInterruptHandler CB38                                i2__doprnt@width 009D  
                                OLED_YX@Column 0214                           __CFG_WDTCWS$WDTCWS_7 000000  
                      __size_of_clearI2CErrors 001C                        ??_terminalSetCursorHome 02B9  
                                 ?_getI2CError 0001                        I2C2_MasterWrite@address 020C  
        terminalTextAttributes@input_attribute 02BA                                   ?_getADCError 0001  
                      __size_of_clearADCErrors 0010                       __size_of_TMR5_WriteTimer 0020  
                               OLED_PutChar@ch 0220                              i2_TMR3_WriteTimer C7D8  
                             _QIIdleIOCHandler C8F4                                     _RC2STAbits 000E9D  
                    i1TMR3_WriteTimer@timerVal 0100                   __end_of_ADCC_StartConversion CA66  
                                     int$flags 005F                             ?i2_TMR3_WriteTimer 0001  
                                  ??_getUserID 020D                              ??_TMR2_StartTimer 0001  
                      I2C2_MasterWrite@trBlock 0198                              ??_TMR1_WriteTimer 0202  
                             i1_TMR3_StopTimer CB10                                 ??_getUARTError 0200  
                               __doprnt@tmpval 027D           __end_of_TMR3_DefaultInterruptHandler CB34  
        __size_of_TMR3_DefaultInterruptHandler 0002                   _TMR3_DefaultInterruptHandler CB32  
                __size_of_I2C2_BusCollisionISR 000C                            _terminalClearScreen C984  
         __end_of_INT1_DefaultInterruptHandler CB42          __size_of_INT1_DefaultInterruptHandler 0002  
                 _INT1_DefaultInterruptHandler CB40                              ??_TMR5_Initialize 0200  
                           _getHoursFromOnTime A5D6                        ?_terminalTextAttributes 02B9  
             __size_of_I2C2_MasterReadTRBBuild 0052                              i2___awmod@divisor 0003  
                          ??i2_TMR3_WriteTimer 0003                              i2___awmod@counter 0005  
                            ?i2_TMR1_StopTimer 0001                              _getDaysFromOnTime B0A6  
                                   _INTCONbits 000FF2                                    _NVMCON1bits 000F81  
                                   _FVRCONbits 000F31                          ?_rightCapTouchHandler 0001  
                           ??i2_TMR1_StopTimer 0001                             ?_getDaysFromOnTime 020D  
                                     isdigit@c 0202                         ??_INTERRUPT_Initialize 0200  
                          ?_getHoursFromOnTime 020D              __size_of_printCurrentMeasurements 0540  
                                     memmove@d 0208                                       memmove@n 0204  
                                     memmove@s 020A                                       scale@scl 022F  
                    ?_printCurrentMeasurements 0001                             _EXT_INT_Initialize C198  
                     __size_of_clearUARTErrors 000C              __size_of_I2C2_MasterWriteTRBBuild 0046  
                  ??_QIIdleChargedTimerHandler 0102                      ?_I2C2_MasterWriteTRBBuild 0200  
         __end_of_ADCC_DefaultInterruptHandler CB44          __size_of_ADCC_DefaultInterruptHandler 0002  
                 _ADCC_DefaultInterruptHandler CB42                              ??_TMR3_StartTimer 0001  
                                     intlevel1 0000                                       intlevel2 0000  
                                   _OLED_Clear C06A                                      sprintf@ap 029C  
                                    sprintf@pb 029E                               __tdiv_to_l_@exp1 0210  
                                    sprintf@wh 0290                               __tdiv_to_l_@cntr 020F  
                                   _OLED_Frame 02D8                             _getMinorRevisionID C592  
           __end_of_getCauseOfResetStringSmall C396                     _getCauseOfResetStringSmall C366  
                             __tdiv_to_l_@quot 020B                                i2___xxtofl@sign 000D  
                    _ADC_PostProcessingHandler 4082                           ?_terminalClearScreen 0001  
                          ??_getDaysFromOnTime 0211                 floatToEngineeringFormat@result 03AC  
                             ___lwmod@dividend 0200                            I2C2_ISR@i2c_address 00FB  
                             ___lldiv@dividend 0200                        ?_PIN_MANAGER_Initialize 0001  
                            __CFG_CLKOUTEN$OFF 000000                            ?_EXT_INT_Initialize 0001  
                    __end_ofi2_TMR3_WriteTimer C7F4                           LM73Convert@POS5_Conv 0251  
                                  _reset_cause 02FF                               ?_getCauseOfReset 0001  
                             ??_TMR1_StopTimer 0200                   __end_of_getMinutesFromOnTime 9AC0  
                          ?_getMinorRevisionID 0001                                      strncpy@cp 0206  
                                    strncpy@to 0200              __size_of_floatToEngineeringFormat 0644  
                ?_TMR0_DefaultInterruptHandler 0001                      ?_floatToEngineeringFormat 02A3  
                              _CCP2_Initialize C626                           ??_getHoursFromOnTime 0211  
                                 ?_getDeviceID 020B                         I2C2_MasterWrite@length 020B  
                              _QI_current_edge 018D                                    _TMR1_Reload C9A2  
                                     printf@ap 03F3                                       printf@pb 03F5  
                       __size_of_INT1_CallBack 0024             terminalTextAttributes@print_string 0501  
               __size_of_getCauseOfResetString 0030                                    _TMR3_Reload C994  
                __end_of_getCauseOfResetString C336                    __size_of_getMajorRevisionID 003C  
                     _ADCC_GetConversionResult C91C                              ??_freqMeasConvert 0150  
               ?_EUSART2_SetRxInterruptHandler 0200               __end_of_OLED_UpdateFromRAMBuffer A0FA  
                         _I2C2_MasterTRBInsert AE34                               ??_TMR2_StopTimer 0100  
                            ??_TMR3_WriteTimer 0202         terminalTextAttributes@background_color 02B9  
                       __size_of_INT2_CallBack 0024                                   ?_LM73Convert 0001  
               __end_of_terminalTextAttributes 69F8                                   ?__tdiv_to_l_ 0200  
                          _leftCapTouchHandler C8B6                         __size_of_EUSART2_Write 0044  
                          _EUSART2_Receive_ISR AD90                                _updateErrorLEDs BD0E  
                    __end_of_getDaysFromOnTime B136         __end_of_INTERRUPT_InterruptManagerHigh A934  
      __size_of_INTERRUPT_InterruptManagerHigh A92C                 _INTERRUPT_InterruptManagerHigh 0008  
                  getMajorRevisionID@REVID_RAW 020E                                 _FVR_Initialize CA8E  
                         ??_EXT_INT_Initialize 0203                          CCP2_CaptureISR@module 0156  
                                     sprintf@f 0292                                       strcat@cp 0204  
                ?_TMR3_DefaultInterruptHandler 0001                                       strcat@to 0200  
                ?_INT1_DefaultInterruptHandler 0001                                       strcmp@s1 0200  
                                     strcmp@s2 0202                                     _SSP2DATPPS 000E90  
                            ringBufferLUT@line 02BB                               ___lldiv@quotient 0208  
                           _OLED_updateHandler 2E3C                                     _SSP2CLKPPS 000E8F  
                              ___lwmod@divisor 0202         __end_of_IOCBF2_DefaultInterruptHandler CB3E  
      __size_of_IOCBF2_DefaultInterruptHandler 0002                 _IOCBF2_DefaultInterruptHandler CB3C  
                              _TMR0_Initialize C422                                       strcpy@cp 0207  
                                     strlen@cp 0202                                       strcpy@to 0203  
                         ??_getMinorRevisionID 020B                                ___lwmod@counter 0204  
                             ??_TMR3_StopTimer 0200               __end_of_INT1_SetInterruptHandler CA20  
                      __end_of_CCP2_CaptureISR C85C                              _getDeviceIDString AF76  
                  ?_IOCBF3_SetInterruptHandler 0200                                     _TMR2_Start CB24  
                                   _TX2STAbits 000E9E                                  ___fladd@signs 0240  
                   __size_ofi1_TMR3_WriteTimer 0020                            ?_OLED_updateHandler 0001  
                           ?_getDeviceIDString 020D          __end_of_INTERRUPT_InterruptManagerLow 00C2  
       __size_of_INTERRUPT_InterruptManagerLow 00AA                  _INTERRUPT_InterruptManagerLow 0018  
                                  ?_IOCBF2_ISR 0001                                    ?_IOCBF3_ISR 0001  
                 floatToEngineeringFormat@sign 02AF                 ??_ADCC_SetADTIInterruptHandler 0203  
               __end_of_PIN_MANAGER_Initialize AF76                              ??_ADCC_Initialize 0203  
                        ??_terminalClearScreen 02B9                              i2__div_to_l_@exp1 000E  
                     __size_of_I2C2_MasterRead 0050                              i2__div_to_l_@cntr 000D  
                      _terminal_ringBufferPull A3EE                           ?_leftCapTouchHandler 0001  
                     __size_of_I2C2_Initialize 0036                ??_EUSART2_SetTxInterruptHandler 0203  
                            i2__div_to_l_@quot 0009                           ?_EUSART2_Receive_ISR 0001  
                                 ___fladd@aexp 0241                                   ___fladd@bexp 0242  
                ?_ADCC_DefaultInterruptHandler 0001                     ADC_PostProcessingHandler@i 0079  
                           __size_of_I2C2_Stop 0044                                _PIN_MANAGER_IOC C8E0  
                     __end_of_I2C2_MasterWrite BB9E                          _TMR2_InterruptHandler 0174  
                   __size_ofi2_TMR1_WriteTimer 001C                            ??_getDeviceIDString 020F  
                              _TMR1_Initialize BAFE              _EUSART2_RxDefaultInterruptHandler 00CF  
                             ??_TMR5_StopTimer 0200                   __size_of_ADCC_StopConversion 0004  
