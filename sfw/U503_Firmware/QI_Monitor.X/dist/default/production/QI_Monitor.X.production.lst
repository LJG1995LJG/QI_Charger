

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Mar 12 14:17:11 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F27K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    22                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    23                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	text0,global,reloc=2,class=CODE,delta=1
    28                           	psect	text1,global,reloc=2,class=CODE,delta=1
    29                           	psect	text2,global,reloc=2,class=CODE,delta=1
    30                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text4,global,reloc=2,class=CODE,delta=1
    32                           	psect	text5,global,reloc=2,class=CODE,delta=1
    33                           	psect	text6,global,reloc=2,class=CODE,delta=1
    34                           	psect	text7,global,reloc=2,class=CODE,delta=1
    35                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text9,global,reloc=2,class=CODE,delta=1
    37                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text11,global,reloc=2,class=CODE,delta=1
    39                           	psect	text12,global,reloc=2,class=CODE,delta=1
    40                           	psect	text13,global,reloc=2,class=CODE,delta=1
    41                           	psect	text14,global,reloc=2,class=CODE,delta=1
    42                           	psect	text15,global,reloc=2,class=CODE,delta=1
    43                           	psect	text16,global,reloc=2,class=CODE,delta=1
    44                           	psect	text17,global,reloc=2,class=CODE,delta=1
    45                           	psect	text18,global,reloc=2,class=CODE,delta=1
    46                           	psect	text19,global,reloc=2,class=CODE,delta=1
    47                           	psect	text20,global,reloc=2,class=CODE,delta=1
    48                           	psect	text21,global,reloc=2,class=CODE,delta=1
    49                           	psect	text22,global,reloc=2,class=CODE,delta=1
    50                           	psect	text23,global,reloc=2,class=CODE,delta=1
    51                           	psect	text24,global,reloc=2,class=CODE,delta=1
    52                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text26,global,reloc=2,class=CODE,delta=1
    54                           	psect	text27,global,reloc=2,class=CODE,delta=1
    55                           	psect	text28,global,reloc=2,class=CODE,delta=1
    56                           	psect	text29,global,reloc=2,class=CODE,delta=1
    57                           	psect	text30,global,reloc=2,class=CODE,delta=1
    58                           	psect	text31,global,reloc=2,class=CODE,delta=1
    59                           	psect	text32,global,reloc=2,class=CODE,delta=1
    60                           	psect	text33,global,reloc=2,class=CODE,delta=1
    61                           	psect	text34,global,reloc=2,class=CODE,delta=1
    62                           	psect	text35,global,reloc=2,class=CODE,delta=1
    63                           	psect	text36,global,reloc=2,class=CODE,delta=1
    64                           	psect	text37,global,reloc=2,class=CODE,delta=1
    65                           	psect	text38,global,reloc=2,class=CODE,delta=1
    66                           	psect	text39,global,reloc=2,class=CODE,delta=1
    67                           	psect	text40,global,reloc=2,class=CODE,delta=1
    68                           	psect	text41,global,reloc=2,class=CODE,delta=1
    69                           	psect	text42,global,reloc=2,class=CODE,delta=1
    70                           	psect	text43,global,reloc=2,class=CODE,delta=1
    71                           	psect	text44,global,reloc=2,class=CODE,delta=1
    72                           	psect	text45,global,reloc=2,class=CODE,delta=1
    73                           	psect	text46,global,reloc=2,class=CODE,delta=1
    74                           	psect	text47,global,reloc=2,class=CODE,delta=1
    75                           	psect	text48,global,reloc=2,class=CODE,delta=1
    76                           	psect	text49,global,reloc=2,class=CODE,delta=1
    77                           	psect	text50,global,reloc=2,class=CODE,delta=1
    78                           	psect	text51,global,reloc=2,class=CODE,delta=1
    79                           	psect	text52,global,reloc=2,class=CODE,delta=1
    80                           	psect	text53,global,reloc=2,class=CODE,delta=1
    81                           	psect	text54,global,reloc=2,class=CODE,delta=1
    82                           	psect	text55,global,reloc=2,class=CODE,delta=1
    83                           	psect	text56,global,reloc=2,class=CODE,delta=1
    84                           	psect	text57,global,reloc=2,class=CODE,delta=1
    85                           	psect	text58,global,reloc=2,class=CODE,delta=1
    86                           	psect	text59,global,reloc=2,class=CODE,delta=1
    87                           	psect	text60,global,reloc=2,class=CODE,delta=1
    88                           	psect	text61,global,reloc=2,class=CODE,delta=1
    89                           	psect	text62,global,reloc=2,class=CODE,delta=1
    90                           	psect	text63,global,reloc=2,class=CODE,delta=1
    91                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text65,global,reloc=2,class=CODE,delta=1
    93                           	psect	text66,global,reloc=2,class=CODE,delta=1
    94                           	psect	text67,global,reloc=2,class=CODE,delta=1
    95                           	psect	text68,global,reloc=2,class=CODE,delta=1
    96                           	psect	text69,global,reloc=2,class=CODE,delta=1
    97                           	psect	text70,global,reloc=2,class=CODE,delta=1
    98                           	psect	text71,global,reloc=2,class=CODE,delta=1
    99                           	psect	text72,global,reloc=2,class=CODE,delta=1
   100                           	psect	text73,global,reloc=2,class=CODE,delta=1
   101                           	psect	text74,global,reloc=2,class=CODE,delta=1
   102                           	psect	text75,global,reloc=2,class=CODE,delta=1
   103                           	psect	text76,global,reloc=2,class=CODE,delta=1
   104                           	psect	text77,global,reloc=2,class=CODE,delta=1
   105                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text79,global,reloc=2,class=CODE,delta=1
   107                           	psect	text80,global,reloc=2,class=CODE,delta=1
   108                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text83,global,reloc=2,class=CODE,delta=1
   111                           	psect	text84,global,reloc=2,class=CODE,delta=1
   112                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=2
   113                           	psect	text86,global,reloc=2,class=CODE,delta=1
   114                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=1
   116                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   126                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=2
   128                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text102,global,reloc=2,class=CODE,delta=1
   130                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=2
   131                           	psect	text104,global,reloc=2,class=CODE,delta=1
   132                           	psect	text105,global,reloc=2,class=CODE,delta=1
   133                           	psect	text106,global,reloc=2,class=CODE,delta=1
   134                           	psect	text107,global,reloc=2,class=CODE,delta=1
   135                           	psect	text108,global,reloc=2,class=CODE,delta=1
   136                           	psect	text109,global,reloc=2,class=CODE,delta=1
   137                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=2
   138                           	psect	text111,global,reloc=2,class=CODE,delta=1
   139                           	psect	text112,global,reloc=2,class=CODE,delta=1
   140                           	psect	text113,global,reloc=2,class=CODE,delta=1
   141                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   143                           	psect	text116,global,reloc=2,class=CODE,delta=1
   144                           	psect	text117,global,reloc=2,class=CODE,delta=1
   145                           	psect	text118,global,reloc=2,class=CODE,delta=1
   146                           	psect	text119,global,reloc=2,class=CODE,delta=1
   147                           	psect	text120,global,reloc=2,class=CODE,delta=1,inline
   148                           	psect	text121,global,reloc=2,class=CODE,delta=1
   149                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   150                           	psect	text123,global,reloc=2,class=CODE,delta=1
   151                           	psect	text124,global,reloc=2,class=CODE,delta=1
   152                           	psect	text125,global,reloc=2,class=CODE,delta=1
   153                           	psect	text126,global,reloc=2,class=CODE,delta=1
   154                           	psect	text127,global,reloc=2,class=CODE,delta=1
   155                           	psect	text128,global,reloc=2,class=CODE,delta=1
   156                           	psect	text129,global,reloc=2,class=CODE,delta=1
   157                           	psect	text130,global,reloc=2,class=CODE,delta=1
   158                           	psect	text131,global,reloc=2,class=CODE,delta=1
   159                           	psect	text132,global,reloc=2,class=CODE,delta=1
   160                           	psect	text133,global,reloc=2,class=CODE,delta=1
   161                           	psect	text134,global,reloc=2,class=CODE,delta=1
   162                           	psect	text135,global,reloc=2,class=CODE,delta=1
   163                           	psect	text136,global,reloc=2,class=CODE,delta=1
   164                           	psect	text137,global,reloc=2,class=CODE,delta=1
   165                           	psect	text138,global,reloc=2,class=CODE,delta=1
   166                           	psect	text139,global,reloc=2,class=CODE,delta=1
   167                           	psect	text140,global,reloc=2,class=CODE,delta=1
   168                           	psect	text141,global,reloc=2,class=CODE,delta=1
   169                           	psect	text142,global,reloc=2,class=CODE,delta=1
   170                           	psect	text143,global,reloc=2,class=CODE,delta=1
   171                           	psect	text144,global,reloc=2,class=CODE,delta=1
   172                           	psect	text145,global,reloc=2,class=CODE,delta=1
   173                           	psect	text146,global,reloc=2,class=CODE,delta=1
   174                           	psect	text147,global,reloc=2,class=CODE,delta=1
   175                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   176                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   177                           	psect	text149,global,reloc=2,class=CODE,delta=1
   178                           	psect	text150,global,reloc=2,class=CODE,delta=1
   179                           	psect	text151,global,reloc=2,class=CODE,delta=1
   180                           	psect	text152,global,reloc=2,class=CODE,delta=1
   181                           	psect	text153,global,reloc=2,class=CODE,delta=1
   182                           	psect	text154,global,reloc=2,class=CODE,delta=1
   183                           	psect	text155,global,reloc=2,class=CODE,delta=1
   184                           	psect	text156,global,reloc=2,class=CODE,delta=1
   185                           	psect	text157,global,reloc=2,class=CODE,delta=1
   186                           	psect	text158,global,reloc=2,class=CODE,delta=1
   187                           	psect	text159,global,reloc=2,class=CODE,delta=1
   188                           	psect	text160,global,reloc=2,class=CODE,delta=1
   189                           	psect	text161,global,reloc=2,class=CODE,delta=1
   190                           	psect	text162,global,reloc=2,class=CODE,delta=1
   191                           	psect	text163,global,reloc=2,class=CODE,delta=1
   192                           	psect	text164,global,reloc=2,class=CODE,delta=1
   193                           	psect	text165,global,reloc=2,class=CODE,delta=1
   194                           	psect	text166,global,reloc=2,class=CODE,delta=1
   195                           	psect	text167,global,reloc=2,class=CODE,delta=1
   196                           	psect	text168,global,reloc=2,class=CODE,delta=1
   197                           	psect	text169,global,reloc=2,class=CODE,delta=1
   198                           	psect	text170,global,reloc=2,class=CODE,delta=1
   199                           	psect	text171,global,reloc=2,class=CODE,delta=1
   200                           	psect	text172,global,reloc=2,class=CODE,delta=1
   201                           	psect	text173,global,reloc=2,class=CODE,delta=1
   202                           	psect	text174,global,reloc=2,class=CODE,delta=1
   203                           	psect	text175,global,reloc=2,class=CODE,delta=1
   204                           	psect	text176,global,reloc=2,class=CODE,delta=1
   205                           	psect	text177,global,reloc=2,class=CODE,delta=1
   206                           	psect	text178,global,reloc=2,class=CODE,delta=1
   207                           	psect	text179,global,reloc=2,class=CODE,delta=1
   208                           	psect	text180,global,reloc=2,class=CODE,delta=1
   209                           	psect	text181,global,reloc=2,class=CODE,delta=1
   210                           	psect	text182,global,reloc=2,class=CODE,delta=1
   211                           	psect	text183,global,reloc=2,class=CODE,delta=1
   212                           	psect	text184,global,reloc=2,class=CODE,delta=1
   213                           	psect	text185,global,reloc=2,class=CODE,delta=1
   214                           	psect	text186,global,reloc=2,class=CODE,delta=1
   215                           	psect	text187,global,reloc=2,class=CODE,delta=1
   216                           	psect	text188,global,reloc=2,class=CODE,delta=1
   217                           	psect	text189,global,reloc=2,class=CODE,delta=1
   218                           	psect	text190,global,reloc=2,class=CODE,delta=1
   219                           	psect	text191,global,reloc=2,class=CODE,delta=1
   220                           	psect	text192,global,reloc=2,class=CODE,delta=1
   221                           	psect	text193,global,reloc=2,class=CODE,delta=1
   222                           	psect	text194,global,reloc=2,class=CODE,delta=1
   223                           	psect	text195,global,reloc=2,class=CODE,delta=1
   224                           	psect	text196,global,reloc=2,class=CODE,delta=1
   225                           	psect	text197,global,reloc=2,class=CODE,delta=1
   226                           	psect	text198,global,reloc=2,class=CODE,delta=1
   227                           	psect	text199,global,reloc=2,class=CODE,delta=1
   228                           	psect	text200,global,reloc=2,class=CODE,delta=1
   229                           	psect	text201,global,reloc=2,class=CODE,delta=1
   230                           	psect	text202,global,reloc=2,class=CODE,delta=1
   231                           	psect	text203,global,reloc=2,class=CODE,delta=1
   232                           	psect	text204,global,reloc=2,class=CODE,delta=1
   233                           	psect	text205,global,reloc=2,class=CODE,delta=1
   234                           	psect	text206,global,reloc=2,class=CODE,delta=1,group=2
   235                           	psect	text207,global,reloc=2,class=CODE,delta=1
   236                           	psect	text208,global,reloc=2,class=CODE,delta=1
   237                           	psect	text209,global,reloc=2,class=CODE,delta=1
   238                           	psect	text210,global,reloc=2,class=CODE,delta=1
   239                           	psect	text211,global,reloc=2,class=CODE,delta=1
   240                           	psect	text212,global,reloc=2,class=CODE,delta=1
   241                           	psect	text213,global,reloc=2,class=CODE,delta=1
   242                           	psect	text214,global,reloc=2,class=CODE,delta=1
   243                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   244                           	psect	text215,global,reloc=2,class=CODE,delta=1
   245                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   246                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   247  0000                     
   248                           ; Version 2.05
   249                           ; Generated 20/12/2018 GMT
   250                           ; 
   251                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   252                           ; All rights reserved.
   253                           ; 
   254                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   255                           ; 
   256                           ; Redistribution and use in source and binary forms, with or without modification, are
   257                           ; permitted provided that the following conditions are met:
   258                           ; 
   259                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   260                           ;        conditions and the following disclaimer.
   261                           ; 
   262                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   263                           ;        of conditions and the following disclaimer in the documentation and/or other
   264                           ;        materials provided with the distribution.
   265                           ; 
   266                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   267                           ;        software without specific prior written permission.
   268                           ; 
   269                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   270                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   271                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   272                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   273                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   274                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   275                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   276                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   277                           ; 
   278                           ; 
   279                           ; Code-generator required, PIC18F27K40 Definitions
   280                           ; 
   281                           ; SFR Addresses
   282  0000                     
   283                           	psect	idataBANK0
   284  01C89A                     __pidataBANK0:
   285                           	opt callstack 0
   286                           
   287                           ;initializer for _OLED_update_time
   288  01C89A  03                 	db	3
   289                           
   290                           ;initializer for _next_adc_channel
   291  01C89B  3C                 	db	60
   292                           
   293                           	psect	idataBANK1
   294  01C69A                     __pidataBANK1:
   295                           	opt callstack 0
   296                           
   297                           ;initializer for getCauseOfResetString@strings
   298  01C69A  A2                 	db	low STR_23
   299  01C69B  FB                 	db	high STR_23
   300  01C69C  1C                 	db	low STR_24
   301  01C69D  FC                 	db	high STR_24
   302  01C69E  B2                 	db	low STR_25
   303  01C69F  FB                 	db	high STR_25
   304  01C6A0  E8                 	db	low STR_26
   305  01C6A1  FA                 	db	high STR_26
   306  01C6A2  67                 	db	low (STR_28+9)
   307  01C6A3  F4                 	db	high (STR_28+9)
   308  01C6A4  5E                 	db	low STR_28
   309  01C6A5  F4                 	db	high STR_28
   310  01C6A6  D0                 	db	low STR_29
   311  01C6A7  F8                 	db	high STR_29
   312  01C6A8  70                 	db	low STR_30
   313  01C6A9  FA                 	db	high STR_30
   314  01C6AA  30                 	db	low STR_31
   315  01C6AB  FA                 	db	high STR_31
   316                           
   317                           	psect	idataBANK2
   318  01C6AC                     __pidataBANK2:
   319                           	opt callstack 0
   320                           
   321                           ;initializer for getCauseOfResetStringSmall@strings
   322  01C6AC  BA                 	db	low STR_22
   323  01C6AD  FE                 	db	high STR_22
   324  01C6AE  B0                 	db	low STR_34
   325  01C6AF  FE                 	db	high STR_34
   326  01C6B0  A6                 	db	low STR_35
   327  01C6B1  FE                 	db	high STR_35
   328  01C6B2  54                 	db	low STR_36
   329  01C6B3  FE                 	db	high STR_36
   330  01C6B4  60                 	db	low (STR_38+1)
   331  01C6B5  FE                 	db	high (STR_38+1)
   332  01C6B6  5F                 	db	low STR_38
   333  01C6B7  FE                 	db	high STR_38
   334  01C6B8  0D                 	db	low STR_39
   335  01C6B9  FC                 	db	high STR_39
   336  01C6BA  3E                 	db	low STR_40
   337  01C6BB  FE                 	db	high STR_40
   338  01C6BC  49                 	db	low STR_41
   339  01C6BD  FE                 	db	high STR_41
   340                           
   341                           	psect	mediumconst
   342  00E4BE                     __pmediumconst:
   343                           	opt callstack 0
   344  00E4BE  00                 	db	0
   345  00E4BF                     __powers_:
   346                           	opt callstack 0
   347  00E4BF  0000               	dw	0
   348  00E4C1  3F80               	dw	16256
   349  00E4C3  0000               	dw	0
   350  00E4C5  4120               	dw	16672
   351  00E4C7  0000               	dw	0
   352  00E4C9  42C8               	dw	17096
   353  00E4CB  0000               	dw	0
   354  00E4CD  447A               	dw	17530
   355  00E4CF  4000               	dw	16384
   356  00E4D1  461C               	dw	17948
   357  00E4D3  5000               	dw	20480
   358  00E4D5  47C3               	dw	18371
   359  00E4D7  2400               	dw	9216
   360  00E4D9  4974               	dw	18804
   361  00E4DB  9680               	dw	38528
   362  00E4DD  4B18               	dw	19224
   363  00E4DF  BC20               	dw	48160
   364  00E4E1  4CBE               	dw	19646
   365  00E4E3  6B28               	dw	27432
   366  00E4E5  4E6E               	dw	20078
   367  00E4E7  02F9               	dw	761
   368  00E4E9  5015               	dw	20501
   369  00E4EB  78EC               	dw	30956
   370  00E4ED  60AD               	dw	24749
   371  00E4EF  F2CA               	dw	62154
   372  00E4F1  7149               	dw	29001
   373  00E4F3                     __end_of__powers_:
   374                           	opt callstack 0
   375  00E4F3                     __npowers_:
   376                           	opt callstack 0
   377  00E4F3  0000               	dw	0
   378  00E4F5  3F80               	dw	16256
   379  00E4F7  CCCD               	dw	52429
   380  00E4F9  3DCC               	dw	15820
   381  00E4FB  D70A               	dw	55050
   382  00E4FD  3C23               	dw	15395
   383  00E4FF  126F               	dw	4719
   384  00E501  3A83               	dw	14979
   385  00E503  B717               	dw	46871
   386  00E505  38D1               	dw	14545
   387  00E507  C5AC               	dw	50604
   388  00E509  3727               	dw	14119
   389  00E50B  37BD               	dw	14269
   390  00E50D  3586               	dw	13702
   391  00E50F  BF95               	dw	49045
   392  00E511  33D6               	dw	13270
   393  00E513  CC77               	dw	52343
   394  00E515  322B               	dw	12843
   395  00E517  705F               	dw	28767
   396  00E519  3089               	dw	12425
   397  00E51B  E6FF               	dw	59135
   398  00E51D  2EDB               	dw	11995
   399  00E51F  E508               	dw	58632
   400  00E521  1E3C               	dw	7740
   401  00E523  4260               	dw	16992
   402  00E525  0DA2               	dw	3490
   403  00E527                     __end_of__npowers_:
   404                           	opt callstack 0
   405  00E527                     _hexpowers:
   406                           	opt callstack 0
   407  00E527  0001               	dw	1
   408  00E529  0000               	dw	0
   409  00E52B  0010               	dw	16
   410  00E52D  0000               	dw	0
   411  00E52F  0100               	dw	256
   412  00E531  0000               	dw	0
   413  00E533  1000               	dw	4096
   414  00E535  0000               	dw	0
   415  00E537  0000               	dw	0
   416  00E539  0001               	dw	1
   417  00E53B  0000               	dw	0
   418  00E53D  0010               	dw	16
   419  00E53F  0000               	dw	0
   420  00E541  0100               	dw	256
   421  00E543  0000               	dw	0
   422  00E545  1000               	dw	4096
   423  00E547                     __end_of_hexpowers:
   424                           	opt callstack 0
   425  00E547                     _OledFont:
   426                           	opt callstack 0
   427  00E547  00                 	db	0
   428  00E548  00                 	db	0
   429  00E549  00                 	db	0
   430  00E54A  00                 	db	0
   431  00E54B  00                 	db	0
   432  00E54C  00                 	db	0
   433  00E54D  00                 	db	0
   434  00E54E  00                 	db	0
   435  00E54F  00                 	db	0
   436  00E550  00                 	db	0
   437  00E551  5F                 	db	95
   438  00E552  00                 	db	0
   439  00E553  00                 	db	0
   440  00E554  00                 	db	0
   441  00E555  00                 	db	0
   442  00E556  00                 	db	0
   443  00E557  00                 	db	0
   444  00E558  00                 	db	0
   445  00E559  07                 	db	7
   446  00E55A  00                 	db	0
   447  00E55B  07                 	db	7
   448  00E55C  00                 	db	0
   449  00E55D  00                 	db	0
   450  00E55E  00                 	db	0
   451  00E55F  00                 	db	0
   452  00E560  14                 	db	20
   453  00E561  7F                 	db	127
   454  00E562  14                 	db	20
   455  00E563  7F                 	db	127
   456  00E564  14                 	db	20
   457  00E565  00                 	db	0
   458  00E566  00                 	db	0
   459  00E567  00                 	db	0
   460  00E568  24                 	db	36
   461  00E569  2A                 	db	42
   462  00E56A  7F                 	db	127
   463  00E56B  2A                 	db	42
   464  00E56C  12                 	db	18
   465  00E56D  00                 	db	0
   466  00E56E  00                 	db	0
   467  00E56F  00                 	db	0
   468  00E570  23                 	db	35
   469  00E571  13                 	db	19
   470  00E572  08                 	db	8
   471  00E573  64                 	db	100
   472  00E574  62                 	db	98
   473  00E575  00                 	db	0
   474  00E576  00                 	db	0
   475  00E577  00                 	db	0
   476  00E578  36                 	db	54
   477  00E579  49                 	db	73
   478  00E57A  55                 	db	85
   479  00E57B  22                 	db	34
   480  00E57C  50                 	db	80
   481  00E57D  00                 	db	0
   482  00E57E  00                 	db	0
   483  00E57F  00                 	db	0
   484  00E580  00                 	db	0
   485  00E581  05                 	db	5
   486  00E582  03                 	db	3
   487  00E583  00                 	db	0
   488  00E584  00                 	db	0
   489  00E585  00                 	db	0
   490  00E586  00                 	db	0
   491  00E587  00                 	db	0
   492  00E588  1C                 	db	28
   493  00E589  22                 	db	34
   494  00E58A  41                 	db	65
   495  00E58B  00                 	db	0
   496  00E58C  00                 	db	0
   497  00E58D  00                 	db	0
   498  00E58E  00                 	db	0
   499  00E58F  00                 	db	0
   500  00E590  41                 	db	65
   501  00E591  22                 	db	34
   502  00E592  1C                 	db	28
   503  00E593  00                 	db	0
   504  00E594  00                 	db	0
   505  00E595  00                 	db	0
   506  00E596  00                 	db	0
   507  00E597  00                 	db	0
   508  00E598  08                 	db	8
   509  00E599  2A                 	db	42
   510  00E59A  1C                 	db	28
   511  00E59B  2A                 	db	42
   512  00E59C  08                 	db	8
   513  00E59D  00                 	db	0
   514  00E59E  00                 	db	0
   515  00E59F  00                 	db	0
   516  00E5A0  08                 	db	8
   517  00E5A1  08                 	db	8
   518  00E5A2  3E                 	db	62
   519  00E5A3  08                 	db	8
   520  00E5A4  08                 	db	8
   521  00E5A5  00                 	db	0
   522  00E5A6  00                 	db	0
   523  00E5A7  00                 	db	0
   524  00E5A8  A0                 	db	160
   525  00E5A9  60                 	db	96
   526  00E5AA  00                 	db	0
   527  00E5AB  00                 	db	0
   528  00E5AC  00                 	db	0
   529  00E5AD  00                 	db	0
   530  00E5AE  00                 	db	0
   531  00E5AF  00                 	db	0
   532  00E5B0  08                 	db	8
   533  00E5B1  08                 	db	8
   534  00E5B2  08                 	db	8
   535  00E5B3  08                 	db	8
   536  00E5B4  08                 	db	8
   537  00E5B5  00                 	db	0
   538  00E5B6  00                 	db	0
   539  00E5B7  00                 	db	0
   540  00E5B8  60                 	db	96
   541  00E5B9  60                 	db	96
   542  00E5BA  00                 	db	0
   543  00E5BB  00                 	db	0
   544  00E5BC  00                 	db	0
   545  00E5BD  00                 	db	0
   546  00E5BE  00                 	db	0
   547  00E5BF  00                 	db	0
   548  00E5C0  20                 	db	32
   549  00E5C1  10                 	db	16
   550  00E5C2  08                 	db	8
   551  00E5C3  04                 	db	4
   552  00E5C4  02                 	db	2
   553  00E5C5  00                 	db	0
   554  00E5C6  00                 	db	0
   555  00E5C7  00                 	db	0
   556  00E5C8  3E                 	db	62
   557  00E5C9  51                 	db	81
   558  00E5CA  49                 	db	73
   559  00E5CB  45                 	db	69
   560  00E5CC  3E                 	db	62
   561  00E5CD  00                 	db	0
   562  00E5CE  00                 	db	0
   563  00E5CF  00                 	db	0
   564  00E5D0  00                 	db	0
   565  00E5D1  42                 	db	66
   566  00E5D2  7F                 	db	127
   567  00E5D3  40                 	db	64
   568  00E5D4  00                 	db	0
   569  00E5D5  00                 	db	0
   570  00E5D6  00                 	db	0
   571  00E5D7  00                 	db	0
   572  00E5D8  62                 	db	98
   573  00E5D9  51                 	db	81
   574  00E5DA  49                 	db	73
   575  00E5DB  49                 	db	73
   576  00E5DC  46                 	db	70
   577  00E5DD  00                 	db	0
   578  00E5DE  00                 	db	0
   579  00E5DF  00                 	db	0
   580  00E5E0  22                 	db	34
   581  00E5E1  41                 	db	65
   582  00E5E2  49                 	db	73
   583  00E5E3  49                 	db	73
   584  00E5E4  36                 	db	54
   585  00E5E5  00                 	db	0
   586  00E5E6  00                 	db	0
   587  00E5E7  00                 	db	0
   588  00E5E8  18                 	db	24
   589  00E5E9  14                 	db	20
   590  00E5EA  12                 	db	18
   591  00E5EB  7F                 	db	127
   592  00E5EC  10                 	db	16
   593  00E5ED  00                 	db	0
   594  00E5EE  00                 	db	0
   595  00E5EF  00                 	db	0
   596  00E5F0  27                 	db	39
   597  00E5F1  45                 	db	69
   598  00E5F2  45                 	db	69
   599  00E5F3  45                 	db	69
   600  00E5F4  39                 	db	57
   601  00E5F5  00                 	db	0
   602  00E5F6  00                 	db	0
   603  00E5F7  00                 	db	0
   604  00E5F8  3C                 	db	60
   605  00E5F9  4A                 	db	74
   606  00E5FA  49                 	db	73
   607  00E5FB  49                 	db	73
   608  00E5FC  30                 	db	48
   609  00E5FD  00                 	db	0
   610  00E5FE  00                 	db	0
   611  00E5FF  00                 	db	0
   612  00E600  01                 	db	1
   613  00E601  71                 	db	113
   614  00E602  09                 	db	9
   615  00E603  05                 	db	5
   616  00E604  03                 	db	3
   617  00E605  00                 	db	0
   618  00E606  00                 	db	0
   619  00E607  00                 	db	0
   620  00E608  36                 	db	54
   621  00E609  49                 	db	73
   622  00E60A  49                 	db	73
   623  00E60B  49                 	db	73
   624  00E60C  36                 	db	54
   625  00E60D  00                 	db	0
   626  00E60E  00                 	db	0
   627  00E60F  00                 	db	0
   628  00E610  06                 	db	6
   629  00E611  49                 	db	73
   630  00E612  49                 	db	73
   631  00E613  29                 	db	41
   632  00E614  1E                 	db	30
   633  00E615  00                 	db	0
   634  00E616  00                 	db	0
   635  00E617  00                 	db	0
   636  00E618  00                 	db	0
   637  00E619  36                 	db	54
   638  00E61A  36                 	db	54
   639  00E61B  00                 	db	0
   640  00E61C  00                 	db	0
   641  00E61D  00                 	db	0
   642  00E61E  00                 	db	0
   643  00E61F  00                 	db	0
   644  00E620  00                 	db	0
   645  00E621  AC                 	db	172
   646  00E622  6C                 	db	108
   647  00E623  00                 	db	0
   648  00E624  00                 	db	0
   649  00E625  00                 	db	0
   650  00E626  00                 	db	0
   651  00E627  00                 	db	0
   652  00E628  08                 	db	8
   653  00E629  14                 	db	20
   654  00E62A  22                 	db	34
   655  00E62B  41                 	db	65
   656  00E62C  00                 	db	0
   657  00E62D  00                 	db	0
   658  00E62E  00                 	db	0
   659  00E62F  00                 	db	0
   660  00E630  14                 	db	20
   661  00E631  14                 	db	20
   662  00E632  14                 	db	20
   663  00E633  14                 	db	20
   664  00E634  14                 	db	20
   665  00E635  00                 	db	0
   666  00E636  00                 	db	0
   667  00E637  00                 	db	0
   668  00E638  41                 	db	65
   669  00E639  22                 	db	34
   670  00E63A  14                 	db	20
   671  00E63B  08                 	db	8
   672  00E63C  00                 	db	0
   673  00E63D  00                 	db	0
   674  00E63E  00                 	db	0
   675  00E63F  00                 	db	0
   676  00E640  02                 	db	2
   677  00E641  01                 	db	1
   678  00E642  51                 	db	81
   679  00E643  09                 	db	9
   680  00E644  06                 	db	6
   681  00E645  00                 	db	0
   682  00E646  00                 	db	0
   683  00E647  00                 	db	0
   684  00E648  32                 	db	50
   685  00E649  49                 	db	73
   686  00E64A  79                 	db	121
   687  00E64B  41                 	db	65
   688  00E64C  3E                 	db	62
   689  00E64D  00                 	db	0
   690  00E64E  00                 	db	0
   691  00E64F  00                 	db	0
   692  00E650  7E                 	db	126
   693  00E651  09                 	db	9
   694  00E652  09                 	db	9
   695  00E653  09                 	db	9
   696  00E654  7E                 	db	126
   697  00E655  00                 	db	0
   698  00E656  00                 	db	0
   699  00E657  00                 	db	0
   700  00E658  7F                 	db	127
   701  00E659  49                 	db	73
   702  00E65A  49                 	db	73
   703  00E65B  49                 	db	73
   704  00E65C  36                 	db	54
   705  00E65D  00                 	db	0
   706  00E65E  00                 	db	0
   707  00E65F  00                 	db	0
   708  00E660  3E                 	db	62
   709  00E661  41                 	db	65
   710  00E662  41                 	db	65
   711  00E663  41                 	db	65
   712  00E664  22                 	db	34
   713  00E665  00                 	db	0
   714  00E666  00                 	db	0
   715  00E667  00                 	db	0
   716  00E668  7F                 	db	127
   717  00E669  41                 	db	65
   718  00E66A  41                 	db	65
   719  00E66B  22                 	db	34
   720  00E66C  1C                 	db	28
   721  00E66D  00                 	db	0
   722  00E66E  00                 	db	0
   723  00E66F  00                 	db	0
   724  00E670  7F                 	db	127
   725  00E671  49                 	db	73
   726  00E672  49                 	db	73
   727  00E673  49                 	db	73
   728  00E674  41                 	db	65
   729  00E675  00                 	db	0
   730  00E676  00                 	db	0
   731  00E677  00                 	db	0
   732  00E678  7F                 	db	127
   733  00E679  09                 	db	9
   734  00E67A  09                 	db	9
   735  00E67B  09                 	db	9
   736  00E67C  01                 	db	1
   737  00E67D  00                 	db	0
   738  00E67E  00                 	db	0
   739  00E67F  00                 	db	0
   740  00E680  3E                 	db	62
   741  00E681  41                 	db	65
   742  00E682  41                 	db	65
   743  00E683  51                 	db	81
   744  00E684  72                 	db	114
   745  00E685  00                 	db	0
   746  00E686  00                 	db	0
   747  00E687  00                 	db	0
   748  00E688  7F                 	db	127
   749  00E689  08                 	db	8
   750  00E68A  08                 	db	8
   751  00E68B  08                 	db	8
   752  00E68C  7F                 	db	127
   753  00E68D  00                 	db	0
   754  00E68E  00                 	db	0
   755  00E68F  00                 	db	0
   756  00E690  41                 	db	65
   757  00E691  7F                 	db	127
   758  00E692  41                 	db	65
   759  00E693  00                 	db	0
   760  00E694  00                 	db	0
   761  00E695  00                 	db	0
   762  00E696  00                 	db	0
   763  00E697  00                 	db	0
   764  00E698  20                 	db	32
   765  00E699  40                 	db	64
   766  00E69A  41                 	db	65
   767  00E69B  3F                 	db	63
   768  00E69C  01                 	db	1
   769  00E69D  00                 	db	0
   770  00E69E  00                 	db	0
   771  00E69F  00                 	db	0
   772  00E6A0  7F                 	db	127
   773  00E6A1  08                 	db	8
   774  00E6A2  14                 	db	20
   775  00E6A3  22                 	db	34
   776  00E6A4  41                 	db	65
   777  00E6A5  00                 	db	0
   778  00E6A6  00                 	db	0
   779  00E6A7  00                 	db	0
   780  00E6A8  7F                 	db	127
   781  00E6A9  40                 	db	64
   782  00E6AA  40                 	db	64
   783  00E6AB  40                 	db	64
   784  00E6AC  40                 	db	64
   785  00E6AD  00                 	db	0
   786  00E6AE  00                 	db	0
   787  00E6AF  00                 	db	0
   788  00E6B0  7F                 	db	127
   789  00E6B1  02                 	db	2
   790  00E6B2  0C                 	db	12
   791  00E6B3  02                 	db	2
   792  00E6B4  7F                 	db	127
   793  00E6B5  00                 	db	0
   794  00E6B6  00                 	db	0
   795  00E6B7  00                 	db	0
   796  00E6B8  7F                 	db	127
   797  00E6B9  04                 	db	4
   798  00E6BA  08                 	db	8
   799  00E6BB  10                 	db	16
   800  00E6BC  7F                 	db	127
   801  00E6BD  00                 	db	0
   802  00E6BE  00                 	db	0
   803  00E6BF  00                 	db	0
   804  00E6C0  3E                 	db	62
   805  00E6C1  41                 	db	65
   806  00E6C2  41                 	db	65
   807  00E6C3  41                 	db	65
   808  00E6C4  3E                 	db	62
   809  00E6C5  00                 	db	0
   810  00E6C6  00                 	db	0
   811  00E6C7  00                 	db	0
   812  00E6C8  7F                 	db	127
   813  00E6C9  09                 	db	9
   814  00E6CA  09                 	db	9
   815  00E6CB  09                 	db	9
   816  00E6CC  06                 	db	6
   817  00E6CD  00                 	db	0
   818  00E6CE  00                 	db	0
   819  00E6CF  00                 	db	0
   820  00E6D0  3E                 	db	62
   821  00E6D1  41                 	db	65
   822  00E6D2  51                 	db	81
   823  00E6D3  21                 	db	33
   824  00E6D4  5E                 	db	94
   825  00E6D5  00                 	db	0
   826  00E6D6  00                 	db	0
   827  00E6D7  00                 	db	0
   828  00E6D8  7F                 	db	127
   829  00E6D9  09                 	db	9
   830  00E6DA  19                 	db	25
   831  00E6DB  29                 	db	41
   832  00E6DC  46                 	db	70
   833  00E6DD  00                 	db	0
   834  00E6DE  00                 	db	0
   835  00E6DF  00                 	db	0
   836  00E6E0  26                 	db	38
   837  00E6E1  49                 	db	73
   838  00E6E2  49                 	db	73
   839  00E6E3  49                 	db	73
   840  00E6E4  32                 	db	50
   841  00E6E5  00                 	db	0
   842  00E6E6  00                 	db	0
   843  00E6E7  00                 	db	0
   844  00E6E8  01                 	db	1
   845  00E6E9  01                 	db	1
   846  00E6EA  7F                 	db	127
   847  00E6EB  01                 	db	1
   848  00E6EC  01                 	db	1
   849  00E6ED  00                 	db	0
   850  00E6EE  00                 	db	0
   851  00E6EF  00                 	db	0
   852  00E6F0  3F                 	db	63
   853  00E6F1  40                 	db	64
   854  00E6F2  40                 	db	64
   855  00E6F3  40                 	db	64
   856  00E6F4  3F                 	db	63
   857  00E6F5  00                 	db	0
   858  00E6F6  00                 	db	0
   859  00E6F7  00                 	db	0
   860  00E6F8  1F                 	db	31
   861  00E6F9  20                 	db	32
   862  00E6FA  40                 	db	64
   863  00E6FB  20                 	db	32
   864  00E6FC  1F                 	db	31
   865  00E6FD  00                 	db	0
   866  00E6FE  00                 	db	0
   867  00E6FF  00                 	db	0
   868  00E700  3F                 	db	63
   869  00E701  40                 	db	64
   870  00E702  38                 	db	56
   871  00E703  40                 	db	64
   872  00E704  3F                 	db	63
   873  00E705  00                 	db	0
   874  00E706  00                 	db	0
   875  00E707  00                 	db	0
   876  00E708  63                 	db	99
   877  00E709  14                 	db	20
   878  00E70A  08                 	db	8
   879  00E70B  14                 	db	20
   880  00E70C  63                 	db	99
   881  00E70D  00                 	db	0
   882  00E70E  00                 	db	0
   883  00E70F  00                 	db	0
   884  00E710  03                 	db	3
   885  00E711  04                 	db	4
   886  00E712  78                 	db	120
   887  00E713  04                 	db	4
   888  00E714  03                 	db	3
   889  00E715  00                 	db	0
   890  00E716  00                 	db	0
   891  00E717  00                 	db	0
   892  00E718  61                 	db	97
   893  00E719  51                 	db	81
   894  00E71A  49                 	db	73
   895  00E71B  45                 	db	69
   896  00E71C  43                 	db	67
   897  00E71D  00                 	db	0
   898  00E71E  00                 	db	0
   899  00E71F  00                 	db	0
   900  00E720  7F                 	db	127
   901  00E721  41                 	db	65
   902  00E722  41                 	db	65
   903  00E723  00                 	db	0
   904  00E724  00                 	db	0
   905  00E725  00                 	db	0
   906  00E726  00                 	db	0
   907  00E727  00                 	db	0
   908  00E728  02                 	db	2
   909  00E729  04                 	db	4
   910  00E72A  08                 	db	8
   911  00E72B  10                 	db	16
   912  00E72C  20                 	db	32
   913  00E72D  00                 	db	0
   914  00E72E  00                 	db	0
   915  00E72F  00                 	db	0
   916  00E730  41                 	db	65
   917  00E731  41                 	db	65
   918  00E732  7F                 	db	127
   919  00E733  00                 	db	0
   920  00E734  00                 	db	0
   921  00E735  00                 	db	0
   922  00E736  00                 	db	0
   923  00E737  00                 	db	0
   924  00E738  04                 	db	4
   925  00E739  02                 	db	2
   926  00E73A  01                 	db	1
   927  00E73B  02                 	db	2
   928  00E73C  04                 	db	4
   929  00E73D  00                 	db	0
   930  00E73E  00                 	db	0
   931  00E73F  00                 	db	0
   932  00E740  80                 	db	128
   933  00E741  80                 	db	128
   934  00E742  80                 	db	128
   935  00E743  80                 	db	128
   936  00E744  80                 	db	128
   937  00E745  00                 	db	0
   938  00E746  00                 	db	0
   939  00E747  00                 	db	0
   940  00E748  01                 	db	1
   941  00E749  02                 	db	2
   942  00E74A  04                 	db	4
   943  00E74B  00                 	db	0
   944  00E74C  00                 	db	0
   945  00E74D  00                 	db	0
   946  00E74E  00                 	db	0
   947  00E74F  00                 	db	0
   948  00E750  20                 	db	32
   949  00E751  54                 	db	84
   950  00E752  54                 	db	84
   951  00E753  54                 	db	84
   952  00E754  78                 	db	120
   953  00E755  00                 	db	0
   954  00E756  00                 	db	0
   955  00E757  00                 	db	0
   956  00E758  7F                 	db	127
   957  00E759  48                 	db	72
   958  00E75A  44                 	db	68
   959  00E75B  44                 	db	68
   960  00E75C  38                 	db	56
   961  00E75D  00                 	db	0
   962  00E75E  00                 	db	0
   963  00E75F  00                 	db	0
   964  00E760  38                 	db	56
   965  00E761  44                 	db	68
   966  00E762  44                 	db	68
   967  00E763  28                 	db	40
   968  00E764  00                 	db	0
   969  00E765  00                 	db	0
   970  00E766  00                 	db	0
   971  00E767  00                 	db	0
   972  00E768  38                 	db	56
   973  00E769  44                 	db	68
   974  00E76A  44                 	db	68
   975  00E76B  48                 	db	72
   976  00E76C  7F                 	db	127
   977  00E76D  00                 	db	0
   978  00E76E  00                 	db	0
   979  00E76F  00                 	db	0
   980  00E770  38                 	db	56
   981  00E771  54                 	db	84
   982  00E772  54                 	db	84
   983  00E773  54                 	db	84
   984  00E774  18                 	db	24
   985  00E775  00                 	db	0
   986  00E776  00                 	db	0
   987  00E777  00                 	db	0
   988  00E778  08                 	db	8
   989  00E779  7E                 	db	126
   990  00E77A  09                 	db	9
   991  00E77B  02                 	db	2
   992  00E77C  00                 	db	0
   993  00E77D  00                 	db	0
   994  00E77E  00                 	db	0
   995  00E77F  00                 	db	0
   996  00E780  18                 	db	24
   997  00E781  A4                 	db	164
   998  00E782  A4                 	db	164
   999  00E783  A4                 	db	164
  1000  00E784  7C                 	db	124
  1001  00E785  00                 	db	0
  1002  00E786  00                 	db	0
  1003  00E787  00                 	db	0
  1004  00E788  7F                 	db	127
  1005  00E789  08                 	db	8
  1006  00E78A  04                 	db	4
  1007  00E78B  04                 	db	4
  1008  00E78C  78                 	db	120
  1009  00E78D  00                 	db	0
  1010  00E78E  00                 	db	0
  1011  00E78F  00                 	db	0
  1012  00E790  00                 	db	0
  1013  00E791  7D                 	db	125
  1014  00E792  00                 	db	0
  1015  00E793  00                 	db	0
  1016  00E794  00                 	db	0
  1017  00E795  00                 	db	0
  1018  00E796  00                 	db	0
  1019  00E797  00                 	db	0
  1020  00E798  80                 	db	128
  1021  00E799  84                 	db	132
  1022  00E79A  7D                 	db	125
  1023  00E79B  00                 	db	0
  1024  00E79C  00                 	db	0
  1025  00E79D  00                 	db	0
  1026  00E79E  00                 	db	0
  1027  00E79F  00                 	db	0
  1028  00E7A0  7F                 	db	127
  1029  00E7A1  10                 	db	16
  1030  00E7A2  28                 	db	40
  1031  00E7A3  44                 	db	68
  1032  00E7A4  00                 	db	0
  1033  00E7A5  00                 	db	0
  1034  00E7A6  00                 	db	0
  1035  00E7A7  00                 	db	0
  1036  00E7A8  41                 	db	65
  1037  00E7A9  7F                 	db	127
  1038  00E7AA  40                 	db	64
  1039  00E7AB  00                 	db	0
  1040  00E7AC  00                 	db	0
  1041  00E7AD  00                 	db	0
  1042  00E7AE  00                 	db	0
  1043  00E7AF  00                 	db	0
  1044  00E7B0  7C                 	db	124
  1045  00E7B1  04                 	db	4
  1046  00E7B2  18                 	db	24
  1047  00E7B3  04                 	db	4
  1048  00E7B4  78                 	db	120
  1049  00E7B5  00                 	db	0
  1050  00E7B6  00                 	db	0
  1051  00E7B7  00                 	db	0
  1052  00E7B8  7C                 	db	124
  1053  00E7B9  08                 	db	8
  1054  00E7BA  04                 	db	4
  1055  00E7BB  7C                 	db	124
  1056  00E7BC  00                 	db	0
  1057  00E7BD  00                 	db	0
  1058  00E7BE  00                 	db	0
  1059  00E7BF  00                 	db	0
  1060  00E7C0  38                 	db	56
  1061  00E7C1  44                 	db	68
  1062  00E7C2  44                 	db	68
  1063  00E7C3  38                 	db	56
  1064  00E7C4  00                 	db	0
  1065  00E7C5  00                 	db	0
  1066  00E7C6  00                 	db	0
  1067  00E7C7  00                 	db	0
  1068  00E7C8  FC                 	db	252
  1069  00E7C9  24                 	db	36
  1070  00E7CA  24                 	db	36
  1071  00E7CB  18                 	db	24
  1072  00E7CC  00                 	db	0
  1073  00E7CD  00                 	db	0
  1074  00E7CE  00                 	db	0
  1075  00E7CF  00                 	db	0
  1076  00E7D0  18                 	db	24
  1077  00E7D1  24                 	db	36
  1078  00E7D2  24                 	db	36
  1079  00E7D3  FC                 	db	252
  1080  00E7D4  00                 	db	0
  1081  00E7D5  00                 	db	0
  1082  00E7D6  00                 	db	0
  1083  00E7D7  00                 	db	0
  1084  00E7D8  00                 	db	0
  1085  00E7D9  7C                 	db	124
  1086  00E7DA  08                 	db	8
  1087  00E7DB  04                 	db	4
  1088  00E7DC  00                 	db	0
  1089  00E7DD  00                 	db	0
  1090  00E7DE  00                 	db	0
  1091  00E7DF  00                 	db	0
  1092  00E7E0  48                 	db	72
  1093  00E7E1  54                 	db	84
  1094  00E7E2  54                 	db	84
  1095  00E7E3  24                 	db	36
  1096  00E7E4  00                 	db	0
  1097  00E7E5  00                 	db	0
  1098  00E7E6  00                 	db	0
  1099  00E7E7  00                 	db	0
  1100  00E7E8  04                 	db	4
  1101  00E7E9  7F                 	db	127
  1102  00E7EA  44                 	db	68
  1103  00E7EB  00                 	db	0
  1104  00E7EC  00                 	db	0
  1105  00E7ED  00                 	db	0
  1106  00E7EE  00                 	db	0
  1107  00E7EF  00                 	db	0
  1108  00E7F0  3C                 	db	60
  1109  00E7F1  40                 	db	64
  1110  00E7F2  40                 	db	64
  1111  00E7F3  7C                 	db	124
  1112  00E7F4  00                 	db	0
  1113  00E7F5  00                 	db	0
  1114  00E7F6  00                 	db	0
  1115  00E7F7  00                 	db	0
  1116  00E7F8  1C                 	db	28
  1117  00E7F9  20                 	db	32
  1118  00E7FA  40                 	db	64
  1119  00E7FB  20                 	db	32
  1120  00E7FC  1C                 	db	28
  1121  00E7FD  00                 	db	0
  1122  00E7FE  00                 	db	0
  1123  00E7FF  00                 	db	0
  1124  00E800  3C                 	db	60
  1125  00E801  40                 	db	64
  1126  00E802  30                 	db	48
  1127  00E803  40                 	db	64
  1128  00E804  3C                 	db	60
  1129  00E805  00                 	db	0
  1130  00E806  00                 	db	0
  1131  00E807  00                 	db	0
  1132  00E808  44                 	db	68
  1133  00E809  28                 	db	40
  1134  00E80A  10                 	db	16
  1135  00E80B  28                 	db	40
  1136  00E80C  44                 	db	68
  1137  00E80D  00                 	db	0
  1138  00E80E  00                 	db	0
  1139  00E80F  00                 	db	0
  1140  00E810  1C                 	db	28
  1141  00E811  A0                 	db	160
  1142  00E812  A0                 	db	160
  1143  00E813  7C                 	db	124
  1144  00E814  00                 	db	0
  1145  00E815  00                 	db	0
  1146  00E816  00                 	db	0
  1147  00E817  00                 	db	0
  1148  00E818  44                 	db	68
  1149  00E819  64                 	db	100
  1150  00E81A  54                 	db	84
  1151  00E81B  4C                 	db	76
  1152  00E81C  44                 	db	68
  1153  00E81D  00                 	db	0
  1154  00E81E  00                 	db	0
  1155  00E81F  00                 	db	0
  1156  00E820  08                 	db	8
  1157  00E821  36                 	db	54
  1158  00E822  41                 	db	65
  1159  00E823  00                 	db	0
  1160  00E824  00                 	db	0
  1161  00E825  00                 	db	0
  1162  00E826  00                 	db	0
  1163  00E827  00                 	db	0
  1164  00E828  00                 	db	0
  1165  00E829  7F                 	db	127
  1166  00E82A  00                 	db	0
  1167  00E82B  00                 	db	0
  1168  00E82C  00                 	db	0
  1169  00E82D  00                 	db	0
  1170  00E82E  00                 	db	0
  1171  00E82F  00                 	db	0
  1172  00E830  41                 	db	65
  1173  00E831  36                 	db	54
  1174  00E832  08                 	db	8
  1175  00E833  00                 	db	0
  1176  00E834  00                 	db	0
  1177  00E835  00                 	db	0
  1178  00E836  00                 	db	0
  1179  00E837  00                 	db	0
  1180  00E838  02                 	db	2
  1181  00E839  01                 	db	1
  1182  00E83A  01                 	db	1
  1183  00E83B  02                 	db	2
  1184  00E83C  01                 	db	1
  1185  00E83D  00                 	db	0
  1186  00E83E  00                 	db	0
  1187  00E83F  00                 	db	0
  1188  00E840  02                 	db	2
  1189  00E841  05                 	db	5
  1190  00E842  05                 	db	5
  1191  00E843  02                 	db	2
  1192  00E844  00                 	db	0
  1193  00E845  00                 	db	0
  1194  00E846  00                 	db	0
  1195  00E847                     __end_of_OledFont:
  1196                           	opt callstack 0
  1197  00E847                     _dpowers:
  1198                           	opt callstack 0
  1199  00E847  0001               	dw	1
  1200  00E849  0000               	dw	0
  1201  00E84B  000A               	dw	10
  1202  00E84D  0000               	dw	0
  1203  00E84F  0064               	dw	100
  1204  00E851  0000               	dw	0
  1205  00E853  03E8               	dw	1000
  1206  00E855  0000               	dw	0
  1207  00E857  2710               	dw	10000
  1208  00E859  0000               	dw	0
  1209  00E85B  86A0               	dw	34464
  1210  00E85D  0001               	dw	1
  1211  00E85F  4240               	dw	16960
  1212  00E861  000F               	dw	15
  1213  00E863  9680               	dw	38528
  1214  00E865  0098               	dw	152
  1215  00E867  E100               	dw	57600
  1216  00E869  05F5               	dw	1525
  1217  00E86B  CA00               	dw	51712
  1218  00E86D  3B9A               	dw	15258
  1219  00E86F                     __end_of_dpowers:
  1220                           	opt callstack 0
  1221  00E86F  0EB8               	dw	3768
  1222  00E871  43BC               	dw	17340
  1223  00E873                     __end_of_temp_adc_offset:
  1224                           	opt callstack 0
  1225  00E873                     STR_231:
  1226  00E873  20                 	db	32
  1227  00E874  20                 	db	32
  1228  00E875  20                 	db	32
  1229  00E876  20                 	db	32
  1230  00E877  2A                 	db	42
  1231  00E878  49                 	db	73	;'I'
  1232  00E879  44                 	db	68	;'D'
  1233  00E87A  4E                 	db	78	;'N'
  1234  00E87B  3F                 	db	63	;'?'
  1235  00E87C  3A                 	db	58	;':'
  1236  00E87D  20                 	db	32
  1237  00E87E  50                 	db	80	;'P'
  1238  00E87F  72                 	db	114	;'r'
  1239  00E880  69                 	db	105	;'i'
  1240  00E881  6E                 	db	110	;'n'
  1241  00E882  74                 	db	116	;'t'
  1242  00E883  73                 	db	115	;'s'
  1243  00E884  20                 	db	32
  1244  00E885  69                 	db	105	;'i'
  1245  00E886  64                 	db	100	;'d'
  1246  00E887  65                 	db	101	;'e'
  1247  00E888  6E                 	db	110	;'n'
  1248  00E889  74                 	db	116	;'t'
  1249  00E88A  69                 	db	105	;'i'
  1250  00E88B  66                 	db	102	;'f'
  1251  00E88C  69                 	db	105	;'i'
  1252  00E88D  63                 	db	99	;'c'
  1253  00E88E  61                 	db	97	;'a'
  1254  00E88F  74                 	db	116	;'t'
  1255  00E890  69                 	db	105	;'i'
  1256  00E891  6F                 	db	111	;'o'
  1257  00E892  6E                 	db	110	;'n'
  1258  00E893  20                 	db	32
  1259  00E894  73                 	db	115	;'s'
  1260  00E895  74                 	db	116	;'t'
  1261  00E896  72                 	db	114	;'r'
  1262  00E897  69                 	db	105	;'i'
  1263  00E898  6E                 	db	110	;'n'
  1264  00E899  67                 	db	103	;'g'
  1265  00E89A  0A                 	db	10
  1266  00E89B  0D                 	db	13
  1267  00E89C  20                 	db	32
  1268  00E89D  20                 	db	32
  1269  00E89E  20                 	db	32
  1270  00E89F  20                 	db	32
  1271  00E8A0  52                 	db	82	;'R'
  1272  00E8A1  65                 	db	101	;'e'
  1273  00E8A2  73                 	db	115	;'s'
  1274  00E8A3  65                 	db	101	;'e'
  1275  00E8A4  74                 	db	116	;'t'
  1276  00E8A5  3A                 	db	58	;':'
  1277  00E8A6  20                 	db	32
  1278  00E8A7  45                 	db	69	;'E'
  1279  00E8A8  78                 	db	120	;'x'
  1280  00E8A9  65                 	db	101	;'e'
  1281  00E8AA  63                 	db	99	;'c'
  1282  00E8AB  75                 	db	117	;'u'
  1283  00E8AC  74                 	db	116	;'t'
  1284  00E8AD  65                 	db	101	;'e'
  1285  00E8AE  73                 	db	115	;'s'
  1286  00E8AF  20                 	db	32
  1287  00E8B0  73                 	db	115	;'s'
  1288  00E8B1  6F                 	db	111	;'o'
  1289  00E8B2  66                 	db	102	;'f'
  1290  00E8B3  74                 	db	116	;'t'
  1291  00E8B4  77                 	db	119	;'w'
  1292  00E8B5  61                 	db	97	;'a'
  1293  00E8B6  72                 	db	114	;'r'
  1294  00E8B7  65                 	db	101	;'e'
  1295  00E8B8  20                 	db	32
  1296  00E8B9  72                 	db	114	;'r'
  1297  00E8BA  65                 	db	101	;'e'
  1298  00E8BB  73                 	db	115	;'s'
  1299  00E8BC  65                 	db	101	;'e'
  1300  00E8BD  74                 	db	116	;'t'
  1301  00E8BE  20                 	db	32
  1302  00E8BF  69                 	db	105	;'i'
  1303  00E8C0  6E                 	db	110	;'n'
  1304  00E8C1  73                 	db	115	;'s'
  1305  00E8C2  74                 	db	116	;'t'
  1306  00E8C3  72                 	db	114	;'r'
  1307  00E8C4  75                 	db	117	;'u'
  1308  00E8C5  63                 	db	99	;'c'
  1309  00E8C6  74                 	db	116	;'t'
  1310  00E8C7  69                 	db	105	;'i'
  1311  00E8C8  6F                 	db	111	;'o'
  1312  00E8C9  6E                 	db	110	;'n'
  1313  00E8CA  0A                 	db	10
  1314  00E8CB  0D                 	db	13
  1315  00E8CC  20                 	db	32
  1316  00E8CD  20                 	db	32
  1317  00E8CE  20                 	db	32
  1318  00E8CF  20                 	db	32
  1319  00E8D0  43                 	db	67	;'C'
  1320  00E8D1  6C                 	db	108	;'l'
  1321  00E8D2  65                 	db	101	;'e'
  1322  00E8D3  61                 	db	97	;'a'
  1323  00E8D4  72                 	db	114	;'r'
  1324  00E8D5  3A                 	db	58	;':'
  1325  00E8D6  20                 	db	32
  1326  00E8D7  43                 	db	67	;'C'
  1327  00E8D8  6C                 	db	108	;'l'
  1328  00E8D9  65                 	db	101	;'e'
  1329  00E8DA  61                 	db	97	;'a'
  1330  00E8DB  72                 	db	114	;'r'
  1331  00E8DC  73                 	db	115	;'s'
  1332  00E8DD  20                 	db	32
  1333  00E8DE  74                 	db	116	;'t'
  1334  00E8DF  68                 	db	104	;'h'
  1335  00E8E0  65                 	db	101	;'e'
  1336  00E8E1  20                 	db	32
  1337  00E8E2  76                 	db	118	;'v'
  1338  00E8E3  69                 	db	105	;'i'
  1339  00E8E4  72                 	db	114	;'r'
  1340  00E8E5  74                 	db	116	;'t'
  1341  00E8E6  75                 	db	117	;'u'
  1342  00E8E7  61                 	db	97	;'a'
  1343  00E8E8  6C                 	db	108	;'l'
  1344  00E8E9  20                 	db	32
  1345  00E8EA  43                 	db	67	;'C'
  1346  00E8EB  4F                 	db	79	;'O'
  1347  00E8EC  4D                 	db	77	;'M'
  1348  00E8ED  20                 	db	32
  1349  00E8EE  70                 	db	112	;'p'
  1350  00E8EF  6F                 	db	111	;'o'
  1351  00E8F0  72                 	db	114	;'r'
  1352  00E8F1  74                 	db	116	;'t'
  1353  00E8F2  20                 	db	32
  1354  00E8F3  74                 	db	116	;'t'
  1355  00E8F4  65                 	db	101	;'e'
  1356  00E8F5  72                 	db	114	;'r'
  1357  00E8F6  6D                 	db	109	;'m'
  1358  00E8F7  69                 	db	105	;'i'
  1359  00E8F8  6E                 	db	110	;'n'
  1360  00E8F9  61                 	db	97	;'a'
  1361  00E8FA  6C                 	db	108	;'l'
  1362  00E8FB  0A                 	db	10
  1363  00E8FC  0D                 	db	13
  1364  00E8FD  20                 	db	32
  1365  00E8FE  20                 	db	32
  1366  00E8FF  20                 	db	32
  1367  00E900  20                 	db	32
  1368  00E901  43                 	db	67	;'C'
  1369  00E902  75                 	db	117	;'u'
  1370  00E903  72                 	db	114	;'r'
  1371  00E904  72                 	db	114	;'r'
  1372  00E905  65                 	db	101	;'e'
  1373  00E906  6E                 	db	110	;'n'
  1374  00E907  74                 	db	116	;'t'
  1375  00E908  20                 	db	32
  1376  00E909  4D                 	db	77	;'M'
  1377  00E90A  65                 	db	101	;'e'
  1378  00E90B  61                 	db	97	;'a'
  1379  00E90C  73                 	db	115	;'s'
  1380  00E90D  75                 	db	117	;'u'
  1381  00E90E  72                 	db	114	;'r'
  1382  00E90F  65                 	db	101	;'e'
  1383  00E910  6D                 	db	109	;'m'
  1384  00E911  65                 	db	101	;'e'
  1385  00E912  6E                 	db	110	;'n'
  1386  00E913  74                 	db	116	;'t'
  1387  00E914  73                 	db	115	;'s'
  1388  00E915  3F                 	db	63	;'?'
  1389  00E916  3A                 	db	58	;':'
  1390  00E917  20                 	db	32
  1391  00E918  50                 	db	80	;'P'
  1392  00E919  72                 	db	114	;'r'
  1393  00E91A  69                 	db	105	;'i'
  1394  00E91B  6E                 	db	110	;'n'
  1395  00E91C  74                 	db	116	;'t'
  1396  00E91D  73                 	db	115	;'s'
  1397  00E91E  20                 	db	32
  1398  00E91F  69                 	db	105	;'i'
  1399  00E920  6E                 	db	110	;'n'
  1400  00E921  73                 	db	115	;'s'
  1401  00E922  74                 	db	116	;'t'
  1402  00E923  61                 	db	97	;'a'
  1403  00E924  6E                 	db	110	;'n'
  1404  00E925  74                 	db	116	;'t'
  1405  00E926  61                 	db	97	;'a'
  1406  00E927  6E                 	db	110	;'n'
  1407  00E928  65                 	db	101	;'e'
  1408  00E929  6F                 	db	111	;'o'
  1409  00E92A  75                 	db	117	;'u'
  1410  00E92B  73                 	db	115	;'s'
  1411  00E92C  20                 	db	32
  1412  00E92D  73                 	db	115	;'s'
  1413  00E92E  79                 	db	121	;'y'
  1414  00E92F  73                 	db	115	;'s'
  1415  00E930  74                 	db	116	;'t'
  1416  00E931  65                 	db	101	;'e'
  1417  00E932  6D                 	db	109	;'m'
  1418  00E933  20                 	db	32
  1419  00E934  6C                 	db	108	;'l'
  1420  00E935  65                 	db	101	;'e'
  1421  00E936  76                 	db	118	;'v'
  1422  00E937  65                 	db	101	;'e'
  1423  00E938  6C                 	db	108	;'l'
  1424  00E939  20                 	db	32
  1425  00E93A  65                 	db	101	;'e'
  1426  00E93B  6C                 	db	108	;'l'
  1427  00E93C  65                 	db	101	;'e'
  1428  00E93D  63                 	db	99	;'c'
  1429  00E93E  74                 	db	116	;'t'
  1430  00E93F  72                 	db	114	;'r'
  1431  00E940  69                 	db	105	;'i'
  1432  00E941  63                 	db	99	;'c'
  1433  00E942  61                 	db	97	;'a'
  1434  00E943  6C                 	db	108	;'l'
  1435  00E944  20                 	db	32
  1436  00E945  6D                 	db	109	;'m'
  1437  00E946  65                 	db	101	;'e'
  1438  00E947  61                 	db	97	;'a'
  1439  00E948  73                 	db	115	;'s'
  1440  00E949  75                 	db	117	;'u'
  1441  00E94A  72                 	db	114	;'r'
  1442  00E94B  65                 	db	101	;'e'
  1443  00E94C  6D                 	db	109	;'m'
  1444  00E94D  65                 	db	101	;'e'
  1445  00E94E  6E                 	db	110	;'n'
  1446  00E94F  74                 	db	116	;'t'
  1447  00E950  73                 	db	115	;'s'
  1448  00E951  0A                 	db	10
  1449  00E952  0D                 	db	13
  1450  00E953  20                 	db	32
  1451  00E954  20                 	db	32
  1452  00E955  20                 	db	32
  1453  00E956  20                 	db	32
  1454  00E957  45                 	db	69	;'E'
  1455  00E958  6E                 	db	110	;'n'
  1456  00E959  61                 	db	97	;'a'
  1457  00E95A  62                 	db	98	;'b'
  1458  00E95B  6C                 	db	108	;'l'
  1459  00E95C  65                 	db	101	;'e'
  1460  00E95D  20                 	db	32
  1461  00E95E  4C                 	db	76	;'L'
  1462  00E95F  69                 	db	105	;'i'
  1463  00E960  76                 	db	118	;'v'
  1464  00E961  65                 	db	101	;'e'
  1465  00E962  20                 	db	32
  1466  00E963  4D                 	db	77	;'M'
  1467  00E964  65                 	db	101	;'e'
  1468  00E965  61                 	db	97	;'a'
  1469  00E966  73                 	db	115	;'s'
  1470  00E967  75                 	db	117	;'u'
  1471  00E968  72                 	db	114	;'r'
  1472  00E969  65                 	db	101	;'e'
  1473  00E96A  6D                 	db	109	;'m'
  1474  00E96B  65                 	db	101	;'e'
  1475  00E96C  6E                 	db	110	;'n'
  1476  00E96D  74                 	db	116	;'t'
  1477  00E96E  73                 	db	115	;'s'
  1478  00E96F  3A                 	db	58	;':'
  1479  00E970  20                 	db	32
  1480  00E971  50                 	db	80	;'P'
  1481  00E972  72                 	db	114	;'r'
  1482  00E973  69                 	db	105	;'i'
  1483  00E974  6E                 	db	110	;'n'
  1484  00E975  74                 	db	116	;'t'
  1485  00E976  73                 	db	115	;'s'
  1486  00E977  20                 	db	32
  1487  00E978  61                 	db	97	;'a'
  1488  00E979  20                 	db	32
  1489  00E97A  63                 	db	99	;'c'
  1490  00E97B  6F                 	db	111	;'o'
  1491  00E97C  6E                 	db	110	;'n'
  1492  00E97D  74                 	db	116	;'t'
  1493  00E97E  69                 	db	105	;'i'
  1494  00E97F  6E                 	db	110	;'n'
  1495  00E980  75                 	db	117	;'u'
  1496  00E981  6F                 	db	111	;'o'
  1497  00E982  75                 	db	117	;'u'
  1498  00E983  73                 	db	115	;'s'
  1499  00E984  20                 	db	32
  1500  00E985  73                 	db	115	;'s'
  1501  00E986  74                 	db	116	;'t'
  1502  00E987  72                 	db	114	;'r'
  1503  00E988  65                 	db	101	;'e'
  1504  00E989  61                 	db	97	;'a'
  1505  00E98A  6D                 	db	109	;'m'
  1506  00E98B  20                 	db	32
  1507  00E98C  6F                 	db	111	;'o'
  1508  00E98D  66                 	db	102	;'f'
  1509  00E98E  20                 	db	32
  1510  00E98F  6D                 	db	109	;'m'
  1511  00E990  65                 	db	101	;'e'
  1512  00E991  61                 	db	97	;'a'
  1513  00E992  73                 	db	115	;'s'
  1514  00E993  75                 	db	117	;'u'
  1515  00E994  72                 	db	114	;'r'
  1516  00E995  65                 	db	101	;'e'
  1517  00E996  6D                 	db	109	;'m'
  1518  00E997  65                 	db	101	;'e'
  1519  00E998  6E                 	db	110	;'n'
  1520  00E999  74                 	db	116	;'t'
  1521  00E99A  20                 	db	32
  1522  00E99B  64                 	db	100	;'d'
  1523  00E99C  61                 	db	97	;'a'
  1524  00E99D  74                 	db	116	;'t'
  1525  00E99E  61                 	db	97	;'a'
  1526  00E99F  20                 	db	32
  1527  00E9A0  74                 	db	116	;'t'
  1528  00E9A1  6F                 	db	111	;'o'
  1529  00E9A2  20                 	db	32
  1530  00E9A3  74                 	db	116	;'t'
  1531  00E9A4  68                 	db	104	;'h'
  1532  00E9A5  65                 	db	101	;'e'
  1533  00E9A6  20                 	db	32
  1534  00E9A7  74                 	db	116	;'t'
  1535  00E9A8  65                 	db	101	;'e'
  1536  00E9A9  72                 	db	114	;'r'
  1537  00E9AA  6D                 	db	109	;'m'
  1538  00E9AB  69                 	db	105	;'i'
  1539  00E9AC  6E                 	db	110	;'n'
  1540  00E9AD  61                 	db	97	;'a'
  1541  00E9AE  6C                 	db	108	;'l'
  1542  00E9AF  0A                 	db	10
  1543  00E9B0  0D                 	db	13
  1544  00E9B1  20                 	db	32
  1545  00E9B2  20                 	db	32
  1546  00E9B3  20                 	db	32
  1547  00E9B4  20                 	db	32
  1548  00E9B5  44                 	db	68	;'D'
  1549  00E9B6  65                 	db	101	;'e'
  1550  00E9B7  76                 	db	118	;'v'
  1551  00E9B8  69                 	db	105	;'i'
  1552  00E9B9  63                 	db	99	;'c'
  1553  00E9BA  65                 	db	101	;'e'
  1554  00E9BB  20                 	db	32
  1555  00E9BC  53                 	db	83	;'S'
  1556  00E9BD  74                 	db	116	;'t'
  1557  00E9BE  61                 	db	97	;'a'
  1558  00E9BF  74                 	db	116	;'t'
  1559  00E9C0  75                 	db	117	;'u'
  1560  00E9C1  73                 	db	115	;'s'
  1561  00E9C2  3F                 	db	63	;'?'
  1562  00E9C3  3A                 	db	58	;':'
  1563  00E9C4  20                 	db	32
  1564  00E9C5  50                 	db	80	;'P'
  1565  00E9C6  72                 	db	114	;'r'
  1566  00E9C7  69                 	db	105	;'i'
  1567  00E9C8  6E                 	db	110	;'n'
  1568  00E9C9  74                 	db	116	;'t'
  1569  00E9CA  73                 	db	115	;'s'
  1570  00E9CB  20                 	db	32
  1571  00E9CC  64                 	db	100	;'d'
  1572  00E9CD  69                 	db	105	;'i'
  1573  00E9CE  67                 	db	103	;'g'
  1574  00E9CF  69                 	db	105	;'i'
  1575  00E9D0  74                 	db	116	;'t'
  1576  00E9D1  61                 	db	97	;'a'
  1577  00E9D2  6C                 	db	108	;'l'
  1578  00E9D3  20                 	db	32
  1579  00E9D4  6D                 	db	109	;'m'
  1580  00E9D5  6F                 	db	111	;'o'
  1581  00E9D6  6E                 	db	110	;'n'
  1582  00E9D7  69                 	db	105	;'i'
  1583  00E9D8  74                 	db	116	;'t'
  1584  00E9D9  6F                 	db	111	;'o'
  1585  00E9DA  72                 	db	114	;'r'
  1586  00E9DB  69                 	db	105	;'i'
  1587  00E9DC  6E                 	db	110	;'n'
  1588  00E9DD  67                 	db	103	;'g'
  1589  00E9DE  20                 	db	32
  1590  00E9DF  6D                 	db	109	;'m'
  1591  00E9E0  69                 	db	105	;'i'
  1592  00E9E1  63                 	db	99	;'c'
  1593  00E9E2  72                 	db	114	;'r'
  1594  00E9E3  6F                 	db	111	;'o'
  1595  00E9E4  63                 	db	99	;'c'
  1596  00E9E5  6F                 	db	111	;'o'
  1597  00E9E6  6E                 	db	110	;'n'
  1598  00E9E7  74                 	db	116	;'t'
  1599  00E9E8  72                 	db	114	;'r'
  1600  00E9E9  6F                 	db	111	;'o'
  1601  00E9EA  6C                 	db	108	;'l'
  1602  00E9EB  6C                 	db	108	;'l'
  1603  00E9EC  65                 	db	101	;'e'
  1604  00E9ED  72                 	db	114	;'r'
  1605  00E9EE  20                 	db	32
  1606  00E9EF  64                 	db	100	;'d'
  1607  00E9F0  65                 	db	101	;'e'
  1608  00E9F1  76                 	db	118	;'v'
  1609  00E9F2  69                 	db	105	;'i'
  1610  00E9F3  63                 	db	99	;'c'
  1611  00E9F4  65                 	db	101	;'e'
  1612  00E9F5  20                 	db	32
  1613  00E9F6  73                 	db	115	;'s'
  1614  00E9F7  74                 	db	116	;'t'
  1615  00E9F8  61                 	db	97	;'a'
  1616  00E9F9  74                 	db	116	;'t'
  1617  00E9FA  75                 	db	117	;'u'
  1618  00E9FB  73                 	db	115	;'s'
  1619  00E9FC  0A                 	db	10
  1620  00E9FD  0D                 	db	13
  1621  00E9FE  20                 	db	32
  1622  00E9FF  20                 	db	32
  1623  00EA00  20                 	db	32
  1624  00EA01  20                 	db	32
  1625  00EA02  45                 	db	69	;'E'
  1626  00EA03  72                 	db	114	;'r'
  1627  00EA04  72                 	db	114	;'r'
  1628  00EA05  6F                 	db	111	;'o'
  1629  00EA06  72                 	db	114	;'r'
  1630  00EA07  20                 	db	32
  1631  00EA08  53                 	db	83	;'S'
  1632  00EA09  74                 	db	116	;'t'
  1633  00EA0A  61                 	db	97	;'a'
  1634  00EA0B  74                 	db	116	;'t'
  1635  00EA0C  75                 	db	117	;'u'
  1636  00EA0D  73                 	db	115	;'s'
  1637  00EA0E  3F                 	db	63	;'?'
  1638  00EA0F  20                 	db	32
  1639  00EA10  50                 	db	80	;'P'
  1640  00EA11  72                 	db	114	;'r'
  1641  00EA12  69                 	db	105	;'i'
  1642  00EA13  6E                 	db	110	;'n'
  1643  00EA14  74                 	db	116	;'t'
  1644  00EA15  73                 	db	115	;'s'
  1645  00EA16  20                 	db	32
  1646  00EA17  69                 	db	105	;'i'
  1647  00EA18  66                 	db	102	;'f'
  1648  00EA19  20                 	db	32
  1649  00EA1A  61                 	db	97	;'a'
  1650  00EA1B  6E                 	db	110	;'n'
  1651  00EA1C  79                 	db	121	;'y'
  1652  00EA1D  20                 	db	32
  1653  00EA1E  73                 	db	115	;'s'
  1654  00EA1F  79                 	db	121	;'y'
  1655  00EA20  73                 	db	115	;'s'
  1656  00EA21  74                 	db	116	;'t'
  1657  00EA22  65                 	db	101	;'e'
  1658  00EA23  6D                 	db	109	;'m'
  1659  00EA24  20                 	db	32
  1660  00EA25  66                 	db	102	;'f'
  1661  00EA26  61                 	db	97	;'a'
  1662  00EA27  75                 	db	117	;'u'
  1663  00EA28  6C                 	db	108	;'l'
  1664  00EA29  74                 	db	116	;'t'
  1665  00EA2A  73                 	db	115	;'s'
  1666  00EA2B  20                 	db	32
  1667  00EA2C  68                 	db	104	;'h'
  1668  00EA2D  61                 	db	97	;'a'
  1669  00EA2E  76                 	db	118	;'v'
  1670  00EA2F  65                 	db	101	;'e'
  1671  00EA30  20                 	db	32
  1672  00EA31  62                 	db	98	;'b'
  1673  00EA32  65                 	db	101	;'e'
  1674  00EA33  65                 	db	101	;'e'
  1675  00EA34  6E                 	db	110	;'n'
  1676  00EA35  20                 	db	32
  1677  00EA36  64                 	db	100	;'d'
  1678  00EA37  65                 	db	101	;'e'
  1679  00EA38  74                 	db	116	;'t'
  1680  00EA39  65                 	db	101	;'e'
  1681  00EA3A  63                 	db	99	;'c'
  1682  00EA3B  74                 	db	116	;'t'
  1683  00EA3C  65                 	db	101	;'e'
  1684  00EA3D  64                 	db	100	;'d'
  1685  00EA3E  0A                 	db	10
  1686  00EA3F  0D                 	db	13
  1687  00EA40  20                 	db	32
  1688  00EA41  20                 	db	32
  1689  00EA42  20                 	db	32
  1690  00EA43  20                 	db	32
  1691  00EA44  43                 	db	67	;'C'
  1692  00EA45  6C                 	db	108	;'l'
  1693  00EA46  65                 	db	101	;'e'
  1694  00EA47  61                 	db	97	;'a'
  1695  00EA48  72                 	db	114	;'r'
  1696  00EA49  20                 	db	32
  1697  00EA4A  55                 	db	85	;'U'
  1698  00EA4B  41                 	db	65	;'A'
  1699  00EA4C  52                 	db	82	;'R'
  1700  00EA4D  54                 	db	84	;'T'
  1701  00EA4E  20                 	db	32
  1702  00EA4F  45                 	db	69	;'E'
  1703  00EA50  72                 	db	114	;'r'
  1704  00EA51  72                 	db	114	;'r'
  1705  00EA52  6F                 	db	111	;'o'
  1706  00EA53  72                 	db	114	;'r'
  1707  00EA54  73                 	db	115	;'s'
  1708  00EA55  3A                 	db	58	;':'
  1709  00EA56  20                 	db	32
  1710  00EA57  43                 	db	67	;'C'
  1711  00EA58  6C                 	db	108	;'l'
  1712  00EA59  65                 	db	101	;'e'
  1713  00EA5A  61                 	db	97	;'a'
  1714  00EA5B  72                 	db	114	;'r'
  1715  00EA5C  73                 	db	115	;'s'
  1716  00EA5D  20                 	db	32
  1717  00EA5E  55                 	db	85	;'U'
  1718  00EA5F  41                 	db	65	;'A'
  1719  00EA60  52                 	db	82	;'R'
  1720  00EA61  54                 	db	84	;'T'
  1721  00EA62  20                 	db	32
  1722  00EA63  65                 	db	101	;'e'
  1723  00EA64  72                 	db	114	;'r'
  1724  00EA65  72                 	db	114	;'r'
  1725  00EA66  6F                 	db	111	;'o'
  1726  00EA67  72                 	db	114	;'r'
  1727  00EA68  20                 	db	32
  1728  00EA69  66                 	db	102	;'f'
  1729  00EA6A  6C                 	db	108	;'l'
  1730  00EA6B  61                 	db	97	;'a'
  1731  00EA6C  67                 	db	103	;'g'
  1732  00EA6D  73                 	db	115	;'s'
  1733  00EA6E  0A                 	db	10
  1734  00EA6F  0D                 	db	13
  1735  00EA70  20                 	db	32
  1736  00EA71  20                 	db	32
  1737  00EA72  20                 	db	32
  1738  00EA73  20                 	db	32
  1739  00EA74  43                 	db	67	;'C'
  1740  00EA75  6C                 	db	108	;'l'
  1741  00EA76  65                 	db	101	;'e'
  1742  00EA77  61                 	db	97	;'a'
  1743  00EA78  72                 	db	114	;'r'
  1744  00EA79  20                 	db	32
  1745  00EA7A  49                 	db	73	;'I'
  1746  00EA7B  32                 	db	50	;'2'
  1747  00EA7C  43                 	db	67	;'C'
  1748  00EA7D  20                 	db	32
  1749  00EA7E  45                 	db	69	;'E'
  1750  00EA7F  72                 	db	114	;'r'
  1751  00EA80  72                 	db	114	;'r'
  1752  00EA81  6F                 	db	111	;'o'
  1753  00EA82  72                 	db	114	;'r'
  1754  00EA83  73                 	db	115	;'s'
  1755  00EA84  3A                 	db	58	;':'
  1756  00EA85  20                 	db	32
  1757  00EA86  43                 	db	67	;'C'
  1758  00EA87  6C                 	db	108	;'l'
  1759  00EA88  65                 	db	101	;'e'
  1760  00EA89  61                 	db	97	;'a'
  1761  00EA8A  72                 	db	114	;'r'
  1762  00EA8B  73                 	db	115	;'s'
  1763  00EA8C  20                 	db	32
  1764  00EA8D  49                 	db	73	;'I'
  1765  00EA8E  32                 	db	50	;'2'
  1766  00EA8F  43                 	db	67	;'C'
  1767  00EA90  20                 	db	32
  1768  00EA91  65                 	db	101	;'e'
  1769  00EA92  72                 	db	114	;'r'
  1770  00EA93  72                 	db	114	;'r'
  1771  00EA94  6F                 	db	111	;'o'
  1772  00EA95  72                 	db	114	;'r'
  1773  00EA96  20                 	db	32
  1774  00EA97  66                 	db	102	;'f'
  1775  00EA98  6C                 	db	108	;'l'
  1776  00EA99  61                 	db	97	;'a'
  1777  00EA9A  67                 	db	103	;'g'
  1778  00EA9B  73                 	db	115	;'s'
  1779  00EA9C  0A                 	db	10
  1780  00EA9D  0D                 	db	13
  1781  00EA9E  20                 	db	32
  1782  00EA9F  20                 	db	32
  1783  00EAA0  20                 	db	32
  1784  00EAA1  20                 	db	32
  1785  00EAA2  43                 	db	67	;'C'
  1786  00EAA3  6C                 	db	108	;'l'
  1787  00EAA4  65                 	db	101	;'e'
  1788  00EAA5  61                 	db	97	;'a'
  1789  00EAA6  72                 	db	114	;'r'
  1790  00EAA7  20                 	db	32
  1791  00EAA8  41                 	db	65	;'A'
  1792  00EAA9  44                 	db	68	;'D'
  1793  00EAAA  43                 	db	67	;'C'
  1794  00EAAB  20                 	db	32
  1795  00EAAC  45                 	db	69	;'E'
  1796  00EAAD  72                 	db	114	;'r'
  1797  00EAAE  72                 	db	114	;'r'
  1798  00EAAF  6F                 	db	111	;'o'
  1799  00EAB0  72                 	db	114	;'r'
  1800  00EAB1  73                 	db	115	;'s'
  1801  00EAB2  3A                 	db	58	;':'
  1802  00EAB3  20                 	db	32
  1803  00EAB4  43                 	db	67	;'C'
  1804  00EAB5  6C                 	db	108	;'l'
  1805  00EAB6  65                 	db	101	;'e'
  1806  00EAB7  61                 	db	97	;'a'
  1807  00EAB8  72                 	db	114	;'r'
  1808  00EAB9  73                 	db	115	;'s'
  1809  00EABA  20                 	db	32
  1810  00EABB  41                 	db	65	;'A'
  1811  00EABC  44                 	db	68	;'D'
  1812  00EABD  43                 	db	67	;'C'
  1813  00EABE  20                 	db	32
  1814  00EABF  65                 	db	101	;'e'
  1815  00EAC0  72                 	db	114	;'r'
  1816  00EAC1  72                 	db	114	;'r'
  1817  00EAC2  6F                 	db	111	;'o'
  1818  00EAC3  72                 	db	114	;'r'
  1819  00EAC4  20                 	db	32
  1820  00EAC5  66                 	db	102	;'f'
  1821  00EAC6  6C                 	db	108	;'l'
  1822  00EAC7  61                 	db	97	;'a'
  1823  00EAC8  67                 	db	103	;'g'
  1824  00EAC9  73                 	db	115	;'s'
  1825  00EACA  0A                 	db	10
  1826  00EACB  0D                 	db	13
  1827  00EACC  20                 	db	32
  1828  00EACD  20                 	db	32
  1829  00EACE  20                 	db	32
  1830  00EACF  20                 	db	32
  1831  00EAD0  48                 	db	72	;'H'
  1832  00EAD1  65                 	db	101	;'e'
  1833  00EAD2  6C                 	db	108	;'l'
  1834  00EAD3  70                 	db	112	;'p'
  1835  00EAD4  3A                 	db	58	;':'
  1836  00EAD5  20                 	db	32
  1837  00EAD6  4C                 	db	76	;'L'
  1838  00EAD7  69                 	db	105	;'i'
  1839  00EAD8  73                 	db	115	;'s'
  1840  00EAD9  74                 	db	116	;'t'
  1841  00EADA  73                 	db	115	;'s'
  1842  00EADB  20                 	db	32
  1843  00EADC  61                 	db	97	;'a'
  1844  00EADD  76                 	db	118	;'v'
  1845  00EADE  61                 	db	97	;'a'
  1846  00EADF  69                 	db	105	;'i'
  1847  00EAE0  6C                 	db	108	;'l'
  1848  00EAE1  61                 	db	97	;'a'
  1849  00EAE2  62                 	db	98	;'b'
  1850  00EAE3  6C                 	db	108	;'l'
  1851  00EAE4  65                 	db	101	;'e'
  1852  00EAE5  20                 	db	32
  1853  00EAE6  63                 	db	99	;'c'
  1854  00EAE7  6F                 	db	111	;'o'
  1855  00EAE8  6D                 	db	109	;'m'
  1856  00EAE9  6D                 	db	109	;'m'
  1857  00EAEA  61                 	db	97	;'a'
  1858  00EAEB  6E                 	db	110	;'n'
  1859  00EAEC  64                 	db	100	;'d'
  1860  00EAED  73                 	db	115	;'s'
  1861  00EAEE  20                 	db	32
  1862  00EAEF  28                 	db	40
  1863  00EAF0  74                 	db	116	;'t'
  1864  00EAF1  68                 	db	104	;'h'
  1865  00EAF2  69                 	db	105	;'i'
  1866  00EAF3  73                 	db	115	;'s'
  1867  00EAF4  20                 	db	32
  1868  00EAF5  63                 	db	99	;'c'
  1869  00EAF6  6F                 	db	111	;'o'
  1870  00EAF7  6D                 	db	109	;'m'
  1871  00EAF8  6D                 	db	109	;'m'
  1872  00EAF9  61                 	db	97	;'a'
  1873  00EAFA  6E                 	db	110	;'n'
  1874  00EAFB  64                 	db	100	;'d'
  1875  00EAFC  29                 	db	41
  1876  00EAFD  0A                 	db	10
  1877  00EAFE  0D                 	db	13
  1878  00EAFF  00                 	db	0
  1879  00EB00                     STR_286:
  1880  00EB00  20                 	db	32
  1881  00EB01  20                 	db	32
  1882  00EB02  20                 	db	32
  1883  00EB03  20                 	db	32
  1884  00EB04  20                 	db	32
  1885  00EB05  20                 	db	32
  1886  00EB06  20                 	db	32
  1887  00EB07  20                 	db	32
  1888  00EB08  46                 	db	70	;'F'
  1889  00EB09  69                 	db	105	;'i'
  1890  00EB0A  78                 	db	120	;'x'
  1891  00EB0B  65                 	db	101	;'e'
  1892  00EB0C  64                 	db	100	;'d'
  1893  00EB0D  20                 	db	32
  1894  00EB0E  56                 	db	86	;'V'
  1895  00EB0F  6F                 	db	111	;'o'
  1896  00EB10  6C                 	db	108	;'l'
  1897  00EB11  74                 	db	116	;'t'
  1898  00EB12  61                 	db	97	;'a'
  1899  00EB13  67                 	db	103	;'g'
  1900  00EB14  65                 	db	101	;'e'
  1901  00EB15  20                 	db	32
  1902  00EB16  52                 	db	82	;'R'
  1903  00EB17  65                 	db	101	;'e'
  1904  00EB18  66                 	db	102	;'f'
  1905  00EB19  65                 	db	101	;'e'
  1906  00EB1A  72                 	db	114	;'r'
  1907  00EB1B  65                 	db	101	;'e'
  1908  00EB1C  6E                 	db	110	;'n'
  1909  00EB1D  63                 	db	99	;'c'
  1910  00EB1E  65                 	db	101	;'e'
  1911  00EB1F  20                 	db	32
  1912  00EB20  42                 	db	66	;'B'
  1913  00EB21  75                 	db	117	;'u'
  1914  00EB22  66                 	db	102	;'f'
  1915  00EB23  66                 	db	102	;'f'
  1916  00EB24  65                 	db	101	;'e'
  1917  00EB25  72                 	db	114	;'r'
  1918  00EB26  20                 	db	32
  1919  00EB27  31                 	db	49	;'1'
  1920  00EB28  20                 	db	32
  1921  00EB29  6D                 	db	109	;'m'
  1922  00EB2A  65                 	db	101	;'e'
  1923  00EB2B  61                 	db	97	;'a'
  1924  00EB2C  73                 	db	115	;'s'
  1925  00EB2D  75                 	db	117	;'u'
  1926  00EB2E  72                 	db	114	;'r'
  1927  00EB2F  65                 	db	101	;'e'
  1928  00EB30  64                 	db	100	;'d'
  1929  00EB31  20                 	db	32
  1930  00EB32  61                 	db	97	;'a'
  1931  00EB33  73                 	db	115	;'s'
  1932  00EB34  20                 	db	32
  1933  00EB35  25                 	db	37
  1934  00EB36  2B                 	db	43
  1935  00EB37  2E                 	db	46
  1936  00EB38  33                 	db	51	;'3'
  1937  00EB39  66                 	db	102	;'f'
  1938  00EB3A  20                 	db	32
  1939  00EB3B  56                 	db	86	;'V'
  1940  00EB3C  6F                 	db	111	;'o'
  1941  00EB3D  6C                 	db	108	;'l'
  1942  00EB3E  74                 	db	116	;'t'
  1943  00EB3F  73                 	db	115	;'s'
  1944  00EB40  2C                 	db	44
  1945  00EB41  20                 	db	32
  1946  00EB42  63                 	db	99	;'c'
  1947  00EB43  61                 	db	97	;'a'
  1948  00EB44  6C                 	db	108	;'l'
  1949  00EB45  69                 	db	105	;'i'
  1950  00EB46  62                 	db	98	;'b'
  1951  00EB47  72                 	db	114	;'r'
  1952  00EB48  61                 	db	97	;'a'
  1953  00EB49  74                 	db	116	;'t'
  1954  00EB4A  65                 	db	101	;'e'
  1955  00EB4B  64                 	db	100	;'d'
  1956  00EB4C  20                 	db	32
  1957  00EB4D  66                 	db	102	;'f'
  1958  00EB4E  6F                 	db	111	;'o'
  1959  00EB4F  72                 	db	114	;'r'
  1960  00EB50  20                 	db	32
  1961  00EB51  2B                 	db	43
  1962  00EB52  34                 	db	52	;'4'
  1963  00EB53  2E                 	db	46
  1964  00EB54  30                 	db	48	;'0'
  1965  00EB55  39                 	db	57	;'9'
  1966  00EB56  36                 	db	54	;'6'
  1967  00EB57  20                 	db	32
  1968  00EB58  56                 	db	86	;'V'
  1969  00EB59  6F                 	db	111	;'o'
  1970  00EB5A  6C                 	db	108	;'l'
  1971  00EB5B  74                 	db	116	;'t'
  1972  00EB5C  73                 	db	115	;'s'
  1973  00EB5D  0A                 	db	10
  1974  00EB5E  0D                 	db	13
  1975  00EB5F  00                 	db	0
  1976  00EB60                     STR_239:
  1977  00EB60  43                 	db	67	;'C'
  1978  00EB61  6F                 	db	111	;'o'
  1979  00EB62  6D                 	db	109	;'m'
  1980  00EB63  6D                 	db	109	;'m'
  1981  00EB64  61                 	db	97	;'a'
  1982  00EB65  6E                 	db	110	;'n'
  1983  00EB66  64                 	db	100	;'d'
  1984  00EB67  73                 	db	115	;'s'
  1985  00EB68  20                 	db	32
  1986  00EB69  61                 	db	97	;'a'
  1987  00EB6A  72                 	db	114	;'r'
  1988  00EB6B  65                 	db	101	;'e'
  1989  00EB6C  20                 	db	32
  1990  00EB6D  63                 	db	99	;'c'
  1991  00EB6E  61                 	db	97	;'a'
  1992  00EB6F  73                 	db	115	;'s'
  1993  00EB70  65                 	db	101	;'e'
  1994  00EB71  20                 	db	32
  1995  00EB72  73                 	db	115	;'s'
  1996  00EB73  65                 	db	101	;'e'
  1997  00EB74  6E                 	db	110	;'n'
  1998  00EB75  73                 	db	115	;'s'
  1999  00EB76  69                 	db	105	;'i'
  2000  00EB77  74                 	db	116	;'t'
  2001  00EB78  69                 	db	105	;'i'
  2002  00EB79  76                 	db	118	;'v'
  2003  00EB7A  65                 	db	101	;'e'
  2004  00EB7B  2C                 	db	44
  2005  00EB7C  20                 	db	32
  2006  00EB7D  62                 	db	98	;'b'
  2007  00EB7E  61                 	db	97	;'a'
  2008  00EB7F  63                 	db	99	;'c'
  2009  00EB80  6B                 	db	107	;'k'
  2010  00EB81  73                 	db	115	;'s'
  2011  00EB82  70                 	db	112	;'p'
  2012  00EB83  61                 	db	97	;'a'
  2013  00EB84  63                 	db	99	;'c'
  2014  00EB85  65                 	db	101	;'e'
  2015  00EB86  20                 	db	32
  2016  00EB87  69                 	db	105	;'i'
  2017  00EB88  73                 	db	115	;'s'
  2018  00EB89  20                 	db	32
  2019  00EB8A  73                 	db	115	;'s'
  2020  00EB8B  75                 	db	117	;'u'
  2021  00EB8C  70                 	db	112	;'p'
  2022  00EB8D  70                 	db	112	;'p'
  2023  00EB8E  6F                 	db	111	;'o'
  2024  00EB8F  72                 	db	114	;'r'
  2025  00EB90  74                 	db	116	;'t'
  2026  00EB91  65                 	db	101	;'e'
  2027  00EB92  64                 	db	100	;'d'
  2028  00EB93  2C                 	db	44
  2029  00EB94  20                 	db	32
  2030  00EB95  63                 	db	99	;'c'
  2031  00EB96  6F                 	db	111	;'o'
  2032  00EB97  6D                 	db	109	;'m'
  2033  00EB98  6D                 	db	109	;'m'
  2034  00EB99  61                 	db	97	;'a'
  2035  00EB9A  6E                 	db	110	;'n'
  2036  00EB9B  64                 	db	100	;'d'
  2037  00EB9C  20                 	db	32
  2038  00EB9D  68                 	db	104	;'h'
  2039  00EB9E  69                 	db	105	;'i'
  2040  00EB9F  73                 	db	115	;'s'
  2041  00EBA0  74                 	db	116	;'t'
  2042  00EBA1  6F                 	db	111	;'o'
  2043  00EBA2  72                 	db	114	;'r'
  2044  00EBA3  79                 	db	121	;'y'
  2045  00EBA4  20                 	db	32
  2046  00EBA5  69                 	db	105	;'i'
  2047  00EBA6  73                 	db	115	;'s'
  2048  00EBA7  20                 	db	32
  2049  00EBA8  6E                 	db	110	;'n'
  2050  00EBA9  6F                 	db	111	;'o'
  2051  00EBAA  74                 	db	116	;'t'
  2052  00EBAB  20                 	db	32
  2053  00EBAC  73                 	db	115	;'s'
  2054  00EBAD  75                 	db	117	;'u'
  2055  00EBAE  70                 	db	112	;'p'
  2056  00EBAF  70                 	db	112	;'p'
  2057  00EBB0  6F                 	db	111	;'o'
  2058  00EBB1  72                 	db	114	;'r'
  2059  00EBB2  74                 	db	116	;'t'
  2060  00EBB3  65                 	db	101	;'e'
  2061  00EBB4  64                 	db	100	;'d'
  2062  00EBB5  0A                 	db	10
  2063  00EBB6  0D                 	db	13
  2064  00EBB7  00                 	db	0
  2065  00EBB8                     STR_279:
  2066  00EBB8  20                 	db	32
  2067  00EBB9  20                 	db	32
  2068  00EBBA  20                 	db	32
  2069  00EBBB  20                 	db	32
  2070  00EBBC  20                 	db	32
  2071  00EBBD  20                 	db	32
  2072  00EBBE  20                 	db	32
  2073  00EBBF  20                 	db	32
  2074  00EBC0  43                 	db	67	;'C'
  2075  00EBC1  75                 	db	117	;'u'
  2076  00EBC2  72                 	db	114	;'r'
  2077  00EBC3  72                 	db	114	;'r'
  2078  00EBC4  65                 	db	101	;'e'
  2079  00EBC5  6E                 	db	110	;'n'
  2080  00EBC6  74                 	db	116	;'t'
  2081  00EBC7  20                 	db	32
  2082  00EBC8  51                 	db	81	;'Q'
  2083  00EBC9  49                 	db	73	;'I'
  2084  00EBCA  20                 	db	32
  2085  00EBCB  53                 	db	83	;'S'
  2086  00EBCC  77                 	db	119	;'w'
  2087  00EBCD  69                 	db	105	;'i'
  2088  00EBCE  74                 	db	116	;'t'
  2089  00EBCF  63                 	db	99	;'c'
  2090  00EBD0  68                 	db	104	;'h'
  2091  00EBD1  69                 	db	105	;'i'
  2092  00EBD2  6E                 	db	110	;'n'
  2093  00EBD3  67                 	db	103	;'g'
  2094  00EBD4  20                 	db	32
  2095  00EBD5  46                 	db	70	;'F'
  2096  00EBD6  72                 	db	114	;'r'
  2097  00EBD7  65                 	db	101	;'e'
  2098  00EBD8  71                 	db	113	;'q'
  2099  00EBD9  75                 	db	117	;'u'
  2100  00EBDA  65                 	db	101	;'e'
  2101  00EBDB  6E                 	db	110	;'n'
  2102  00EBDC  63                 	db	99	;'c'
  2103  00EBDD  79                 	db	121	;'y'
  2104  00EBDE  20                 	db	32
  2105  00EBDF  6D                 	db	109	;'m'
  2106  00EBE0  65                 	db	101	;'e'
  2107  00EBE1  61                 	db	97	;'a'
  2108  00EBE2  73                 	db	115	;'s'
  2109  00EBE3  75                 	db	117	;'u'
  2110  00EBE4  72                 	db	114	;'r'
  2111  00EBE5  65                 	db	101	;'e'
  2112  00EBE6  64                 	db	100	;'d'
  2113  00EBE7  20                 	db	32
  2114  00EBE8  61                 	db	97	;'a'
  2115  00EBE9  73                 	db	115	;'s'
  2116  00EBEA  20                 	db	32
  2117  00EBEB  25                 	db	37
  2118  00EBEC  2B                 	db	43
  2119  00EBED  2E                 	db	46
  2120  00EBEE  33                 	db	51	;'3'
  2121  00EBEF  66                 	db	102	;'f'
  2122  00EBF0  20                 	db	32
  2123  00EBF1  6B                 	db	107	;'k'
  2124  00EBF2  48                 	db	72	;'H'
  2125  00EBF3  7A                 	db	122	;'z'
  2126  00EBF4  0A                 	db	10
  2127  00EBF5  0D                 	db	13
  2128  00EBF6  0A                 	db	10
  2129  00EBF7  0D                 	db	13
  2130  00EBF8  00                 	db	0
  2131  00EBF9                     STR_257:
  2132  00EBF9  20                 	db	32
  2133  00EBFA  20                 	db	32
  2134  00EBFB  20                 	db	32
  2135  00EBFC  20                 	db	32
  2136  00EBFD  43                 	db	67	;'C'
  2137  00EBFE  61                 	db	97	;'a'
  2138  00EBFF  6C                 	db	108	;'l'
  2139  00EC00  6C                 	db	108	;'l'
  2140  00EC01  20                 	db	32
  2141  00EC02  27                 	db	39
  2142  00EC03  43                 	db	67	;'C'
  2143  00EC04  6C                 	db	108	;'l'
  2144  00EC05  65                 	db	101	;'e'
  2145  00EC06  61                 	db	97	;'a'
  2146  00EC07  72                 	db	114	;'r'
  2147  00EC08  20                 	db	32
  2148  00EC09  55                 	db	85	;'U'
  2149  00EC0A  41                 	db	65	;'A'
  2150  00EC0B  52                 	db	82	;'R'
  2151  00EC0C  54                 	db	84	;'T'
  2152  00EC0D  20                 	db	32
  2153  00EC0E  45                 	db	69	;'E'
  2154  00EC0F  72                 	db	114	;'r'
  2155  00EC10  72                 	db	114	;'r'
  2156  00EC11  6F                 	db	111	;'o'
  2157  00EC12  72                 	db	114	;'r'
  2158  00EC13  73                 	db	115	;'s'
  2159  00EC14  27                 	db	39
  2160  00EC15  20                 	db	32
  2161  00EC16  74                 	db	116	;'t'
  2162  00EC17  6F                 	db	111	;'o'
  2163  00EC18  20                 	db	32
  2164  00EC19  63                 	db	99	;'c'
  2165  00EC1A  6C                 	db	108	;'l'
  2166  00EC1B  65                 	db	101	;'e'
  2167  00EC1C  61                 	db	97	;'a'
  2168  00EC1D  72                 	db	114	;'r'
  2169  00EC1E  20                 	db	32
  2170  00EC1F  63                 	db	99	;'c'
  2171  00EC20  6F                 	db	111	;'o'
  2172  00EC21  6D                 	db	109	;'m'
  2173  00EC22  6D                 	db	109	;'m'
  2174  00EC23  75                 	db	117	;'u'
  2175  00EC24  6E                 	db	110	;'n'
  2176  00EC25  69                 	db	105	;'i'
  2177  00EC26  63                 	db	99	;'c'
  2178  00EC27  61                 	db	97	;'a'
  2179  00EC28  74                 	db	116	;'t'
  2180  00EC29  69                 	db	105	;'i'
  2181  00EC2A  6F                 	db	111	;'o'
  2182  00EC2B  6E                 	db	110	;'n'
  2183  00EC2C  73                 	db	115	;'s'
  2184  00EC2D  20                 	db	32
  2185  00EC2E  65                 	db	101	;'e'
  2186  00EC2F  72                 	db	114	;'r'
  2187  00EC30  72                 	db	114	;'r'
  2188  00EC31  6F                 	db	111	;'o'
  2189  00EC32  72                 	db	114	;'r'
  2190  00EC33  28                 	db	40
  2191  00EC34  73                 	db	115	;'s'
  2192  00EC35  29                 	db	41
  2193  00EC36  0A                 	db	10
  2194  00EC37  0D                 	db	13
  2195  00EC38  00                 	db	0
  2196  00EC39                     STR_277:
  2197  00EC39  20                 	db	32
  2198  00EC3A  20                 	db	32
  2199  00EC3B  20                 	db	32
  2200  00EC3C  20                 	db	32
  2201  00EC3D  20                 	db	32
  2202  00EC3E  20                 	db	32
  2203  00EC3F  20                 	db	32
  2204  00EC40  20                 	db	32
  2205  00EC41  43                 	db	67	;'C'
  2206  00EC42  75                 	db	117	;'u'
  2207  00EC43  72                 	db	114	;'r'
  2208  00EC44  72                 	db	114	;'r'
  2209  00EC45  65                 	db	101	;'e'
  2210  00EC46  6E                 	db	110	;'n'
  2211  00EC47  74                 	db	116	;'t'
  2212  00EC48  20                 	db	32
  2213  00EC49  2B                 	db	43
  2214  00EC4A  35                 	db	53	;'5'
  2215  00EC4B  56                 	db	86	;'V'
  2216  00EC4C  20                 	db	32
  2217  00EC4D  53                 	db	83	;'S'
  2218  00EC4E  77                 	db	119	;'w'
  2219  00EC4F  69                 	db	105	;'i'
  2220  00EC50  74                 	db	116	;'t'
  2221  00EC51  63                 	db	99	;'c'
  2222  00EC52  68                 	db	104	;'h'
  2223  00EC53  69                 	db	105	;'i'
  2224  00EC54  6E                 	db	110	;'n'
  2225  00EC55  67                 	db	103	;'g'
  2226  00EC56  20                 	db	32
  2227  00EC57  46                 	db	70	;'F'
  2228  00EC58  72                 	db	114	;'r'
  2229  00EC59  65                 	db	101	;'e'
  2230  00EC5A  71                 	db	113	;'q'
  2231  00EC5B  75                 	db	117	;'u'
  2232  00EC5C  65                 	db	101	;'e'
  2233  00EC5D  6E                 	db	110	;'n'
  2234  00EC5E  63                 	db	99	;'c'
  2235  00EC5F  79                 	db	121	;'y'
  2236  00EC60  20                 	db	32
  2237  00EC61  6D                 	db	109	;'m'
  2238  00EC62  65                 	db	101	;'e'
  2239  00EC63  61                 	db	97	;'a'
  2240  00EC64  73                 	db	115	;'s'
  2241  00EC65  75                 	db	117	;'u'
  2242  00EC66  72                 	db	114	;'r'
  2243  00EC67  65                 	db	101	;'e'
  2244  00EC68  64                 	db	100	;'d'
  2245  00EC69  20                 	db	32
  2246  00EC6A  61                 	db	97	;'a'
  2247  00EC6B  73                 	db	115	;'s'
  2248  00EC6C  20                 	db	32
  2249  00EC6D  25                 	db	37
  2250  00EC6E  2B                 	db	43
  2251  00EC6F  2E                 	db	46
  2252  00EC70  31                 	db	49	;'1'
  2253  00EC71  66                 	db	102	;'f'
  2254  00EC72  20                 	db	32
  2255  00EC73  4D                 	db	77	;'M'
  2256  00EC74  48                 	db	72	;'H'
  2257  00EC75  7A                 	db	122	;'z'
  2258  00EC76  0A                 	db	10
  2259  00EC77  0D                 	db	13
  2260  00EC78  00                 	db	0
  2261  00EC79                     STR_274:
  2262  00EC79  20                 	db	32
  2263  00EC7A  20                 	db	32
  2264  00EC7B  20                 	db	32
  2265  00EC7C  20                 	db	32
  2266  00EC7D  43                 	db	67	;'C'
  2267  00EC7E  68                 	db	104	;'h'
  2268  00EC7F  61                 	db	97	;'a'
  2269  00EC80  72                 	db	114	;'r'
  2270  00EC81  67                 	db	103	;'g'
  2271  00EC82  65                 	db	101	;'e'
  2272  00EC83  20                 	db	32
  2273  00EC84  63                 	db	99	;'c'
  2274  00EC85  6F                 	db	111	;'o'
  2275  00EC86  6E                 	db	110	;'n'
  2276  00EC87  73                 	db	115	;'s'
  2277  00EC88  75                 	db	117	;'u'
  2278  00EC89  6D                 	db	109	;'m'
  2279  00EC8A  65                 	db	101	;'e'
  2280  00EC8B  64                 	db	100	;'d'
  2281  00EC8C  20                 	db	32
  2282  00EC8D  62                 	db	98	;'b'
  2283  00EC8E  79                 	db	121	;'y'
  2284  00EC8F  20                 	db	32
  2285  00EC90  74                 	db	116	;'t'
  2286  00EC91  68                 	db	104	;'h'
  2287  00EC92  65                 	db	101	;'e'
  2288  00EC93  20                 	db	32
  2289  00EC94  6C                 	db	108	;'l'
  2290  00EC95  6F                 	db	111	;'o'
  2291  00EC96  61                 	db	97	;'a'
  2292  00EC97  64                 	db	100	;'d'
  2293  00EC98  20                 	db	32
  2294  00EC99  77                 	db	119	;'w'
  2295  00EC9A  68                 	db	104	;'h'
  2296  00EC9B  69                 	db	105	;'i'
  2297  00EC9C  6C                 	db	108	;'l'
  2298  00EC9D  65                 	db	101	;'e'
  2299  00EC9E  20                 	db	32
  2300  00EC9F  63                 	db	99	;'c'
  2301  00ECA0  68                 	db	104	;'h'
  2302  00ECA1  61                 	db	97	;'a'
  2303  00ECA2  72                 	db	114	;'r'
  2304  00ECA3  67                 	db	103	;'g'
  2305  00ECA4  69                 	db	105	;'i'
  2306  00ECA5  6E                 	db	110	;'n'
  2307  00ECA6  67                 	db	103	;'g'
  2308  00ECA7  3A                 	db	58	;':'
  2309  00ECA8  20                 	db	32
  2310  00ECA9  25                 	db	37
  2311  00ECAA  73                 	db	115	;'s'
  2312  00ECAB  43                 	db	67	;'C'
  2313  00ECAC  6F                 	db	111	;'o'
  2314  00ECAD  75                 	db	117	;'u'
  2315  00ECAE  6C                 	db	108	;'l'
  2316  00ECAF  6F                 	db	111	;'o'
  2317  00ECB0  6D                 	db	109	;'m'
  2318  00ECB1  62                 	db	98	;'b'
  2319  00ECB2  73                 	db	115	;'s'
  2320  00ECB3  0A                 	db	10
  2321  00ECB4  0D                 	db	13
  2322  00ECB5  0A                 	db	10
  2323  00ECB6  0D                 	db	13
  2324  00ECB7  00                 	db	0
  2325  00ECB8                     STR_254:
  2326  00ECB8  20                 	db	32
  2327  00ECB9  20                 	db	32
  2328  00ECBA  20                 	db	32
  2329  00ECBB  20                 	db	32
  2330  00ECBC  43                 	db	67	;'C'
  2331  00ECBD  61                 	db	97	;'a'
  2332  00ECBE  6C                 	db	108	;'l'
  2333  00ECBF  6C                 	db	108	;'l'
  2334  00ECC0  20                 	db	32
  2335  00ECC1  27                 	db	39
  2336  00ECC2  43                 	db	67	;'C'
  2337  00ECC3  6C                 	db	108	;'l'
  2338  00ECC4  65                 	db	101	;'e'
  2339  00ECC5  61                 	db	97	;'a'
  2340  00ECC6  72                 	db	114	;'r'
  2341  00ECC7  20                 	db	32
  2342  00ECC8  49                 	db	73	;'I'
  2343  00ECC9  32                 	db	50	;'2'
  2344  00ECCA  43                 	db	67	;'C'
  2345  00ECCB  20                 	db	32
  2346  00ECCC  45                 	db	69	;'E'
  2347  00ECCD  72                 	db	114	;'r'
  2348  00ECCE  72                 	db	114	;'r'
  2349  00ECCF  6F                 	db	111	;'o'
  2350  00ECD0  72                 	db	114	;'r'
  2351  00ECD1  73                 	db	115	;'s'
  2352  00ECD2  27                 	db	39
  2353  00ECD3  20                 	db	32
  2354  00ECD4  74                 	db	116	;'t'
  2355  00ECD5  6F                 	db	111	;'o'
  2356  00ECD6  20                 	db	32
  2357  00ECD7  63                 	db	99	;'c'
  2358  00ECD8  6C                 	db	108	;'l'
  2359  00ECD9  65                 	db	101	;'e'
  2360  00ECDA  61                 	db	97	;'a'
  2361  00ECDB  72                 	db	114	;'r'
  2362  00ECDC  20                 	db	32
  2363  00ECDD  63                 	db	99	;'c'
  2364  00ECDE  6F                 	db	111	;'o'
  2365  00ECDF  6D                 	db	109	;'m'
  2366  00ECE0  6D                 	db	109	;'m'
  2367  00ECE1  75                 	db	117	;'u'
  2368  00ECE2  6E                 	db	110	;'n'
  2369  00ECE3  69                 	db	105	;'i'
  2370  00ECE4  63                 	db	99	;'c'
  2371  00ECE5  61                 	db	97	;'a'
  2372  00ECE6  74                 	db	116	;'t'
  2373  00ECE7  69                 	db	105	;'i'
  2374  00ECE8  6F                 	db	111	;'o'
  2375  00ECE9  6E                 	db	110	;'n'
  2376  00ECEA  73                 	db	115	;'s'
  2377  00ECEB  20                 	db	32
  2378  00ECEC  65                 	db	101	;'e'
  2379  00ECED  72                 	db	114	;'r'
  2380  00ECEE  72                 	db	114	;'r'
  2381  00ECEF  6F                 	db	111	;'o'
  2382  00ECF0  72                 	db	114	;'r'
  2383  00ECF1  28                 	db	40
  2384  00ECF2  73                 	db	115	;'s'
  2385  00ECF3  29                 	db	41
  2386  00ECF4  0A                 	db	10
  2387  00ECF5  0D                 	db	13
  2388  00ECF6  00                 	db	0
  2389  00ECF7                     STR_285:
  2390  00ECF7  20                 	db	32
  2391  00ECF8  20                 	db	32
  2392  00ECF9  20                 	db	32
  2393  00ECFA  20                 	db	32
  2394  00ECFB  20                 	db	32
  2395  00ECFC  20                 	db	32
  2396  00ECFD  20                 	db	32
  2397  00ECFE  20                 	db	32
  2398  00ECFF  4D                 	db	77	;'M'
  2399  00ED00  69                 	db	105	;'i'
  2400  00ED01  63                 	db	99	;'c'
  2401  00ED02  72                 	db	114	;'r'
  2402  00ED03  6F                 	db	111	;'o'
  2403  00ED04  63                 	db	99	;'c'
  2404  00ED05  6F                 	db	111	;'o'
  2405  00ED06  6E                 	db	110	;'n'
  2406  00ED07  74                 	db	116	;'t'
  2407  00ED08  72                 	db	114	;'r'
  2408  00ED09  6F                 	db	111	;'o'
  2409  00ED0A  6C                 	db	108	;'l'
  2410  00ED0B  6C                 	db	108	;'l'
  2411  00ED0C  65                 	db	101	;'e'
  2412  00ED0D  72                 	db	114	;'r'
  2413  00ED0E  20                 	db	32
  2414  00ED0F  44                 	db	68	;'D'
  2415  00ED10  69                 	db	105	;'i'
  2416  00ED11  65                 	db	101	;'e'
  2417  00ED12  20                 	db	32
  2418  00ED13  54                 	db	84	;'T'
  2419  00ED14  65                 	db	101	;'e'
  2420  00ED15  6D                 	db	109	;'m'
  2421  00ED16  70                 	db	112	;'p'
  2422  00ED17  65                 	db	101	;'e'
  2423  00ED18  72                 	db	114	;'r'
  2424  00ED19  61                 	db	97	;'a'
  2425  00ED1A  74                 	db	116	;'t'
  2426  00ED1B  75                 	db	117	;'u'
  2427  00ED1C  72                 	db	114	;'r'
  2428  00ED1D  65                 	db	101	;'e'
  2429  00ED1E  20                 	db	32
  2430  00ED1F  6D                 	db	109	;'m'
  2431  00ED20  65                 	db	101	;'e'
  2432  00ED21  61                 	db	97	;'a'
  2433  00ED22  73                 	db	115	;'s'
  2434  00ED23  75                 	db	117	;'u'
  2435  00ED24  72                 	db	114	;'r'
  2436  00ED25  65                 	db	101	;'e'
  2437  00ED26  64                 	db	100	;'d'
  2438  00ED27  20                 	db	32
  2439  00ED28  61                 	db	97	;'a'
  2440  00ED29  73                 	db	115	;'s'
  2441  00ED2A  20                 	db	32
  2442  00ED2B  25                 	db	37
  2443  00ED2C  2B                 	db	43
  2444  00ED2D  2E                 	db	46
  2445  00ED2E  33                 	db	51	;'3'
  2446  00ED2F  66                 	db	102	;'f'
  2447  00ED30  20                 	db	32
  2448  00ED31  43                 	db	67	;'C'
  2449  00ED32  0A                 	db	10
  2450  00ED33  0D                 	db	13
  2451  00ED34  00                 	db	0
  2452  00ED35                     STR_205:
  2453  00ED35  20                 	db	32
  2454  00ED36  20                 	db	32
  2455  00ED37  20                 	db	32
  2456  00ED38  20                 	db	32
  2457  00ED39  44                 	db	68	;'D'
  2458  00ED3A  65                 	db	101	;'e'
  2459  00ED3B  76                 	db	118	;'v'
  2460  00ED3C  69                 	db	105	;'i'
  2461  00ED3D  63                 	db	99	;'c'
  2462  00ED3E  65                 	db	101	;'e'
  2463  00ED3F  20                 	db	32
  2464  00ED40  73                 	db	115	;'s'
  2465  00ED41  69                 	db	105	;'i'
  2466  00ED42  6C                 	db	108	;'l'
  2467  00ED43  69                 	db	105	;'i'
  2468  00ED44  63                 	db	99	;'c'
  2469  00ED45  6F                 	db	111	;'o'
  2470  00ED46  6E                 	db	110	;'n'
  2471  00ED47  20                 	db	32
  2472  00ED48  72                 	db	114	;'r'
  2473  00ED49  65                 	db	101	;'e'
  2474  00ED4A  76                 	db	118	;'v'
  2475  00ED4B  69                 	db	105	;'i'
  2476  00ED4C  73                 	db	115	;'s'
  2477  00ED4D  69                 	db	105	;'i'
  2478  00ED4E  6F                 	db	111	;'o'
  2479  00ED4F  6E                 	db	110	;'n'
  2480  00ED50  20                 	db	32
  2481  00ED51  49                 	db	73	;'I'
  2482  00ED52  44                 	db	68	;'D'
  2483  00ED53  20                 	db	32
  2484  00ED54  72                 	db	114	;'r'
  2485  00ED55  65                 	db	101	;'e'
  2486  00ED56  74                 	db	116	;'t'
  2487  00ED57  72                 	db	114	;'r'
  2488  00ED58  69                 	db	105	;'i'
  2489  00ED59  65                 	db	101	;'e'
  2490  00ED5A  76                 	db	118	;'v'
  2491  00ED5B  65                 	db	101	;'e'
  2492  00ED5C  64                 	db	100	;'d'
  2493  00ED5D  20                 	db	32
  2494  00ED5E  66                 	db	102	;'f'
  2495  00ED5F  72                 	db	114	;'r'
  2496  00ED60  6F                 	db	111	;'o'
  2497  00ED61  6D                 	db	109	;'m'
  2498  00ED62  20                 	db	32
  2499  00ED63  66                 	db	102	;'f'
  2500  00ED64  6C                 	db	108	;'l'
  2501  00ED65  61                 	db	97	;'a'
  2502  00ED66  73                 	db	115	;'s'
  2503  00ED67  68                 	db	104	;'h'
  2504  00ED68  3A                 	db	58	;':'
  2505  00ED69  20                 	db	32
  2506  00ED6A  25                 	db	37
  2507  00ED6B  63                 	db	99	;'c'
  2508  00ED6C  25                 	db	37
  2509  00ED6D  30                 	db	48	;'0'
  2510  00ED6E  33                 	db	51	;'3'
  2511  00ED6F  64                 	db	100	;'d'
  2512  00ED70  0A                 	db	10
  2513  00ED71  0D                 	db	13
  2514  00ED72  00                 	db	0
  2515  00ED73                     STR_6:
  2516  00ED73  53                 	db	83	;'S'
  2517  00ED74  79                 	db	121	;'y'
  2518  00ED75  73                 	db	115	;'s'
  2519  00ED76  74                 	db	116	;'t'
  2520  00ED77  65                 	db	101	;'e'
  2521  00ED78  6D                 	db	109	;'m'
  2522  00ED79  20                 	db	32
  2523  00ED7A  70                 	db	112	;'p'
  2524  00ED7B  61                 	db	97	;'a'
  2525  00ED7C  72                 	db	114	;'r'
  2526  00ED7D  61                 	db	97	;'a'
  2527  00ED7E  6D                 	db	109	;'m'
  2528  00ED7F  65                 	db	101	;'e'
  2529  00ED80  74                 	db	116	;'t'
  2530  00ED81  65                 	db	101	;'e'
  2531  00ED82  72                 	db	114	;'r'
  2532  00ED83  73                 	db	115	;'s'
  2533  00ED84  20                 	db	32
  2534  00ED85  61                 	db	97	;'a'
  2535  00ED86  6E                 	db	110	;'n'
  2536  00ED87  64                 	db	100	;'d'
  2537  00ED88  20                 	db	32
  2538  00ED89  61                 	db	97	;'a'
  2539  00ED8A  66                 	db	102	;'f'
  2540  00ED8B  66                 	db	102	;'f'
  2541  00ED8C  69                 	db	105	;'i'
  2542  00ED8D  72                 	db	114	;'r'
  2543  00ED8E  6D                 	db	109	;'m'
  2544  00ED8F  61                 	db	97	;'a'
  2545  00ED90  74                 	db	116	;'t'
  2546  00ED91  69                 	db	105	;'i'
  2547  00ED92  76                 	db	118	;'v'
  2548  00ED93  65                 	db	101	;'e'
  2549  00ED94  20                 	db	32
  2550  00ED95  72                 	db	114	;'r'
  2551  00ED96  65                 	db	101	;'e'
  2552  00ED97  73                 	db	115	;'s'
  2553  00ED98  70                 	db	112	;'p'
  2554  00ED99  6F                 	db	111	;'o'
  2555  00ED9A  6E                 	db	110	;'n'
  2556  00ED9B  73                 	db	115	;'s'
  2557  00ED9C  65                 	db	101	;'e'
  2558  00ED9D  73                 	db	115	;'s'
  2559  00ED9E  20                 	db	32
  2560  00ED9F  61                 	db	97	;'a'
  2561  00EDA0  70                 	db	112	;'p'
  2562  00EDA1  70                 	db	112	;'p'
  2563  00EDA2  65                 	db	101	;'e'
  2564  00EDA3  61                 	db	97	;'a'
  2565  00EDA4  72                 	db	114	;'r'
  2566  00EDA5  20                 	db	32
  2567  00EDA6  69                 	db	105	;'i'
  2568  00EDA7  6E                 	db	110	;'n'
  2569  00EDA8  20                 	db	32
  2570  00EDA9  67                 	db	103	;'g'
  2571  00EDAA  72                 	db	114	;'r'
  2572  00EDAB  65                 	db	101	;'e'
  2573  00EDAC  65                 	db	101	;'e'
  2574  00EDAD  6E                 	db	110	;'n'
  2575  00EDAE  0A                 	db	10
  2576  00EDAF  0D                 	db	13
  2577  00EDB0  00                 	db	0
  2578  00EDB1                     STR_273:
  2579  00EDB1  20                 	db	32
  2580  00EDB2  20                 	db	32
  2581  00EDB3  20                 	db	32
  2582  00EDB4  20                 	db	32
  2583  00EDB5  45                 	db	69	;'E'
  2584  00EDB6  6E                 	db	110	;'n'
  2585  00EDB7  65                 	db	101	;'e'
  2586  00EDB8  72                 	db	114	;'r'
  2587  00EDB9  67                 	db	103	;'g'
  2588  00EDBA  79                 	db	121	;'y'
  2589  00EDBB  20                 	db	32
  2590  00EDBC  63                 	db	99	;'c'
  2591  00EDBD  6F                 	db	111	;'o'
  2592  00EDBE  6E                 	db	110	;'n'
  2593  00EDBF  73                 	db	115	;'s'
  2594  00EDC0  75                 	db	117	;'u'
  2595  00EDC1  6D                 	db	109	;'m'
  2596  00EDC2  65                 	db	101	;'e'
  2597  00EDC3  64                 	db	100	;'d'
  2598  00EDC4  20                 	db	32
  2599  00EDC5  62                 	db	98	;'b'
  2600  00EDC6  79                 	db	121	;'y'
  2601  00EDC7  20                 	db	32
  2602  00EDC8  74                 	db	116	;'t'
  2603  00EDC9  68                 	db	104	;'h'
  2604  00EDCA  65                 	db	101	;'e'
  2605  00EDCB  20                 	db	32
  2606  00EDCC  6C                 	db	108	;'l'
  2607  00EDCD  6F                 	db	111	;'o'
  2608  00EDCE  61                 	db	97	;'a'
  2609  00EDCF  64                 	db	100	;'d'
  2610  00EDD0  20                 	db	32
  2611  00EDD1  77                 	db	119	;'w'
  2612  00EDD2  68                 	db	104	;'h'
  2613  00EDD3  69                 	db	105	;'i'
  2614  00EDD4  6C                 	db	108	;'l'
  2615  00EDD5  65                 	db	101	;'e'
  2616  00EDD6  20                 	db	32
  2617  00EDD7  63                 	db	99	;'c'
  2618  00EDD8  68                 	db	104	;'h'
  2619  00EDD9  61                 	db	97	;'a'
  2620  00EDDA  72                 	db	114	;'r'
  2621  00EDDB  67                 	db	103	;'g'
  2622  00EDDC  69                 	db	105	;'i'
  2623  00EDDD  6E                 	db	110	;'n'
  2624  00EDDE  67                 	db	103	;'g'
  2625  00EDDF  3A                 	db	58	;':'
  2626  00EDE0  20                 	db	32
  2627  00EDE1  25                 	db	37
  2628  00EDE2  73                 	db	115	;'s'
  2629  00EDE3  4A                 	db	74	;'J'
  2630  00EDE4  6F                 	db	111	;'o'
  2631  00EDE5  75                 	db	117	;'u'
  2632  00EDE6  6C                 	db	108	;'l'
  2633  00EDE7  65                 	db	101	;'e'
  2634  00EDE8  73                 	db	115	;'s'
  2635  00EDE9  0A                 	db	10
  2636  00EDEA  0D                 	db	13
  2637  00EDEB  0A                 	db	10
  2638  00EDEC  0D                 	db	13
  2639  00EDED  00                 	db	0
  2640  00EDEE                     STR_207:
  2641  00EDEE  20                 	db	32
  2642  00EDEF  20                 	db	32
  2643  00EDF0  20                 	db	32
  2644  00EDF1  20                 	db	32
  2645  00EDF2  54                 	db	84	;'T'
  2646  00EDF3  68                 	db	104	;'h'
  2647  00EDF4  65                 	db	101	;'e'
  2648  00EDF5  20                 	db	32
  2649  00EDF6  66                 	db	102	;'f'
  2650  00EDF7  6F                 	db	111	;'o'
  2651  00EDF8  6C                 	db	108	;'l'
  2652  00EDF9  6C                 	db	108	;'l'
  2653  00EDFA  6F                 	db	111	;'o'
  2654  00EDFB  77                 	db	119	;'w'
  2655  00EDFC  69                 	db	105	;'i'
  2656  00EDFD  6E                 	db	110	;'n'
  2657  00EDFE  67                 	db	103	;'g'
  2658  00EDFF  20                 	db	32
  2659  00EE00  55                 	db	85	;'U'
  2660  00EE01  73                 	db	115	;'s'
  2661  00EE02  65                 	db	101	;'e'
  2662  00EE03  72                 	db	114	;'r'
  2663  00EE04  20                 	db	32
  2664  00EE05  49                 	db	73	;'I'
  2665  00EE06  44                 	db	68	;'D'
  2666  00EE07  73                 	db	115	;'s'
  2667  00EE08  20                 	db	32
  2668  00EE09  68                 	db	104	;'h'
  2669  00EE0A  61                 	db	97	;'a'
  2670  00EE0B  76                 	db	118	;'v'
  2671  00EE0C  65                 	db	101	;'e'
  2672  00EE0D  20                 	db	32
  2673  00EE0E  62                 	db	98	;'b'
  2674  00EE0F  65                 	db	101	;'e'
  2675  00EE10  65                 	db	101	;'e'
  2676  00EE11  6E                 	db	110	;'n'
  2677  00EE12  20                 	db	32
  2678  00EE13  72                 	db	114	;'r'
  2679  00EE14  65                 	db	101	;'e'
  2680  00EE15  74                 	db	116	;'t'
  2681  00EE16  72                 	db	114	;'r'
  2682  00EE17  69                 	db	105	;'i'
  2683  00EE18  65                 	db	101	;'e'
  2684  00EE19  76                 	db	118	;'v'
  2685  00EE1A  65                 	db	101	;'e'
  2686  00EE1B  64                 	db	100	;'d'
  2687  00EE1C  20                 	db	32
  2688  00EE1D  66                 	db	102	;'f'
  2689  00EE1E  72                 	db	114	;'r'
  2690  00EE1F  6F                 	db	111	;'o'
  2691  00EE20  6D                 	db	109	;'m'
  2692  00EE21  20                 	db	32
  2693  00EE22  66                 	db	102	;'f'
  2694  00EE23  6C                 	db	108	;'l'
  2695  00EE24  61                 	db	97	;'a'
  2696  00EE25  73                 	db	115	;'s'
  2697  00EE26  68                 	db	104	;'h'
  2698  00EE27  3A                 	db	58	;':'
  2699  00EE28  0A                 	db	10
  2700  00EE29  0D                 	db	13
  2701  00EE2A  00                 	db	0
  2702  00EE2B  46                 	db	70	;'F'
  2703  00EE2C  69                 	db	105	;'i'
  2704  00EE2D  6E                 	db	110	;'n'
  2705  00EE2E  69                 	db	105	;'i'
  2706  00EE2F  73                 	db	115	;'s'
  2707  00EE30  68                 	db	104	;'h'
  2708  00EE31  65                 	db	101	;'e'
  2709  00EE32  64                 	db	100	;'d'
  2710  00EE33  20                 	db	32
  2711  00EE34  74                 	db	116	;'t'
  2712  00EE35  65                 	db	101	;'e'
  2713  00EE36  73                 	db	115	;'s'
  2714  00EE37  74                 	db	116	;'t'
  2715  00EE38  20                 	db	32
  2716  00EE39  6D                 	db	109	;'m'
  2717  00EE3A  65                 	db	101	;'e'
  2718  00EE3B  73                 	db	115	;'s'
  2719  00EE3C  73                 	db	115	;'s'
  2720  00EE3D  61                 	db	97	;'a'
  2721  00EE3E  67                 	db	103	;'g'
  2722  00EE3F  65                 	db	101	;'e'
  2723  00EE40  2C                 	db	44
  2724  00EE41  20                 	db	32
  2725  00EE42  74                 	db	116	;'t'
  2726  00EE43  79                 	db	121	;'y'
  2727  00EE44  70                 	db	112	;'p'
  2728  00EE45  65                 	db	101	;'e'
  2729  00EE46  20                 	db	32
  2730  00EE47  27                 	db	39
  2731  00EE48  48                 	db	72	;'H'
  2732  00EE49  65                 	db	101	;'e'
  2733  00EE4A  6C                 	db	108	;'l'
  2734  00EE4B  70                 	db	112	;'p'
  2735  00EE4C  27                 	db	39
  2736  00EE4D  20                 	db	32
  2737  00EE4E  66                 	db	102	;'f'
  2738  00EE4F  6F                 	db	111	;'o'
  2739  00EE50  72                 	db	114	;'r'
  2740  00EE51  20                 	db	32
  2741  00EE52  6C                 	db	108	;'l'
  2742  00EE53  69                 	db	105	;'i'
  2743  00EE54  73                 	db	115	;'s'
  2744  00EE55  74                 	db	116	;'t'
  2745  00EE56  20                 	db	32
  2746  00EE57  6F                 	db	111	;'o'
  2747  00EE58  66                 	db	102	;'f'
  2748  00EE59  20                 	db	32
  2749  00EE5A  63                 	db	99	;'c'
  2750  00EE5B  6F                 	db	111	;'o'
  2751  00EE5C  6D                 	db	109	;'m'
  2752  00EE5D  6D                 	db	109	;'m'
  2753  00EE5E  61                 	db	97	;'a'
  2754  00EE5F  6E                 	db	110	;'n'
  2755  00EE60  64                 	db	100	;'d'
  2756  00EE61  73                 	db	115	;'s'
  2757  00EE62  0A                 	db	10
  2758  00EE63  0D                 	db	13
  2759  00EE64  0A                 	db	10
  2760  00EE65  0D                 	db	13
  2761  00EE66  00                 	db	0
  2762  00EE67                     STR_271:
  2763  00EE67  20                 	db	32
  2764  00EE68  20                 	db	32
  2765  00EE69  20                 	db	32
  2766  00EE6A  20                 	db	32
  2767  00EE6B  20                 	db	32
  2768  00EE6C  20                 	db	32
  2769  00EE6D  20                 	db	32
  2770  00EE6E  20                 	db	32
  2771  00EE6F  57                 	db	87	;'W'
  2772  00EE70  69                 	db	105	;'i'
  2773  00EE71  72                 	db	114	;'r'
  2774  00EE72  65                 	db	101	;'e'
  2775  00EE73  6C                 	db	108	;'l'
  2776  00EE74  65                 	db	101	;'e'
  2777  00EE75  73                 	db	115	;'s'
  2778  00EE76  73                 	db	115	;'s'
  2779  00EE77  20                 	db	32
  2780  00EE78  4F                 	db	79	;'O'
  2781  00EE79  75                 	db	117	;'u'
  2782  00EE7A  74                 	db	116	;'t'
  2783  00EE7B  70                 	db	112	;'p'
  2784  00EE7C  75                 	db	117	;'u'
  2785  00EE7D  74                 	db	116	;'t'
  2786  00EE7E  20                 	db	32
  2787  00EE7F  50                 	db	80	;'P'
  2788  00EE80  6F                 	db	111	;'o'
  2789  00EE81  77                 	db	119	;'w'
  2790  00EE82  65                 	db	101	;'e'
  2791  00EE83  72                 	db	114	;'r'
  2792  00EE84  20                 	db	32
  2793  00EE85  63                 	db	99	;'c'
  2794  00EE86  61                 	db	97	;'a'
  2795  00EE87  6C                 	db	108	;'l'
  2796  00EE88  63                 	db	99	;'c'
  2797  00EE89  75                 	db	117	;'u'
  2798  00EE8A  6C                 	db	108	;'l'
  2799  00EE8B  61                 	db	97	;'a'
  2800  00EE8C  74                 	db	116	;'t'
  2801  00EE8D  65                 	db	101	;'e'
  2802  00EE8E  64                 	db	100	;'d'
  2803  00EE8F  20                 	db	32
  2804  00EE90  61                 	db	97	;'a'
  2805  00EE91  73                 	db	115	;'s'
  2806  00EE92  20                 	db	32
  2807  00EE93  25                 	db	37
  2808  00EE94  2B                 	db	43
  2809  00EE95  2E                 	db	46
  2810  00EE96  33                 	db	51	;'3'
  2811  00EE97  66                 	db	102	;'f'
  2812  00EE98  20                 	db	32
  2813  00EE99  57                 	db	87	;'W'
  2814  00EE9A  61                 	db	97	;'a'
  2815  00EE9B  74                 	db	116	;'t'
  2816  00EE9C  74                 	db	116	;'t'
  2817  00EE9D  73                 	db	115	;'s'
  2818  00EE9E  0A                 	db	10
  2819  00EE9F  0D                 	db	13
  2820  00EEA0  0A                 	db	10
  2821  00EEA1  0D                 	db	13
  2822  00EEA2  00                 	db	0
  2823  00EEA3                     STR_208:
  2824  00EEA3  20                 	db	32
  2825  00EEA4  20                 	db	32
  2826  00EEA5  20                 	db	32
  2827  00EEA6  20                 	db	32
  2828  00EEA7  20                 	db	32
  2829  00EEA8  20                 	db	32
  2830  00EEA9  20                 	db	32
  2831  00EEAA  20                 	db	32
  2832  00EEAB  55                 	db	85	;'U'
  2833  00EEAC  73                 	db	115	;'s'
  2834  00EEAD  65                 	db	101	;'e'
  2835  00EEAE  72                 	db	114	;'r'
  2836  00EEAF  20                 	db	32
  2837  00EEB0  49                 	db	73	;'I'
  2838  00EEB1  44                 	db	68	;'D'
  2839  00EEB2  20                 	db	32
  2840  00EEB3  57                 	db	87	;'W'
  2841  00EEB4  6F                 	db	111	;'o'
  2842  00EEB5  72                 	db	114	;'r'
  2843  00EEB6  64                 	db	100	;'d'
  2844  00EEB7  20                 	db	32
  2845  00EEB8  25                 	db	37
  2846  00EEB9  64                 	db	100	;'d'
  2847  00EEBA  20                 	db	32
  2848  00EEBB  28                 	db	40
  2849  00EEBC  46                 	db	70	;'F'
  2850  00EEBD  6C                 	db	108	;'l'
  2851  00EEBE  61                 	db	97	;'a'
  2852  00EEBF  73                 	db	115	;'s'
  2853  00EEC0  68                 	db	104	;'h'
  2854  00EEC1  20                 	db	32
  2855  00EEC2  61                 	db	97	;'a'
  2856  00EEC3  64                 	db	100	;'d'
  2857  00EEC4  64                 	db	100	;'d'
  2858  00EEC5  72                 	db	114	;'r'
  2859  00EEC6  65                 	db	101	;'e'
  2860  00EEC7  73                 	db	115	;'s'
  2861  00EEC8  73                 	db	115	;'s'
  2862  00EEC9  20                 	db	32
  2863  00EECA  30                 	db	48	;'0'
  2864  00EECB  78                 	db	120	;'x'
  2865  00EECC  32                 	db	50	;'2'
  2866  00EECD  30                 	db	48	;'0'
  2867  00EECE  30                 	db	48	;'0'
  2868  00EECF  30                 	db	48	;'0'
  2869  00EED0  30                 	db	48	;'0'
  2870  00EED1  25                 	db	37
  2871  00EED2  58                 	db	88	;'X'
  2872  00EED3  29                 	db	41
  2873  00EED4  3A                 	db	58	;':'
  2874  00EED5  20                 	db	32
  2875  00EED6  30                 	db	48	;'0'
  2876  00EED7  78                 	db	120	;'x'
  2877  00EED8  25                 	db	37
  2878  00EED9  30                 	db	48	;'0'
  2879  00EEDA  34                 	db	52	;'4'
  2880  00EEDB  58                 	db	88	;'X'
  2881  00EEDC  0A                 	db	10
  2882  00EEDD  0D                 	db	13
  2883  00EEDE  00                 	db	0
  2884  00EEDF                     STR_270:
  2885  00EEDF  20                 	db	32
  2886  00EEE0  20                 	db	32
  2887  00EEE1  20                 	db	32
  2888  00EEE2  20                 	db	32
  2889  00EEE3  20                 	db	32
  2890  00EEE4  20                 	db	32
  2891  00EEE5  20                 	db	32
  2892  00EEE6  20                 	db	32
  2893  00EEE7  45                 	db	69	;'E'
  2894  00EEE8  6C                 	db	108	;'l'
  2895  00EEE9  65                 	db	101	;'e'
  2896  00EEEA  63                 	db	99	;'c'
  2897  00EEEB  74                 	db	116	;'t'
  2898  00EEEC  72                 	db	114	;'r'
  2899  00EEED  69                 	db	105	;'i'
  2900  00EEEE  63                 	db	99	;'c'
  2901  00EEEF  61                 	db	97	;'a'
  2902  00EEF0  6C                 	db	108	;'l'
  2903  00EEF1  20                 	db	32
  2904  00EEF2  49                 	db	73	;'I'
  2905  00EEF3  6E                 	db	110	;'n'
  2906  00EEF4  70                 	db	112	;'p'
  2907  00EEF5  75                 	db	117	;'u'
  2908  00EEF6  74                 	db	116	;'t'
  2909  00EEF7  20                 	db	32
  2910  00EEF8  50                 	db	80	;'P'
  2911  00EEF9  6F                 	db	111	;'o'
  2912  00EEFA  77                 	db	119	;'w'
  2913  00EEFB  65                 	db	101	;'e'
  2914  00EEFC  72                 	db	114	;'r'
  2915  00EEFD  20                 	db	32
  2916  00EEFE  63                 	db	99	;'c'
  2917  00EEFF  61                 	db	97	;'a'
  2918  00EF00  6C                 	db	108	;'l'
  2919  00EF01  63                 	db	99	;'c'
  2920  00EF02  75                 	db	117	;'u'
  2921  00EF03  6C                 	db	108	;'l'
  2922  00EF04  61                 	db	97	;'a'
  2923  00EF05  74                 	db	116	;'t'
  2924  00EF06  65                 	db	101	;'e'
  2925  00EF07  64                 	db	100	;'d'
  2926  00EF08  20                 	db	32
  2927  00EF09  61                 	db	97	;'a'
  2928  00EF0A  73                 	db	115	;'s'
  2929  00EF0B  20                 	db	32
  2930  00EF0C  25                 	db	37
  2931  00EF0D  2B                 	db	43
  2932  00EF0E  2E                 	db	46
  2933  00EF0F  33                 	db	51	;'3'
  2934  00EF10  66                 	db	102	;'f'
  2935  00EF11  20                 	db	32
  2936  00EF12  57                 	db	87	;'W'
  2937  00EF13  61                 	db	97	;'a'
  2938  00EF14  74                 	db	116	;'t'
  2939  00EF15  74                 	db	116	;'t'
  2940  00EF16  73                 	db	115	;'s'
  2941  00EF17  0A                 	db	10
  2942  00EF18  0D                 	db	13
  2943  00EF19  00                 	db	0
  2944  00EF1A                     STR_260:
  2945  00EF1A  20                 	db	32
  2946  00EF1B  20                 	db	32
  2947  00EF1C  20                 	db	32
  2948  00EF1D  20                 	db	32
  2949  00EF1E  51                 	db	81	;'Q'
  2950  00EF1F  49                 	db	73	;'I'
  2951  00EF20  20                 	db	32
  2952  00EF21  77                 	db	119	;'w'
  2953  00EF22  69                 	db	105	;'i'
  2954  00EF23  72                 	db	114	;'r'
  2955  00EF24  65                 	db	101	;'e'
  2956  00EF25  6C                 	db	108	;'l'
  2957  00EF26  65                 	db	101	;'e'
  2958  00EF27  73                 	db	115	;'s'
  2959  00EF28  73                 	db	115	;'s'
  2960  00EF29  20                 	db	32
  2961  00EF2A  70                 	db	112	;'p'
  2962  00EF2B  6F                 	db	111	;'o'
  2963  00EF2C  77                 	db	119	;'w'
  2964  00EF2D  65                 	db	101	;'e'
  2965  00EF2E  72                 	db	114	;'r'
  2966  00EF2F  20                 	db	32
  2967  00EF30  63                 	db	99	;'c'
  2968  00EF31  6F                 	db	111	;'o'
  2969  00EF32  6E                 	db	110	;'n'
  2970  00EF33  76                 	db	118	;'v'
  2971  00EF34  65                 	db	101	;'e'
  2972  00EF35  72                 	db	114	;'r'
  2973  00EF36  74                 	db	116	;'t'
  2974  00EF37  65                 	db	101	;'e'
  2975  00EF38  72                 	db	114	;'r'
  2976  00EF39  20                 	db	32
  2977  00EF3A  68                 	db	104	;'h'
  2978  00EF3B  61                 	db	97	;'a'
  2979  00EF3C  73                 	db	115	;'s'
  2980  00EF3D  20                 	db	32
  2981  00EF3E  66                 	db	102	;'f'
  2982  00EF3F  75                 	db	117	;'u'
  2983  00EF40  6C                 	db	108	;'l'
  2984  00EF41  6C                 	db	108	;'l'
  2985  00EF42  79                 	db	121	;'y'
  2986  00EF43  20                 	db	32
  2987  00EF44  63                 	db	99	;'c'
  2988  00EF45  68                 	db	104	;'h'
  2989  00EF46  61                 	db	97	;'a'
  2990  00EF47  72                 	db	114	;'r'
  2991  00EF48  67                 	db	103	;'g'
  2992  00EF49  65                 	db	101	;'e'
  2993  00EF4A  64                 	db	100	;'d'
  2994  00EF4B  20                 	db	32
  2995  00EF4C  70                 	db	112	;'p'
  2996  00EF4D  68                 	db	104	;'h'
  2997  00EF4E  6F                 	db	111	;'o'
  2998  00EF4F  6E                 	db	110	;'n'
  2999  00EF50  65                 	db	101	;'e'
  3000  00EF51  0A                 	db	10
  3001  00EF52  0D                 	db	13
  3002  00EF53  00                 	db	0
  3003  00EF54                     STR_5:
  3004  00EF54  0A                 	db	10
  3005  00EF55  0D                 	db	13
  3006  00EF56  48                 	db	72	;'H'
  3007  00EF57  65                 	db	101	;'e'
  3008  00EF58  6C                 	db	108	;'l'
  3009  00EF59  70                 	db	112	;'p'
  3010  00EF5A  20                 	db	32
  3011  00EF5B  6D                 	db	109	;'m'
  3012  00EF5C  65                 	db	101	;'e'
  3013  00EF5D  73                 	db	115	;'s'
  3014  00EF5E  73                 	db	115	;'s'
  3015  00EF5F  61                 	db	97	;'a'
  3016  00EF60  67                 	db	103	;'g'
  3017  00EF61  65                 	db	101	;'e'
  3018  00EF62  73                 	db	115	;'s'
  3019  00EF63  20                 	db	32
  3020  00EF64  61                 	db	97	;'a'
  3021  00EF65  6E                 	db	110	;'n'
  3022  00EF66  64                 	db	100	;'d'
  3023  00EF67  20                 	db	32
  3024  00EF68  6E                 	db	110	;'n'
  3025  00EF69  65                 	db	101	;'e'
  3026  00EF6A  75                 	db	117	;'u'
  3027  00EF6B  74                 	db	116	;'t'
  3028  00EF6C  72                 	db	114	;'r'
  3029  00EF6D  61                 	db	97	;'a'
  3030  00EF6E  6C                 	db	108	;'l'
  3031  00EF6F  20                 	db	32
  3032  00EF70  72                 	db	114	;'r'
  3033  00EF71  65                 	db	101	;'e'
  3034  00EF72  73                 	db	115	;'s'
  3035  00EF73  70                 	db	112	;'p'
  3036  00EF74  6F                 	db	111	;'o'
  3037  00EF75  6E                 	db	110	;'n'
  3038  00EF76  73                 	db	115	;'s'
  3039  00EF77  65                 	db	101	;'e'
  3040  00EF78  73                 	db	115	;'s'
  3041  00EF79  20                 	db	32
  3042  00EF7A  61                 	db	97	;'a'
  3043  00EF7B  70                 	db	112	;'p'
  3044  00EF7C  70                 	db	112	;'p'
  3045  00EF7D  65                 	db	101	;'e'
  3046  00EF7E  61                 	db	97	;'a'
  3047  00EF7F  72                 	db	114	;'r'
  3048  00EF80  20                 	db	32
  3049  00EF81  69                 	db	105	;'i'
  3050  00EF82  6E                 	db	110	;'n'
  3051  00EF83  20                 	db	32
  3052  00EF84  79                 	db	121	;'y'
  3053  00EF85  65                 	db	101	;'e'
  3054  00EF86  6C                 	db	108	;'l'
  3055  00EF87  6C                 	db	108	;'l'
  3056  00EF88  6F                 	db	111	;'o'
  3057  00EF89  77                 	db	119	;'w'
  3058  00EF8A  0A                 	db	10
  3059  00EF8B  0D                 	db	13
  3060  00EF8C  00                 	db	0
  3061  00EF8D                     STR_268:
  3062  00EF8D  20                 	db	32
  3063  00EF8E  20                 	db	32
  3064  00EF8F  20                 	db	32
  3065  00EF90  20                 	db	32
  3066  00EF91  20                 	db	32
  3067  00EF92  20                 	db	32
  3068  00EF93  20                 	db	32
  3069  00EF94  20                 	db	32
  3070  00EF95  51                 	db	81	;'Q'
  3071  00EF96  49                 	db	73	;'I'
  3072  00EF97  20                 	db	32
  3073  00EF98  63                 	db	99	;'c'
  3074  00EF99  6F                 	db	111	;'o'
  3075  00EF9A  6E                 	db	110	;'n'
  3076  00EF9B  76                 	db	118	;'v'
  3077  00EF9C  65                 	db	101	;'e'
  3078  00EF9D  72                 	db	114	;'r'
  3079  00EF9E  74                 	db	116	;'t'
  3080  00EF9F  65                 	db	101	;'e'
  3081  00EFA0  72                 	db	114	;'r'
  3082  00EFA1  20                 	db	32
  3083  00EFA2  63                 	db	99	;'c'
  3084  00EFA3  75                 	db	117	;'u'
  3085  00EFA4  72                 	db	114	;'r'
  3086  00EFA5  72                 	db	114	;'r'
  3087  00EFA6  65                 	db	101	;'e'
  3088  00EFA7  6E                 	db	110	;'n'
  3089  00EFA8  74                 	db	116	;'t'
  3090  00EFA9  20                 	db	32
  3091  00EFAA  6D                 	db	109	;'m'
  3092  00EFAB  65                 	db	101	;'e'
  3093  00EFAC  61                 	db	97	;'a'
  3094  00EFAD  73                 	db	115	;'s'
  3095  00EFAE  75                 	db	117	;'u'
  3096  00EFAF  72                 	db	114	;'r'
  3097  00EFB0  65                 	db	101	;'e'
  3098  00EFB1  64                 	db	100	;'d'
  3099  00EFB2  20                 	db	32
  3100  00EFB3  61                 	db	97	;'a'
  3101  00EFB4  73                 	db	115	;'s'
  3102  00EFB5  20                 	db	32
  3103  00EFB6  25                 	db	37
  3104  00EFB7  2B                 	db	43
  3105  00EFB8  2E                 	db	46
  3106  00EFB9  33                 	db	51	;'3'
  3107  00EFBA  66                 	db	102	;'f'
  3108  00EFBB  20                 	db	32
  3109  00EFBC  41                 	db	65	;'A'
  3110  00EFBD  6D                 	db	109	;'m'
  3111  00EFBE  70                 	db	112	;'p'
  3112  00EFBF  73                 	db	115	;'s'
  3113  00EFC0  0A                 	db	10
  3114  00EFC1  0D                 	db	13
  3115  00EFC2  0A                 	db	10
  3116  00EFC3  0D                 	db	13
  3117  00EFC4  00                 	db	0
  3118  00EFC5                     STR_282:
  3119  00EFC5  20                 	db	32
  3120  00EFC6  20                 	db	32
  3121  00EFC7  20                 	db	32
  3122  00EFC8  20                 	db	32
  3123  00EFC9  20                 	db	32
  3124  00EFCA  20                 	db	32
  3125  00EFCB  20                 	db	32
  3126  00EFCC  20                 	db	32
  3127  00EFCD  2B                 	db	43
  3128  00EFCE  35                 	db	53	;'5'
  3129  00EFCF  56                 	db	86	;'V'
  3130  00EFD0  20                 	db	32
  3131  00EFD1  43                 	db	67	;'C'
  3132  00EFD2  6F                 	db	111	;'o'
  3133  00EFD3  6E                 	db	110	;'n'
  3134  00EFD4  76                 	db	118	;'v'
  3135  00EFD5  65                 	db	101	;'e'
  3136  00EFD6  72                 	db	114	;'r'
  3137  00EFD7  74                 	db	116	;'t'
  3138  00EFD8  65                 	db	101	;'e'
  3139  00EFD9  72                 	db	114	;'r'
  3140  00EFDA  20                 	db	32
  3141  00EFDB  54                 	db	84	;'T'
  3142  00EFDC  65                 	db	101	;'e'
  3143  00EFDD  6D                 	db	109	;'m'
  3144  00EFDE  70                 	db	112	;'p'
  3145  00EFDF  65                 	db	101	;'e'
  3146  00EFE0  72                 	db	114	;'r'
  3147  00EFE1  61                 	db	97	;'a'
  3148  00EFE2  74                 	db	116	;'t'
  3149  00EFE3  75                 	db	117	;'u'
  3150  00EFE4  72                 	db	114	;'r'
  3151  00EFE5  65                 	db	101	;'e'
  3152  00EFE6  20                 	db	32
  3153  00EFE7  6D                 	db	109	;'m'
  3154  00EFE8  65                 	db	101	;'e'
  3155  00EFE9  61                 	db	97	;'a'
  3156  00EFEA  73                 	db	115	;'s'
  3157  00EFEB  75                 	db	117	;'u'
  3158  00EFEC  72                 	db	114	;'r'
  3159  00EFED  65                 	db	101	;'e'
  3160  00EFEE  64                 	db	100	;'d'
  3161  00EFEF  20                 	db	32
  3162  00EFF0  61                 	db	97	;'a'
  3163  00EFF1  73                 	db	115	;'s'
  3164  00EFF2  20                 	db	32
  3165  00EFF3  25                 	db	37
  3166  00EFF4  2B                 	db	43
  3167  00EFF5  2E                 	db	46
  3168  00EFF6  33                 	db	51	;'3'
  3169  00EFF7  66                 	db	102	;'f'
  3170  00EFF8  20                 	db	32
  3171  00EFF9  43                 	db	67	;'C'
  3172  00EFFA  0A                 	db	10
  3173  00EFFB  0D                 	db	13
  3174  00EFFC  00                 	db	0
  3175  00EFFD                     STR_210:
  3176  00EFFD  20                 	db	32
  3177  00EFFE  20                 	db	32
  3178  00EFFF  20                 	db	32
  3179  00F000  20                 	db	32
  3180  00F001  54                 	db	84	;'T'
  3181  00F002  68                 	db	104	;'h'
  3182  00F003  65                 	db	101	;'e'
  3183  00F004  20                 	db	32
  3184  00F005  63                 	db	99	;'c'
  3185  00F006  61                 	db	97	;'a'
  3186  00F007  75                 	db	117	;'u'
  3187  00F008  73                 	db	115	;'s'
  3188  00F009  65                 	db	101	;'e'
  3189  00F00A  20                 	db	32
  3190  00F00B  6F                 	db	111	;'o'
  3191  00F00C  66                 	db	102	;'f'
  3192  00F00D  20                 	db	32
  3193  00F00E  74                 	db	116	;'t'
  3194  00F00F  68                 	db	104	;'h'
  3195  00F010  65                 	db	101	;'e'
  3196  00F011  20                 	db	32
  3197  00F012  6D                 	db	109	;'m'
  3198  00F013  6F                 	db	111	;'o'
  3199  00F014  73                 	db	115	;'s'
  3200  00F015  74                 	db	116	;'t'
  3201  00F016  20                 	db	32
  3202  00F017  72                 	db	114	;'r'
  3203  00F018  65                 	db	101	;'e'
  3204  00F019  63                 	db	99	;'c'
  3205  00F01A  65                 	db	101	;'e'
  3206  00F01B  6E                 	db	110	;'n'
  3207  00F01C  74                 	db	116	;'t'
  3208  00F01D  20                 	db	32
  3209  00F01E  64                 	db	100	;'d'
  3210  00F01F  65                 	db	101	;'e'
  3211  00F020  76                 	db	118	;'v'
  3212  00F021  69                 	db	105	;'i'
  3213  00F022  63                 	db	99	;'c'
  3214  00F023  65                 	db	101	;'e'
  3215  00F024  20                 	db	32
  3216  00F025  72                 	db	114	;'r'
  3217  00F026  65                 	db	101	;'e'
  3218  00F027  73                 	db	115	;'s'
  3219  00F028  65                 	db	101	;'e'
  3220  00F029  74                 	db	116	;'t'
  3221  00F02A  20                 	db	32
  3222  00F02B  77                 	db	119	;'w'
  3223  00F02C  61                 	db	97	;'a'
  3224  00F02D  73                 	db	115	;'s'
  3225  00F02E  3A                 	db	58	;':'
  3226  00F02F  20                 	db	32
  3227  00F030  25                 	db	37
  3228  00F031  73                 	db	115	;'s'
  3229  00F032  0A                 	db	10
  3230  00F033  0D                 	db	13
  3231  00F034  00                 	db	0
  3232  00F035                     STR_281:
  3233  00F035  20                 	db	32
  3234  00F036  20                 	db	32
  3235  00F037  20                 	db	32
  3236  00F038  20                 	db	32
  3237  00F039  20                 	db	32
  3238  00F03A  20                 	db	32
  3239  00F03B  20                 	db	32
  3240  00F03C  20                 	db	32
  3241  00F03D  51                 	db	81	;'Q'
  3242  00F03E  49                 	db	73	;'I'
  3243  00F03F  20                 	db	32
  3244  00F040  43                 	db	67	;'C'
  3245  00F041  6F                 	db	111	;'o'
  3246  00F042  6E                 	db	110	;'n'
  3247  00F043  76                 	db	118	;'v'
  3248  00F044  65                 	db	101	;'e'
  3249  00F045  72                 	db	114	;'r'
  3250  00F046  74                 	db	116	;'t'
  3251  00F047  65                 	db	101	;'e'
  3252  00F048  72                 	db	114	;'r'
  3253  00F049  20                 	db	32
  3254  00F04A  54                 	db	84	;'T'
  3255  00F04B  65                 	db	101	;'e'
  3256  00F04C  6D                 	db	109	;'m'
  3257  00F04D  70                 	db	112	;'p'
  3258  00F04E  65                 	db	101	;'e'
  3259  00F04F  72                 	db	114	;'r'
  3260  00F050  61                 	db	97	;'a'
  3261  00F051  74                 	db	116	;'t'
  3262  00F052  75                 	db	117	;'u'
  3263  00F053  72                 	db	114	;'r'
  3264  00F054  65                 	db	101	;'e'
  3265  00F055  20                 	db	32
  3266  00F056  6D                 	db	109	;'m'
  3267  00F057  65                 	db	101	;'e'
  3268  00F058  61                 	db	97	;'a'
  3269  00F059  73                 	db	115	;'s'
  3270  00F05A  75                 	db	117	;'u'
  3271  00F05B  72                 	db	114	;'r'
  3272  00F05C  65                 	db	101	;'e'
  3273  00F05D  64                 	db	100	;'d'
  3274  00F05E  20                 	db	32
  3275  00F05F  61                 	db	97	;'a'
  3276  00F060  73                 	db	115	;'s'
  3277  00F061  20                 	db	32
  3278  00F062  25                 	db	37
  3279  00F063  2B                 	db	43
  3280  00F064  2E                 	db	46
  3281  00F065  33                 	db	51	;'3'
  3282  00F066  66                 	db	102	;'f'
  3283  00F067  20                 	db	32
  3284  00F068  43                 	db	67	;'C'
  3285  00F069  0A                 	db	10
  3286  00F06A  0D                 	db	13
  3287  00F06B  00                 	db	0
  3288  00F06C                     STR_198:
  3289  00F06C  51                 	db	81	;'Q'
  3290  00F06D  49                 	db	73	;'I'
  3291  00F06E  20                 	db	32
  3292  00F06F  43                 	db	67	;'C'
  3293  00F070  68                 	db	104	;'h'
  3294  00F071  61                 	db	97	;'a'
  3295  00F072  72                 	db	114	;'r'
  3296  00F073  67                 	db	103	;'g'
  3297  00F074  65                 	db	101	;'e'
  3298  00F075  72                 	db	114	;'r'
  3299  00F076  20                 	db	32
  3300  00F077  77                 	db	119	;'w'
  3301  00F078  69                 	db	105	;'i'
  3302  00F079  74                 	db	116	;'t'
  3303  00F07A  68                 	db	104	;'h'
  3304  00F07B  20                 	db	32
  3305  00F07C  44                 	db	68	;'D'
  3306  00F07D  69                 	db	105	;'i'
  3307  00F07E  67                 	db	103	;'g'
  3308  00F07F  69                 	db	105	;'i'
  3309  00F080  74                 	db	116	;'t'
  3310  00F081  61                 	db	97	;'a'
  3311  00F082  6C                 	db	108	;'l'
  3312  00F083  20                 	db	32
  3313  00F084  4D                 	db	77	;'M'
  3314  00F085  6F                 	db	111	;'o'
  3315  00F086  6E                 	db	110	;'n'
  3316  00F087  69                 	db	105	;'i'
  3317  00F088  74                 	db	116	;'t'
  3318  00F089  6F                 	db	111	;'o'
  3319  00F08A  72                 	db	114	;'r'
  3320  00F08B  69                 	db	105	;'i'
  3321  00F08C  6E                 	db	110	;'n'
  3322  00F08D  67                 	db	103	;'g'
  3323  00F08E  2C                 	db	44
  3324  00F08F  20                 	db	32
  3325  00F090  62                 	db	98	;'b'
  3326  00F091  79                 	db	121	;'y'
  3327  00F092  20                 	db	32
  3328  00F093  44                 	db	68	;'D'
  3329  00F094  72                 	db	114	;'r'
  3330  00F095  65                 	db	101	;'e'
  3331  00F096  77                 	db	119	;'w'
  3332  00F097  20                 	db	32
  3333  00F098  4D                 	db	77	;'M'
  3334  00F099  61                 	db	97	;'a'
  3335  00F09A  61                 	db	97	;'a'
  3336  00F09B  74                 	db	116	;'t'
  3337  00F09C  6D                 	db	109	;'m'
  3338  00F09D  61                 	db	97	;'a'
  3339  00F09E  6E                 	db	110	;'n'
  3340  00F09F  0A                 	db	10
  3341  00F0A0  0D                 	db	13
  3342  00F0A1  00                 	db	0
  3343  00F0A2                     STR_212:
  3344  00F0A2  20                 	db	32
  3345  00F0A3  20                 	db	32
  3346  00F0A4  20                 	db	32
  3347  00F0A5  20                 	db	32
  3348  00F0A6  44                 	db	68	;'D'
  3349  00F0A7  65                 	db	101	;'e'
  3350  00F0A8  76                 	db	118	;'v'
  3351  00F0A9  69                 	db	105	;'i'
  3352  00F0AA  63                 	db	99	;'c'
  3353  00F0AB  65                 	db	101	;'e'
  3354  00F0AC  20                 	db	32
  3355  00F0AD  6F                 	db	111	;'o'
  3356  00F0AE  6E                 	db	110	;'n'
  3357  00F0AF  20                 	db	32
  3358  00F0B0  74                 	db	116	;'t'
  3359  00F0B1  69                 	db	105	;'i'
  3360  00F0B2  6D                 	db	109	;'m'
  3361  00F0B3  65                 	db	101	;'e'
  3362  00F0B4  20                 	db	32
  3363  00F0B5  73                 	db	115	;'s'
  3364  00F0B6  69                 	db	105	;'i'
  3365  00F0B7  6E                 	db	110	;'n'
  3366  00F0B8  63                 	db	99	;'c'
  3367  00F0B9  65                 	db	101	;'e'
  3368  00F0BA  20                 	db	32
  3369  00F0BB  6C                 	db	108	;'l'
  3370  00F0BC  61                 	db	97	;'a'
  3371  00F0BD  73                 	db	115	;'s'
  3372  00F0BE  74                 	db	116	;'t'
  3373  00F0BF  20                 	db	32
  3374  00F0C0  72                 	db	114	;'r'
  3375  00F0C1  65                 	db	101	;'e'
  3376  00F0C2  73                 	db	115	;'s'
  3377  00F0C3  65                 	db	101	;'e'
  3378  00F0C4  74                 	db	116	;'t'
  3379  00F0C5  20                 	db	32
  3380  00F0C6  63                 	db	99	;'c'
  3381  00F0C7  6F                 	db	111	;'o'
  3382  00F0C8  6E                 	db	110	;'n'
  3383  00F0C9  64                 	db	100	;'d'
  3384  00F0CA  69                 	db	105	;'i'
  3385  00F0CB  74                 	db	116	;'t'
  3386  00F0CC  69                 	db	105	;'i'
  3387  00F0CD  6F                 	db	111	;'o'
  3388  00F0CE  6E                 	db	110	;'n'
  3389  00F0CF  20                 	db	32
  3390  00F0D0  69                 	db	105	;'i'
  3391  00F0D1  73                 	db	115	;'s'
  3392  00F0D2  20                 	db	32
  3393  00F0D3  25                 	db	37
  3394  00F0D4  73                 	db	115	;'s'
  3395  00F0D5  0A                 	db	10
  3396  00F0D6  0D                 	db	13
  3397  00F0D7  00                 	db	0
  3398  00F0D8                     STR_283:
  3399  00F0D8  20                 	db	32
  3400  00F0D9  20                 	db	32
  3401  00F0DA  20                 	db	32
  3402  00F0DB  20                 	db	32
  3403  00F0DC  20                 	db	32
  3404  00F0DD  20                 	db	32
  3405  00F0DE  20                 	db	32
  3406  00F0DF  20                 	db	32
  3407  00F0E0  41                 	db	65	;'A'
  3408  00F0E1  6D                 	db	109	;'m'
  3409  00F0E2  62                 	db	98	;'b'
  3410  00F0E3  69                 	db	105	;'i'
  3411  00F0E4  65                 	db	101	;'e'
  3412  00F0E5  6E                 	db	110	;'n'
  3413  00F0E6  74                 	db	116	;'t'
  3414  00F0E7  20                 	db	32
  3415  00F0E8  54                 	db	84	;'T'
  3416  00F0E9  65                 	db	101	;'e'
  3417  00F0EA  6D                 	db	109	;'m'
  3418  00F0EB  70                 	db	112	;'p'
  3419  00F0EC  65                 	db	101	;'e'
  3420  00F0ED  72                 	db	114	;'r'
  3421  00F0EE  61                 	db	97	;'a'
  3422  00F0EF  74                 	db	116	;'t'
  3423  00F0F0  75                 	db	117	;'u'
  3424  00F0F1  72                 	db	114	;'r'
  3425  00F0F2  65                 	db	101	;'e'
  3426  00F0F3  20                 	db	32
  3427  00F0F4  6D                 	db	109	;'m'
  3428  00F0F5  65                 	db	101	;'e'
  3429  00F0F6  61                 	db	97	;'a'
  3430  00F0F7  73                 	db	115	;'s'
  3431  00F0F8  75                 	db	117	;'u'
  3432  00F0F9  72                 	db	114	;'r'
  3433  00F0FA  65                 	db	101	;'e'
  3434  00F0FB  64                 	db	100	;'d'
  3435  00F0FC  20                 	db	32
  3436  00F0FD  61                 	db	97	;'a'
  3437  00F0FE  73                 	db	115	;'s'
  3438  00F0FF  20                 	db	32
  3439  00F100  25                 	db	37
  3440  00F101  2B                 	db	43
  3441  00F102  2E                 	db	46
  3442  00F103  33                 	db	51	;'3'
  3443  00F104  66                 	db	102	;'f'
  3444  00F105  20                 	db	32
  3445  00F106  43                 	db	67	;'C'
  3446  00F107  0A                 	db	10
  3447  00F108  0D                 	db	13
  3448  00F109  0A                 	db	10
  3449  00F10A  0D                 	db	13
  3450  00F10B  00                 	db	0
  3451  00F10C                     STR_261:
  3452  00F10C  20                 	db	32
  3453  00F10D  20                 	db	32
  3454  00F10E  20                 	db	32
  3455  00F10F  20                 	db	32
  3456  00F110  51                 	db	81	;'Q'
  3457  00F111  49                 	db	73	;'I'
  3458  00F112  20                 	db	32
  3459  00F113  77                 	db	119	;'w'
  3460  00F114  69                 	db	105	;'i'
  3461  00F115  72                 	db	114	;'r'
  3462  00F116  65                 	db	101	;'e'
  3463  00F117  6C                 	db	108	;'l'
  3464  00F118  65                 	db	101	;'e'
  3465  00F119  73                 	db	115	;'s'
  3466  00F11A  73                 	db	115	;'s'
  3467  00F11B  20                 	db	32
  3468  00F11C  70                 	db	112	;'p'
  3469  00F11D  6F                 	db	111	;'o'
  3470  00F11E  77                 	db	119	;'w'
  3471  00F11F  65                 	db	101	;'e'
  3472  00F120  72                 	db	114	;'r'
  3473  00F121  20                 	db	32
  3474  00F122  63                 	db	99	;'c'
  3475  00F123  6F                 	db	111	;'o'
  3476  00F124  6E                 	db	110	;'n'
  3477  00F125  76                 	db	118	;'v'
  3478  00F126  65                 	db	101	;'e'
  3479  00F127  72                 	db	114	;'r'
  3480  00F128  74                 	db	116	;'t'
  3481  00F129  65                 	db	101	;'e'
  3482  00F12A  72                 	db	114	;'r'
  3483  00F12B  20                 	db	32
  3484  00F12C  69                 	db	105	;'i'
  3485  00F12D  73                 	db	115	;'s'
  3486  00F12E  20                 	db	32
  3487  00F12F  63                 	db	99	;'c'
  3488  00F130  75                 	db	117	;'u'
  3489  00F131  72                 	db	114	;'r'
  3490  00F132  72                 	db	114	;'r'
  3491  00F133  65                 	db	101	;'e'
  3492  00F134  6E                 	db	110	;'n'
  3493  00F135  74                 	db	116	;'t'
  3494  00F136  6C                 	db	108	;'l'
  3495  00F137  79                 	db	121	;'y'
  3496  00F138  20                 	db	32
  3497  00F139  25                 	db	37
  3498  00F13A  73                 	db	115	;'s'
  3499  00F13B  0A                 	db	10
  3500  00F13C  0D                 	db	13
  3501  00F13D  0A                 	db	10
  3502  00F13E  0D                 	db	13
  3503  00F13F  00                 	db	0
  3504  00F140                     STR_246:
  3505  00F140  20                 	db	32
  3506  00F141  20                 	db	32
  3507  00F142  20                 	db	32
  3508  00F143  20                 	db	32
  3509  00F144  43                 	db	67	;'C'
  3510  00F145  61                 	db	97	;'a'
  3511  00F146  6C                 	db	108	;'l'
  3512  00F147  6C                 	db	108	;'l'
  3513  00F148  20                 	db	32
  3514  00F149  27                 	db	39
  3515  00F14A  43                 	db	67	;'C'
  3516  00F14B  6C                 	db	108	;'l'
  3517  00F14C  65                 	db	101	;'e'
  3518  00F14D  61                 	db	97	;'a'
  3519  00F14E  72                 	db	114	;'r'
  3520  00F14F  20                 	db	32
  3521  00F150  41                 	db	65	;'A'
  3522  00F151  44                 	db	68	;'D'
  3523  00F152  43                 	db	67	;'C'
  3524  00F153  20                 	db	32
  3525  00F154  45                 	db	69	;'E'
  3526  00F155  72                 	db	114	;'r'
  3527  00F156  72                 	db	114	;'r'
  3528  00F157  6F                 	db	111	;'o'
  3529  00F158  72                 	db	114	;'r'
  3530  00F159  73                 	db	115	;'s'
  3531  00F15A  27                 	db	39
  3532  00F15B  20                 	db	32
  3533  00F15C  74                 	db	116	;'t'
  3534  00F15D  6F                 	db	111	;'o'
  3535  00F15E  20                 	db	32
  3536  00F15F  63                 	db	99	;'c'
  3537  00F160  6C                 	db	108	;'l'
  3538  00F161  65                 	db	101	;'e'
  3539  00F162  61                 	db	97	;'a'
  3540  00F163  72                 	db	114	;'r'
  3541  00F164  20                 	db	32
  3542  00F165  41                 	db	65	;'A'
  3543  00F166  44                 	db	68	;'D'
  3544  00F167  43                 	db	67	;'C'
  3545  00F168  20                 	db	32
  3546  00F169  65                 	db	101	;'e'
  3547  00F16A  72                 	db	114	;'r'
  3548  00F16B  72                 	db	114	;'r'
  3549  00F16C  6F                 	db	111	;'o'
  3550  00F16D  72                 	db	114	;'r'
  3551  00F16E  28                 	db	40
  3552  00F16F  73                 	db	115	;'s'
  3553  00F170  29                 	db	41
  3554  00F171  0A                 	db	10
  3555  00F172  0D                 	db	13
  3556  00F173  00                 	db	0
  3557  00F174                     STR_267:
  3558  00F174  20                 	db	32
  3559  00F175  20                 	db	32
  3560  00F176  20                 	db	32
  3561  00F177  20                 	db	32
  3562  00F178  20                 	db	32
  3563  00F179  20                 	db	32
  3564  00F17A  20                 	db	32
  3565  00F17B  20                 	db	32
  3566  00F17C  2B                 	db	43
  3567  00F17D  31                 	db	49	;'1'
  3568  00F17E  32                 	db	50	;'2'
  3569  00F17F  56                 	db	86	;'V'
  3570  00F180  20                 	db	32
  3571  00F181  69                 	db	105	;'i'
  3572  00F182  6E                 	db	110	;'n'
  3573  00F183  70                 	db	112	;'p'
  3574  00F184  75                 	db	117	;'u'
  3575  00F185  74                 	db	116	;'t'
  3576  00F186  20                 	db	32
  3577  00F187  63                 	db	99	;'c'
  3578  00F188  75                 	db	117	;'u'
  3579  00F189  72                 	db	114	;'r'
  3580  00F18A  72                 	db	114	;'r'
  3581  00F18B  65                 	db	101	;'e'
  3582  00F18C  6E                 	db	110	;'n'
  3583  00F18D  74                 	db	116	;'t'
  3584  00F18E  20                 	db	32
  3585  00F18F  6D                 	db	109	;'m'
  3586  00F190  65                 	db	101	;'e'
  3587  00F191  61                 	db	97	;'a'
  3588  00F192  73                 	db	115	;'s'
  3589  00F193  75                 	db	117	;'u'
  3590  00F194  72                 	db	114	;'r'
  3591  00F195  65                 	db	101	;'e'
  3592  00F196  64                 	db	100	;'d'
  3593  00F197  20                 	db	32
  3594  00F198  61                 	db	97	;'a'
  3595  00F199  73                 	db	115	;'s'
  3596  00F19A  20                 	db	32
  3597  00F19B  25                 	db	37
  3598  00F19C  2B                 	db	43
  3599  00F19D  2E                 	db	46
  3600  00F19E  33                 	db	51	;'3'
  3601  00F19F  66                 	db	102	;'f'
  3602  00F1A0  20                 	db	32
  3603  00F1A1  41                 	db	65	;'A'
  3604  00F1A2  6D                 	db	109	;'m'
  3605  00F1A3  70                 	db	112	;'p'
  3606  00F1A4  73                 	db	115	;'s'
  3607  00F1A5  0A                 	db	10
  3608  00F1A6  0D                 	db	13
  3609  00F1A7  00                 	db	0
  3610  00F1A8                     STR_2:
  3611  00F1A8  51                 	db	81	;'Q'
  3612  00F1A9  49                 	db	73	;'I'
  3613  00F1AA  20                 	db	32
  3614  00F1AB  43                 	db	67	;'C'
  3615  00F1AC  68                 	db	104	;'h'
  3616  00F1AD  61                 	db	97	;'a'
  3617  00F1AE  72                 	db	114	;'r'
  3618  00F1AF  67                 	db	103	;'g'
  3619  00F1B0  65                 	db	101	;'e'
  3620  00F1B1  72                 	db	114	;'r'
  3621  00F1B2  20                 	db	32
  3622  00F1B3  77                 	db	119	;'w'
  3623  00F1B4  69                 	db	105	;'i'
  3624  00F1B5  74                 	db	116	;'t'
  3625  00F1B6  68                 	db	104	;'h'
  3626  00F1B7  20                 	db	32
  3627  00F1B8  44                 	db	68	;'D'
  3628  00F1B9  69                 	db	105	;'i'
  3629  00F1BA  67                 	db	103	;'g'
  3630  00F1BB  69                 	db	105	;'i'
  3631  00F1BC  74                 	db	116	;'t'
  3632  00F1BD  61                 	db	97	;'a'
  3633  00F1BE  6C                 	db	108	;'l'
  3634  00F1BF  20                 	db	32
  3635  00F1C0  4D                 	db	77	;'M'
  3636  00F1C1  6F                 	db	111	;'o'
  3637  00F1C2  6E                 	db	110	;'n'
  3638  00F1C3  69                 	db	105	;'i'
  3639  00F1C4  74                 	db	116	;'t'
  3640  00F1C5  6F                 	db	111	;'o'
  3641  00F1C6  72                 	db	114	;'r'
  3642  00F1C7  69                 	db	105	;'i'
  3643  00F1C8  6E                 	db	110	;'n'
  3644  00F1C9  67                 	db	103	;'g'
  3645  00F1CA  0A                 	db	10
  3646  00F1CB  0D                 	db	13
  3647  00F1CC  42                 	db	66	;'B'
  3648  00F1CD  6F                 	db	111	;'o'
  3649  00F1CE  6F                 	db	111	;'o'
  3650  00F1CF  74                 	db	116	;'t'
  3651  00F1D0  20                 	db	32
  3652  00F1D1  43                 	db	67	;'C'
  3653  00F1D2  6F                 	db	111	;'o'
  3654  00F1D3  6D                 	db	109	;'m'
  3655  00F1D4  70                 	db	112	;'p'
  3656  00F1D5  6C                 	db	108	;'l'
  3657  00F1D6  65                 	db	101	;'e'
  3658  00F1D7  74                 	db	116	;'t'
  3659  00F1D8  65                 	db	101	;'e'
  3660  00F1D9  0A                 	db	10
  3661  00F1DA  0D                 	db	13
  3662  00F1DB  00                 	db	0
  3663  00F1DC                     STR_203:
  3664  00F1DC  20                 	db	32
  3665  00F1DD  20                 	db	32
  3666  00F1DE  20                 	db	32
  3667  00F1DF  20                 	db	32
  3668  00F1E0  44                 	db	68	;'D'
  3669  00F1E1  65                 	db	101	;'e'
  3670  00F1E2  76                 	db	118	;'v'
  3671  00F1E3  69                 	db	105	;'i'
  3672  00F1E4  63                 	db	99	;'c'
  3673  00F1E5  65                 	db	101	;'e'
  3674  00F1E6  20                 	db	32
  3675  00F1E7  49                 	db	73	;'I'
  3676  00F1E8  44                 	db	68	;'D'
  3677  00F1E9  20                 	db	32
  3678  00F1EA  72                 	db	114	;'r'
  3679  00F1EB  65                 	db	101	;'e'
  3680  00F1EC  74                 	db	116	;'t'
  3681  00F1ED  72                 	db	114	;'r'
  3682  00F1EE  69                 	db	105	;'i'
  3683  00F1EF  65                 	db	101	;'e'
  3684  00F1F0  76                 	db	118	;'v'
  3685  00F1F1  65                 	db	101	;'e'
  3686  00F1F2  64                 	db	100	;'d'
  3687  00F1F3  20                 	db	32
  3688  00F1F4  66                 	db	102	;'f'
  3689  00F1F5  72                 	db	114	;'r'
  3690  00F1F6  6F                 	db	111	;'o'
  3691  00F1F7  6D                 	db	109	;'m'
  3692  00F1F8  20                 	db	32
  3693  00F1F9  66                 	db	102	;'f'
  3694  00F1FA  6C                 	db	108	;'l'
  3695  00F1FB  61                 	db	97	;'a'
  3696  00F1FC  73                 	db	115	;'s'
  3697  00F1FD  68                 	db	104	;'h'
  3698  00F1FE  3A                 	db	58	;':'
  3699  00F1FF  20                 	db	32
  3700  00F200  25                 	db	37
  3701  00F201  73                 	db	115	;'s'
  3702  00F202  20                 	db	32
  3703  00F203  28                 	db	40
  3704  00F204  30                 	db	48	;'0'
  3705  00F205  78                 	db	120	;'x'
  3706  00F206  25                 	db	37
  3707  00F207  30                 	db	48	;'0'
  3708  00F208  34                 	db	52	;'4'
  3709  00F209  58                 	db	88	;'X'
  3710  00F20A  29                 	db	41
  3711  00F20B  0A                 	db	10
  3712  00F20C  0D                 	db	13
  3713  00F20D  00                 	db	0
  3714  00F20E                     STR_243:
  3715  00F20E  20                 	db	32
  3716  00F20F  20                 	db	32
  3717  00F210  20                 	db	32
  3718  00F211  20                 	db	32
  3719  00F212  54                 	db	84	;'T'
  3720  00F213  68                 	db	104	;'h'
  3721  00F214  65                 	db	101	;'e'
  3722  00F215  20                 	db	32
  3723  00F216  66                 	db	102	;'f'
  3724  00F217  6F                 	db	111	;'o'
  3725  00F218  6C                 	db	108	;'l'
  3726  00F219  6C                 	db	108	;'l'
  3727  00F21A  6F                 	db	111	;'o'
  3728  00F21B  77                 	db	119	;'w'
  3729  00F21C  69                 	db	105	;'i'
  3730  00F21D  6E                 	db	110	;'n'
  3731  00F21E  67                 	db	103	;'g'
  3732  00F21F  20                 	db	32
  3733  00F220  63                 	db	99	;'c'
  3734  00F221  68                 	db	104	;'h'
  3735  00F222  61                 	db	97	;'a'
  3736  00F223  6E                 	db	110	;'n'
  3737  00F224  6E                 	db	110	;'n'
  3738  00F225  65                 	db	101	;'e'
  3739  00F226  6C                 	db	108	;'l'
  3740  00F227  73                 	db	115	;'s'
  3741  00F228  20                 	db	32
  3742  00F229  63                 	db	99	;'c'
  3743  00F22A  61                 	db	97	;'a'
  3744  00F22B  75                 	db	117	;'u'
  3745  00F22C  73                 	db	115	;'s'
  3746  00F22D  65                 	db	101	;'e'
  3747  00F22E  64                 	db	100	;'d'
  3748  00F22F  20                 	db	32
  3749  00F230  61                 	db	97	;'a'
  3750  00F231  6E                 	db	110	;'n'
  3751  00F232  20                 	db	32
  3752  00F233  41                 	db	65	;'A'
  3753  00F234  44                 	db	68	;'D'
  3754  00F235  43                 	db	67	;'C'
  3755  00F236  20                 	db	32
  3756  00F237  65                 	db	101	;'e'
  3757  00F238  72                 	db	114	;'r'
  3758  00F239  72                 	db	114	;'r'
  3759  00F23A  6F                 	db	111	;'o'
  3760  00F23B  72                 	db	114	;'r'
  3761  00F23C  3A                 	db	58	;':'
  3762  00F23D  0A                 	db	10
  3763  00F23E  0D                 	db	13
  3764  00F23F  00                 	db	0
  3765  00F240                     STR_262:
  3766  00F240  20                 	db	32
  3767  00F241  20                 	db	32
  3768  00F242  20                 	db	32
  3769  00F243  20                 	db	32
  3770  00F244  53                 	db	83	;'S'
  3771  00F245  79                 	db	121	;'y'
  3772  00F246  73                 	db	115	;'s'
  3773  00F247  74                 	db	116	;'t'
  3774  00F248  65                 	db	101	;'e'
  3775  00F249  6D                 	db	109	;'m'
  3776  00F24A  20                 	db	32
  3777  00F24B  68                 	db	104	;'h'
  3778  00F24C  61                 	db	97	;'a'
  3779  00F24D  73                 	db	115	;'s'
  3780  00F24E  20                 	db	32
  3781  00F24F  62                 	db	98	;'b'
  3782  00F250  65                 	db	101	;'e'
  3783  00F251  65                 	db	101	;'e'
  3784  00F252  6E                 	db	110	;'n'
  3785  00F253  20                 	db	32
  3786  00F254  63                 	db	99	;'c'
  3787  00F255  68                 	db	104	;'h'
  3788  00F256  61                 	db	97	;'a'
  3789  00F257  72                 	db	114	;'r'
  3790  00F258  67                 	db	103	;'g'
  3791  00F259  69                 	db	105	;'i'
  3792  00F25A  6E                 	db	110	;'n'
  3793  00F25B  67                 	db	103	;'g'
  3794  00F25C  20                 	db	32
  3795  00F25D  61                 	db	97	;'a'
  3796  00F25E  20                 	db	32
  3797  00F25F  70                 	db	112	;'p'
  3798  00F260  68                 	db	104	;'h'
  3799  00F261  6F                 	db	111	;'o'
  3800  00F262  6E                 	db	110	;'n'
  3801  00F263  65                 	db	101	;'e'
  3802  00F264  20                 	db	32
  3803  00F265  66                 	db	102	;'f'
  3804  00F266  6F                 	db	111	;'o'
  3805  00F267  72                 	db	114	;'r'
  3806  00F268  20                 	db	32
  3807  00F269  25                 	db	37
  3808  00F26A  73                 	db	115	;'s'
  3809  00F26B  0A                 	db	10
  3810  00F26C  0D                 	db	13
  3811  00F26D  0A                 	db	10
  3812  00F26E  0D                 	db	13
  3813  00F26F  00                 	db	0
  3814  00F270                     STR_272:
  3815  00F270  20                 	db	32
  3816  00F271  20                 	db	32
  3817  00F272  20                 	db	32
  3818  00F273  20                 	db	32
  3819  00F274  53                 	db	83	;'S'
  3820  00F275  79                 	db	121	;'y'
  3821  00F276  73                 	db	115	;'s'
  3822  00F277  74                 	db	116	;'t'
  3823  00F278  65                 	db	101	;'e'
  3824  00F279  6D                 	db	109	;'m'
  3825  00F27A  20                 	db	32
  3826  00F27B  45                 	db	69	;'E'
  3827  00F27C  66                 	db	102	;'f'
  3828  00F27D  66                 	db	102	;'f'
  3829  00F27E  69                 	db	105	;'i'
  3830  00F27F  63                 	db	99	;'c'
  3831  00F280  69                 	db	105	;'i'
  3832  00F281  65                 	db	101	;'e'
  3833  00F282  6E                 	db	110	;'n'
  3834  00F283  63                 	db	99	;'c'
  3835  00F284  79                 	db	121	;'y'
  3836  00F285  20                 	db	32
  3837  00F286  63                 	db	99	;'c'
  3838  00F287  61                 	db	97	;'a'
  3839  00F288  6C                 	db	108	;'l'
  3840  00F289  63                 	db	99	;'c'
  3841  00F28A  75                 	db	117	;'u'
  3842  00F28B  6C                 	db	108	;'l'
  3843  00F28C  61                 	db	97	;'a'
  3844  00F28D  74                 	db	116	;'t'
  3845  00F28E  65                 	db	101	;'e'
  3846  00F28F  64                 	db	100	;'d'
  3847  00F290  20                 	db	32
  3848  00F291  61                 	db	97	;'a'
  3849  00F292  73                 	db	115	;'s'
  3850  00F293  20                 	db	32
  3851  00F294  25                 	db	37
  3852  00F295  2E                 	db	46
  3853  00F296  33                 	db	51	;'3'
  3854  00F297  66                 	db	102	;'f'
  3855  00F298  25                 	db	37
  3856  00F299  25                 	db	37
  3857  00F29A  0A                 	db	10
  3858  00F29B  0D                 	db	13
  3859  00F29C  0A                 	db	10
  3860  00F29D  0D                 	db	13
  3861  00F29E  00                 	db	0
  3862  00F29F                     STR_224:
  3863  00F29F  53                 	db	83	;'S'
  3864  00F2A0  79                 	db	121	;'y'
  3865  00F2A1  73                 	db	115	;'s'
  3866  00F2A2  74                 	db	116	;'t'
  3867  00F2A3  65                 	db	101	;'e'
  3868  00F2A4  6D                 	db	109	;'m'
  3869  00F2A5  20                 	db	32
  3870  00F2A6  4D                 	db	77	;'M'
  3871  00F2A7  65                 	db	101	;'e'
  3872  00F2A8  61                 	db	97	;'a'
  3873  00F2A9  73                 	db	115	;'s'
  3874  00F2AA  75                 	db	117	;'u'
  3875  00F2AB  72                 	db	114	;'r'
  3876  00F2AC  65                 	db	101	;'e'
  3877  00F2AD  6D                 	db	109	;'m'
  3878  00F2AE  65                 	db	101	;'e'
  3879  00F2AF  6E                 	db	110	;'n'
  3880  00F2B0  74                 	db	116	;'t'
  3881  00F2B1  73                 	db	115	;'s'
  3882  00F2B2  20                 	db	32
  3883  00F2B3  61                 	db	97	;'a'
  3884  00F2B4  74                 	db	116	;'t'
  3885  00F2B5  20                 	db	32
  3886  00F2B6  74                 	db	116	;'t'
  3887  00F2B7  69                 	db	105	;'i'
  3888  00F2B8  6D                 	db	109	;'m'
  3889  00F2B9  65                 	db	101	;'e'
  3890  00F2BA  20                 	db	32
  3891  00F2BB  6F                 	db	111	;'o'
  3892  00F2BC  66                 	db	102	;'f'
  3893  00F2BD  20                 	db	32
  3894  00F2BE  63                 	db	99	;'c'
  3895  00F2BF  6F                 	db	111	;'o'
  3896  00F2C0  6D                 	db	109	;'m'
  3897  00F2C1  6D                 	db	109	;'m'
  3898  00F2C2  61                 	db	97	;'a'
  3899  00F2C3  6E                 	db	110	;'n'
  3900  00F2C4  64                 	db	100	;'d'
  3901  00F2C5  20                 	db	32
  3902  00F2C6  63                 	db	99	;'c'
  3903  00F2C7  61                 	db	97	;'a'
  3904  00F2C8  6C                 	db	108	;'l'
  3905  00F2C9  6C                 	db	108	;'l'
  3906  00F2CA  3A                 	db	58	;':'
  3907  00F2CB  0A                 	db	10
  3908  00F2CC  0D                 	db	13
  3909  00F2CD  00                 	db	0
  3910  00F2CE                     STR_10:
  3911  00F2CE  0A                 	db	10
  3912  00F2CF  0D                 	db	13
  3913  00F2D0  43                 	db	67	;'C'
  3914  00F2D1  61                 	db	97	;'a'
  3915  00F2D2  6C                 	db	108	;'l'
  3916  00F2D3  6C                 	db	108	;'l'
  3917  00F2D4  20                 	db	32
  3918  00F2D5  27                 	db	39
  3919  00F2D6  48                 	db	72	;'H'
  3920  00F2D7  65                 	db	101	;'e'
  3921  00F2D8  6C                 	db	108	;'l'
  3922  00F2D9  70                 	db	112	;'p'
  3923  00F2DA  27                 	db	39
  3924  00F2DB  20                 	db	32
  3925  00F2DC  66                 	db	102	;'f'
  3926  00F2DD  6F                 	db	111	;'o'
  3927  00F2DE  72                 	db	114	;'r'
  3928  00F2DF  20                 	db	32
  3929  00F2E0  6C                 	db	108	;'l'
  3930  00F2E1  69                 	db	105	;'i'
  3931  00F2E2  73                 	db	115	;'s'
  3932  00F2E3  74                 	db	116	;'t'
  3933  00F2E4  20                 	db	32
  3934  00F2E5  6F                 	db	111	;'o'
  3935  00F2E6  66                 	db	102	;'f'
  3936  00F2E7  20                 	db	32
  3937  00F2E8  73                 	db	115	;'s'
  3938  00F2E9  75                 	db	117	;'u'
  3939  00F2EA  70                 	db	112	;'p'
  3940  00F2EB  70                 	db	112	;'p'
  3941  00F2EC  6F                 	db	111	;'o'
  3942  00F2ED  72                 	db	114	;'r'
  3943  00F2EE  74                 	db	116	;'t'
  3944  00F2EF  65                 	db	101	;'e'
  3945  00F2F0  64                 	db	100	;'d'
  3946  00F2F1  20                 	db	32
  3947  00F2F2  63                 	db	99	;'c'
  3948  00F2F3  6F                 	db	111	;'o'
  3949  00F2F4  6D                 	db	109	;'m'
  3950  00F2F5  6D                 	db	109	;'m'
  3951  00F2F6  61                 	db	97	;'a'
  3952  00F2F7  6E                 	db	110	;'n'
  3953  00F2F8  64                 	db	100	;'d'
  3954  00F2F9  73                 	db	115	;'s'
  3955  00F2FA  0A                 	db	10
  3956  00F2FB  0D                 	db	13
  3957  00F2FC  00                 	db	0
  3958  00F2FD                     STR_248:
  3959  00F2FD  20                 	db	32
  3960  00F2FE  20                 	db	32
  3961  00F2FF  20                 	db	32
  3962  00F300  20                 	db	32
  3963  00F301  54                 	db	84	;'T'
  3964  00F302  68                 	db	104	;'h'
  3965  00F303  65                 	db	101	;'e'
  3966  00F304  20                 	db	32
  3967  00F305  66                 	db	102	;'f'
  3968  00F306  6F                 	db	111	;'o'
  3969  00F307  6C                 	db	108	;'l'
  3970  00F308  6C                 	db	108	;'l'
  3971  00F309  6F                 	db	111	;'o'
  3972  00F30A  77                 	db	119	;'w'
  3973  00F30B  69                 	db	105	;'i'
  3974  00F30C  6E                 	db	110	;'n'
  3975  00F30D  67                 	db	103	;'g'
  3976  00F30E  20                 	db	32
  3977  00F30F  49                 	db	73	;'I'
  3978  00F310  32                 	db	50	;'2'
  3979  00F311  43                 	db	67	;'C'
  3980  00F312  20                 	db	32
  3981  00F313  45                 	db	69	;'E'
  3982  00F314  72                 	db	114	;'r'
  3983  00F315  72                 	db	114	;'r'
  3984  00F316  6F                 	db	111	;'o'
  3985  00F317  72                 	db	114	;'r'
  3986  00F318  73                 	db	115	;'s'
  3987  00F319  20                 	db	32
  3988  00F31A  77                 	db	119	;'w'
  3989  00F31B  65                 	db	101	;'e'
  3990  00F31C  72                 	db	114	;'r'
  3991  00F31D  65                 	db	101	;'e'
  3992  00F31E  20                 	db	32
  3993  00F31F  64                 	db	100	;'d'
  3994  00F320  65                 	db	101	;'e'
  3995  00F321  74                 	db	116	;'t'
  3996  00F322  65                 	db	101	;'e'
  3997  00F323  63                 	db	99	;'c'
  3998  00F324  74                 	db	116	;'t'
  3999  00F325  65                 	db	101	;'e'
  4000  00F326  64                 	db	100	;'d'
  4001  00F327  3A                 	db	58	;':'
  4002  00F328  0A                 	db	10
  4003  00F329  0D                 	db	13
  4004  00F32A  00                 	db	0
  4005  00F32B                     STR_8:
  4006  00F32B  45                 	db	69	;'E'
  4007  00F32C  72                 	db	114	;'r'
  4008  00F32D  72                 	db	114	;'r'
  4009  00F32E  6F                 	db	111	;'o'
  4010  00F32F  72                 	db	114	;'r'
  4011  00F330  73                 	db	115	;'s'
  4012  00F331  20                 	db	32
  4013  00F332  61                 	db	97	;'a'
  4014  00F333  6E                 	db	110	;'n'
  4015  00F334  64                 	db	100	;'d'
  4016  00F335  20                 	db	32
  4017  00F336  6E                 	db	110	;'n'
  4018  00F337  65                 	db	101	;'e'
  4019  00F338  67                 	db	103	;'g'
  4020  00F339  61                 	db	97	;'a'
  4021  00F33A  74                 	db	116	;'t'
  4022  00F33B  69                 	db	105	;'i'
  4023  00F33C  76                 	db	118	;'v'
  4024  00F33D  65                 	db	101	;'e'
  4025  00F33E  20                 	db	32
  4026  00F33F  72                 	db	114	;'r'
  4027  00F340  65                 	db	101	;'e'
  4028  00F341  73                 	db	115	;'s'
  4029  00F342  70                 	db	112	;'p'
  4030  00F343  6F                 	db	111	;'o'
  4031  00F344  6E                 	db	110	;'n'
  4032  00F345  73                 	db	115	;'s'
  4033  00F346  65                 	db	101	;'e'
  4034  00F347  73                 	db	115	;'s'
  4035  00F348  20                 	db	32
  4036  00F349  61                 	db	97	;'a'
  4037  00F34A  70                 	db	112	;'p'
  4038  00F34B  70                 	db	112	;'p'
  4039  00F34C  65                 	db	101	;'e'
  4040  00F34D  61                 	db	97	;'a'
  4041  00F34E  72                 	db	114	;'r'
  4042  00F34F  20                 	db	32
  4043  00F350  69                 	db	105	;'i'
  4044  00F351  6E                 	db	110	;'n'
  4045  00F352  20                 	db	32
  4046  00F353  72                 	db	114	;'r'
  4047  00F354  65                 	db	101	;'e'
  4048  00F355  64                 	db	100	;'d'
  4049  00F356  0A                 	db	10
  4050  00F357  0D                 	db	13
  4051  00F358  00                 	db	0
  4052  00F359                     STR_265:
  4053  00F359  20                 	db	32
  4054  00F35A  20                 	db	32
  4055  00F35B  20                 	db	32
  4056  00F35C  20                 	db	32
  4057  00F35D  20                 	db	32
  4058  00F35E  20                 	db	32
  4059  00F35F  20                 	db	32
  4060  00F360  20                 	db	32
  4061  00F361  2B                 	db	43
  4062  00F362  35                 	db	53	;'5'
  4063  00F363  56                 	db	86	;'V'
  4064  00F364  20                 	db	32
  4065  00F365  72                 	db	114	;'r'
  4066  00F366  61                 	db	97	;'a'
  4067  00F367  69                 	db	105	;'i'
  4068  00F368  6C                 	db	108	;'l'
  4069  00F369  20                 	db	32
  4070  00F36A  6D                 	db	109	;'m'
  4071  00F36B  65                 	db	101	;'e'
  4072  00F36C  61                 	db	97	;'a'
  4073  00F36D  73                 	db	115	;'s'
  4074  00F36E  75                 	db	117	;'u'
  4075  00F36F  72                 	db	114	;'r'
  4076  00F370  65                 	db	101	;'e'
  4077  00F371  64                 	db	100	;'d'
  4078  00F372  20                 	db	32
  4079  00F373  61                 	db	97	;'a'
  4080  00F374  73                 	db	115	;'s'
  4081  00F375  20                 	db	32
  4082  00F376  25                 	db	37
  4083  00F377  2B                 	db	43
  4084  00F378  2E                 	db	46
  4085  00F379  33                 	db	51	;'3'
  4086  00F37A  66                 	db	102	;'f'
  4087  00F37B  20                 	db	32
  4088  00F37C  56                 	db	86	;'V'
  4089  00F37D  6F                 	db	111	;'o'
  4090  00F37E  6C                 	db	108	;'l'
  4091  00F37F  74                 	db	116	;'t'
  4092  00F380  73                 	db	115	;'s'
  4093  00F381  0A                 	db	10
  4094  00F382  0D                 	db	13
  4095  00F383  0A                 	db	10
  4096  00F384  0D                 	db	13
  4097  00F385  00                 	db	0
  4098  00F386                     STR_201:
  4099  00F386  44                 	db	68	;'D'
  4100  00F387  69                 	db	105	;'i'
  4101  00F388  67                 	db	103	;'g'
  4102  00F389  69                 	db	105	;'i'
  4103  00F38A  74                 	db	116	;'t'
  4104  00F38B  61                 	db	97	;'a'
  4105  00F38C  6C                 	db	108	;'l'
  4106  00F38D  20                 	db	32
  4107  00F38E  4D                 	db	77	;'M'
  4108  00F38F  6F                 	db	111	;'o'
  4109  00F390  6E                 	db	110	;'n'
  4110  00F391  69                 	db	105	;'i'
  4111  00F392  74                 	db	116	;'t'
  4112  00F393  6F                 	db	111	;'o'
  4113  00F394  72                 	db	114	;'r'
  4114  00F395  69                 	db	105	;'i'
  4115  00F396  6E                 	db	110	;'n'
  4116  00F397  67                 	db	103	;'g'
  4117  00F398  20                 	db	32
  4118  00F399  4D                 	db	77	;'M'
  4119  00F39A  69                 	db	105	;'i'
  4120  00F39B  63                 	db	99	;'c'
  4121  00F39C  72                 	db	114	;'r'
  4122  00F39D  6F                 	db	111	;'o'
  4123  00F39E  63                 	db	99	;'c'
  4124  00F39F  6F                 	db	111	;'o'
  4125  00F3A0  6E                 	db	110	;'n'
  4126  00F3A1  74                 	db	116	;'t'
  4127  00F3A2  72                 	db	114	;'r'
  4128  00F3A3  6F                 	db	111	;'o'
  4129  00F3A4  6C                 	db	108	;'l'
  4130  00F3A5  6C                 	db	108	;'l'
  4131  00F3A6  65                 	db	101	;'e'
  4132  00F3A7  72                 	db	114	;'r'
  4133  00F3A8  20                 	db	32
  4134  00F3A9  53                 	db	83	;'S'
  4135  00F3AA  74                 	db	116	;'t'
  4136  00F3AB  61                 	db	97	;'a'
  4137  00F3AC  74                 	db	116	;'t'
  4138  00F3AD  75                 	db	117	;'u'
  4139  00F3AE  73                 	db	115	;'s'
  4140  00F3AF  3A                 	db	58	;':'
  4141  00F3B0  0A                 	db	10
  4142  00F3B1  0D                 	db	13
  4143  00F3B2  00                 	db	0
  4144  00F3B3                     STR_264:
  4145  00F3B3  20                 	db	32
  4146  00F3B4  20                 	db	32
  4147  00F3B5  20                 	db	32
  4148  00F3B6  20                 	db	32
  4149  00F3B7  20                 	db	32
  4150  00F3B8  20                 	db	32
  4151  00F3B9  20                 	db	32
  4152  00F3BA  20                 	db	32
  4153  00F3BB  2B                 	db	43
  4154  00F3BC  31                 	db	49	;'1'
  4155  00F3BD  32                 	db	50	;'2'
  4156  00F3BE  56                 	db	86	;'V'
  4157  00F3BF  20                 	db	32
  4158  00F3C0  72                 	db	114	;'r'
  4159  00F3C1  61                 	db	97	;'a'
  4160  00F3C2  69                 	db	105	;'i'
  4161  00F3C3  6C                 	db	108	;'l'
  4162  00F3C4  20                 	db	32
  4163  00F3C5  6D                 	db	109	;'m'
  4164  00F3C6  65                 	db	101	;'e'
  4165  00F3C7  61                 	db	97	;'a'
  4166  00F3C8  73                 	db	115	;'s'
  4167  00F3C9  75                 	db	117	;'u'
  4168  00F3CA  72                 	db	114	;'r'
  4169  00F3CB  65                 	db	101	;'e'
  4170  00F3CC  64                 	db	100	;'d'
  4171  00F3CD  20                 	db	32
  4172  00F3CE  61                 	db	97	;'a'
  4173  00F3CF  73                 	db	115	;'s'
  4174  00F3D0  20                 	db	32
  4175  00F3D1  25                 	db	37
  4176  00F3D2  2B                 	db	43
  4177  00F3D3  2E                 	db	46
  4178  00F3D4  33                 	db	51	;'3'
  4179  00F3D5  66                 	db	102	;'f'
  4180  00F3D6  20                 	db	32
  4181  00F3D7  56                 	db	86	;'V'
  4182  00F3D8  6F                 	db	111	;'o'
  4183  00F3D9  6C                 	db	108	;'l'
  4184  00F3DA  74                 	db	116	;'t'
  4185  00F3DB  73                 	db	115	;'s'
  4186  00F3DC  0A                 	db	10
  4187  00F3DD  0D                 	db	13
  4188  00F3DE  00                 	db	0
  4189  00F3DF                     STR_3:
  4190  00F3DF  43                 	db	67	;'C'
  4191  00F3E0  61                 	db	97	;'a'
  4192  00F3E1  75                 	db	117	;'u'
  4193  00F3E2  73                 	db	115	;'s'
  4194  00F3E3  65                 	db	101	;'e'
  4195  00F3E4  20                 	db	32
  4196  00F3E5  6F                 	db	111	;'o'
  4197  00F3E6  66                 	db	102	;'f'
  4198  00F3E7  20                 	db	32
  4199  00F3E8  6D                 	db	109	;'m'
  4200  00F3E9  6F                 	db	111	;'o'
  4201  00F3EA  73                 	db	115	;'s'
  4202  00F3EB  74                 	db	116	;'t'
  4203  00F3EC  20                 	db	32
  4204  00F3ED  72                 	db	114	;'r'
  4205  00F3EE  65                 	db	101	;'e'
  4206  00F3EF  63                 	db	99	;'c'
  4207  00F3F0  65                 	db	101	;'e'
  4208  00F3F1  6E                 	db	110	;'n'
  4209  00F3F2  74                 	db	116	;'t'
  4210  00F3F3  20                 	db	32
  4211  00F3F4  64                 	db	100	;'d'
  4212  00F3F5  65                 	db	101	;'e'
  4213  00F3F6  76                 	db	118	;'v'
  4214  00F3F7  69                 	db	105	;'i'
  4215  00F3F8  63                 	db	99	;'c'
  4216  00F3F9  65                 	db	101	;'e'
  4217  00F3FA  20                 	db	32
  4218  00F3FB  72                 	db	114	;'r'
  4219  00F3FC  65                 	db	101	;'e'
  4220  00F3FD  73                 	db	115	;'s'
  4221  00F3FE  65                 	db	101	;'e'
  4222  00F3FF  74                 	db	116	;'t'
  4223  00F400  20                 	db	32
  4224  00F401  77                 	db	119	;'w'
  4225  00F402  61                 	db	97	;'a'
  4226  00F403  73                 	db	115	;'s'
  4227  00F404  3A                 	db	58	;':'
  4228  00F405  20                 	db	32
  4229  00F406  25                 	db	37
  4230  00F407  73                 	db	115	;'s'
  4231  00F408  0A                 	db	10
  4232  00F409  0D                 	db	13
  4233  00F40A  00                 	db	0
  4234  00F40B                     STR_276:
  4235  00F40B  20                 	db	32
  4236  00F40C  20                 	db	32
  4237  00F40D  20                 	db	32
  4238  00F40E  20                 	db	32
  4239  00F40F  20                 	db	32
  4240  00F410  20                 	db	32
  4241  00F411  20                 	db	32
  4242  00F412  20                 	db	32
  4243  00F413  50                 	db	80	;'P'
  4244  00F414  4F                 	db	79	;'O'
  4245  00F415  53                 	db	83	;'S'
  4246  00F416  35                 	db	53	;'5'
  4247  00F417  20                 	db	32
  4248  00F418  43                 	db	67	;'C'
  4249  00F419  6F                 	db	111	;'o'
  4250  00F41A  6E                 	db	110	;'n'
  4251  00F41B  76                 	db	118	;'v'
  4252  00F41C  65                 	db	101	;'e'
  4253  00F41D  72                 	db	114	;'r'
  4254  00F41E  74                 	db	116	;'t'
  4255  00F41F  65                 	db	101	;'e'
  4256  00F420  72                 	db	114	;'r'
  4257  00F421  20                 	db	32
  4258  00F422  69                 	db	105	;'i'
  4259  00F423  73                 	db	115	;'s'
  4260  00F424  20                 	db	32
  4261  00F425  69                 	db	105	;'i'
  4262  00F426  6E                 	db	110	;'n'
  4263  00F427  20                 	db	32
  4264  00F428  42                 	db	66	;'B'
  4265  00F429  75                 	db	117	;'u'
  4266  00F42A  72                 	db	114	;'r'
  4267  00F42B  73                 	db	115	;'s'
  4268  00F42C  74                 	db	116	;'t'
  4269  00F42D  20                 	db	32
  4270  00F42E  4D                 	db	77	;'M'
  4271  00F42F  6F                 	db	111	;'o'
  4272  00F430  64                 	db	100	;'d'
  4273  00F431  65                 	db	101	;'e'
  4274  00F432  0A                 	db	10
  4275  00F433  0D                 	db	13
  4276  00F434  00                 	db	0
  4277  00F435                     STR_287:
  4278  00F435  20                 	db	32
  4279  00F436  20                 	db	32
  4280  00F437  20                 	db	32
  4281  00F438  20                 	db	32
  4282  00F439  20                 	db	32
  4283  00F43A  20                 	db	32
  4284  00F43B  20                 	db	32
  4285  00F43C  20                 	db	32
  4286  00F43D  41                 	db	65	;'A'
  4287  00F43E  56                 	db	86	;'V'
  4288  00F43F  53                 	db	83	;'S'
  4289  00F440  53                 	db	83	;'S'
  4290  00F441  20                 	db	32
  4291  00F442  6D                 	db	109	;'m'
  4292  00F443  65                 	db	101	;'e'
  4293  00F444  61                 	db	97	;'a'
  4294  00F445  73                 	db	115	;'s'
  4295  00F446  75                 	db	117	;'u'
  4296  00F447  72                 	db	114	;'r'
  4297  00F448  65                 	db	101	;'e'
  4298  00F449  64                 	db	100	;'d'
  4299  00F44A  20                 	db	32
  4300  00F44B  61                 	db	97	;'a'
  4301  00F44C  73                 	db	115	;'s'
  4302  00F44D  20                 	db	32
  4303  00F44E  25                 	db	37
  4304  00F44F  2B                 	db	43
  4305  00F450  2E                 	db	46
  4306  00F451  33                 	db	51	;'3'
  4307  00F452  66                 	db	102	;'f'
  4308  00F453  20                 	db	32
  4309  00F454  56                 	db	86	;'V'
  4310  00F455  6F                 	db	111	;'o'
  4311  00F456  6C                 	db	108	;'l'
  4312  00F457  74                 	db	116	;'t'
  4313  00F458  73                 	db	115	;'s'
  4314  00F459  0A                 	db	10
  4315  00F45A  0D                 	db	13
  4316  00F45B  0A                 	db	10
  4317  00F45C  0D                 	db	13
  4318  00F45D  00                 	db	0
  4319  00F45E                     STR_28:
  4320  00F45E  57                 	db	87	;'W'
  4321  00F45F  69                 	db	105	;'i'
  4322  00F460  6E                 	db	110	;'n'
  4323  00F461  64                 	db	100	;'d'
  4324  00F462  6F                 	db	111	;'o'
  4325  00F463  77                 	db	119	;'w'
  4326  00F464  65                 	db	101	;'e'
  4327  00F465  64                 	db	100	;'d'
  4328  00F466  20                 	db	32
  4329  00F467  57                 	db	87	;'W'
  4330  00F468  61                 	db	97	;'a'
  4331  00F469  74                 	db	116	;'t'
  4332  00F46A  63                 	db	99	;'c'
  4333  00F46B  68                 	db	104	;'h'
  4334  00F46C  20                 	db	32
  4335  00F46D  44                 	db	68	;'D'
  4336  00F46E  6F                 	db	111	;'o'
  4337  00F46F  67                 	db	103	;'g'
  4338  00F470  20                 	db	32
  4339  00F471  54                 	db	84	;'T'
  4340  00F472  69                 	db	105	;'i'
  4341  00F473  6D                 	db	109	;'m'
  4342  00F474  65                 	db	101	;'e'
  4343  00F475  72                 	db	114	;'r'
  4344  00F476  20                 	db	32
  4345  00F477  56                 	db	86	;'V'
  4346  00F478  69                 	db	105	;'i'
  4347  00F479  6F                 	db	111	;'o'
  4348  00F47A  6C                 	db	108	;'l'
  4349  00F47B  61                 	db	97	;'a'
  4350  00F47C  74                 	db	116	;'t'
  4351  00F47D  69                 	db	105	;'i'
  4352  00F47E  6F                 	db	111	;'o'
  4353  00F47F  6E                 	db	110	;'n'
  4354  00F480  20                 	db	32
  4355  00F481  52                 	db	82	;'R'
  4356  00F482  65                 	db	101	;'e'
  4357  00F483  73                 	db	115	;'s'
  4358  00F484  65                 	db	101	;'e'
  4359  00F485  74                 	db	116	;'t'
  4360  00F486  00                 	db	0
  4361  00F487                     STR_278:
  4362  00F487  20                 	db	32
  4363  00F488  20                 	db	32
  4364  00F489  20                 	db	32
  4365  00F48A  20                 	db	32
  4366  00F48B  20                 	db	32
  4367  00F48C  20                 	db	32
  4368  00F48D  20                 	db	32
  4369  00F48E  20                 	db	32
  4370  00F48F  51                 	db	81	;'Q'
  4371  00F490  49                 	db	73	;'I'
  4372  00F491  20                 	db	32
  4373  00F492  43                 	db	67	;'C'
  4374  00F493  6F                 	db	111	;'o'
  4375  00F494  6E                 	db	110	;'n'
  4376  00F495  76                 	db	118	;'v'
  4377  00F496  65                 	db	101	;'e'
  4378  00F497  72                 	db	114	;'r'
  4379  00F498  74                 	db	116	;'t'
  4380  00F499  65                 	db	101	;'e'
  4381  00F49A  72                 	db	114	;'r'
  4382  00F49B  20                 	db	32
  4383  00F49C  69                 	db	105	;'i'
  4384  00F49D  73                 	db	115	;'s'
  4385  00F49E  20                 	db	32
  4386  00F49F  69                 	db	105	;'i'
  4387  00F4A0  6E                 	db	110	;'n'
  4388  00F4A1  20                 	db	32
  4389  00F4A2  42                 	db	66	;'B'
  4390  00F4A3  75                 	db	117	;'u'
  4391  00F4A4  72                 	db	114	;'r'
  4392  00F4A5  73                 	db	115	;'s'
  4393  00F4A6  74                 	db	116	;'t'
  4394  00F4A7  20                 	db	32
  4395  00F4A8  4D                 	db	77	;'M'
  4396  00F4A9  6F                 	db	111	;'o'
  4397  00F4AA  64                 	db	100	;'d'
  4398  00F4AB  65                 	db	101	;'e'
  4399  00F4AC  0A                 	db	10
  4400  00F4AD  0D                 	db	13
  4401  00F4AE  00                 	db	0
  4402  00F4AF                     STR_250:
  4403  00F4AF  20                 	db	32
  4404  00F4B0  20                 	db	32
  4405  00F4B1  20                 	db	32
  4406  00F4B2  20                 	db	32
  4407  00F4B3  20                 	db	32
  4408  00F4B4  20                 	db	32
  4409  00F4B5  20                 	db	32
  4410  00F4B6  20                 	db	32
  4411  00F4B7  49                 	db	73	;'I'
  4412  00F4B8  32                 	db	50	;'2'
  4413  00F4B9  43                 	db	67	;'C'
  4414  00F4BA  20                 	db	32
  4415  00F4BB  41                 	db	65	;'A'
  4416  00F4BC  6D                 	db	109	;'m'
  4417  00F4BD  62                 	db	98	;'b'
  4418  00F4BE  69                 	db	105	;'i'
  4419  00F4BF  65                 	db	101	;'e'
  4420  00F4C0  6E                 	db	110	;'n'
  4421  00F4C1  74                 	db	116	;'t'
  4422  00F4C2  20                 	db	32
  4423  00F4C3  54                 	db	84	;'T'
  4424  00F4C4  65                 	db	101	;'e'
  4425  00F4C5  6D                 	db	109	;'m'
  4426  00F4C6  70                 	db	112	;'p'
  4427  00F4C7  20                 	db	32
  4428  00F4C8  53                 	db	83	;'S'
  4429  00F4C9  65                 	db	101	;'e'
  4430  00F4CA  6E                 	db	110	;'n'
  4431  00F4CB  73                 	db	115	;'s'
  4432  00F4CC  6F                 	db	111	;'o'
  4433  00F4CD  72                 	db	114	;'r'
  4434  00F4CE  20                 	db	32
  4435  00F4CF  45                 	db	69	;'E'
  4436  00F4D0  72                 	db	114	;'r'
  4437  00F4D1  72                 	db	114	;'r'
  4438  00F4D2  6F                 	db	111	;'o'
  4439  00F4D3  72                 	db	114	;'r'
  4440  00F4D4  0A                 	db	10
  4441  00F4D5  0D                 	db	13
  4442  00F4D6  00                 	db	0
  4443  00F4D7                     STR_4:
  4444  00F4D7  51                 	db	81	;'Q'
  4445  00F4D8  49                 	db	73	;'I'
  4446  00F4D9  20                 	db	32
  4447  00F4DA  57                 	db	87	;'W'
  4448  00F4DB  69                 	db	105	;'i'
  4449  00F4DC  72                 	db	114	;'r'
  4450  00F4DD  65                 	db	101	;'e'
  4451  00F4DE  6C                 	db	108	;'l'
  4452  00F4DF  65                 	db	101	;'e'
  4453  00F4E0  73                 	db	115	;'s'
  4454  00F4E1  73                 	db	115	;'s'
  4455  00F4E2  20                 	db	32
  4456  00F4E3  50                 	db	80	;'P'
  4457  00F4E4  6F                 	db	111	;'o'
  4458  00F4E5  77                 	db	119	;'w'
  4459  00F4E6  65                 	db	101	;'e'
  4460  00F4E7  72                 	db	114	;'r'
  4461  00F4E8  20                 	db	32
  4462  00F4E9  43                 	db	67	;'C'
  4463  00F4EA  6F                 	db	111	;'o'
  4464  00F4EB  6E                 	db	110	;'n'
  4465  00F4EC  76                 	db	118	;'v'
  4466  00F4ED  65                 	db	101	;'e'
  4467  00F4EE  72                 	db	114	;'r'
  4468  00F4EF  73                 	db	115	;'s'
  4469  00F4F0  69                 	db	105	;'i'
  4470  00F4F1  6F                 	db	111	;'o'
  4471  00F4F2  6E                 	db	110	;'n'
  4472  00F4F3  20                 	db	32
  4473  00F4F4  45                 	db	69	;'E'
  4474  00F4F5  6E                 	db	110	;'n'
  4475  00F4F6  61                 	db	97	;'a'
  4476  00F4F7  62                 	db	98	;'b'
  4477  00F4F8  6C                 	db	108	;'l'
  4478  00F4F9  65                 	db	101	;'e'
  4479  00F4FA  64                 	db	100	;'d'
  4480  00F4FB  0A                 	db	10
  4481  00F4FC  0D                 	db	13
  4482  00F4FD  00                 	db	0
  4483  00F4FE                     STR_7:
  4484  00F4FE  4D                 	db	77	;'M'
  4485  00F4FF  65                 	db	101	;'e'
  4486  00F500  61                 	db	97	;'a'
  4487  00F501  73                 	db	115	;'s'
  4488  00F502  75                 	db	117	;'u'
  4489  00F503  72                 	db	114	;'r'
  4490  00F504  65                 	db	101	;'e'
  4491  00F505  6D                 	db	109	;'m'
  4492  00F506  65                 	db	101	;'e'
  4493  00F507  6E                 	db	110	;'n'
  4494  00F508  74                 	db	116	;'t'
  4495  00F509  20                 	db	32
  4496  00F50A  72                 	db	114	;'r'
  4497  00F50B  65                 	db	101	;'e'
  4498  00F50C  73                 	db	115	;'s'
  4499  00F50D  70                 	db	112	;'p'
  4500  00F50E  6F                 	db	111	;'o'
  4501  00F50F  6E                 	db	110	;'n'
  4502  00F510  73                 	db	115	;'s'
  4503  00F511  65                 	db	101	;'e'
  4504  00F512  73                 	db	115	;'s'
  4505  00F513  20                 	db	32
  4506  00F514  61                 	db	97	;'a'
  4507  00F515  70                 	db	112	;'p'
  4508  00F516  70                 	db	112	;'p'
  4509  00F517  65                 	db	101	;'e'
  4510  00F518  61                 	db	97	;'a'
  4511  00F519  72                 	db	114	;'r'
  4512  00F51A  20                 	db	32
  4513  00F51B  69                 	db	105	;'i'
  4514  00F51C  6E                 	db	110	;'n'
  4515  00F51D  20                 	db	32
  4516  00F51E  63                 	db	99	;'c'
  4517  00F51F  79                 	db	121	;'y'
  4518  00F520  61                 	db	97	;'a'
  4519  00F521  6E                 	db	110	;'n'
  4520  00F522  0A                 	db	10
  4521  00F523  0D                 	db	13
  4522  00F524  00                 	db	0
  4523  00F525  54                 	db	84	;'T'
  4524  00F526  68                 	db	104	;'h'
  4525  00F527  69                 	db	105	;'i'
  4526  00F528  73                 	db	115	;'s'
  4527  00F529  20                 	db	32
  4528  00F52A  74                 	db	116	;'t'
  4529  00F52B  65                 	db	101	;'e'
  4530  00F52C  78                 	db	120	;'x'
  4531  00F52D  74                 	db	116	;'t'
  4532  00F52E  20                 	db	32
  4533  00F52F  68                 	db	104	;'h'
  4534  00F530  61                 	db	97	;'a'
  4535  00F531  73                 	db	115	;'s'
  4536  00F532  20                 	db	32
  4537  00F533  61                 	db	97	;'a'
  4538  00F534  20                 	db	32
  4539  00F535  6D                 	db	109	;'m'
  4540  00F536  61                 	db	97	;'a'
  4541  00F537  67                 	db	103	;'g'
  4542  00F538  65                 	db	101	;'e'
  4543  00F539  6E                 	db	110	;'n'
  4544  00F53A  74                 	db	116	;'t'
  4545  00F53B  61                 	db	97	;'a'
  4546  00F53C  20                 	db	32
  4547  00F53D  62                 	db	98	;'b'
  4548  00F53E  61                 	db	97	;'a'
  4549  00F53F  63                 	db	99	;'c'
  4550  00F540  6B                 	db	107	;'k'
  4551  00F541  67                 	db	103	;'g'
  4552  00F542  72                 	db	114	;'r'
  4553  00F543  6F                 	db	111	;'o'
  4554  00F544  75                 	db	117	;'u'
  4555  00F545  6E                 	db	110	;'n'
  4556  00F546  64                 	db	100	;'d'
  4557  00F547  0A                 	db	10
  4558  00F548  0D                 	db	13
  4559  00F549  00                 	db	0
  4560  00F54A                     STR_238:
  4561  00F54A  55                 	db	85	;'U'
  4562  00F54B  6E                 	db	110	;'n'
  4563  00F54C  73                 	db	115	;'s'
  4564  00F54D  75                 	db	117	;'u'
  4565  00F54E  70                 	db	112	;'p'
  4566  00F54F  70                 	db	112	;'p'
  4567  00F550  6F                 	db	111	;'o'
  4568  00F551  72                 	db	114	;'r'
  4569  00F552  74                 	db	116	;'t'
  4570  00F553  65                 	db	101	;'e'
  4571  00F554  64                 	db	100	;'d'
  4572  00F555  20                 	db	32
  4573  00F556  6F                 	db	111	;'o'
  4574  00F557  72                 	db	114	;'r'
  4575  00F558  20                 	db	32
  4576  00F559  6D                 	db	109	;'m'
  4577  00F55A  69                 	db	105	;'i'
  4578  00F55B  73                 	db	115	;'s'
  4579  00F55C  2D                 	db	45
  4580  00F55D  65                 	db	101	;'e'
  4581  00F55E  6E                 	db	110	;'n'
  4582  00F55F  74                 	db	116	;'t'
  4583  00F560  65                 	db	101	;'e'
  4584  00F561  72                 	db	114	;'r'
  4585  00F562  65                 	db	101	;'e'
  4586  00F563  64                 	db	100	;'d'
  4587  00F564  20                 	db	32
  4588  00F565  63                 	db	99	;'c'
  4589  00F566  6F                 	db	111	;'o'
  4590  00F567  6D                 	db	109	;'m'
  4591  00F568  6D                 	db	109	;'m'
  4592  00F569  61                 	db	97	;'a'
  4593  00F56A  6E                 	db	110	;'n'
  4594  00F56B  64                 	db	100	;'d'
  4595  00F56C  0A                 	db	10
  4596  00F56D  0D                 	db	13
  4597  00F56E  00                 	db	0
  4598  00F56F                     STR_251:
  4599  00F56F  20                 	db	32
  4600  00F570  20                 	db	32
  4601  00F571  20                 	db	32
  4602  00F572  20                 	db	32
  4603  00F573  20                 	db	32
  4604  00F574  20                 	db	32
  4605  00F575  20                 	db	32
  4606  00F576  20                 	db	32
  4607  00F577  49                 	db	73	;'I'
  4608  00F578  32                 	db	50	;'2'
  4609  00F579  43                 	db	67	;'C'
  4610  00F57A  20                 	db	32
  4611  00F57B  50                 	db	80	;'P'
  4612  00F57C  4F                 	db	79	;'O'
  4613  00F57D  53                 	db	83	;'S'
  4614  00F57E  35                 	db	53	;'5'
  4615  00F57F  20                 	db	32
  4616  00F580  54                 	db	84	;'T'
  4617  00F581  65                 	db	101	;'e'
  4618  00F582  6D                 	db	109	;'m'
  4619  00F583  70                 	db	112	;'p'
  4620  00F584  20                 	db	32
  4621  00F585  53                 	db	83	;'S'
  4622  00F586  65                 	db	101	;'e'
  4623  00F587  6E                 	db	110	;'n'
  4624  00F588  73                 	db	115	;'s'
  4625  00F589  6F                 	db	111	;'o'
  4626  00F58A  72                 	db	114	;'r'
  4627  00F58B  20                 	db	32
  4628  00F58C  45                 	db	69	;'E'
  4629  00F58D  72                 	db	114	;'r'
  4630  00F58E  72                 	db	114	;'r'
  4631  00F58F  6F                 	db	111	;'o'
  4632  00F590  72                 	db	114	;'r'
  4633  00F591  0A                 	db	10
  4634  00F592  0D                 	db	13
  4635  00F593  00                 	db	0
  4636  00F594  54                 	db	84	;'T'
  4637  00F595  68                 	db	104	;'h'
  4638  00F596  69                 	db	105	;'i'
  4639  00F597  73                 	db	115	;'s'
  4640  00F598  20                 	db	32
  4641  00F599  74                 	db	116	;'t'
  4642  00F59A  65                 	db	101	;'e'
  4643  00F59B  78                 	db	120	;'x'
  4644  00F59C  74                 	db	116	;'t'
  4645  00F59D  20                 	db	32
  4646  00F59E  68                 	db	104	;'h'
  4647  00F59F  61                 	db	97	;'a'
  4648  00F5A0  73                 	db	115	;'s'
  4649  00F5A1  20                 	db	32
  4650  00F5A2  61                 	db	97	;'a'
  4651  00F5A3  20                 	db	32
  4652  00F5A4  79                 	db	121	;'y'
  4653  00F5A5  65                 	db	101	;'e'
  4654  00F5A6  6C                 	db	108	;'l'
  4655  00F5A7  6C                 	db	108	;'l'
  4656  00F5A8  6F                 	db	111	;'o'
  4657  00F5A9  77                 	db	119	;'w'
  4658  00F5AA  20                 	db	32
  4659  00F5AB  62                 	db	98	;'b'
  4660  00F5AC  61                 	db	97	;'a'
  4661  00F5AD  63                 	db	99	;'c'
  4662  00F5AE  6B                 	db	107	;'k'
  4663  00F5AF  67                 	db	103	;'g'
  4664  00F5B0  72                 	db	114	;'r'
  4665  00F5B1  6F                 	db	111	;'o'
  4666  00F5B2  75                 	db	117	;'u'
  4667  00F5B3  6E                 	db	110	;'n'
  4668  00F5B4  64                 	db	100	;'d'
  4669  00F5B5  0A                 	db	10
  4670  00F5B6  0D                 	db	13
  4671  00F5B7  00                 	db	0
  4672  00F5B8                     STR_275:
  4673  00F5B8  20                 	db	32
  4674  00F5B9  20                 	db	32
  4675  00F5BA  20                 	db	32
  4676  00F5BB  20                 	db	32
  4677  00F5BC  53                 	db	83	;'S'
  4678  00F5BD  79                 	db	121	;'y'
  4679  00F5BE  73                 	db	115	;'s'
  4680  00F5BF  74                 	db	116	;'t'
  4681  00F5C0  65                 	db	101	;'e'
  4682  00F5C1  6D                 	db	109	;'m'
  4683  00F5C2  20                 	db	32
  4684  00F5C3  53                 	db	83	;'S'
  4685  00F5C4  77                 	db	119	;'w'
  4686  00F5C5  69                 	db	105	;'i'
  4687  00F5C6  74                 	db	116	;'t'
  4688  00F5C7  63                 	db	99	;'c'
  4689  00F5C8  68                 	db	104	;'h'
  4690  00F5C9  69                 	db	105	;'i'
  4691  00F5CA  6E                 	db	110	;'n'
  4692  00F5CB  67                 	db	103	;'g'
  4693  00F5CC  20                 	db	32
  4694  00F5CD  46                 	db	70	;'F'
  4695  00F5CE  72                 	db	114	;'r'
  4696  00F5CF  65                 	db	101	;'e'
  4697  00F5D0  71                 	db	113	;'q'
  4698  00F5D1  75                 	db	117	;'u'
  4699  00F5D2  65                 	db	101	;'e'
  4700  00F5D3  6E                 	db	110	;'n'
  4701  00F5D4  63                 	db	99	;'c'
  4702  00F5D5  69                 	db	105	;'i'
  4703  00F5D6  65                 	db	101	;'e'
  4704  00F5D7  73                 	db	115	;'s'
  4705  00F5D8  3A                 	db	58	;':'
  4706  00F5D9  0A                 	db	10
  4707  00F5DA  0D                 	db	13
  4708  00F5DB  00                 	db	0
  4709  00F5DC                     STR_241:
  4710  00F5DC  4C                 	db	76	;'L'
  4711  00F5DD  69                 	db	105	;'i'
  4712  00F5DE  76                 	db	118	;'v'
  4713  00F5DF  65                 	db	101	;'e'
  4714  00F5E0  20                 	db	32
  4715  00F5E1  6D                 	db	109	;'m'
  4716  00F5E2  65                 	db	101	;'e'
  4717  00F5E3  61                 	db	97	;'a'
  4718  00F5E4  73                 	db	115	;'s'
  4719  00F5E5  75                 	db	117	;'u'
  4720  00F5E6  72                 	db	114	;'r'
  4721  00F5E7  65                 	db	101	;'e'
  4722  00F5E8  6D                 	db	109	;'m'
  4723  00F5E9  65                 	db	101	;'e'
  4724  00F5EA  6E                 	db	110	;'n'
  4725  00F5EB  74                 	db	116	;'t'
  4726  00F5EC  20                 	db	32
  4727  00F5ED  75                 	db	117	;'u'
  4728  00F5EE  70                 	db	112	;'p'
  4729  00F5EF  64                 	db	100	;'d'
  4730  00F5F0  61                 	db	97	;'a'
  4731  00F5F1  74                 	db	116	;'t'
  4732  00F5F2  65                 	db	101	;'e'
  4733  00F5F3  73                 	db	115	;'s'
  4734  00F5F4  20                 	db	32
  4735  00F5F5  64                 	db	100	;'d'
  4736  00F5F6  69                 	db	105	;'i'
  4737  00F5F7  73                 	db	115	;'s'
  4738  00F5F8  61                 	db	97	;'a'
  4739  00F5F9  62                 	db	98	;'b'
  4740  00F5FA  6C                 	db	108	;'l'
  4741  00F5FB  65                 	db	101	;'e'
  4742  00F5FC  64                 	db	100	;'d'
  4743  00F5FD  0A                 	db	10
  4744  00F5FE  0D                 	db	13
  4745  00F5FF  00                 	db	0
  4746  00F600  54                 	db	84	;'T'
  4747  00F601  68                 	db	104	;'h'
  4748  00F602  69                 	db	105	;'i'
  4749  00F603  73                 	db	115	;'s'
  4750  00F604  20                 	db	32
  4751  00F605  74                 	db	116	;'t'
  4752  00F606  65                 	db	101	;'e'
  4753  00F607  78                 	db	120	;'x'
  4754  00F608  74                 	db	116	;'t'
  4755  00F609  20                 	db	32
  4756  00F60A  68                 	db	104	;'h'
  4757  00F60B  61                 	db	97	;'a'
  4758  00F60C  73                 	db	115	;'s'
  4759  00F60D  20                 	db	32
  4760  00F60E  61                 	db	97	;'a'
  4761  00F60F  20                 	db	32
  4762  00F610  77                 	db	119	;'w'
  4763  00F611  68                 	db	104	;'h'
  4764  00F612  69                 	db	105	;'i'
  4765  00F613  74                 	db	116	;'t'
  4766  00F614  65                 	db	101	;'e'
  4767  00F615  20                 	db	32
  4768  00F616  62                 	db	98	;'b'
  4769  00F617  61                 	db	97	;'a'
  4770  00F618  63                 	db	99	;'c'
  4771  00F619  6B                 	db	107	;'k'
  4772  00F61A  67                 	db	103	;'g'
  4773  00F61B  72                 	db	114	;'r'
  4774  00F61C  6F                 	db	111	;'o'
  4775  00F61D  75                 	db	117	;'u'
  4776  00F61E  6E                 	db	110	;'n'
  4777  00F61F  64                 	db	100	;'d'
  4778  00F620  0A                 	db	10
  4779  00F621  0D                 	db	13
  4780  00F622  00                 	db	0
  4781  00F623  54                 	db	84	;'T'
  4782  00F624  68                 	db	104	;'h'
  4783  00F625  69                 	db	105	;'i'
  4784  00F626  73                 	db	115	;'s'
  4785  00F627  20                 	db	32
  4786  00F628  74                 	db	116	;'t'
  4787  00F629  65                 	db	101	;'e'
  4788  00F62A  78                 	db	120	;'x'
  4789  00F62B  74                 	db	116	;'t'
  4790  00F62C  20                 	db	32
  4791  00F62D  68                 	db	104	;'h'
  4792  00F62E  61                 	db	97	;'a'
  4793  00F62F  73                 	db	115	;'s'
  4794  00F630  20                 	db	32
  4795  00F631  61                 	db	97	;'a'
  4796  00F632  20                 	db	32
  4797  00F633  62                 	db	98	;'b'
  4798  00F634  6C                 	db	108	;'l'
  4799  00F635  61                 	db	97	;'a'
  4800  00F636  63                 	db	99	;'c'
  4801  00F637  6B                 	db	107	;'k'
  4802  00F638  20                 	db	32
  4803  00F639  62                 	db	98	;'b'
  4804  00F63A  61                 	db	97	;'a'
  4805  00F63B  63                 	db	99	;'c'
  4806  00F63C  6B                 	db	107	;'k'
  4807  00F63D  67                 	db	103	;'g'
  4808  00F63E  72                 	db	114	;'r'
  4809  00F63F  6F                 	db	111	;'o'
  4810  00F640  75                 	db	117	;'u'
  4811  00F641  6E                 	db	110	;'n'
  4812  00F642  64                 	db	100	;'d'
  4813  00F643  0A                 	db	10
  4814  00F644  0D                 	db	13
  4815  00F645  00                 	db	0
  4816  00F646  54                 	db	84	;'T'
  4817  00F647  68                 	db	104	;'h'
  4818  00F648  69                 	db	105	;'i'
  4819  00F649  73                 	db	115	;'s'
  4820  00F64A  20                 	db	32
  4821  00F64B  74                 	db	116	;'t'
  4822  00F64C  65                 	db	101	;'e'
  4823  00F64D  78                 	db	120	;'x'
  4824  00F64E  74                 	db	116	;'t'
  4825  00F64F  20                 	db	32
  4826  00F650  68                 	db	104	;'h'
  4827  00F651  61                 	db	97	;'a'
  4828  00F652  73                 	db	115	;'s'
  4829  00F653  20                 	db	32
  4830  00F654  61                 	db	97	;'a'
  4831  00F655  20                 	db	32
  4832  00F656  67                 	db	103	;'g'
  4833  00F657  72                 	db	114	;'r'
  4834  00F658  65                 	db	101	;'e'
  4835  00F659  65                 	db	101	;'e'
  4836  00F65A  6E                 	db	110	;'n'
  4837  00F65B  20                 	db	32
  4838  00F65C  62                 	db	98	;'b'
  4839  00F65D  61                 	db	97	;'a'
  4840  00F65E  63                 	db	99	;'c'
  4841  00F65F  6B                 	db	107	;'k'
  4842  00F660  67                 	db	103	;'g'
  4843  00F661  72                 	db	114	;'r'
  4844  00F662  6F                 	db	111	;'o'
  4845  00F663  75                 	db	117	;'u'
  4846  00F664  6E                 	db	110	;'n'
  4847  00F665  64                 	db	100	;'d'
  4848  00F666  0A                 	db	10
  4849  00F667  0D                 	db	13
  4850  00F668  00                 	db	0
  4851  00F669                     STR_259:
  4852  00F669  20                 	db	32
  4853  00F66A  20                 	db	32
  4854  00F66B  20                 	db	32
  4855  00F66C  20                 	db	32
  4856  00F66D  51                 	db	81	;'Q'
  4857  00F66E  49                 	db	73	;'I'
  4858  00F66F  20                 	db	32
  4859  00F670  43                 	db	67	;'C'
  4860  00F671  68                 	db	104	;'h'
  4861  00F672  61                 	db	97	;'a'
  4862  00F673  72                 	db	114	;'r'
  4863  00F674  67                 	db	103	;'g'
  4864  00F675  65                 	db	101	;'e'
  4865  00F676  72                 	db	114	;'r'
  4866  00F677  20                 	db	32
  4867  00F678  69                 	db	105	;'i'
  4868  00F679  73                 	db	115	;'s'
  4869  00F67A  20                 	db	32
  4870  00F67B  69                 	db	105	;'i'
  4871  00F67C  6E                 	db	110	;'n'
  4872  00F67D  20                 	db	32
  4873  00F67E  45                 	db	69	;'E'
  4874  00F67F  72                 	db	114	;'r'
  4875  00F680  72                 	db	114	;'r'
  4876  00F681  6F                 	db	111	;'o'
  4877  00F682  72                 	db	114	;'r'
  4878  00F683  20                 	db	32
  4879  00F684  53                 	db	83	;'S'
  4880  00F685  74                 	db	116	;'t'
  4881  00F686  61                 	db	97	;'a'
  4882  00F687  74                 	db	116	;'t'
  4883  00F688  65                 	db	101	;'e'
  4884  00F689  0A                 	db	10
  4885  00F68A  0D                 	db	13
  4886  00F68B  00                 	db	0
  4887  00F68C                     STR_252:
  4888  00F68C  20                 	db	32
  4889  00F68D  20                 	db	32
  4890  00F68E  20                 	db	32
  4891  00F68F  20                 	db	32
  4892  00F690  20                 	db	32
  4893  00F691  20                 	db	32
  4894  00F692  20                 	db	32
  4895  00F693  20                 	db	32
  4896  00F694  49                 	db	73	;'I'
  4897  00F695  32                 	db	50	;'2'
  4898  00F696  43                 	db	67	;'C'
  4899  00F697  20                 	db	32
  4900  00F698  51                 	db	81	;'Q'
  4901  00F699  49                 	db	73	;'I'
  4902  00F69A  20                 	db	32
  4903  00F69B  54                 	db	84	;'T'
  4904  00F69C  65                 	db	101	;'e'
  4905  00F69D  6D                 	db	109	;'m'
  4906  00F69E  70                 	db	112	;'p'
  4907  00F69F  20                 	db	32
  4908  00F6A0  53                 	db	83	;'S'
  4909  00F6A1  65                 	db	101	;'e'
  4910  00F6A2  6E                 	db	110	;'n'
  4911  00F6A3  73                 	db	115	;'s'
  4912  00F6A4  6F                 	db	111	;'o'
  4913  00F6A5  72                 	db	114	;'r'
  4914  00F6A6  20                 	db	32
  4915  00F6A7  45                 	db	69	;'E'
  4916  00F6A8  72                 	db	114	;'r'
  4917  00F6A9  72                 	db	114	;'r'
  4918  00F6AA  6F                 	db	111	;'o'
  4919  00F6AB  72                 	db	114	;'r'
  4920  00F6AC  0A                 	db	10
  4921  00F6AD  0D                 	db	13
  4922  00F6AE  00                 	db	0
  4923  00F6AF  54                 	db	84	;'T'
  4924  00F6B0  68                 	db	104	;'h'
  4925  00F6B1  69                 	db	105	;'i'
  4926  00F6B2  73                 	db	115	;'s'
  4927  00F6B3  20                 	db	32
  4928  00F6B4  74                 	db	116	;'t'
  4929  00F6B5  65                 	db	101	;'e'
  4930  00F6B6  78                 	db	120	;'x'
  4931  00F6B7  74                 	db	116	;'t'
  4932  00F6B8  20                 	db	32
  4933  00F6B9  68                 	db	104	;'h'
  4934  00F6BA  61                 	db	97	;'a'
  4935  00F6BB  73                 	db	115	;'s'
  4936  00F6BC  20                 	db	32
  4937  00F6BD  61                 	db	97	;'a'
  4938  00F6BE  20                 	db	32
  4939  00F6BF  62                 	db	98	;'b'
  4940  00F6C0  6C                 	db	108	;'l'
  4941  00F6C1  75                 	db	117	;'u'
  4942  00F6C2  65                 	db	101	;'e'
  4943  00F6C3  20                 	db	32
  4944  00F6C4  62                 	db	98	;'b'
  4945  00F6C5  61                 	db	97	;'a'
  4946  00F6C6  63                 	db	99	;'c'
  4947  00F6C7  6B                 	db	107	;'k'
  4948  00F6C8  67                 	db	103	;'g'
  4949  00F6C9  72                 	db	114	;'r'
  4950  00F6CA  6F                 	db	111	;'o'
  4951  00F6CB  75                 	db	117	;'u'
  4952  00F6CC  6E                 	db	110	;'n'
  4953  00F6CD  64                 	db	100	;'d'
  4954  00F6CE  0A                 	db	10
  4955  00F6CF  0D                 	db	13
  4956  00F6D0  00                 	db	0
  4957  00F6D1  54                 	db	84	;'T'
  4958  00F6D2  68                 	db	104	;'h'
  4959  00F6D3  69                 	db	105	;'i'
  4960  00F6D4  73                 	db	115	;'s'
  4961  00F6D5  20                 	db	32
  4962  00F6D6  74                 	db	116	;'t'
  4963  00F6D7  65                 	db	101	;'e'
  4964  00F6D8  78                 	db	120	;'x'
  4965  00F6D9  74                 	db	116	;'t'
  4966  00F6DA  20                 	db	32
  4967  00F6DB  68                 	db	104	;'h'
  4968  00F6DC  61                 	db	97	;'a'
  4969  00F6DD  73                 	db	115	;'s'
  4970  00F6DE  20                 	db	32
  4971  00F6DF  61                 	db	97	;'a'
  4972  00F6E0  20                 	db	32
  4973  00F6E1  63                 	db	99	;'c'
  4974  00F6E2  79                 	db	121	;'y'
  4975  00F6E3  61                 	db	97	;'a'
  4976  00F6E4  6E                 	db	110	;'n'
  4977  00F6E5  20                 	db	32
  4978  00F6E6  62                 	db	98	;'b'
  4979  00F6E7  61                 	db	97	;'a'
  4980  00F6E8  63                 	db	99	;'c'
  4981  00F6E9  6B                 	db	107	;'k'
  4982  00F6EA  67                 	db	103	;'g'
  4983  00F6EB  72                 	db	114	;'r'
  4984  00F6EC  6F                 	db	111	;'o'
  4985  00F6ED  75                 	db	117	;'u'
  4986  00F6EE  6E                 	db	110	;'n'
  4987  00F6EF  64                 	db	100	;'d'
  4988  00F6F0  0A                 	db	10
  4989  00F6F1  0D                 	db	13
  4990  00F6F2  00                 	db	0
  4991  00F6F3                     STR_284:
  4992  00F6F3  20                 	db	32
  4993  00F6F4  20                 	db	32
  4994  00F6F5  20                 	db	32
  4995  00F6F6  20                 	db	32
  4996  00F6F7  4D                 	db	77	;'M'
  4997  00F6F8  69                 	db	105	;'i'
  4998  00F6F9  63                 	db	99	;'c'
  4999  00F6FA  72                 	db	114	;'r'
  5000  00F6FB  6F                 	db	111	;'o'
  5001  00F6FC  63                 	db	99	;'c'
  5002  00F6FD  6F                 	db	111	;'o'
  5003  00F6FE  6E                 	db	110	;'n'
  5004  00F6FF  74                 	db	116	;'t'
  5005  00F700  72                 	db	114	;'r'
  5006  00F701  6F                 	db	111	;'o'
  5007  00F702  6C                 	db	108	;'l'
  5008  00F703  6C                 	db	108	;'l'
  5009  00F704  65                 	db	101	;'e'
  5010  00F705  72                 	db	114	;'r'
  5011  00F706  20                 	db	32
  5012  00F707  50                 	db	80	;'P'
  5013  00F708  61                 	db	97	;'a'
  5014  00F709  72                 	db	114	;'r'
  5015  00F70A  61                 	db	97	;'a'
  5016  00F70B  6D                 	db	109	;'m'
  5017  00F70C  65                 	db	101	;'e'
  5018  00F70D  74                 	db	116	;'t'
  5019  00F70E  65                 	db	101	;'e'
  5020  00F70F  72                 	db	114	;'r'
  5021  00F710  73                 	db	115	;'s'
  5022  00F711  3A                 	db	58	;':'
  5023  00F712  0A                 	db	10
  5024  00F713  0D                 	db	13
  5025  00F714  00                 	db	0
  5026  00F715  54                 	db	84	;'T'
  5027  00F716  68                 	db	104	;'h'
  5028  00F717  69                 	db	105	;'i'
  5029  00F718  73                 	db	115	;'s'
  5030  00F719  20                 	db	32
  5031  00F71A  74                 	db	116	;'t'
  5032  00F71B  65                 	db	101	;'e'
  5033  00F71C  78                 	db	120	;'x'
  5034  00F71D  74                 	db	116	;'t'
  5035  00F71E  20                 	db	32
  5036  00F71F  68                 	db	104	;'h'
  5037  00F720  61                 	db	97	;'a'
  5038  00F721  73                 	db	115	;'s'
  5039  00F722  20                 	db	32
  5040  00F723  61                 	db	97	;'a'
  5041  00F724  20                 	db	32
  5042  00F725  72                 	db	114	;'r'
  5043  00F726  65                 	db	101	;'e'
  5044  00F727  64                 	db	100	;'d'
  5045  00F728  20                 	db	32
  5046  00F729  62                 	db	98	;'b'
  5047  00F72A  61                 	db	97	;'a'
  5048  00F72B  63                 	db	99	;'c'
  5049  00F72C  6B                 	db	107	;'k'
  5050  00F72D  67                 	db	103	;'g'
  5051  00F72E  72                 	db	114	;'r'
  5052  00F72F  6F                 	db	111	;'o'
  5053  00F730  75                 	db	117	;'u'
  5054  00F731  6E                 	db	110	;'n'
  5055  00F732  64                 	db	100	;'d'
  5056  00F733  0A                 	db	10
  5057  00F734  0D                 	db	13
  5058  00F735  00                 	db	0
  5059  00F736                     STR_253:
  5060  00F736  20                 	db	32
  5061  00F737  20                 	db	32
  5062  00F738  20                 	db	32
  5063  00F739  20                 	db	32
  5064  00F73A  20                 	db	32
  5065  00F73B  20                 	db	32
  5066  00F73C  20                 	db	32
  5067  00F73D  20                 	db	32
  5068  00F73E  49                 	db	73	;'I'
  5069  00F73F  32                 	db	50	;'2'
  5070  00F740  43                 	db	67	;'C'
  5071  00F741  20                 	db	32
  5072  00F742  4F                 	db	79	;'O'
  5073  00F743  4C                 	db	76	;'L'
  5074  00F744  45                 	db	69	;'E'
  5075  00F745  44                 	db	68	;'D'
  5076  00F746  20                 	db	32
  5077  00F747  44                 	db	68	;'D'
  5078  00F748  69                 	db	105	;'i'
  5079  00F749  73                 	db	115	;'s'
  5080  00F74A  70                 	db	112	;'p'
  5081  00F74B  6C                 	db	108	;'l'
  5082  00F74C  61                 	db	97	;'a'
  5083  00F74D  79                 	db	121	;'y'
  5084  00F74E  20                 	db	32
  5085  00F74F  45                 	db	69	;'E'
  5086  00F750  72                 	db	114	;'r'
  5087  00F751  72                 	db	114	;'r'
  5088  00F752  6F                 	db	111	;'o'
  5089  00F753  72                 	db	114	;'r'
  5090  00F754  0A                 	db	10
  5091  00F755  0D                 	db	13
  5092  00F756  00                 	db	0
  5093  00F757                     STR_258:
  5094  00F757  20                 	db	32
  5095  00F758  20                 	db	32
  5096  00F759  20                 	db	32
  5097  00F75A  20                 	db	32
  5098  00F75B  4E                 	db	78	;'N'
  5099  00F75C  6F                 	db	111	;'o'
  5100  00F75D  20                 	db	32
  5101  00F75E  55                 	db	85	;'U'
  5102  00F75F  41                 	db	65	;'A'
  5103  00F760  52                 	db	82	;'R'
  5104  00F761  54                 	db	84	;'T'
  5105  00F762  20                 	db	32
  5106  00F763  65                 	db	101	;'e'
  5107  00F764  72                 	db	114	;'r'
  5108  00F765  72                 	db	114	;'r'
  5109  00F766  6F                 	db	111	;'o'
  5110  00F767  72                 	db	114	;'r'
  5111  00F768  28                 	db	40
  5112  00F769  73                 	db	115	;'s'
  5113  00F76A  29                 	db	41
  5114  00F76B  20                 	db	32
  5115  00F76C  64                 	db	100	;'d'
  5116  00F76D  65                 	db	101	;'e'
  5117  00F76E  74                 	db	116	;'t'
  5118  00F76F  65                 	db	101	;'e'
  5119  00F770  63                 	db	99	;'c'
  5120  00F771  74                 	db	116	;'t'
  5121  00F772  65                 	db	101	;'e'
  5122  00F773  64                 	db	100	;'d'
  5123  00F774  0A                 	db	10
  5124  00F775  0D                 	db	13
  5125  00F776  00                 	db	0
  5126  00F777                     STR_255:
  5127  00F777  20                 	db	32
  5128  00F778  20                 	db	32
  5129  00F779  20                 	db	32
  5130  00F77A  20                 	db	32
  5131  00F77B  4E                 	db	78	;'N'
  5132  00F77C  6F                 	db	111	;'o'
  5133  00F77D  20                 	db	32
  5134  00F77E  49                 	db	73	;'I'
  5135  00F77F  32                 	db	50	;'2'
  5136  00F780  43                 	db	67	;'C'
  5137  00F781  20                 	db	32
  5138  00F782  65                 	db	101	;'e'
  5139  00F783  72                 	db	114	;'r'
  5140  00F784  72                 	db	114	;'r'
  5141  00F785  6F                 	db	111	;'o'
  5142  00F786  72                 	db	114	;'r'
  5143  00F787  28                 	db	40
  5144  00F788  73                 	db	115	;'s'
  5145  00F789  29                 	db	41
  5146  00F78A  20                 	db	32
  5147  00F78B  64                 	db	100	;'d'
  5148  00F78C  65                 	db	101	;'e'
  5149  00F78D  74                 	db	116	;'t'
  5150  00F78E  65                 	db	101	;'e'
  5151  00F78F  63                 	db	99	;'c'
  5152  00F790  74                 	db	116	;'t'
  5153  00F791  65                 	db	101	;'e'
  5154  00F792  64                 	db	100	;'d'
  5155  00F793  0A                 	db	10
  5156  00F794  0D                 	db	13
  5157  00F795  00                 	db	0
  5158  00F796                     STR_247:
  5159  00F796  20                 	db	32
  5160  00F797  20                 	db	32
  5161  00F798  20                 	db	32
  5162  00F799  20                 	db	32
  5163  00F79A  4E                 	db	78	;'N'
  5164  00F79B  6F                 	db	111	;'o'
  5165  00F79C  20                 	db	32
  5166  00F79D  41                 	db	65	;'A'
  5167  00F79E  44                 	db	68	;'D'
  5168  00F79F  43                 	db	67	;'C'
  5169  00F7A0  20                 	db	32
  5170  00F7A1  65                 	db	101	;'e'
  5171  00F7A2  72                 	db	114	;'r'
  5172  00F7A3  72                 	db	114	;'r'
  5173  00F7A4  6F                 	db	111	;'o'
  5174  00F7A5  72                 	db	114	;'r'
  5175  00F7A6  28                 	db	40
  5176  00F7A7  73                 	db	115	;'s'
  5177  00F7A8  29                 	db	41
  5178  00F7A9  20                 	db	32
  5179  00F7AA  64                 	db	100	;'d'
  5180  00F7AB  65                 	db	101	;'e'
  5181  00F7AC  74                 	db	116	;'t'
  5182  00F7AD  65                 	db	101	;'e'
  5183  00F7AE  63                 	db	99	;'c'
  5184  00F7AF  74                 	db	116	;'t'
  5185  00F7B0  65                 	db	101	;'e'
  5186  00F7B1  64                 	db	100	;'d'
  5187  00F7B2  0A                 	db	10
  5188  00F7B3  0D                 	db	13
  5189  00F7B4  00                 	db	0
  5190  00F7B5                     STR_256:
  5191  00F7B5  20                 	db	32
  5192  00F7B6  20                 	db	32
  5193  00F7B7  20                 	db	32
  5194  00F7B8  20                 	db	32
  5195  00F7B9  55                 	db	85	;'U'
  5196  00F7BA  53                 	db	83	;'S'
  5197  00F7BB  42                 	db	66	;'B'
  5198  00F7BC  20                 	db	32
  5199  00F7BD  55                 	db	85	;'U'
  5200  00F7BE  41                 	db	65	;'A'
  5201  00F7BF  52                 	db	82	;'R'
  5202  00F7C0  54                 	db	84	;'T'
  5203  00F7C1  20                 	db	32
  5204  00F7C2  45                 	db	69	;'E'
  5205  00F7C3  72                 	db	114	;'r'
  5206  00F7C4  72                 	db	114	;'r'
  5207  00F7C5  6F                 	db	111	;'o'
  5208  00F7C6  72                 	db	114	;'r'
  5209  00F7C7  20                 	db	32
  5210  00F7C8  44                 	db	68	;'D'
  5211  00F7C9  65                 	db	101	;'e'
  5212  00F7CA  74                 	db	116	;'t'
  5213  00F7CB  65                 	db	101	;'e'
  5214  00F7CC  63                 	db	99	;'c'
  5215  00F7CD  74                 	db	116	;'t'
  5216  00F7CE  65                 	db	101	;'e'
  5217  00F7CF  64                 	db	100	;'d'
  5218  00F7D0  0A                 	db	10
  5219  00F7D1  0D                 	db	13
  5220  00F7D2  00                 	db	0
  5221  00F7D3                     STR_9:
  5222  00F7D3  55                 	db	85	;'U'
  5223  00F7D4  73                 	db	115	;'s'
  5224  00F7D5  65                 	db	101	;'e'
  5225  00F7D6  72                 	db	114	;'r'
  5226  00F7D7  20                 	db	32
  5227  00F7D8  69                 	db	105	;'i'
  5228  00F7D9  6E                 	db	110	;'n'
  5229  00F7DA  70                 	db	112	;'p'
  5230  00F7DB  75                 	db	117	;'u'
  5231  00F7DC  74                 	db	116	;'t'
  5232  00F7DD  20                 	db	32
  5233  00F7DE  61                 	db	97	;'a'
  5234  00F7DF  70                 	db	112	;'p'
  5235  00F7E0  70                 	db	112	;'p'
  5236  00F7E1  65                 	db	101	;'e'
  5237  00F7E2  61                 	db	97	;'a'
  5238  00F7E3  72                 	db	114	;'r'
  5239  00F7E4  73                 	db	115	;'s'
  5240  00F7E5  20                 	db	32
  5241  00F7E6  69                 	db	105	;'i'
  5242  00F7E7  6E                 	db	110	;'n'
  5243  00F7E8  20                 	db	32
  5244  00F7E9  77                 	db	119	;'w'
  5245  00F7EA  68                 	db	104	;'h'
  5246  00F7EB  69                 	db	105	;'i'
  5247  00F7EC  74                 	db	116	;'t'
  5248  00F7ED  65                 	db	101	;'e'
  5249  00F7EE  0A                 	db	10
  5250  00F7EF  0D                 	db	13
  5251  00F7F0  00                 	db	0
  5252  00F7F1                     STR_242:
  5253  00F7F1  20                 	db	32
  5254  00F7F2  20                 	db	32
  5255  00F7F3  20                 	db	32
  5256  00F7F4  20                 	db	32
  5257  00F7F5  41                 	db	65	;'A'
  5258  00F7F6  44                 	db	68	;'D'
  5259  00F7F7  43                 	db	67	;'C'
  5260  00F7F8  20                 	db	32
  5261  00F7F9  65                 	db	101	;'e'
  5262  00F7FA  72                 	db	114	;'r'
  5263  00F7FB  72                 	db	114	;'r'
  5264  00F7FC  6F                 	db	111	;'o'
  5265  00F7FD  72                 	db	114	;'r'
  5266  00F7FE  28                 	db	40
  5267  00F7FF  73                 	db	115	;'s'
  5268  00F800  29                 	db	41
  5269  00F801  20                 	db	32
  5270  00F802  64                 	db	100	;'d'
  5271  00F803  65                 	db	101	;'e'
  5272  00F804  74                 	db	116	;'t'
  5273  00F805  65                 	db	101	;'e'
  5274  00F806  63                 	db	99	;'c'
  5275  00F807  74                 	db	116	;'t'
  5276  00F808  65                 	db	101	;'e'
  5277  00F809  64                 	db	100	;'d'
  5278  00F80A  21                 	db	33
  5279  00F80B  0A                 	db	10
  5280  00F80C  0D                 	db	13
  5281  00F80D  00                 	db	0
  5282  00F80E                     STR_227:
  5283  00F80E  45                 	db	69	;'E'
  5284  00F80F  6E                 	db	110	;'n'
  5285  00F810  61                 	db	97	;'a'
  5286  00F811  62                 	db	98	;'b'
  5287  00F812  6C                 	db	108	;'l'
  5288  00F813  69                 	db	105	;'i'
  5289  00F814  6E                 	db	110	;'n'
  5290  00F815  67                 	db	103	;'g'
  5291  00F816  20                 	db	32
  5292  00F817  6C                 	db	108	;'l'
  5293  00F818  69                 	db	105	;'i'
  5294  00F819  76                 	db	118	;'v'
  5295  00F81A  65                 	db	101	;'e'
  5296  00F81B  20                 	db	32
  5297  00F81C  6D                 	db	109	;'m'
  5298  00F81D  65                 	db	101	;'e'
  5299  00F81E  61                 	db	97	;'a'
  5300  00F81F  73                 	db	115	;'s'
  5301  00F820  75                 	db	117	;'u'
  5302  00F821  72                 	db	114	;'r'
  5303  00F822  65                 	db	101	;'e'
  5304  00F823  6D                 	db	109	;'m'
  5305  00F824  65                 	db	101	;'e'
  5306  00F825  6E                 	db	110	;'n'
  5307  00F826  74                 	db	116	;'t'
  5308  00F827  73                 	db	115	;'s'
  5309  00F828  0A                 	db	10
  5310  00F829  0D                 	db	13
  5311  00F82A  00                 	db	0
  5312  00F82B                     STR_249:
  5313  00F82B  20                 	db	32
  5314  00F82C  20                 	db	32
  5315  00F82D  20                 	db	32
  5316  00F82E  20                 	db	32
  5317  00F82F  20                 	db	32
  5318  00F830  20                 	db	32
  5319  00F831  20                 	db	32
  5320  00F832  20                 	db	32
  5321  00F833  49                 	db	73	;'I'
  5322  00F834  32                 	db	50	;'2'
  5323  00F835  43                 	db	67	;'C'
  5324  00F836  20                 	db	32
  5325  00F837  47                 	db	71	;'G'
  5326  00F838  65                 	db	101	;'e'
  5327  00F839  6E                 	db	110	;'n'
  5328  00F83A  65                 	db	101	;'e'
  5329  00F83B  72                 	db	114	;'r'
  5330  00F83C  61                 	db	97	;'a'
  5331  00F83D  6C                 	db	108	;'l'
  5332  00F83E  20                 	db	32
  5333  00F83F  45                 	db	69	;'E'
  5334  00F840  72                 	db	114	;'r'
  5335  00F841  72                 	db	114	;'r'
  5336  00F842  6F                 	db	111	;'o'
  5337  00F843  72                 	db	114	;'r'
  5338  00F844  0A                 	db	10
  5339  00F845  0D                 	db	13
  5340  00F846  00                 	db	0
  5341  00F847                     STR_244:
  5342  00F847  20                 	db	32
  5343  00F848  20                 	db	32
  5344  00F849  20                 	db	32
  5345  00F84A  20                 	db	32
  5346  00F84B  20                 	db	32
  5347  00F84C  20                 	db	32
  5348  00F84D  20                 	db	32
  5349  00F84E  20                 	db	32
  5350  00F84F  47                 	db	71	;'G'
  5351  00F850  65                 	db	101	;'e'
  5352  00F851  6E                 	db	110	;'n'
  5353  00F852  65                 	db	101	;'e'
  5354  00F853  72                 	db	114	;'r'
  5355  00F854  61                 	db	97	;'a'
  5356  00F855  6C                 	db	108	;'l'
  5357  00F856  20                 	db	32
  5358  00F857  41                 	db	65	;'A'
  5359  00F858  44                 	db	68	;'D'
  5360  00F859  43                 	db	67	;'C'
  5361  00F85A  20                 	db	32
  5362  00F85B  65                 	db	101	;'e'
  5363  00F85C  72                 	db	114	;'r'
  5364  00F85D  72                 	db	114	;'r'
  5365  00F85E  6F                 	db	111	;'o'
  5366  00F85F  72                 	db	114	;'r'
  5367  00F860  0A                 	db	10
  5368  00F861  0D                 	db	13
  5369  00F862  00                 	db	0
  5370  00F863                     STR_12:
  5371  00F863  50                 	db	80	;'P'
  5372  00F864  72                 	db	114	;'r'
  5373  00F865  65                 	db	101	;'e'
  5374  00F866  73                 	db	115	;'s'
  5375  00F867  73                 	db	115	;'s'
  5376  00F868  20                 	db	32
  5377  00F869  65                 	db	101	;'e'
  5378  00F86A  6E                 	db	110	;'n'
  5379  00F86B  74                 	db	116	;'t'
  5380  00F86C  65                 	db	101	;'e'
  5381  00F86D  72                 	db	114	;'r'
  5382  00F86E  20                 	db	32
  5383  00F86F  6B                 	db	107	;'k'
  5384  00F870  65                 	db	101	;'e'
  5385  00F871  79                 	db	121	;'y'
  5386  00F872  20                 	db	32
  5387  00F873  74                 	db	116	;'t'
  5388  00F874  6F                 	db	111	;'o'
  5389  00F875  20                 	db	32
  5390  00F876  65                 	db	101	;'e'
  5391  00F877  78                 	db	120	;'x'
  5392  00F878  69                 	db	105	;'i'
  5393  00F879  74                 	db	116	;'t'
  5394  00F87A  0A                 	db	10
  5395  00F87B  0D                 	db	13
  5396  00F87C  0A                 	db	10
  5397  00F87D  0D                 	db	13
  5398  00F87E  00                 	db	0
  5399  00F87F  54                 	db	84	;'T'
  5400  00F880  65                 	db	101	;'e'
  5401  00F881  73                 	db	115	;'s'
  5402  00F882  74                 	db	116	;'t'
  5403  00F883  69                 	db	105	;'i'
  5404  00F884  6E                 	db	110	;'n'
  5405  00F885  67                 	db	103	;'g'
  5406  00F886  20                 	db	32
  5407  00F887  74                 	db	116	;'t'
  5408  00F888  65                 	db	101	;'e'
  5409  00F889  78                 	db	120	;'x'
  5410  00F88A  74                 	db	116	;'t'
  5411  00F88B  20                 	db	32
  5412  00F88C  61                 	db	97	;'a'
  5413  00F88D  74                 	db	116	;'t'
  5414  00F88E  74                 	db	116	;'t'
  5415  00F88F  72                 	db	114	;'r'
  5416  00F890  69                 	db	105	;'i'
  5417  00F891  62                 	db	98	;'b'
  5418  00F892  75                 	db	117	;'u'
  5419  00F893  74                 	db	116	;'t'
  5420  00F894  65                 	db	101	;'e'
  5421  00F895  73                 	db	115	;'s'
  5422  00F896  3A                 	db	58	;':'
  5423  00F897  0A                 	db	10
  5424  00F898  0D                 	db	13
  5425  00F899  00                 	db	0
  5426  00F89A  54                 	db	84	;'T'
  5427  00F89B  68                 	db	104	;'h'
  5428  00F89C  69                 	db	105	;'i'
  5429  00F89D  73                 	db	115	;'s'
  5430  00F89E  20                 	db	32
  5431  00F89F  74                 	db	116	;'t'
  5432  00F8A0  65                 	db	101	;'e'
  5433  00F8A1  78                 	db	120	;'x'
  5434  00F8A2  74                 	db	116	;'t'
  5435  00F8A3  20                 	db	32
  5436  00F8A4  69                 	db	105	;'i'
  5437  00F8A5  73                 	db	115	;'s'
  5438  00F8A6  20                 	db	32
  5439  00F8A7  75                 	db	117	;'u'
  5440  00F8A8  6E                 	db	110	;'n'
  5441  00F8A9  64                 	db	100	;'d'
  5442  00F8AA  65                 	db	101	;'e'
  5443  00F8AB  72                 	db	114	;'r'
  5444  00F8AC  73                 	db	115	;'s'
  5445  00F8AD  63                 	db	99	;'c'
  5446  00F8AE  6F                 	db	111	;'o'
  5447  00F8AF  72                 	db	114	;'r'
  5448  00F8B0  65                 	db	101	;'e'
  5449  00F8B1  64                 	db	100	;'d'
  5450  00F8B2  0A                 	db	10
  5451  00F8B3  0D                 	db	13
  5452  00F8B4  00                 	db	0
  5453  00F8B5                     STR_280:
  5454  00F8B5  20                 	db	32
  5455  00F8B6  20                 	db	32
  5456  00F8B7  20                 	db	32
  5457  00F8B8  20                 	db	32
  5458  00F8B9  53                 	db	83	;'S'
  5459  00F8BA  79                 	db	121	;'y'
  5460  00F8BB  73                 	db	115	;'s'
  5461  00F8BC  74                 	db	116	;'t'
  5462  00F8BD  65                 	db	101	;'e'
  5463  00F8BE  6D                 	db	109	;'m'
  5464  00F8BF  20                 	db	32
  5465  00F8C0  54                 	db	84	;'T'
  5466  00F8C1  65                 	db	101	;'e'
  5467  00F8C2  6D                 	db	109	;'m'
  5468  00F8C3  70                 	db	112	;'p'
  5469  00F8C4  65                 	db	101	;'e'
  5470  00F8C5  72                 	db	114	;'r'
  5471  00F8C6  61                 	db	97	;'a'
  5472  00F8C7  74                 	db	116	;'t'
  5473  00F8C8  75                 	db	117	;'u'
  5474  00F8C9  72                 	db	114	;'r'
  5475  00F8CA  65                 	db	101	;'e'
  5476  00F8CB  73                 	db	115	;'s'
  5477  00F8CC  3A                 	db	58	;':'
  5478  00F8CD  0A                 	db	10
  5479  00F8CE  0D                 	db	13
  5480  00F8CF  00                 	db	0
  5481  00F8D0                     STR_29:
  5482  00F8D0  52                 	db	82	;'R'
  5483  00F8D1  45                 	db	69	;'E'
  5484  00F8D2  53                 	db	83	;'S'
  5485  00F8D3  45                 	db	69	;'E'
  5486  00F8D4  54                 	db	84	;'T'
  5487  00F8D5  20                 	db	32
  5488  00F8D6  49                 	db	73	;'I'
  5489  00F8D7  6E                 	db	110	;'n'
  5490  00F8D8  73                 	db	115	;'s'
  5491  00F8D9  74                 	db	116	;'t'
  5492  00F8DA  72                 	db	114	;'r'
  5493  00F8DB  75                 	db	117	;'u'
  5494  00F8DC  63                 	db	99	;'c'
  5495  00F8DD  74                 	db	116	;'t'
  5496  00F8DE  69                 	db	105	;'i'
  5497  00F8DF  6F                 	db	111	;'o'
  5498  00F8E0  6E                 	db	110	;'n'
  5499  00F8E1  20                 	db	32
  5500  00F8E2  45                 	db	69	;'E'
  5501  00F8E3  78                 	db	120	;'x'
  5502  00F8E4  65                 	db	101	;'e'
  5503  00F8E5  63                 	db	99	;'c'
  5504  00F8E6  75                 	db	117	;'u'
  5505  00F8E7  74                 	db	116	;'t'
  5506  00F8E8  65                 	db	101	;'e'
  5507  00F8E9  64                 	db	100	;'d'
  5508  00F8EA  00                 	db	0
  5509  00F8EB                     STR_226:
  5510  00F8EB  45                 	db	69	;'E'
  5511  00F8EC  6E                 	db	110	;'n'
  5512  00F8ED  61                 	db	97	;'a'
  5513  00F8EE  62                 	db	98	;'b'
  5514  00F8EF  6C                 	db	108	;'l'
  5515  00F8F0  65                 	db	101	;'e'
  5516  00F8F1  20                 	db	32
  5517  00F8F2  4C                 	db	76	;'L'
  5518  00F8F3  69                 	db	105	;'i'
  5519  00F8F4  76                 	db	118	;'v'
  5520  00F8F5  65                 	db	101	;'e'
  5521  00F8F6  20                 	db	32
  5522  00F8F7  4D                 	db	77	;'M'
  5523  00F8F8  65                 	db	101	;'e'
  5524  00F8F9  61                 	db	97	;'a'
  5525  00F8FA  73                 	db	115	;'s'
  5526  00F8FB  75                 	db	117	;'u'
  5527  00F8FC  72                 	db	114	;'r'
  5528  00F8FD  65                 	db	101	;'e'
  5529  00F8FE  6D                 	db	109	;'m'
  5530  00F8FF  65                 	db	101	;'e'
  5531  00F900  6E                 	db	110	;'n'
  5532  00F901  74                 	db	116	;'t'
  5533  00F902  73                 	db	115	;'s'
  5534  00F903  00                 	db	0
  5535  00F904  54                 	db	84	;'T'
  5536  00F905  68                 	db	104	;'h'
  5537  00F906  69                 	db	105	;'i'
  5538  00F907  73                 	db	115	;'s'
  5539  00F908  20                 	db	32
  5540  00F909  74                 	db	116	;'t'
  5541  00F90A  65                 	db	101	;'e'
  5542  00F90B  78                 	db	120	;'x'
  5543  00F90C  74                 	db	116	;'t'
  5544  00F90D  20                 	db	32
  5545  00F90E  69                 	db	105	;'i'
  5546  00F90F  73                 	db	115	;'s'
  5547  00F910  20                 	db	32
  5548  00F911  6E                 	db	110	;'n'
  5549  00F912  6F                 	db	111	;'o'
  5550  00F913  72                 	db	114	;'r'
  5551  00F914  6D                 	db	109	;'m'
  5552  00F915  61                 	db	97	;'a'
  5553  00F916  6C                 	db	108	;'l'
  5554  00F917  0A                 	db	10
  5555  00F918  0D                 	db	13
  5556  00F919  0A                 	db	10
  5557  00F91A  0D                 	db	13
  5558  00F91B  00                 	db	0
  5559  00F91C  54                 	db	84	;'T'
  5560  00F91D  68                 	db	104	;'h'
  5561  00F91E  69                 	db	105	;'i'
  5562  00F91F  73                 	db	115	;'s'
  5563  00F920  20                 	db	32
  5564  00F921  74                 	db	116	;'t'
  5565  00F922  65                 	db	101	;'e'
  5566  00F923  78                 	db	120	;'x'
  5567  00F924  74                 	db	116	;'t'
  5568  00F925  20                 	db	32
  5569  00F926  69                 	db	105	;'i'
  5570  00F927  73                 	db	115	;'s'
  5571  00F928  20                 	db	32
  5572  00F929  72                 	db	114	;'r'
  5573  00F92A  65                 	db	101	;'e'
  5574  00F92B  76                 	db	118	;'v'
  5575  00F92C  65                 	db	101	;'e'
  5576  00F92D  72                 	db	114	;'r'
  5577  00F92E  73                 	db	115	;'s'
  5578  00F92F  65                 	db	101	;'e'
  5579  00F930  64                 	db	100	;'d'
  5580  00F931  0A                 	db	10
  5581  00F932  0D                 	db	13
  5582  00F933  00                 	db	0
  5583  00F934  54                 	db	84	;'T'
  5584  00F935  68                 	db	104	;'h'
  5585  00F936  69                 	db	105	;'i'
  5586  00F937  73                 	db	115	;'s'
  5587  00F938  20                 	db	32
  5588  00F939  74                 	db	116	;'t'
  5589  00F93A  65                 	db	101	;'e'
  5590  00F93B  78                 	db	120	;'x'
  5591  00F93C  74                 	db	116	;'t'
  5592  00F93D  20                 	db	32
  5593  00F93E  69                 	db	105	;'i'
  5594  00F93F  73                 	db	115	;'s'
  5595  00F940  20                 	db	32
  5596  00F941  62                 	db	98	;'b'
  5597  00F942  6C                 	db	108	;'l'
  5598  00F943  69                 	db	105	;'i'
  5599  00F944  6E                 	db	110	;'n'
  5600  00F945  6B                 	db	107	;'k'
  5601  00F946  69                 	db	105	;'i'
  5602  00F947  6E                 	db	110	;'n'
  5603  00F948  67                 	db	103	;'g'
  5604  00F949  0A                 	db	10
  5605  00F94A  0D                 	db	13
  5606  00F94B  00                 	db	0
  5607  00F94C                     STR_220:
  5608  00F94C  55                 	db	85	;'U'
  5609  00F94D  41                 	db	65	;'A'
  5610  00F94E  52                 	db	82	;'R'
  5611  00F94F  54                 	db	84	;'T'
  5612  00F950  20                 	db	32
  5613  00F951  65                 	db	101	;'e'
  5614  00F952  72                 	db	114	;'r'
  5615  00F953  72                 	db	114	;'r'
  5616  00F954  6F                 	db	111	;'o'
  5617  00F955  72                 	db	114	;'r'
  5618  00F956  28                 	db	40
  5619  00F957  73                 	db	115	;'s'
  5620  00F958  29                 	db	41
  5621  00F959  20                 	db	32
  5622  00F95A  63                 	db	99	;'c'
  5623  00F95B  6C                 	db	108	;'l'
  5624  00F95C  65                 	db	101	;'e'
  5625  00F95D  61                 	db	97	;'a'
  5626  00F95E  72                 	db	114	;'r'
  5627  00F95F  65                 	db	101	;'e'
  5628  00F960  64                 	db	100	;'d'
  5629  00F961  0A                 	db	10
  5630  00F962  0D                 	db	13
  5631  00F963  00                 	db	0
  5632  00F964  54                 	db	84	;'T'
  5633  00F965  68                 	db	104	;'h'
  5634  00F966  69                 	db	105	;'i'
  5635  00F967  73                 	db	115	;'s'
  5636  00F968  20                 	db	32
  5637  00F969  74                 	db	116	;'t'
  5638  00F96A  65                 	db	101	;'e'
  5639  00F96B  78                 	db	120	;'x'
  5640  00F96C  74                 	db	116	;'t'
  5641  00F96D  20                 	db	32
  5642  00F96E  69                 	db	105	;'i'
  5643  00F96F  73                 	db	115	;'s'
  5644  00F970  20                 	db	32
  5645  00F971  6D                 	db	109	;'m'
  5646  00F972  61                 	db	97	;'a'
  5647  00F973  67                 	db	103	;'g'
  5648  00F974  65                 	db	101	;'e'
  5649  00F975  6E                 	db	110	;'n'
  5650  00F976  74                 	db	116	;'t'
  5651  00F977  61                 	db	97	;'a'
  5652  00F978  0A                 	db	10
  5653  00F979  0D                 	db	13
  5654  00F97A  00                 	db	0
  5655  00F97B                     STR_263:
  5656  00F97B  20                 	db	32
  5657  00F97C  20                 	db	32
  5658  00F97D  20                 	db	32
  5659  00F97E  20                 	db	32
  5660  00F97F  53                 	db	83	;'S'
  5661  00F980  79                 	db	121	;'y'
  5662  00F981  73                 	db	115	;'s'
  5663  00F982  74                 	db	116	;'t'
  5664  00F983  65                 	db	101	;'e'
  5665  00F984  6D                 	db	109	;'m'
  5666  00F985  20                 	db	32
  5667  00F986  56                 	db	86	;'V'
  5668  00F987  6F                 	db	111	;'o'
  5669  00F988  6C                 	db	108	;'l'
  5670  00F989  74                 	db	116	;'t'
  5671  00F98A  61                 	db	97	;'a'
  5672  00F98B  67                 	db	103	;'g'
  5673  00F98C  65                 	db	101	;'e'
  5674  00F98D  73                 	db	115	;'s'
  5675  00F98E  3A                 	db	58	;':'
  5676  00F98F  0A                 	db	10
  5677  00F990  0D                 	db	13
  5678  00F991  00                 	db	0
  5679  00F992                     STR_266:
  5680  00F992  20                 	db	32
  5681  00F993  20                 	db	32
  5682  00F994  20                 	db	32
  5683  00F995  20                 	db	32
  5684  00F996  53                 	db	83	;'S'
  5685  00F997  79                 	db	121	;'y'
  5686  00F998  73                 	db	115	;'s'
  5687  00F999  74                 	db	116	;'t'
  5688  00F99A  65                 	db	101	;'e'
  5689  00F99B  6D                 	db	109	;'m'
  5690  00F99C  20                 	db	32
  5691  00F99D  43                 	db	67	;'C'
  5692  00F99E  75                 	db	117	;'u'
  5693  00F99F  72                 	db	114	;'r'
  5694  00F9A0  72                 	db	114	;'r'
  5695  00F9A1  65                 	db	101	;'e'
  5696  00F9A2  6E                 	db	110	;'n'
  5697  00F9A3  74                 	db	116	;'t'
  5698  00F9A4  73                 	db	115	;'s'
  5699  00F9A5  3A                 	db	58	;':'
  5700  00F9A6  0A                 	db	10
  5701  00F9A7  0D                 	db	13
  5702  00F9A8  00                 	db	0
  5703  00F9A9                     STR_216:
  5704  00F9A9  41                 	db	65	;'A'
  5705  00F9AA  44                 	db	68	;'D'
  5706  00F9AB  43                 	db	67	;'C'
  5707  00F9AC  20                 	db	32
  5708  00F9AD  45                 	db	69	;'E'
  5709  00F9AE  72                 	db	114	;'r'
  5710  00F9AF  72                 	db	114	;'r'
  5711  00F9B0  6F                 	db	111	;'o'
  5712  00F9B1  72                 	db	114	;'r'
  5713  00F9B2  28                 	db	40
  5714  00F9B3  73                 	db	115	;'s'
  5715  00F9B4  29                 	db	41
  5716  00F9B5  20                 	db	32
  5717  00F9B6  63                 	db	99	;'c'
  5718  00F9B7  6C                 	db	108	;'l'
  5719  00F9B8  65                 	db	101	;'e'
  5720  00F9B9  61                 	db	97	;'a'
  5721  00F9BA  72                 	db	114	;'r'
  5722  00F9BB  65                 	db	101	;'e'
  5723  00F9BC  64                 	db	100	;'d'
  5724  00F9BD  0A                 	db	10
  5725  00F9BE  0D                 	db	13
  5726  00F9BF  00                 	db	0
  5727  00F9C0                     STR_218:
  5728  00F9C0  49                 	db	73	;'I'
  5729  00F9C1  32                 	db	50	;'2'
  5730  00F9C2  43                 	db	67	;'C'
  5731  00F9C3  20                 	db	32
  5732  00F9C4  65                 	db	101	;'e'
  5733  00F9C5  72                 	db	114	;'r'
  5734  00F9C6  72                 	db	114	;'r'
  5735  00F9C7  6F                 	db	111	;'o'
  5736  00F9C8  72                 	db	114	;'r'
  5737  00F9C9  28                 	db	40
  5738  00F9CA  73                 	db	115	;'s'
  5739  00F9CB  29                 	db	41
  5740  00F9CC  20                 	db	32
  5741  00F9CD  63                 	db	99	;'c'
  5742  00F9CE  6C                 	db	108	;'l'
  5743  00F9CF  65                 	db	101	;'e'
  5744  00F9D0  61                 	db	97	;'a'
  5745  00F9D1  72                 	db	114	;'r'
  5746  00F9D2  65                 	db	101	;'e'
  5747  00F9D3  64                 	db	100	;'d'
  5748  00F9D4  0A                 	db	10
  5749  00F9D5  0D                 	db	13
  5750  00F9D6  00                 	db	0
  5751  00F9D7                     STR_11:
  5752  00F9D7  4C                 	db	76	;'L'
  5753  00F9D8  69                 	db	105	;'i'
  5754  00F9D9  76                 	db	118	;'v'
  5755  00F9DA  65                 	db	101	;'e'
  5756  00F9DB  20                 	db	32
  5757  00F9DC  4D                 	db	77	;'M'
  5758  00F9DD  65                 	db	101	;'e'
  5759  00F9DE  61                 	db	97	;'a'
  5760  00F9DF  73                 	db	115	;'s'
  5761  00F9E0  75                 	db	117	;'u'
  5762  00F9E1  72                 	db	114	;'r'
  5763  00F9E2  65                 	db	101	;'e'
  5764  00F9E3  6D                 	db	109	;'m'
  5765  00F9E4  65                 	db	101	;'e'
  5766  00F9E5  6E                 	db	110	;'n'
  5767  00F9E6  74                 	db	116	;'t'
  5768  00F9E7  73                 	db	115	;'s'
  5769  00F9E8  3A                 	db	58	;':'
  5770  00F9E9  0A                 	db	10
  5771  00F9EA  0D                 	db	13
  5772  00F9EB  0A                 	db	10
  5773  00F9EC  0D                 	db	13
  5774  00F9ED  00                 	db	0
  5775  00F9EE  54                 	db	84	;'T'
  5776  00F9EF  68                 	db	104	;'h'
  5777  00F9F0  69                 	db	105	;'i'
  5778  00F9F1  73                 	db	115	;'s'
  5779  00F9F2  20                 	db	32
  5780  00F9F3  74                 	db	116	;'t'
  5781  00F9F4  65                 	db	101	;'e'
  5782  00F9F5  78                 	db	120	;'x'
  5783  00F9F6  74                 	db	116	;'t'
  5784  00F9F7  20                 	db	32
  5785  00F9F8  69                 	db	105	;'i'
  5786  00F9F9  73                 	db	115	;'s'
  5787  00F9FA  20                 	db	32
  5788  00F9FB  79                 	db	121	;'y'
  5789  00F9FC  65                 	db	101	;'e'
  5790  00F9FD  6C                 	db	108	;'l'
  5791  00F9FE  6C                 	db	108	;'l'
  5792  00F9FF  6F                 	db	111	;'o'
  5793  00FA00  77                 	db	119	;'w'
  5794  00FA01  0A                 	db	10
  5795  00FA02  0D                 	db	13
  5796  00FA03  00                 	db	0
  5797  00FA04                     STR_230:
  5798  00FA04  41                 	db	65	;'A'
  5799  00FA05  76                 	db	118	;'v'
  5800  00FA06  61                 	db	97	;'a'
  5801  00FA07  69                 	db	105	;'i'
  5802  00FA08  6C                 	db	108	;'l'
  5803  00FA09  61                 	db	97	;'a'
  5804  00FA0A  62                 	db	98	;'b'
  5805  00FA0B  6C                 	db	108	;'l'
  5806  00FA0C  65                 	db	101	;'e'
  5807  00FA0D  20                 	db	32
  5808  00FA0E  43                 	db	67	;'C'
  5809  00FA0F  6F                 	db	111	;'o'
  5810  00FA10  6D                 	db	109	;'m'
  5811  00FA11  6D                 	db	109	;'m'
  5812  00FA12  61                 	db	97	;'a'
  5813  00FA13  6E                 	db	110	;'n'
  5814  00FA14  64                 	db	100	;'d'
  5815  00FA15  73                 	db	115	;'s'
  5816  00FA16  3A                 	db	58	;':'
  5817  00FA17  0A                 	db	10
  5818  00FA18  0D                 	db	13
  5819  00FA19  00                 	db	0
  5820  00FA1A                     STR_222:
  5821  00FA1A  43                 	db	67	;'C'
  5822  00FA1B  75                 	db	117	;'u'
  5823  00FA1C  72                 	db	114	;'r'
  5824  00FA1D  72                 	db	114	;'r'
  5825  00FA1E  65                 	db	101	;'e'
  5826  00FA1F  6E                 	db	110	;'n'
  5827  00FA20  74                 	db	116	;'t'
  5828  00FA21  20                 	db	32
  5829  00FA22  4D                 	db	77	;'M'
  5830  00FA23  65                 	db	101	;'e'
  5831  00FA24  61                 	db	97	;'a'
  5832  00FA25  73                 	db	115	;'s'
  5833  00FA26  75                 	db	117	;'u'
  5834  00FA27  72                 	db	114	;'r'
  5835  00FA28  65                 	db	101	;'e'
  5836  00FA29  6D                 	db	109	;'m'
  5837  00FA2A  65                 	db	101	;'e'
  5838  00FA2B  6E                 	db	110	;'n'
  5839  00FA2C  74                 	db	116	;'t'
  5840  00FA2D  73                 	db	115	;'s'
  5841  00FA2E  3F                 	db	63	;'?'
  5842  00FA2F  00                 	db	0
  5843  00FA30                     STR_31:
  5844  00FA30  53                 	db	83	;'S'
  5845  00FA31  74                 	db	116	;'t'
  5846  00FA32  61                 	db	97	;'a'
  5847  00FA33  63                 	db	99	;'c'
  5848  00FA34  6B                 	db	107	;'k'
  5849  00FA35  20                 	db	32
  5850  00FA36  55                 	db	85	;'U'
  5851  00FA37  6E                 	db	110	;'n'
  5852  00FA38  64                 	db	100	;'d'
  5853  00FA39  65                 	db	101	;'e'
  5854  00FA3A  72                 	db	114	;'r'
  5855  00FA3B  66                 	db	102	;'f'
  5856  00FA3C  6C                 	db	108	;'l'
  5857  00FA3D  6F                 	db	111	;'o'
  5858  00FA3E  77                 	db	119	;'w'
  5859  00FA3F  20                 	db	32
  5860  00FA40  52                 	db	82	;'R'
  5861  00FA41  65                 	db	101	;'e'
  5862  00FA42  73                 	db	115	;'s'
  5863  00FA43  65                 	db	101	;'e'
  5864  00FA44  74                 	db	116	;'t'
  5865  00FA45  00                 	db	0
  5866  00FA46  54                 	db	84	;'T'
  5867  00FA47  68                 	db	104	;'h'
  5868  00FA48  69                 	db	105	;'i'
  5869  00FA49  73                 	db	115	;'s'
  5870  00FA4A  20                 	db	32
  5871  00FA4B  74                 	db	116	;'t'
  5872  00FA4C  65                 	db	101	;'e'
  5873  00FA4D  78                 	db	120	;'x'
  5874  00FA4E  74                 	db	116	;'t'
  5875  00FA4F  20                 	db	32
  5876  00FA50  69                 	db	105	;'i'
  5877  00FA51  73                 	db	115	;'s'
  5878  00FA52  20                 	db	32
  5879  00FA53  62                 	db	98	;'b'
  5880  00FA54  6C                 	db	108	;'l'
  5881  00FA55  61                 	db	97	;'a'
  5882  00FA56  63                 	db	99	;'c'
  5883  00FA57  6B                 	db	107	;'k'
  5884  00FA58  0A                 	db	10
  5885  00FA59  0D                 	db	13
  5886  00FA5A  00                 	db	0
  5887  00FA5B  54                 	db	84	;'T'
  5888  00FA5C  68                 	db	104	;'h'
  5889  00FA5D  69                 	db	105	;'i'
  5890  00FA5E  73                 	db	115	;'s'
  5891  00FA5F  20                 	db	32
  5892  00FA60  74                 	db	116	;'t'
  5893  00FA61  65                 	db	101	;'e'
  5894  00FA62  78                 	db	120	;'x'
  5895  00FA63  74                 	db	116	;'t'
  5896  00FA64  20                 	db	32
  5897  00FA65  69                 	db	105	;'i'
  5898  00FA66  73                 	db	115	;'s'
  5899  00FA67  20                 	db	32
  5900  00FA68  67                 	db	103	;'g'
  5901  00FA69  72                 	db	114	;'r'
  5902  00FA6A  65                 	db	101	;'e'
  5903  00FA6B  65                 	db	101	;'e'
  5904  00FA6C  6E                 	db	110	;'n'
  5905  00FA6D  0A                 	db	10
  5906  00FA6E  0D                 	db	13
  5907  00FA6F  00                 	db	0
  5908  00FA70                     STR_30:
  5909  00FA70  53                 	db	83	;'S'
  5910  00FA71  74                 	db	116	;'t'
  5911  00FA72  61                 	db	97	;'a'
  5912  00FA73  63                 	db	99	;'c'
  5913  00FA74  6B                 	db	107	;'k'
  5914  00FA75  20                 	db	32
  5915  00FA76  4F                 	db	79	;'O'
  5916  00FA77  76                 	db	118	;'v'
  5917  00FA78  65                 	db	101	;'e'
  5918  00FA79  72                 	db	114	;'r'
  5919  00FA7A  66                 	db	102	;'f'
  5920  00FA7B  6C                 	db	108	;'l'
  5921  00FA7C  6F                 	db	111	;'o'
  5922  00FA7D  77                 	db	119	;'w'
  5923  00FA7E  20                 	db	32
  5924  00FA7F  52                 	db	82	;'R'
  5925  00FA80  65                 	db	101	;'e'
  5926  00FA81  73                 	db	115	;'s'
  5927  00FA82  65                 	db	101	;'e'
  5928  00FA83  74                 	db	116	;'t'
  5929  00FA84  00                 	db	0
  5930  00FA85  54                 	db	84	;'T'
  5931  00FA86  68                 	db	104	;'h'
  5932  00FA87  69                 	db	105	;'i'
  5933  00FA88  73                 	db	115	;'s'
  5934  00FA89  20                 	db	32
  5935  00FA8A  74                 	db	116	;'t'
  5936  00FA8B  65                 	db	101	;'e'
  5937  00FA8C  78                 	db	120	;'x'
  5938  00FA8D  74                 	db	116	;'t'
  5939  00FA8E  20                 	db	32
  5940  00FA8F  69                 	db	105	;'i'
  5941  00FA90  73                 	db	115	;'s'
  5942  00FA91  20                 	db	32
  5943  00FA92  62                 	db	98	;'b'
  5944  00FA93  6F                 	db	111	;'o'
  5945  00FA94  6C                 	db	108	;'l'
  5946  00FA95  64                 	db	100	;'d'
  5947  00FA96  0A                 	db	10
  5948  00FA97  0D                 	db	13
  5949  00FA98  00                 	db	0
  5950  00FA99  54                 	db	84	;'T'
  5951  00FA9A  68                 	db	104	;'h'
  5952  00FA9B  69                 	db	105	;'i'
  5953  00FA9C  73                 	db	115	;'s'
  5954  00FA9D  20                 	db	32
  5955  00FA9E  74                 	db	116	;'t'
  5956  00FA9F  65                 	db	101	;'e'
  5957  00FAA0  78                 	db	120	;'x'
  5958  00FAA1  74                 	db	116	;'t'
  5959  00FAA2  20                 	db	32
  5960  00FAA3  69                 	db	105	;'i'
  5961  00FAA4  73                 	db	115	;'s'
  5962  00FAA5  20                 	db	32
  5963  00FAA6  62                 	db	98	;'b'
  5964  00FAA7  6C                 	db	108	;'l'
  5965  00FAA8  75                 	db	117	;'u'
  5966  00FAA9  65                 	db	101	;'e'
  5967  00FAAA  0A                 	db	10
  5968  00FAAB  0D                 	db	13
  5969  00FAAC  00                 	db	0
  5970  00FAAD  54                 	db	84	;'T'
  5971  00FAAE  68                 	db	104	;'h'
  5972  00FAAF  69                 	db	105	;'i'
  5973  00FAB0  73                 	db	115	;'s'
  5974  00FAB1  20                 	db	32
  5975  00FAB2  74                 	db	116	;'t'
  5976  00FAB3  65                 	db	101	;'e'
  5977  00FAB4  78                 	db	120	;'x'
  5978  00FAB5  74                 	db	116	;'t'
  5979  00FAB6  20                 	db	32
  5980  00FAB7  69                 	db	105	;'i'
  5981  00FAB8  73                 	db	115	;'s'
  5982  00FAB9  20                 	db	32
  5983  00FABA  63                 	db	99	;'c'
  5984  00FABB  79                 	db	121	;'y'
  5985  00FABC  61                 	db	97	;'a'
  5986  00FABD  6E                 	db	110	;'n'
  5987  00FABE  0A                 	db	10
  5988  00FABF  0D                 	db	13
  5989  00FAC0  00                 	db	0
  5990  00FAC1                     STR_269:
  5991  00FAC1  20                 	db	32
  5992  00FAC2  20                 	db	32
  5993  00FAC3  20                 	db	32
  5994  00FAC4  20                 	db	32
  5995  00FAC5  53                 	db	83	;'S'
  5996  00FAC6  79                 	db	121	;'y'
  5997  00FAC7  73                 	db	115	;'s'
  5998  00FAC8  74                 	db	116	;'t'
  5999  00FAC9  65                 	db	101	;'e'
  6000  00FACA  6D                 	db	109	;'m'
  6001  00FACB  20                 	db	32
  6002  00FACC  50                 	db	80	;'P'
  6003  00FACD  6F                 	db	111	;'o'
  6004  00FACE  77                 	db	119	;'w'
  6005  00FACF  65                 	db	101	;'e'
  6006  00FAD0  72                 	db	114	;'r'
  6007  00FAD1  3A                 	db	58	;':'
  6008  00FAD2  0A                 	db	10
  6009  00FAD3  0D                 	db	13
  6010  00FAD4  00                 	db	0
  6011  00FAD5  54                 	db	84	;'T'
  6012  00FAD6  68                 	db	104	;'h'
  6013  00FAD7  69                 	db	105	;'i'
  6014  00FAD8  73                 	db	115	;'s'
  6015  00FAD9  20                 	db	32
  6016  00FADA  74                 	db	116	;'t'
  6017  00FADB  65                 	db	101	;'e'
  6018  00FADC  78                 	db	120	;'x'
  6019  00FADD  74                 	db	116	;'t'
  6020  00FADE  20                 	db	32
  6021  00FADF  69                 	db	105	;'i'
  6022  00FAE0  73                 	db	115	;'s'
  6023  00FAE1  20                 	db	32
  6024  00FAE2  72                 	db	114	;'r'
  6025  00FAE3  65                 	db	101	;'e'
  6026  00FAE4  64                 	db	100	;'d'
  6027  00FAE5  0A                 	db	10
  6028  00FAE6  0D                 	db	13
  6029  00FAE7  00                 	db	0
  6030  00FAE8                     STR_26:
  6031  00FAE8  4D                 	db	77	;'M'
  6032  00FAE9  61                 	db	97	;'a'
  6033  00FAEA  73                 	db	115	;'s'
  6034  00FAEB  74                 	db	116	;'t'
  6035  00FAEC  65                 	db	101	;'e'
  6036  00FAED  72                 	db	114	;'r'
  6037  00FAEE  20                 	db	32
  6038  00FAEF  43                 	db	67	;'C'
  6039  00FAF0  6C                 	db	108	;'l'
  6040  00FAF1  65                 	db	101	;'e'
  6041  00FAF2  61                 	db	97	;'a'
  6042  00FAF3  72                 	db	114	;'r'
  6043  00FAF4  20                 	db	32
  6044  00FAF5  52                 	db	82	;'R'
  6045  00FAF6  65                 	db	101	;'e'
  6046  00FAF7  73                 	db	115	;'s'
  6047  00FAF8  65                 	db	101	;'e'
  6048  00FAF9  74                 	db	116	;'t'
  6049  00FAFA  00                 	db	0
  6050  00FAFB  55                 	db	85	;'U'
  6051  00FAFC  53                 	db	83	;'S'
  6052  00FAFD  42                 	db	66	;'B'
  6053  00FAFE  20                 	db	32
  6054  00FAFF  55                 	db	85	;'U'
  6055  00FB00  41                 	db	65	;'A'
  6056  00FB01  52                 	db	82	;'R'
  6057  00FB02  54                 	db	84	;'T'
  6058  00FB03  20                 	db	32
  6059  00FB04  54                 	db	84	;'T'
  6060  00FB05  65                 	db	101	;'e'
  6061  00FB06  73                 	db	115	;'s'
  6062  00FB07  74                 	db	116	;'t'
  6063  00FB08  0A                 	db	10
  6064  00FB09  0D                 	db	13
  6065  00FB0A  0A                 	db	10
  6066  00FB0B  0D                 	db	13
  6067  00FB0C  00                 	db	0
  6068  00FB0D                     STR_219:
  6069  00FB0D  43                 	db	67	;'C'
  6070  00FB0E  6C                 	db	108	;'l'
  6071  00FB0F  65                 	db	101	;'e'
  6072  00FB10  61                 	db	97	;'a'
  6073  00FB11  72                 	db	114	;'r'
  6074  00FB12  20                 	db	32
  6075  00FB13  55                 	db	85	;'U'
  6076  00FB14  41                 	db	65	;'A'
  6077  00FB15  52                 	db	82	;'R'
  6078  00FB16  54                 	db	84	;'T'
  6079  00FB17  20                 	db	32
  6080  00FB18  45                 	db	69	;'E'
  6081  00FB19  72                 	db	114	;'r'
  6082  00FB1A  72                 	db	114	;'r'
  6083  00FB1B  6F                 	db	111	;'o'
  6084  00FB1C  72                 	db	114	;'r'
  6085  00FB1D  73                 	db	115	;'s'
  6086  00FB1E  00                 	db	0
  6087  00FB1F                     STR_354:
  6088  00FB1F  30                 	db	48	;'0'
  6089  00FB20  31                 	db	49	;'1'
  6090  00FB21  32                 	db	50	;'2'
  6091  00FB22  33                 	db	51	;'3'
  6092  00FB23  34                 	db	52	;'4'
  6093  00FB24  35                 	db	53	;'5'
  6094  00FB25  36                 	db	54	;'6'
  6095  00FB26  37                 	db	55	;'7'
  6096  00FB27  38                 	db	56	;'8'
  6097  00FB28  39                 	db	57	;'9'
  6098  00FB29  41                 	db	65	;'A'
  6099  00FB2A  42                 	db	66	;'B'
  6100  00FB2B  43                 	db	67	;'C'
  6101  00FB2C  44                 	db	68	;'D'
  6102  00FB2D  45                 	db	69	;'E'
  6103  00FB2E  46                 	db	70	;'F'
  6104  00FB2F  00                 	db	0
  6105  00FB30                     STR_217:
  6106  00FB30  43                 	db	67	;'C'
  6107  00FB31  6C                 	db	108	;'l'
  6108  00FB32  65                 	db	101	;'e'
  6109  00FB33  61                 	db	97	;'a'
  6110  00FB34  72                 	db	114	;'r'
  6111  00FB35  20                 	db	32
  6112  00FB36  49                 	db	73	;'I'
  6113  00FB37  32                 	db	50	;'2'
  6114  00FB38  43                 	db	67	;'C'
  6115  00FB39  20                 	db	32
  6116  00FB3A  45                 	db	69	;'E'
  6117  00FB3B  72                 	db	114	;'r'
  6118  00FB3C  72                 	db	114	;'r'
  6119  00FB3D  6F                 	db	111	;'o'
  6120  00FB3E  72                 	db	114	;'r'
  6121  00FB3F  73                 	db	115	;'s'
  6122  00FB40  00                 	db	0
  6123  00FB41                     STR_215:
  6124  00FB41  43                 	db	67	;'C'
  6125  00FB42  6C                 	db	108	;'l'
  6126  00FB43  65                 	db	101	;'e'
  6127  00FB44  61                 	db	97	;'a'
  6128  00FB45  72                 	db	114	;'r'
  6129  00FB46  20                 	db	32
  6130  00FB47  41                 	db	65	;'A'
  6131  00FB48  44                 	db	68	;'D'
  6132  00FB49  43                 	db	67	;'C'
  6133  00FB4A  20                 	db	32
  6134  00FB4B  45                 	db	69	;'E'
  6135  00FB4C  72                 	db	114	;'r'
  6136  00FB4D  72                 	db	114	;'r'
  6137  00FB4E  6F                 	db	111	;'o'
  6138  00FB4F  72                 	db	114	;'r'
  6139  00FB50  73                 	db	115	;'s'
  6140  00FB51  00                 	db	0
  6141  00FB52                     STR_76:
  6142  00FB52  76                 	db	118	;'v'
  6143  00FB53  69                 	db	105	;'i'
  6144  00FB54  61                 	db	97	;'a'
  6145  00FB55  20                 	db	32
  6146  00FB56  55                 	db	85	;'U'
  6147  00FB57  53                 	db	83	;'S'
  6148  00FB58  42                 	db	66	;'B'
  6149  00FB59  2C                 	db	44
  6150  00FB5A  20                 	db	32
  6151  00FB5B  27                 	db	39
  6152  00FB5C  48                 	db	72	;'H'
  6153  00FB5D  65                 	db	101	;'e'
  6154  00FB5E  6C                 	db	108	;'l'
  6155  00FB5F  70                 	db	112	;'p'
  6156  00FB60  27                 	db	39
  6157  00FB61  00                 	db	0
  6158  00FB62                     STR_69:
  6159  00FB62  43                 	db	67	;'C'
  6160  00FB63  4F                 	db	79	;'O'
  6161  00FB64  4D                 	db	77	;'M'
  6162  00FB65  20                 	db	32
  6163  00FB66  50                 	db	80	;'P'
  6164  00FB67  6F                 	db	111	;'o'
  6165  00FB68  72                 	db	114	;'r'
  6166  00FB69  74                 	db	116	;'t'
  6167  00FB6A  20                 	db	32
  6168  00FB6B  53                 	db	83	;'S'
  6169  00FB6C  65                 	db	101	;'e'
  6170  00FB6D  74                 	db	116	;'t'
  6171  00FB6E  75                 	db	117	;'u'
  6172  00FB6F  70                 	db	112	;'p'
  6173  00FB70  3A                 	db	58	;':'
  6174  00FB71  00                 	db	0
  6175  00FB72                     STR_64:
  6176  00FB72  43                 	db	67	;'C'
  6177  00FB73  61                 	db	97	;'a'
  6178  00FB74  75                 	db	117	;'u'
  6179  00FB75  73                 	db	115	;'s'
  6180  00FB76  65                 	db	101	;'e'
  6181  00FB77  20                 	db	32
  6182  00FB78  6F                 	db	111	;'o'
  6183  00FB79  66                 	db	102	;'f'
  6184  00FB7A  20                 	db	32
  6185  00FB7B  52                 	db	82	;'R'
  6186  00FB7C  65                 	db	101	;'e'
  6187  00FB7D  73                 	db	115	;'s'
  6188  00FB7E  65                 	db	101	;'e'
  6189  00FB7F  74                 	db	116	;'t'
  6190  00FB80  3A                 	db	58	;':'
  6191  00FB81  00                 	db	0
  6192  00FB82                     STR_63:
  6193  00FB82  44                 	db	68	;'D'
  6194  00FB83  69                 	db	105	;'i'
  6195  00FB84  67                 	db	103	;'g'
  6196  00FB85  69                 	db	105	;'i'
  6197  00FB86  74                 	db	116	;'t'
  6198  00FB87  61                 	db	97	;'a'
  6199  00FB88  6C                 	db	108	;'l'
  6200  00FB89  20                 	db	32
  6201  00FB8A  4D                 	db	77	;'M'
  6202  00FB8B  6F                 	db	111	;'o'
  6203  00FB8C  6E                 	db	110	;'n'
  6204  00FB8D  69                 	db	105	;'i'
  6205  00FB8E  74                 	db	116	;'t'
  6206  00FB8F  6F                 	db	111	;'o'
  6207  00FB90  72                 	db	114	;'r'
  6208  00FB91  00                 	db	0
  6209  00FB92                     STR_71:
  6210  00FB92  38                 	db	56	;'8'
  6211  00FB93  62                 	db	98	;'b'
  6212  00FB94  69                 	db	105	;'i'
  6213  00FB95  74                 	db	116	;'t'
  6214  00FB96  2C                 	db	44
  6215  00FB97  20                 	db	32
  6216  00FB98  6E                 	db	110	;'n'
  6217  00FB99  6F                 	db	111	;'o'
  6218  00FB9A  20                 	db	32
  6219  00FB9B  70                 	db	112	;'p'
  6220  00FB9C  61                 	db	97	;'a'
  6221  00FB9D  72                 	db	114	;'r'
  6222  00FB9E  69                 	db	105	;'i'
  6223  00FB9F  74                 	db	116	;'t'
  6224  00FBA0  79                 	db	121	;'y'
  6225  00FBA1  00                 	db	0
  6226  00FBA2                     STR_23:
  6227  00FBA2  55                 	db	85	;'U'
  6228  00FBA3  6E                 	db	110	;'n'
  6229  00FBA4  64                 	db	100	;'d'
  6230  00FBA5  65                 	db	101	;'e'
  6231  00FBA6  66                 	db	102	;'f'
  6232  00FBA7  69                 	db	105	;'i'
  6233  00FBA8  6E                 	db	110	;'n'
  6234  00FBA9  65                 	db	101	;'e'
  6235  00FBAA  64                 	db	100	;'d'
  6236  00FBAB  20                 	db	32
  6237  00FBAC  52                 	db	82	;'R'
  6238  00FBAD  65                 	db	101	;'e'
  6239  00FBAE  73                 	db	115	;'s'
  6240  00FBAF  65                 	db	101	;'e'
  6241  00FBB0  74                 	db	116	;'t'
  6242  00FBB1  00                 	db	0
  6243  00FBB2                     STR_25:
  6244  00FBB2  42                 	db	66	;'B'
  6245  00FBB3  72                 	db	114	;'r'
  6246  00FBB4  6F                 	db	111	;'o'
  6247  00FBB5  77                 	db	119	;'w'
  6248  00FBB6  6E                 	db	110	;'n'
  6249  00FBB7  20                 	db	32
  6250  00FBB8  4F                 	db	79	;'O'
  6251  00FBB9  75                 	db	117	;'u'
  6252  00FBBA  74                 	db	116	;'t'
  6253  00FBBB  20                 	db	32
  6254  00FBBC  52                 	db	82	;'R'
  6255  00FBBD  65                 	db	101	;'e'
  6256  00FBBE  73                 	db	115	;'s'
  6257  00FBBF  65                 	db	101	;'e'
  6258  00FBC0  74                 	db	116	;'t'
  6259  00FBC1  00                 	db	0
  6260  00FBC2                     STR_199:
  6261  00FBC2  44                 	db	68	;'D'
  6262  00FBC3  65                 	db	101	;'e'
  6263  00FBC4  76                 	db	118	;'v'
  6264  00FBC5  69                 	db	105	;'i'
  6265  00FBC6  63                 	db	99	;'c'
  6266  00FBC7  65                 	db	101	;'e'
  6267  00FBC8  20                 	db	32
  6268  00FBC9  53                 	db	83	;'S'
  6269  00FBCA  74                 	db	116	;'t'
  6270  00FBCB  61                 	db	97	;'a'
  6271  00FBCC  74                 	db	116	;'t'
  6272  00FBCD  75                 	db	117	;'u'
  6273  00FBCE  73                 	db	115	;'s'
  6274  00FBCF  3F                 	db	63	;'?'
  6275  00FBD0  00                 	db	0
  6276  00FBD1                     STR_166:
  6277  00FBD1  4F                 	db	79	;'O'
  6278  00FBD2  75                 	db	117	;'u'
  6279  00FBD3  74                 	db	116	;'t'
  6280  00FBD4  70                 	db	112	;'p'
  6281  00FBD5  75                 	db	117	;'u'
  6282  00FBD6  74                 	db	116	;'t'
  6283  00FBD7  20                 	db	32
  6284  00FBD8  43                 	db	67	;'C'
  6285  00FBD9  68                 	db	104	;'h'
  6286  00FBDA  61                 	db	97	;'a'
  6287  00FBDB  72                 	db	114	;'r'
  6288  00FBDC  67                 	db	103	;'g'
  6289  00FBDD  65                 	db	101	;'e'
  6290  00FBDE  3A                 	db	58	;':'
  6291  00FBDF  00                 	db	0
  6292  00FBE0                     STR_77:
  6293  00FBE0  43                 	db	67	;'C'
  6294  00FBE1  68                 	db	104	;'h'
  6295  00FBE2  61                 	db	97	;'a'
  6296  00FBE3  72                 	db	114	;'r'
  6297  00FBE4  67                 	db	103	;'g'
  6298  00FBE5  65                 	db	101	;'e'
  6299  00FBE6  20                 	db	32
  6300  00FBE7  53                 	db	83	;'S'
  6301  00FBE8  74                 	db	116	;'t'
  6302  00FBE9  61                 	db	97	;'a'
  6303  00FBEA  74                 	db	116	;'t'
  6304  00FBEB  75                 	db	117	;'u'
  6305  00FBEC  73                 	db	115	;'s'
  6306  00FBED  3A                 	db	58	;':'
  6307  00FBEE  00                 	db	0
  6308  00FBEF                     STR_171:
  6309  00FBEF  4F                 	db	79	;'O'
  6310  00FBF0  75                 	db	117	;'u'
  6311  00FBF1  74                 	db	116	;'t'
  6312  00FBF2  70                 	db	112	;'p'
  6313  00FBF3  75                 	db	117	;'u'
  6314  00FBF4  74                 	db	116	;'t'
  6315  00FBF5  20                 	db	32
  6316  00FBF6  45                 	db	69	;'E'
  6317  00FBF7  6E                 	db	110	;'n'
  6318  00FBF8  65                 	db	101	;'e'
  6319  00FBF9  72                 	db	114	;'r'
  6320  00FBFA  67                 	db	103	;'g'
  6321  00FBFB  79                 	db	121	;'y'
  6322  00FBFC  3A                 	db	58	;':'
  6323  00FBFD  00                 	db	0
  6324  00FBFE                     STR_72:
  6325  00FBFE  31                 	db	49	;'1'
  6326  00FBFF  20                 	db	32
  6327  00FC00  73                 	db	115	;'s'
  6328  00FC01  74                 	db	116	;'t'
  6329  00FC02  70                 	db	112	;'p'
  6330  00FC03  2C                 	db	44
  6331  00FC04  20                 	db	32
  6332  00FC05  6E                 	db	110	;'n'
  6333  00FC06  6F                 	db	111	;'o'
  6334  00FC07  20                 	db	32
  6335  00FC08  66                 	db	102	;'f'
  6336  00FC09  6C                 	db	108	;'l'
  6337  00FC0A  6F                 	db	111	;'o'
  6338  00FC0B  77                 	db	119	;'w'
  6339  00FC0C  00                 	db	0
  6340  00FC0D                     STR_39:
  6341  00FC0D  52                 	db	82	;'R'
  6342  00FC0E  45                 	db	69	;'E'
  6343  00FC0F  53                 	db	83	;'S'
  6344  00FC10  45                 	db	69	;'E'
  6345  00FC11  54                 	db	84	;'T'
  6346  00FC12  20                 	db	32
  6347  00FC13  45                 	db	69	;'E'
  6348  00FC14  78                 	db	120	;'x'
  6349  00FC15  65                 	db	101	;'e'
  6350  00FC16  63                 	db	99	;'c'
  6351  00FC17  75                 	db	117	;'u'
  6352  00FC18  74                 	db	116	;'t'
  6353  00FC19  65                 	db	101	;'e'
  6354  00FC1A  64                 	db	100	;'d'
  6355  00FC1B  00                 	db	0
  6356  00FC1C                     STR_24:
  6357  00FC1C  50                 	db	80	;'P'
  6358  00FC1D  6F                 	db	111	;'o'
  6359  00FC1E  77                 	db	119	;'w'
  6360  00FC1F  65                 	db	101	;'e'
  6361  00FC20  72                 	db	114	;'r'
  6362  00FC21  20                 	db	32
  6363  00FC22  4F                 	db	79	;'O'
  6364  00FC23  6E                 	db	110	;'n'
  6365  00FC24  20                 	db	32
  6366  00FC25  52                 	db	82	;'R'
  6367  00FC26  65                 	db	101	;'e'
  6368  00FC27  73                 	db	115	;'s'
  6369  00FC28  65                 	db	101	;'e'
  6370  00FC29  74                 	db	116	;'t'
  6371  00FC2A  00                 	db	0
  6372  00FC2B                     STR_245:
  6373  00FC2B  20                 	db	32
  6374  00FC2C  20                 	db	32
  6375  00FC2D  20                 	db	32
  6376  00FC2E  20                 	db	32
  6377  00FC2F  20                 	db	32
  6378  00FC30  20                 	db	32
  6379  00FC31  20                 	db	32
  6380  00FC32  20                 	db	32
  6381  00FC33  46                 	db	70	;'F'
  6382  00FC34  56                 	db	86	;'V'
  6383  00FC35  52                 	db	82	;'R'
  6384  00FC36  0A                 	db	10
  6385  00FC37  0D                 	db	13
  6386  00FC38  00                 	db	0
  6387  00FC39                     STR_221:
  6388  00FC39  45                 	db	69	;'E'
  6389  00FC3A  72                 	db	114	;'r'
  6390  00FC3B  72                 	db	114	;'r'
  6391  00FC3C  6F                 	db	111	;'o'
  6392  00FC3D  72                 	db	114	;'r'
  6393  00FC3E  20                 	db	32
  6394  00FC3F  53                 	db	83	;'S'
  6395  00FC40  74                 	db	116	;'t'
  6396  00FC41  61                 	db	97	;'a'
  6397  00FC42  74                 	db	116	;'t'
  6398  00FC43  75                 	db	117	;'u'
  6399  00FC44  73                 	db	115	;'s'
  6400  00FC45  3F                 	db	63	;'?'
  6401  00FC46  00                 	db	0
  6402  00FC47                     STR_62:
  6403  00FC47  51                 	db	81	;'Q'
  6404  00FC48  49                 	db	73	;'I'
  6405  00FC49  20                 	db	32
  6406  00FC4A  43                 	db	67	;'C'
  6407  00FC4B  68                 	db	104	;'h'
  6408  00FC4C  61                 	db	97	;'a'
  6409  00FC4D  72                 	db	114	;'r'
  6410  00FC4E  67                 	db	103	;'g'
  6411  00FC4F  65                 	db	101	;'e'
  6412  00FC50  72                 	db	114	;'r'
  6413  00FC51  20                 	db	32
  6414  00FC52  77                 	db	119	;'w'
  6415  00FC53  2F                 	db	47
  6416  00FC54  00                 	db	0
  6417  00FC55                     STR_80:
  6418  00FC55  2B                 	db	43
  6419  00FC56  31                 	db	49	;'1'
  6420  00FC57  32                 	db	50	;'2'
  6421  00FC58  56                 	db	86	;'V'
  6422  00FC59  20                 	db	32
  6423  00FC5A  56                 	db	86	;'V'
  6424  00FC5B  6F                 	db	111	;'o'
  6425  00FC5C  6C                 	db	108	;'l'
  6426  00FC5D  74                 	db	116	;'t'
  6427  00FC5E  61                 	db	97	;'a'
  6428  00FC5F  67                 	db	103	;'g'
  6429  00FC60  65                 	db	101	;'e'
  6430  00FC61  3A                 	db	58	;':'
  6431  00FC62  00                 	db	0
  6432  00FC63                     STR_137:
  6433  00FC63  44                 	db	68	;'D'
  6434  00FC64  65                 	db	101	;'e'
  6435  00FC65  76                 	db	118	;'v'
  6436  00FC66  2E                 	db	46
  6437  00FC67  20                 	db	32
  6438  00FC68  4F                 	db	79	;'O'
  6439  00FC69  6E                 	db	110	;'n'
  6440  00FC6A  20                 	db	32
  6441  00FC6B  54                 	db	84	;'T'
  6442  00FC6C  69                 	db	105	;'i'
  6443  00FC6D  6D                 	db	109	;'m'
  6444  00FC6E  65                 	db	101	;'e'
  6445  00FC6F  3A                 	db	58	;':'
  6446  00FC70  00                 	db	0
  6447  00FC71                     STR_119:
  6448  00FC71  41                 	db	65	;'A'
  6449  00FC72  6D                 	db	109	;'m'
  6450  00FC73  62                 	db	98	;'b'
  6451  00FC74  69                 	db	105	;'i'
  6452  00FC75  65                 	db	101	;'e'
  6453  00FC76  6E                 	db	110	;'n'
  6454  00FC77  74                 	db	116	;'t'
  6455  00FC78  20                 	db	32
  6456  00FC79  54                 	db	84	;'T'
  6457  00FC7A  65                 	db	101	;'e'
  6458  00FC7B  6D                 	db	109	;'m'
  6459  00FC7C  70                 	db	112	;'p'
  6460  00FC7D  3A                 	db	58	;':'
  6461  00FC7E  00                 	db	0
  6462  00FC7F                     STR_127:
  6463  00FC7F  2B                 	db	43
  6464  00FC80  35                 	db	53	;'5'
  6465  00FC81  56                 	db	86	;'V'
  6466  00FC82  20                 	db	32
  6467  00FC83  53                 	db	83	;'S'
  6468  00FC84  77                 	db	119	;'w'
  6469  00FC85  2E                 	db	46
  6470  00FC86  20                 	db	32
  6471  00FC87  46                 	db	70	;'F'
  6472  00FC88  72                 	db	114	;'r'
  6473  00FC89  65                 	db	101	;'e'
  6474  00FC8A  71                 	db	113	;'q'
  6475  00FC8B  3A                 	db	58	;':'
  6476  00FC8C  00                 	db	0
  6477  00FC8D                     STR_101:
  6478  00FC8D  4F                 	db	79	;'O'
  6479  00FC8E  75                 	db	117	;'u'
  6480  00FC8F  74                 	db	116	;'t'
  6481  00FC90  70                 	db	112	;'p'
  6482  00FC91  75                 	db	117	;'u'
  6483  00FC92  74                 	db	116	;'t'
  6484  00FC93  20                 	db	32
  6485  00FC94  50                 	db	80	;'P'
  6486  00FC95  6F                 	db	111	;'o'
  6487  00FC96  77                 	db	119	;'w'
  6488  00FC97  65                 	db	101	;'e'
  6489  00FC98  72                 	db	114	;'r'
  6490  00FC99  3A                 	db	58	;':'
  6491  00FC9A  00                 	db	0
  6492  00FC9B                     STR_88:
  6493  00FC9B  2B                 	db	43
  6494  00FC9C  31                 	db	49	;'1'
  6495  00FC9D  32                 	db	50	;'2'
  6496  00FC9E  56                 	db	86	;'V'
  6497  00FC9F  20                 	db	32
  6498  00FCA0  43                 	db	67	;'C'
  6499  00FCA1  75                 	db	117	;'u'
  6500  00FCA2  72                 	db	114	;'r'
  6501  00FCA3  72                 	db	114	;'r'
  6502  00FCA4  65                 	db	101	;'e'
  6503  00FCA5  6E                 	db	110	;'n'
  6504  00FCA6  74                 	db	116	;'t'
  6505  00FCA7  3A                 	db	58	;':'
  6506  00FCA8  00                 	db	0
  6507  00FCA9                     STR_73:
  6508  00FCA9  42                 	db	66	;'B'
  6509  00FCAA  6F                 	db	111	;'o'
  6510  00FCAB  6F                 	db	111	;'o'
  6511  00FCAC  74                 	db	116	;'t'
  6512  00FCAD  20                 	db	32
  6513  00FCAE  43                 	db	67	;'C'
  6514  00FCAF  6F                 	db	111	;'o'
  6515  00FCB0  6D                 	db	109	;'m'
  6516  00FCB1  70                 	db	112	;'p'
  6517  00FCB2  6C                 	db	108	;'l'
  6518  00FCB3  65                 	db	101	;'e'
  6519  00FCB4  74                 	db	116	;'t'
  6520  00FCB5  65                 	db	101	;'e'
  6521  00FCB6  00                 	db	0
  6522  00FCB7                     STR_75:
  6523  00FCB7  4D                 	db	77	;'M'
  6524  00FCB8  6F                 	db	111	;'o'
  6525  00FCB9  72                 	db	114	;'r'
  6526  00FCBA  65                 	db	101	;'e'
  6527  00FCBB  20                 	db	32
  6528  00FCBC  53                 	db	83	;'S'
  6529  00FCBD  65                 	db	101	;'e'
  6530  00FCBE  74                 	db	116	;'t'
  6531  00FCBF  74                 	db	116	;'t'
  6532  00FCC0  69                 	db	105	;'i'
  6533  00FCC1  6E                 	db	110	;'n'
  6534  00FCC2  67                 	db	103	;'g'
  6535  00FCC3  73                 	db	115	;'s'
  6536  00FCC4  00                 	db	0
  6537  00FCC5                     STR_20:
  6538  00FCC5  46                 	db	70	;'F'
  6539  00FCC6  75                 	db	117	;'u'
  6540  00FCC7  6C                 	db	108	;'l'
  6541  00FCC8  6C                 	db	108	;'l'
  6542  00FCC9  79                 	db	121	;'y'
  6543  00FCCA  20                 	db	32
  6544  00FCCB  43                 	db	67	;'C'
  6545  00FCCC  68                 	db	104	;'h'
  6546  00FCCD  61                 	db	97	;'a'
  6547  00FCCE  72                 	db	114	;'r'
  6548  00FCCF  67                 	db	103	;'g'
  6549  00FCD0  65                 	db	101	;'e'
  6550  00FCD1  64                 	db	100	;'d'
  6551  00FCD2  00                 	db	0
  6552  00FCD3                     STR_15:
  6553  00FCD3  66                 	db	102	;'f'
  6554  00FCD4  75                 	db	117	;'u'
  6555  00FCD5  6C                 	db	108	;'l'
  6556  00FCD6  6C                 	db	108	;'l'
  6557  00FCD7  79                 	db	121	;'y'
  6558  00FCD8  20                 	db	32
  6559  00FCD9  63                 	db	99	;'c'
  6560  00FCDA  68                 	db	104	;'h'
  6561  00FCDB  61                 	db	97	;'a'
  6562  00FCDC  72                 	db	114	;'r'
  6563  00FCDD  67                 	db	103	;'g'
  6564  00FCDE  65                 	db	101	;'e'
  6565  00FCDF  64                 	db	100	;'d'
  6566  00FCE0  00                 	db	0
  6567  00FCE1                     STR_67:
  6568  00FCE1  52                 	db	82	;'R'
  6569  00FCE2  65                 	db	101	;'e'
  6570  00FCE3  76                 	db	118	;'v'
  6571  00FCE4  69                 	db	105	;'i'
  6572  00FCE5  73                 	db	115	;'s'
  6573  00FCE6  69                 	db	105	;'i'
  6574  00FCE7  6F                 	db	111	;'o'
  6575  00FCE8  6E                 	db	110	;'n'
  6576  00FCE9  20                 	db	32
  6577  00FCEA  49                 	db	73	;'I'
  6578  00FCEB  44                 	db	68	;'D'
  6579  00FCEC  3A                 	db	58	;':'
  6580  00FCED  00                 	db	0
  6581  00FCEE                     STR_84:
  6582  00FCEE  2B                 	db	43
  6583  00FCEF  35                 	db	53	;'5'
  6584  00FCF0  56                 	db	86	;'V'
  6585  00FCF1  20                 	db	32
  6586  00FCF2  56                 	db	86	;'V'
  6587  00FCF3  6F                 	db	111	;'o'
  6588  00FCF4  6C                 	db	108	;'l'
  6589  00FCF5  74                 	db	116	;'t'
  6590  00FCF6  61                 	db	97	;'a'
  6591  00FCF7  67                 	db	103	;'g'
  6592  00FCF8  65                 	db	101	;'e'
  6593  00FCF9  3A                 	db	58	;':'
  6594  00FCFA  00                 	db	0
  6595  00FCFB                     STR_153:
  6596  00FCFB  43                 	db	67	;'C'
  6597  00FCFC  68                 	db	104	;'h'
  6598  00FCFD  61                 	db	97	;'a'
  6599  00FCFE  72                 	db	114	;'r'
  6600  00FCFF  67                 	db	103	;'g'
  6601  00FD00  65                 	db	101	;'e'
  6602  00FD01  20                 	db	32
  6603  00FD02  54                 	db	84	;'T'
  6604  00FD03  69                 	db	105	;'i'
  6605  00FD04  6D                 	db	109	;'m'
  6606  00FD05  65                 	db	101	;'e'
  6607  00FD06  3A                 	db	58	;':'
  6608  00FD07  00                 	db	0
  6609  00FD08                     STR_132:
  6610  00FD08  51                 	db	81	;'Q'
  6611  00FD09  49                 	db	73	;'I'
  6612  00FD0A  20                 	db	32
  6613  00FD0B  53                 	db	83	;'S'
  6614  00FD0C  77                 	db	119	;'w'
  6615  00FD0D  2E                 	db	46
  6616  00FD0E  20                 	db	32
  6617  00FD0F  46                 	db	70	;'F'
  6618  00FD10  72                 	db	114	;'r'
  6619  00FD11  65                 	db	101	;'e'
  6620  00FD12  71                 	db	113	;'q'
  6621  00FD13  3A                 	db	58	;':'
  6622  00FD14  00                 	db	0
  6623  00FD15                     STR_97:
  6624  00FD15  49                 	db	73	;'I'
  6625  00FD16  6E                 	db	110	;'n'
  6626  00FD17  70                 	db	112	;'p'
  6627  00FD18  75                 	db	117	;'u'
  6628  00FD19  74                 	db	116	;'t'
  6629  00FD1A  20                 	db	32
  6630  00FD1B  50                 	db	80	;'P'
  6631  00FD1C  6F                 	db	111	;'o'
  6632  00FD1D  77                 	db	119	;'w'
  6633  00FD1E  65                 	db	101	;'e'
  6634  00FD1F  72                 	db	114	;'r'
  6635  00FD20  3A                 	db	58	;':'
  6636  00FD21  00                 	db	0
  6637  00FD22                     STR_93:
  6638  00FD22  4E                 	db	78	;'N'
  6639  00FD23  6F                 	db	111	;'o'
  6640  00FD24  74                 	db	116	;'t'
  6641  00FD25  20                 	db	32
  6642  00FD26  43                 	db	67	;'C'
  6643  00FD27  68                 	db	104	;'h'
  6644  00FD28  61                 	db	97	;'a'
  6645  00FD29  72                 	db	114	;'r'
  6646  00FD2A  67                 	db	103	;'g'
  6647  00FD2B  69                 	db	105	;'i'
  6648  00FD2C  6E                 	db	110	;'n'
  6649  00FD2D  67                 	db	103	;'g'
  6650  00FD2E  00                 	db	0
  6651  00FD2F                     STR_189:
  6652  00FD2F  44                 	db	68	;'D'
  6653  00FD30  72                 	db	114	;'r'
  6654  00FD31  65                 	db	101	;'e'
  6655  00FD32  77                 	db	119	;'w'
  6656  00FD33  20                 	db	32
  6657  00FD34  4D                 	db	77	;'M'
  6658  00FD35  61                 	db	97	;'a'
  6659  00FD36  61                 	db	97	;'a'
  6660  00FD37  74                 	db	116	;'t'
  6661  00FD38  6D                 	db	109	;'m'
  6662  00FD39  61                 	db	97	;'a'
  6663  00FD3A  6E                 	db	110	;'n'
  6664  00FD3B  00                 	db	0
  6665  00FD3C                     STR_57:
  6666  00FD3C  25                 	db	37
  6667  00FD3D  64                 	db	100	;'d'
  6668  00FD3E  20                 	db	32
  6669  00FD3F  6D                 	db	109	;'m'
  6670  00FD40  69                 	db	105	;'i'
  6671  00FD41  6E                 	db	110	;'n'
  6672  00FD42  75                 	db	117	;'u'
  6673  00FD43  74                 	db	116	;'t'
  6674  00FD44  65                 	db	101	;'e'
  6675  00FD45  73                 	db	115	;'s'
  6676  00FD46  2C                 	db	44
  6677  00FD47  20                 	db	32
  6678  00FD48  00                 	db	0
  6679  00FD49                     STR_47:
  6680  00FD49  50                 	db	80	;'P'
  6681  00FD4A  49                 	db	73	;'I'
  6682  00FD4B  43                 	db	67	;'C'
  6683  00FD4C  31                 	db	49	;'1'
  6684  00FD4D  38                 	db	56	;'8'
  6685  00FD4E  4C                 	db	76	;'L'
  6686  00FD4F  46                 	db	70	;'F'
  6687  00FD50  32                 	db	50	;'2'
  6688  00FD51  37                 	db	55	;'7'
  6689  00FD52  4B                 	db	75	;'K'
  6690  00FD53  34                 	db	52	;'4'
  6691  00FD54  30                 	db	48	;'0'
  6692  00FD55  00                 	db	0
  6693  00FD56                     STR_48:
  6694  00FD56  50                 	db	80	;'P'
  6695  00FD57  49                 	db	73	;'I'
  6696  00FD58  43                 	db	67	;'C'
  6697  00FD59  31                 	db	49	;'1'
  6698  00FD5A  38                 	db	56	;'8'
  6699  00FD5B  4C                 	db	76	;'L'
  6700  00FD5C  46                 	db	70	;'F'
  6701  00FD5D  34                 	db	52	;'4'
  6702  00FD5E  37                 	db	55	;'7'
  6703  00FD5F  4B                 	db	75	;'K'
  6704  00FD60  34                 	db	52	;'4'
  6705  00FD61  30                 	db	48	;'0'
  6706  00FD62  00                 	db	0
  6707  00FD63                     STR_44:
  6708  00FD63  50                 	db	80	;'P'
  6709  00FD64  49                 	db	73	;'I'
  6710  00FD65  43                 	db	67	;'C'
  6711  00FD66  31                 	db	49	;'1'
  6712  00FD67  38                 	db	56	;'8'
  6713  00FD68  4C                 	db	76	;'L'
  6714  00FD69  46                 	db	70	;'F'
  6715  00FD6A  36                 	db	54	;'6'
  6716  00FD6B  37                 	db	55	;'7'
  6717  00FD6C  4B                 	db	75	;'K'
  6718  00FD6D  34                 	db	52	;'4'
  6719  00FD6E  30                 	db	48	;'0'
  6720  00FD6F  00                 	db	0
  6721  00FD70                     STR_190:
  6722  00FD70  53                 	db	83	;'S'
  6723  00FD71  70                 	db	112	;'p'
  6724  00FD72  72                 	db	114	;'r'
  6725  00FD73  69                 	db	105	;'i'
  6726  00FD74  6E                 	db	110	;'n'
  6727  00FD75  67                 	db	103	;'g'
  6728  00FD76  20                 	db	32
  6729  00FD77  32                 	db	50	;'2'
  6730  00FD78  30                 	db	48	;'0'
  6731  00FD79  31                 	db	49	;'1'
  6732  00FD7A  39                 	db	57	;'9'
  6733  00FD7B  00                 	db	0
  6734  00FD7C                     STR_123:
  6735  00FD7C  4D                 	db	77	;'M'
  6736  00FD7D  69                 	db	105	;'i'
  6737  00FD7E  63                 	db	99	;'c'
  6738  00FD7F  72                 	db	114	;'r'
  6739  00FD80  6F                 	db	111	;'o'
  6740  00FD81  20                 	db	32
  6741  00FD82  54                 	db	84	;'T'
  6742  00FD83  65                 	db	101	;'e'
  6743  00FD84  6D                 	db	109	;'m'
  6744  00FD85  70                 	db	112	;'p'
  6745  00FD86  3A                 	db	58	;':'
  6746  00FD87  00                 	db	0
  6747  00FD88                     STR_92:
  6748  00FD88  51                 	db	81	;'Q'
  6749  00FD89  49                 	db	73	;'I'
  6750  00FD8A  20                 	db	32
  6751  00FD8B  43                 	db	67	;'C'
  6752  00FD8C  75                 	db	117	;'u'
  6753  00FD8D  72                 	db	114	;'r'
  6754  00FD8E  72                 	db	114	;'r'
  6755  00FD8F  65                 	db	101	;'e'
  6756  00FD90  6E                 	db	110	;'n'
  6757  00FD91  74                 	db	116	;'t'
  6758  00FD92  3A                 	db	58	;':'
  6759  00FD93  00                 	db	0
  6760  00FD94                     STR_106:
  6761  00FD94  45                 	db	69	;'E'
  6762  00FD95  66                 	db	102	;'f'
  6763  00FD96  66                 	db	102	;'f'
  6764  00FD97  69                 	db	105	;'i'
  6765  00FD98  63                 	db	99	;'c'
  6766  00FD99  69                 	db	105	;'i'
  6767  00FD9A  65                 	db	101	;'e'
  6768  00FD9B  6E                 	db	110	;'n'
  6769  00FD9C  63                 	db	99	;'c'
  6770  00FD9D  79                 	db	121	;'y'
  6771  00FD9E  3A                 	db	58	;':'
  6772  00FD9F  00                 	db	0
  6773  00FDA0                     STR_56:
  6774  00FDA0  25                 	db	37
  6775  00FDA1  64                 	db	100	;'d'
  6776  00FDA2  20                 	db	32
  6777  00FDA3  6D                 	db	109	;'m'
  6778  00FDA4  69                 	db	105	;'i'
  6779  00FDA5  6E                 	db	110	;'n'
  6780  00FDA6  75                 	db	117	;'u'
  6781  00FDA7  74                 	db	116	;'t'
  6782  00FDA8  65                 	db	101	;'e'
  6783  00FDA9  2C                 	db	44
  6784  00FDAA  20                 	db	32
  6785  00FDAB  00                 	db	0
  6786  00FDAC                     STR_45:
  6787  00FDAC  50                 	db	80	;'P'
  6788  00FDAD  49                 	db	73	;'I'
  6789  00FDAE  43                 	db	67	;'C'
  6790  00FDAF  31                 	db	49	;'1'
  6791  00FDB0  38                 	db	56	;'8'
  6792  00FDB1  46                 	db	70	;'F'
  6793  00FDB2  32                 	db	50	;'2'
  6794  00FDB3  37                 	db	55	;'7'
  6795  00FDB4  4B                 	db	75	;'K'
  6796  00FDB5  34                 	db	52	;'4'
  6797  00FDB6  30                 	db	48	;'0'
  6798  00FDB7  00                 	db	0
  6799  00FDB8                     STR_46:
  6800  00FDB8  50                 	db	80	;'P'
  6801  00FDB9  49                 	db	73	;'I'
  6802  00FDBA  43                 	db	67	;'C'
  6803  00FDBB  31                 	db	49	;'1'
  6804  00FDBC  38                 	db	56	;'8'
  6805  00FDBD  46                 	db	70	;'F'
  6806  00FDBE  34                 	db	52	;'4'
  6807  00FDBF  37                 	db	55	;'7'
  6808  00FDC0  4B                 	db	75	;'K'
  6809  00FDC1  34                 	db	52	;'4'
  6810  00FDC2  30                 	db	48	;'0'
  6811  00FDC3  00                 	db	0
  6812  00FDC4                     STR_43:
  6813  00FDC4  50                 	db	80	;'P'
  6814  00FDC5  49                 	db	73	;'I'
  6815  00FDC6  43                 	db	67	;'C'
  6816  00FDC7  31                 	db	49	;'1'
  6817  00FDC8  38                 	db	56	;'8'
  6818  00FDC9  46                 	db	70	;'F'
  6819  00FDCA  36                 	db	54	;'6'
  6820  00FDCB  37                 	db	55	;'7'
  6821  00FDCC  4B                 	db	75	;'K'
  6822  00FDCD  34                 	db	52	;'4'
  6823  00FDCE  30                 	db	48	;'0'
  6824  00FDCF  00                 	db	0
  6825  00FDD0  25                 	db	37
  6826  00FDD1  6C                 	db	108	;'l'
  6827  00FDD2  75                 	db	117	;'u'
  6828  00FDD3  2E                 	db	46
  6829  00FDD4  25                 	db	37
  6830  00FDD5  36                 	db	54	;'6'
  6831  00FDD6  2E                 	db	46
  6832  00FDD7  36                 	db	54	;'6'
  6833  00FDD8  6C                 	db	108	;'l'
  6834  00FDD9  75                 	db	117	;'u'
  6835  00FDDA  00                 	db	0
  6836  00FDDB                     STR_329:
  6837  00FDDB  1B                 	db	27
  6838  00FDDC  5B                 	db	91	;'['
  6839  00FDDD  30                 	db	48	;'0'
  6840  00FDDE  3B                 	db	59	;';'
  6841  00FDDF  33                 	db	51	;'3'
  6842  00FDE0  37                 	db	55	;'7'
  6843  00FDE1  3B                 	db	59	;';'
  6844  00FDE2  34                 	db	52	;'4'
  6845  00FDE3  30                 	db	48	;'0'
  6846  00FDE4  6D                 	db	109	;'m'
  6847  00FDE5  00                 	db	0
  6848  00FDE6                     STR_65:
  6849  00FDE6  44                 	db	68	;'D'
  6850  00FDE7  65                 	db	101	;'e'
  6851  00FDE8  76                 	db	118	;'v'
  6852  00FDE9  69                 	db	105	;'i'
  6853  00FDEA  63                 	db	99	;'c'
  6854  00FDEB  65                 	db	101	;'e'
  6855  00FDEC  20                 	db	32
  6856  00FDED  49                 	db	73	;'I'
  6857  00FDEE  44                 	db	68	;'D'
  6858  00FDEF  3A                 	db	58	;':'
  6859  00FDF0  00                 	db	0
  6860  00FDF1                     STR_74:
  6861  00FDF1  51                 	db	81	;'Q'
  6862  00FDF2  49                 	db	73	;'I'
  6863  00FDF3  20                 	db	32
  6864  00FDF4  45                 	db	69	;'E'
  6865  00FDF5  6E                 	db	110	;'n'
  6866  00FDF6  61                 	db	97	;'a'
  6867  00FDF7  62                 	db	98	;'b'
  6868  00FDF8  6C                 	db	108	;'l'
  6869  00FDF9  65                 	db	101	;'e'
  6870  00FDFA  64                 	db	100	;'d'
  6871  00FDFB  00                 	db	0
  6872  00FDFC                     STR_128:
  6873  00FDFC  42                 	db	66	;'B'
  6874  00FDFD  75                 	db	117	;'u'
  6875  00FDFE  72                 	db	114	;'r'
  6876  00FDFF  73                 	db	115	;'s'
  6877  00FE00  74                 	db	116	;'t'
  6878  00FE01  20                 	db	32
  6879  00FE02  4D                 	db	77	;'M'
  6880  00FE03  6F                 	db	111	;'o'
  6881  00FE04  64                 	db	100	;'d'
  6882  00FE05  65                 	db	101	;'e'
  6883  00FE06  00                 	db	0
  6884  00FE07                     STR_146:
  6885  00FE07  25                 	db	37
  6886  00FE08  75                 	db	117	;'u'
  6887  00FE09  20                 	db	32
  6888  00FE0A  73                 	db	115	;'s'
  6889  00FE0B  65                 	db	101	;'e'
  6890  00FE0C  63                 	db	99	;'c'
  6891  00FE0D  6F                 	db	111	;'o'
  6892  00FE0E  6E                 	db	110	;'n'
  6893  00FE0F  64                 	db	100	;'d'
  6894  00FE10  73                 	db	115	;'s'
  6895  00FE11  00                 	db	0
  6896  00FE12                     STR_143:
  6897  00FE12  25                 	db	37
  6898  00FE13  75                 	db	117	;'u'
  6899  00FE14  20                 	db	32
  6900  00FE15  6D                 	db	109	;'m'
  6901  00FE16  69                 	db	105	;'i'
  6902  00FE17  6E                 	db	110	;'n'
  6903  00FE18  75                 	db	117	;'u'
  6904  00FE19  74                 	db	116	;'t'
  6905  00FE1A  65                 	db	101	;'e'
  6906  00FE1B  73                 	db	115	;'s'
  6907  00FE1C  00                 	db	0
  6908  00FE1D                     STR_51:
  6909  00FE1D  25                 	db	37
  6910  00FE1E  64                 	db	100	;'d'
  6911  00FE1F  20                 	db	32
  6912  00FE20  79                 	db	121	;'y'
  6913  00FE21  65                 	db	101	;'e'
  6914  00FE22  61                 	db	97	;'a'
  6915  00FE23  72                 	db	114	;'r'
  6916  00FE24  73                 	db	115	;'s'
  6917  00FE25  2C                 	db	44
  6918  00FE26  20                 	db	32
  6919  00FE27  00                 	db	0
  6920  00FE28                     STR_55:
  6921  00FE28  25                 	db	37
  6922  00FE29  64                 	db	100	;'d'
  6923  00FE2A  20                 	db	32
  6924  00FE2B  68                 	db	104	;'h'
  6925  00FE2C  6F                 	db	111	;'o'
  6926  00FE2D  75                 	db	117	;'u'
  6927  00FE2E  72                 	db	114	;'r'
  6928  00FE2F  73                 	db	115	;'s'
  6929  00FE30  2C                 	db	44
  6930  00FE31  20                 	db	32
  6931  00FE32  00                 	db	0
  6932  00FE33                     STR_59:
  6933  00FE33  25                 	db	37
  6934  00FE34  64                 	db	100	;'d'
  6935  00FE35  20                 	db	32
  6936  00FE36  73                 	db	115	;'s'
  6937  00FE37  65                 	db	101	;'e'
  6938  00FE38  63                 	db	99	;'c'
  6939  00FE39  6F                 	db	111	;'o'
  6940  00FE3A  6E                 	db	110	;'n'
  6941  00FE3B  64                 	db	100	;'d'
  6942  00FE3C  73                 	db	115	;'s'
  6943  00FE3D  00                 	db	0
  6944  00FE3E                     STR_40:
  6945  00FE3E  53                 	db	83	;'S'
  6946  00FE3F  54                 	db	84	;'T'
  6947  00FE40  4F                 	db	79	;'O'
  6948  00FE41  46                 	db	70	;'F'
  6949  00FE42  20                 	db	32
  6950  00FE43  52                 	db	82	;'R'
  6951  00FE44  65                 	db	101	;'e'
  6952  00FE45  73                 	db	115	;'s'
  6953  00FE46  65                 	db	101	;'e'
  6954  00FE47  74                 	db	116	;'t'
  6955  00FE48  00                 	db	0
  6956  00FE49                     STR_41:
  6957  00FE49  53                 	db	83	;'S'
  6958  00FE4A  54                 	db	84	;'T'
  6959  00FE4B  55                 	db	85	;'U'
  6960  00FE4C  46                 	db	70	;'F'
  6961  00FE4D  20                 	db	32
  6962  00FE4E  52                 	db	82	;'R'
  6963  00FE4F  65                 	db	101	;'e'
  6964  00FE50  73                 	db	115	;'s'
  6965  00FE51  65                 	db	101	;'e'
  6966  00FE52  74                 	db	116	;'t'
  6967  00FE53  00                 	db	0
  6968  00FE54                     STR_36:
  6969  00FE54  4D                 	db	77	;'M'
  6970  00FE55  43                 	db	67	;'C'
  6971  00FE56  4C                 	db	76	;'L'
  6972  00FE57  52                 	db	82	;'R'
  6973  00FE58  20                 	db	32
  6974  00FE59  52                 	db	82	;'R'
  6975  00FE5A  65                 	db	101	;'e'
  6976  00FE5B  73                 	db	115	;'s'
  6977  00FE5C  65                 	db	101	;'e'
  6978  00FE5D  74                 	db	116	;'t'
  6979  00FE5E  00                 	db	0
  6980  00FE5F                     STR_38:
  6981  00FE5F  57                 	db	87	;'W'
  6982  00FE60  57                 	db	87	;'W'
  6983  00FE61  44                 	db	68	;'D'
  6984  00FE62  54                 	db	84	;'T'
  6985  00FE63  20                 	db	32
  6986  00FE64  52                 	db	82	;'R'
  6987  00FE65  65                 	db	101	;'e'
  6988  00FE66  73                 	db	115	;'s'
  6989  00FE67  65                 	db	101	;'e'
  6990  00FE68  74                 	db	116	;'t'
  6991  00FE69  00                 	db	0
  6992  00FE6A                     STR_115:
  6993  00FE6A  2B                 	db	43
  6994  00FE6B  35                 	db	53	;'5'
  6995  00FE6C  56                 	db	86	;'V'
  6996  00FE6D  20                 	db	32
  6997  00FE6E  54                 	db	84	;'T'
  6998  00FE6F  65                 	db	101	;'e'
  6999  00FE70  6D                 	db	109	;'m'
  7000  00FE71  70                 	db	112	;'p'
  7001  00FE72  3A                 	db	58	;':'
  7002  00FE73  00                 	db	0
  7003  00FE74                     STR_70:
  7004  00FE74  31                 	db	49	;'1'
  7005  00FE75  31                 	db	49	;'1'
  7006  00FE76  35                 	db	53	;'5'
  7007  00FE77  2E                 	db	46
  7008  00FE78  32                 	db	50	;'2'
  7009  00FE79  20                 	db	32
  7010  00FE7A  6B                 	db	107	;'k'
  7011  00FE7B  62                 	db	98	;'b'
  7012  00FE7C  73                 	db	115	;'s'
  7013  00FE7D  00                 	db	0
  7014  00FE7E                     STR_50:
  7015  00FE7E  25                 	db	37
  7016  00FE7F  64                 	db	100	;'d'
  7017  00FE80  20                 	db	32
  7018  00FE81  79                 	db	121	;'y'
  7019  00FE82  65                 	db	101	;'e'
  7020  00FE83  61                 	db	97	;'a'
  7021  00FE84  72                 	db	114	;'r'
  7022  00FE85  2C                 	db	44
  7023  00FE86  20                 	db	32
  7024  00FE87  00                 	db	0
  7025  00FE88                     STR_54:
  7026  00FE88  25                 	db	37
  7027  00FE89  64                 	db	100	;'d'
  7028  00FE8A  20                 	db	32
  7029  00FE8B  68                 	db	104	;'h'
  7030  00FE8C  6F                 	db	111	;'o'
  7031  00FE8D  75                 	db	117	;'u'
  7032  00FE8E  72                 	db	114	;'r'
  7033  00FE8F  2C                 	db	44
  7034  00FE90  20                 	db	32
  7035  00FE91  00                 	db	0
  7036  00FE92                     STR_53:
  7037  00FE92  25                 	db	37
  7038  00FE93  64                 	db	100	;'d'
  7039  00FE94  20                 	db	32
  7040  00FE95  64                 	db	100	;'d'
  7041  00FE96  61                 	db	97	;'a'
  7042  00FE97  79                 	db	121	;'y'
  7043  00FE98  73                 	db	115	;'s'
  7044  00FE99  2C                 	db	44
  7045  00FE9A  20                 	db	32
  7046  00FE9B  00                 	db	0
  7047  00FE9C                     STR_58:
  7048  00FE9C  25                 	db	37
  7049  00FE9D  64                 	db	100	;'d'
  7050  00FE9E  20                 	db	32
  7051  00FE9F  73                 	db	115	;'s'
  7052  00FEA0  65                 	db	101	;'e'
  7053  00FEA1  63                 	db	99	;'c'
  7054  00FEA2  6F                 	db	111	;'o'
  7055  00FEA3  6E                 	db	110	;'n'
  7056  00FEA4  64                 	db	100	;'d'
  7057  00FEA5  00                 	db	0
  7058  00FEA6                     STR_35:
  7059  00FEA6  42                 	db	66	;'B'
  7060  00FEA7  4F                 	db	79	;'O'
  7061  00FEA8  52                 	db	82	;'R'
  7062  00FEA9  20                 	db	32
  7063  00FEAA  52                 	db	82	;'R'
  7064  00FEAB  65                 	db	101	;'e'
  7065  00FEAC  73                 	db	115	;'s'
  7066  00FEAD  65                 	db	101	;'e'
  7067  00FEAE  74                 	db	116	;'t'
  7068  00FEAF  00                 	db	0
  7069  00FEB0                     STR_34:
  7070  00FEB0  50                 	db	80	;'P'
  7071  00FEB1  4F                 	db	79	;'O'
  7072  00FEB2  52                 	db	82	;'R'
  7073  00FEB3  20                 	db	32
  7074  00FEB4  52                 	db	82	;'R'
  7075  00FEB5  65                 	db	101	;'e'
  7076  00FEB6  73                 	db	115	;'s'
  7077  00FEB7  65                 	db	101	;'e'
  7078  00FEB8  74                 	db	116	;'t'
  7079  00FEB9  00                 	db	0
  7080  00FEBA                     STR_22:
  7081  00FEBA  55                 	db	85	;'U'
  7082  00FEBB  6E                 	db	110	;'n'
  7083  00FEBC  64                 	db	100	;'d'
  7084  00FEBD  65                 	db	101	;'e'
  7085  00FEBE  66                 	db	102	;'f'
  7086  00FEBF  69                 	db	105	;'i'
  7087  00FEC0  6E                 	db	110	;'n'
  7088  00FEC1  65                 	db	101	;'e'
  7089  00FEC2  64                 	db	100	;'d'
  7090  00FEC3  00                 	db	0
  7091  00FEC4                     STR_17:
  7092  00FEC4  75                 	db	117	;'u'
  7093  00FEC5  6E                 	db	110	;'n'
  7094  00FEC6  64                 	db	100	;'d'
  7095  00FEC7  65                 	db	101	;'e'
  7096  00FEC8  66                 	db	102	;'f'
  7097  00FEC9  69                 	db	105	;'i'
  7098  00FECA  6E                 	db	110	;'n'
  7099  00FECB  65                 	db	101	;'e'
  7100  00FECC  64                 	db	100	;'d'
  7101  00FECD  00                 	db	0
  7102  00FECE                     STR_288:
  7103  00FECE  2B                 	db	43
  7104  00FECF  25                 	db	37
  7105  00FED0  30                 	db	48	;'0'
  7106  00FED1  2E                 	db	46
  7107  00FED2  33                 	db	51	;'3'
  7108  00FED3  66                 	db	102	;'f'
  7109  00FED4  20                 	db	32
  7110  00FED5  4D                 	db	77	;'M'
  7111  00FED6  00                 	db	0
  7112  00FED7                     STR_289:
  7113  00FED7  2B                 	db	43
  7114  00FED8  25                 	db	37
  7115  00FED9  30                 	db	48	;'0'
  7116  00FEDA  2E                 	db	46
  7117  00FEDB  33                 	db	51	;'3'
  7118  00FEDC  66                 	db	102	;'f'
  7119  00FEDD  20                 	db	32
  7120  00FEDE  6B                 	db	107	;'k'
  7121  00FEDF  00                 	db	0
  7122  00FEE0                     STR_291:
  7123  00FEE0  2B                 	db	43
  7124  00FEE1  25                 	db	37
  7125  00FEE2  30                 	db	48	;'0'
  7126  00FEE3  2E                 	db	46
  7127  00FEE4  33                 	db	51	;'3'
  7128  00FEE5  66                 	db	102	;'f'
  7129  00FEE6  20                 	db	32
  7130  00FEE7  6D                 	db	109	;'m'
  7131  00FEE8  00                 	db	0
  7132  00FEE9                     STR_293:
  7133  00FEE9  2B                 	db	43
  7134  00FEEA  25                 	db	37
  7135  00FEEB  30                 	db	48	;'0'
  7136  00FEEC  2E                 	db	46
  7137  00FEED  33                 	db	51	;'3'
  7138  00FEEE  66                 	db	102	;'f'
  7139  00FEEF  20                 	db	32
  7140  00FEF0  6E                 	db	110	;'n'
  7141  00FEF1  00                 	db	0
  7142  00FEF2                     STR_292:
  7143  00FEF2  2B                 	db	43
  7144  00FEF3  25                 	db	37
  7145  00FEF4  30                 	db	48	;'0'
  7146  00FEF5  2E                 	db	46
  7147  00FEF6  33                 	db	51	;'3'
  7148  00FEF7  66                 	db	102	;'f'
  7149  00FEF8  20                 	db	32
  7150  00FEF9  75                 	db	117	;'u'
  7151  00FEFA  00                 	db	0
  7152  00FEFB                     STR_108:
  7153  00FEFB  25                 	db	37
  7154  00FEFC  2B                 	db	43
  7155  00FEFD  2E                 	db	46
  7156  00FEFE  33                 	db	51	;'3'
  7157  00FEFF  66                 	db	102	;'f'
  7158  00FF00  20                 	db	32
  7159  00FF01  25                 	db	37
  7160  00FF02  25                 	db	37
  7161  00FF03  00                 	db	0
  7162  00FF04                     STR_111:
  7163  00FF04  51                 	db	81	;'Q'
  7164  00FF05  49                 	db	73	;'I'
  7165  00FF06  20                 	db	32
  7166  00FF07  54                 	db	84	;'T'
  7167  00FF08  65                 	db	101	;'e'
  7168  00FF09  6D                 	db	109	;'m'
  7169  00FF0A  70                 	db	112	;'p'
  7170  00FF0B  3A                 	db	58	;':'
  7171  00FF0C  00                 	db	0
  7172  00FF0D                     STR_138:
  7173  00FF0D  25                 	db	37
  7174  00FF0E  75                 	db	117	;'u'
  7175  00FF0F  20                 	db	32
  7176  00FF10  79                 	db	121	;'y'
  7177  00FF11  65                 	db	101	;'e'
  7178  00FF12  61                 	db	97	;'a'
  7179  00FF13  72                 	db	114	;'r'
  7180  00FF14  73                 	db	115	;'s'
  7181  00FF15  00                 	db	0
  7182  00FF16                     STR_140:
  7183  00FF16  25                 	db	37
  7184  00FF17  75                 	db	117	;'u'
  7185  00FF18  20                 	db	32
  7186  00FF19  68                 	db	104	;'h'
  7187  00FF1A  6F                 	db	111	;'o'
  7188  00FF1B  75                 	db	117	;'u'
  7189  00FF1C  72                 	db	114	;'r'
  7190  00FF1D  73                 	db	115	;'s'
  7191  00FF1E  00                 	db	0
  7192  00FF1F                     STR_129:
  7193  00FF1F  2B                 	db	43
  7194  00FF20  32                 	db	50	;'2'
  7195  00FF21  2E                 	db	46
  7196  00FF22  35                 	db	53	;'5'
  7197  00FF23  20                 	db	32
  7198  00FF24  4D                 	db	77	;'M'
  7199  00FF25  48                 	db	72	;'H'
  7200  00FF26  7A                 	db	122	;'z'
  7201  00FF27  00                 	db	0
  7202  00FF28                     STR_52:
  7203  00FF28  25                 	db	37
  7204  00FF29  64                 	db	100	;'d'
  7205  00FF2A  20                 	db	32
  7206  00FF2B  64                 	db	100	;'d'
  7207  00FF2C  61                 	db	97	;'a'
  7208  00FF2D  79                 	db	121	;'y'
  7209  00FF2E  2C                 	db	44
  7210  00FF2F  20                 	db	32
  7211  00FF30  00                 	db	0
  7212  00FF31                     STR_14:
  7213  00FF31  63                 	db	99	;'c'
  7214  00FF32  68                 	db	104	;'h'
  7215  00FF33  61                 	db	97	;'a'
  7216  00FF34  72                 	db	114	;'r'
  7217  00FF35  67                 	db	103	;'g'
  7218  00FF36  69                 	db	105	;'i'
  7219  00FF37  6E                 	db	110	;'n'
  7220  00FF38  67                 	db	103	;'g'
  7221  00FF39  00                 	db	0
  7222  00FF3A                     STR_290:
  7223  00FF3A  2B                 	db	43
  7224  00FF3B  25                 	db	37
  7225  00FF3C  30                 	db	48	;'0'
  7226  00FF3D  2E                 	db	46
  7227  00FF3E  33                 	db	51	;'3'
  7228  00FF3F  66                 	db	102	;'f'
  7229  00FF40  20                 	db	32
  7230  00FF41  00                 	db	0
  7231  00FF42                     STR_89:
  7232  00FF42  25                 	db	37
  7233  00FF43  2B                 	db	43
  7234  00FF44  2E                 	db	46
  7235  00FF45  33                 	db	51	;'3'
  7236  00FF46  66                 	db	102	;'f'
  7237  00FF47  20                 	db	32
  7238  00FF48  41                 	db	65	;'A'
  7239  00FF49  00                 	db	0
  7240  00FF4A                     STR_112:
  7241  00FF4A  25                 	db	37
  7242  00FF4B  2B                 	db	43
  7243  00FF4C  2E                 	db	46
  7244  00FF4D  33                 	db	51	;'3'
  7245  00FF4E  66                 	db	102	;'f'
  7246  00FF4F  20                 	db	32
  7247  00FF50  43                 	db	67	;'C'
  7248  00FF51  00                 	db	0
  7249  00FF52                     STR_81:
  7250  00FF52  25                 	db	37
  7251  00FF53  2B                 	db	43
  7252  00FF54  2E                 	db	46
  7253  00FF55  33                 	db	51	;'3'
  7254  00FF56  66                 	db	102	;'f'
  7255  00FF57  20                 	db	32
  7256  00FF58  56                 	db	86	;'V'
  7257  00FF59  00                 	db	0
  7258  00FF5A                     STR_98:
  7259  00FF5A  25                 	db	37
  7260  00FF5B  2B                 	db	43
  7261  00FF5C  2E                 	db	46
  7262  00FF5D  33                 	db	51	;'3'
  7263  00FF5E  66                 	db	102	;'f'
  7264  00FF5F  20                 	db	32
  7265  00FF60  57                 	db	87	;'W'
  7266  00FF61  00                 	db	0
  7267  00FF62                     STR_139:
  7268  00FF62  25                 	db	37
  7269  00FF63  75                 	db	117	;'u'
  7270  00FF64  20                 	db	32
  7271  00FF65  64                 	db	100	;'d'
  7272  00FF66  61                 	db	97	;'a'
  7273  00FF67  79                 	db	121	;'y'
  7274  00FF68  73                 	db	115	;'s'
  7275  00FF69  00                 	db	0
  7276  00FF6A                     STR_353:
  7277  00FF6A  28                 	db	40
  7278  00FF6B  6E                 	db	110	;'n'
  7279  00FF6C  75                 	db	117	;'u'
  7280  00FF6D  6C                 	db	108	;'l'
  7281  00FF6E  6C                 	db	108	;'l'
  7282  00FF6F  29                 	db	41
  7283  00FF70  00                 	db	0
  7284  00FF71                     STR_68:
  7285  00FF71  25                 	db	37
  7286  00FF72  63                 	db	99	;'c'
  7287  00FF73  25                 	db	37
  7288  00FF74  30                 	db	48	;'0'
  7289  00FF75  33                 	db	51	;'3'
  7290  00FF76  64                 	db	100	;'d'
  7291  00FF77  00                 	db	0
  7292  00FF78                     STR_197:
  7293  00FF78  2A                 	db	42
  7294  00FF79  49                 	db	73	;'I'
  7295  00FF7A  44                 	db	68	;'D'
  7296  00FF7B  4E                 	db	78	;'N'
  7297  00FF7C  3F                 	db	63	;'?'
  7298  00FF7D  00                 	db	0
  7299  00FF7E                     STR_194:
  7300  00FF7E  43                 	db	67	;'C'
  7301  00FF7F  6C                 	db	108	;'l'
  7302  00FF80  65                 	db	101	;'e'
  7303  00FF81  61                 	db	97	;'a'
  7304  00FF82  72                 	db	114	;'r'
  7305  00FF83  00                 	db	0
  7306  00FF84                     STR_21:
  7307  00FF84  45                 	db	69	;'E'
  7308  00FF85  72                 	db	114	;'r'
  7309  00FF86  72                 	db	114	;'r'
  7310  00FF87  6F                 	db	111	;'o'
  7311  00FF88  72                 	db	114	;'r'
  7312  00FF89  00                 	db	0
  7313  00FF8A                     STR_16:
  7314  00FF8A  65                 	db	101	;'e'
  7315  00FF8B  72                 	db	114	;'r'
  7316  00FF8C  72                 	db	114	;'r'
  7317  00FF8D  6F                 	db	111	;'o'
  7318  00FF8E  72                 	db	114	;'r'
  7319  00FF8F  00                 	db	0
  7320  00FF90                     STR_294:
  7321  00FF90  30                 	db	48	;'0'
  7322  00FF91  2E                 	db	46
  7323  00FF92  30                 	db	48	;'0'
  7324  00FF93  20                 	db	32
  7325  00FF94  00                 	db	0
  7326  00FF95                     STR_192:
  7327  00FF95  1B                 	db	27
  7328  00FF96  5B                 	db	91	;'['
  7329  00FF97  32                 	db	50	;'2'
  7330  00FF98  4A                 	db	74	;'J'
  7331  00FF99  00                 	db	0
  7332  00FF9A                     STR_228:
  7333  00FF9A  48                 	db	72	;'H'
  7334  00FF9B  65                 	db	101	;'e'
  7335  00FF9C  6C                 	db	108	;'l'
  7336  00FF9D  70                 	db	112	;'p'
  7337  00FF9E  00                 	db	0
  7338  00FF9F                     STR_66:
  7339  00FF9F  30                 	db	48	;'0'
  7340  00FFA0  78                 	db	120	;'x'
  7341  00FFA1  25                 	db	37
  7342  00FFA2  58                 	db	88	;'X'
  7343  00FFA3  00                 	db	0
  7344  00FFA4                     STR_134:
  7345  00FFA4  25                 	db	37
  7346  00FFA5  73                 	db	115	;'s'
  7347  00FFA6  48                 	db	72	;'H'
  7348  00FFA7  7A                 	db	122	;'z'
  7349  00FFA8  00                 	db	0
  7350  00FFA9                     STR_18:
  7351  00FFA9  49                 	db	73	;'I'
  7352  00FFAA  64                 	db	100	;'d'
  7353  00FFAB  6C                 	db	108	;'l'
  7354  00FFAC  65                 	db	101	;'e'
  7355  00FFAD  00                 	db	0
  7356  00FFAE                     STR_13:
  7357  00FFAE  69                 	db	105	;'i'
  7358  00FFAF  64                 	db	100	;'d'
  7359  00FFB0  6C                 	db	108	;'l'
  7360  00FFB1  65                 	db	101	;'e'
  7361  00FFB2  00                 	db	0
  7362  00FFB3  1B                 	db	27
  7363  00FFB4  5B                 	db	91	;'['
  7364  00FFB5  73                 	db	115	;'s'
  7365  00FFB6  00                 	db	0
  7366  00FFB7  1B                 	db	27
  7367  00FFB8  5B                 	db	91	;'['
  7368  00FFB9  75                 	db	117	;'u'
  7369  00FFBA  00                 	db	0
  7370  00FFBB                     STR_193:
  7371  00FFBB  1B                 	db	27
  7372  00FFBC  5B                 	db	91	;'['
  7373  00FFBD  48                 	db	72	;'H'
  7374  00FFBE  00                 	db	0
  7375  00FFBF                     STR_168:
  7376  00FFBF  25                 	db	37
  7377  00FFC0  73                 	db	115	;'s'
  7378  00FFC1  43                 	db	67	;'C'
  7379  00FFC2  00                 	db	0
  7380  00FFC3                     STR_173:
  7381  00FFC3  25                 	db	37
  7382  00FFC4  73                 	db	115	;'s'
  7383  00FFC5  4A                 	db	74	;'J'
  7384  00FFC6  00                 	db	0
  7385  00FFC7                     STR_1:
  7386  00FFC7  1B                 	db	27
  7387  00FFC8  5B                 	db	91	;'['
  7388  00FFC9  4B                 	db	75	;'K'
  7389  00FFCA  00                 	db	0
  7390  00FFCB                     STR_309:
  7391  00FFCB  33                 	db	51	;'3'
  7392  00FFCC  30                 	db	48	;'0'
  7393  00FFCD  00                 	db	0
  7394  00FFCE                     STR_310:
  7395  00FFCE  33                 	db	51	;'3'
  7396  00FFCF  31                 	db	49	;'1'
  7397  00FFD0  00                 	db	0
  7398  00FFD1                     STR_320:
  7399  00FFD1  34                 	db	52	;'4'
  7400  00FFD2  31                 	db	49	;'1'
  7401  00FFD3  00                 	db	0
  7402  00FFD4                     STR_311:
  7403  00FFD4  33                 	db	51	;'3'
  7404  00FFD5  32                 	db	50	;'2'
  7405  00FFD6  00                 	db	0
  7406  00FFD7                     STR_321:
  7407  00FFD7  34                 	db	52	;'4'
  7408  00FFD8  32                 	db	50	;'2'
  7409  00FFD9  00                 	db	0
  7410  00FFDA                     STR_312:
  7411  00FFDA  33                 	db	51	;'3'
  7412  00FFDB  33                 	db	51	;'3'
  7413  00FFDC  00                 	db	0
  7414  00FFDD                     STR_322:
  7415  00FFDD  34                 	db	52	;'4'
  7416  00FFDE  33                 	db	51	;'3'
  7417  00FFDF  00                 	db	0
  7418  00FFE0                     STR_313:
  7419  00FFE0  33                 	db	51	;'3'
  7420  00FFE1  34                 	db	52	;'4'
  7421  00FFE2  00                 	db	0
  7422  00FFE3                     STR_323:
  7423  00FFE3  34                 	db	52	;'4'
  7424  00FFE4  34                 	db	52	;'4'
  7425  00FFE5  00                 	db	0
  7426  00FFE6                     STR_314:
  7427  00FFE6  33                 	db	51	;'3'
  7428  00FFE7  35                 	db	53	;'5'
  7429  00FFE8  00                 	db	0
  7430  00FFE9                     STR_324:
  7431  00FFE9  34                 	db	52	;'4'
  7432  00FFEA  35                 	db	53	;'5'
  7433  00FFEB  00                 	db	0
  7434  00FFEC                     STR_315:
  7435  00FFEC  33                 	db	51	;'3'
  7436  00FFED  36                 	db	54	;'6'
  7437  00FFEE  00                 	db	0
  7438  00FFEF                     STR_325:
  7439  00FFEF  34                 	db	52	;'4'
  7440  00FFF0  36                 	db	54	;'6'
  7441  00FFF1  00                 	db	0
  7442  00FFF2                     STR_316:
  7443  00FFF2  33                 	db	51	;'3'
  7444  00FFF3  37                 	db	55	;'7'
  7445  00FFF4  00                 	db	0
  7446  00FFF5                     STR_326:
  7447  00FFF5  34                 	db	52	;'4'
  7448  00FFF6  37                 	db	55	;'7'
  7449  00FFF7  00                 	db	0
  7450  00FFF8                     STR_300:
  7451  00FFF8  1B                 	db	27
  7452  00FFF9  5B                 	db	91	;'['
  7453  00FFFA  00                 	db	0
  7454  00FFFB                     STR_306:
  7455  00FFFB  38                 	db	56	;'8'
  7456  00FFFC  00                 	db	0
  7457  00FFFD                     STR_308:
  7458  00FFFD  3B                 	db	59	;';'
  7459  00FFFE  00                 	db	0
  7460  0000                     
  7461                           ; #config settings
  7462  00FFFF  00                 	db	0	; dummy byte at the end
  7463  0000                     
  7464                           	psect	nvBANK2
  7465  0002FF                     __pnvBANK2:
  7466                           	opt callstack 0
  7467  0002FF                     _reset_cause:
  7468                           	opt callstack 0
  7469  0002FF                     	ds	1
  7470  0000                     _SSP2BUF	set	3730
  7471  0000                     _SSP2CON2bits	set	3735
  7472  0000                     _SSP2CON1bits	set	3734
  7473  0000                     _SSP2ADD	set	3731
  7474  0000                     _SSP2CON3	set	3736
  7475  0000                     _SSP2CON1	set	3734
  7476  0000                     _SSP2STAT	set	3733
  7477  0000                     _PIR7bits	set	3793
  7478  0000                     _SSP2CLKPPS	set	3727
  7479  0000                     _RX2PPS	set	3725
  7480  0000                     _INT1PPS	set	3746
  7481  0000                     _INT2PPS	set	3747
  7482  0000                     _RB4PPS	set	3827
  7483  0000                     _RC4PPS	set	3835
  7484  0000                     _RB5PPS	set	3828
  7485  0000                     _SSP2DATPPS	set	3728
  7486  0000                     _CCP2PPS	set	3760
  7487  0000                     _PMD5	set	3814
  7488  0000                     _PMD4	set	3813
  7489  0000                     _PMD3	set	3812
  7490  0000                     _PMD2	set	3811
  7491  0000                     _PMD1	set	3810
  7492  0000                     _PMD0	set	3809
  7493  0000                     _OSCTUNE	set	3805
  7494  0000                     _OSCFRQ	set	3806
  7495  0000                     _OSCEN	set	3804
  7496  0000                     _OSCCON3	set	3802
  7497  0000                     _OSCCON1	set	3800
  7498  0000                     _PIR6bits	set	3792
  7499  0000                     _PIE6bits	set	3784
  7500  0000                     _PIR1bits	set	3787
  7501  0000                     _PIE1bits	set	3779
  7502  0000                     _PIR3bits	set	3789
  7503  0000                     _PIR4bits	set	3790
  7504  0000                     _PIE4bits	set	3782
  7505  0000                     _IPR6bits	set	3776
  7506  0000                     _IPR1bits	set	3771
  7507  0000                     _IPR3bits	set	3773
  7508  0000                     _IPR0bits	set	3770
  7509  0000                     _IPR4bits	set	3774
  7510  0000                     _RC2REG	set	3737
  7511  0000                     _RC2STAbits	set	3741
  7512  0000                     _TX2REG	set	3738
  7513  0000                     _TX2STAbits	set	3742
  7514  0000                     _SP2BRGH	set	3740
  7515  0000                     _SP2BRGL	set	3739
  7516  0000                     _TX2STA	set	3742
  7517  0000                     _RC2STA	set	3741
  7518  0000                     _BAUD2CON	set	3743
  7519  0000                     _PIE3bits	set	3781
  7520  0000                     _PIE0bits	set	3778
  7521  0000                     _PIR0bits	set	3786
  7522  0000                     _FVRCONbits	set	3889
  7523  0000                     _FVRCON	set	3889
  7524  0000                     _ADCON1bits	set	3929
  7525  0000                     _ADCON2bits	set	3930
  7526  0000                     _ADPRE	set	3934
  7527  0000                     _ADCON3bits	set	3931
  7528  0000                     _ADACQ	set	3932
  7529  0000                     _ADCLK	set	3927
  7530  0000                     _ADACT	set	3926
  7531  0000                     _ADREF	set	3928
  7532  0000                     _ADCON3	set	3931
  7533  0000                     _ADCON2	set	3930
  7534  0000                     _ADCON1	set	3929
  7535  0000                     _ADCAP	set	3933
  7536  0000                     _ADPCH	set	3935
  7537  0000                     _IOCBPbits	set	3860
  7538  0000                     _IOCBNbits	set	3859
  7539  0000                     _IOCBFbits	set	3858
  7540  0000                     _SLRCONC	set	3870
  7541  0000                     _SLRCONB	set	3862
  7542  0000                     _SLRCONA	set	3854
  7543  0000                     _ODCONC	set	3871
  7544  0000                     _ODCONB	set	3863
  7545  0000                     _ODCONA	set	3855
  7546  0000                     _WPUC	set	3872
  7547  0000                     _WPUA	set	3856
  7548  0000                     _WPUB	set	3864
  7549  0000                     _WPUE	set	3885
  7550  0000                     _ANSELA	set	3857
  7551  0000                     _ANSELB	set	3865
  7552  0000                     _ANSELC	set	3873
  7553  0000                     _CCP2CONbits	set	4008
  7554  0000                     _LATBbits	set	3972
  7555  0000                     _PCON0bits	set	4055
  7556  0000                     _PORTBbits	set	3982
  7557  0000                     _LATCbits	set	3973
  7558  0000                     _T1GCONbits	set	4048
  7559  0000                     _T1CONbits	set	4047
  7560  0000                     _T1CON	set	4047
  7561  0000                     _TMR1L	set	4045
  7562  0000                     _TMR1H	set	4046
  7563  0000                     _T1CLK	set	4050
  7564  0000                     _T1GATE	set	4049
  7565  0000                     _T1GCON	set	4048
  7566  0000                     _T5GCONbits	set	4036
  7567  0000                     _T5CON	set	4035
  7568  0000                     _T5CLK	set	4038
  7569  0000                     _T5GATE	set	4037
  7570  0000                     _T5GCON	set	4036
  7571  0000                     _T5CONbits	set	4035
  7572  0000                     _TMR5L	set	4033
  7573  0000                     _TMR5H	set	4034
  7574  0000                     _CCPTMRSbits	set	4014
  7575  0000                     _CCPR2L	set	4006
  7576  0000                     _CCPR2H	set	4007
  7577  0000                     _CCP2CAP	set	4009
  7578  0000                     _CCP2CON	set	4008
  7579  0000                     _T3GCONbits	set	4042
  7580  0000                     _T3CONbits	set	4041
  7581  0000                     _T3CON	set	4041
  7582  0000                     _TMR3L	set	4039
  7583  0000                     _TMR3H	set	4040
  7584  0000                     _T3CLK	set	4044
  7585  0000                     _T3GATE	set	4043
  7586  0000                     _T3GCON	set	4042
  7587  0000                     _PR2	set	4028
  7588  0000                     _TMR2	set	4027
  7589  0000                     _T2CONbits	set	4029
  7590  0000                     _T2RSTbits	set	4032
  7591  0000                     _T2HLTbits	set	4030
  7592  0000                     _T2CON	set	4029
  7593  0000                     _T2TMR	set	4027
  7594  0000                     _T2PR	set	4028
  7595  0000                     _T2RST	set	4032
  7596  0000                     _T2HLT	set	4030
  7597  0000                     _T2CLKCON	set	4031
  7598  0000                     _NVMDAT	set	3968
  7599  0000                     _NVMADRL	set	3966
  7600  0000                     _NVMADRH	set	3967
  7601  0000                     _NVMCON2	set	3970
  7602  0000                     _TABLAT	set	4085
  7603  0000                     _TBLPTRL	set	4086
  7604  0000                     _TBLPTRH	set	4087
  7605  0000                     _TBLPTRU	set	4088
  7606  0000                     _NVMCON1bits	set	3969
  7607  0000                     _T0CON0bits	set	4053
  7608  0000                     _T0CON0	set	4053
  7609  0000                     _TMR0L	set	4051
  7610  0000                     _TMR0H	set	4052
  7611  0000                     _T0CON1	set	4054
  7612  0000                     _ADERRL	set	3950
  7613  0000                     _ADERRH	set	3951
  7614  0000                     _ADPREVL	set	3937
  7615  0000                     _ADPREVH	set	3938
  7616  0000                     _ADFLTRL	set	3954
  7617  0000                     _ADFLTRH	set	3955
  7618  0000                     _ADSTATbits	set	3941
  7619  0000                     _ADACCL	set	3952
  7620  0000                     _ADACCH	set	3953
  7621  0000                     _ADCNT	set	3943
  7622  0000                     _ADRESL	set	3939
  7623  0000                     _ADRESH	set	3940
  7624  0000                     _ADCON0bits	set	3936
  7625  0000                     _ADCON0	set	3936
  7626  0000                     _ADSTAT	set	3941
  7627  0000                     _ADRPT	set	3942
  7628  0000                     _ADSTPTH	set	3945
  7629  0000                     _ADSTPTL	set	3944
  7630  0000                     _ADUTHH	set	3949
  7631  0000                     _ADUTHL	set	3948
  7632  0000                     _ADLTHH	set	3947
  7633  0000                     _ADLTHL	set	3946
  7634  0000                     _TRISC	set	3978
  7635  0000                     _TRISB	set	3977
  7636  0000                     _TRISA	set	3976
  7637  0000                     _LATC	set	3973
  7638  0000                     _LATB	set	3972
  7639  0000                     _LATA	set	3971
  7640  0000                     _INTCONbits	set	4082
  7641                           
  7642                           	psect	cinit
  7643  01A954                     __pcinit:
  7644                           	opt callstack 0
  7645  01A954                     start_initialization:
  7646                           	opt callstack 0
  7647  01A954                     __initialization:
  7648                           	opt callstack 0
  7649                           
  7650                           ; Initialize objects allocated to BANK2 (18 bytes)
  7651                           ; load TBLPTR registers with __pidataBANK2
  7652  01A954  0EAC               	movlw	low __pidataBANK2
  7653  01A956  6EF6               	movwf	tblptrl,c
  7654  01A958  0EC6               	movlw	high __pidataBANK2
  7655  01A95A  6EF7               	movwf	tblptrh,c
  7656  01A95C  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  7657  01A95E  6EF8               	movwf	tblptru,c
  7658  01A960  EE02  F0ED         	lfsr	0,__pdataBANK2
  7659  01A964  EE10 F012          	lfsr	1,18
  7660  01A968                     copy_data0:
  7661  01A968  0009               	tblrd		*+
  7662  01A96A  CFF5 FFEE          	movff	tablat,postinc0
  7663  01A96E  50E5               	movf	postdec1,w,c
  7664  01A970  50E1               	movf	fsr1l,w,c
  7665  01A972  E1FA               	bnz	copy_data0
  7666                           
  7667                           ; Initialize objects allocated to BANK1 (18 bytes)
  7668                           ; load TBLPTR registers with __pidataBANK1
  7669  01A974  0E9A               	movlw	low __pidataBANK1
  7670  01A976  6EF6               	movwf	tblptrl,c
  7671  01A978  0EC6               	movlw	high __pidataBANK1
  7672  01A97A  6EF7               	movwf	tblptrh,c
  7673  01A97C  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  7674  01A97E  6EF8               	movwf	tblptru,c
  7675  01A980  EE01  F0A9         	lfsr	0,__pdataBANK1
  7676  01A984  EE10 F012          	lfsr	1,18
  7677  01A988                     copy_data1:
  7678  01A988  0009               	tblrd		*+
  7679  01A98A  CFF5 FFEE          	movff	tablat,postinc0
  7680  01A98E  50E5               	movf	postdec1,w,c
  7681  01A990  50E1               	movf	fsr1l,w,c
  7682  01A992  E1FA               	bnz	copy_data1
  7683                           
  7684                           ; Initialize objects allocated to BANK0 (2 bytes)
  7685                           ; load TBLPTR registers with __pidataBANK0
  7686  01A994  0E9A               	movlw	low __pidataBANK0
  7687  01A996  6EF6               	movwf	tblptrl,c
  7688  01A998  0EC8               	movlw	high __pidataBANK0
  7689  01A99A  6EF7               	movwf	tblptrh,c
  7690  01A99C  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  7691  01A99E  6EF8               	movwf	tblptru,c
  7692  01A9A0  0009               	tblrd		*+	;fetch initializer
  7693  01A9A2  CFF5 F0FB          	movff	tablat,__pdataBANK0
  7694  01A9A6  0009               	tblrd		*+	;fetch initializer
  7695  01A9A8  CFF5 F0FC          	movff	tablat,__pdataBANK0+1
  7696                           
  7697                           ; Clear objects allocated to BIGRAM (1024 bytes)
  7698  01A9AC  EE04  F0C8         	lfsr	0,__pbssBIGRAM
  7699  01A9B0  EE14 F000          	lfsr	1,1024
  7700  01A9B4                     clear_0:
  7701  01A9B4  6AEE               	clrf	postinc0,c
  7702  01A9B6  50E5               	movf	postdec1,w,c
  7703  01A9B8  50E1               	movf	fsr1l,w,c
  7704  01A9BA  E1FC               	bnz	clear_0
  7705  01A9BC  50E2               	movf	fsr1h,w,c
  7706  01A9BE  E1FA               	bnz	clear_0
  7707                           
  7708                           ; Clear objects allocated to BANK4 (192 bytes)
  7709  01A9C0  EE04  F000         	lfsr	0,__pbssBANK4
  7710  01A9C4  0EC0               	movlw	192
  7711  01A9C6                     clear_1:
  7712  01A9C6  6AEE               	clrf	postinc0,c
  7713  01A9C8  06E8               	decf	wreg,f,c
  7714  01A9CA  E1FD               	bnz	clear_1
  7715                           
  7716                           ; Clear objects allocated to BANK3 (209 bytes)
  7717  01A9CC  EE03  F000         	lfsr	0,__pbssBANK3
  7718  01A9D0  0ED1               	movlw	209
  7719  01A9D2                     clear_2:
  7720  01A9D2  6AEE               	clrf	postinc0,c
  7721  01A9D4  06E8               	decf	wreg,f,c
  7722  01A9D6  E1FD               	bnz	clear_2
  7723                           
  7724                           ; Clear objects allocated to BANK2 (47 bytes)
  7725  01A9D8  EE02  F0BE         	lfsr	0,__pbssBANK2
  7726  01A9DC  0E2F               	movlw	47
  7727  01A9DE                     clear_3:
  7728  01A9DE  6AEE               	clrf	postinc0,c
  7729  01A9E0  06E8               	decf	wreg,f,c
  7730  01A9E2  E1FD               	bnz	clear_3
  7731                           
  7732                           ; Clear objects allocated to BANK1 (72 bytes)
  7733  01A9E4  EE01  F061         	lfsr	0,__pbssBANK1
  7734  01A9E8  0E48               	movlw	72
  7735  01A9EA                     clear_4:
  7736  01A9EA  6AEE               	clrf	postinc0,c
  7737  01A9EC  06E8               	decf	wreg,f,c
  7738  01A9EE  E1FD               	bnz	clear_4
  7739                           
  7740                           ; Clear objects allocated to BITBANK0 (1 bytes)
  7741  01A9F0  0100               	movlb	0
  7742  01A9F2  6BFD               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
  7743                           
  7744                           ; Clear objects allocated to BANK0 (66 bytes)
  7745  01A9F4  EE00  F0B9         	lfsr	0,__pbssBANK0
  7746  01A9F8  0E42               	movlw	66
  7747  01A9FA                     clear_5:
  7748  01A9FA  6AEE               	clrf	postinc0,c
  7749  01A9FC  06E8               	decf	wreg,f,c
  7750  01A9FE  E1FD               	bnz	clear_5
  7751  01AA00                     end_of_initialization:
  7752                           	opt callstack 0
  7753  01AA00                     __end_of__initialization:
  7754                           	opt callstack 0
  7755  01AA00  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  7756  01AA02  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7757  01AA04  0100               	movlb	0
  7758  01AA06  EFDA  F0BC         	goto	_main	;jump to C main() function
  7759                           
  7760                           	psect	bitbssBANK0
  7761  0007E8                     __pbitbssBANK0:
  7762                           	opt callstack 0
  7763  0007E8                     _eusart2RxStringReady:
  7764                           	opt callstack 0
  7765  0007E8                     	ds	1
  7766                           
  7767                           	psect	bssBANK0
  7768  0000B9                     __pbssBANK0:
  7769                           	opt callstack 0
  7770  0000B9                     _error_handler:
  7771                           	opt callstack 0
  7772  0000B9                     	ds	8
  7773  0000C1                     _adc_result_scaling:
  7774                           	opt callstack 0
  7775  0000C1                     	ds	4
  7776  0000C5                     _device_on_time:
  7777                           	opt callstack 0
  7778  0000C5                     	ds	4
  7779  0000C9                     _TMR0_InterruptHandler:
  7780                           	opt callstack 0
  7781  0000C9                     	ds	3
  7782  0000CC                     _ADCC_ADTI_InterruptHandler:
  7783                           	opt callstack 0
  7784  0000CC                     	ds	3
  7785  0000CF                     I2C2_ISR@pi2c_buf_ptr:
  7786                           	opt callstack 0
  7787  0000CF                     	ds	2
  7788  0000D1                     _p_i2c2_current:
  7789                           	opt callstack 0
  7790  0000D1                     	ds	2
  7791  0000D3                     _p_i2c2_trb_current:
  7792                           	opt callstack 0
  7793  0000D3                     	ds	2
  7794  0000D5                     _qi_isns_average_index:
  7795                           	opt callstack 0
  7796  0000D5                     	ds	1
  7797  0000D6                     _pos12_isns_average_index:
  7798                           	opt callstack 0
  7799  0000D6                     	ds	1
  7800  0000D7                     _live_measurement_enable_flag:
  7801                           	opt callstack 0
  7802  0000D7                     	ds	1
  7803  0000D8                     I2C2_ISR@i2c_10bit_address_restart:
  7804                           	opt callstack 0
  7805  0000D8                     	ds	1
  7806  0000D9                     I2C2_ISR@i2c_bytes_left:
  7807                           	opt callstack 0
  7808  0000D9                     	ds	1
  7809  0000DA                     _i2c2_trb_count:
  7810                           	opt callstack 0
  7811  0000DA                     	ds	1
  7812  0000DB                     _i2c2_state:
  7813                           	opt callstack 0
  7814  0000DB                     	ds	1
  7815  0000DC                     _eusart2RxHead:
  7816                           	opt callstack 0
  7817  0000DC                     	ds	1
  7818  0000DD                     _adc_results:
  7819                           	opt callstack 0
  7820  0000DD                     	ds	28
  7821  0000F9                     I2C2_ISR@i2c_address:
  7822                           	opt callstack 0
  7823  0000F9                     	ds	2
  7824                           
  7825                           	psect	dataBANK0
  7826  0000FB                     __pdataBANK0:
  7827                           	opt callstack 0
  7828  0000FB                     _OLED_update_time:
  7829                           	opt callstack 0
  7830  0000FB                     	ds	1
  7831  0000FC                     _next_adc_channel:
  7832                           	opt callstack 0
  7833  0000FC                     	ds	1
  7834                           
  7835                           	psect	bssBANK1
  7836  000161                     __pbssBANK1:
  7837                           	opt callstack 0
  7838  000161                     _i2c2_object:
  7839                           	opt callstack 0
  7840  000161                     	ds	7
  7841  000168                     _freq_meas_results:
  7842                           	opt callstack 0
  7843  000168                     	ds	6
  7844  00016E                     _TMR1_InterruptHandler:
  7845                           	opt callstack 0
  7846  00016E                     	ds	3
  7847  000171                     _TMR3_InterruptHandler:
  7848                           	opt callstack 0
  7849  000171                     	ds	3
  7850  000174                     _TMR2_InterruptHandler:
  7851                           	opt callstack 0
  7852  000174                     	ds	3
  7853  000177                     _IOCBF3_InterruptHandler:
  7854                           	opt callstack 0
  7855  000177                     	ds	3
  7856  00017A                     _IOCBF2_InterruptHandler:
  7857                           	opt callstack 0
  7858  00017A                     	ds	3
  7859  00017D                     _EUSART2_RxDefaultInterruptHandler:
  7860                           	opt callstack 0
  7861  00017D                     	ds	3
  7862  000180                     _EUSART2_TxDefaultInterruptHandler:
  7863                           	opt callstack 0
  7864  000180                     	ds	3
  7865  000183                     _INT2_InterruptHandler:
  7866                           	opt callstack 0
  7867  000183                     	ds	3
  7868  000186                     _INT1_InterruptHandler:
  7869                           	opt callstack 0
  7870  000186                     	ds	3
  7871  000189                     _timer1ReloadVal:
  7872                           	opt callstack 0
  7873  000189                     	ds	2
  7874  00018B                     _timer5ReloadVal:
  7875                           	opt callstack 0
  7876  00018B                     	ds	2
  7877  00018D                     _timer3ReloadVal:
  7878                           	opt callstack 0
  7879  00018D                     	ds	2
  7880  00018F                     _eusart2TxBufferRemaining:
  7881                           	opt callstack 0
  7882  00018F                     	ds	2
  7883  000191                     _eusart2TxTail:
  7884                           	opt callstack 0
  7885  000191                     	ds	2
  7886  000193                     _eusart2TxHead:
  7887                           	opt callstack 0
  7888  000193                     	ds	2
  7889  000195                     _nxq_charge_state:
  7890                           	opt callstack 0
  7891  000195                     	ds	1
  7892  000196                     _QI_current_edge:
  7893                           	opt callstack 0
  7894  000196                     	ds	1
  7895  000197                     _eusart2RxCount:
  7896                           	opt callstack 0
  7897  000197                     	ds	1
  7898  000198                     _eusart2RxTail:
  7899                           	opt callstack 0
  7900  000198                     	ds	1
  7901  000199                     I2C2_MasterRead@trBlock:
  7902                           	opt callstack 0
  7903  000199                     	ds	5
  7904  00019E                     I2C2_MasterWrite@trBlock:
  7905                           	opt callstack 0
  7906  00019E                     	ds	5
  7907  0001A3                     _i2c2_tr_queue:
  7908                           	opt callstack 0
  7909  0001A3                     	ds	5
  7910  0001A8                     _I2C_STATUS:
  7911                           	opt callstack 0
  7912  0001A8                     	ds	1
  7913                           
  7914                           	psect	dataBANK1
  7915  0001A9                     __pdataBANK1:
  7916                           	opt callstack 0
  7917  0001A9                     getCauseOfResetString@strings:
  7918                           	opt callstack 0
  7919  0001A9                     	ds	18
  7920                           
  7921                           	psect	bssBANK2
  7922  0002BE                     __pbssBANK2:
  7923                           	opt callstack 0
  7924  0002BE                     _adc_calculations:
  7925                           	opt callstack 0
  7926  0002BE                     	ds	20
  7927  0002D2                     _QI_charge_time:
  7928                           	opt callstack 0
  7929  0002D2                     	ds	4
  7930  0002D6                     _OLED_update_flag:
  7931                           	opt callstack 0
  7932  0002D6                     	ds	1
  7933  0002D7                     _OLED_Frame:
  7934                           	opt callstack 0
  7935  0002D7                     	ds	1
  7936  0002D8                     _LM73_start_flag:
  7937                           	opt callstack 0
  7938  0002D8                     	ds	1
  7939  0002D9                     _live_measurement_request_flag:
  7940                           	opt callstack 0
  7941  0002D9                     	ds	1
  7942  0002DA                     _freq_meas_start_flag:
  7943                           	opt callstack 0
  7944  0002DA                     	ds	1
  7945  0002DB                     _LM73_temp_results:
  7946                           	opt callstack 0
  7947  0002DB                     	ds	18
  7948                           
  7949                           	psect	dataBANK2
  7950  0002ED                     __pdataBANK2:
  7951                           	opt callstack 0
  7952  0002ED                     getCauseOfResetStringSmall@strings:
  7953                           	opt callstack 0
  7954  0002ED                     	ds	18
  7955                           
  7956                           	psect	bssBANK3
  7957  000300                     __pbssBANK3:
  7958                           	opt callstack 0
  7959  000300                     _OLED_RAM_Buffer:
  7960                           	opt callstack 0
  7961  000300                     	ds	68
  7962  000344                     _line:
  7963                           	opt callstack 0
  7964  000344                     	ds	64
  7965  000384                     getStringSecondsAsTime@return_string:
  7966                           	opt callstack 0
  7967  000384                     	ds	40
  7968  0003AC                     floatToEngineeringFormat@result:
  7969                           	opt callstack 0
  7970  0003AC                     	ds	20
  7971  0003C0                     ftoa@buf:
  7972                           	opt callstack 0
  7973  0003C0                     	ds	17
  7974                           
  7975                           	psect	bssBANK4
  7976  000400                     __pbssBANK4:
  7977                           	opt callstack 0
  7978  000400                     _qi_isns_average_buffer:
  7979                           	opt callstack 0
  7980  000400                     	ds	64
  7981  000440                     _pos12_isns_average_buffer:
  7982                           	opt callstack 0
  7983  000440                     	ds	64
  7984  000480                     _eusart2RxBuffer:
  7985                           	opt callstack 0
  7986  000480                     	ds	64
  7987                           
  7988                           	psect	bssBIGRAM
  7989  0004C8                     __pbssBIGRAM:
  7990                           	opt callstack 0
  7991  0004C8                     _eusart2TxBuffer:
  7992                           	opt callstack 0
  7993  0004C8                     	ds	1024
  7994                           
  7995                           	psect	cstackBANK4
  7996  0004C0                     __pcstackBANK4:
  7997                           	opt callstack 0
  7998  0004C0                     terminal_ringBufferPull@charNumber:
  7999                           	opt callstack 0
  8000                           
  8001                           ; 2 bytes @ 0x0
  8002  0004C0                     	ds	2
  8003  0004C2                     terminal_ringBufferPull@index_4740:
  8004                           	opt callstack 0
  8005                           
  8006                           ; 2 bytes @ 0x2
  8007  0004C2                     	ds	2
  8008  0004C4                     terminal_ringBufferPull@index:
  8009                           	opt callstack 0
  8010                           
  8011                           ; 2 bytes @ 0x4
  8012  0004C4                     	ds	2
  8013  0004C6                     ??_main:
  8014                           
  8015                           ; 1 bytes @ 0x6
  8016  0004C6                     	ds	2
  8017                           
  8018                           	psect	cstackBANK3
  8019  0003D1                     __pcstackBANK3:
  8020                           	opt callstack 0
  8021  0003D1                     OLED_updateHandler@dev_id_str:
  8022                           	opt callstack 0
  8023  0003D1                     getStringSecondsAsTime@buff:
  8024                           	opt callstack 0
  8025                           
  8026                           ; 20 bytes @ 0x0
  8027  0003D1                     	ds	17
  8028  0003E2                     OLED_updateHandler@rev_id_str:
  8029                           	opt callstack 0
  8030                           
  8031                           ; 17 bytes @ 0x11
  8032  0003E2                     	ds	3
  8033  0003E5                     getStringSecondsAsTime@i:
  8034                           	opt callstack 0
  8035                           
  8036                           ; 1 bytes @ 0x14
  8037  0003E5                     	ds	1
  8038  0003E6                     getStringSecondsAsTime@seconds:
  8039                           	opt callstack 0
  8040                           
  8041                           ; 1 bytes @ 0x15
  8042  0003E6                     	ds	1
  8043  0003E7                     getStringSecondsAsTime@years:
  8044                           	opt callstack 0
  8045                           
  8046                           ; 1 bytes @ 0x16
  8047  0003E7                     	ds	1
  8048  0003E8                     getStringSecondsAsTime@days:
  8049                           	opt callstack 0
  8050                           
  8051                           ; 1 bytes @ 0x17
  8052  0003E8                     	ds	1
  8053  0003E9                     getStringSecondsAsTime@hours:
  8054                           	opt callstack 0
  8055                           
  8056                           ; 1 bytes @ 0x18
  8057  0003E9                     	ds	1
  8058  0003EA                     getStringSecondsAsTime@minutes:
  8059                           	opt callstack 0
  8060                           
  8061                           ; 1 bytes @ 0x19
  8062  0003EA                     	ds	1
  8063  0003EB                     terminalTextAttributes@foreground_color:
  8064                           	opt callstack 0
  8065                           
  8066                           ; 1 bytes @ 0x1A
  8067  0003EB                     	ds	1
  8068  0003EC                     terminalTextAttributes@print_string:
  8069                           	opt callstack 0
  8070                           
  8071                           ; 16 bytes @ 0x1B
  8072  0003EC                     	ds	7
  8073  0003F3                     _OLED_updateHandler$6029:
  8074                           	opt callstack 0
  8075                           
  8076                           ; 2 bytes @ 0x22
  8077  0003F3                     	ds	9
  8078  0003FC                     terminalTextAttributes@i:
  8079                           	opt callstack 0
  8080                           
  8081                           ; 1 bytes @ 0x2B
  8082  0003FC                     	ds	1
  8083  0003FD                     ringBufferLUT@userID:
  8084                           	opt callstack 0
  8085                           
  8086                           ; 2 bytes @ 0x2C
  8087  0003FD                     	ds	2
  8088  0003FF                     ??_terminal_ringBufferPull:
  8089                           
  8090                           ; 1 bytes @ 0x2E
  8091  0003FF                     	ds	1
  8092                           
  8093                           	psect	cstackBANK2
  8094  000200                     __pcstackBANK2:
  8095                           	opt callstack 0
  8096  000200                     ??_TMR5_Initialize:
  8097  000200                     ??_updateErrorLEDs:
  8098  000200                     ??_isdigit:
  8099  000200                     ?_getCauseOfResetString:
  8100                           	opt callstack 0
  8101  000200                     ?_getNXQChargeStateString:
  8102                           	opt callstack 0
  8103  000200                     ?_getNXQChargeStateStringCaps:
  8104                           	opt callstack 0
  8105  000200                     ?_getCauseOfResetStringSmall:
  8106                           	opt callstack 0
  8107  000200                     ?_strlen:
  8108                           	opt callstack 0
  8109  000200                     ?_strcmp:
  8110                           	opt callstack 0
  8111  000200                     ?___wmul:
  8112                           	opt callstack 0
  8113  000200                     ?___awmod:
  8114                           	opt callstack 0
  8115  000200                     ?___lwmod:
  8116                           	opt callstack 0
  8117  000200                     ?__tdiv_to_l_:
  8118                           	opt callstack 0
  8119  000200                     ?__div_to_l_:
  8120                           	opt callstack 0
  8121  000200                     ?___fldiv:
  8122                           	opt callstack 0
  8123  000200                     ?___lldiv:
  8124                           	opt callstack 0
  8125  000200                     ?___flneg:
  8126                           	opt callstack 0
  8127  000200                     EUSART2_Read@readValue:
  8128                           	opt callstack 0
  8129  000200                     EUSART2_Write@txData:
  8130                           	opt callstack 0
  8131  000200                     getCauseOfReset@return_reset_cause:
  8132                           	opt callstack 0
  8133  000200                     TMR3_WriteTimer@timerVal:
  8134                           	opt callstack 0
  8135  000200                     I2C2_MasterTRBInsert@ptrb_list:
  8136                           	opt callstack 0
  8137  000200                     I2C2_MasterReadTRBBuild@ptrb:
  8138                           	opt callstack 0
  8139  000200                     I2C2_MasterWriteTRBBuild@ptrb:
  8140                           	opt callstack 0
  8141  000200                     TMR5_WriteTimer@timerVal:
  8142                           	opt callstack 0
  8143  000200                     TMR1_WriteTimer@timerVal:
  8144                           	opt callstack 0
  8145  000200                     ___wmul@multiplier:
  8146                           	opt callstack 0
  8147  000200                     ___awmod@dividend:
  8148                           	opt callstack 0
  8149  000200                     ___lwmod@dividend:
  8150                           	opt callstack 0
  8151  000200                     memmove@d1:
  8152                           	opt callstack 0
  8153  000200                     strcat@to:
  8154                           	opt callstack 0
  8155  000200                     strcmp@s1:
  8156                           	opt callstack 0
  8157  000200                     strlen@s:
  8158                           	opt callstack 0
  8159  000200                     strncpy@to:
  8160                           	opt callstack 0
  8161  000200                     INT1_SetInterruptHandler@InterruptHandler:
  8162                           	opt callstack 0
  8163  000200                     INT2_SetInterruptHandler@InterruptHandler:
  8164                           	opt callstack 0
  8165  000200                     EUSART2_SetTxInterruptHandler@interruptHandler:
  8166                           	opt callstack 0
  8167  000200                     EUSART2_SetRxInterruptHandler@interruptHandler:
  8168                           	opt callstack 0
  8169  000200                     IOCBF2_SetInterruptHandler@InterruptHandler:
  8170                           	opt callstack 0
  8171  000200                     IOCBF3_SetInterruptHandler@InterruptHandler:
  8172                           	opt callstack 0
  8173  000200                     ADCC_SetADTIInterruptHandler@InterruptHandler:
  8174                           	opt callstack 0
  8175  000200                     TMR0_SetInterruptHandler@InterruptHandler:
  8176                           	opt callstack 0
  8177  000200                     TMR2_SetInterruptHandler@InterruptHandler:
  8178                           	opt callstack 0
  8179  000200                     TMR3_SetInterruptHandler@InterruptHandler:
  8180                           	opt callstack 0
  8181  000200                     TMR1_SetInterruptHandler@InterruptHandler:
  8182                           	opt callstack 0
  8183  000200                     FLASH_ReadByte@flashAddr:
  8184                           	opt callstack 0
  8185  000200                     ___lldiv@dividend:
  8186                           	opt callstack 0
  8187  000200                     __div_to_l_@f1:
  8188                           	opt callstack 0
  8189  000200                     ___fleq@ff1:
  8190                           	opt callstack 0
  8191  000200                     ___flge@ff1:
  8192                           	opt callstack 0
  8193  000200                     ___flneg@f1:
  8194                           	opt callstack 0
  8195  000200                     __tdiv_to_l_@f1:
  8196                           	opt callstack 0
  8197  000200                     ___fldiv@b:
  8198                           	opt callstack 0
  8199                           
  8200                           ; 4 bytes @ 0x0
  8201  000200                     	ds	1
  8202  000201                     putch@txData:
  8203                           	opt callstack 0
  8204  000201                     _isdigit$5449:
  8205                           	opt callstack 0
  8206                           
  8207                           ; 1 bytes @ 0x1
  8208  000201                     	ds	1
  8209  000202                     getCauseOfResetString@r:
  8210                           	opt callstack 0
  8211  000202                     getCauseOfResetStringSmall@r:
  8212                           	opt callstack 0
  8213  000202                     isdigit@c:
  8214                           	opt callstack 0
  8215  000202                     I2C2_MasterTRBInsert@pflag:
  8216                           	opt callstack 0
  8217  000202                     I2C2_MasterReadTRBBuild@pdata:
  8218                           	opt callstack 0
  8219  000202                     I2C2_MasterWriteTRBBuild@pdata:
  8220                           	opt callstack 0
  8221  000202                     ___wmul@multiplicand:
  8222                           	opt callstack 0
  8223  000202                     ___awmod@divisor:
  8224                           	opt callstack 0
  8225  000202                     ___lwmod@divisor:
  8226                           	opt callstack 0
  8227  000202                     memmove@s1:
  8228                           	opt callstack 0
  8229  000202                     strcat@from:
  8230                           	opt callstack 0
  8231  000202                     strcmp@s2:
  8232                           	opt callstack 0
  8233  000202                     strlen@cp:
  8234                           	opt callstack 0
  8235  000202                     strncpy@from:
  8236                           	opt callstack 0
  8237                           
  8238                           ; 2 bytes @ 0x2
  8239  000202                     	ds	1
  8240  000203                     ??_TMR3_Initialize:
  8241  000203                     ??_TMR1_Initialize:
  8242  000203                     strcpy@to:
  8243                           	opt callstack 0
  8244                           
  8245                           ; 2 bytes @ 0x3
  8246  000203                     	ds	1
  8247  000204                     ??_strcmp:
  8248  000204                     ?_FLASH_ReadWord:
  8249                           	opt callstack 0
  8250  000204                     I2C2_MasterReadTRBBuild@length:
  8251                           	opt callstack 0
  8252  000204                     I2C2_MasterWriteTRBBuild@length:
  8253                           	opt callstack 0
  8254  000204                     ___awmod@counter:
  8255                           	opt callstack 0
  8256  000204                     ___lwmod@counter:
  8257                           	opt callstack 0
  8258  000204                     ___wmul@product:
  8259                           	opt callstack 0
  8260  000204                     memmove@n:
  8261                           	opt callstack 0
  8262  000204                     strcat@cp:
  8263                           	opt callstack 0
  8264  000204                     strncpy@size:
  8265                           	opt callstack 0
  8266  000204                     FLASH_ReadWord@flashAddr:
  8267                           	opt callstack 0
  8268  000204                     ___lldiv@divisor:
  8269                           	opt callstack 0
  8270  000204                     __div_to_l_@f2:
  8271                           	opt callstack 0
  8272  000204                     ___fleq@ff2:
  8273                           	opt callstack 0
  8274  000204                     ___flge@ff2:
  8275                           	opt callstack 0
  8276  000204                     __tdiv_to_l_@f2:
  8277                           	opt callstack 0
  8278  000204                     ___fldiv@a:
  8279                           	opt callstack 0
  8280                           
  8281                           ; 4 bytes @ 0x4
  8282  000204                     	ds	1
  8283  000205                     ?___lwdiv:
  8284                           	opt callstack 0
  8285  000205                     I2C2_MasterTRBInsert@count:
  8286                           	opt callstack 0
  8287  000205                     ___awmod@sign:
  8288                           	opt callstack 0
  8289  000205                     I2C2_MasterReadTRBBuild@address:
  8290                           	opt callstack 0
  8291  000205                     I2C2_MasterWriteTRBBuild@address:
  8292                           	opt callstack 0
  8293  000205                     ___lwdiv@dividend:
  8294                           	opt callstack 0
  8295  000205                     strcpy@from:
  8296                           	opt callstack 0
  8297                           
  8298                           ; 2 bytes @ 0x5
  8299  000205                     	ds	1
  8300  000206                     ??_memmove:
  8301  000206                     ?___awdiv:
  8302                           	opt callstack 0
  8303  000206                     strcmp@r:
  8304                           	opt callstack 0
  8305  000206                     ___awdiv@dividend:
  8306                           	opt callstack 0
  8307  000206                     strncpy@cp:
  8308                           	opt callstack 0
  8309                           
  8310                           ; 2 bytes @ 0x6
  8311  000206                     	ds	1
  8312  000207                     ??_I2C2_MasterWriteTRBBuild:
  8313  000207                     ??_I2C2_MasterReadTRBBuild:
  8314  000207                     ___lwdiv@divisor:
  8315                           	opt callstack 0
  8316  000207                     strcpy@cp:
  8317                           	opt callstack 0
  8318                           
  8319                           ; 2 bytes @ 0x7
  8320  000207                     	ds	1
  8321  000208                     ??__tdiv_to_l_:
  8322  000208                     ??___fldiv:
  8323  000208                     ??_FLASH_ReadWord:
  8324  000208                     ??___fleq:
  8325  000208                     ??___flge:
  8326  000208                     ___awdiv@divisor:
  8327                           	opt callstack 0
  8328  000208                     memmove@d:
  8329                           	opt callstack 0
  8330  000208                     ___lldiv@quotient:
  8331                           	opt callstack 0
  8332  000208                     __div_to_l_@quot:
  8333                           	opt callstack 0
  8334                           
  8335                           ; 4 bytes @ 0x8
  8336  000208                     	ds	1
  8337  000209                     ___lwdiv@counter:
  8338                           	opt callstack 0
  8339  000209                     I2C2_MasterWrite@pdata:
  8340                           	opt callstack 0
  8341  000209                     I2C2_MasterRead@pdata:
  8342                           	opt callstack 0
  8343                           
  8344                           ; 2 bytes @ 0x9
  8345  000209                     	ds	1
  8346  00020A                     ___awdiv@counter:
  8347                           	opt callstack 0
  8348  00020A                     ___lwdiv@quotient:
  8349                           	opt callstack 0
  8350  00020A                     memmove@s:
  8351                           	opt callstack 0
  8352                           
  8353                           ; 2 bytes @ 0xA
  8354  00020A                     	ds	1
  8355  00020B                     ??_getMajorRevisionID:
  8356  00020B                     ?_getDeviceID:
  8357                           	opt callstack 0
  8358  00020B                     ?_getUserID:
  8359                           	opt callstack 0
  8360  00020B                     I2C2_MasterWrite@length:
  8361                           	opt callstack 0
  8362  00020B                     I2C2_MasterRead@length:
  8363                           	opt callstack 0
  8364  00020B                     ___awdiv@sign:
  8365                           	opt callstack 0
  8366  00020B                     getMinorRevisionID@REVID_RAW:
  8367                           	opt callstack 0
  8368  00020B                     __tdiv_to_l_@quot:
  8369                           	opt callstack 0
  8370                           
  8371                           ; 4 bytes @ 0xB
  8372  00020B                     	ds	1
  8373  00020C                     ___lldiv@counter:
  8374                           	opt callstack 0
  8375  00020C                     __div_to_l_@cntr:
  8376                           	opt callstack 0
  8377  00020C                     I2C2_MasterWrite@address:
  8378                           	opt callstack 0
  8379  00020C                     I2C2_MasterRead@address:
  8380                           	opt callstack 0
  8381  00020C                     ___awdiv@quotient:
  8382                           	opt callstack 0
  8383  00020C                     ___fldiv@rem:
  8384                           	opt callstack 0
  8385                           
  8386                           ; 4 bytes @ 0xC
  8387  00020C                     	ds	1
  8388  00020D                     ?_getDeviceIDString:
  8389                           	opt callstack 0
  8390  00020D                     ?___llmod:
  8391                           	opt callstack 0
  8392  00020D                     __div_to_l_@exp1:
  8393                           	opt callstack 0
  8394  00020D                     getDeviceIDString@inputDevID:
  8395                           	opt callstack 0
  8396  00020D                     getYearsFromOnTime@input_seconds:
  8397                           	opt callstack 0
  8398  00020D                     getDaysFromOnTime@input_seconds:
  8399                           	opt callstack 0
  8400  00020D                     getHoursFromOnTime@input_seconds:
  8401                           	opt callstack 0
  8402  00020D                     getMinutesFromOnTime@input_seconds:
  8403                           	opt callstack 0
  8404  00020D                     getSecondsFromOnTime@input_seconds:
  8405                           	opt callstack 0
  8406  00020D                     ___llmod@dividend:
  8407                           	opt callstack 0
  8408                           
  8409                           ; 4 bytes @ 0xD
  8410  00020D                     	ds	1
  8411  00020E                     ?___flmul:
  8412                           	opt callstack 0
  8413  00020E                     I2C2_MasterWrite@pflag:
  8414                           	opt callstack 0
  8415  00020E                     I2C2_MasterRead@pflag:
  8416                           	opt callstack 0
  8417  00020E                     getMajorRevisionID@REVID_RAW:
  8418                           	opt callstack 0
  8419  00020E                     ___flmul@b:
  8420                           	opt callstack 0
  8421                           
  8422                           ; 4 bytes @ 0xE
  8423  00020E                     	ds	1
  8424  00020F                     ??_getDeviceIDString:
  8425  00020F                     __tdiv_to_l_@cntr:
  8426                           	opt callstack 0
  8427                           
  8428                           ; 1 bytes @ 0xF
  8429  00020F                     	ds	1
  8430  000210                     ??_OLED_PutChar:
  8431  000210                     OLED_Command@temp:
  8432                           	opt callstack 0
  8433  000210                     __tdiv_to_l_@exp1:
  8434                           	opt callstack 0
  8435  000210                     ___fldiv@sign:
  8436                           	opt callstack 0
  8437  000210                     LM73TempSensorInitialize@output_data_array:
  8438                           	opt callstack 0
  8439                           
  8440                           ; 2 bytes @ 0x10
  8441  000210                     	ds	1
  8442  000211                     ??_getDaysFromOnTime:
  8443  000211                     ??_getHoursFromOnTime:
  8444  000211                     ??_getMinutesFromOnTime:
  8445  000211                     ??_getSecondsFromOnTime:
  8446  000211                     getUserID@inputUserID:
  8447                           	opt callstack 0
  8448  000211                     getYearsFromOnTime@years:
  8449                           	opt callstack 0
  8450  000211                     ___fldiv@new_exp:
  8451                           	opt callstack 0
  8452  000211                     ___llmod@divisor:
  8453                           	opt callstack 0
  8454                           
  8455                           ; 4 bytes @ 0x11
  8456  000211                     	ds	1
  8457  000212                     getUserID@IDOffset:
  8458                           	opt callstack 0
  8459  000212                     OLED_Command@data_array:
  8460                           	opt callstack 0
  8461  000212                     ___flmul@a:
  8462                           	opt callstack 0
  8463                           
  8464                           ; 4 bytes @ 0x12
  8465  000212                     	ds	1
  8466  000213                     ___fldiv@grs:
  8467                           	opt callstack 0
  8468                           
  8469                           ; 4 bytes @ 0x13
  8470  000213                     	ds	1
  8471  000214                     OLED_YX@Column:
  8472                           	opt callstack 0
  8473  000214                     OLED_PutChar@data_array:
  8474                           	opt callstack 0
  8475                           
  8476                           ; 9 bytes @ 0x14
  8477  000214                     	ds	1
  8478  000215                     ??_OLED_YX:
  8479  000215                     getDaysFromOnTime@days:
  8480                           	opt callstack 0
  8481  000215                     getHoursFromOnTime@hours:
  8482                           	opt callstack 0
  8483  000215                     getMinutesFromOnTime@minutes:
  8484                           	opt callstack 0
  8485  000215                     getSecondsFromOnTime@seconds:
  8486                           	opt callstack 0
  8487  000215                     ___llmod@counter:
  8488                           	opt callstack 0
  8489                           
  8490                           ; 1 bytes @ 0x15
  8491  000215                     	ds	1
  8492  000216                     ??___flmul:
  8493  000216                     getDaysFromOnTime@years:
  8494                           	opt callstack 0
  8495  000216                     getHoursFromOnTime@years:
  8496                           	opt callstack 0
  8497  000216                     getMinutesFromOnTime@years:
  8498                           	opt callstack 0
  8499  000216                     getSecondsFromOnTime@years:
  8500                           	opt callstack 0
  8501                           
  8502                           ; 1 bytes @ 0x16
  8503  000216                     	ds	1
  8504  000217                     getHoursFromOnTime@days:
  8505                           	opt callstack 0
  8506  000217                     getMinutesFromOnTime@days:
  8507                           	opt callstack 0
  8508  000217                     getSecondsFromOnTime@days:
  8509                           	opt callstack 0
  8510  000217                     ___fldiv@bexp:
  8511                           	opt callstack 0
  8512                           
  8513                           ; 1 bytes @ 0x17
  8514  000217                     	ds	1
  8515  000218                     getMinutesFromOnTime@hours:
  8516                           	opt callstack 0
  8517  000218                     getSecondsFromOnTime@hours:
  8518                           	opt callstack 0
  8519  000218                     OLED_YX@Row:
  8520                           	opt callstack 0
  8521  000218                     ___fldiv@aexp:
  8522                           	opt callstack 0
  8523                           
  8524                           ; 1 bytes @ 0x18
  8525  000218                     	ds	1
  8526  000219                     getSecondsFromOnTime@minutes:
  8527                           	opt callstack 0
  8528                           
  8529                           ; 1 bytes @ 0x19
  8530  000219                     	ds	1
  8531  00021A                     ___flmul@sign:
  8532                           	opt callstack 0
  8533                           
  8534                           ; 1 bytes @ 0x1A
  8535  00021A                     	ds	1
  8536  00021B                     ___flmul@aexp:
  8537                           	opt callstack 0
  8538                           
  8539                           ; 1 bytes @ 0x1B
  8540  00021B                     	ds	1
  8541  00021C                     ___flmul@grs:
  8542                           	opt callstack 0
  8543                           
  8544                           ; 4 bytes @ 0x1C
  8545  00021C                     	ds	1
  8546  00021D                     OLED_PutChar@input_base:
  8547                           	opt callstack 0
  8548                           
  8549                           ; 2 bytes @ 0x1D
  8550  00021D                     	ds	3
  8551  000220                     OLED_PutChar@ch:
  8552                           	opt callstack 0
  8553  000220                     ___flmul@bexp:
  8554                           	opt callstack 0
  8555                           
  8556                           ; 1 bytes @ 0x20
  8557  000220                     	ds	1
  8558  000221                     OLED_Clear@row:
  8559                           	opt callstack 0
  8560  000221                     OLED_WriteString@s:
  8561                           	opt callstack 0
  8562  000221                     ___flmul@prod:
  8563                           	opt callstack 0
  8564                           
  8565                           ; 4 bytes @ 0x21
  8566  000221                     	ds	2
  8567  000223                     OLED_UpdateFromRAMBuffer@char_index:
  8568                           	opt callstack 0
  8569  000223                     OLED_Clear@col:
  8570                           	opt callstack 0
  8571                           
  8572                           ; 2 bytes @ 0x23
  8573  000223                     	ds	1
  8574  000224                     OLED_UpdateFromRAMBuffer@char_index_4304:
  8575                           	opt callstack 0
  8576                           
  8577                           ; 1 bytes @ 0x24
  8578  000224                     	ds	1
  8579  000225                     OLED_UpdateFromRAMBuffer@char_index_4305:
  8580                           	opt callstack 0
  8581  000225                     ___flmul@temp:
  8582                           	opt callstack 0
  8583                           
  8584                           ; 2 bytes @ 0x25
  8585  000225                     	ds	1
  8586  000226                     OLED_UpdateFromRAMBuffer@char_index_4306:
  8587                           	opt callstack 0
  8588                           
  8589                           ; 1 bytes @ 0x26
  8590  000226                     	ds	1
  8591  000227                     ?_fround:
  8592                           	opt callstack 0
  8593  000227                     ?_scale:
  8594                           	opt callstack 0
  8595                           
  8596                           ; 4 bytes @ 0x27
  8597  000227                     	ds	4
  8598  00022B                     _fround$6031:
  8599                           	opt callstack 0
  8600  00022B                     _scale$6032:
  8601                           	opt callstack 0
  8602                           
  8603                           ; 4 bytes @ 0x2B
  8604  00022B                     	ds	4
  8605  00022F                     scale@scl:
  8606                           	opt callstack 0
  8607  00022F                     _fround$6030:
  8608                           	opt callstack 0
  8609                           
  8610                           ; 4 bytes @ 0x2F
  8611  00022F                     	ds	1
  8612  000230                     ?___fltol:
  8613                           	opt callstack 0
  8614  000230                     ___fltol@f1:
  8615                           	opt callstack 0
  8616                           
  8617                           ; 4 bytes @ 0x30
  8618  000230                     	ds	3
  8619  000233                     fround@prec:
  8620                           	opt callstack 0
  8621                           
  8622                           ; 1 bytes @ 0x33
  8623  000233                     	ds	1
  8624  000234                     ??___fltol:
  8625  000234                     ?___fladd:
  8626                           	opt callstack 0
  8627  000234                     ___fladd@b:
  8628                           	opt callstack 0
  8629                           
  8630                           ; 4 bytes @ 0x34
  8631  000234                     	ds	4
  8632  000238                     ___fltol@sign1:
  8633                           	opt callstack 0
  8634  000238                     ___fladd@a:
  8635                           	opt callstack 0
  8636                           
  8637                           ; 4 bytes @ 0x38
  8638  000238                     	ds	1
  8639  000239                     ___fltol@exp1:
  8640                           	opt callstack 0
  8641                           
  8642                           ; 1 bytes @ 0x39
  8643  000239                     	ds	1
  8644  00023A                     ?_abs:
  8645                           	opt callstack 0
  8646  00023A                     abs@a:
  8647                           	opt callstack 0
  8648                           
  8649                           ; 2 bytes @ 0x3A
  8650  00023A                     	ds	2
  8651  00023C                     ??_abs:
  8652  00023C                     ??___fladd:
  8653                           
  8654                           ; 1 bytes @ 0x3C
  8655  00023C                     	ds	2
  8656  00023E                     ?___xxtofl:
  8657                           	opt callstack 0
  8658  00023E                     ___xxtofl@val:
  8659                           	opt callstack 0
  8660                           
  8661                           ; 4 bytes @ 0x3E
  8662  00023E                     	ds	2
  8663  000240                     ___fladd@signs:
  8664                           	opt callstack 0
  8665                           
  8666                           ; 1 bytes @ 0x40
  8667  000240                     	ds	1
  8668  000241                     ___fladd@aexp:
  8669                           	opt callstack 0
  8670                           
  8671                           ; 1 bytes @ 0x41
  8672  000241                     	ds	1
  8673  000242                     ??___xxtofl:
  8674  000242                     ___fladd@bexp:
  8675                           	opt callstack 0
  8676                           
  8677                           ; 1 bytes @ 0x42
  8678  000242                     	ds	1
  8679  000243                     ___fladd@grs:
  8680                           	opt callstack 0
  8681                           
  8682                           ; 1 bytes @ 0x43
  8683  000243                     	ds	3
  8684  000246                     ___xxtofl@sign:
  8685                           	opt callstack 0
  8686                           
  8687                           ; 1 bytes @ 0x46
  8688  000246                     	ds	1
  8689  000247                     ___xxtofl@exp:
  8690                           	opt callstack 0
  8691                           
  8692                           ; 1 bytes @ 0x47
  8693  000247                     	ds	1
  8694  000248                     ___xxtofl@arg:
  8695                           	opt callstack 0
  8696                           
  8697                           ; 4 bytes @ 0x48
  8698  000248                     	ds	4
  8699  00024C                     ??_LM73Convert:
  8700  00024C                     ?___flsub:
  8701                           	opt callstack 0
  8702  00024C                     ___flsub@b:
  8703                           	opt callstack 0
  8704                           
  8705                           ; 4 bytes @ 0x4C
  8706  00024C                     	ds	3
  8707  00024F                     LM73Convert@QI_Conv:
  8708                           	opt callstack 0
  8709                           
  8710                           ; 2 bytes @ 0x4F
  8711  00024F                     	ds	1
  8712  000250                     ___flsub@a:
  8713                           	opt callstack 0
  8714                           
  8715                           ; 4 bytes @ 0x50
  8716  000250                     	ds	1
  8717  000251                     LM73Convert@POS5_Conv:
  8718                           	opt callstack 0
  8719                           
  8720                           ; 2 bytes @ 0x51
  8721  000251                     	ds	2
  8722  000253                     LM73Convert@Ambient_Conv:
  8723                           	opt callstack 0
  8724                           
  8725                           ; 2 bytes @ 0x53
  8726  000253                     	ds	1
  8727  000254                     ?__doprnt:
  8728                           	opt callstack 0
  8729  000254                     __doprnt@pb:
  8730                           	opt callstack 0
  8731                           
  8732                           ; 2 bytes @ 0x54
  8733  000254                     	ds	1
  8734  000255                     
  8735                           ; 1 bytes @ 0x55
  8736  000255                     	ds	1
  8737  000256                     __doprnt@f:
  8738                           	opt callstack 0
  8739                           
  8740                           ; 2 bytes @ 0x56
  8741  000256                     	ds	2
  8742  000258                     __doprnt@ap:
  8743                           	opt callstack 0
  8744                           
  8745                           ; 2 bytes @ 0x58
  8746  000258                     	ds	2
  8747  00025A                     ??__doprnt:
  8748                           
  8749                           ; 1 bytes @ 0x5A
  8750  00025A                     	ds	4
  8751  00025E                     __doprnt$6033:
  8752                           	opt callstack 0
  8753                           
  8754                           ; 4 bytes @ 0x5E
  8755  00025E                     	ds	4
  8756  000262                     __doprnt@idx:
  8757                           	opt callstack 0
  8758                           
  8759                           ; 1 bytes @ 0x62
  8760  000262                     	ds	1
  8761  000263                     __doprnt$4975:
  8762                           	opt callstack 0
  8763                           
  8764                           ; 2 bytes @ 0x63
  8765  000263                     	ds	2
  8766  000265                     __doprnt$4976:
  8767                           	opt callstack 0
  8768                           
  8769                           ; 2 bytes @ 0x65
  8770  000265                     	ds	2
  8771  000267                     __doprnt$4977:
  8772                           	opt callstack 0
  8773                           
  8774                           ; 2 bytes @ 0x67
  8775  000267                     	ds	2
  8776  000269                     __doprnt$4978:
  8777                           	opt callstack 0
  8778                           
  8779                           ; 2 bytes @ 0x69
  8780  000269                     	ds	2
  8781  00026B                     __doprnt$4979:
  8782                           	opt callstack 0
  8783                           
  8784                           ; 2 bytes @ 0x6B
  8785  00026B                     	ds	2
  8786  00026D                     __doprnt$4980:
  8787                           	opt callstack 0
  8788                           
  8789                           ; 2 bytes @ 0x6D
  8790  00026D                     	ds	2
  8791  00026F                     __doprnt$4981:
  8792                           	opt callstack 0
  8793                           
  8794                           ; 2 bytes @ 0x6F
  8795  00026F                     	ds	2
  8796  000271                     __doprnt$4982:
  8797                           	opt callstack 0
  8798                           
  8799                           ; 2 bytes @ 0x71
  8800  000271                     	ds	2
  8801  000273                     __doprnt@cp:
  8802                           	opt callstack 0
  8803                           
  8804                           ; 2 bytes @ 0x73
  8805  000273                     	ds	2
  8806  000275                     __doprnt@len:
  8807                           	opt callstack 0
  8808                           
  8809                           ; 2 bytes @ 0x75
  8810  000275                     	ds	2
  8811  000277                     __doprnt@eexp:
  8812                           	opt callstack 0
  8813                           
  8814                           ; 2 bytes @ 0x77
  8815  000277                     	ds	2
  8816  000279                     __doprnt@tmpval:
  8817                           	opt callstack 0
  8818                           
  8819                           ; 4 bytes @ 0x79
  8820  000279                     	ds	4
  8821  00027D                     __doprnt@fval:
  8822                           	opt callstack 0
  8823                           
  8824                           ; 4 bytes @ 0x7D
  8825  00027D                     	ds	4
  8826  000281                     __doprnt@val:
  8827                           	opt callstack 0
  8828                           
  8829                           ; 4 bytes @ 0x81
  8830  000281                     	ds	4
  8831  000285                     __doprnt@width:
  8832                           	opt callstack 0
  8833                           
  8834                           ; 2 bytes @ 0x85
  8835  000285                     	ds	2
  8836  000287                     __doprnt@prec:
  8837                           	opt callstack 0
  8838                           
  8839                           ; 2 bytes @ 0x87
  8840  000287                     	ds	2
  8841  000289                     __doprnt@flag:
  8842                           	opt callstack 0
  8843                           
  8844                           ; 2 bytes @ 0x89
  8845  000289                     	ds	2
  8846  00028B                     __doprnt@c:
  8847                           	opt callstack 0
  8848                           
  8849                           ; 1 bytes @ 0x8B
  8850  00028B                     	ds	1
  8851  00028C                     ?_sprintf:
  8852                           	opt callstack 0
  8853  00028C                     sprintf@wh:
  8854                           	opt callstack 0
  8855                           
  8856                           ; 2 bytes @ 0x8C
  8857  00028C                     	ds	2
  8858  00028E                     sprintf@f:
  8859                           	opt callstack 0
  8860                           
  8861                           ; 2 bytes @ 0x8E
  8862  00028E                     	ds	10
  8863  000298                     sprintf@ap:
  8864                           	opt callstack 0
  8865                           
  8866                           ; 2 bytes @ 0x98
  8867  000298                     	ds	2
  8868  00029A                     sprintf@pb:
  8869                           	opt callstack 0
  8870                           
  8871                           ; 5 bytes @ 0x9A
  8872  00029A                     	ds	5
  8873  00029F                     ?_getStringSecondsAsTime:
  8874                           	opt callstack 0
  8875  00029F                     ?_floatToEngineeringFormat:
  8876                           	opt callstack 0
  8877  00029F                     getStringSecondsAsTime@input_seconds:
  8878                           	opt callstack 0
  8879  00029F                     floatToEngineeringFormat@input_value:
  8880                           	opt callstack 0
  8881                           
  8882                           ; 4 bytes @ 0x9F
  8883  00029F                     	ds	4
  8884  0002A3                     ??_getStringSecondsAsTime:
  8885  0002A3                     floatToEngineeringFormat@mag:
  8886                           	opt callstack 0
  8887                           
  8888                           ; 4 bytes @ 0xA3
  8889  0002A3                     	ds	4
  8890  0002A7                     floatToEngineeringFormat@res:
  8891                           	opt callstack 0
  8892                           
  8893                           ; 2 bytes @ 0xA7
  8894  0002A7                     	ds	2
  8895  0002A9                     ??_OLED_updateHandler:
  8896  0002A9                     ?_printf:
  8897                           	opt callstack 0
  8898  0002A9                     printf@f:
  8899                           	opt callstack 0
  8900                           
  8901                           ; 2 bytes @ 0xA9
  8902  0002A9                     	ds	8
  8903  0002B1                     printf@ap:
  8904                           	opt callstack 0
  8905                           
  8906                           ; 2 bytes @ 0xB1
  8907  0002B1                     	ds	2
  8908  0002B3                     printf@pb:
  8909                           	opt callstack 0
  8910                           
  8911                           ; 5 bytes @ 0xB3
  8912  0002B3                     	ds	5
  8913  0002B8                     terminalTextAttributes@background_color:
  8914                           	opt callstack 0
  8915                           
  8916                           ; 1 bytes @ 0xB8
  8917  0002B8                     	ds	1
  8918  0002B9                     terminalTextAttributes@input_attribute:
  8919                           	opt callstack 0
  8920                           
  8921                           ; 1 bytes @ 0xB9
  8922  0002B9                     	ds	1
  8923  0002BA                     ringBufferLUT@line:
  8924                           	opt callstack 0
  8925                           
  8926                           ; 2 bytes @ 0xBA
  8927  0002BA                     	ds	2
  8928  0002BC                     ??_ringBufferLUT:
  8929                           
  8930                           ; 1 bytes @ 0xBC
  8931  0002BC                     	ds	2
  8932                           
  8933                           	psect	cstackBANK1
  8934  000100                     __pcstackBANK1:
  8935                           	opt callstack 0
  8936  000100                     ??_I2C2_Stop:
  8937  000100                     ?i1___xxtofl:
  8938                           	opt callstack 0
  8939  000100                     ADCC_StartConversion@channel:
  8940                           	opt callstack 0
  8941  000100                     i1TMR3_WriteTimer@timerVal:
  8942                           	opt callstack 0
  8943  000100                     i1___xxtofl@val:
  8944                           	opt callstack 0
  8945                           
  8946                           ; 4 bytes @ 0x0
  8947  000100                     	ds	1
  8948  000101                     
  8949                           ; 1 bytes @ 0x1
  8950  000101                     	ds	1
  8951  000102                     I2C2_Stop@completion_code:
  8952                           	opt callstack 0
  8953                           
  8954                           ; 1 bytes @ 0x2
  8955  000102                     	ds	1
  8956  000103                     ??_I2C2_ISR:
  8957                           
  8958                           ; 1 bytes @ 0x3
  8959  000103                     	ds	1
  8960  000104                     ??i1___xxtofl:
  8961                           
  8962                           ; 1 bytes @ 0x4
  8963  000104                     	ds	4
  8964  000108                     i1___xxtofl@sign:
  8965                           	opt callstack 0
  8966                           
  8967                           ; 1 bytes @ 0x8
  8968  000108                     	ds	1
  8969  000109                     i1___xxtofl@exp:
  8970                           	opt callstack 0
  8971                           
  8972                           ; 1 bytes @ 0x9
  8973  000109                     	ds	1
  8974  00010A                     i1___xxtofl@arg:
  8975                           	opt callstack 0
  8976                           
  8977                           ; 4 bytes @ 0xA
  8978  00010A                     	ds	4
  8979  00010E                     ?i1___fladd:
  8980                           	opt callstack 0
  8981  00010E                     i1___fladd@b:
  8982                           	opt callstack 0
  8983                           
  8984                           ; 4 bytes @ 0xE
  8985  00010E                     	ds	4
  8986  000112                     i1___fladd@a:
  8987                           	opt callstack 0
  8988                           
  8989                           ; 4 bytes @ 0x12
  8990  000112                     	ds	4
  8991  000116                     ??i1___fladd:
  8992                           
  8993                           ; 1 bytes @ 0x16
  8994  000116                     	ds	4
  8995  00011A                     i1___fladd@signs:
  8996                           	opt callstack 0
  8997                           
  8998                           ; 1 bytes @ 0x1A
  8999  00011A                     	ds	1
  9000  00011B                     i1___fladd@aexp:
  9001                           	opt callstack 0
  9002                           
  9003                           ; 1 bytes @ 0x1B
  9004  00011B                     	ds	1
  9005  00011C                     i1___fladd@bexp:
  9006                           	opt callstack 0
  9007                           
  9008                           ; 1 bytes @ 0x1C
  9009  00011C                     	ds	1
  9010  00011D                     i1___fladd@grs:
  9011                           	opt callstack 0
  9012                           
  9013                           ; 1 bytes @ 0x1D
  9014  00011D                     	ds	1
  9015  00011E                     ?i1___fldiv:
  9016                           	opt callstack 0
  9017  00011E                     i1___fldiv@b:
  9018                           	opt callstack 0
  9019                           
  9020                           ; 4 bytes @ 0x1E
  9021  00011E                     	ds	4
  9022  000122                     i1___fldiv@a:
  9023                           	opt callstack 0
  9024                           
  9025                           ; 4 bytes @ 0x22
  9026  000122                     	ds	4
  9027  000126                     ??i1___fldiv:
  9028                           
  9029                           ; 1 bytes @ 0x26
  9030  000126                     	ds	4
  9031  00012A                     i1___fldiv@rem:
  9032                           	opt callstack 0
  9033                           
  9034                           ; 4 bytes @ 0x2A
  9035  00012A                     	ds	4
  9036  00012E                     i1___fldiv@sign:
  9037                           	opt callstack 0
  9038                           
  9039                           ; 1 bytes @ 0x2E
  9040  00012E                     	ds	1
  9041  00012F                     i1___fldiv@new_exp:
  9042                           	opt callstack 0
  9043                           
  9044                           ; 2 bytes @ 0x2F
  9045  00012F                     	ds	2
  9046  000131                     i1___fldiv@grs:
  9047                           	opt callstack 0
  9048                           
  9049                           ; 4 bytes @ 0x31
  9050  000131                     	ds	4
  9051  000135                     i1___fldiv@bexp:
  9052                           	opt callstack 0
  9053                           
  9054                           ; 1 bytes @ 0x35
  9055  000135                     	ds	1
  9056  000136                     i1___fldiv@aexp:
  9057                           	opt callstack 0
  9058                           
  9059                           ; 1 bytes @ 0x36
  9060  000136                     	ds	1
  9061  000137                     ?i1___flmul:
  9062                           	opt callstack 0
  9063  000137                     i1___flmul@b:
  9064                           	opt callstack 0
  9065                           
  9066                           ; 4 bytes @ 0x37
  9067  000137                     	ds	4
  9068  00013B                     i1___flmul@a:
  9069                           	opt callstack 0
  9070                           
  9071                           ; 4 bytes @ 0x3B
  9072  00013B                     	ds	4
  9073  00013F                     ??i1___flmul:
  9074                           
  9075                           ; 1 bytes @ 0x3F
  9076  00013F                     	ds	4
  9077  000143                     i1___flmul@sign:
  9078                           	opt callstack 0
  9079                           
  9080                           ; 1 bytes @ 0x43
  9081  000143                     	ds	1
  9082  000144                     i1___flmul@grs:
  9083                           	opt callstack 0
  9084                           
  9085                           ; 4 bytes @ 0x44
  9086  000144                     	ds	4
  9087  000148                     i1___flmul@aexp:
  9088                           	opt callstack 0
  9089                           
  9090                           ; 1 bytes @ 0x48
  9091  000148                     	ds	1
  9092  000149                     i1___flmul@bexp:
  9093                           	opt callstack 0
  9094                           
  9095                           ; 1 bytes @ 0x49
  9096  000149                     	ds	1
  9097  00014A                     i1___flmul@prod:
  9098                           	opt callstack 0
  9099                           
  9100                           ; 4 bytes @ 0x4A
  9101  00014A                     	ds	4
  9102  00014E                     i1___flmul@temp:
  9103                           	opt callstack 0
  9104                           
  9105                           ; 2 bytes @ 0x4E
  9106  00014E                     	ds	2
  9107  000150                     freqMeasConvert@qi_period:
  9108                           	opt callstack 0
  9109                           
  9110                           ; 4 bytes @ 0x50
  9111  000150                     	ds	4
  9112  000154                     CCP2_CallBack@capturedValue:
  9113                           	opt callstack 0
  9114                           
  9115                           ; 2 bytes @ 0x54
  9116  000154                     	ds	2
  9117  000156                     CCP2_CaptureISR@module:
  9118                           	opt callstack 0
  9119                           
  9120                           ; 2 bytes @ 0x56
  9121  000156                     	ds	2
  9122  000158                     ??_INTERRUPT_InterruptManagerLow:
  9123                           
  9124                           ; 1 bytes @ 0x58
  9125  000158                     	ds	9
  9126                           
  9127                           	psect	cstackBANK0
  9128  000060                     __pcstackBANK0:
  9129                           	opt callstack 0
  9130  000060                     i2___fladd@signs:
  9131                           	opt callstack 0
  9132                           
  9133                           ; 1 bytes @ 0x0
  9134  000060                     	ds	1
  9135  000061                     i2___fladd@aexp:
  9136                           	opt callstack 0
  9137                           
  9138                           ; 1 bytes @ 0x1
  9139  000061                     	ds	1
  9140  000062                     i2___fladd@bexp:
  9141                           	opt callstack 0
  9142                           
  9143                           ; 1 bytes @ 0x2
  9144  000062                     	ds	1
  9145  000063                     i2___fladd@grs:
  9146                           	opt callstack 0
  9147                           
  9148                           ; 1 bytes @ 0x3
  9149  000063                     	ds	1
  9150  000064                     ?i2___flsub:
  9151                           	opt callstack 0
  9152  000064                     i2___flsub@b:
  9153                           	opt callstack 0
  9154                           
  9155                           ; 4 bytes @ 0x4
  9156  000064                     	ds	4
  9157  000068                     i2___flsub@a:
  9158                           	opt callstack 0
  9159                           
  9160                           ; 4 bytes @ 0x8
  9161  000068                     	ds	4
  9162  00006C                     ?i2__doprnt:
  9163                           	opt callstack 0
  9164  00006C                     i2__doprnt@pb:
  9165                           	opt callstack 0
  9166  00006C                     _ADC_PostProcessingHandler$6413:
  9167                           	opt callstack 0
  9168                           
  9169                           ; 4 bytes @ 0xC
  9170  00006C                     	ds	2
  9171  00006E                     i2__doprnt@f:
  9172                           	opt callstack 0
  9173                           
  9174                           ; 2 bytes @ 0xE
  9175  00006E                     	ds	2
  9176  000070                     i2__doprnt@ap:
  9177                           	opt callstack 0
  9178  000070                     _ADC_PostProcessingHandler$6414:
  9179                           	opt callstack 0
  9180                           
  9181                           ; 4 bytes @ 0x10
  9182  000070                     	ds	2
  9183  000072                     ??i2__doprnt:
  9184                           
  9185                           ; 1 bytes @ 0x12
  9186  000072                     	ds	2
  9187  000074                     _ADC_PostProcessingHandler$6415:
  9188                           	opt callstack 0
  9189                           
  9190                           ; 4 bytes @ 0x14
  9191  000074                     	ds	2
  9192  000076                     i2__doprnt$6419:
  9193                           	opt callstack 0
  9194                           
  9195                           ; 4 bytes @ 0x16
  9196  000076                     	ds	2
  9197  000078                     ADC_PostProcessingHandler@current_adc_channel:
  9198                           	opt callstack 0
  9199                           
  9200                           ; 1 bytes @ 0x18
  9201  000078                     	ds	1
  9202  000079                     ADC_PostProcessingHandler@i:
  9203                           	opt callstack 0
  9204                           
  9205                           ; 1 bytes @ 0x19
  9206  000079                     	ds	1
  9207  00007A                     ADC_PostProcessingHandler@i_3557:
  9208                           	opt callstack 0
  9209  00007A                     i2__doprnt@idx:
  9210                           	opt callstack 0
  9211                           
  9212                           ; 1 bytes @ 0x1A
  9213  00007A                     	ds	1
  9214  00007B                     i2__doprnt$4975:
  9215                           	opt callstack 0
  9216  00007B                     _ADC_PostProcessingHandler$6411:
  9217                           	opt callstack 0
  9218                           
  9219                           ; 4 bytes @ 0x1B
  9220  00007B                     	ds	2
  9221  00007D                     i2__doprnt$4976:
  9222                           	opt callstack 0
  9223                           
  9224                           ; 2 bytes @ 0x1D
  9225  00007D                     	ds	2
  9226  00007F                     i2__doprnt$4977:
  9227                           	opt callstack 0
  9228  00007F                     _ADC_PostProcessingHandler$6412:
  9229                           	opt callstack 0
  9230                           
  9231                           ; 4 bytes @ 0x1F
  9232  00007F                     	ds	2
  9233  000081                     i2__doprnt$4978:
  9234                           	opt callstack 0
  9235                           
  9236                           ; 2 bytes @ 0x21
  9237  000081                     	ds	2
  9238  000083                     i2__doprnt$4979:
  9239                           	opt callstack 0
  9240                           
  9241                           ; 2 bytes @ 0x23
  9242  000083                     	ds	2
  9243  000085                     i2__doprnt$4980:
  9244                           	opt callstack 0
  9245                           
  9246                           ; 2 bytes @ 0x25
  9247  000085                     	ds	2
  9248  000087                     i2__doprnt$4981:
  9249                           	opt callstack 0
  9250                           
  9251                           ; 2 bytes @ 0x27
  9252  000087                     	ds	2
  9253  000089                     i2__doprnt$4982:
  9254                           	opt callstack 0
  9255                           
  9256                           ; 2 bytes @ 0x29
  9257  000089                     	ds	2
  9258  00008B                     i2__doprnt@cp:
  9259                           	opt callstack 0
  9260                           
  9261                           ; 2 bytes @ 0x2B
  9262  00008B                     	ds	2
  9263  00008D                     i2__doprnt@len:
  9264                           	opt callstack 0
  9265                           
  9266                           ; 2 bytes @ 0x2D
  9267  00008D                     	ds	2
  9268  00008F                     i2__doprnt@eexp:
  9269                           	opt callstack 0
  9270                           
  9271                           ; 2 bytes @ 0x2F
  9272  00008F                     	ds	2
  9273  000091                     i2__doprnt@tmpval:
  9274                           	opt callstack 0
  9275                           
  9276                           ; 4 bytes @ 0x31
  9277  000091                     	ds	4
  9278  000095                     i2__doprnt@fval:
  9279                           	opt callstack 0
  9280                           
  9281                           ; 4 bytes @ 0x35
  9282  000095                     	ds	4
  9283  000099                     i2__doprnt@val:
  9284                           	opt callstack 0
  9285                           
  9286                           ; 4 bytes @ 0x39
  9287  000099                     	ds	4
  9288  00009D                     i2__doprnt@width:
  9289                           	opt callstack 0
  9290                           
  9291                           ; 2 bytes @ 0x3D
  9292  00009D                     	ds	2
  9293  00009F                     i2__doprnt@prec:
  9294                           	opt callstack 0
  9295                           
  9296                           ; 2 bytes @ 0x3F
  9297  00009F                     	ds	2
  9298  0000A1                     i2__doprnt@flag:
  9299                           	opt callstack 0
  9300                           
  9301                           ; 2 bytes @ 0x41
  9302  0000A1                     	ds	2
  9303  0000A3                     i2__doprnt@c:
  9304                           	opt callstack 0
  9305                           
  9306                           ; 1 bytes @ 0x43
  9307  0000A3                     	ds	1
  9308  0000A4                     ?i2_printf:
  9309                           	opt callstack 0
  9310  0000A4                     i2printf@f:
  9311                           	opt callstack 0
  9312                           
  9313                           ; 2 bytes @ 0x44
  9314  0000A4                     	ds	2
  9315  0000A6                     i2printf@ap:
  9316                           	opt callstack 0
  9317                           
  9318                           ; 2 bytes @ 0x46
  9319  0000A6                     	ds	2
  9320  0000A8                     i2printf@pb:
  9321                           	opt callstack 0
  9322                           
  9323                           ; 5 bytes @ 0x48
  9324  0000A8                     	ds	5
  9325  0000AD                     ??_INTERRUPT_InterruptManagerHigh:
  9326                           
  9327                           ; 1 bytes @ 0x4D
  9328  0000AD                     	ds	12
  9329                           
  9330                           	psect	cstackCOMRAM
  9331  000001                     __pcstackCOMRAM:
  9332                           	opt callstack 0
  9333  000001                     ??i2_isdigit:
  9334  000001                     ?_ADCC_GetConversionResult:
  9335                           	opt callstack 0
  9336  000001                     ?_ADCC_GetFilterValue:
  9337                           	opt callstack 0
  9338  000001                     ?i2___wmul:
  9339                           	opt callstack 0
  9340  000001                     ?i2___awmod:
  9341                           	opt callstack 0
  9342  000001                     ?i2___lwmod:
  9343                           	opt callstack 0
  9344  000001                     ?i2___lldiv:
  9345                           	opt callstack 0
  9346  000001                     ?i2__div_to_l_:
  9347                           	opt callstack 0
  9348  000001                     ?i2___flneg:
  9349                           	opt callstack 0
  9350  000001                     ?i2__tdiv_to_l_:
  9351                           	opt callstack 0
  9352  000001                     i2EUSART2_Write@txData:
  9353                           	opt callstack 0
  9354  000001                     i2TMR3_WriteTimer@timerVal:
  9355                           	opt callstack 0
  9356  000001                     i2TMR1_WriteTimer@timerVal:
  9357                           	opt callstack 0
  9358  000001                     i2___wmul@multiplier:
  9359                           	opt callstack 0
  9360  000001                     i2___awmod@dividend:
  9361                           	opt callstack 0
  9362  000001                     i2___lwmod@dividend:
  9363                           	opt callstack 0
  9364  000001                     i2___lldiv@dividend:
  9365                           	opt callstack 0
  9366  000001                     i2__div_to_l_@f1:
  9367                           	opt callstack 0
  9368  000001                     i2___fleq@ff1:
  9369                           	opt callstack 0
  9370  000001                     i2___flge@ff1:
  9371                           	opt callstack 0
  9372  000001                     i2___flneg@f1:
  9373                           	opt callstack 0
  9374  000001                     i2__tdiv_to_l_@f1:
  9375                           	opt callstack 0
  9376                           
  9377                           ; 4 bytes @ 0x0
  9378  000001                     	ds	1
  9379  000002                     i2putch@txData:
  9380                           	opt callstack 0
  9381  000002                     i2_isdigit$5449:
  9382                           	opt callstack 0
  9383                           
  9384                           ; 1 bytes @ 0x1
  9385  000002                     	ds	1
  9386  000003                     ??_ADCC_GetConversionResult:
  9387  000003                     ??_ADCC_GetFilterValue:
  9388  000003                     i2isdigit@c:
  9389                           	opt callstack 0
  9390  000003                     i2___wmul@multiplicand:
  9391                           	opt callstack 0
  9392  000003                     i2___awmod@divisor:
  9393                           	opt callstack 0
  9394  000003                     i2___lwmod@divisor:
  9395                           	opt callstack 0
  9396                           
  9397                           ; 2 bytes @ 0x2
  9398  000003                     	ds	2
  9399  000005                     ?_fabs:
  9400                           	opt callstack 0
  9401  000005                     ?i2___xxtofl:
  9402                           	opt callstack 0
  9403  000005                     i2___awmod@counter:
  9404                           	opt callstack 0
  9405  000005                     i2___lwmod@counter:
  9406                           	opt callstack 0
  9407  000005                     i2___wmul@product:
  9408                           	opt callstack 0
  9409  000005                     fabs@d:
  9410                           	opt callstack 0
  9411  000005                     i2___lldiv@divisor:
  9412                           	opt callstack 0
  9413  000005                     i2__div_to_l_@f2:
  9414                           	opt callstack 0
  9415  000005                     i2___fleq@ff2:
  9416                           	opt callstack 0
  9417  000005                     i2___flge@ff2:
  9418                           	opt callstack 0
  9419  000005                     i2__tdiv_to_l_@f2:
  9420                           	opt callstack 0
  9421  000005                     i2___xxtofl@val:
  9422                           	opt callstack 0
  9423                           
  9424                           ; 4 bytes @ 0x4
  9425  000005                     	ds	1
  9426  000006                     ?i2___lwdiv:
  9427                           	opt callstack 0
  9428  000006                     i2___awmod@sign:
  9429                           	opt callstack 0
  9430  000006                     i2___lwdiv@dividend:
  9431                           	opt callstack 0
  9432                           
  9433                           ; 2 bytes @ 0x5
  9434  000006                     	ds	1
  9435  000007                     ?i2___awdiv:
  9436                           	opt callstack 0
  9437  000007                     i2___awdiv@dividend:
  9438                           	opt callstack 0
  9439                           
  9440                           ; 2 bytes @ 0x6
  9441  000007                     	ds	1
  9442  000008                     i2___lwdiv@divisor:
  9443                           	opt callstack 0
  9444                           
  9445                           ; 2 bytes @ 0x7
  9446  000008                     	ds	1
  9447  000009                     ??i2___fleq:
  9448  000009                     ??i2___flge:
  9449  000009                     ??i2__tdiv_to_l_:
  9450  000009                     ??i2___xxtofl:
  9451  000009                     i2___awdiv@divisor:
  9452                           	opt callstack 0
  9453  000009                     i2___lldiv@quotient:
  9454                           	opt callstack 0
  9455  000009                     i2__div_to_l_@quot:
  9456                           	opt callstack 0
  9457                           
  9458                           ; 4 bytes @ 0x8
  9459  000009                     	ds	1
  9460  00000A                     i2___lwdiv@counter:
  9461                           	opt callstack 0
  9462                           
  9463                           ; 1 bytes @ 0x9
  9464  00000A                     	ds	1
  9465  00000B                     i2___awdiv@counter:
  9466                           	opt callstack 0
  9467  00000B                     i2___lwdiv@quotient:
  9468                           	opt callstack 0
  9469                           
  9470                           ; 2 bytes @ 0xA
  9471  00000B                     	ds	1
  9472  00000C                     i2___awdiv@sign:
  9473                           	opt callstack 0
  9474  00000C                     i2__tdiv_to_l_@quot:
  9475                           	opt callstack 0
  9476                           
  9477                           ; 4 bytes @ 0xB
  9478  00000C                     	ds	1
  9479  00000D                     i2___lldiv@counter:
  9480                           	opt callstack 0
  9481  00000D                     i2__div_to_l_@cntr:
  9482                           	opt callstack 0
  9483  00000D                     i2___xxtofl@sign:
  9484                           	opt callstack 0
  9485  00000D                     i2___awdiv@quotient:
  9486                           	opt callstack 0
  9487                           
  9488                           ; 2 bytes @ 0xC
  9489  00000D                     	ds	1
  9490  00000E                     ?i2___llmod:
  9491                           	opt callstack 0
  9492  00000E                     i2__div_to_l_@exp1:
  9493                           	opt callstack 0
  9494  00000E                     i2___xxtofl@exp:
  9495                           	opt callstack 0
  9496  00000E                     i2___llmod@dividend:
  9497                           	opt callstack 0
  9498                           
  9499                           ; 4 bytes @ 0xD
  9500  00000E                     	ds	1
  9501  00000F                     i2___xxtofl@arg:
  9502                           	opt callstack 0
  9503                           
  9504                           ; 4 bytes @ 0xE
  9505  00000F                     	ds	1
  9506  000010                     i2__tdiv_to_l_@cntr:
  9507                           	opt callstack 0
  9508                           
  9509                           ; 1 bytes @ 0xF
  9510  000010                     	ds	1
  9511  000011                     i2__tdiv_to_l_@exp1:
  9512                           	opt callstack 0
  9513                           
  9514                           ; 1 bytes @ 0x10
  9515  000011                     	ds	1
  9516  000012                     i2___llmod@divisor:
  9517                           	opt callstack 0
  9518                           
  9519                           ; 4 bytes @ 0x11
  9520  000012                     	ds	1
  9521  000013                     ?i2___fldiv:
  9522                           	opt callstack 0
  9523  000013                     i2___fldiv@b:
  9524                           	opt callstack 0
  9525                           
  9526                           ; 4 bytes @ 0x12
  9527  000013                     	ds	3
  9528  000016                     i2___llmod@counter:
  9529                           	opt callstack 0
  9530                           
  9531                           ; 1 bytes @ 0x15
  9532  000016                     	ds	1
  9533  000017                     i2___fldiv@a:
  9534                           	opt callstack 0
  9535                           
  9536                           ; 4 bytes @ 0x16
  9537  000017                     	ds	4
  9538  00001B                     ??i2___fldiv:
  9539                           
  9540                           ; 1 bytes @ 0x1A
  9541  00001B                     	ds	4
  9542  00001F                     i2___fldiv@rem:
  9543                           	opt callstack 0
  9544                           
  9545                           ; 4 bytes @ 0x1E
  9546  00001F                     	ds	4
  9547  000023                     i2___fldiv@sign:
  9548                           	opt callstack 0
  9549                           
  9550                           ; 1 bytes @ 0x22
  9551  000023                     	ds	1
  9552  000024                     i2___fldiv@new_exp:
  9553                           	opt callstack 0
  9554                           
  9555                           ; 2 bytes @ 0x23
  9556  000024                     	ds	2
  9557  000026                     i2___fldiv@grs:
  9558                           	opt callstack 0
  9559                           
  9560                           ; 4 bytes @ 0x25
  9561  000026                     	ds	4
  9562  00002A                     i2___fldiv@bexp:
  9563                           	opt callstack 0
  9564                           
  9565                           ; 1 bytes @ 0x29
  9566  00002A                     	ds	1
  9567  00002B                     i2___fldiv@aexp:
  9568                           	opt callstack 0
  9569                           
  9570                           ; 1 bytes @ 0x2A
  9571  00002B                     	ds	1
  9572  00002C                     ?i2___flmul:
  9573                           	opt callstack 0
  9574  00002C                     i2___flmul@b:
  9575                           	opt callstack 0
  9576                           
  9577                           ; 4 bytes @ 0x2B
  9578  00002C                     	ds	4
  9579  000030                     i2___flmul@a:
  9580                           	opt callstack 0
  9581                           
  9582                           ; 4 bytes @ 0x2F
  9583  000030                     	ds	4
  9584  000034                     ??i2___flmul:
  9585                           
  9586                           ; 1 bytes @ 0x33
  9587  000034                     	ds	4
  9588  000038                     i2___flmul@sign:
  9589                           	opt callstack 0
  9590                           
  9591                           ; 1 bytes @ 0x37
  9592  000038                     	ds	1
  9593  000039                     i2___flmul@aexp:
  9594                           	opt callstack 0
  9595                           
  9596                           ; 1 bytes @ 0x38
  9597  000039                     	ds	1
  9598  00003A                     i2___flmul@grs:
  9599                           	opt callstack 0
  9600                           
  9601                           ; 4 bytes @ 0x39
  9602  00003A                     	ds	4
  9603  00003E                     i2___flmul@bexp:
  9604                           	opt callstack 0
  9605                           
  9606                           ; 1 bytes @ 0x3D
  9607  00003E                     	ds	1
  9608  00003F                     i2___flmul@prod:
  9609                           	opt callstack 0
  9610                           
  9611                           ; 4 bytes @ 0x3E
  9612  00003F                     	ds	4
  9613  000043                     i2___flmul@temp:
  9614                           	opt callstack 0
  9615                           
  9616                           ; 2 bytes @ 0x42
  9617  000043                     	ds	2
  9618  000045                     ?i2_fround:
  9619                           	opt callstack 0
  9620  000045                     ?i2_scale:
  9621                           	opt callstack 0
  9622                           
  9623                           ; 4 bytes @ 0x44
  9624  000045                     	ds	4
  9625  000049                     i2_fround$6417:
  9626                           	opt callstack 0
  9627  000049                     i2_scale$6418:
  9628                           	opt callstack 0
  9629                           
  9630                           ; 4 bytes @ 0x48
  9631  000049                     	ds	4
  9632  00004D                     i2scale@scl:
  9633                           	opt callstack 0
  9634  00004D                     i2_fround$6416:
  9635                           	opt callstack 0
  9636                           
  9637                           ; 4 bytes @ 0x4C
  9638  00004D                     	ds	1
  9639  00004E                     ?i2___fltol:
  9640                           	opt callstack 0
  9641  00004E                     i2___fltol@f1:
  9642                           	opt callstack 0
  9643                           
  9644                           ; 4 bytes @ 0x4D
  9645  00004E                     	ds	3
  9646  000051                     i2fround@prec:
  9647                           	opt callstack 0
  9648                           
  9649                           ; 1 bytes @ 0x50
  9650  000051                     	ds	1
  9651  000052                     ??i2___fltol:
  9652  000052                     ?i2___fladd:
  9653                           	opt callstack 0
  9654  000052                     i2___fladd@b:
  9655                           	opt callstack 0
  9656                           
  9657                           ; 4 bytes @ 0x51
  9658  000052                     	ds	4
  9659  000056                     i2___fltol@sign1:
  9660                           	opt callstack 0
  9661  000056                     i2___fladd@a:
  9662                           	opt callstack 0
  9663                           
  9664                           ; 4 bytes @ 0x55
  9665  000056                     	ds	1
  9666  000057                     i2___fltol@exp1:
  9667                           	opt callstack 0
  9668                           
  9669                           ; 1 bytes @ 0x56
  9670  000057                     	ds	3
  9671  00005A                     ??i2___fladd:
  9672                           
  9673                           ; 1 bytes @ 0x59
  9674  00005A                     	ds	4
  9675  00005E                     ??_heartbeatTimerHandler:
  9676  00005E                     
  9677                           ; 1 bytes @ 0x5D
  9678  00005E                     	ds	1
  9679  00005F                     
  9680                           ; 1 bytes @ 0x5E
  9681 ;;
  9682 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  9683 ;;
  9684 ;; *************** function _main *****************
  9685 ;; Defined at:
  9686 ;;		line 76 in file "main.c"
  9687 ;; Parameters:    Size  Location     Type
  9688 ;;		None
  9689 ;; Auto vars:     Size  Location     Type
  9690 ;;		None
  9691 ;; Return value:  Size  Location     Type
  9692 ;;                  1    wreg      void 
  9693 ;; Registers used:
  9694 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9695 ;; Tracked objects:
  9696 ;;		On entry : 0/0
  9697 ;;		On exit  : 0/0
  9698 ;;		Unchanged: 0/0
  9699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9702 ;;      Temps:          0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0
  9703 ;;      Totals:         0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0
  9704 ;;Total ram usage:        2 bytes
  9705 ;; Hardware stack levels required when called:   19
  9706 ;; This function calls:
  9707 ;;		_ADCC_SetADTIInterruptHandler
  9708 ;;		_INT1_SetInterruptHandler
  9709 ;;		_INT2_SetInterruptHandler
  9710 ;;		_IOCBF2_SetInterruptHandler
  9711 ;;		_IOCBF3_SetInterruptHandler
  9712 ;;		_LM73AcquisitionHandler
  9713 ;;		_LM73TempSensorInitialize
  9714 ;;		_OLED_Clear
  9715 ;;		_OLED_Init
  9716 ;;		_OLED_updateHandler
  9717 ;;		_SYSTEM_Initialize
  9718 ;;		_TMR0_SetInterruptHandler
  9719 ;;		_TMR1_Reload
  9720 ;;		_TMR1_SetInterruptHandler
  9721 ;;		_TMR1_StopTimer
  9722 ;;		_TMR2_SetInterruptHandler
  9723 ;;		_TMR3_Reload
  9724 ;;		_TMR3_SetInterruptHandler
  9725 ;;		_TMR3_StopTimer
  9726 ;;		_TMR5_StopTimer
  9727 ;;		_TMR5_WriteTimer
  9728 ;;		_freqMeasStartCaptures
  9729 ;;		_getCauseOfReset
  9730 ;;		_getCauseOfResetString
  9731 ;;		_printCurrentMeasurements
  9732 ;;		_printf
  9733 ;;		_terminalClearScreen
  9734 ;;		_terminalSetCursorHome
  9735 ;;		_terminalTextAttributes
  9736 ;;		_terminalTextAttributesReset
  9737 ;;		_terminal_ringBufferPull
  9738 ;;		_updateErrorLEDs
  9739 ;; This function is called by:
  9740 ;;		Startup code after reset
  9741 ;; This function uses a non-reentrant model
  9742 ;;
  9743                           
  9744                           	psect	text0
  9745  0179B4                     __ptext0:
  9746                           	opt callstack 0
  9747  0179B4                     _main:
  9748                           	opt callstack 12
  9749                           
  9750                           ;main.c: 80: reset_cause = getCauseOfReset();
  9751                           
  9752                           ;incstack = 0
  9753  0179B4  ECF4  F0DA         	call	_getCauseOfReset	;wreg free
  9754  0179B8  0102               	movlb	2	; () banked
  9755  0179BA  6FFF               	movwf	_reset_cause& (0+255),b
  9756                           
  9757                           ; BSR set to: 2
  9758                           ;main.c: 83: _delay((unsigned long)((250)*(64000000/4000.0)));
  9759  0179BC  0E15               	movlw	21
  9760  0179BE  0104               	movlb	4	; () banked
  9761  0179C0  6FC7               	movwf	(??_main+1)& (0+255),b
  9762  0179C2  0E4B               	movlw	75
  9763  0179C4  6FC6               	movwf	??_main& (0+255),b
  9764  0179C6  0EBE               	movlw	190
  9765  0179C8                     u29187:
  9766  0179C8  2EE8               	decfsz	wreg,f,c
  9767  0179CA  D7FE               	bra	u29187
  9768  0179CC  2FC6               	decfsz	??_main& (0+255),f,b
  9769  0179CE  D7FC               	bra	u29187
  9770  0179D0  2FC7               	decfsz	(??_main+1)& (0+255),f,b
  9771  0179D2  D7FA               	bra	u29187
  9772  0179D4  F000               	nop	
  9773                           
  9774                           ;main.c: 87: SYSTEM_Initialize();
  9775  0179D6  ECC6  F0DE         	call	_SYSTEM_Initialize	;wreg free
  9776                           
  9777                           ;main.c: 90: TMR0_SetInterruptHandler(heartbeatTimerHandler);
  9778  0179DA  0E5E               	movlw	low _heartbeatTimerHandler
  9779  0179DC  0102               	movlb	2	; () banked
  9780  0179DE  6F00               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  9781  0179E0  0E96               	movlw	high _heartbeatTimerHandler
  9782  0179E2  6F01               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9783  0179E4  0E01               	movlw	low (_heartbeatTimerHandler shr (0+16))
  9784  0179E6  6F02               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9785  0179E8  ECA2  F0E3         	call	_TMR0_SetInterruptHandler	;wreg free
  9786                           
  9787                           ;main.c: 93: TMR2_SetInterruptHandler(ADC_acquisitionTimerHandler);
  9788  0179EC  0E78               	movlw	low _ADC_acquisitionTimerHandler
  9789  0179EE  0102               	movlb	2	; () banked
  9790  0179F0  6F00               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  9791  0179F2  0EC5               	movlw	high _ADC_acquisitionTimerHandler
  9792  0179F4  6F01               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9793  0179F6  0E01               	movlw	low (_ADC_acquisitionTimerHandler shr (0+16))
  9794  0179F8  6F02               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9795  0179FA  EC94  F0E3         	call	_TMR2_SetInterruptHandler	;wreg free
  9796                           
  9797                           ;main.c: 96: ADCC_SetADTIInterruptHandler(ADC_PostProcessingHandler);
  9798  0179FE  0E82               	movlw	low _ADC_PostProcessingHandler
  9799  017A00  0102               	movlb	2	; () banked
  9800  017A02  6F00               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
  9801  017A04  0E40               	movlw	high _ADC_PostProcessingHandler
  9802  017A06  6F01               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
  9803  017A08  0E01               	movlw	low (_ADC_PostProcessingHandler shr (0+16))
  9804  017A0A  6F02               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
  9805  017A0C  ECD3  F0E3         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  9806                           
  9807                           ;main.c: 99: INT1_SetInterruptHandler(leftCapTouchHandler);
  9808  017A10  0E20               	movlw	low _leftCapTouchHandler
  9809  017A12  0102               	movlb	2	; () banked
  9810  017A14  6F00               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  9811  017A16  0EC6               	movlw	high _leftCapTouchHandler
  9812  017A18  6F01               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9813  017A1A  0E01               	movlw	low (_leftCapTouchHandler shr (0+16))
  9814  017A1C  6F02               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9815  017A1E  ECBE  F0E3         	call	_INT1_SetInterruptHandler	;wreg free
  9816                           
  9817                           ;main.c: 102: INT2_SetInterruptHandler(rightCapTouchHandler);
  9818  017A22  0E0A               	movlw	low _rightCapTouchHandler
  9819  017A24  0102               	movlb	2	; () banked
  9820  017A26  6F00               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  9821  017A28  0EC6               	movlw	high _rightCapTouchHandler
  9822  017A2A  6F01               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9823  017A2C  0E01               	movlw	low (_rightCapTouchHandler shr (0+16))
  9824  017A2E  6F02               	movwf	(INT2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9825  017A30  ECB7  F0E3         	call	_INT2_SetInterruptHandler	;wreg free
  9826                           
  9827                           ;main.c: 105: IOCBF2_SetInterruptHandler(QIIdleIOCHandler);
  9828  017A34  0E5E               	movlw	low _QIIdleIOCHandler
  9829  017A36  0102               	movlb	2	; () banked
  9830  017A38  6F00               	movwf	IOCBF2_SetInterruptHandler@InterruptHandler& (0+255),b
  9831  017A3A  0EC6               	movlw	high _QIIdleIOCHandler
  9832  017A3C  6F01               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9833  017A3E  0E01               	movlw	low (_QIIdleIOCHandler shr (0+16))
  9834  017A40  6F02               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9835  017A42  ECB0  F0E3         	call	_IOCBF2_SetInterruptHandler	;wreg free
  9836                           
  9837                           ;main.c: 108: IOCBF3_SetInterruptHandler(QIChargeIOCHandler);
  9838  017A46  0E0A               	movlw	low _QIChargeIOCHandler
  9839  017A48  0102               	movlb	2	; () banked
  9840  017A4A  6F00               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler& (0+255),b
  9841  017A4C  0EC5               	movlw	high _QIChargeIOCHandler
  9842  017A4E  6F01               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9843  017A50  0E01               	movlw	low (_QIChargeIOCHandler shr (0+16))
  9844  017A52  6F02               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9845  017A54  ECA9  F0E3         	call	_IOCBF3_SetInterruptHandler	;wreg free
  9846                           
  9847                           ;main.c: 111: TMR3_SetInterruptHandler(QIIdleChargedTimerHandler);
  9848  017A58  0E74               	movlw	low _QIIdleChargedTimerHandler
  9849  017A5A  0102               	movlb	2	; () banked
  9850  017A5C  6F00               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  9851  017A5E  0EC4               	movlw	high _QIIdleChargedTimerHandler
  9852  017A60  6F01               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9853  017A62  0E01               	movlw	low (_QIIdleChargedTimerHandler shr (0+16))
  9854  017A64  6F02               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9855  017A66  EC8D  F0E3         	call	_TMR3_SetInterruptHandler	;wreg free
  9856                           
  9857                           ;main.c: 112: TMR3_StopTimer();
  9858  017A6A  EC39  F0E4         	call	_TMR3_StopTimer	;wreg free
  9859                           
  9860                           ;main.c: 113: TMR3_Reload();
  9861  017A6E  EC7F  F0E3         	call	_TMR3_Reload	;wreg free
  9862                           
  9863                           ;main.c: 116: TMR1_SetInterruptHandler(QIErrorTimerHandler);
  9864  017A72  0EF4               	movlw	low _QIErrorTimerHandler
  9865  017A74  0102               	movlb	2	; () banked
  9866  017A76  6F00               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  9867  017A78  0EC5               	movlw	high _QIErrorTimerHandler
  9868  017A7A  6F01               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9869  017A7C  0E01               	movlw	low (_QIErrorTimerHandler shr (0+16))
  9870  017A7E  6F02               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9871  017A80  EC9B  F0E3         	call	_TMR1_SetInterruptHandler	;wreg free
  9872                           
  9873                           ;main.c: 117: TMR1_StopTimer();
  9874  017A84  EC3B  F0E4         	call	_TMR1_StopTimer	;wreg free
  9875                           
  9876                           ;main.c: 118: TMR1_Reload();
  9877  017A88  EC86  F0E3         	call	_TMR1_Reload	;wreg free
  9878                           
  9879                           ;main.c: 122: TMR5_StopTimer();
  9880  017A8C  EC37  F0E4         	call	_TMR5_StopTimer	;wreg free
  9881                           
  9882                           ;main.c: 123: TMR5_WriteTimer(0);
  9883  017A90  0E00               	movlw	0
  9884  017A92  0102               	movlb	2	; () banked
  9885  017A94  6F01               	movwf	(TMR5_WriteTimer@timerVal+1)& (0+255),b
  9886  017A96  0E00               	movlw	0
  9887  017A98  6F00               	movwf	TMR5_WriteTimer@timerVal& (0+255),b
  9888  017A9A  ECEA  F0E1         	call	_TMR5_WriteTimer	;wreg free
  9889                           
  9890                           ;main.c: 126: (INTCONbits.GIEH = 1);
  9891  017A9E  8EF2               	bsf	4082,7,c	;volatile
  9892                           
  9893                           ;main.c: 129: (INTCONbits.GIEL = 1);
  9894  017AA0  8CF2               	bsf	4082,6,c	;volatile
  9895                           
  9896                           ;main.c: 132: terminalClearScreen();
  9897  017AA2  EC77  F0E3         	call	_terminalClearScreen	;wreg free
  9898                           
  9899                           ;main.c: 133: terminalSetCursorHome();
  9900  017AA6  EC6F  F0E3         	call	_terminalSetCursorHome	;wreg free
  9901                           
  9902                           ;main.c: 135: OLED_Init();
  9903  017AAA  EC9B  F0D6         	call	_OLED_Init	;wreg free
  9904                           
  9905                           ;main.c: 136: OLED_Clear();
  9906  017AAE  ECE5  F0DE         	call	_OLED_Clear	;wreg free
  9907                           
  9908                           ;main.c: 139: OLED_Frame = OLED_Boot_Frame_1;
  9909  017AB2  0E00               	movlw	0
  9910  017AB4  0102               	movlb	2	; () banked
  9911  017AB6  6FD7               	movwf	_OLED_Frame& (0+255),b
  9912                           
  9913                           ; BSR set to: 2
  9914                           ;main.c: 140: OLED_updateHandler();
  9915  017AB8  EC1E  F097         	call	_OLED_updateHandler	;wreg free
  9916                           
  9917                           ;main.c: 143: LM73TempSensorInitialize();
  9918  017ABC  EC46  F0C7         	call	_LM73TempSensorInitialize	;wreg free
  9919                           
  9920                           ;main.c: 146: terminalTextAttributes(GREEN, BLACK, NORMAL);
  9921  017AC0  0E00               	movlw	0
  9922  017AC2  0102               	movlb	2	; () banked
  9923  017AC4  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
  9924  017AC6  0E00               	movlw	0
  9925  017AC8  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9926  017ACA  0E02               	movlw	2
  9927  017ACC  ECE9  F0AF         	call	_terminalTextAttributes
  9928                           
  9929                           ;main.c: 147: printf("QI Charger with Digital Monitoring\n\r";main.c: 148: "Boot Complet
      +                          e\n\r");
  9930  017AD0  0EA8               	movlw	low STR_2
  9931  017AD2  0102               	movlb	2	; () banked
  9932  017AD4  6FA9               	movwf	printf@f& (0+255),b
  9933  017AD6  0EF1               	movlw	high STR_2
  9934  017AD8  6FAA               	movwf	(printf@f+1)& (0+255),b
  9935  017ADA  EC04  F0DF         	call	_printf	;wreg free
  9936                           
  9937                           ;main.c: 151: if ( reset_cause != Power_On_Reset) {
  9938  017ADE  0102               	movlb	2	; () banked
  9939  017AE0  05FF               	decf	_reset_cause& (0+255),w,b
  9940  017AE2  B4D8               	btfsc	status,2,c
  9941  017AE4  D008               	goto	l22570
  9942                           
  9943                           ; BSR set to: 2
  9944                           ;main.c: 153: terminalTextAttributes(RED, BLACK, NORMAL);
  9945  017AE6  0E00               	movlw	0
  9946  017AE8  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
  9947  017AEA  0E00               	movlw	0
  9948  017AEC  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9949  017AEE  0E01               	movlw	1
  9950  017AF0  ECE9  F0AF         	call	_terminalTextAttributes
  9951                           
  9952                           ;main.c: 155: }
  9953  017AF4  D007               	goto	l1339
  9954  017AF6                     l22570:
  9955                           
  9956                           ; BSR set to: 2
  9957                           ;main.c: 157: else {;main.c: 159: terminalTextAttributes(GREEN, BLACK, NORMAL);
  9958  017AF6  0E00               	movlw	0
  9959  017AF8  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
  9960  017AFA  0E00               	movlw	0
  9961  017AFC  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9962  017AFE  0E02               	movlw	2
  9963  017B00  ECE9  F0AF         	call	_terminalTextAttributes
  9964  017B04                     l1339:
  9965                           
  9966                           ;main.c: 161: };main.c: 164: printf("Cause of most recent device reset was: %s\n\r", get
      +                          CauseOfResetString(reset_cause));
  9967  017B04  0EDF               	movlw	low STR_3
  9968  017B06  0102               	movlb	2	; () banked
  9969  017B08  6FA9               	movwf	printf@f& (0+255),b
  9970  017B0A  0EF3               	movlw	high STR_3
  9971  017B0C  6FAA               	movwf	(printf@f+1)& (0+255),b
  9972  017B0E  51FF               	movf	_reset_cause& (0+255),w,b
  9973  017B10  EC38  F0E0         	call	_getCauseOfResetString
  9974  017B14  C200  F2AB         	movff	?_getCauseOfResetString,?_printf+2
  9975  017B18  C201  F2AC         	movff	?_getCauseOfResetString+1,?_printf+3
  9976  017B1C  EC04  F0DF         	call	_printf	;wreg free
  9977                           
  9978                           ;main.c: 166: terminalTextAttributes(GREEN, BLACK, NORMAL);
  9979  017B20  0E00               	movlw	0
  9980  017B22  0102               	movlb	2	; () banked
  9981  017B24  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
  9982  017B26  0E00               	movlw	0
  9983  017B28  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9984  017B2A  0E02               	movlw	2
  9985  017B2C  ECE9  F0AF         	call	_terminalTextAttributes
  9986                           
  9987                           ;main.c: 168: LATCbits.LATC2 = 0;
  9988  017B30  9485               	bcf	3973,2,c	;volatile
  9989                           
  9990                           ;main.c: 169: printf("QI Wireless Power Conversion Enabled\n\r");
  9991  017B32  0ED7               	movlw	low STR_4
  9992  017B34  0102               	movlb	2	; () banked
  9993  017B36  6FA9               	movwf	printf@f& (0+255),b
  9994  017B38  0EF4               	movlw	high STR_4
  9995  017B3A  6FAA               	movwf	(printf@f+1)& (0+255),b
  9996  017B3C  EC04  F0DF         	call	_printf	;wreg free
  9997                           
  9998                           ;main.c: 171: terminalTextAttributes(YELLOW, BLACK, NORMAL);
  9999  017B40  0E00               	movlw	0
 10000  017B42  0102               	movlb	2	; () banked
 10001  017B44  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10002  017B46  0E00               	movlw	0
 10003  017B48  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10004  017B4A  0E03               	movlw	3
 10005  017B4C  ECE9  F0AF         	call	_terminalTextAttributes
 10006                           
 10007                           ;main.c: 172: printf("\n\rHelp messages and neutral responses appear in yellow\n\r");
 10008  017B50  0E54               	movlw	low STR_5
 10009  017B52  0102               	movlb	2	; () banked
 10010  017B54  6FA9               	movwf	printf@f& (0+255),b
 10011  017B56  0EEF               	movlw	high STR_5
 10012  017B58  6FAA               	movwf	(printf@f+1)& (0+255),b
 10013  017B5A  EC04  F0DF         	call	_printf	;wreg free
 10014                           
 10015                           ;main.c: 173: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10016  017B5E  0E00               	movlw	0
 10017  017B60  0102               	movlb	2	; () banked
 10018  017B62  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10019  017B64  0E00               	movlw	0
 10020  017B66  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10021  017B68  0E02               	movlw	2
 10022  017B6A  ECE9  F0AF         	call	_terminalTextAttributes
 10023                           
 10024                           ;main.c: 174: printf("System parameters and affirmative responses appear in green\n\r");
 10025  017B6E  0E73               	movlw	low STR_6
 10026  017B70  0102               	movlb	2	; () banked
 10027  017B72  6FA9               	movwf	printf@f& (0+255),b
 10028  017B74  0EED               	movlw	high STR_6
 10029  017B76  6FAA               	movwf	(printf@f+1)& (0+255),b
 10030  017B78  EC04  F0DF         	call	_printf	;wreg free
 10031                           
 10032                           ;main.c: 175: terminalTextAttributes(CYAN, BLACK, NORMAL);
 10033  017B7C  0E00               	movlw	0
 10034  017B7E  0102               	movlb	2	; () banked
 10035  017B80  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10036  017B82  0E00               	movlw	0
 10037  017B84  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10038  017B86  0E06               	movlw	6
 10039  017B88  ECE9  F0AF         	call	_terminalTextAttributes
 10040                           
 10041                           ;main.c: 176: printf("Measurement responses appear in cyan\n\r");
 10042  017B8C  0EFE               	movlw	low STR_7
 10043  017B8E  0102               	movlb	2	; () banked
 10044  017B90  6FA9               	movwf	printf@f& (0+255),b
 10045  017B92  0EF4               	movlw	high STR_7
 10046  017B94  6FAA               	movwf	(printf@f+1)& (0+255),b
 10047  017B96  EC04  F0DF         	call	_printf	;wreg free
 10048                           
 10049                           ;main.c: 177: terminalTextAttributes(RED, BLACK, NORMAL);
 10050  017B9A  0E00               	movlw	0
 10051  017B9C  0102               	movlb	2	; () banked
 10052  017B9E  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10053  017BA0  0E00               	movlw	0
 10054  017BA2  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10055  017BA4  0E01               	movlw	1
 10056  017BA6  ECE9  F0AF         	call	_terminalTextAttributes
 10057                           
 10058                           ;main.c: 178: printf("Errors and negative responses appear in red\n\r");
 10059  017BAA  0E2B               	movlw	low STR_8
 10060  017BAC  0102               	movlb	2	; () banked
 10061  017BAE  6FA9               	movwf	printf@f& (0+255),b
 10062  017BB0  0EF3               	movlw	high STR_8
 10063  017BB2  6FAA               	movwf	(printf@f+1)& (0+255),b
 10064  017BB4  EC04  F0DF         	call	_printf	;wreg free
 10065                           
 10066                           ;main.c: 179: terminalTextAttributesReset();
 10067  017BB8  EC5F  F0E3         	call	_terminalTextAttributesReset	;wreg free
 10068                           
 10069                           ;main.c: 180: printf("User input appears in white\n\r");
 10070  017BBC  0ED3               	movlw	low STR_9
 10071  017BBE  0102               	movlb	2	; () banked
 10072  017BC0  6FA9               	movwf	printf@f& (0+255),b
 10073  017BC2  0EF7               	movlw	high STR_9
 10074  017BC4  6FAA               	movwf	(printf@f+1)& (0+255),b
 10075  017BC6  EC04  F0DF         	call	_printf	;wreg free
 10076                           
 10077                           ;main.c: 181: terminalTextAttributes(YELLOW, BLACK, NORMAL);
 10078  017BCA  0E00               	movlw	0
 10079  017BCC  0102               	movlb	2	; () banked
 10080  017BCE  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10081  017BD0  0E00               	movlw	0
 10082  017BD2  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10083  017BD4  0E03               	movlw	3
 10084  017BD6  ECE9  F0AF         	call	_terminalTextAttributes
 10085                           
 10086                           ;main.c: 182: printf("\n\rCall 'Help' for list of supported commands\n\r");
 10087  017BDA  0ECE               	movlw	low STR_10
 10088  017BDC  0102               	movlb	2	; () banked
 10089  017BDE  6FA9               	movwf	printf@f& (0+255),b
 10090  017BE0  0EF2               	movlw	high STR_10
 10091  017BE2  6FAA               	movwf	(printf@f+1)& (0+255),b
 10092  017BE4  EC04  F0DF         	call	_printf	;wreg free
 10093                           
 10094                           ;main.c: 185: terminalTextAttributesReset();
 10095  017BE8  EC5F  F0E3         	call	_terminalTextAttributesReset	;wreg free
 10096                           
 10097                           ;main.c: 188: if (PORTBbits.RB3 == 0 && PORTBbits.RB2 == 0) nxq_charge_state = QI_Idle;
 10098  017BEC  A68E               	btfss	3982,3,c	;volatile
 10099  017BEE  B48E               	btfsc	3982,2,c	;volatile
 10100  017BF0  D002               	goto	l1340
 10101  017BF2  0E00               	movlw	0
 10102  017BF4  D004               	goto	L1
 10103  017BF6                     l1340:
 10104                           
 10105                           ;main.c: 189: else if (PORTBbits.RB3 == 1 && PORTBbits.RB2 == 1) nxq_charge_state = QI_F
      +                          ully_Charged;
 10106  017BF6  B68E               	btfsc	3982,3,c	;volatile
 10107  017BF8  A48E               	btfss	3982,2,c	;volatile
 10108  017BFA  D003               	goto	l22584
 10109  017BFC  0E02               	movlw	2
 10110  017BFE                     L1:
 10111  017BFE  0101               	movlb	1	; () banked
 10112  017C00  6F95               	movwf	_nxq_charge_state& (0+255),b
 10113  017C02                     l22584:
 10114                           
 10115                           ;main.c: 195: if (eusart2RxStringReady) terminal_ringBufferPull();
 10116  017C02  0100               	movlb	0	; () banked
 10117  017C04  B1FD               	btfsc	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 10118                           
 10119                           ; BSR set to: 0
 10120  017C06  EC77  F0D0         	call	_terminal_ringBufferPull	;wreg free
 10121                           
 10122                           ;main.c: 198: if (OLED_update_flag) OLED_updateHandler();
 10123  017C0A  0102               	movlb	2	; () banked
 10124  017C0C  51D6               	movf	_OLED_update_flag& (0+255),w,b
 10125  017C0E  A4D8               	btfss	status,2,c
 10126                           
 10127                           ; BSR set to: 2
 10128  017C10  EC1E  F097         	call	_OLED_updateHandler	;wreg free
 10129                           
 10130                           ;main.c: 201: if (LM73_start_flag) LM73AcquisitionHandler();
 10131  017C14  0102               	movlb	2	; () banked
 10132  017C16  51D8               	movf	_LM73_start_flag& (0+255),w,b
 10133  017C18  A4D8               	btfss	status,2,c
 10134                           
 10135                           ; BSR set to: 2
 10136  017C1A  EC62  F0C8         	call	_LM73AcquisitionHandler	;wreg free
 10137                           
 10138                           ;main.c: 204: if (freq_meas_start_flag) freqMeasStartCaptures();
 10139  017C1E  0102               	movlb	2	; () banked
 10140  017C20  51DA               	movf	_freq_meas_start_flag& (0+255),w,b
 10141  017C22  A4D8               	btfss	status,2,c
 10142                           
 10143                           ; BSR set to: 2
 10144  017C24  EC0E  F0E4         	call	_freqMeasStartCaptures	;wreg free
 10145                           
 10146                           ;main.c: 207: if (live_measurement_request_flag) {
 10147  017C28  0102               	movlb	2	; () banked
 10148  017C2A  51D9               	movf	_live_measurement_request_flag& (0+255),w,b
 10149  017C2C  B4D8               	btfsc	status,2,c
 10150  017C2E  D028               	goto	l22620
 10151                           
 10152                           ; BSR set to: 2
 10153                           ;main.c: 209: live_measurement_request_flag = 0;
 10154  017C30  0E00               	movlw	0
 10155  017C32  6FD9               	movwf	_live_measurement_request_flag& (0+255),b
 10156                           
 10157                           ; BSR set to: 2
 10158                           ;main.c: 211: terminalClearScreen();
 10159  017C34  EC77  F0E3         	call	_terminalClearScreen	;wreg free
 10160                           
 10161                           ;main.c: 212: terminalSetCursorHome();
 10162  017C38  EC6F  F0E3         	call	_terminalSetCursorHome	;wreg free
 10163                           
 10164                           ;main.c: 214: terminalTextAttributes(GREEN, BLACK, BOLD);
 10165  017C3C  0E00               	movlw	0
 10166  017C3E  0102               	movlb	2	; () banked
 10167  017C40  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10168  017C42  0E01               	movlw	1
 10169  017C44  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10170  017C46  0E02               	movlw	2
 10171  017C48  ECE9  F0AF         	call	_terminalTextAttributes
 10172                           
 10173                           ;main.c: 215: printf("Live Measurements:\n\r\n\r");
 10174  017C4C  0ED7               	movlw	low STR_11
 10175  017C4E  0102               	movlb	2	; () banked
 10176  017C50  6FA9               	movwf	printf@f& (0+255),b
 10177  017C52  0EF9               	movlw	high STR_11
 10178  017C54  6FAA               	movwf	(printf@f+1)& (0+255),b
 10179  017C56  EC04  F0DF         	call	_printf	;wreg free
 10180                           
 10181                           ;main.c: 217: printCurrentMeasurements();
 10182  017C5A  ECC5  F0A7         	call	_printCurrentMeasurements	;wreg free
 10183                           
 10184                           ;main.c: 219: terminalTextAttributes(YELLOW, BLACK, REVERSE);
 10185  017C5E  0E00               	movlw	0
 10186  017C60  0102               	movlb	2	; () banked
 10187  017C62  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10188  017C64  0E04               	movlw	4
 10189  017C66  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10190  017C68  0E03               	movlw	3
 10191  017C6A  ECE9  F0AF         	call	_terminalTextAttributes
 10192                           
 10193                           ;main.c: 220: printf("Press enter key to exit\n\r\n\r");
 10194  017C6E  0E63               	movlw	low STR_12
 10195  017C70  0102               	movlb	2	; () banked
 10196  017C72  6FA9               	movwf	printf@f& (0+255),b
 10197  017C74  0EF8               	movlw	high STR_12
 10198  017C76  6FAA               	movwf	(printf@f+1)& (0+255),b
 10199  017C78  EC04  F0DF         	call	_printf	;wreg free
 10200                           
 10201                           ;main.c: 221: terminalTextAttributesReset();
 10202  017C7C  EC5F  F0E3         	call	_terminalTextAttributesReset	;wreg free
 10203  017C80                     l22620:
 10204                           
 10205                           ;main.c: 223: };main.c: 226: updateErrorLEDs();
 10206  017C80  EC76  F0DD         	call	_updateErrorLEDs	;wreg free
 10207  017C84  D7BE               	goto	l22584
 10208  017C86                     __end_of_main:
 10209                           	opt callstack 0
 10210                           
 10211 ;; *************** function _terminal_ringBufferPull *****************
 10212 ;; Defined at:
 10213 ;;		line 6 in file "ring_buffer_interface.c"
 10214 ;; Parameters:    Size  Location     Type
 10215 ;;		None
 10216 ;; Auto vars:     Size  Location     Type
 10217 ;;  index           2    2[BANK4 ] int 
 10218 ;;  index           2    4[BANK4 ] int 
 10219 ;;  charNumber      2    0[BANK4 ] int 
 10220 ;; Return value:  Size  Location     Type
 10221 ;;                  1    wreg      void 
 10222 ;; Registers used:
 10223 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10224 ;; Tracked objects:
 10225 ;;		On entry : 0/0
 10226 ;;		On exit  : 0/0
 10227 ;;		Unchanged: 0/0
 10228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10230 ;;      Locals:         0       0       0       0       0       6       0       0       0       0       0       0       
      +0       0       0       0
 10231 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
 10232 ;;      Totals:         0       0       0       0       1       6       0       0       0       0       0       0       
      +0       0       0       0
 10233 ;;Total ram usage:        7 bytes
 10234 ;; Hardware stack levels used:    1
 10235 ;; Hardware stack levels required when called:   18
 10236 ;; This function calls:
 10237 ;;		_EUSART2_Read
 10238 ;;		_ringBufferLUT
 10239 ;;		_strlen
 10240 ;; This function is called by:
 10241 ;;		_main
 10242 ;; This function uses a non-reentrant model
 10243 ;;
 10244                           
 10245                           	psect	text1
 10246  01A0EE                     __ptext1:
 10247                           	opt callstack 0
 10248  01A0EE                     _terminal_ringBufferPull:
 10249                           	opt callstack 12
 10250                           
 10251                           ;ring_buffer_interface.c: 8: int charNumber = eusart2RxCount;
 10252                           
 10253                           ;incstack = 0
 10254  01A0EE  C197  F4C0         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
 10255  01A0F2  0104               	movlb	4	; () banked
 10256  01A0F4  6BC1               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
 10257                           
 10258                           ; BSR set to: 4
 10259                           ;ring_buffer_interface.c: 11: for (int index = 0; index < 64; index++) {
 10260  01A0F6  0E00               	movlw	0
 10261  01A0F8  6FC5               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
 10262  01A0FA  0E00               	movlw	0
 10263  01A0FC  6FC4               	movwf	terminal_ringBufferPull@index& (0+255),b
 10264  01A0FE                     l22302:
 10265                           
 10266                           ; BSR set to: 4
 10267                           ;ring_buffer_interface.c: 13: line[index] = '\0';
 10268  01A0FE  0E44               	movlw	low _line
 10269  01A100  25C4               	addwf	terminal_ringBufferPull@index& (0+255),w,b
 10270  01A102  6ED9               	movwf	fsr2l,c
 10271  01A104  0E03               	movlw	high _line
 10272  01A106  21C5               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
 10273  01A108  6EDA               	movwf	fsr2h,c
 10274  01A10A  0E00               	movlw	0
 10275  01A10C  6EDF               	movwf	indf2,c
 10276                           
 10277                           ; BSR set to: 4
 10278  01A10E  4BC4               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
 10279  01A110  2BC5               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
 10280                           
 10281                           ; BSR set to: 4
 10282  01A112  BFC5               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
 10283  01A114  D7F4               	goto	l22302
 10284  01A116  51C5               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
 10285  01A118  E104               	bnz	u28310
 10286  01A11A  0E40               	movlw	64
 10287  01A11C  5DC4               	subwf	terminal_ringBufferPull@index& (0+255),w,b
 10288  01A11E  A0D8               	btfss	status,0,c
 10289  01A120  D7EE               	goto	l22302
 10290  01A122                     u28310:
 10291                           
 10292                           ; BSR set to: 4
 10293                           ;ring_buffer_interface.c: 15: };ring_buffer_interface.c: 18: for(int index = 0; index < 
      +                          charNumber; index++){
 10294  01A122  0E00               	movlw	0
 10295  01A124  6FC3               	movwf	(terminal_ringBufferPull@index_4740+1)& (0+255),b
 10296  01A126  0E00               	movlw	0
 10297  01A128  6FC2               	movwf	terminal_ringBufferPull@index_4740& (0+255),b
 10298  01A12A  D00F               	goto	l22314
 10299  01A12C                     l22310:
 10300                           
 10301                           ; BSR set to: 3
 10302                           ;ring_buffer_interface.c: 20: line[index] = EUSART2_Read();
 10303  01A12C  ECA7  F0DE         	call	_EUSART2_Read	;wreg free
 10304  01A130  0103               	movlb	3	; () banked
 10305  01A132  6FFF               	movwf	??_terminal_ringBufferPull& (0+255),b
 10306  01A134  0E44               	movlw	low _line
 10307  01A136  0104               	movlb	4	; () banked
 10308  01A138  25C2               	addwf	terminal_ringBufferPull@index_4740& (0+255),w,b
 10309  01A13A  6ED9               	movwf	fsr2l,c
 10310  01A13C  0E03               	movlw	high _line
 10311  01A13E  21C3               	addwfc	(terminal_ringBufferPull@index_4740+1)& (0+255),w,b
 10312  01A140  6EDA               	movwf	fsr2h,c
 10313  01A142  C3FF  FFDF         	movff	??_terminal_ringBufferPull,indf2
 10314                           
 10315                           ; BSR set to: 4
 10316  01A146  4BC2               	infsnz	terminal_ringBufferPull@index_4740& (0+255),f,b
 10317  01A148  2BC3               	incf	(terminal_ringBufferPull@index_4740+1)& (0+255),f,b
 10318  01A14A                     l22314:
 10319                           
 10320                           ; BSR set to: 4
 10321  01A14A  51C0               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
 10322  01A14C  5DC2               	subwf	terminal_ringBufferPull@index_4740& (0+255),w,b
 10323  01A14E  51C3               	movf	(terminal_ringBufferPull@index_4740+1)& (0+255),w,b
 10324  01A150  0A80               	xorlw	128
 10325  01A152  0103               	movlb	3	; () banked
 10326  01A154  6FFF               	movwf	??_terminal_ringBufferPull& (0+255),b
 10327  01A156  0104               	movlb	4	; () banked
 10328  01A158  51C1               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
 10329  01A15A  0A80               	xorlw	128
 10330  01A15C  0103               	movlb	3	; () banked
 10331  01A15E  59FF               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
 10332  01A160  A0D8               	btfss	status,0,c
 10333  01A162  D7E4               	goto	l22310
 10334                           
 10335                           ; BSR set to: 3
 10336                           ;ring_buffer_interface.c: 22: };ring_buffer_interface.c: 25: eusart2RxTail = eusart2RxHe
      +                          ad;
 10337  01A164  C0DC  F198         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
 10338                           
 10339                           ;ring_buffer_interface.c: 28: while((line[strlen(line) - 1] == (int) '\n') ||;ring_buffe
      +                          r_interface.c: 29: (line[strlen(line) - 1] == (int) '\r')) {
 10340  01A168  D00F               	goto	l2288
 10341  01A16A                     l22316:
 10342                           
 10343                           ; BSR set to: 2
 10344                           ;ring_buffer_interface.c: 32: line[strlen(line) - 1] = '\0';
 10345  01A16A  0E44               	movlw	low _line
 10346  01A16C  6F00               	movwf	strlen@s& (0+255),b
 10347  01A16E  0E03               	movlw	high _line
 10348  01A170  6F01               	movwf	(strlen@s+1)& (0+255),b
 10349  01A172  EC98  F0E0         	call	_strlen	;wreg free
 10350  01A176  0E43               	movlw	low (_line+65535)
 10351  01A178  0102               	movlb	2	; () banked
 10352  01A17A  2500               	addwf	?_strlen& (0+255),w,b
 10353  01A17C  6ED9               	movwf	fsr2l,c
 10354  01A17E  0E03               	movlw	high (_line+65535)
 10355  01A180  2101               	addwfc	(?_strlen+1)& (0+255),w,b
 10356  01A182  6EDA               	movwf	fsr2h,c
 10357  01A184  0E00               	movlw	0
 10358  01A186  6EDF               	movwf	indf2,c
 10359  01A188                     l2288:
 10360  01A188  0E44               	movlw	low _line
 10361  01A18A  0102               	movlb	2	; () banked
 10362  01A18C  6F00               	movwf	strlen@s& (0+255),b
 10363  01A18E  0E03               	movlw	high _line
 10364  01A190  6F01               	movwf	(strlen@s+1)& (0+255),b
 10365  01A192  EC98  F0E0         	call	_strlen	;wreg free
 10366  01A196  0E43               	movlw	low (_line+65535)
 10367  01A198  0102               	movlb	2	; () banked
 10368  01A19A  2500               	addwf	?_strlen& (0+255),w,b
 10369  01A19C  6ED9               	movwf	fsr2l,c
 10370  01A19E  0E03               	movlw	high (_line+65535)
 10371  01A1A0  2101               	addwfc	(?_strlen+1)& (0+255),w,b
 10372  01A1A2  6EDA               	movwf	fsr2h,c
 10373  01A1A4  0E0A               	movlw	10
 10374  01A1A6  18DE               	xorwf	postinc2,w,c
 10375  01A1A8  B4D8               	btfsc	status,2,c
 10376  01A1AA  D7DF               	goto	l22316
 10377                           
 10378                           ; BSR set to: 2
 10379  01A1AC  0E44               	movlw	low _line
 10380  01A1AE  6F00               	movwf	strlen@s& (0+255),b
 10381  01A1B0  0E03               	movlw	high _line
 10382  01A1B2  6F01               	movwf	(strlen@s+1)& (0+255),b
 10383  01A1B4  EC98  F0E0         	call	_strlen	;wreg free
 10384  01A1B8  0E43               	movlw	low (_line+65535)
 10385  01A1BA  0102               	movlb	2	; () banked
 10386  01A1BC  2500               	addwf	?_strlen& (0+255),w,b
 10387  01A1BE  6ED9               	movwf	fsr2l,c
 10388  01A1C0  0E03               	movlw	high (_line+65535)
 10389  01A1C2  2101               	addwfc	(?_strlen+1)& (0+255),w,b
 10390  01A1C4  6EDA               	movwf	fsr2h,c
 10391  01A1C6  0E0D               	movlw	13
 10392  01A1C8  18DE               	xorwf	postinc2,w,c
 10393  01A1CA  B4D8               	btfsc	status,2,c
 10394  01A1CC  D7CE               	goto	l22316
 10395                           
 10396                           ; BSR set to: 2
 10397                           ;ring_buffer_interface.c: 34: };ring_buffer_interface.c: 38: eusart2RxStringReady = 0;
 10398  01A1CE  0100               	movlb	0	; () banked
 10399  01A1D0  91FD               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 10400                           
 10401                           ; BSR set to: 0
 10402                           ;ring_buffer_interface.c: 41: ringBufferLUT(line);
 10403  01A1D2  0E44               	movlw	low _line
 10404  01A1D4  0102               	movlb	2	; () banked
 10405  01A1D6  6FBA               	movwf	ringBufferLUT@line& (0+255),b
 10406  01A1D8  0E03               	movlw	high _line
 10407  01A1DA  6FBB               	movwf	(ringBufferLUT@line+1)& (0+255),b
 10408  01A1DC  ECFB  F0A4         	call	_ringBufferLUT	;wreg free
 10409  01A1E0  0012               	return		;funcret
 10410  01A1E2                     __end_of_terminal_ringBufferPull:
 10411                           	opt callstack 0
 10412                           
 10413 ;; *************** function _ringBufferLUT *****************
 10414 ;; Defined at:
 10415 ;;		line 20 in file "ring_buffer_LUT.c"
 10416 ;; Parameters:    Size  Location     Type
 10417 ;;  line            2  186[BANK2 ] PTR unsigned char 
 10418 ;;		 -> line(64), 
 10419 ;; Auto vars:     Size  Location     Type
 10420 ;;  userID          2   44[BANK3 ] int 
 10421 ;; Return value:  Size  Location     Type
 10422 ;;                  1    wreg      void 
 10423 ;; Registers used:
 10424 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10425 ;; Tracked objects:
 10426 ;;		On entry : 0/0
 10427 ;;		On exit  : 0/0
 10428 ;;		Unchanged: 0/0
 10429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10430 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10431 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
 10432 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10433 ;;      Totals:         0       0       0       4       2       0       0       0       0       0       0       0       
      +0       0       0       0
 10434 ;;Total ram usage:        6 bytes
 10435 ;; Hardware stack levels used:    1
 10436 ;; Hardware stack levels required when called:   17
 10437 ;; This function calls:
 10438 ;;		_clearADCErrors
 10439 ;;		_clearI2CErrors
 10440 ;;		_clearUARTErrors
 10441 ;;		_getCauseOfResetString
 10442 ;;		_getDeviceID
 10443 ;;		_getDeviceIDString
 10444 ;;		_getMajorRevisionID
 10445 ;;		_getMinorRevisionID
 10446 ;;		_getStringSecondsAsTime
 10447 ;;		_getUserID
 10448 ;;		_printCurrentMeasurements
 10449 ;;		_printErrorHandlerStatus
 10450 ;;		_printf
 10451 ;;		_strcmp
 10452 ;;		_strlen
 10453 ;;		_terminalTextAttributes
 10454 ;;		_terminalTextAttributesReset
 10455 ;; This function is called by:
 10456 ;;		_terminal_ringBufferPull
 10457 ;; This function uses a non-reentrant model
 10458 ;;
 10459                           
 10460                           	psect	text2
 10461  0149F6                     __ptext2:
 10462                           	opt callstack 0
 10463  0149F6                     _ringBufferLUT:
 10464                           	opt callstack 12
 10465                           
 10466                           ;ring_buffer_LUT.c: 26: if((0 == strcmp(line, "Reset"))) {
 10467                           
 10468                           ;incstack = 0
 10469  0149F6  C2BA  F200         	movff	ringBufferLUT@line,strcmp@s1
 10470  0149FA  C2BB  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10471  0149FE  0E43               	movlw	low (STR_40+5)
 10472  014A00  0102               	movlb	2	; () banked
 10473  014A02  6F02               	movwf	strcmp@s2& (0+255),b
 10474  014A04  0EFE               	movlw	high (STR_40+5)
 10475  014A06  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10476  014A08  EC1E  F0DC         	call	_strcmp	;wreg free
 10477  014A0C  0102               	movlb	2	; () banked
 10478  014A0E  5100               	movf	?_strcmp& (0+255),w,b
 10479  014A10  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10480  014A12  A4D8               	btfss	status,2,c
 10481  014A14  D00F               	goto	l21292
 10482                           
 10483                           ; BSR set to: 2
 10484                           ;ring_buffer_LUT.c: 29: printf("\033[2J");
 10485  014A16  0E95               	movlw	low STR_192
 10486  014A18  6FA9               	movwf	printf@f& (0+255),b
 10487  014A1A  0EFF               	movlw	high STR_192
 10488  014A1C  6FAA               	movwf	(printf@f+1)& (0+255),b
 10489  014A1E  EC04  F0DF         	call	_printf	;wreg free
 10490                           
 10491                           ;ring_buffer_LUT.c: 32: printf("\033[H");
 10492  014A22  0EBB               	movlw	low STR_193
 10493  014A24  0102               	movlb	2	; () banked
 10494  014A26  6FA9               	movwf	printf@f& (0+255),b
 10495  014A28  0EFF               	movlw	high STR_193
 10496  014A2A  6FAA               	movwf	(printf@f+1)& (0+255),b
 10497  014A2C  EC04  F0DF         	call	_printf	;wreg free
 10498  014A30  00FF               	reset		;# 
 10499                           
 10500                           ;ring_buffer_LUT.c: 37: }
 10501  014A32  0012               	return	
 10502  014A34                     l21292:
 10503                           
 10504                           ; BSR set to: 2
 10505                           ;ring_buffer_LUT.c: 40: else if((0 == strcmp(line, "Clear"))) {
 10506  014A34  C2BA  F200         	movff	ringBufferLUT@line,strcmp@s1
 10507  014A38  C2BB  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10508  014A3C  0E7E               	movlw	low STR_194
 10509  014A3E  6F02               	movwf	strcmp@s2& (0+255),b
 10510  014A40  0EFF               	movlw	high STR_194
 10511  014A42  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10512  014A44  EC1E  F0DC         	call	_strcmp	;wreg free
 10513  014A48  0102               	movlb	2	; () banked
 10514  014A4A  5100               	movf	?_strcmp& (0+255),w,b
 10515  014A4C  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10516  014A4E  A4D8               	btfss	status,2,c
 10517  014A50  D00E               	goto	l21296
 10518                           
 10519                           ; BSR set to: 2
 10520                           ;ring_buffer_LUT.c: 43: printf("\033[2J");
 10521  014A52  0E95               	movlw	low STR_192
 10522  014A54  6FA9               	movwf	printf@f& (0+255),b
 10523  014A56  0EFF               	movlw	high STR_192
 10524  014A58  6FAA               	movwf	(printf@f+1)& (0+255),b
 10525  014A5A  EC04  F0DF         	call	_printf	;wreg free
 10526                           
 10527                           ;ring_buffer_LUT.c: 46: printf("\033[H");
 10528  014A5E  0EBB               	movlw	low STR_193
 10529  014A60  0102               	movlb	2	; () banked
 10530  014A62  6FA9               	movwf	printf@f& (0+255),b
 10531  014A64  0EFF               	movlw	high STR_193
 10532  014A66  6FAA               	movwf	(printf@f+1)& (0+255),b
 10533  014A68  EC04  F0DF         	call	_printf	;wreg free
 10534                           
 10535                           ;ring_buffer_LUT.c: 48: }
 10536  014A6C  0012               	return	
 10537  014A6E                     l21296:
 10538                           
 10539                           ; BSR set to: 2
 10540                           ;ring_buffer_LUT.c: 51: else if((0 == strcmp(line, "*IDN?"))) {
 10541  014A6E  C2BA  F200         	movff	ringBufferLUT@line,strcmp@s1
 10542  014A72  C2BB  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10543  014A76  0E78               	movlw	low STR_197
 10544  014A78  6F02               	movwf	strcmp@s2& (0+255),b
 10545  014A7A  0EFF               	movlw	high STR_197
 10546  014A7C  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10547  014A7E  EC1E  F0DC         	call	_strcmp	;wreg free
 10548  014A82  0102               	movlb	2	; () banked
 10549  014A84  5100               	movf	?_strcmp& (0+255),w,b
 10550  014A86  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10551  014A88  A4D8               	btfss	status,2,c
 10552  014A8A  D011               	goto	l21300
 10553                           
 10554                           ; BSR set to: 2
 10555                           ;ring_buffer_LUT.c: 53: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10556  014A8C  0E00               	movlw	0
 10557  014A8E  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10558  014A90  0E00               	movlw	0
 10559  014A92  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10560  014A94  0E02               	movlw	2
 10561  014A96  ECE9  F0AF         	call	_terminalTextAttributes
 10562                           
 10563                           ;ring_buffer_LUT.c: 54: printf("QI Charger with Digital Monitoring, by Drew Maatman\n\r"
      +                          );
 10564  014A9A  0E6C               	movlw	low STR_198
 10565  014A9C  0102               	movlb	2	; () banked
 10566  014A9E  6FA9               	movwf	printf@f& (0+255),b
 10567  014AA0  0EF0               	movlw	high STR_198
 10568  014AA2  6FAA               	movwf	(printf@f+1)& (0+255),b
 10569  014AA4  EC04  F0DF         	call	_printf	;wreg free
 10570                           
 10571                           ;ring_buffer_LUT.c: 55: terminalTextAttributesReset();
 10572  014AA8  EC5F  F0E3         	call	_terminalTextAttributesReset	;wreg free
 10573                           
 10574                           ;ring_buffer_LUT.c: 57: }
 10575  014AAC  0012               	return	
 10576  014AAE                     l21300:
 10577                           
 10578                           ; BSR set to: 2
 10579                           ;ring_buffer_LUT.c: 60: else if (0 == strcmp(line, "Device Status?")) {
 10580  014AAE  C2BA  F200         	movff	ringBufferLUT@line,strcmp@s1
 10581  014AB2  C2BB  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10582  014AB6  0EC2               	movlw	low STR_199
 10583  014AB8  6F02               	movwf	strcmp@s2& (0+255),b
 10584  014ABA  0EFB               	movlw	high STR_199
 10585  014ABC  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10586  014ABE  EC1E  F0DC         	call	_strcmp	;wreg free
 10587  014AC2  0102               	movlb	2	; () banked
 10588  014AC4  5100               	movf	?_strcmp& (0+255),w,b
 10589  014AC6  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10590  014AC8  A4D8               	btfss	status,2,c
 10591  014ACA  D0D8               	goto	l21318
 10592                           
 10593                           ; BSR set to: 2
 10594                           ;ring_buffer_LUT.c: 62: printf("\n\r");
 10595  014ACC  0E9C               	movlw	low (STR_272+44)
 10596  014ACE  6FA9               	movwf	printf@f& (0+255),b
 10597  014AD0  0EF2               	movlw	high (STR_272+44)
 10598  014AD2  6FAA               	movwf	(printf@f+1)& (0+255),b
 10599  014AD4  EC04  F0DF         	call	_printf	;wreg free
 10600                           
 10601                           ;ring_buffer_LUT.c: 64: terminalTextAttributes(GREEN, BLACK, BOLD);
 10602  014AD8  0E00               	movlw	0
 10603  014ADA  0102               	movlb	2	; () banked
 10604  014ADC  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10605  014ADE  0E01               	movlw	1
 10606  014AE0  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10607  014AE2  0E02               	movlw	2
 10608  014AE4  ECE9  F0AF         	call	_terminalTextAttributes
 10609                           
 10610                           ;ring_buffer_LUT.c: 66: printf("Digital Monitoring Microcontroller Status:\n\r");
 10611  014AE8  0E86               	movlw	low STR_201
 10612  014AEA  0102               	movlb	2	; () banked
 10613  014AEC  6FA9               	movwf	printf@f& (0+255),b
 10614  014AEE  0EF3               	movlw	high STR_201
 10615  014AF0  6FAA               	movwf	(printf@f+1)& (0+255),b
 10616  014AF2  EC04  F0DF         	call	_printf	;wreg free
 10617                           
 10618                           ;ring_buffer_LUT.c: 68: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10619  014AF6  0E00               	movlw	0
 10620  014AF8  0102               	movlb	2	; () banked
 10621  014AFA  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10622  014AFC  0E00               	movlw	0
 10623  014AFE  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10624  014B00  0E02               	movlw	2
 10625  014B02  ECE9  F0AF         	call	_terminalTextAttributes
 10626                           
 10627                           ;ring_buffer_LUT.c: 70: printf("\n\r");
 10628  014B06  0E9C               	movlw	low (STR_272+44)
 10629  014B08  0102               	movlb	2	; () banked
 10630  014B0A  6FA9               	movwf	printf@f& (0+255),b
 10631  014B0C  0EF2               	movlw	high (STR_272+44)
 10632  014B0E  6FAA               	movwf	(printf@f+1)& (0+255),b
 10633  014B10  EC04  F0DF         	call	_printf	;wreg free
 10634                           
 10635                           ;ring_buffer_LUT.c: 73: printf("    Device ID retrieved from flash: %s (0x%04X)\n\r",;ri
      +                          ng_buffer_LUT.c: 74: getDeviceIDString(getDeviceID()),;ring_buffer_LUT.c: 75: getDeviceI
      +                          D());
 10636  014B14  0EDC               	movlw	low STR_203
 10637  014B16  0102               	movlb	2	; () banked
 10638  014B18  6FA9               	movwf	printf@f& (0+255),b
 10639  014B1A  0EF1               	movlw	high STR_203
 10640  014B1C  6FAA               	movwf	(printf@f+1)& (0+255),b
 10641  014B1E  EC2A  F0E2         	call	_getDeviceID	;wreg free
 10642  014B22  C20B  F20D         	movff	?_getDeviceID,getDeviceIDString@inputDevID
 10643  014B26  C20C  F20E         	movff	?_getDeviceID+1,getDeviceIDString@inputDevID+1
 10644  014B2A  EC4F  F0D6         	call	_getDeviceIDString	;wreg free
 10645  014B2E  C20D  F2AB         	movff	?_getDeviceIDString,?_printf+2
 10646  014B32  C20E  F2AC         	movff	?_getDeviceIDString+1,?_printf+3
 10647  014B36  EC2A  F0E2         	call	_getDeviceID	;wreg free
 10648  014B3A  C20B  F2AD         	movff	?_getDeviceID,?_printf+4
 10649  014B3E  C20C  F2AE         	movff	?_getDeviceID+1,?_printf+5
 10650  014B42  EC04  F0DF         	call	_printf	;wreg free
 10651                           
 10652                           ;ring_buffer_LUT.c: 77: printf("\n\r");
 10653  014B46  0E9C               	movlw	low (STR_272+44)
 10654  014B48  0102               	movlb	2	; () banked
 10655  014B4A  6FA9               	movwf	printf@f& (0+255),b
 10656  014B4C  0EF2               	movlw	high (STR_272+44)
 10657  014B4E  6FAA               	movwf	(printf@f+1)& (0+255),b
 10658  014B50  EC04  F0DF         	call	_printf	;wreg free
 10659                           
 10660                           ;ring_buffer_LUT.c: 79: printf("    Device silicon revision ID retrieved from flash: %c%
      +                          03d\n\r",;ring_buffer_LUT.c: 80: ((char) getMajorRevisionID() + 65),getMinorRevisionID()
      +                          );
 10661  014B54  0E35               	movlw	low STR_205
 10662  014B56  0102               	movlb	2	; () banked
 10663  014B58  6FA9               	movwf	printf@f& (0+255),b
 10664  014B5A  0EED               	movlw	high STR_205
 10665  014B5C  6FAA               	movwf	(printf@f+1)& (0+255),b
 10666  014B5E  EC40  F0DF         	call	_getMajorRevisionID	;wreg free
 10667  014B62  0102               	movlb	2	; () banked
 10668  014B64  6FBC               	movwf	??_ringBufferLUT& (0+255),b
 10669  014B66  0E41               	movlw	65
 10670  014B68  25BC               	addwf	??_ringBufferLUT& (0+255),w,b
 10671  014B6A  6FAB               	movwf	(?_printf+2)& (0+255),b
 10672  014B6C  6BAC               	clrf	(?_printf+3)& (0+255),b
 10673  014B6E  0E00               	movlw	0
 10674  014B70  23AC               	addwfc	(?_printf+3)& (0+255),f,b
 10675  014B72  EC7E  F0E1         	call	_getMinorRevisionID	;wreg free
 10676  014B76  0102               	movlb	2	; () banked
 10677  014B78  6FBD               	movwf	(??_ringBufferLUT+1)& (0+255),b
 10678  014B7A  51BD               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 10679  014B7C  6FAD               	movwf	(?_printf+4)& (0+255),b
 10680  014B7E  6BAE               	clrf	(?_printf+5)& (0+255),b
 10681  014B80  EC04  F0DF         	call	_printf	;wreg free
 10682                           
 10683                           ;ring_buffer_LUT.c: 82: printf("\n\r");
 10684  014B84  0E9C               	movlw	low (STR_272+44)
 10685  014B86  0102               	movlb	2	; () banked
 10686  014B88  6FA9               	movwf	printf@f& (0+255),b
 10687  014B8A  0EF2               	movlw	high (STR_272+44)
 10688  014B8C  6FAA               	movwf	(printf@f+1)& (0+255),b
 10689  014B8E  EC04  F0DF         	call	_printf	;wreg free
 10690                           
 10691                           ;ring_buffer_LUT.c: 84: printf("    The following User IDs have been retrieved from flas
      +                          h:\n\r");
 10692  014B92  0EEE               	movlw	low STR_207
 10693  014B94  0102               	movlb	2	; () banked
 10694  014B96  6FA9               	movwf	printf@f& (0+255),b
 10695  014B98  0EED               	movlw	high STR_207
 10696  014B9A  6FAA               	movwf	(printf@f+1)& (0+255),b
 10697  014B9C  EC04  F0DF         	call	_printf	;wreg free
 10698                           
 10699                           ;ring_buffer_LUT.c: 87: for (int userID = 0; userID <= 7; userID++) {
 10700  014BA0  0E00               	movlw	0
 10701  014BA2  0103               	movlb	3	; () banked
 10702  014BA4  6FFE               	movwf	(ringBufferLUT@userID+1)& (0+255),b
 10703  014BA6  0E00               	movlw	0
 10704  014BA8  6FFD               	movwf	ringBufferLUT@userID& (0+255),b
 10705  014BAA                     l21310:
 10706                           
 10707                           ; BSR set to: 3
 10708                           ;ring_buffer_LUT.c: 89: printf("        User ID Word %d (Flash address 0x20000%X): 0x%04
      +                          X\n\r",;ring_buffer_LUT.c: 90: userID,;ring_buffer_LUT.c: 91: (2 * userID),;ring_buffer_
      +                          LUT.c: 92: getUserID(userID));
 10709  014BAA  0EA3               	movlw	low STR_208
 10710  014BAC  0102               	movlb	2	; () banked
 10711  014BAE  6FA9               	movwf	printf@f& (0+255),b
 10712  014BB0  0EEE               	movlw	high STR_208
 10713  014BB2  6FAA               	movwf	(printf@f+1)& (0+255),b
 10714  014BB4  C3FD  F2AB         	movff	ringBufferLUT@userID,?_printf+2
 10715  014BB8  C3FE  F2AC         	movff	ringBufferLUT@userID+1,?_printf+3
 10716  014BBC  90D8               	bcf	status,0,c
 10717  014BBE  0103               	movlb	3	; () banked
 10718  014BC0  35FD               	rlcf	ringBufferLUT@userID& (0+255),w,b
 10719  014BC2  0102               	movlb	2	; () banked
 10720  014BC4  6FAD               	movwf	(?_printf+4)& (0+255),b
 10721  014BC6  0103               	movlb	3	; () banked
 10722  014BC8  35FE               	rlcf	(ringBufferLUT@userID+1)& (0+255),w,b
 10723  014BCA  0102               	movlb	2	; () banked
 10724  014BCC  6FAE               	movwf	(?_printf+5)& (0+255),b
 10725  014BCE  0103               	movlb	3	; () banked
 10726  014BD0  51FD               	movf	ringBufferLUT@userID& (0+255),w,b
 10727  014BD2  ECD1  F0DF         	call	_getUserID
 10728  014BD6  C20B  F2AF         	movff	?_getUserID,?_printf+6
 10729  014BDA  C20C  F2B0         	movff	?_getUserID+1,?_printf+7
 10730  014BDE  EC04  F0DF         	call	_printf	;wreg free
 10731  014BE2  0103               	movlb	3	; () banked
 10732  014BE4  4BFD               	infsnz	ringBufferLUT@userID& (0+255),f,b
 10733  014BE6  2BFE               	incf	(ringBufferLUT@userID+1)& (0+255),f,b
 10734                           
 10735                           ; BSR set to: 3
 10736  014BE8  BFFE               	btfsc	(ringBufferLUT@userID+1)& (0+255),7,b
 10737  014BEA  D7DF               	goto	l21310
 10738  014BEC  51FE               	movf	(ringBufferLUT@userID+1)& (0+255),w,b
 10739  014BEE  E104               	bnz	u27340
 10740  014BF0  0E08               	movlw	8
 10741  014BF2  5DFD               	subwf	ringBufferLUT@userID& (0+255),w,b
 10742  014BF4  A0D8               	btfss	status,0,c
 10743  014BF6  D7D9               	goto	l21310
 10744  014BF8                     u27340:
 10745                           
 10746                           ; BSR set to: 3
 10747                           ;ring_buffer_LUT.c: 94: };ring_buffer_LUT.c: 96: printf("\n\r");
 10748  014BF8  0E9C               	movlw	low (STR_272+44)
 10749  014BFA  0102               	movlb	2	; () banked
 10750  014BFC  6FA9               	movwf	printf@f& (0+255),b
 10751  014BFE  0EF2               	movlw	high (STR_272+44)
 10752  014C00  6FAA               	movwf	(printf@f+1)& (0+255),b
 10753  014C02  EC04  F0DF         	call	_printf	;wreg free
 10754                           
 10755                           ;ring_buffer_LUT.c: 98: printf("    The cause of the most recent device reset was: %s\n\
      +                          r",;ring_buffer_LUT.c: 99: getCauseOfResetString(reset_cause));
 10756  014C06  0EFD               	movlw	low STR_210
 10757  014C08  0102               	movlb	2	; () banked
 10758  014C0A  6FA9               	movwf	printf@f& (0+255),b
 10759  014C0C  0EEF               	movlw	high STR_210
 10760  014C0E  6FAA               	movwf	(printf@f+1)& (0+255),b
 10761  014C10  51FF               	movf	_reset_cause& (0+255),w,b
 10762  014C12  EC38  F0E0         	call	_getCauseOfResetString
 10763  014C16  C200  F2AB         	movff	?_getCauseOfResetString,?_printf+2
 10764  014C1A  C201  F2AC         	movff	?_getCauseOfResetString+1,?_printf+3
 10765  014C1E  EC04  F0DF         	call	_printf	;wreg free
 10766                           
 10767                           ;ring_buffer_LUT.c: 101: printf("\n\r");
 10768  014C22  0E9C               	movlw	low (STR_272+44)
 10769  014C24  0102               	movlb	2	; () banked
 10770  014C26  6FA9               	movwf	printf@f& (0+255),b
 10771  014C28  0EF2               	movlw	high (STR_272+44)
 10772  014C2A  6FAA               	movwf	(printf@f+1)& (0+255),b
 10773  014C2C  EC04  F0DF         	call	_printf	;wreg free
 10774                           
 10775                           ;ring_buffer_LUT.c: 103: printf("    Device on time since last reset condition is %s\n\r
      +                          ", getStringSecondsAsTime(device_on_time));
 10776  014C30  0EA2               	movlw	low STR_212
 10777  014C32  0102               	movlb	2	; () banked
 10778  014C34  6FA9               	movwf	printf@f& (0+255),b
 10779  014C36  0EF0               	movlw	high STR_212
 10780  014C38  6FAA               	movwf	(printf@f+1)& (0+255),b
 10781  014C3A  C0C5  F29F         	movff	_device_on_time,getStringSecondsAsTime@input_seconds
 10782  014C3E  C0C6  F2A0         	movff	_device_on_time+1,getStringSecondsAsTime@input_seconds+1
 10783  014C42  C0C7  F2A1         	movff	_device_on_time+2,getStringSecondsAsTime@input_seconds+2
 10784  014C46  C0C8  F2A2         	movff	_device_on_time+3,getStringSecondsAsTime@input_seconds+3
 10785  014C4A  EC16  F0AE         	call	_getStringSecondsAsTime	;wreg free
 10786  014C4E  C29F  F2AB         	movff	?_getStringSecondsAsTime,?_printf+2
 10787  014C52  C2A0  F2AC         	movff	?_getStringSecondsAsTime+1,?_printf+3
 10788  014C56  EC04  F0DF         	call	_printf	;wreg free
 10789                           
 10790                           ;ring_buffer_LUT.c: 105: printf("\n\r");
 10791  014C5A  0E9C               	movlw	low (STR_272+44)
 10792  014C5C  0102               	movlb	2	; () banked
 10793  014C5E  6FA9               	movwf	printf@f& (0+255),b
 10794  014C60  0EF2               	movlw	high (STR_272+44)
 10795  014C62  6FAA               	movwf	(printf@f+1)& (0+255),b
 10796  014C64  EC04  F0DF         	call	_printf	;wreg free
 10797                           
 10798                           ;ring_buffer_LUT.c: 107: printErrorHandlerStatus();
 10799  014C68  EC78  F0C9         	call	_printErrorHandlerStatus	;wreg free
 10800                           
 10801                           ;ring_buffer_LUT.c: 109: printf("\n\r");
 10802  014C6C  0E9C               	movlw	low (STR_272+44)
 10803  014C6E  0102               	movlb	2	; () banked
 10804  014C70  6FA9               	movwf	printf@f& (0+255),b
 10805  014C72  0EF2               	movlw	high (STR_272+44)
 10806  014C74  6FAA               	movwf	(printf@f+1)& (0+255),b
 10807  014C76  EC04  F0DF         	call	_printf	;wreg free
 10808                           
 10809                           ;ring_buffer_LUT.c: 111: }
 10810  014C7A  0012               	return	
 10811  014C7C                     l21318:
 10812                           
 10813                           ; BSR set to: 2
 10814                           ;ring_buffer_LUT.c: 114: else if((0 == strcmp(line, "Clear ADC Errors"))) {
 10815  014C7C  C2BA  F200         	movff	ringBufferLUT@line,strcmp@s1
 10816  014C80  C2BB  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10817  014C84  0E41               	movlw	low STR_215
 10818  014C86  6F02               	movwf	strcmp@s2& (0+255),b
 10819  014C88  0EFB               	movlw	high STR_215
 10820  014C8A  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10821  014C8C  EC1E  F0DC         	call	_strcmp	;wreg free
 10822  014C90  0102               	movlb	2	; () banked
 10823  014C92  5100               	movf	?_strcmp& (0+255),w,b
 10824  014C94  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10825  014C96  A4D8               	btfss	status,2,c
 10826  014C98  D014               	goto	l21328
 10827                           
 10828                           ; BSR set to: 2
 10829                           ;ring_buffer_LUT.c: 116: clearADCErrors();
 10830  014C9A  EC67  F0E3         	call	_clearADCErrors	;wreg free
 10831                           
 10832                           ;ring_buffer_LUT.c: 118: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10833  014C9E  0E00               	movlw	0
 10834  014CA0  0102               	movlb	2	; () banked
 10835  014CA2  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10836  014CA4  0E00               	movlw	0
 10837  014CA6  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10838  014CA8  0E02               	movlw	2
 10839  014CAA  ECE9  F0AF         	call	_terminalTextAttributes
 10840                           
 10841                           ;ring_buffer_LUT.c: 119: printf("ADC Error(s) cleared\n\r");
 10842  014CAE  0EA9               	movlw	low STR_216
 10843  014CB0  0102               	movlb	2	; () banked
 10844  014CB2  6FA9               	movwf	printf@f& (0+255),b
 10845  014CB4  0EF9               	movlw	high STR_216
 10846  014CB6  6FAA               	movwf	(printf@f+1)& (0+255),b
 10847  014CB8  EC04  F0DF         	call	_printf	;wreg free
 10848  014CBC                     l21326:
 10849                           
 10850                           ;ring_buffer_LUT.c: 120: terminalTextAttributesReset();
 10851  014CBC  EC5F  F0E3         	call	_terminalTextAttributesReset	;wreg free
 10852                           
 10853                           ;ring_buffer_LUT.c: 122: }
 10854  014CC0  0012               	return	
 10855  014CC2                     l21328:
 10856                           
 10857                           ; BSR set to: 2
 10858                           ;ring_buffer_LUT.c: 125: else if((0 == strcmp(line, "Clear I2C Errors"))) {
 10859  014CC2  C2BA  F200         	movff	ringBufferLUT@line,strcmp@s1
 10860  014CC6  C2BB  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10861  014CCA  0E30               	movlw	low STR_217
 10862  014CCC  6F02               	movwf	strcmp@s2& (0+255),b
 10863  014CCE  0EFB               	movlw	high STR_217
 10864  014CD0  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10865  014CD2  EC1E  F0DC         	call	_strcmp	;wreg free
 10866  014CD6  0102               	movlb	2	; () banked
 10867  014CD8  5100               	movf	?_strcmp& (0+255),w,b
 10868  014CDA  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10869  014CDC  A4D8               	btfss	status,2,c
 10870  014CDE  D012               	goto	l21338
 10871                           
 10872                           ; BSR set to: 2
 10873                           ;ring_buffer_LUT.c: 127: clearI2CErrors();
 10874  014CE0  EC69  F0E2         	call	_clearI2CErrors	;wreg free
 10875                           
 10876                           ;ring_buffer_LUT.c: 129: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10877  014CE4  0E00               	movlw	0
 10878  014CE6  0102               	movlb	2	; () banked
 10879  014CE8  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10880  014CEA  0E00               	movlw	0
 10881  014CEC  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10882  014CEE  0E02               	movlw	2
 10883  014CF0  ECE9  F0AF         	call	_terminalTextAttributes
 10884                           
 10885                           ;ring_buffer_LUT.c: 130: printf("I2C error(s) cleared\n\r");
 10886  014CF4  0EC0               	movlw	low STR_218
 10887  014CF6  0102               	movlb	2	; () banked
 10888  014CF8  6FA9               	movwf	printf@f& (0+255),b
 10889  014CFA  0EF9               	movlw	high STR_218
 10890  014CFC  6FAA               	movwf	(printf@f+1)& (0+255),b
 10891  014CFE  EC04  F0DF         	call	_printf	;wreg free
 10892  014D02  D7DC               	goto	l21326
 10893  014D04                     l21338:
 10894                           
 10895                           ; BSR set to: 2
 10896                           ;ring_buffer_LUT.c: 136: else if((0 == strcmp(line, "Clear UART Errors"))) {
 10897  014D04  C2BA  F200         	movff	ringBufferLUT@line,strcmp@s1
 10898  014D08  C2BB  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10899  014D0C  0E0D               	movlw	low STR_219
 10900  014D0E  6F02               	movwf	strcmp@s2& (0+255),b
 10901  014D10  0EFB               	movlw	high STR_219
 10902  014D12  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10903  014D14  EC1E  F0DC         	call	_strcmp	;wreg free
 10904  014D18  0102               	movlb	2	; () banked
 10905  014D1A  5100               	movf	?_strcmp& (0+255),w,b
 10906  014D1C  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10907  014D1E  A4D8               	btfss	status,2,c
 10908  014D20  D012               	goto	l21348
 10909                           
 10910                           ; BSR set to: 2
 10911                           ;ring_buffer_LUT.c: 138: clearUARTErrors();
 10912  014D22  ECF6  F0E3         	call	_clearUARTErrors	;wreg free
 10913                           
 10914                           ;ring_buffer_LUT.c: 140: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10915  014D26  0E00               	movlw	0
 10916  014D28  0102               	movlb	2	; () banked
 10917  014D2A  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10918  014D2C  0E00               	movlw	0
 10919  014D2E  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10920  014D30  0E02               	movlw	2
 10921  014D32  ECE9  F0AF         	call	_terminalTextAttributes
 10922                           
 10923                           ;ring_buffer_LUT.c: 141: printf("UART error(s) cleared\n\r");
 10924  014D36  0E4C               	movlw	low STR_220
 10925  014D38  0102               	movlb	2	; () banked
 10926  014D3A  6FA9               	movwf	printf@f& (0+255),b
 10927  014D3C  0EF9               	movlw	high STR_220
 10928  014D3E  6FAA               	movwf	(printf@f+1)& (0+255),b
 10929  014D40  EC04  F0DF         	call	_printf	;wreg free
 10930  014D44  D7BB               	goto	l21326
 10931  014D46                     l21348:
 10932                           
 10933                           ; BSR set to: 2
 10934                           ;ring_buffer_LUT.c: 146: else if ((0 == strcmp(line, "Error Status?"))) {
 10935  014D46  C2BA  F200         	movff	ringBufferLUT@line,strcmp@s1
 10936  014D4A  C2BB  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10937  014D4E  0E39               	movlw	low STR_221
 10938  014D50  6F02               	movwf	strcmp@s2& (0+255),b
 10939  014D52  0EFC               	movlw	high STR_221
 10940  014D54  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10941  014D56  EC1E  F0DC         	call	_strcmp	;wreg free
 10942  014D5A  0102               	movlb	2	; () banked
 10943  014D5C  5100               	movf	?_strcmp& (0+255),w,b
 10944  014D5E  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10945  014D60  A4D8               	btfss	status,2,c
 10946  014D62  D003               	goto	l21352
 10947                           
 10948                           ; BSR set to: 2
 10949                           ;ring_buffer_LUT.c: 148: printErrorHandlerStatus();
 10950  014D64  EC78  F0C9         	call	_printErrorHandlerStatus	;wreg free
 10951                           
 10952                           ;ring_buffer_LUT.c: 150: }
 10953  014D68  0012               	return	
 10954  014D6A                     l21352:
 10955                           
 10956                           ; BSR set to: 2
 10957                           ;ring_buffer_LUT.c: 153: else if (0 == strcmp(line, "Current Measurements?")) {
 10958  014D6A  C2BA  F200         	movff	ringBufferLUT@line,strcmp@s1
 10959  014D6E  C2BB  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10960  014D72  0E1A               	movlw	low STR_222
 10961  014D74  6F02               	movwf	strcmp@s2& (0+255),b
 10962  014D76  0EFA               	movlw	high STR_222
 10963  014D78  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10964  014D7A  EC1E  F0DC         	call	_strcmp	;wreg free
 10965  014D7E  0102               	movlb	2	; () banked
 10966  014D80  5100               	movf	?_strcmp& (0+255),w,b
 10967  014D82  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10968  014D84  A4D8               	btfss	status,2,c
 10969  014D86  D01F               	goto	l21356
 10970                           
 10971                           ; BSR set to: 2
 10972                           ;ring_buffer_LUT.c: 155: printf("\n\r");
 10973  014D88  0E9C               	movlw	low (STR_272+44)
 10974  014D8A  6FA9               	movwf	printf@f& (0+255),b
 10975  014D8C  0EF2               	movlw	high (STR_272+44)
 10976  014D8E  6FAA               	movwf	(printf@f+1)& (0+255),b
 10977  014D90  EC04  F0DF         	call	_printf	;wreg free
 10978                           
 10979                           ;ring_buffer_LUT.c: 157: terminalTextAttributes(GREEN, BLACK, BOLD);
 10980  014D94  0E00               	movlw	0
 10981  014D96  0102               	movlb	2	; () banked
 10982  014D98  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 10983  014D9A  0E01               	movlw	1
 10984  014D9C  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10985  014D9E  0E02               	movlw	2
 10986  014DA0  ECE9  F0AF         	call	_terminalTextAttributes
 10987                           
 10988                           ;ring_buffer_LUT.c: 158: printf("System Measurements at time of command call:\n\r");
 10989  014DA4  0E9F               	movlw	low STR_224
 10990  014DA6  0102               	movlb	2	; () banked
 10991  014DA8  6FA9               	movwf	printf@f& (0+255),b
 10992  014DAA  0EF2               	movlw	high STR_224
 10993  014DAC  6FAA               	movwf	(printf@f+1)& (0+255),b
 10994  014DAE  EC04  F0DF         	call	_printf	;wreg free
 10995                           
 10996                           ;ring_buffer_LUT.c: 160: printf("\n\r");
 10997  014DB2  0E9C               	movlw	low (STR_272+44)
 10998  014DB4  0102               	movlb	2	; () banked
 10999  014DB6  6FA9               	movwf	printf@f& (0+255),b
 11000  014DB8  0EF2               	movlw	high (STR_272+44)
 11001  014DBA  6FAA               	movwf	(printf@f+1)& (0+255),b
 11002  014DBC  EC04  F0DF         	call	_printf	;wreg free
 11003                           
 11004                           ;ring_buffer_LUT.c: 162: printCurrentMeasurements();
 11005  014DC0  ECC5  F0A7         	call	_printCurrentMeasurements	;wreg free
 11006                           
 11007                           ;ring_buffer_LUT.c: 164: }
 11008  014DC4  0012               	return	
 11009  014DC6                     l21356:
 11010                           
 11011                           ; BSR set to: 2
 11012                           ;ring_buffer_LUT.c: 166: else if ((0 == strcmp(line, "Enable Live Measurements"))) {
 11013  014DC6  C2BA  F200         	movff	ringBufferLUT@line,strcmp@s1
 11014  014DCA  C2BB  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 11015  014DCE  0EEB               	movlw	low STR_226
 11016  014DD0  6F02               	movwf	strcmp@s2& (0+255),b
 11017  014DD2  0EF8               	movlw	high STR_226
 11018  014DD4  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 11019  014DD6  EC1E  F0DC         	call	_strcmp	;wreg free
 11020  014DDA  0102               	movlb	2	; () banked
 11021  014DDC  5100               	movf	?_strcmp& (0+255),w,b
 11022  014DDE  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 11023  014DE0  A4D8               	btfss	status,2,c
 11024  014DE2  D013               	goto	l21366
 11025                           
 11026                           ; BSR set to: 2
 11027                           ;ring_buffer_LUT.c: 168: live_measurement_enable_flag = 1;
 11028  014DE4  0E01               	movlw	1
 11029  014DE6  0100               	movlb	0	; () banked
 11030  014DE8  6FD7               	movwf	_live_measurement_enable_flag& (0+255),b
 11031                           
 11032                           ; BSR set to: 0
 11033                           ;ring_buffer_LUT.c: 169: terminalTextAttributes(GREEN, BLACK, NORMAL);
 11034  014DEA  0E00               	movlw	0
 11035  014DEC  0102               	movlb	2	; () banked
 11036  014DEE  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11037  014DF0  0E00               	movlw	0
 11038  014DF2  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11039  014DF4  0E02               	movlw	2
 11040  014DF6  ECE9  F0AF         	call	_terminalTextAttributes
 11041                           
 11042                           ;ring_buffer_LUT.c: 170: printf("Enabling live measurements\n\r");
 11043  014DFA  0E0E               	movlw	low STR_227
 11044  014DFC  0102               	movlb	2	; () banked
 11045  014DFE  6FA9               	movwf	printf@f& (0+255),b
 11046  014E00  0EF8               	movlw	high STR_227
 11047  014E02  6FAA               	movwf	(printf@f+1)& (0+255),b
 11048  014E04  EC04  F0DF         	call	_printf	;wreg free
 11049  014E08  D759               	goto	l21326
 11050  014E0A                     l21366:
 11051                           
 11052                           ; BSR set to: 2
 11053                           ;ring_buffer_LUT.c: 176: else if((0 == strcmp(line, "Help"))) {
 11054  014E0A  C2BA  F200         	movff	ringBufferLUT@line,strcmp@s1
 11055  014E0E  C2BB  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 11056  014E12  0E9A               	movlw	low STR_228
 11057  014E14  6F02               	movwf	strcmp@s2& (0+255),b
 11058  014E16  0EFF               	movlw	high STR_228
 11059  014E18  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 11060  014E1A  EC1E  F0DC         	call	_strcmp	;wreg free
 11061  014E1E  0102               	movlb	2	; () banked
 11062  014E20  5100               	movf	?_strcmp& (0+255),w,b
 11063  014E22  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 11064  014E24  A4D8               	btfss	status,2,c
 11065  014E26  D069               	goto	l21370
 11066                           
 11067                           ; BSR set to: 2
 11068                           ;ring_buffer_LUT.c: 178: printf("\n\r");
 11069  014E28  0E9C               	movlw	low (STR_272+44)
 11070  014E2A  6FA9               	movwf	printf@f& (0+255),b
 11071  014E2C  0EF2               	movlw	high (STR_272+44)
 11072  014E2E  6FAA               	movwf	(printf@f+1)& (0+255),b
 11073  014E30  EC04  F0DF         	call	_printf	;wreg free
 11074                           
 11075                           ;ring_buffer_LUT.c: 180: terminalTextAttributes(YELLOW, BLACK, BOLD);
 11076  014E34  0E00               	movlw	0
 11077  014E36  0102               	movlb	2	; () banked
 11078  014E38  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11079  014E3A  0E01               	movlw	1
 11080  014E3C  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11081  014E3E  0E03               	movlw	3
 11082  014E40  ECE9  F0AF         	call	_terminalTextAttributes
 11083                           
 11084                           ;ring_buffer_LUT.c: 182: printf("Available Commands:\n\r");
 11085  014E44  0E04               	movlw	low STR_230
 11086  014E46  0102               	movlb	2	; () banked
 11087  014E48  6FA9               	movwf	printf@f& (0+255),b
 11088  014E4A  0EFA               	movlw	high STR_230
 11089  014E4C  6FAA               	movwf	(printf@f+1)& (0+255),b
 11090  014E4E  EC04  F0DF         	call	_printf	;wreg free
 11091                           
 11092                           ;ring_buffer_LUT.c: 184: terminalTextAttributes(YELLOW, BLACK, NORMAL);
 11093  014E52  0E00               	movlw	0
 11094  014E54  0102               	movlb	2	; () banked
 11095  014E56  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11096  014E58  0E00               	movlw	0
 11097  014E5A  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11098  014E5C  0E03               	movlw	3
 11099  014E5E  ECE9  F0AF         	call	_terminalTextAttributes
 11100                           
 11101                           ;ring_buffer_LUT.c: 186: printf( "    *IDN?: Prints identification string\n\r";ring_buff
      +                          er_LUT.c: 187: "    Reset: Executes software reset instruction\n\r";ring_buffer_LUT.c: 1
      +                          88: "    Clear: Clears the virtual COM port terminal\n\r";ring_buffer_LUT.c: 189: "    C
      +                          urrent Measurements?: Prints instantaneous system level electrical measurements\n\r";rin
      +                          g_buffer_LUT.c: 190: "    Enable Live Measurements: Prints a continuous stream of measur
      +                          ement data to the terminal\n\r";ring_buffer_LUT.c: 191: "    Device Status?: Prints digi
      +                          tal monitoring microcontroller device status\n\r"
 11102  014E62  0E73               	movlw	low STR_231
 11103  014E64  0102               	movlb	2	; () banked
 11104  014E66  6FA9               	movwf	printf@f& (0+255),b
 11105  014E68  0EE8               	movlw	high STR_231
 11106  014E6A  6FAA               	movwf	(printf@f+1)& (0+255),b
 11107  014E6C  EC04  F0DF         	call	_printf	;wreg free
 11108                           
 11109                           ;ring_buffer_LUT.c: 199: printf("\n\rHelp messages and neutral responses appear in yello
      +                          w\n\r");
 11110  014E70  0E54               	movlw	low STR_5
 11111  014E72  0102               	movlb	2	; () banked
 11112  014E74  6FA9               	movwf	printf@f& (0+255),b
 11113  014E76  0EEF               	movlw	high STR_5
 11114  014E78  6FAA               	movwf	(printf@f+1)& (0+255),b
 11115  014E7A  EC04  F0DF         	call	_printf	;wreg free
 11116                           
 11117                           ;ring_buffer_LUT.c: 201: terminalTextAttributes(GREEN, BLACK, NORMAL);
 11118  014E7E  0E00               	movlw	0
 11119  014E80  0102               	movlb	2	; () banked
 11120  014E82  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11121  014E84  0E00               	movlw	0
 11122  014E86  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11123  014E88  0E02               	movlw	2
 11124  014E8A  ECE9  F0AF         	call	_terminalTextAttributes
 11125                           
 11126                           ;ring_buffer_LUT.c: 202: printf("System parameters and affirmative responses appear in g
      +                          reen\n\r");
 11127  014E8E  0E73               	movlw	low STR_6
 11128  014E90  0102               	movlb	2	; () banked
 11129  014E92  6FA9               	movwf	printf@f& (0+255),b
 11130  014E94  0EED               	movlw	high STR_6
 11131  014E96  6FAA               	movwf	(printf@f+1)& (0+255),b
 11132  014E98  EC04  F0DF         	call	_printf	;wreg free
 11133                           
 11134                           ;ring_buffer_LUT.c: 203: terminalTextAttributes(CYAN, BLACK, NORMAL);
 11135  014E9C  0E00               	movlw	0
 11136  014E9E  0102               	movlb	2	; () banked
 11137  014EA0  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11138  014EA2  0E00               	movlw	0
 11139  014EA4  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11140  014EA6  0E06               	movlw	6
 11141  014EA8  ECE9  F0AF         	call	_terminalTextAttributes
 11142                           
 11143                           ;ring_buffer_LUT.c: 204: printf("Measurement responses appear in cyan\n\r");
 11144  014EAC  0EFE               	movlw	low STR_7
 11145  014EAE  0102               	movlb	2	; () banked
 11146  014EB0  6FA9               	movwf	printf@f& (0+255),b
 11147  014EB2  0EF4               	movlw	high STR_7
 11148  014EB4  6FAA               	movwf	(printf@f+1)& (0+255),b
 11149  014EB6  EC04  F0DF         	call	_printf	;wreg free
 11150                           
 11151                           ;ring_buffer_LUT.c: 205: terminalTextAttributes(RED, BLACK, NORMAL);
 11152  014EBA  0E00               	movlw	0
 11153  014EBC  0102               	movlb	2	; () banked
 11154  014EBE  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11155  014EC0  0E00               	movlw	0
 11156  014EC2  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11157  014EC4  0E01               	movlw	1
 11158  014EC6  ECE9  F0AF         	call	_terminalTextAttributes
 11159                           
 11160                           ;ring_buffer_LUT.c: 206: printf("Errors and negative responses appear in red\n\r");
 11161  014ECA  0E2B               	movlw	low STR_8
 11162  014ECC  0102               	movlb	2	; () banked
 11163  014ECE  6FA9               	movwf	printf@f& (0+255),b
 11164  014ED0  0EF3               	movlw	high STR_8
 11165  014ED2  6FAA               	movwf	(printf@f+1)& (0+255),b
 11166  014ED4  EC04  F0DF         	call	_printf	;wreg free
 11167                           
 11168                           ;ring_buffer_LUT.c: 207: terminalTextAttributesReset();
 11169  014ED8  EC5F  F0E3         	call	_terminalTextAttributesReset	;wreg free
 11170                           
 11171                           ;ring_buffer_LUT.c: 208: printf("User input appears in white\n\r");
 11172  014EDC  0ED3               	movlw	low STR_9
 11173  014EDE  0102               	movlb	2	; () banked
 11174  014EE0  6FA9               	movwf	printf@f& (0+255),b
 11175  014EE2  0EF7               	movlw	high STR_9
 11176  014EE4  6FAA               	movwf	(printf@f+1)& (0+255),b
 11177  014EE6  EC04  F0DF         	call	_printf	;wreg free
 11178                           
 11179                           ;ring_buffer_LUT.c: 210: printf("\n\r");
 11180  014EEA  0E9C               	movlw	low (STR_272+44)
 11181  014EEC  0102               	movlb	2	; () banked
 11182  014EEE  6FA9               	movwf	printf@f& (0+255),b
 11183  014EF0  0EF2               	movlw	high (STR_272+44)
 11184  014EF2  6FAA               	movwf	(printf@f+1)& (0+255),b
 11185  014EF4  EC04  F0DF         	call	_printf	;wreg free
 11186                           
 11187                           ;ring_buffer_LUT.c: 212: }
 11188  014EF8  0012               	return	
 11189  014EFA                     l21370:
 11190                           
 11191                           ; BSR set to: 2
 11192                           ;ring_buffer_LUT.c: 215: else {;ring_buffer_LUT.c: 217: if (strlen(line) >= 1) {
 11193  014EFA  C2BA  F200         	movff	ringBufferLUT@line,strlen@s
 11194  014EFE  C2BB  F201         	movff	ringBufferLUT@line+1,strlen@s+1
 11195  014F02  EC98  F0E0         	call	_strlen	;wreg free
 11196  014F06  0102               	movlb	2	; () banked
 11197  014F08  5100               	movf	?_strlen& (0+255),w,b
 11198  014F0A  1101               	iorwf	(?_strlen+1)& (0+255),w,b
 11199  014F0C  B4D8               	btfsc	status,2,c
 11200  014F0E  D027               	goto	l21374
 11201                           
 11202                           ; BSR set to: 2
 11203                           ;ring_buffer_LUT.c: 219: terminalTextAttributes(RED, BLACK, NORMAL);
 11204  014F10  0E00               	movlw	0
 11205  014F12  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11206  014F14  0E00               	movlw	0
 11207  014F16  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11208  014F18  0E01               	movlw	1
 11209  014F1A  ECE9  F0AF         	call	_terminalTextAttributes
 11210                           
 11211                           ;ring_buffer_LUT.c: 220: printf("Unsupported or mis-entered command\n\r");
 11212  014F1E  0E4A               	movlw	low STR_238
 11213  014F20  0102               	movlb	2	; () banked
 11214  014F22  6FA9               	movwf	printf@f& (0+255),b
 11215  014F24  0EF5               	movlw	high STR_238
 11216  014F26  6FAA               	movwf	(printf@f+1)& (0+255),b
 11217  014F28  EC04  F0DF         	call	_printf	;wreg free
 11218                           
 11219                           ;ring_buffer_LUT.c: 221: terminalTextAttributes(YELLOW, BLACK, NORMAL);
 11220  014F2C  0E00               	movlw	0
 11221  014F2E  0102               	movlb	2	; () banked
 11222  014F30  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11223  014F32  0E00               	movlw	0
 11224  014F34  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11225  014F36  0E03               	movlw	3
 11226  014F38  ECE9  F0AF         	call	_terminalTextAttributes
 11227                           
 11228                           ;ring_buffer_LUT.c: 222: printf("Commands are case sensitive, backspace is supported, co
      +                          mmand history is not supported\n\r");
 11229  014F3C  0E60               	movlw	low STR_239
 11230  014F3E  0102               	movlb	2	; () banked
 11231  014F40  6FA9               	movwf	printf@f& (0+255),b
 11232  014F42  0EEB               	movlw	high STR_239
 11233  014F44  6FAA               	movwf	(printf@f+1)& (0+255),b
 11234  014F46  EC04  F0DF         	call	_printf	;wreg free
 11235                           
 11236                           ;ring_buffer_LUT.c: 223: printf("Call 'Help' for list of supported commands\n\r");
 11237  014F4A  0ED0               	movlw	low (STR_10+2)
 11238  014F4C  0102               	movlb	2	; () banked
 11239  014F4E  6FA9               	movwf	printf@f& (0+255),b
 11240  014F50  0EF2               	movlw	high (STR_10+2)
 11241  014F52  6FAA               	movwf	(printf@f+1)& (0+255),b
 11242  014F54  EC04  F0DF         	call	_printf	;wreg free
 11243                           
 11244                           ;ring_buffer_LUT.c: 224: terminalTextAttributesReset();
 11245  014F58  EC5F  F0E3         	call	_terminalTextAttributesReset	;wreg free
 11246                           
 11247                           ;ring_buffer_LUT.c: 226: }
 11248  014F5C  0012               	return	
 11249  014F5E                     l21374:
 11250                           
 11251                           ; BSR set to: 2
 11252                           ;ring_buffer_LUT.c: 228: else if (live_measurement_enable_flag) {
 11253  014F5E  0100               	movlb	0	; () banked
 11254  014F60  51D7               	movf	_live_measurement_enable_flag& (0+255),w,b
 11255  014F62  B4D8               	btfsc	status,2,c
 11256  014F64  0012               	return	
 11257                           
 11258                           ; BSR set to: 0
 11259                           ;ring_buffer_LUT.c: 230: live_measurement_enable_flag = 0;
 11260  014F66  0E00               	movlw	0
 11261  014F68  6FD7               	movwf	_live_measurement_enable_flag& (0+255),b
 11262                           
 11263                           ; BSR set to: 0
 11264                           ;ring_buffer_LUT.c: 231: terminalTextAttributes(RED, BLACK, NORMAL);
 11265  014F6A  0E00               	movlw	0
 11266  014F6C  0102               	movlb	2	; () banked
 11267  014F6E  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11268  014F70  0E00               	movlw	0
 11269  014F72  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11270  014F74  0E01               	movlw	1
 11271  014F76  ECE9  F0AF         	call	_terminalTextAttributes
 11272                           
 11273                           ;ring_buffer_LUT.c: 232: printf("Live measurement updates disabled\n\r");
 11274  014F7A  0EDC               	movlw	low STR_241
 11275  014F7C  0102               	movlb	2	; () banked
 11276  014F7E  6FA9               	movwf	printf@f& (0+255),b
 11277  014F80  0EF5               	movlw	high STR_241
 11278  014F82  6FAA               	movwf	(printf@f+1)& (0+255),b
 11279  014F84  EC04  F0DF         	call	_printf	;wreg free
 11280  014F88  D699               	goto	l21326
 11281  014F8A                     __end_of_ringBufferLUT:
 11282                           	opt callstack 0
 11283                           
 11284 ;; *************** function _strcmp *****************
 11285 ;; Defined at:
 11286 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcmp.c"
 11287 ;; Parameters:    Size  Location     Type
 11288 ;;  s1              2    0[BANK2 ] PTR const unsigned char 
 11289 ;;		 -> line(64), 
 11290 ;;  s2              2    2[BANK2 ] PTR const unsigned char 
 11291 ;;		 -> STR_228(5), STR_226(25), STR_222(22), STR_221(14), 
 11292 ;;		 -> STR_219(18), STR_217(17), STR_215(17), STR_199(15), 
 11293 ;;		 -> STR_197(6), STR_194(6), STR_191(6), 
 11294 ;; Auto vars:     Size  Location     Type
 11295 ;;  r               1    6[BANK2 ] char 
 11296 ;; Return value:  Size  Location     Type
 11297 ;;                  2    0[BANK2 ] int 
 11298 ;; Registers used:
 11299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11300 ;; Tracked objects:
 11301 ;;		On entry : 0/0
 11302 ;;		On exit  : 0/0
 11303 ;;		Unchanged: 0/0
 11304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11305 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11306 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11307 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11308 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11309 ;;Total ram usage:        7 bytes
 11310 ;; Hardware stack levels used:    1
 11311 ;; Hardware stack levels required when called:   11
 11312 ;; This function calls:
 11313 ;;		Nothing
 11314 ;; This function is called by:
 11315 ;;		_ringBufferLUT
 11316 ;; This function uses a non-reentrant model
 11317 ;;
 11318                           
 11319                           	psect	text3
 11320  01B83C                     __ptext3:
 11321                           	opt callstack 0
 11322  01B83C                     _strcmp:
 11323                           	opt callstack 17
 11324                           
 11325                           ;incstack = 0
 11326  01B83C  D004               	goto	l20082
 11327  01B83E                     l20080:
 11328                           
 11329                           ; BSR set to: 2
 11330  01B83E  4B00               	infsnz	strcmp@s1& (0+255),f,b
 11331  01B840  2B01               	incf	(strcmp@s1+1)& (0+255),f,b
 11332  01B842  4B02               	infsnz	strcmp@s2& (0+255),f,b
 11333  01B844  2B03               	incf	(strcmp@s2+1)& (0+255),f,b
 11334  01B846                     l20082:
 11335  01B846  C202  FFF6         	movff	strcmp@s2,tblptrl
 11336  01B84A  C203  FFF7         	movff	strcmp@s2+1,tblptrh
 11337  01B84E                     	if	0	;tblptru may be non-zero
 11338  01B84E                     	endif
 11339  01B84E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11340  01B84E  0E00               	movlw	low (__mediumconst shr (0+16))
 11341  01B850  6EF8               	movwf	tblptru,c
 11342  01B852                     	endif
 11343  01B852  0008               	tblrd		*
 11344  01B854  CFF5 F204          	movff	tablat,??_strcmp
 11345  01B858  C200  FFD9         	movff	strcmp@s1,fsr2l
 11346  01B85C  C201  FFDA         	movff	strcmp@s1+1,fsr2h
 11347  01B860  50DF               	movf	indf2,w,c
 11348  01B862  0102               	movlb	2	; () banked
 11349  01B864  6F05               	movwf	(??_strcmp+1)& (0+255),b
 11350  01B866  5104               	movf	??_strcmp& (0+255),w,b
 11351  01B868  5D05               	subwf	(??_strcmp+1)& (0+255),w,b
 11352  01B86A  6F06               	movwf	strcmp@r& (0+255),b
 11353  01B86C  5106               	movf	strcmp@r& (0+255),w,b
 11354  01B86E  A4D8               	btfss	status,2,c
 11355  01B870  D007               	goto	u25480
 11356                           
 11357                           ; BSR set to: 2
 11358  01B872  C200  FFD9         	movff	strcmp@s1,fsr2l
 11359  01B876  C201  FFDA         	movff	strcmp@s1+1,fsr2h
 11360  01B87A  50DF               	movf	indf2,w,c
 11361  01B87C  A4D8               	btfss	status,2,c
 11362  01B87E  D7DF               	goto	l20080
 11363  01B880                     u25480:
 11364                           
 11365                           ; BSR set to: 2
 11366  01B880  5106               	movf	strcmp@r& (0+255),w,b
 11367  01B882  6F00               	movwf	?_strcmp& (0+255),b
 11368  01B884  6B01               	clrf	(?_strcmp+1)& (0+255),b
 11369  01B886  BF00               	btfsc	?_strcmp& (0+255),7,b
 11370  01B888  0701               	decf	(?_strcmp+1)& (0+255),f,b
 11371                           
 11372                           ; BSR set to: 2
 11373  01B88A  0012               	return		;funcret
 11374  01B88C                     __end_of_strcmp:
 11375                           	opt callstack 0
 11376                           
 11377 ;; *************** function _printErrorHandlerStatus *****************
 11378 ;; Defined at:
 11379 ;;		line 242 in file "ring_buffer_LUT.c"
 11380 ;; Parameters:    Size  Location     Type
 11381 ;;		None
 11382 ;; Auto vars:     Size  Location     Type
 11383 ;;		None
 11384 ;; Return value:  Size  Location     Type
 11385 ;;                  1    wreg      void 
 11386 ;; Registers used:
 11387 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11388 ;; Tracked objects:
 11389 ;;		On entry : 0/0
 11390 ;;		On exit  : 0/0
 11391 ;;		Unchanged: 0/0
 11392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11397 ;;Total ram usage:        0 bytes
 11398 ;; Hardware stack levels used:    1
 11399 ;; Hardware stack levels required when called:   16
 11400 ;; This function calls:
 11401 ;;		_getADCError
 11402 ;;		_getI2CError
 11403 ;;		_getUARTError
 11404 ;;		_printf
 11405 ;;		_terminalTextAttributes
 11406 ;;		_terminalTextAttributesReset
 11407 ;; This function is called by:
 11408 ;;		_ringBufferLUT
 11409 ;; This function uses a non-reentrant model
 11410 ;;
 11411                           
 11412                           	psect	text4
 11413  0192F0                     __ptext4:
 11414                           	opt callstack 0
 11415  0192F0                     _printErrorHandlerStatus:
 11416                           	opt callstack 12
 11417                           
 11418                           ;ring_buffer_LUT.c: 244: if (getADCError()) {
 11419                           
 11420                           ; BSR set to: 2
 11421                           ;incstack = 0
 11422  0192F0  ECEF  F0E2         	call	_getADCError	;wreg free
 11423  0192F4  0900               	iorlw	0
 11424  0192F6  B4D8               	btfsc	status,2,c
 11425  0192F8  D03E               	goto	l20102
 11426                           
 11427                           ;ring_buffer_LUT.c: 246: terminalTextAttributes(RED, BLACK, NORMAL);
 11428  0192FA  0E00               	movlw	0
 11429  0192FC  0102               	movlb	2	; () banked
 11430  0192FE  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11431  019300  0E00               	movlw	0
 11432  019302  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11433  019304  0E01               	movlw	1
 11434  019306  ECE9  F0AF         	call	_terminalTextAttributes
 11435                           
 11436                           ;ring_buffer_LUT.c: 247: printf("    ADC error(s) detected!\n\r");
 11437  01930A  0EF1               	movlw	low STR_242
 11438  01930C  0102               	movlb	2	; () banked
 11439  01930E  6FA9               	movwf	printf@f& (0+255),b
 11440  019310  0EF7               	movlw	high STR_242
 11441  019312  6FAA               	movwf	(printf@f+1)& (0+255),b
 11442  019314  EC04  F0DF         	call	_printf	;wreg free
 11443                           
 11444                           ;ring_buffer_LUT.c: 248: printf("    The following channels caused an ADC error:\n\r");
 11445  019318  0E0E               	movlw	low STR_243
 11446  01931A  0102               	movlb	2	; () banked
 11447  01931C  6FA9               	movwf	printf@f& (0+255),b
 11448  01931E  0EF2               	movlw	high STR_243
 11449  019320  6FAA               	movwf	(printf@f+1)& (0+255),b
 11450  019322  EC04  F0DF         	call	_printf	;wreg free
 11451                           
 11452                           ;ring_buffer_LUT.c: 250: if (error_handler.ADC_general_error_flag) {
 11453  019326  0100               	movlb	0	; () banked
 11454  019328  51BA               	movf	(_error_handler+1)& (0+255),w,b
 11455  01932A  B4D8               	btfsc	status,2,c
 11456  01932C  D007               	goto	l20098
 11457                           
 11458                           ; BSR set to: 0
 11459                           ;ring_buffer_LUT.c: 251: printf("        General ADC error\n\r");
 11460  01932E  0E47               	movlw	low STR_244
 11461  019330  0102               	movlb	2	; () banked
 11462  019332  6FA9               	movwf	printf@f& (0+255),b
 11463  019334  0EF8               	movlw	high STR_244
 11464  019336  6FAA               	movwf	(printf@f+1)& (0+255),b
 11465  019338  EC04  F0DF         	call	_printf	;wreg free
 11466  01933C                     l20098:
 11467                           
 11468                           ;ring_buffer_LUT.c: 252: };ring_buffer_LUT.c: 254: if (error_handler.FVR_ADC_error_flag)
      +                           {
 11469  01933C  0100               	movlb	0	; () banked
 11470  01933E  51B9               	movf	_error_handler& (0+255),w,b
 11471  019340  B4D8               	btfsc	status,2,c
 11472  019342  D007               	goto	l2209
 11473                           
 11474                           ; BSR set to: 0
 11475                           ;ring_buffer_LUT.c: 255: printf("        FVR\n\r");
 11476  019344  0E2B               	movlw	low STR_245
 11477  019346  0102               	movlb	2	; () banked
 11478  019348  6FA9               	movwf	printf@f& (0+255),b
 11479  01934A  0EFC               	movlw	high STR_245
 11480  01934C  6FAA               	movwf	(printf@f+1)& (0+255),b
 11481  01934E  EC04  F0DF         	call	_printf	;wreg free
 11482  019352                     l2209:
 11483                           
 11484                           ;ring_buffer_LUT.c: 256: };ring_buffer_LUT.c: 258: terminalTextAttributes(YELLOW, BLACK,
      +                           NORMAL);
 11485  019352  0E00               	movlw	0
 11486  019354  0102               	movlb	2	; () banked
 11487  019356  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11488  019358  0E00               	movlw	0
 11489  01935A  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11490  01935C  0E03               	movlw	3
 11491  01935E  ECE9  F0AF         	call	_terminalTextAttributes
 11492                           
 11493                           ;ring_buffer_LUT.c: 259: printf("    Call 'Clear ADC Errors' to clear ADC error(s)\n\r")
      +                          ;
 11494  019362  0E40               	movlw	low STR_246
 11495  019364  0102               	movlb	2	; () banked
 11496  019366  6FA9               	movwf	printf@f& (0+255),b
 11497  019368  0EF1               	movlw	high STR_246
 11498  01936A  6FAA               	movwf	(printf@f+1)& (0+255),b
 11499  01936C  EC04  F0DF         	call	_printf	;wreg free
 11500                           
 11501                           ;ring_buffer_LUT.c: 260: terminalTextAttributesReset();
 11502  019370  EC5F  F0E3         	call	_terminalTextAttributesReset	;wreg free
 11503                           
 11504                           ;ring_buffer_LUT.c: 262: }
 11505  019374  D011               	goto	l20104
 11506  019376                     l20102:
 11507                           
 11508                           ;ring_buffer_LUT.c: 264: else {;ring_buffer_LUT.c: 266: terminalTextAttributes(GREEN, BL
      +                          ACK, NORMAL);
 11509  019376  0E00               	movlw	0
 11510  019378  0102               	movlb	2	; () banked
 11511  01937A  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11512  01937C  0E00               	movlw	0
 11513  01937E  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11514  019380  0E02               	movlw	2
 11515  019382  ECE9  F0AF         	call	_terminalTextAttributes
 11516                           
 11517                           ;ring_buffer_LUT.c: 267: printf("    No ADC error(s) detected\n\r");
 11518  019386  0E96               	movlw	low STR_247
 11519  019388  0102               	movlb	2	; () banked
 11520  01938A  6FA9               	movwf	printf@f& (0+255),b
 11521  01938C  0EF7               	movlw	high STR_247
 11522  01938E  6FAA               	movwf	(printf@f+1)& (0+255),b
 11523  019390  EC04  F0DF         	call	_printf	;wreg free
 11524                           
 11525                           ;ring_buffer_LUT.c: 268: terminalTextAttributesReset();
 11526  019394  EC5F  F0E3         	call	_terminalTextAttributesReset	;wreg free
 11527  019398                     l20104:
 11528                           
 11529                           ;ring_buffer_LUT.c: 270: };ring_buffer_LUT.c: 272: if (getI2CError()) {
 11530  019398  EC1A  F0E1         	call	_getI2CError	;wreg free
 11531  01939C  0900               	iorlw	0
 11532  01939E  B4D8               	btfsc	status,2,c
 11533  0193A0  D058               	goto	l20128
 11534                           
 11535                           ;ring_buffer_LUT.c: 274: terminalTextAttributes(RED, BLACK, NORMAL);
 11536  0193A2  0E00               	movlw	0
 11537  0193A4  0102               	movlb	2	; () banked
 11538  0193A6  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11539  0193A8  0E00               	movlw	0
 11540  0193AA  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11541  0193AC  0E01               	movlw	1
 11542  0193AE  ECE9  F0AF         	call	_terminalTextAttributes
 11543                           
 11544                           ;ring_buffer_LUT.c: 275: printf("    The following I2C Errors were detected:\n\r");
 11545  0193B2  0EFD               	movlw	low STR_248
 11546  0193B4  0102               	movlb	2	; () banked
 11547  0193B6  6FA9               	movwf	printf@f& (0+255),b
 11548  0193B8  0EF2               	movlw	high STR_248
 11549  0193BA  6FAA               	movwf	(printf@f+1)& (0+255),b
 11550  0193BC  EC04  F0DF         	call	_printf	;wreg free
 11551                           
 11552                           ;ring_buffer_LUT.c: 277: if (error_handler.I2C_General_error_flag) {
 11553  0193C0  0100               	movlb	0	; () banked
 11554  0193C2  51BB               	movf	(_error_handler+2)& (0+255),w,b
 11555  0193C4  B4D8               	btfsc	status,2,c
 11556  0193C6  D007               	goto	l20112
 11557                           
 11558                           ; BSR set to: 0
 11559                           ;ring_buffer_LUT.c: 278: printf("        I2C General Error\n\r");
 11560  0193C8  0E2B               	movlw	low STR_249
 11561  0193CA  0102               	movlb	2	; () banked
 11562  0193CC  6FA9               	movwf	printf@f& (0+255),b
 11563  0193CE  0EF8               	movlw	high STR_249
 11564  0193D0  6FAA               	movwf	(printf@f+1)& (0+255),b
 11565  0193D2  EC04  F0DF         	call	_printf	;wreg free
 11566  0193D6                     l20112:
 11567                           
 11568                           ;ring_buffer_LUT.c: 279: };ring_buffer_LUT.c: 281: if (error_handler.I2C_Ambient_Temp_Se
      +                          nse_error_flag) {
 11569  0193D6  0100               	movlb	0	; () banked
 11570  0193D8  51BF               	movf	(_error_handler+6)& (0+255),w,b
 11571  0193DA  B4D8               	btfsc	status,2,c
 11572  0193DC  D007               	goto	l20116
 11573                           
 11574                           ; BSR set to: 0
 11575                           ;ring_buffer_LUT.c: 282: printf("        I2C Ambient Temp Sensor Error\n\r");
 11576  0193DE  0EAF               	movlw	low STR_250
 11577  0193E0  0102               	movlb	2	; () banked
 11578  0193E2  6FA9               	movwf	printf@f& (0+255),b
 11579  0193E4  0EF4               	movlw	high STR_250
 11580  0193E6  6FAA               	movwf	(printf@f+1)& (0+255),b
 11581  0193E8  EC04  F0DF         	call	_printf	;wreg free
 11582  0193EC                     l20116:
 11583                           
 11584                           ;ring_buffer_LUT.c: 283: };ring_buffer_LUT.c: 285: if (error_handler.I2C_POS5_Temp_Sense
      +                          _error_flag) {
 11585  0193EC  0100               	movlb	0	; () banked
 11586  0193EE  51BE               	movf	(_error_handler+5)& (0+255),w,b
 11587  0193F0  B4D8               	btfsc	status,2,c
 11588  0193F2  D007               	goto	l20120
 11589                           
 11590                           ; BSR set to: 0
 11591                           ;ring_buffer_LUT.c: 286: printf("        I2C POS5 Temp Sensor Error\n\r");
 11592  0193F4  0E6F               	movlw	low STR_251
 11593  0193F6  0102               	movlb	2	; () banked
 11594  0193F8  6FA9               	movwf	printf@f& (0+255),b
 11595  0193FA  0EF5               	movlw	high STR_251
 11596  0193FC  6FAA               	movwf	(printf@f+1)& (0+255),b
 11597  0193FE  EC04  F0DF         	call	_printf	;wreg free
 11598  019402                     l20120:
 11599                           
 11600                           ;ring_buffer_LUT.c: 287: };ring_buffer_LUT.c: 289: if (error_handler.I2C_QI_Temp_Sense_e
      +                          rror_flag) {
 11601  019402  0100               	movlb	0	; () banked
 11602  019404  51BD               	movf	(_error_handler+4)& (0+255),w,b
 11603  019406  B4D8               	btfsc	status,2,c
 11604  019408  D007               	goto	l20124
 11605                           
 11606                           ; BSR set to: 0
 11607                           ;ring_buffer_LUT.c: 290: printf("        I2C QI Temp Sensor Error\n\r");
 11608  01940A  0E8C               	movlw	low STR_252
 11609  01940C  0102               	movlb	2	; () banked
 11610  01940E  6FA9               	movwf	printf@f& (0+255),b
 11611  019410  0EF6               	movlw	high STR_252
 11612  019412  6FAA               	movwf	(printf@f+1)& (0+255),b
 11613  019414  EC04  F0DF         	call	_printf	;wreg free
 11614  019418                     l20124:
 11615                           
 11616                           ;ring_buffer_LUT.c: 291: };ring_buffer_LUT.c: 293: if (error_handler.I2C_OLED_error_flag
      +                          ) {
 11617  019418  0100               	movlb	0	; () banked
 11618  01941A  51BC               	movf	(_error_handler+3)& (0+255),w,b
 11619  01941C  B4D8               	btfsc	status,2,c
 11620  01941E  D007               	goto	l2216
 11621                           
 11622                           ; BSR set to: 0
 11623                           ;ring_buffer_LUT.c: 294: printf("        I2C OLED Display Error\n\r");
 11624  019420  0E36               	movlw	low STR_253
 11625  019422  0102               	movlb	2	; () banked
 11626  019424  6FA9               	movwf	printf@f& (0+255),b
 11627  019426  0EF7               	movlw	high STR_253
 11628  019428  6FAA               	movwf	(printf@f+1)& (0+255),b
 11629  01942A  EC04  F0DF         	call	_printf	;wreg free
 11630  01942E                     l2216:
 11631                           
 11632                           ;ring_buffer_LUT.c: 295: };ring_buffer_LUT.c: 297: terminalTextAttributes(YELLOW, BLACK,
      +                           NORMAL);
 11633  01942E  0E00               	movlw	0
 11634  019430  0102               	movlb	2	; () banked
 11635  019432  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11636  019434  0E00               	movlw	0
 11637  019436  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11638  019438  0E03               	movlw	3
 11639  01943A  ECE9  F0AF         	call	_terminalTextAttributes
 11640                           
 11641                           ;ring_buffer_LUT.c: 298: printf("    Call 'Clear I2C Errors' to clear communications err
      +                          or(s)\n\r");
 11642  01943E  0EB8               	movlw	low STR_254
 11643  019440  0102               	movlb	2	; () banked
 11644  019442  6FA9               	movwf	printf@f& (0+255),b
 11645  019444  0EEC               	movlw	high STR_254
 11646  019446  6FAA               	movwf	(printf@f+1)& (0+255),b
 11647  019448  EC04  F0DF         	call	_printf	;wreg free
 11648                           
 11649                           ;ring_buffer_LUT.c: 299: terminalTextAttributesReset();
 11650  01944C  EC5F  F0E3         	call	_terminalTextAttributesReset	;wreg free
 11651                           
 11652                           ;ring_buffer_LUT.c: 301: }
 11653  019450  D011               	goto	l20130
 11654  019452                     l20128:
 11655                           
 11656                           ;ring_buffer_LUT.c: 303: else {;ring_buffer_LUT.c: 305: terminalTextAttributes(GREEN, BL
      +                          ACK, NORMAL);
 11657  019452  0E00               	movlw	0
 11658  019454  0102               	movlb	2	; () banked
 11659  019456  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11660  019458  0E00               	movlw	0
 11661  01945A  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11662  01945C  0E02               	movlw	2
 11663  01945E  ECE9  F0AF         	call	_terminalTextAttributes
 11664                           
 11665                           ;ring_buffer_LUT.c: 306: printf("    No I2C error(s) detected\n\r");
 11666  019462  0E77               	movlw	low STR_255
 11667  019464  0102               	movlb	2	; () banked
 11668  019466  6FA9               	movwf	printf@f& (0+255),b
 11669  019468  0EF7               	movlw	high STR_255
 11670  01946A  6FAA               	movwf	(printf@f+1)& (0+255),b
 11671  01946C  EC04  F0DF         	call	_printf	;wreg free
 11672                           
 11673                           ;ring_buffer_LUT.c: 307: terminalTextAttributesReset();
 11674  019470  EC5F  F0E3         	call	_terminalTextAttributesReset	;wreg free
 11675  019474                     l20130:
 11676                           
 11677                           ;ring_buffer_LUT.c: 309: };ring_buffer_LUT.c: 311: if (getUARTError()) {
 11678  019474  EC2B  F0E4         	call	_getUARTError	;wreg free
 11679  019478  0900               	iorlw	0
 11680  01947A  B4D8               	btfsc	status,2,c
 11681  01947C  D021               	goto	l20134
 11682                           
 11683                           ;ring_buffer_LUT.c: 313: terminalTextAttributes(RED, BLACK, NORMAL);
 11684  01947E  0E00               	movlw	0
 11685  019480  0102               	movlb	2	; () banked
 11686  019482  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11687  019484  0E00               	movlw	0
 11688  019486  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11689  019488  0E01               	movlw	1
 11690  01948A  ECE9  F0AF         	call	_terminalTextAttributes
 11691                           
 11692                           ;ring_buffer_LUT.c: 314: printf("    USB UART Error Detected\n\r");
 11693  01948E  0EB5               	movlw	low STR_256
 11694  019490  0102               	movlb	2	; () banked
 11695  019492  6FA9               	movwf	printf@f& (0+255),b
 11696  019494  0EF7               	movlw	high STR_256
 11697  019496  6FAA               	movwf	(printf@f+1)& (0+255),b
 11698  019498  EC04  F0DF         	call	_printf	;wreg free
 11699                           
 11700                           ;ring_buffer_LUT.c: 316: terminalTextAttributes(YELLOW, BLACK, NORMAL);
 11701  01949C  0E00               	movlw	0
 11702  01949E  0102               	movlb	2	; () banked
 11703  0194A0  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11704  0194A2  0E00               	movlw	0
 11705  0194A4  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11706  0194A6  0E03               	movlw	3
 11707  0194A8  ECE9  F0AF         	call	_terminalTextAttributes
 11708                           
 11709                           ;ring_buffer_LUT.c: 317: printf("    Call 'Clear UART Errors' to clear communications er
      +                          ror(s)\n\r");
 11710  0194AC  0EF9               	movlw	low STR_257
 11711  0194AE  0102               	movlb	2	; () banked
 11712  0194B0  6FA9               	movwf	printf@f& (0+255),b
 11713  0194B2  0EEB               	movlw	high STR_257
 11714  0194B4  6FAA               	movwf	(printf@f+1)& (0+255),b
 11715  0194B6  EC04  F0DF         	call	_printf	;wreg free
 11716                           
 11717                           ;ring_buffer_LUT.c: 318: terminalTextAttributesReset();
 11718  0194BA  EC5F  F0E3         	call	_terminalTextAttributesReset	;wreg free
 11719                           
 11720                           ;ring_buffer_LUT.c: 320: }
 11721  0194BE  0012               	return	
 11722  0194C0                     l20134:
 11723                           
 11724                           ;ring_buffer_LUT.c: 322: else {;ring_buffer_LUT.c: 324: terminalTextAttributes(GREEN, BL
      +                          ACK, NORMAL);
 11725  0194C0  0E00               	movlw	0
 11726  0194C2  0102               	movlb	2	; () banked
 11727  0194C4  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11728  0194C6  0E00               	movlw	0
 11729  0194C8  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11730  0194CA  0E02               	movlw	2
 11731  0194CC  ECE9  F0AF         	call	_terminalTextAttributes
 11732                           
 11733                           ;ring_buffer_LUT.c: 325: printf("    No UART error(s) detected\n\r");
 11734  0194D0  0E57               	movlw	low STR_258
 11735  0194D2  0102               	movlb	2	; () banked
 11736  0194D4  6FA9               	movwf	printf@f& (0+255),b
 11737  0194D6  0EF7               	movlw	high STR_258
 11738  0194D8  6FAA               	movwf	(printf@f+1)& (0+255),b
 11739  0194DA  EC04  F0DF         	call	_printf	;wreg free
 11740                           
 11741                           ;ring_buffer_LUT.c: 326: terminalTextAttributesReset();
 11742  0194DE  EC5F  F0E3         	call	_terminalTextAttributesReset	;wreg free
 11743  0194E2  0012               	return		;funcret
 11744  0194E4                     __end_of_printErrorHandlerStatus:
 11745                           	opt callstack 0
 11746                           
 11747 ;; *************** function _printCurrentMeasurements *****************
 11748 ;; Defined at:
 11749 ;;		line 333 in file "ring_buffer_LUT.c"
 11750 ;; Parameters:    Size  Location     Type
 11751 ;;		None
 11752 ;; Auto vars:     Size  Location     Type
 11753 ;;		None
 11754 ;; Return value:  Size  Location     Type
 11755 ;;                  1    wreg      void 
 11756 ;; Registers used:
 11757 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11758 ;; Tracked objects:
 11759 ;;		On entry : 0/0
 11760 ;;		On exit  : 0/0
 11761 ;;		Unchanged: 0/0
 11762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11767 ;;Total ram usage:        0 bytes
 11768 ;; Hardware stack levels used:    1
 11769 ;; Hardware stack levels required when called:   16
 11770 ;; This function calls:
 11771 ;;		___fldiv
 11772 ;;		_floatToEngineeringFormat
 11773 ;;		_getNXQChargeStateString
 11774 ;;		_getStringSecondsAsTime
 11775 ;;		_printf
 11776 ;;		_terminalTextAttributes
 11777 ;;		_terminalTextAttributesReset
 11778 ;; This function is called by:
 11779 ;;		_main
 11780 ;;		_ringBufferLUT
 11781 ;; This function uses a non-reentrant model
 11782 ;;
 11783                           
 11784                           	psect	text5
 11785  014F8A                     __ptext5:
 11786                           	opt callstack 0
 11787  014F8A                     _printCurrentMeasurements:
 11788                           	opt callstack 12
 11789                           
 11790                           ;ring_buffer_LUT.c: 335: if (nxq_charge_state == QI_Error) {
 11791                           
 11792                           ;incstack = 0
 11793  014F8A  0E03               	movlw	3
 11794  014F8C  0101               	movlb	1	; () banked
 11795  014F8E  1995               	xorwf	_nxq_charge_state& (0+255),w,b
 11796  014F90  A4D8               	btfss	status,2,c
 11797  014F92  D010               	goto	l19936
 11798                           
 11799                           ; BSR set to: 1
 11800                           ;ring_buffer_LUT.c: 336: terminalTextAttributes(RED, BLACK, NORMAL);
 11801  014F94  0E00               	movlw	0
 11802  014F96  0102               	movlb	2	; () banked
 11803  014F98  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11804  014F9A  0E00               	movlw	0
 11805  014F9C  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11806  014F9E  0E01               	movlw	1
 11807  014FA0  ECE9  F0AF         	call	_terminalTextAttributes
 11808                           
 11809                           ;ring_buffer_LUT.c: 337: printf("    QI Charger is in Error State\n\r");
 11810  014FA4  0E69               	movlw	low STR_259
 11811  014FA6  0102               	movlb	2	; () banked
 11812  014FA8  6FA9               	movwf	printf@f& (0+255),b
 11813  014FAA  0EF6               	movlw	high STR_259
 11814  014FAC  6FAA               	movwf	(printf@f+1)& (0+255),b
 11815  014FAE  EC04  F0DF         	call	_printf	;wreg free
 11816                           
 11817                           ;ring_buffer_LUT.c: 338: }
 11818  014FB2  D029               	goto	l2224
 11819  014FB4                     l19936:
 11820                           
 11821                           ; BSR set to: 1
 11822                           ;ring_buffer_LUT.c: 339: else if (nxq_charge_state == QI_Fully_Charged) {
 11823  014FB4  0E02               	movlw	2
 11824  014FB6  1995               	xorwf	_nxq_charge_state& (0+255),w,b
 11825  014FB8  A4D8               	btfss	status,2,c
 11826  014FBA  D010               	goto	l19940
 11827                           
 11828                           ; BSR set to: 1
 11829                           ;ring_buffer_LUT.c: 340: terminalTextAttributes(GREEN, BLACK, NORMAL);
 11830  014FBC  0E00               	movlw	0
 11831  014FBE  0102               	movlb	2	; () banked
 11832  014FC0  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11833  014FC2  0E00               	movlw	0
 11834  014FC4  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11835  014FC6  0E02               	movlw	2
 11836  014FC8  ECE9  F0AF         	call	_terminalTextAttributes
 11837                           
 11838                           ;ring_buffer_LUT.c: 341: printf("    QI wireless power converter has fully charged phone
      +                          \n\r");
 11839  014FCC  0E1A               	movlw	low STR_260
 11840  014FCE  0102               	movlb	2	; () banked
 11841  014FD0  6FA9               	movwf	printf@f& (0+255),b
 11842  014FD2  0EEF               	movlw	high STR_260
 11843  014FD4  6FAA               	movwf	(printf@f+1)& (0+255),b
 11844  014FD6  EC04  F0DF         	call	_printf	;wreg free
 11845                           
 11846                           ;ring_buffer_LUT.c: 342: }
 11847  014FDA  D015               	goto	l2224
 11848  014FDC                     l19940:
 11849                           
 11850                           ; BSR set to: 1
 11851                           ;ring_buffer_LUT.c: 343: else {;ring_buffer_LUT.c: 344: terminalTextAttributes(GREEN, BL
      +                          ACK, NORMAL);
 11852  014FDC  0E00               	movlw	0
 11853  014FDE  0102               	movlb	2	; () banked
 11854  014FE0  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11855  014FE2  0E00               	movlw	0
 11856  014FE4  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11857  014FE6  0E02               	movlw	2
 11858  014FE8  ECE9  F0AF         	call	_terminalTextAttributes
 11859                           
 11860                           ;ring_buffer_LUT.c: 345: printf("    QI wireless power converter is currently %s\n\r\n\r
      +                          ", getNXQChargeStateString());
 11861  014FEC  0E0C               	movlw	low STR_261
 11862  014FEE  0102               	movlb	2	; () banked
 11863  014FF0  6FA9               	movwf	printf@f& (0+255),b
 11864  014FF2  0EF1               	movlw	high STR_261
 11865  014FF4  6FAA               	movwf	(printf@f+1)& (0+255),b
 11866  014FF6  EC98  F0DA         	call	_getNXQChargeStateString	;wreg free
 11867  014FFA  C200  F2AB         	movff	?_getNXQChargeStateString,?_printf+2
 11868  014FFE  C201  F2AC         	movff	?_getNXQChargeStateString+1,?_printf+3
 11869  015002  EC04  F0DF         	call	_printf	;wreg free
 11870  015006                     l2224:
 11871                           
 11872                           ;ring_buffer_LUT.c: 346: };ring_buffer_LUT.c: 348: terminalTextAttributes(GREEN, BLACK, 
      +                          NORMAL);
 11873  015006  0E00               	movlw	0
 11874  015008  0102               	movlb	2	; () banked
 11875  01500A  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11876  01500C  0E00               	movlw	0
 11877  01500E  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11878  015010  0E02               	movlw	2
 11879  015012  ECE9  F0AF         	call	_terminalTextAttributes
 11880                           
 11881                           ;ring_buffer_LUT.c: 349: if (QI_charge_time > 0) printf("    System has been charging a 
      +                          phone for %s\n\r\n\r", getStringSecondsAsTime(QI_charge_time));
 11882  015016  0102               	movlb	2	; () banked
 11883  015018  51D2               	movf	_QI_charge_time& (0+255),w,b
 11884  01501A  11D3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 11885  01501C  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 11886  01501E  11D5               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 11887  015020  B4D8               	btfsc	status,2,c
 11888  015022  D014               	goto	l2227
 11889                           
 11890                           ; BSR set to: 2
 11891  015024  0E40               	movlw	low STR_262
 11892  015026  6FA9               	movwf	printf@f& (0+255),b
 11893  015028  0EF2               	movlw	high STR_262
 11894  01502A  6FAA               	movwf	(printf@f+1)& (0+255),b
 11895  01502C  C2D2  F29F         	movff	_QI_charge_time,getStringSecondsAsTime@input_seconds
 11896  015030  C2D3  F2A0         	movff	_QI_charge_time+1,getStringSecondsAsTime@input_seconds+1
 11897  015034  C2D4  F2A1         	movff	_QI_charge_time+2,getStringSecondsAsTime@input_seconds+2
 11898  015038  C2D5  F2A2         	movff	_QI_charge_time+3,getStringSecondsAsTime@input_seconds+3
 11899  01503C  EC16  F0AE         	call	_getStringSecondsAsTime	;wreg free
 11900  015040  C29F  F2AB         	movff	?_getStringSecondsAsTime,?_printf+2
 11901  015044  C2A0  F2AC         	movff	?_getStringSecondsAsTime+1,?_printf+3
 11902  015048  EC04  F0DF         	call	_printf	;wreg free
 11903  01504C                     l2227:
 11904                           
 11905                           ;ring_buffer_LUT.c: 351: terminalTextAttributes(CYAN, BLACK, BOLD);
 11906  01504C  0E00               	movlw	0
 11907  01504E  0102               	movlb	2	; () banked
 11908  015050  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11909  015052  0E01               	movlw	1
 11910  015054  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11911  015056  0E06               	movlw	6
 11912  015058  ECE9  F0AF         	call	_terminalTextAttributes
 11913                           
 11914                           ;ring_buffer_LUT.c: 352: printf("    System Voltages:\n\r");
 11915  01505C  0E7B               	movlw	low STR_263
 11916  01505E  0102               	movlb	2	; () banked
 11917  015060  6FA9               	movwf	printf@f& (0+255),b
 11918  015062  0EF9               	movlw	high STR_263
 11919  015064  6FAA               	movwf	(printf@f+1)& (0+255),b
 11920  015066  EC04  F0DF         	call	_printf	;wreg free
 11921                           
 11922                           ;ring_buffer_LUT.c: 353: terminalTextAttributes(CYAN, BLACK, NORMAL);
 11923  01506A  0E00               	movlw	0
 11924  01506C  0102               	movlb	2	; () banked
 11925  01506E  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11926  015070  0E00               	movlw	0
 11927  015072  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11928  015074  0E06               	movlw	6
 11929  015076  ECE9  F0AF         	call	_terminalTextAttributes
 11930                           
 11931                           ;ring_buffer_LUT.c: 354: printf("        +12V rail measured as %+.3f Volts\n\r", adc_res
      +                          ults.pos12_adc_result);
 11932  01507A  0EB3               	movlw	low STR_264
 11933  01507C  0102               	movlb	2	; () banked
 11934  01507E  6FA9               	movwf	printf@f& (0+255),b
 11935  015080  0EF3               	movlw	high STR_264
 11936  015082  6FAA               	movwf	(printf@f+1)& (0+255),b
 11937  015084  C0E9  F2AB         	movff	_adc_results+12,?_printf+2
 11938  015088  C0EA  F2AC         	movff	_adc_results+13,?_printf+3
 11939  01508C  C0EB  F2AD         	movff	_adc_results+14,?_printf+4
 11940  015090  C0EC  F2AE         	movff	_adc_results+15,?_printf+5
 11941  015094  EC04  F0DF         	call	_printf	;wreg free
 11942                           
 11943                           ;ring_buffer_LUT.c: 355: printf("        +5V rail measured as %+.3f Volts\n\r\n\r", adc_
      +                          results.pos5_adc_result);
 11944  015098  0E59               	movlw	low STR_265
 11945  01509A  0102               	movlb	2	; () banked
 11946  01509C  6FA9               	movwf	printf@f& (0+255),b
 11947  01509E  0EF3               	movlw	high STR_265
 11948  0150A0  6FAA               	movwf	(printf@f+1)& (0+255),b
 11949  0150A2  C0E5  F2AB         	movff	_adc_results+8,?_printf+2
 11950  0150A6  C0E6  F2AC         	movff	_adc_results+9,?_printf+3
 11951  0150AA  C0E7  F2AD         	movff	_adc_results+10,?_printf+4
 11952  0150AE  C0E8  F2AE         	movff	_adc_results+11,?_printf+5
 11953  0150B2  EC04  F0DF         	call	_printf	;wreg free
 11954                           
 11955                           ;ring_buffer_LUT.c: 357: terminalTextAttributes(CYAN, BLACK, BOLD);
 11956  0150B6  0E00               	movlw	0
 11957  0150B8  0102               	movlb	2	; () banked
 11958  0150BA  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11959  0150BC  0E01               	movlw	1
 11960  0150BE  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11961  0150C0  0E06               	movlw	6
 11962  0150C2  ECE9  F0AF         	call	_terminalTextAttributes
 11963                           
 11964                           ;ring_buffer_LUT.c: 358: printf("    System Currents:\n\r");
 11965  0150C6  0E92               	movlw	low STR_266
 11966  0150C8  0102               	movlb	2	; () banked
 11967  0150CA  6FA9               	movwf	printf@f& (0+255),b
 11968  0150CC  0EF9               	movlw	high STR_266
 11969  0150CE  6FAA               	movwf	(printf@f+1)& (0+255),b
 11970  0150D0  EC04  F0DF         	call	_printf	;wreg free
 11971                           
 11972                           ;ring_buffer_LUT.c: 359: terminalTextAttributes(CYAN, BLACK, NORMAL);
 11973  0150D4  0E00               	movlw	0
 11974  0150D6  0102               	movlb	2	; () banked
 11975  0150D8  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 11976  0150DA  0E00               	movlw	0
 11977  0150DC  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11978  0150DE  0E06               	movlw	6
 11979  0150E0  ECE9  F0AF         	call	_terminalTextAttributes
 11980                           
 11981                           ;ring_buffer_LUT.c: 360: printf("        +12V input current measured as %+.3f Amps\n\r",
      +                           adc_results.pos12_isns_adc_result);
 11982  0150E4  0E74               	movlw	low STR_267
 11983  0150E6  0102               	movlb	2	; () banked
 11984  0150E8  6FA9               	movwf	printf@f& (0+255),b
 11985  0150EA  0EF1               	movlw	high STR_267
 11986  0150EC  6FAA               	movwf	(printf@f+1)& (0+255),b
 11987  0150EE  C0ED  F2AB         	movff	_adc_results+16,?_printf+2
 11988  0150F2  C0EE  F2AC         	movff	_adc_results+17,?_printf+3
 11989  0150F6  C0EF  F2AD         	movff	_adc_results+18,?_printf+4
 11990  0150FA  C0F0  F2AE         	movff	_adc_results+19,?_printf+5
 11991  0150FE  EC04  F0DF         	call	_printf	;wreg free
 11992                           
 11993                           ;ring_buffer_LUT.c: 361: printf("        QI converter current measured as %+.3f Amps\n\r
      +                          \n\r", adc_results.qi_isns_adc_result);
 11994  015102  0E8D               	movlw	low STR_268
 11995  015104  0102               	movlb	2	; () banked
 11996  015106  6FA9               	movwf	printf@f& (0+255),b
 11997  015108  0EEF               	movlw	high STR_268
 11998  01510A  6FAA               	movwf	(printf@f+1)& (0+255),b
 11999  01510C  C0F1  F2AB         	movff	_adc_results+20,?_printf+2
 12000  015110  C0F2  F2AC         	movff	_adc_results+21,?_printf+3
 12001  015114  C0F3  F2AD         	movff	_adc_results+22,?_printf+4
 12002  015118  C0F4  F2AE         	movff	_adc_results+23,?_printf+5
 12003  01511C  EC04  F0DF         	call	_printf	;wreg free
 12004                           
 12005                           ;ring_buffer_LUT.c: 363: terminalTextAttributes(CYAN, BLACK, BOLD);
 12006  015120  0E00               	movlw	0
 12007  015122  0102               	movlb	2	; () banked
 12008  015124  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 12009  015126  0E01               	movlw	1
 12010  015128  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12011  01512A  0E06               	movlw	6
 12012  01512C  ECE9  F0AF         	call	_terminalTextAttributes
 12013                           
 12014                           ;ring_buffer_LUT.c: 364: printf("    System Power:\n\r");
 12015  015130  0EC1               	movlw	low STR_269
 12016  015132  0102               	movlb	2	; () banked
 12017  015134  6FA9               	movwf	printf@f& (0+255),b
 12018  015136  0EFA               	movlw	high STR_269
 12019  015138  6FAA               	movwf	(printf@f+1)& (0+255),b
 12020  01513A  EC04  F0DF         	call	_printf	;wreg free
 12021                           
 12022                           ;ring_buffer_LUT.c: 365: terminalTextAttributes(CYAN, BLACK, NORMAL);
 12023  01513E  0E00               	movlw	0
 12024  015140  0102               	movlb	2	; () banked
 12025  015142  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 12026  015144  0E00               	movlw	0
 12027  015146  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12028  015148  0E06               	movlw	6
 12029  01514A  ECE9  F0AF         	call	_terminalTextAttributes
 12030                           
 12031                           ;ring_buffer_LUT.c: 366: printf("        Electrical Input Power calculated as %+.3f Watt
      +                          s\n\r", adc_calculations.input_power);
 12032  01514E  0EDF               	movlw	low STR_270
 12033  015150  0102               	movlb	2	; () banked
 12034  015152  6FA9               	movwf	printf@f& (0+255),b
 12035  015154  0EEE               	movlw	high STR_270
 12036  015156  6FAA               	movwf	(printf@f+1)& (0+255),b
 12037  015158  C2BE  F2AB         	movff	_adc_calculations,?_printf+2
 12038  01515C  C2BF  F2AC         	movff	_adc_calculations+1,?_printf+3
 12039  015160  C2C0  F2AD         	movff	_adc_calculations+2,?_printf+4
 12040  015164  C2C1  F2AE         	movff	_adc_calculations+3,?_printf+5
 12041  015168  EC04  F0DF         	call	_printf	;wreg free
 12042                           
 12043                           ;ring_buffer_LUT.c: 367: printf("        Wireless Output Power calculated as %+.3f Watts
      +                          \n\r\n\r", adc_calculations.output_power);
 12044  01516C  0E67               	movlw	low STR_271
 12045  01516E  0102               	movlb	2	; () banked
 12046  015170  6FA9               	movwf	printf@f& (0+255),b
 12047  015172  0EEE               	movlw	high STR_271
 12048  015174  6FAA               	movwf	(printf@f+1)& (0+255),b
 12049  015176  C2C2  F2AB         	movff	_adc_calculations+4,?_printf+2
 12050  01517A  C2C3  F2AC         	movff	_adc_calculations+5,?_printf+3
 12051  01517E  C2C4  F2AD         	movff	_adc_calculations+6,?_printf+4
 12052  015182  C2C5  F2AE         	movff	_adc_calculations+7,?_printf+5
 12053  015186  EC04  F0DF         	call	_printf	;wreg free
 12054                           
 12055                           ;ring_buffer_LUT.c: 369: terminalTextAttributes(CYAN, BLACK, BOLD);
 12056  01518A  0E00               	movlw	0
 12057  01518C  0102               	movlb	2	; () banked
 12058  01518E  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 12059  015190  0E01               	movlw	1
 12060  015192  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12061  015194  0E06               	movlw	6
 12062  015196  ECE9  F0AF         	call	_terminalTextAttributes
 12063                           
 12064                           ;ring_buffer_LUT.c: 370: printf("    System Efficiency calculated as %.3f%%\n\r\n\r", ad
      +                          c_calculations.efficiency);
 12065  01519A  0E70               	movlw	low STR_272
 12066  01519C  0102               	movlb	2	; () banked
 12067  01519E  6FA9               	movwf	printf@f& (0+255),b
 12068  0151A0  0EF2               	movlw	high STR_272
 12069  0151A2  6FAA               	movwf	(printf@f+1)& (0+255),b
 12070  0151A4  C2C6  F2AB         	movff	_adc_calculations+8,?_printf+2
 12071  0151A8  C2C7  F2AC         	movff	_adc_calculations+9,?_printf+3
 12072  0151AC  C2C8  F2AD         	movff	_adc_calculations+10,?_printf+4
 12073  0151B0  C2C9  F2AE         	movff	_adc_calculations+11,?_printf+5
 12074  0151B4  EC04  F0DF         	call	_printf	;wreg free
 12075                           
 12076                           ;ring_buffer_LUT.c: 372: printf("    Energy consumed by the load while charging: %sJoule
      +                          s\n\r\n\r", floatToEngineeringFormat(adc_calculations.output_energy));
 12077  0151B8  0EB1               	movlw	low STR_273
 12078  0151BA  0102               	movlb	2	; () banked
 12079  0151BC  6FA9               	movwf	printf@f& (0+255),b
 12080  0151BE  0EED               	movlw	high STR_273
 12081  0151C0  6FAA               	movwf	(printf@f+1)& (0+255),b
 12082  0151C2  C2CE  F29F         	movff	_adc_calculations+16,floatToEngineeringFormat@input_value
 12083  0151C6  C2CF  F2A0         	movff	_adc_calculations+17,floatToEngineeringFormat@input_value+1
 12084  0151CA  C2D0  F2A1         	movff	_adc_calculations+18,floatToEngineeringFormat@input_value+2
 12085  0151CE  C2D1  F2A2         	movff	_adc_calculations+19,floatToEngineeringFormat@input_value+3
 12086  0151D2  EC9C  F0B1         	call	_floatToEngineeringFormat	;wreg free
 12087  0151D6  C29F  F2AB         	movff	?_floatToEngineeringFormat,?_printf+2
 12088  0151DA  C2A0  F2AC         	movff	?_floatToEngineeringFormat+1,?_printf+3
 12089  0151DE  EC04  F0DF         	call	_printf	;wreg free
 12090                           
 12091                           ;ring_buffer_LUT.c: 373: printf("    Charge consumed by the load while charging: %sCoulo
      +                          mbs\n\r\n\r", floatToEngineeringFormat(adc_calculations.output_charge));
 12092  0151E2  0E79               	movlw	low STR_274
 12093  0151E4  0102               	movlb	2	; () banked
 12094  0151E6  6FA9               	movwf	printf@f& (0+255),b
 12095  0151E8  0EEC               	movlw	high STR_274
 12096  0151EA  6FAA               	movwf	(printf@f+1)& (0+255),b
 12097  0151EC  C2CA  F29F         	movff	_adc_calculations+12,floatToEngineeringFormat@input_value
 12098  0151F0  C2CB  F2A0         	movff	_adc_calculations+13,floatToEngineeringFormat@input_value+1
 12099  0151F4  C2CC  F2A1         	movff	_adc_calculations+14,floatToEngineeringFormat@input_value+2
 12100  0151F8  C2CD  F2A2         	movff	_adc_calculations+15,floatToEngineeringFormat@input_value+3
 12101  0151FC  EC9C  F0B1         	call	_floatToEngineeringFormat	;wreg free
 12102  015200  C29F  F2AB         	movff	?_floatToEngineeringFormat,?_printf+2
 12103  015204  C2A0  F2AC         	movff	?_floatToEngineeringFormat+1,?_printf+3
 12104  015208  EC04  F0DF         	call	_printf	;wreg free
 12105                           
 12106                           ;ring_buffer_LUT.c: 375: printf("    System Switching Frequencies:\n\r");
 12107  01520C  0EB8               	movlw	low STR_275
 12108  01520E  0102               	movlb	2	; () banked
 12109  015210  6FA9               	movwf	printf@f& (0+255),b
 12110  015212  0EF5               	movlw	high STR_275
 12111  015214  6FAA               	movwf	(printf@f+1)& (0+255),b
 12112  015216  EC04  F0DF         	call	_printf	;wreg free
 12113                           
 12114                           ;ring_buffer_LUT.c: 376: terminalTextAttributes(CYAN, BLACK, NORMAL);
 12115  01521A  0E00               	movlw	0
 12116  01521C  0102               	movlb	2	; () banked
 12117  01521E  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 12118  015220  0E00               	movlw	0
 12119  015222  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12120  015224  0E06               	movlw	6
 12121  015226  ECE9  F0AF         	call	_terminalTextAttributes
 12122                           
 12123                           ;ring_buffer_LUT.c: 377: if (nxq_charge_state == QI_Idle || nxq_charge_state == QI_Error
      +                          ) printf("        POS5 Converter is in Burst Mode\n\r");
 12124  01522A  0101               	movlb	1	; () banked
 12125  01522C  5195               	movf	_nxq_charge_state& (0+255),w,b
 12126  01522E  B4D8               	btfsc	status,2,c
 12127  015230  D004               	goto	u25380
 12128                           
 12129                           ; BSR set to: 1
 12130  015232  0E03               	movlw	3
 12131  015234  1995               	xorwf	_nxq_charge_state& (0+255),w,b
 12132  015236  A4D8               	btfss	status,2,c
 12133  015238  D008               	goto	l19952
 12134  01523A                     u25380:
 12135                           
 12136                           ; BSR set to: 1
 12137  01523A  0E0B               	movlw	low STR_276
 12138  01523C  0102               	movlb	2	; () banked
 12139  01523E  6FA9               	movwf	printf@f& (0+255),b
 12140  015240  0EF4               	movlw	high STR_276
 12141  015242  6FAA               	movwf	(printf@f+1)& (0+255),b
 12142  015244  EC04  F0DF         	call	_printf	;wreg free
 12143  015248  D00F               	goto	l19954
 12144  01524A                     l19952:
 12145                           
 12146                           ; BSR set to: 1
 12147                           ;ring_buffer_LUT.c: 378: else printf("        Current +5V Switching Frequency measured a
      +                          s %+.1f MHz\n\r", 2.5);
 12148  01524A  0E39               	movlw	low STR_277
 12149  01524C  0102               	movlb	2	; () banked
 12150  01524E  6FA9               	movwf	printf@f& (0+255),b
 12151  015250  0EEC               	movlw	high STR_277
 12152  015252  6FAA               	movwf	(printf@f+1)& (0+255),b
 12153  015254  0E00               	movlw	0
 12154  015256  6FAB               	movwf	(?_printf+2)& (0+255),b
 12155  015258  0E00               	movlw	0
 12156  01525A  6FAC               	movwf	(?_printf+3)& (0+255),b
 12157  01525C  0E20               	movlw	32
 12158  01525E  6FAD               	movwf	(?_printf+4)& (0+255),b
 12159  015260  0E40               	movlw	64
 12160  015262  6FAE               	movwf	(?_printf+5)& (0+255),b
 12161  015264  EC04  F0DF         	call	_printf	;wreg free
 12162  015268                     l19954:
 12163                           
 12164                           ;ring_buffer_LUT.c: 379: if (nxq_charge_state == QI_Idle || nxq_charge_state == QI_Error
      +                          ) printf("        QI Converter is in Burst Mode\n\r");
 12165  015268  0101               	movlb	1	; () banked
 12166  01526A  5195               	movf	_nxq_charge_state& (0+255),w,b
 12167  01526C  B4D8               	btfsc	status,2,c
 12168  01526E  D004               	goto	u25400
 12169                           
 12170                           ; BSR set to: 1
 12171  015270  0E03               	movlw	3
 12172  015272  1995               	xorwf	_nxq_charge_state& (0+255),w,b
 12173  015274  A4D8               	btfss	status,2,c
 12174  015276  D008               	goto	l19960
 12175  015278                     u25400:
 12176                           
 12177                           ; BSR set to: 1
 12178  015278  0E87               	movlw	low STR_278
 12179  01527A  0102               	movlb	2	; () banked
 12180  01527C  6FA9               	movwf	printf@f& (0+255),b
 12181  01527E  0EF4               	movlw	high STR_278
 12182  015280  6FAA               	movwf	(printf@f+1)& (0+255),b
 12183  015282  EC04  F0DF         	call	_printf	;wreg free
 12184  015286  D021               	goto	l2235
 12185  015288                     l19960:
 12186                           
 12187                           ; BSR set to: 1
 12188                           ;ring_buffer_LUT.c: 380: else printf("        Current QI Switching Frequency measured as
      +                           %+.3f kHz\n\r\n\r", freq_meas_results.QI_Freq_Meas / 1000.0);
 12189  015288  0EB8               	movlw	low STR_279
 12190  01528A  0102               	movlb	2	; () banked
 12191  01528C  6FA9               	movwf	printf@f& (0+255),b
 12192  01528E  0EEB               	movlw	high STR_279
 12193  015290  6FAA               	movwf	(printf@f+1)& (0+255),b
 12194  015292  C168  F200         	movff	_freq_meas_results,___fldiv@b
 12195  015296  C169  F201         	movff	_freq_meas_results+1,___fldiv@b+1
 12196  01529A  C16A  F202         	movff	_freq_meas_results+2,___fldiv@b+2
 12197  01529E  C16B  F203         	movff	_freq_meas_results+3,___fldiv@b+3
 12198  0152A2  0E00               	movlw	0
 12199  0152A4  6F04               	movwf	___fldiv@a& (0+255),b
 12200  0152A6  0E00               	movlw	0
 12201  0152A8  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 12202  0152AA  0E7A               	movlw	122
 12203  0152AC  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 12204  0152AE  0E44               	movlw	68
 12205  0152B0  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 12206  0152B2  ECFB  F0C0         	call	___fldiv	;wreg free
 12207  0152B6  C200  F2AB         	movff	?___fldiv,?_printf+2
 12208  0152BA  C201  F2AC         	movff	?___fldiv+1,?_printf+3
 12209  0152BE  C202  F2AD         	movff	?___fldiv+2,?_printf+4
 12210  0152C2  C203  F2AE         	movff	?___fldiv+3,?_printf+5
 12211  0152C6  EC04  F0DF         	call	_printf	;wreg free
 12212  0152CA                     l2235:
 12213                           
 12214                           ;ring_buffer_LUT.c: 382: terminalTextAttributes(CYAN, BLACK, BOLD);
 12215  0152CA  0E00               	movlw	0
 12216  0152CC  0102               	movlb	2	; () banked
 12217  0152CE  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 12218  0152D0  0E01               	movlw	1
 12219  0152D2  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12220  0152D4  0E06               	movlw	6
 12221  0152D6  ECE9  F0AF         	call	_terminalTextAttributes
 12222                           
 12223                           ;ring_buffer_LUT.c: 383: printf("    System Temperatures:\n\r");
 12224  0152DA  0EB5               	movlw	low STR_280
 12225  0152DC  0102               	movlb	2	; () banked
 12226  0152DE  6FA9               	movwf	printf@f& (0+255),b
 12227  0152E0  0EF8               	movlw	high STR_280
 12228  0152E2  6FAA               	movwf	(printf@f+1)& (0+255),b
 12229  0152E4  EC04  F0DF         	call	_printf	;wreg free
 12230                           
 12231                           ;ring_buffer_LUT.c: 384: terminalTextAttributes(CYAN, BLACK, NORMAL);
 12232  0152E8  0E00               	movlw	0
 12233  0152EA  0102               	movlb	2	; () banked
 12234  0152EC  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 12235  0152EE  0E00               	movlw	0
 12236  0152F0  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12237  0152F2  0E06               	movlw	6
 12238  0152F4  ECE9  F0AF         	call	_terminalTextAttributes
 12239                           
 12240                           ;ring_buffer_LUT.c: 385: printf("        QI Converter Temperature measured as %+.3f C\n\
      +                          r", LM73_temp_results.QI_temp_result);
 12241  0152F8  0E35               	movlw	low STR_281
 12242  0152FA  0102               	movlb	2	; () banked
 12243  0152FC  6FA9               	movwf	printf@f& (0+255),b
 12244  0152FE  0EF0               	movlw	high STR_281
 12245  015300  6FAA               	movwf	(printf@f+1)& (0+255),b
 12246  015302  C2DB  F2AB         	movff	_LM73_temp_results,?_printf+2
 12247  015306  C2DC  F2AC         	movff	_LM73_temp_results+1,?_printf+3
 12248  01530A  C2DD  F2AD         	movff	_LM73_temp_results+2,?_printf+4
 12249  01530E  C2DE  F2AE         	movff	_LM73_temp_results+3,?_printf+5
 12250  015312  EC04  F0DF         	call	_printf	;wreg free
 12251                           
 12252                           ;ring_buffer_LUT.c: 386: printf("        +5V Converter Temperature measured as %+.3f C\n
      +                          \r", LM73_temp_results.POS5_temp_result);
 12253  015316  0EC5               	movlw	low STR_282
 12254  015318  0102               	movlb	2	; () banked
 12255  01531A  6FA9               	movwf	printf@f& (0+255),b
 12256  01531C  0EEF               	movlw	high STR_282
 12257  01531E  6FAA               	movwf	(printf@f+1)& (0+255),b
 12258  015320  C2DF  F2AB         	movff	_LM73_temp_results+4,?_printf+2
 12259  015324  C2E0  F2AC         	movff	_LM73_temp_results+5,?_printf+3
 12260  015328  C2E1  F2AD         	movff	_LM73_temp_results+6,?_printf+4
 12261  01532C  C2E2  F2AE         	movff	_LM73_temp_results+7,?_printf+5
 12262  015330  EC04  F0DF         	call	_printf	;wreg free
 12263                           
 12264                           ;ring_buffer_LUT.c: 387: printf("        Ambient Temperature measured as %+.3f C\n\r\n\r
      +                          ", LM73_temp_results.Ambient_temp_result);
 12265  015334  0ED8               	movlw	low STR_283
 12266  015336  0102               	movlb	2	; () banked
 12267  015338  6FA9               	movwf	printf@f& (0+255),b
 12268  01533A  0EF0               	movlw	high STR_283
 12269  01533C  6FAA               	movwf	(printf@f+1)& (0+255),b
 12270  01533E  C2E3  F2AB         	movff	_LM73_temp_results+8,?_printf+2
 12271  015342  C2E4  F2AC         	movff	_LM73_temp_results+9,?_printf+3
 12272  015346  C2E5  F2AD         	movff	_LM73_temp_results+10,?_printf+4
 12273  01534A  C2E6  F2AE         	movff	_LM73_temp_results+11,?_printf+5
 12274  01534E  EC04  F0DF         	call	_printf	;wreg free
 12275                           
 12276                           ;ring_buffer_LUT.c: 389: terminalTextAttributes(CYAN, BLACK, BOLD);
 12277  015352  0E00               	movlw	0
 12278  015354  0102               	movlb	2	; () banked
 12279  015356  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 12280  015358  0E01               	movlw	1
 12281  01535A  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12282  01535C  0E06               	movlw	6
 12283  01535E  ECE9  F0AF         	call	_terminalTextAttributes
 12284                           
 12285                           ;ring_buffer_LUT.c: 390: printf("    Microcontroller Parameters:\n\r");
 12286  015362  0EF3               	movlw	low STR_284
 12287  015364  0102               	movlb	2	; () banked
 12288  015366  6FA9               	movwf	printf@f& (0+255),b
 12289  015368  0EF6               	movlw	high STR_284
 12290  01536A  6FAA               	movwf	(printf@f+1)& (0+255),b
 12291  01536C  EC04  F0DF         	call	_printf	;wreg free
 12292                           
 12293                           ;ring_buffer_LUT.c: 391: terminalTextAttributes(CYAN, BLACK, NORMAL);
 12294  015370  0E00               	movlw	0
 12295  015372  0102               	movlb	2	; () banked
 12296  015374  6FB8               	movwf	terminalTextAttributes@background_color& (0+255),b
 12297  015376  0E00               	movlw	0
 12298  015378  6FB9               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12299  01537A  0E06               	movlw	6
 12300  01537C  ECE9  F0AF         	call	_terminalTextAttributes
 12301                           
 12302                           ;ring_buffer_LUT.c: 392: printf("        Microcontroller Die Temperature measured as %+.
      +                          3f C\n\r", adc_results.die_temp_adc_result);
 12303  015380  0EF7               	movlw	low STR_285
 12304  015382  0102               	movlb	2	; () banked
 12305  015384  6FA9               	movwf	printf@f& (0+255),b
 12306  015386  0EEC               	movlw	high STR_285
 12307  015388  6FAA               	movwf	(printf@f+1)& (0+255),b
 12308  01538A  C0F5  F2AB         	movff	_adc_results+24,?_printf+2
 12309  01538E  C0F6  F2AC         	movff	_adc_results+25,?_printf+3
 12310  015392  C0F7  F2AD         	movff	_adc_results+26,?_printf+4
 12311  015396  C0F8  F2AE         	movff	_adc_results+27,?_printf+5
 12312  01539A  EC04  F0DF         	call	_printf	;wreg free
 12313                           
 12314                           ;ring_buffer_LUT.c: 393: printf("        Fixed Voltage Reference Buffer 1 measured as %+
      +                          .3f Volts, calibrated for +4.096 Volts\n\r", adc_results.fvr_adc_result);
 12315  01539E  0E00               	movlw	low STR_286
 12316  0153A0  0102               	movlb	2	; () banked
 12317  0153A2  6FA9               	movwf	printf@f& (0+255),b
 12318  0153A4  0EEB               	movlw	high STR_286
 12319  0153A6  6FAA               	movwf	(printf@f+1)& (0+255),b
 12320  0153A8  C0E1  F2AB         	movff	_adc_results+4,?_printf+2
 12321  0153AC  C0E2  F2AC         	movff	_adc_results+5,?_printf+3
 12322  0153B0  C0E3  F2AD         	movff	_adc_results+6,?_printf+4
 12323  0153B4  C0E4  F2AE         	movff	_adc_results+7,?_printf+5
 12324  0153B8  EC04  F0DF         	call	_printf	;wreg free
 12325                           
 12326                           ;ring_buffer_LUT.c: 394: printf("        AVSS measured as %+.3f Volts\n\r\n\r", adc_resu
      +                          lts.avss_adc_result);
 12327  0153BC  0E35               	movlw	low STR_287
 12328  0153BE  0102               	movlb	2	; () banked
 12329  0153C0  6FA9               	movwf	printf@f& (0+255),b
 12330  0153C2  0EF4               	movlw	high STR_287
 12331  0153C4  6FAA               	movwf	(printf@f+1)& (0+255),b
 12332  0153C6  C0DD  F2AB         	movff	_adc_results,?_printf+2
 12333  0153CA  C0DE  F2AC         	movff	_adc_results+1,?_printf+3
 12334  0153CE  C0DF  F2AD         	movff	_adc_results+2,?_printf+4
 12335  0153D2  C0E0  F2AE         	movff	_adc_results+3,?_printf+5
 12336  0153D6  EC04  F0DF         	call	_printf	;wreg free
 12337                           
 12338                           ;ring_buffer_LUT.c: 396: terminalTextAttributesReset();
 12339  0153DA  EC5F  F0E3         	call	_terminalTextAttributesReset	;wreg free
 12340  0153DE  0012               	return		;funcret
 12341  0153E0                     __end_of_printCurrentMeasurements:
 12342                           	opt callstack 0
 12343                           
 12344 ;; *************** function _terminalTextAttributesReset *****************
 12345 ;; Defined at:
 12346 ;;		line 164 in file "terminal_control.c"
 12347 ;; Parameters:    Size  Location     Type
 12348 ;;		None
 12349 ;; Auto vars:     Size  Location     Type
 12350 ;;		None
 12351 ;; Return value:  Size  Location     Type
 12352 ;;                  1    wreg      void 
 12353 ;; Registers used:
 12354 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12355 ;; Tracked objects:
 12356 ;;		On entry : 0/0
 12357 ;;		On exit  : 0/0
 12358 ;;		Unchanged: 0/0
 12359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12364 ;;Total ram usage:        0 bytes
 12365 ;; Hardware stack levels used:    1
 12366 ;; Hardware stack levels required when called:   15
 12367 ;; This function calls:
 12368 ;;		_printf
 12369 ;; This function is called by:
 12370 ;;		_main
 12371 ;;		_ringBufferLUT
 12372 ;;		_printErrorHandlerStatus
 12373 ;;		_printCurrentMeasurements
 12374 ;;		_terminalPrintTestMessage
 12375 ;; This function uses a non-reentrant model
 12376 ;;
 12377                           
 12378                           	psect	text6
 12379  01C6BE                     __ptext6:
 12380                           	opt callstack 0
 12381  01C6BE                     _terminalTextAttributesReset:
 12382                           	opt callstack 13
 12383                           
 12384                           ;terminal_control.c: 167: printf("\033[0;37;40m");
 12385                           
 12386                           ;incstack = 0
 12387  01C6BE  0EDB               	movlw	low STR_329
 12388  01C6C0  0102               	movlb	2	; () banked
 12389  01C6C2  6FA9               	movwf	printf@f& (0+255),b
 12390  01C6C4  0EFD               	movlw	high STR_329
 12391  01C6C6  6FAA               	movwf	(printf@f+1)& (0+255),b
 12392  01C6C8  EC04  F0DF         	call	_printf	;wreg free
 12393  01C6CC  0012               	return		;funcret
 12394  01C6CE                     __end_of_terminalTextAttributesReset:
 12395                           	opt callstack 0
 12396                           
 12397 ;; *************** function _terminalTextAttributes *****************
 12398 ;; Defined at:
 12399 ;;		line 47 in file "terminal_control.c"
 12400 ;; Parameters:    Size  Location     Type
 12401 ;;  foreground_c    1    wreg     enum E9584
 12402 ;;  background_c    1  184[BANK2 ] enum E9584
 12403 ;;  input_attrib    1  185[BANK2 ] enum E9576
 12404 ;; Auto vars:     Size  Location     Type
 12405 ;;  foreground_c    1   26[BANK3 ] enum E9584
 12406 ;;  print_string   16   27[BANK3 ] unsigned char [16]
 12407 ;;  i               1   43[BANK3 ] unsigned char 
 12408 ;; Return value:  Size  Location     Type
 12409 ;;                  1    wreg      void 
 12410 ;; Registers used:
 12411 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12412 ;; Tracked objects:
 12413 ;;		On entry : 0/0
 12414 ;;		On exit  : 0/0
 12415 ;;		Unchanged: 0/0
 12416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12417 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12418 ;;      Locals:         0       0       0       0      18       0       0       0       0       0       0       0       
      +0       0       0       0
 12419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12420 ;;      Totals:         0       0       0       2      18       0       0       0       0       0       0       0       
      +0       0       0       0
 12421 ;;Total ram usage:       20 bytes
 12422 ;; Hardware stack levels used:    1
 12423 ;; Hardware stack levels required when called:   15
 12424 ;; This function calls:
 12425 ;;		_printf
 12426 ;;		_strcat
 12427 ;;		_strncpy
 12428 ;; This function is called by:
 12429 ;;		_main
 12430 ;;		_ringBufferLUT
 12431 ;;		_printErrorHandlerStatus
 12432 ;;		_printCurrentMeasurements
 12433 ;;		_terminalPrintTestMessage
 12434 ;; This function uses a non-reentrant model
 12435 ;;
 12436                           
 12437                           	psect	text7
 12438  015FD2                     __ptext7:
 12439                           	opt callstack 0
 12440  015FD2                     _terminalTextAttributes:
 12441                           	opt callstack 13
 12442                           
 12443                           ;incstack = 0
 12444                           ;terminalTextAttributes@foreground_color stored from wreg
 12445  015FD2  0103               	movlb	3	; () banked
 12446  015FD4  6FEB               	movwf	terminalTextAttributes@foreground_color& (0+255),b
 12447                           
 12448                           ;terminal_control.c: 51: char print_string[16];;terminal_control.c: 54: uint8_t i;;termi
      +                          nal_control.c: 55: for (i = 0; i < sizeof(print_string); i++) {
 12449  015FD6  0E00               	movlw	0
 12450  015FD8  0103               	movlb	3	; () banked
 12451  015FDA  6FFC               	movwf	terminalTextAttributes@i& (0+255),b
 12452  015FDC                     l19238:
 12453                           
 12454                           ; BSR set to: 3
 12455                           ;terminal_control.c: 57: print_string[i] = '\0';
 12456  015FDC  0EEC               	movlw	low terminalTextAttributes@print_string
 12457  015FDE  25FC               	addwf	terminalTextAttributes@i& (0+255),w,b
 12458  015FE0  6ED9               	movwf	fsr2l,c
 12459  015FE2  6ADA               	clrf	fsr2h,c
 12460  015FE4  0E03               	movlw	high terminalTextAttributes@print_string
 12461  015FE6  22DA               	addwfc	fsr2h,f,c
 12462  015FE8  0E00               	movlw	0
 12463  015FEA  6EDF               	movwf	indf2,c
 12464                           
 12465                           ; BSR set to: 3
 12466  015FEC  2BFC               	incf	terminalTextAttributes@i& (0+255),f,b
 12467                           
 12468                           ; BSR set to: 3
 12469  015FEE  0E0F               	movlw	15
 12470  015FF0  65FC               	cpfsgt	terminalTextAttributes@i& (0+255),b
 12471  015FF2  D7F4               	goto	l19238
 12472                           
 12473                           ; BSR set to: 3
 12474                           ;terminal_control.c: 59: };terminal_control.c: 61: strncpy(print_string, "\033[", sizeof
      +                          (print_string));
 12475  015FF4  0EEC               	movlw	low terminalTextAttributes@print_string
 12476  015FF6  0102               	movlb	2	; () banked
 12477  015FF8  6F00               	movwf	strncpy@to& (0+255),b
 12478  015FFA  0E03               	movlw	high terminalTextAttributes@print_string
 12479  015FFC  6F01               	movwf	(strncpy@to+1)& (0+255),b
 12480  015FFE  0EF8               	movlw	low STR_300
 12481  016000  6F02               	movwf	strncpy@from& (0+255),b
 12482  016002  0EFF               	movlw	high STR_300
 12483  016004  6F03               	movwf	(strncpy@from+1)& (0+255),b
 12484  016006  0E00               	movlw	0
 12485  016008  6F05               	movwf	(strncpy@size+1)& (0+255),b
 12486  01600A  0E10               	movlw	16
 12487  01600C  6F04               	movwf	strncpy@size& (0+255),b
 12488  01600E  ECA0  F0D9         	call	_strncpy	;wreg free
 12489                           
 12490                           ;terminal_control.c: 63: switch (input_attribute) {
 12491  016012  D04D               	goto	l19262
 12492  016014                     l19246:
 12493                           
 12494                           ; BSR set to: 2
 12495                           ;terminal_control.c: 66: strcat(print_string,"0");
 12496  016014  0EEC               	movlw	low terminalTextAttributes@print_string
 12497  016016  6F00               	movwf	strcat@to& (0+255),b
 12498  016018  0E03               	movlw	high terminalTextAttributes@print_string
 12499  01601A  6F01               	movwf	(strcat@to+1)& (0+255),b
 12500  01601C  0ECC               	movlw	low (STR_309+1)
 12501  01601E  6F02               	movwf	strcat@from& (0+255),b
 12502  016020  0EFF               	movlw	high (STR_309+1)
 12503  016022  6F03               	movwf	(strcat@from+1)& (0+255),b
 12504  016024  EC69  F0DA         	call	_strcat	;wreg free
 12505                           
 12506                           ;terminal_control.c: 67: break;
 12507  016028  D057               	goto	l19264
 12508  01602A                     l19248:
 12509                           
 12510                           ; BSR set to: 2
 12511                           ;terminal_control.c: 69: strcat(print_string,"1");
 12512  01602A  0EEC               	movlw	low terminalTextAttributes@print_string
 12513  01602C  6F00               	movwf	strcat@to& (0+255),b
 12514  01602E  0E03               	movlw	high terminalTextAttributes@print_string
 12515  016030  6F01               	movwf	(strcat@to+1)& (0+255),b
 12516  016032  0ECF               	movlw	low (STR_310+1)
 12517  016034  6F02               	movwf	strcat@from& (0+255),b
 12518  016036  0EFF               	movlw	high (STR_310+1)
 12519  016038  6F03               	movwf	(strcat@from+1)& (0+255),b
 12520  01603A  EC69  F0DA         	call	_strcat	;wreg free
 12521                           
 12522                           ;terminal_control.c: 70: break;
 12523  01603E  D04C               	goto	l19264
 12524  016040                     l19250:
 12525                           
 12526                           ; BSR set to: 2
 12527                           ;terminal_control.c: 72: strcat(print_string,"4");
 12528  016040  0EEC               	movlw	low terminalTextAttributes@print_string
 12529  016042  6F00               	movwf	strcat@to& (0+255),b
 12530  016044  0E03               	movlw	high terminalTextAttributes@print_string
 12531  016046  6F01               	movwf	(strcat@to+1)& (0+255),b
 12532  016048  0EE1               	movlw	low (STR_313+1)
 12533  01604A  6F02               	movwf	strcat@from& (0+255),b
 12534  01604C  0EFF               	movlw	high (STR_313+1)
 12535  01604E  6F03               	movwf	(strcat@from+1)& (0+255),b
 12536  016050  EC69  F0DA         	call	_strcat	;wreg free
 12537                           
 12538                           ;terminal_control.c: 73: break;
 12539  016054  D041               	goto	l19264
 12540  016056                     l19252:
 12541                           
 12542                           ; BSR set to: 2
 12543                           ;terminal_control.c: 75: strcat(print_string,"5");
 12544  016056  0EEC               	movlw	low terminalTextAttributes@print_string
 12545  016058  6F00               	movwf	strcat@to& (0+255),b
 12546  01605A  0E03               	movlw	high terminalTextAttributes@print_string
 12547  01605C  6F01               	movwf	(strcat@to+1)& (0+255),b
 12548  01605E  0EE7               	movlw	low (STR_314+1)
 12549  016060  6F02               	movwf	strcat@from& (0+255),b
 12550  016062  0EFF               	movlw	high (STR_314+1)
 12551  016064  6F03               	movwf	(strcat@from+1)& (0+255),b
 12552  016066  EC69  F0DA         	call	_strcat	;wreg free
 12553                           
 12554                           ;terminal_control.c: 76: break;
 12555  01606A  D036               	goto	l19264
 12556  01606C                     l19254:
 12557                           
 12558                           ; BSR set to: 2
 12559                           ;terminal_control.c: 78: strcat(print_string,"7");
 12560  01606C  0EEC               	movlw	low terminalTextAttributes@print_string
 12561  01606E  6F00               	movwf	strcat@to& (0+255),b
 12562  016070  0E03               	movlw	high terminalTextAttributes@print_string
 12563  016072  6F01               	movwf	(strcat@to+1)& (0+255),b
 12564  016074  0EF3               	movlw	low (STR_316+1)
 12565  016076  6F02               	movwf	strcat@from& (0+255),b
 12566  016078  0EFF               	movlw	high (STR_316+1)
 12567  01607A  6F03               	movwf	(strcat@from+1)& (0+255),b
 12568  01607C  EC69  F0DA         	call	_strcat	;wreg free
 12569                           
 12570                           ;terminal_control.c: 79: break;
 12571  016080  D02B               	goto	l19264
 12572  016082                     l19256:
 12573                           
 12574                           ; BSR set to: 2
 12575                           ;terminal_control.c: 81: strcat(print_string,"8");
 12576  016082  0EEC               	movlw	low terminalTextAttributes@print_string
 12577  016084  6F00               	movwf	strcat@to& (0+255),b
 12578  016086  0E03               	movlw	high terminalTextAttributes@print_string
 12579  016088  6F01               	movwf	(strcat@to+1)& (0+255),b
 12580  01608A  0EFB               	movlw	low STR_306
 12581  01608C  6F02               	movwf	strcat@from& (0+255),b
 12582  01608E  0EFF               	movlw	high STR_306
 12583  016090  6F03               	movwf	(strcat@from+1)& (0+255),b
 12584  016092  EC69  F0DA         	call	_strcat	;wreg free
 12585                           
 12586                           ;terminal_control.c: 82: break;
 12587  016096  D020               	goto	l19264
 12588  016098                     l19258:
 12589                           
 12590                           ; BSR set to: 2
 12591                           ;terminal_control.c: 85: strcat(print_string,"0");
 12592  016098  0EEC               	movlw	low terminalTextAttributes@print_string
 12593  01609A  6F00               	movwf	strcat@to& (0+255),b
 12594  01609C  0E03               	movlw	high terminalTextAttributes@print_string
 12595  01609E  6F01               	movwf	(strcat@to+1)& (0+255),b
 12596  0160A0  0ECC               	movlw	low (STR_309+1)
 12597  0160A2  6F02               	movwf	strcat@from& (0+255),b
 12598  0160A4  0EFF               	movlw	high (STR_309+1)
 12599  0160A6  6F03               	movwf	(strcat@from+1)& (0+255),b
 12600  0160A8  EC69  F0DA         	call	_strcat	;wreg free
 12601                           
 12602                           ;terminal_control.c: 86: break;
 12603  0160AC  D015               	goto	l19264
 12604  0160AE                     l19262:
 12605  0160AE  0102               	movlb	2	; () banked
 12606  0160B0  51B9               	movf	terminalTextAttributes@input_attribute& (0+255),w,b
 12607                           
 12608                           ; Switch size 1, requested type "simple"
 12609                           ; Number of cases is 6, Range of values is 0 to 5
 12610                           ; switch strategies available:
 12611                           ; Name         Instructions Cycles
 12612                           ; simple_byte           19    10 (average)
 12613                           ;	Chosen strategy is simple_byte
 12614  0160B2  0A00               	xorlw	0	; case 0
 12615  0160B4  B4D8               	btfsc	status,2,c
 12616  0160B6  D7AE               	goto	l19246
 12617  0160B8  0A01               	xorlw	1	; case 1
 12618  0160BA  B4D8               	btfsc	status,2,c
 12619  0160BC  D7B6               	goto	l19248
 12620  0160BE  0A03               	xorlw	3	; case 2
 12621  0160C0  B4D8               	btfsc	status,2,c
 12622  0160C2  D7BE               	goto	l19250
 12623  0160C4  0A01               	xorlw	1	; case 3
 12624  0160C6  B4D8               	btfsc	status,2,c
 12625  0160C8  D7C6               	goto	l19252
 12626  0160CA  0A07               	xorlw	7	; case 4
 12627  0160CC  B4D8               	btfsc	status,2,c
 12628  0160CE  D7CE               	goto	l19254
 12629  0160D0  0A01               	xorlw	1	; case 5
 12630  0160D2  B4D8               	btfsc	status,2,c
 12631  0160D4  D7D6               	goto	l19256
 12632  0160D6  D7E0               	goto	l19258
 12633  0160D8                     l19264:
 12634                           
 12635                           ;terminal_control.c: 89: strcat(print_string,";");
 12636  0160D8  0EEC               	movlw	low terminalTextAttributes@print_string
 12637  0160DA  0102               	movlb	2	; () banked
 12638  0160DC  6F00               	movwf	strcat@to& (0+255),b
 12639  0160DE  0E03               	movlw	high terminalTextAttributes@print_string
 12640  0160E0  6F01               	movwf	(strcat@to+1)& (0+255),b
 12641  0160E2  0EFD               	movlw	low STR_308
 12642  0160E4  6F02               	movwf	strcat@from& (0+255),b
 12643  0160E6  0EFF               	movlw	high STR_308
 12644  0160E8  6F03               	movwf	(strcat@from+1)& (0+255),b
 12645  0160EA  EC69  F0DA         	call	_strcat	;wreg free
 12646                           
 12647                           ;terminal_control.c: 91: switch (foreground_color) {
 12648  0160EE  D06C               	goto	l19286
 12649  0160F0                     l19266:
 12650                           
 12651                           ; BSR set to: 3
 12652                           ;terminal_control.c: 94: strcat(print_string,"30");
 12653  0160F0  0EEC               	movlw	low terminalTextAttributes@print_string
 12654  0160F2  0102               	movlb	2	; () banked
 12655  0160F4  6F00               	movwf	strcat@to& (0+255),b
 12656  0160F6  0E03               	movlw	high terminalTextAttributes@print_string
 12657  0160F8  6F01               	movwf	(strcat@to+1)& (0+255),b
 12658  0160FA  0ECB               	movlw	low STR_309
 12659  0160FC  6F02               	movwf	strcat@from& (0+255),b
 12660  0160FE  0EFF               	movlw	high STR_309
 12661  016100  6F03               	movwf	(strcat@from+1)& (0+255),b
 12662  016102  EC69  F0DA         	call	_strcat	;wreg free
 12663                           
 12664                           ;terminal_control.c: 95: break;
 12665  016106  D07B               	goto	l19288
 12666  016108                     l19268:
 12667                           
 12668                           ; BSR set to: 3
 12669                           ;terminal_control.c: 97: strcat(print_string,"31");
 12670  016108  0EEC               	movlw	low terminalTextAttributes@print_string
 12671  01610A  0102               	movlb	2	; () banked
 12672  01610C  6F00               	movwf	strcat@to& (0+255),b
 12673  01610E  0E03               	movlw	high terminalTextAttributes@print_string
 12674  016110  6F01               	movwf	(strcat@to+1)& (0+255),b
 12675  016112  0ECE               	movlw	low STR_310
 12676  016114  6F02               	movwf	strcat@from& (0+255),b
 12677  016116  0EFF               	movlw	high STR_310
 12678  016118  6F03               	movwf	(strcat@from+1)& (0+255),b
 12679  01611A  EC69  F0DA         	call	_strcat	;wreg free
 12680                           
 12681                           ;terminal_control.c: 98: break;
 12682  01611E  D06F               	goto	l19288
 12683  016120                     l19270:
 12684                           
 12685                           ; BSR set to: 3
 12686                           ;terminal_control.c: 100: strcat(print_string,"32");
 12687  016120  0EEC               	movlw	low terminalTextAttributes@print_string
 12688  016122  0102               	movlb	2	; () banked
 12689  016124  6F00               	movwf	strcat@to& (0+255),b
 12690  016126  0E03               	movlw	high terminalTextAttributes@print_string
 12691  016128  6F01               	movwf	(strcat@to+1)& (0+255),b
 12692  01612A  0ED4               	movlw	low STR_311
 12693  01612C  6F02               	movwf	strcat@from& (0+255),b
 12694  01612E  0EFF               	movlw	high STR_311
 12695  016130  6F03               	movwf	(strcat@from+1)& (0+255),b
 12696  016132  EC69  F0DA         	call	_strcat	;wreg free
 12697                           
 12698                           ;terminal_control.c: 101: break;
 12699  016136  D063               	goto	l19288
 12700  016138                     l19272:
 12701                           
 12702                           ; BSR set to: 3
 12703                           ;terminal_control.c: 103: strcat(print_string,"33");
 12704  016138  0EEC               	movlw	low terminalTextAttributes@print_string
 12705  01613A  0102               	movlb	2	; () banked
 12706  01613C  6F00               	movwf	strcat@to& (0+255),b
 12707  01613E  0E03               	movlw	high terminalTextAttributes@print_string
 12708  016140  6F01               	movwf	(strcat@to+1)& (0+255),b
 12709  016142  0EDA               	movlw	low STR_312
 12710  016144  6F02               	movwf	strcat@from& (0+255),b
 12711  016146  0EFF               	movlw	high STR_312
 12712  016148  6F03               	movwf	(strcat@from+1)& (0+255),b
 12713  01614A  EC69  F0DA         	call	_strcat	;wreg free
 12714                           
 12715                           ;terminal_control.c: 104: break;
 12716  01614E  D057               	goto	l19288
 12717  016150                     l19274:
 12718                           
 12719                           ; BSR set to: 3
 12720                           ;terminal_control.c: 106: strcat(print_string,"34");
 12721  016150  0EEC               	movlw	low terminalTextAttributes@print_string
 12722  016152  0102               	movlb	2	; () banked
 12723  016154  6F00               	movwf	strcat@to& (0+255),b
 12724  016156  0E03               	movlw	high terminalTextAttributes@print_string
 12725  016158  6F01               	movwf	(strcat@to+1)& (0+255),b
 12726  01615A  0EE0               	movlw	low STR_313
 12727  01615C  6F02               	movwf	strcat@from& (0+255),b
 12728  01615E  0EFF               	movlw	high STR_313
 12729  016160  6F03               	movwf	(strcat@from+1)& (0+255),b
 12730  016162  EC69  F0DA         	call	_strcat	;wreg free
 12731                           
 12732                           ;terminal_control.c: 107: break;
 12733  016166  D04B               	goto	l19288
 12734  016168                     l19276:
 12735                           
 12736                           ; BSR set to: 3
 12737                           ;terminal_control.c: 109: strcat(print_string,"35");
 12738  016168  0EEC               	movlw	low terminalTextAttributes@print_string
 12739  01616A  0102               	movlb	2	; () banked
 12740  01616C  6F00               	movwf	strcat@to& (0+255),b
 12741  01616E  0E03               	movlw	high terminalTextAttributes@print_string
 12742  016170  6F01               	movwf	(strcat@to+1)& (0+255),b
 12743  016172  0EE6               	movlw	low STR_314
 12744  016174  6F02               	movwf	strcat@from& (0+255),b
 12745  016176  0EFF               	movlw	high STR_314
 12746  016178  6F03               	movwf	(strcat@from+1)& (0+255),b
 12747  01617A  EC69  F0DA         	call	_strcat	;wreg free
 12748                           
 12749                           ;terminal_control.c: 110: break;
 12750  01617E  D03F               	goto	l19288
 12751  016180                     l19278:
 12752                           
 12753                           ; BSR set to: 3
 12754                           ;terminal_control.c: 112: strcat(print_string,"36");
 12755  016180  0EEC               	movlw	low terminalTextAttributes@print_string
 12756  016182  0102               	movlb	2	; () banked
 12757  016184  6F00               	movwf	strcat@to& (0+255),b
 12758  016186  0E03               	movlw	high terminalTextAttributes@print_string
 12759  016188  6F01               	movwf	(strcat@to+1)& (0+255),b
 12760  01618A  0EEC               	movlw	low STR_315
 12761  01618C  6F02               	movwf	strcat@from& (0+255),b
 12762  01618E  0EFF               	movlw	high STR_315
 12763  016190  6F03               	movwf	(strcat@from+1)& (0+255),b
 12764  016192  EC69  F0DA         	call	_strcat	;wreg free
 12765                           
 12766                           ;terminal_control.c: 113: break;
 12767  016196  D033               	goto	l19288
 12768  016198                     l19280:
 12769                           
 12770                           ; BSR set to: 3
 12771                           ;terminal_control.c: 115: strcat(print_string,"37");
 12772  016198  0EEC               	movlw	low terminalTextAttributes@print_string
 12773  01619A  0102               	movlb	2	; () banked
 12774  01619C  6F00               	movwf	strcat@to& (0+255),b
 12775  01619E  0E03               	movlw	high terminalTextAttributes@print_string
 12776  0161A0  6F01               	movwf	(strcat@to+1)& (0+255),b
 12777  0161A2  0EF2               	movlw	low STR_316
 12778  0161A4  6F02               	movwf	strcat@from& (0+255),b
 12779  0161A6  0EFF               	movlw	high STR_316
 12780  0161A8  6F03               	movwf	(strcat@from+1)& (0+255),b
 12781  0161AA  EC69  F0DA         	call	_strcat	;wreg free
 12782                           
 12783                           ;terminal_control.c: 116: break;
 12784  0161AE  D027               	goto	l19288
 12785  0161B0                     l19282:
 12786                           
 12787                           ; BSR set to: 3
 12788                           ;terminal_control.c: 119: strcat(print_string,"37");
 12789  0161B0  0EEC               	movlw	low terminalTextAttributes@print_string
 12790  0161B2  0102               	movlb	2	; () banked
 12791  0161B4  6F00               	movwf	strcat@to& (0+255),b
 12792  0161B6  0E03               	movlw	high terminalTextAttributes@print_string
 12793  0161B8  6F01               	movwf	(strcat@to+1)& (0+255),b
 12794  0161BA  0EF2               	movlw	low STR_316
 12795  0161BC  6F02               	movwf	strcat@from& (0+255),b
 12796  0161BE  0EFF               	movlw	high STR_316
 12797  0161C0  6F03               	movwf	(strcat@from+1)& (0+255),b
 12798  0161C2  EC69  F0DA         	call	_strcat	;wreg free
 12799                           
 12800                           ;terminal_control.c: 120: break;
 12801  0161C6  D01B               	goto	l19288
 12802  0161C8                     l19286:
 12803  0161C8  0103               	movlb	3	; () banked
 12804  0161CA  51EB               	movf	terminalTextAttributes@foreground_color& (0+255),w,b
 12805                           
 12806                           ; Switch size 1, requested type "simple"
 12807                           ; Number of cases is 8, Range of values is 0 to 7
 12808                           ; switch strategies available:
 12809                           ; Name         Instructions Cycles
 12810                           ; simple_byte           25    13 (average)
 12811                           ;	Chosen strategy is simple_byte
 12812  0161CC  0A00               	xorlw	0	; case 0
 12813  0161CE  B4D8               	btfsc	status,2,c
 12814  0161D0  D78F               	goto	l19266
 12815  0161D2  0A01               	xorlw	1	; case 1
 12816  0161D4  B4D8               	btfsc	status,2,c
 12817  0161D6  D798               	goto	l19268
 12818  0161D8  0A03               	xorlw	3	; case 2
 12819  0161DA  B4D8               	btfsc	status,2,c
 12820  0161DC  D7A1               	goto	l19270
 12821  0161DE  0A01               	xorlw	1	; case 3
 12822  0161E0  B4D8               	btfsc	status,2,c
 12823  0161E2  D7AA               	goto	l19272
 12824  0161E4  0A07               	xorlw	7	; case 4
 12825  0161E6  B4D8               	btfsc	status,2,c
 12826  0161E8  D7B3               	goto	l19274
 12827  0161EA  0A01               	xorlw	1	; case 5
 12828  0161EC  B4D8               	btfsc	status,2,c
 12829  0161EE  D7BC               	goto	l19276
 12830  0161F0  0A03               	xorlw	3	; case 6
 12831  0161F2  B4D8               	btfsc	status,2,c
 12832  0161F4  D7C5               	goto	l19278
 12833  0161F6  0A01               	xorlw	1	; case 7
 12834  0161F8  B4D8               	btfsc	status,2,c
 12835  0161FA  D7CE               	goto	l19280
 12836  0161FC  D7D9               	goto	l19282
 12837  0161FE                     l19288:
 12838                           
 12839                           ;terminal_control.c: 123: strcat(print_string,";");
 12840  0161FE  0EEC               	movlw	low terminalTextAttributes@print_string
 12841  016200  0102               	movlb	2	; () banked
 12842  016202  6F00               	movwf	strcat@to& (0+255),b
 12843  016204  0E03               	movlw	high terminalTextAttributes@print_string
 12844  016206  6F01               	movwf	(strcat@to+1)& (0+255),b
 12845  016208  0EFD               	movlw	low STR_308
 12846  01620A  6F02               	movwf	strcat@from& (0+255),b
 12847  01620C  0EFF               	movlw	high STR_308
 12848  01620E  6F03               	movwf	(strcat@from+1)& (0+255),b
 12849  016210  EC69  F0DA         	call	_strcat	;wreg free
 12850                           
 12851                           ;terminal_control.c: 125: switch (background_color) {
 12852  016214  D063               	goto	l19310
 12853  016216                     l19290:
 12854                           
 12855                           ; BSR set to: 2
 12856                           ;terminal_control.c: 128: strcat(print_string,"40");
 12857  016216  0EEC               	movlw	low terminalTextAttributes@print_string
 12858  016218  6F00               	movwf	strcat@to& (0+255),b
 12859  01621A  0E03               	movlw	high terminalTextAttributes@print_string
 12860  01621C  6F01               	movwf	(strcat@to+1)& (0+255),b
 12861  01621E  0EB5               	movlw	low (STR_45+9)
 12862  016220  6F02               	movwf	strcat@from& (0+255),b
 12863  016222  0EFD               	movlw	high (STR_45+9)
 12864  016224  6F03               	movwf	(strcat@from+1)& (0+255),b
 12865  016226  EC69  F0DA         	call	_strcat	;wreg free
 12866                           
 12867                           ;terminal_control.c: 129: break;
 12868  01622A  D073               	goto	l19312
 12869  01622C                     l19292:
 12870                           
 12871                           ; BSR set to: 2
 12872                           ;terminal_control.c: 131: strcat(print_string,"41");
 12873  01622C  0EEC               	movlw	low terminalTextAttributes@print_string
 12874  01622E  6F00               	movwf	strcat@to& (0+255),b
 12875  016230  0E03               	movlw	high terminalTextAttributes@print_string
 12876  016232  6F01               	movwf	(strcat@to+1)& (0+255),b
 12877  016234  0ED1               	movlw	low STR_320
 12878  016236  6F02               	movwf	strcat@from& (0+255),b
 12879  016238  0EFF               	movlw	high STR_320
 12880  01623A  6F03               	movwf	(strcat@from+1)& (0+255),b
 12881  01623C  EC69  F0DA         	call	_strcat	;wreg free
 12882                           
 12883                           ;terminal_control.c: 132: break;
 12884  016240  D068               	goto	l19312
 12885  016242                     l19294:
 12886                           
 12887                           ; BSR set to: 2
 12888                           ;terminal_control.c: 134: strcat(print_string,"42");
 12889  016242  0EEC               	movlw	low terminalTextAttributes@print_string
 12890  016244  6F00               	movwf	strcat@to& (0+255),b
 12891  016246  0E03               	movlw	high terminalTextAttributes@print_string
 12892  016248  6F01               	movwf	(strcat@to+1)& (0+255),b
 12893  01624A  0ED7               	movlw	low STR_321
 12894  01624C  6F02               	movwf	strcat@from& (0+255),b
 12895  01624E  0EFF               	movlw	high STR_321
 12896  016250  6F03               	movwf	(strcat@from+1)& (0+255),b
 12897  016252  EC69  F0DA         	call	_strcat	;wreg free
 12898                           
 12899                           ;terminal_control.c: 135: break;
 12900  016256  D05D               	goto	l19312
 12901  016258                     l19296:
 12902                           
 12903                           ; BSR set to: 2
 12904                           ;terminal_control.c: 137: strcat(print_string,"43");
 12905  016258  0EEC               	movlw	low terminalTextAttributes@print_string
 12906  01625A  6F00               	movwf	strcat@to& (0+255),b
 12907  01625C  0E03               	movlw	high terminalTextAttributes@print_string
 12908  01625E  6F01               	movwf	(strcat@to+1)& (0+255),b
 12909  016260  0EDD               	movlw	low STR_322
 12910  016262  6F02               	movwf	strcat@from& (0+255),b
 12911  016264  0EFF               	movlw	high STR_322
 12912  016266  6F03               	movwf	(strcat@from+1)& (0+255),b
 12913  016268  EC69  F0DA         	call	_strcat	;wreg free
 12914                           
 12915                           ;terminal_control.c: 138: break;
 12916  01626C  D052               	goto	l19312
 12917  01626E                     l19298:
 12918                           
 12919                           ; BSR set to: 2
 12920                           ;terminal_control.c: 140: strcat(print_string,"44");
 12921  01626E  0EEC               	movlw	low terminalTextAttributes@print_string
 12922  016270  6F00               	movwf	strcat@to& (0+255),b
 12923  016272  0E03               	movlw	high terminalTextAttributes@print_string
 12924  016274  6F01               	movwf	(strcat@to+1)& (0+255),b
 12925  016276  0EE3               	movlw	low STR_323
 12926  016278  6F02               	movwf	strcat@from& (0+255),b
 12927  01627A  0EFF               	movlw	high STR_323
 12928  01627C  6F03               	movwf	(strcat@from+1)& (0+255),b
 12929  01627E  EC69  F0DA         	call	_strcat	;wreg free
 12930                           
 12931                           ;terminal_control.c: 141: break;
 12932  016282  D047               	goto	l19312
 12933  016284                     l19300:
 12934                           
 12935                           ; BSR set to: 2
 12936                           ;terminal_control.c: 143: strcat(print_string,"45");
 12937  016284  0EEC               	movlw	low terminalTextAttributes@print_string
 12938  016286  6F00               	movwf	strcat@to& (0+255),b
 12939  016288  0E03               	movlw	high terminalTextAttributes@print_string
 12940  01628A  6F01               	movwf	(strcat@to+1)& (0+255),b
 12941  01628C  0EE9               	movlw	low STR_324
 12942  01628E  6F02               	movwf	strcat@from& (0+255),b
 12943  016290  0EFF               	movlw	high STR_324
 12944  016292  6F03               	movwf	(strcat@from+1)& (0+255),b
 12945  016294  EC69  F0DA         	call	_strcat	;wreg free
 12946                           
 12947                           ;terminal_control.c: 144: break;
 12948  016298  D03C               	goto	l19312
 12949  01629A                     l19302:
 12950                           
 12951                           ; BSR set to: 2
 12952                           ;terminal_control.c: 146: strcat(print_string,"46");
 12953  01629A  0EEC               	movlw	low terminalTextAttributes@print_string
 12954  01629C  6F00               	movwf	strcat@to& (0+255),b
 12955  01629E  0E03               	movlw	high terminalTextAttributes@print_string
 12956  0162A0  6F01               	movwf	(strcat@to+1)& (0+255),b
 12957  0162A2  0EEF               	movlw	low STR_325
 12958  0162A4  6F02               	movwf	strcat@from& (0+255),b
 12959  0162A6  0EFF               	movlw	high STR_325
 12960  0162A8  6F03               	movwf	(strcat@from+1)& (0+255),b
 12961  0162AA  EC69  F0DA         	call	_strcat	;wreg free
 12962                           
 12963                           ;terminal_control.c: 147: break;
 12964  0162AE  D031               	goto	l19312
 12965  0162B0                     l19304:
 12966                           
 12967                           ; BSR set to: 2
 12968                           ;terminal_control.c: 149: strcat(print_string,"47");
 12969  0162B0  0EEC               	movlw	low terminalTextAttributes@print_string
 12970  0162B2  6F00               	movwf	strcat@to& (0+255),b
 12971  0162B4  0E03               	movlw	high terminalTextAttributes@print_string
 12972  0162B6  6F01               	movwf	(strcat@to+1)& (0+255),b
 12973  0162B8  0EF5               	movlw	low STR_326
 12974  0162BA  6F02               	movwf	strcat@from& (0+255),b
 12975  0162BC  0EFF               	movlw	high STR_326
 12976  0162BE  6F03               	movwf	(strcat@from+1)& (0+255),b
 12977  0162C0  EC69  F0DA         	call	_strcat	;wreg free
 12978                           
 12979                           ;terminal_control.c: 150: break;
 12980  0162C4  D026               	goto	l19312
 12981  0162C6                     l19306:
 12982                           
 12983                           ; BSR set to: 2
 12984                           ;terminal_control.c: 153: strcat(print_string,"40");
 12985  0162C6  0EEC               	movlw	low terminalTextAttributes@print_string
 12986  0162C8  6F00               	movwf	strcat@to& (0+255),b
 12987  0162CA  0E03               	movlw	high terminalTextAttributes@print_string
 12988  0162CC  6F01               	movwf	(strcat@to+1)& (0+255),b
 12989  0162CE  0EB5               	movlw	low (STR_45+9)
 12990  0162D0  6F02               	movwf	strcat@from& (0+255),b
 12991  0162D2  0EFD               	movlw	high (STR_45+9)
 12992  0162D4  6F03               	movwf	(strcat@from+1)& (0+255),b
 12993  0162D6  EC69  F0DA         	call	_strcat	;wreg free
 12994                           
 12995                           ;terminal_control.c: 154: break;
 12996  0162DA  D01B               	goto	l19312
 12997  0162DC                     l19310:
 12998  0162DC  0102               	movlb	2	; () banked
 12999  0162DE  51B8               	movf	terminalTextAttributes@background_color& (0+255),w,b
 13000                           
 13001                           ; Switch size 1, requested type "simple"
 13002                           ; Number of cases is 8, Range of values is 0 to 7
 13003                           ; switch strategies available:
 13004                           ; Name         Instructions Cycles
 13005                           ; simple_byte           25    13 (average)
 13006                           ;	Chosen strategy is simple_byte
 13007  0162E0  0A00               	xorlw	0	; case 0
 13008  0162E2  B4D8               	btfsc	status,2,c
 13009  0162E4  D798               	goto	l19290
 13010  0162E6  0A01               	xorlw	1	; case 1
 13011  0162E8  B4D8               	btfsc	status,2,c
 13012  0162EA  D7A0               	goto	l19292
 13013  0162EC  0A03               	xorlw	3	; case 2
 13014  0162EE  B4D8               	btfsc	status,2,c
 13015  0162F0  D7A8               	goto	l19294
 13016  0162F2  0A01               	xorlw	1	; case 3
 13017  0162F4  B4D8               	btfsc	status,2,c
 13018  0162F6  D7B0               	goto	l19296
 13019  0162F8  0A07               	xorlw	7	; case 4
 13020  0162FA  B4D8               	btfsc	status,2,c
 13021  0162FC  D7B8               	goto	l19298
 13022  0162FE  0A01               	xorlw	1	; case 5
 13023  016300  B4D8               	btfsc	status,2,c
 13024  016302  D7C0               	goto	l19300
 13025  016304  0A03               	xorlw	3	; case 6
 13026  016306  B4D8               	btfsc	status,2,c
 13027  016308  D7C8               	goto	l19302
 13028  01630A  0A01               	xorlw	1	; case 7
 13029  01630C  B4D8               	btfsc	status,2,c
 13030  01630E  D7D0               	goto	l19304
 13031  016310  D7DA               	goto	l19306
 13032  016312                     l19312:
 13033                           
 13034                           ;terminal_control.c: 157: strcat(print_string,"m");
 13035  016312  0EEC               	movlw	low terminalTextAttributes@print_string
 13036  016314  0102               	movlb	2	; () banked
 13037  016316  6F00               	movwf	strcat@to& (0+255),b
 13038  016318  0E03               	movlw	high terminalTextAttributes@print_string
 13039  01631A  6F01               	movwf	(strcat@to+1)& (0+255),b
 13040  01631C  0EE7               	movlw	low (STR_291+7)
 13041  01631E  6F02               	movwf	strcat@from& (0+255),b
 13042  016320  0EFE               	movlw	high (STR_291+7)
 13043  016322  6F03               	movwf	(strcat@from+1)& (0+255),b
 13044  016324  EC69  F0DA         	call	_strcat	;wreg free
 13045                           
 13046                           ;terminal_control.c: 159: printf(print_string);
 13047  016328  0EEC               	movlw	low terminalTextAttributes@print_string
 13048  01632A  0102               	movlb	2	; () banked
 13049  01632C  6FA9               	movwf	printf@f& (0+255),b
 13050  01632E  0E03               	movlw	high terminalTextAttributes@print_string
 13051  016330  6FAA               	movwf	(printf@f+1)& (0+255),b
 13052  016332  EC04  F0DF         	call	_printf	;wreg free
 13053  016336  0012               	return		;funcret
 13054  016338                     __end_of_terminalTextAttributes:
 13055                           	opt callstack 0
 13056                           
 13057 ;; *************** function _strncpy *****************
 13058 ;; Defined at:
 13059 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strncpy.c"
 13060 ;; Parameters:    Size  Location     Type
 13061 ;;  to              2    0[BANK2 ] PTR unsigned char 
 13062 ;;		 -> terminalTextAttributes@print_string(16), 
 13063 ;;  from            2    2[BANK2 ] PTR const unsigned char 
 13064 ;;		 -> STR_300(3), 
 13065 ;;  size            2    4[BANK2 ] unsigned int 
 13066 ;; Auto vars:     Size  Location     Type
 13067 ;;  cp              2    6[BANK2 ] PTR unsigned char 
 13068 ;;		 -> terminalTextAttributes@print_string(16), 
 13069 ;; Return value:  Size  Location     Type
 13070 ;;                  2    0[BANK2 ] PTR unsigned char 
 13071 ;; Registers used:
 13072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13073 ;; Tracked objects:
 13074 ;;		On entry : 0/0
 13075 ;;		On exit  : 0/0
 13076 ;;		Unchanged: 0/0
 13077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13078 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13079 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13081 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13082 ;;Total ram usage:        8 bytes
 13083 ;; Hardware stack levels used:    1
 13084 ;; Hardware stack levels required when called:   11
 13085 ;; This function calls:
 13086 ;;		Nothing
 13087 ;; This function is called by:
 13088 ;;		_terminalTextAttributes
 13089 ;; This function uses a non-reentrant model
 13090 ;;
 13091                           
 13092                           	psect	text8
 13093  01B340                     __ptext8:
 13094                           	opt callstack 0
 13095  01B340                     _strncpy:
 13096                           	opt callstack 16
 13097                           
 13098                           ;incstack = 0
 13099  01B340  C200  F206         	movff	strncpy@to,strncpy@cp
 13100  01B344  C201  F207         	movff	strncpy@to+1,strncpy@cp+1
 13101  01B348  D017               	goto	l18614
 13102  01B34A                     l18608:
 13103                           
 13104                           ; BSR set to: 2
 13105  01B34A  0704               	decf	strncpy@size& (0+255),f,b
 13106  01B34C  A0D8               	btfss	status,0,c
 13107  01B34E  0705               	decf	(strncpy@size+1)& (0+255),f,b
 13108                           
 13109                           ; BSR set to: 2
 13110  01B350  C202  FFF6         	movff	strncpy@from,tblptrl
 13111  01B354  C203  FFF7         	movff	strncpy@from+1,tblptrh
 13112  01B358  4B02               	infsnz	strncpy@from& (0+255),f,b
 13113  01B35A  2B03               	incf	(strncpy@from+1)& (0+255),f,b
 13114  01B35C                     	if	0	;tblptru may be non-zero
 13115  01B35C                     	endif
 13116  01B35C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13117  01B35C  0E00               	movlw	low (__mediumconst shr (0+16))
 13118  01B35E  6EF8               	movwf	tblptru,c
 13119  01B360                     	endif
 13120  01B360  C206  FFD9         	movff	strncpy@cp,fsr2l
 13121  01B364  C207  FFDA         	movff	strncpy@cp+1,fsr2h
 13122  01B368  4B06               	infsnz	strncpy@cp& (0+255),f,b
 13123  01B36A  2B07               	incf	(strncpy@cp+1)& (0+255),f,b
 13124  01B36C  0008               	tblrd		*
 13125  01B36E  CFF5 FFDF          	movff	tablat,indf2
 13126  01B372  50DF               	movf	indf2,w,c
 13127  01B374  B4D8               	btfsc	status,2,c
 13128  01B376  D00E               	goto	l18620
 13129  01B378                     l18614:
 13130  01B378  0102               	movlb	2	; () banked
 13131  01B37A  5104               	movf	strncpy@size& (0+255),w,b
 13132  01B37C  1105               	iorwf	(strncpy@size+1)& (0+255),w,b
 13133  01B37E  B4D8               	btfsc	status,2,c
 13134  01B380  D009               	goto	l18620
 13135  01B382  D7E3               	goto	l18608
 13136  01B384                     l18616:
 13137                           
 13138                           ; BSR set to: 2
 13139  01B384  C206  FFD9         	movff	strncpy@cp,fsr2l
 13140  01B388  C207  FFDA         	movff	strncpy@cp+1,fsr2h
 13141  01B38C  0E00               	movlw	0
 13142  01B38E  6EDF               	movwf	indf2,c
 13143                           
 13144                           ; BSR set to: 2
 13145  01B390  4B06               	infsnz	strncpy@cp& (0+255),f,b
 13146  01B392  2B07               	incf	(strncpy@cp+1)& (0+255),f,b
 13147  01B394                     l18620:
 13148                           
 13149                           ; BSR set to: 2
 13150  01B394  0704               	decf	strncpy@size& (0+255),f,b
 13151  01B396  A0D8               	btfss	status,0,c
 13152  01B398  0705               	decf	(strncpy@size+1)& (0+255),f,b
 13153  01B39A  2904               	incf	strncpy@size& (0+255),w,b
 13154  01B39C  E1F3               	bnz	l18616
 13155  01B39E  2905               	incf	(strncpy@size+1)& (0+255),w,b
 13156  01B3A0  B4D8               	btfsc	status,2,c
 13157  01B3A2  0012               	return	
 13158  01B3A4  D7EF               	goto	l18616
 13159  01B3A6                     __end_of_strncpy:
 13160                           	opt callstack 0
 13161                           
 13162 ;; *************** function _getStringSecondsAsTime *****************
 13163 ;; Defined at:
 13164 ;;		line 61 in file "heartbeat_timer.c"
 13165 ;; Parameters:    Size  Location     Type
 13166 ;;  input_second    4  159[BANK2 ] unsigned long 
 13167 ;; Auto vars:     Size  Location     Type
 13168 ;;  buff           20    0[BANK3 ] unsigned char [20]
 13169 ;;  minutes         1   25[BANK3 ] unsigned char 
 13170 ;;  hours           1   24[BANK3 ] unsigned char 
 13171 ;;  days            1   23[BANK3 ] unsigned char 
 13172 ;;  years           1   22[BANK3 ] unsigned char 
 13173 ;;  seconds         1   21[BANK3 ] unsigned char 
 13174 ;;  i               1   20[BANK3 ] unsigned char 
 13175 ;;  remainder       1    0        unsigned char 
 13176 ;; Return value:  Size  Location     Type
 13177 ;;                  2  159[BANK2 ] PTR unsigned char 
 13178 ;; Registers used:
 13179 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13180 ;; Tracked objects:
 13181 ;;		On entry : 0/0
 13182 ;;		On exit  : 0/0
 13183 ;;		Unchanged: 0/0
 13184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13185 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13186 ;;      Locals:         0       0       0       0      26       0       0       0       0       0       0       0       
      +0       0       0       0
 13187 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13188 ;;      Totals:         0       0       0       8      26       0       0       0       0       0       0       0       
      +0       0       0       0
 13189 ;;Total ram usage:       34 bytes
 13190 ;; Hardware stack levels used:    1
 13191 ;; Hardware stack levels required when called:   15
 13192 ;; This function calls:
 13193 ;;		___lldiv
 13194 ;;		___wmul
 13195 ;;		_sprintf
 13196 ;;		_strcat
 13197 ;;		_strlen
 13198 ;; This function is called by:
 13199 ;;		_ringBufferLUT
 13200 ;;		_printCurrentMeasurements
 13201 ;; This function uses a non-reentrant model
 13202 ;;
 13203                           
 13204                           	psect	text9
 13205  015C2C                     __ptext9:
 13206                           	opt callstack 0
 13207  015C2C                     _getStringSecondsAsTime:
 13208                           	opt callstack 12
 13209                           
 13210                           ;heartbeat_timer.c: 63: uint8_t years, days, hours, minutes, seconds, remainder;;heartbe
      +                          at_timer.c: 64: static char return_string[40];;heartbeat_timer.c: 67: uint8_t i;;heartbe
      +                          at_timer.c: 68: for (i = 0; i < strlen(return_string); i++) {
 13211                           
 13212                           ; BSR set to: 2
 13213                           ;incstack = 0
 13214  015C2C  0E00               	movlw	0
 13215  015C2E  0103               	movlb	3	; () banked
 13216  015C30  6FE5               	movwf	getStringSecondsAsTime@i& (0+255),b
 13217  015C32  D00A               	goto	l19362
 13218  015C34                     l19358:
 13219                           
 13220                           ; BSR set to: 2
 13221                           ;heartbeat_timer.c: 70: return_string[i] = '\0';
 13222  015C34  0E84               	movlw	low getStringSecondsAsTime@return_string
 13223  015C36  0103               	movlb	3	; () banked
 13224  015C38  25E5               	addwf	getStringSecondsAsTime@i& (0+255),w,b
 13225  015C3A  6ED9               	movwf	fsr2l,c
 13226  015C3C  6ADA               	clrf	fsr2h,c
 13227  015C3E  0E03               	movlw	high getStringSecondsAsTime@return_string
 13228  015C40  22DA               	addwfc	fsr2h,f,c
 13229  015C42  0E00               	movlw	0
 13230  015C44  6EDF               	movwf	indf2,c
 13231                           
 13232                           ; BSR set to: 3
 13233  015C46  2BE5               	incf	getStringSecondsAsTime@i& (0+255),f,b
 13234  015C48                     l19362:
 13235                           
 13236                           ; BSR set to: 3
 13237  015C48  0E84               	movlw	low getStringSecondsAsTime@return_string
 13238  015C4A  0102               	movlb	2	; () banked
 13239  015C4C  6F00               	movwf	strlen@s& (0+255),b
 13240  015C4E  0E03               	movlw	high getStringSecondsAsTime@return_string
 13241  015C50  6F01               	movwf	(strlen@s+1)& (0+255),b
 13242  015C52  EC98  F0E0         	call	_strlen	;wreg free
 13243  015C56  0103               	movlb	3	; () banked
 13244  015C58  51E5               	movf	getStringSecondsAsTime@i& (0+255),w,b
 13245  015C5A  0102               	movlb	2	; () banked
 13246  015C5C  6FA3               	movwf	??_getStringSecondsAsTime& (0+255),b
 13247  015C5E  6BA4               	clrf	(??_getStringSecondsAsTime+1)& (0+255),b
 13248  015C60  5100               	movf	?_strlen& (0+255),w,b
 13249  015C62  5DA3               	subwf	??_getStringSecondsAsTime& (0+255),w,b
 13250  015C64  5101               	movf	(?_strlen+1)& (0+255),w,b
 13251  015C66  59A4               	subwfb	(??_getStringSecondsAsTime+1)& (0+255),w,b
 13252  015C68  A0D8               	btfss	status,0,c
 13253  015C6A  D7E4               	goto	l19358
 13254                           
 13255                           ; BSR set to: 2
 13256                           ;heartbeat_timer.c: 72: };heartbeat_timer.c: 74: char buff[20];;heartbeat_timer.c: 76: y
      +                          ears = input_seconds / (60 * 60 * 24 * 365);
 13257  015C6C  C29F  F200         	movff	getStringSecondsAsTime@input_seconds,___lldiv@dividend
 13258  015C70  C2A0  F201         	movff	getStringSecondsAsTime@input_seconds+1,___lldiv@dividend+1
 13259  015C74  C2A1  F202         	movff	getStringSecondsAsTime@input_seconds+2,___lldiv@dividend+2
 13260  015C78  C2A2  F203         	movff	getStringSecondsAsTime@input_seconds+3,___lldiv@dividend+3
 13261  015C7C  0E80               	movlw	128
 13262  015C7E  6F04               	movwf	___lldiv@divisor& (0+255),b
 13263  015C80  0E33               	movlw	51
 13264  015C82  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 13265  015C84  0E00               	movlw	0
 13266  015C86  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 13267  015C88  0E00               	movlw	0
 13268  015C8A  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 13269  015C8C  ECFD  F0D7         	call	___lldiv	;wreg free
 13270  015C90  0102               	movlb	2	; () banked
 13271  015C92  5100               	movf	?___lldiv& (0+255),w,b
 13272  015C94  0103               	movlb	3	; () banked
 13273  015C96  6FE7               	movwf	getStringSecondsAsTime@years& (0+255),b
 13274                           
 13275                           ; BSR set to: 3
 13276                           ;heartbeat_timer.c: 77: input_seconds -= years * (60 * 60 * 24 * 365);
 13277  015C98  C3E7  F200         	movff	getStringSecondsAsTime@years,___wmul@multiplier
 13278  015C9C  0102               	movlb	2	; () banked
 13279  015C9E  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 13280  015CA0  0E33               	movlw	51
 13281  015CA2  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13282  015CA4  0E80               	movlw	128
 13283  015CA6  6F02               	movwf	___wmul@multiplicand& (0+255),b
 13284  015CA8  EC2E  F0E1         	call	___wmul	;wreg free
 13285  015CAC  0102               	movlb	2	; () banked
 13286  015CAE  C200  F2A3         	movff	?___wmul,??_getStringSecondsAsTime
 13287  015CB2  C201  F2A4         	movff	?___wmul+1,??_getStringSecondsAsTime+1
 13288  015CB6  0E00               	movlw	0
 13289  015CB8  BFA4               	btfsc	(??_getStringSecondsAsTime+1)& (0+255),7,b
 13290  015CBA  0EFF               	movlw	255
 13291  015CBC  6FA5               	movwf	(??_getStringSecondsAsTime+2)& (0+255),b
 13292  015CBE  6FA6               	movwf	(??_getStringSecondsAsTime+3)& (0+255),b
 13293  015CC0  51A3               	movf	??_getStringSecondsAsTime& (0+255),w,b
 13294  015CC2  5F9F               	subwf	getStringSecondsAsTime@input_seconds& (0+255),f,b
 13295  015CC4  51A4               	movf	(??_getStringSecondsAsTime+1)& (0+255),w,b
 13296  015CC6  5BA0               	subwfb	(getStringSecondsAsTime@input_seconds+1)& (0+255),f,b
 13297  015CC8  51A5               	movf	(??_getStringSecondsAsTime+2)& (0+255),w,b
 13298  015CCA  5BA1               	subwfb	(getStringSecondsAsTime@input_seconds+2)& (0+255),f,b
 13299  015CCC  51A6               	movf	(??_getStringSecondsAsTime+3)& (0+255),w,b
 13300  015CCE  5BA2               	subwfb	(getStringSecondsAsTime@input_seconds+3)& (0+255),f,b
 13301                           
 13302                           ; BSR set to: 2
 13303                           ;heartbeat_timer.c: 78: days = input_seconds / (60 * 60 * 24);
 13304  015CD0  C29F  F200         	movff	getStringSecondsAsTime@input_seconds,___lldiv@dividend
 13305  015CD4  C2A0  F201         	movff	getStringSecondsAsTime@input_seconds+1,___lldiv@dividend+1
 13306  015CD8  C2A1  F202         	movff	getStringSecondsAsTime@input_seconds+2,___lldiv@dividend+2
 13307  015CDC  C2A2  F203         	movff	getStringSecondsAsTime@input_seconds+3,___lldiv@dividend+3
 13308  015CE0  0E80               	movlw	128
 13309  015CE2  6F04               	movwf	___lldiv@divisor& (0+255),b
 13310  015CE4  0E51               	movlw	81
 13311  015CE6  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 13312  015CE8  0E00               	movlw	0
 13313  015CEA  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 13314  015CEC  0E00               	movlw	0
 13315  015CEE  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 13316  015CF0  ECFD  F0D7         	call	___lldiv	;wreg free
 13317  015CF4  0102               	movlb	2	; () banked
 13318  015CF6  5100               	movf	?___lldiv& (0+255),w,b
 13319  015CF8  0103               	movlb	3	; () banked
 13320  015CFA  6FE8               	movwf	getStringSecondsAsTime@days& (0+255),b
 13321                           
 13322                           ;heartbeat_timer.c: 79: input_seconds -= days * (60 * 60 * 24);
 13323  015CFC  C3E8  F200         	movff	getStringSecondsAsTime@days,___wmul@multiplier
 13324  015D00  0102               	movlb	2	; () banked
 13325  015D02  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 13326  015D04  0E51               	movlw	81
 13327  015D06  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13328  015D08  0E80               	movlw	128
 13329  015D0A  6F02               	movwf	___wmul@multiplicand& (0+255),b
 13330  015D0C  EC2E  F0E1         	call	___wmul	;wreg free
 13331  015D10  0102               	movlb	2	; () banked
 13332  015D12  C200  F2A3         	movff	?___wmul,??_getStringSecondsAsTime
 13333  015D16  C201  F2A4         	movff	?___wmul+1,??_getStringSecondsAsTime+1
 13334  015D1A  0E00               	movlw	0
 13335  015D1C  BFA4               	btfsc	(??_getStringSecondsAsTime+1)& (0+255),7,b
 13336  015D1E  0EFF               	movlw	255
 13337  015D20  6FA5               	movwf	(??_getStringSecondsAsTime+2)& (0+255),b
 13338  015D22  6FA6               	movwf	(??_getStringSecondsAsTime+3)& (0+255),b
 13339  015D24  51A3               	movf	??_getStringSecondsAsTime& (0+255),w,b
 13340  015D26  5F9F               	subwf	getStringSecondsAsTime@input_seconds& (0+255),f,b
 13341  015D28  51A4               	movf	(??_getStringSecondsAsTime+1)& (0+255),w,b
 13342  015D2A  5BA0               	subwfb	(getStringSecondsAsTime@input_seconds+1)& (0+255),f,b
 13343  015D2C  51A5               	movf	(??_getStringSecondsAsTime+2)& (0+255),w,b
 13344  015D2E  5BA1               	subwfb	(getStringSecondsAsTime@input_seconds+2)& (0+255),f,b
 13345  015D30  51A6               	movf	(??_getStringSecondsAsTime+3)& (0+255),w,b
 13346  015D32  5BA2               	subwfb	(getStringSecondsAsTime@input_seconds+3)& (0+255),f,b
 13347                           
 13348                           ; BSR set to: 2
 13349                           ;heartbeat_timer.c: 80: hours = input_seconds / (60 * 60);
 13350  015D34  C29F  F200         	movff	getStringSecondsAsTime@input_seconds,___lldiv@dividend
 13351  015D38  C2A0  F201         	movff	getStringSecondsAsTime@input_seconds+1,___lldiv@dividend+1
 13352  015D3C  C2A1  F202         	movff	getStringSecondsAsTime@input_seconds+2,___lldiv@dividend+2
 13353  015D40  C2A2  F203         	movff	getStringSecondsAsTime@input_seconds+3,___lldiv@dividend+3
 13354  015D44  0E10               	movlw	16
 13355  015D46  6F04               	movwf	___lldiv@divisor& (0+255),b
 13356  015D48  0E0E               	movlw	14
 13357  015D4A  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 13358  015D4C  0E00               	movlw	0
 13359  015D4E  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 13360  015D50  0E00               	movlw	0
 13361  015D52  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 13362  015D54  ECFD  F0D7         	call	___lldiv	;wreg free
 13363  015D58  0102               	movlb	2	; () banked
 13364  015D5A  5100               	movf	?___lldiv& (0+255),w,b
 13365  015D5C  0103               	movlb	3	; () banked
 13366  015D5E  6FE9               	movwf	getStringSecondsAsTime@hours& (0+255),b
 13367                           
 13368                           ; BSR set to: 3
 13369                           ;heartbeat_timer.c: 81: input_seconds -= hours * (60 * 60);
 13370  015D60  C3E9  F200         	movff	getStringSecondsAsTime@hours,___wmul@multiplier
 13371  015D64  0102               	movlb	2	; () banked
 13372  015D66  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 13373  015D68  0E0E               	movlw	14
 13374  015D6A  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13375  015D6C  0E10               	movlw	16
 13376  015D6E  6F02               	movwf	___wmul@multiplicand& (0+255),b
 13377  015D70  EC2E  F0E1         	call	___wmul	;wreg free
 13378  015D74  0102               	movlb	2	; () banked
 13379  015D76  C200  F2A3         	movff	?___wmul,??_getStringSecondsAsTime
 13380  015D7A  C201  F2A4         	movff	?___wmul+1,??_getStringSecondsAsTime+1
 13381  015D7E  0E00               	movlw	0
 13382  015D80  BFA4               	btfsc	(??_getStringSecondsAsTime+1)& (0+255),7,b
 13383  015D82  0EFF               	movlw	255
 13384  015D84  6FA5               	movwf	(??_getStringSecondsAsTime+2)& (0+255),b
 13385  015D86  6FA6               	movwf	(??_getStringSecondsAsTime+3)& (0+255),b
 13386  015D88  51A3               	movf	??_getStringSecondsAsTime& (0+255),w,b
 13387  015D8A  5F9F               	subwf	getStringSecondsAsTime@input_seconds& (0+255),f,b
 13388  015D8C  51A4               	movf	(??_getStringSecondsAsTime+1)& (0+255),w,b
 13389  015D8E  5BA0               	subwfb	(getStringSecondsAsTime@input_seconds+1)& (0+255),f,b
 13390  015D90  51A5               	movf	(??_getStringSecondsAsTime+2)& (0+255),w,b
 13391  015D92  5BA1               	subwfb	(getStringSecondsAsTime@input_seconds+2)& (0+255),f,b
 13392  015D94  51A6               	movf	(??_getStringSecondsAsTime+3)& (0+255),w,b
 13393  015D96  5BA2               	subwfb	(getStringSecondsAsTime@input_seconds+3)& (0+255),f,b
 13394                           
 13395                           ;heartbeat_timer.c: 82: minutes = input_seconds / 60;
 13396  015D98  C29F  F200         	movff	getStringSecondsAsTime@input_seconds,___lldiv@dividend
 13397  015D9C  C2A0  F201         	movff	getStringSecondsAsTime@input_seconds+1,___lldiv@dividend+1
 13398  015DA0  C2A1  F202         	movff	getStringSecondsAsTime@input_seconds+2,___lldiv@dividend+2
 13399  015DA4  C2A2  F203         	movff	getStringSecondsAsTime@input_seconds+3,___lldiv@dividend+3
 13400  015DA8  0E3C               	movlw	60
 13401  015DAA  6F04               	movwf	___lldiv@divisor& (0+255),b
 13402  015DAC  0E00               	movlw	0
 13403  015DAE  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 13404  015DB0  0E00               	movlw	0
 13405  015DB2  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 13406  015DB4  0E00               	movlw	0
 13407  015DB6  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 13408  015DB8  ECFD  F0D7         	call	___lldiv	;wreg free
 13409  015DBC  0102               	movlb	2	; () banked
 13410  015DBE  5100               	movf	?___lldiv& (0+255),w,b
 13411  015DC0  0103               	movlb	3	; () banked
 13412  015DC2  6FEA               	movwf	getStringSecondsAsTime@minutes& (0+255),b
 13413                           
 13414                           ; BSR set to: 3
 13415                           ;heartbeat_timer.c: 83: input_seconds -= minutes * 60;
 13416  015DC4  51EA               	movf	getStringSecondsAsTime@minutes& (0+255),w,b
 13417  015DC6  0D3C               	mullw	60
 13418  015DC8  CFF3 F2A3          	movff	prodl,??_getStringSecondsAsTime
 13419  015DCC  CFF4 F2A4          	movff	prodh,??_getStringSecondsAsTime+1
 13420  015DD0  0E00               	movlw	0
 13421  015DD2  0102               	movlb	2	; () banked
 13422  015DD4  BFA4               	btfsc	(??_getStringSecondsAsTime+1)& (0+255),7,b
 13423  015DD6  0EFF               	movlw	255
 13424  015DD8  6FA5               	movwf	(??_getStringSecondsAsTime+2)& (0+255),b
 13425  015DDA  6FA6               	movwf	(??_getStringSecondsAsTime+3)& (0+255),b
 13426  015DDC  51A3               	movf	??_getStringSecondsAsTime& (0+255),w,b
 13427  015DDE  5F9F               	subwf	getStringSecondsAsTime@input_seconds& (0+255),f,b
 13428  015DE0  51A4               	movf	(??_getStringSecondsAsTime+1)& (0+255),w,b
 13429  015DE2  5BA0               	subwfb	(getStringSecondsAsTime@input_seconds+1)& (0+255),f,b
 13430  015DE4  51A5               	movf	(??_getStringSecondsAsTime+2)& (0+255),w,b
 13431  015DE6  5BA1               	subwfb	(getStringSecondsAsTime@input_seconds+2)& (0+255),f,b
 13432  015DE8  51A6               	movf	(??_getStringSecondsAsTime+3)& (0+255),w,b
 13433  015DEA  5BA2               	subwfb	(getStringSecondsAsTime@input_seconds+3)& (0+255),f,b
 13434                           
 13435                           ; BSR set to: 2
 13436                           ;heartbeat_timer.c: 84: seconds = input_seconds;
 13437  015DEC  C29F  F3E6         	movff	getStringSecondsAsTime@input_seconds,getStringSecondsAsTime@seconds
 13438                           
 13439                           ; BSR set to: 2
 13440                           ;heartbeat_timer.c: 86: if (years > 0) {
 13441  015DF0  0103               	movlb	3	; () banked
 13442  015DF2  51E7               	movf	getStringSecondsAsTime@years& (0+255),w,b
 13443  015DF4  B4D8               	btfsc	status,2,c
 13444  015DF6  D02B               	goto	l19388
 13445                           
 13446                           ; BSR set to: 3
 13447                           ;heartbeat_timer.c: 88: if (years == 1) {
 13448  015DF8  05E7               	decf	getStringSecondsAsTime@years& (0+255),w,b
 13449  015DFA  A4D8               	btfss	status,2,c
 13450  015DFC  D00F               	goto	l19384
 13451                           
 13452                           ; BSR set to: 3
 13453                           ;heartbeat_timer.c: 90: sprintf(buff, "%d year, ", years);
 13454  015DFE  0ED1               	movlw	low getStringSecondsAsTime@buff
 13455  015E00  0102               	movlb	2	; () banked
 13456  015E02  6F8C               	movwf	sprintf@wh& (0+255),b
 13457  015E04  0E03               	movlw	high getStringSecondsAsTime@buff
 13458  015E06  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 13459  015E08  0E7E               	movlw	low STR_50
 13460  015E0A  6F8E               	movwf	sprintf@f& (0+255),b
 13461  015E0C  0EFE               	movlw	high STR_50
 13462  015E0E  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 13463  015E10  C3E7  F290         	movff	getStringSecondsAsTime@years,?_sprintf+4
 13464  015E14  6B91               	clrf	(?_sprintf+5)& (0+255),b
 13465  015E16  EC0A  F0DD         	call	_sprintf	;wreg free
 13466                           
 13467                           ;heartbeat_timer.c: 92: }
 13468  015E1A  D00E               	goto	l19386
 13469  015E1C                     l19384:
 13470                           
 13471                           ; BSR set to: 3
 13472                           ;heartbeat_timer.c: 94: else {;heartbeat_timer.c: 96: sprintf(buff, "%d years, ", years)
      +                          ;
 13473  015E1C  0ED1               	movlw	low getStringSecondsAsTime@buff
 13474  015E1E  0102               	movlb	2	; () banked
 13475  015E20  6F8C               	movwf	sprintf@wh& (0+255),b
 13476  015E22  0E03               	movlw	high getStringSecondsAsTime@buff
 13477  015E24  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 13478  015E26  0E1D               	movlw	low STR_51
 13479  015E28  6F8E               	movwf	sprintf@f& (0+255),b
 13480  015E2A  0EFE               	movlw	high STR_51
 13481  015E2C  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 13482  015E2E  C3E7  F290         	movff	getStringSecondsAsTime@years,?_sprintf+4
 13483  015E32  6B91               	clrf	(?_sprintf+5)& (0+255),b
 13484  015E34  EC0A  F0DD         	call	_sprintf	;wreg free
 13485  015E38                     l19386:
 13486                           
 13487                           ;heartbeat_timer.c: 98: };heartbeat_timer.c: 100: strcat(return_string, buff);
 13488  015E38  0E84               	movlw	low getStringSecondsAsTime@return_string
 13489  015E3A  0102               	movlb	2	; () banked
 13490  015E3C  6F00               	movwf	strcat@to& (0+255),b
 13491  015E3E  0E03               	movlw	high getStringSecondsAsTime@return_string
 13492  015E40  6F01               	movwf	(strcat@to+1)& (0+255),b
 13493  015E42  0ED1               	movlw	low getStringSecondsAsTime@buff
 13494  015E44  6F02               	movwf	strcat@from& (0+255),b
 13495  015E46  0E03               	movlw	high getStringSecondsAsTime@buff
 13496  015E48  6F03               	movwf	(strcat@from+1)& (0+255),b
 13497  015E4A  EC69  F0DA         	call	_strcat	;wreg free
 13498  015E4E                     l19388:
 13499                           
 13500                           ;heartbeat_timer.c: 102: };heartbeat_timer.c: 104: if (days > 0) {
 13501  015E4E  0103               	movlb	3	; () banked
 13502  015E50  51E8               	movf	getStringSecondsAsTime@days& (0+255),w,b
 13503  015E52  B4D8               	btfsc	status,2,c
 13504  015E54  D02B               	goto	l19398
 13505                           
 13506                           ; BSR set to: 3
 13507                           ;heartbeat_timer.c: 106: if (days == 1) {
 13508  015E56  05E8               	decf	getStringSecondsAsTime@days& (0+255),w,b
 13509  015E58  A4D8               	btfss	status,2,c
 13510  015E5A  D00F               	goto	l19394
 13511                           
 13512                           ; BSR set to: 3
 13513                           ;heartbeat_timer.c: 108: sprintf(buff, "%d day, ", days);
 13514  015E5C  0ED1               	movlw	low getStringSecondsAsTime@buff
 13515  015E5E  0102               	movlb	2	; () banked
 13516  015E60  6F8C               	movwf	sprintf@wh& (0+255),b
 13517  015E62  0E03               	movlw	high getStringSecondsAsTime@buff
 13518  015E64  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 13519  015E66  0E28               	movlw	low STR_52
 13520  015E68  6F8E               	movwf	sprintf@f& (0+255),b
 13521  015E6A  0EFF               	movlw	high STR_52
 13522  015E6C  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 13523  015E6E  C3E8  F290         	movff	getStringSecondsAsTime@days,?_sprintf+4
 13524  015E72  6B91               	clrf	(?_sprintf+5)& (0+255),b
 13525  015E74  EC0A  F0DD         	call	_sprintf	;wreg free
 13526                           
 13527                           ;heartbeat_timer.c: 110: }
 13528  015E78  D00E               	goto	l19396
 13529  015E7A                     l19394:
 13530                           
 13531                           ; BSR set to: 3
 13532                           ;heartbeat_timer.c: 112: else {;heartbeat_timer.c: 114: sprintf(buff, "%d days, ", days)
      +                          ;
 13533  015E7A  0ED1               	movlw	low getStringSecondsAsTime@buff
 13534  015E7C  0102               	movlb	2	; () banked
 13535  015E7E  6F8C               	movwf	sprintf@wh& (0+255),b
 13536  015E80  0E03               	movlw	high getStringSecondsAsTime@buff
 13537  015E82  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 13538  015E84  0E92               	movlw	low STR_53
 13539  015E86  6F8E               	movwf	sprintf@f& (0+255),b
 13540  015E88  0EFE               	movlw	high STR_53
 13541  015E8A  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 13542  015E8C  C3E8  F290         	movff	getStringSecondsAsTime@days,?_sprintf+4
 13543  015E90  6B91               	clrf	(?_sprintf+5)& (0+255),b
 13544  015E92  EC0A  F0DD         	call	_sprintf	;wreg free
 13545  015E96                     l19396:
 13546                           
 13547                           ;heartbeat_timer.c: 116: };heartbeat_timer.c: 118: strcat(return_string, buff);
 13548  015E96  0E84               	movlw	low getStringSecondsAsTime@return_string
 13549  015E98  0102               	movlb	2	; () banked
 13550  015E9A  6F00               	movwf	strcat@to& (0+255),b
 13551  015E9C  0E03               	movlw	high getStringSecondsAsTime@return_string
 13552  015E9E  6F01               	movwf	(strcat@to+1)& (0+255),b
 13553  015EA0  0ED1               	movlw	low getStringSecondsAsTime@buff
 13554  015EA2  6F02               	movwf	strcat@from& (0+255),b
 13555  015EA4  0E03               	movlw	high getStringSecondsAsTime@buff
 13556  015EA6  6F03               	movwf	(strcat@from+1)& (0+255),b
 13557  015EA8  EC69  F0DA         	call	_strcat	;wreg free
 13558  015EAC                     l19398:
 13559                           
 13560                           ;heartbeat_timer.c: 119: };heartbeat_timer.c: 121: if (hours > 0) {
 13561  015EAC  0103               	movlb	3	; () banked
 13562  015EAE  51E9               	movf	getStringSecondsAsTime@hours& (0+255),w,b
 13563  015EB0  B4D8               	btfsc	status,2,c
 13564  015EB2  D02B               	goto	l19408
 13565                           
 13566                           ; BSR set to: 3
 13567                           ;heartbeat_timer.c: 123: if (hours == 1) {
 13568  015EB4  05E9               	decf	getStringSecondsAsTime@hours& (0+255),w,b
 13569  015EB6  A4D8               	btfss	status,2,c
 13570  015EB8  D00F               	goto	l19404
 13571                           
 13572                           ; BSR set to: 3
 13573                           ;heartbeat_timer.c: 125: sprintf(buff, "%d hour, ", hours);
 13574  015EBA  0ED1               	movlw	low getStringSecondsAsTime@buff
 13575  015EBC  0102               	movlb	2	; () banked
 13576  015EBE  6F8C               	movwf	sprintf@wh& (0+255),b
 13577  015EC0  0E03               	movlw	high getStringSecondsAsTime@buff
 13578  015EC2  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 13579  015EC4  0E88               	movlw	low STR_54
 13580  015EC6  6F8E               	movwf	sprintf@f& (0+255),b
 13581  015EC8  0EFE               	movlw	high STR_54
 13582  015ECA  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 13583  015ECC  C3E9  F290         	movff	getStringSecondsAsTime@hours,?_sprintf+4
 13584  015ED0  6B91               	clrf	(?_sprintf+5)& (0+255),b
 13585  015ED2  EC0A  F0DD         	call	_sprintf	;wreg free
 13586                           
 13587                           ;heartbeat_timer.c: 127: }
 13588  015ED6  D00E               	goto	l19406
 13589  015ED8                     l19404:
 13590                           
 13591                           ; BSR set to: 3
 13592                           ;heartbeat_timer.c: 129: else {;heartbeat_timer.c: 131: sprintf(buff, "%d hours, ", hour
      +                          s);
 13593  015ED8  0ED1               	movlw	low getStringSecondsAsTime@buff
 13594  015EDA  0102               	movlb	2	; () banked
 13595  015EDC  6F8C               	movwf	sprintf@wh& (0+255),b
 13596  015EDE  0E03               	movlw	high getStringSecondsAsTime@buff
 13597  015EE0  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 13598  015EE2  0E28               	movlw	low STR_55
 13599  015EE4  6F8E               	movwf	sprintf@f& (0+255),b
 13600  015EE6  0EFE               	movlw	high STR_55
 13601  015EE8  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 13602  015EEA  C3E9  F290         	movff	getStringSecondsAsTime@hours,?_sprintf+4
 13603  015EEE  6B91               	clrf	(?_sprintf+5)& (0+255),b
 13604  015EF0  EC0A  F0DD         	call	_sprintf	;wreg free
 13605  015EF4                     l19406:
 13606                           
 13607                           ;heartbeat_timer.c: 133: };heartbeat_timer.c: 135: strcat(return_string, buff);
 13608  015EF4  0E84               	movlw	low getStringSecondsAsTime@return_string
 13609  015EF6  0102               	movlb	2	; () banked
 13610  015EF8  6F00               	movwf	strcat@to& (0+255),b
 13611  015EFA  0E03               	movlw	high getStringSecondsAsTime@return_string
 13612  015EFC  6F01               	movwf	(strcat@to+1)& (0+255),b
 13613  015EFE  0ED1               	movlw	low getStringSecondsAsTime@buff
 13614  015F00  6F02               	movwf	strcat@from& (0+255),b
 13615  015F02  0E03               	movlw	high getStringSecondsAsTime@buff
 13616  015F04  6F03               	movwf	(strcat@from+1)& (0+255),b
 13617  015F06  EC69  F0DA         	call	_strcat	;wreg free
 13618  015F0A                     l19408:
 13619                           
 13620                           ;heartbeat_timer.c: 137: };heartbeat_timer.c: 139: if (minutes > 0) {
 13621  015F0A  0103               	movlb	3	; () banked
 13622  015F0C  51EA               	movf	getStringSecondsAsTime@minutes& (0+255),w,b
 13623  015F0E  B4D8               	btfsc	status,2,c
 13624  015F10  D02B               	goto	l19418
 13625                           
 13626                           ; BSR set to: 3
 13627                           ;heartbeat_timer.c: 141: if (minutes == 1) {
 13628  015F12  05EA               	decf	getStringSecondsAsTime@minutes& (0+255),w,b
 13629  015F14  A4D8               	btfss	status,2,c
 13630  015F16  D00F               	goto	l19414
 13631                           
 13632                           ; BSR set to: 3
 13633                           ;heartbeat_timer.c: 143: sprintf(buff, "%d minute, ", minutes);
 13634  015F18  0ED1               	movlw	low getStringSecondsAsTime@buff
 13635  015F1A  0102               	movlb	2	; () banked
 13636  015F1C  6F8C               	movwf	sprintf@wh& (0+255),b
 13637  015F1E  0E03               	movlw	high getStringSecondsAsTime@buff
 13638  015F20  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 13639  015F22  0EA0               	movlw	low STR_56
 13640  015F24  6F8E               	movwf	sprintf@f& (0+255),b
 13641  015F26  0EFD               	movlw	high STR_56
 13642  015F28  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 13643  015F2A  C3EA  F290         	movff	getStringSecondsAsTime@minutes,?_sprintf+4
 13644  015F2E  6B91               	clrf	(?_sprintf+5)& (0+255),b
 13645  015F30  EC0A  F0DD         	call	_sprintf	;wreg free
 13646                           
 13647                           ;heartbeat_timer.c: 145: }
 13648  015F34  D00E               	goto	l19416
 13649  015F36                     l19414:
 13650                           
 13651                           ; BSR set to: 3
 13652                           ;heartbeat_timer.c: 147: else {;heartbeat_timer.c: 149: sprintf(buff, "%d minutes, ", mi
      +                          nutes);
 13653  015F36  0ED1               	movlw	low getStringSecondsAsTime@buff
 13654  015F38  0102               	movlb	2	; () banked
 13655  015F3A  6F8C               	movwf	sprintf@wh& (0+255),b
 13656  015F3C  0E03               	movlw	high getStringSecondsAsTime@buff
 13657  015F3E  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 13658  015F40  0E3C               	movlw	low STR_57
 13659  015F42  6F8E               	movwf	sprintf@f& (0+255),b
 13660  015F44  0EFD               	movlw	high STR_57
 13661  015F46  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 13662  015F48  C3EA  F290         	movff	getStringSecondsAsTime@minutes,?_sprintf+4
 13663  015F4C  6B91               	clrf	(?_sprintf+5)& (0+255),b
 13664  015F4E  EC0A  F0DD         	call	_sprintf	;wreg free
 13665  015F52                     l19416:
 13666                           
 13667                           ;heartbeat_timer.c: 151: };heartbeat_timer.c: 153: strcat(return_string, buff);
 13668  015F52  0E84               	movlw	low getStringSecondsAsTime@return_string
 13669  015F54  0102               	movlb	2	; () banked
 13670  015F56  6F00               	movwf	strcat@to& (0+255),b
 13671  015F58  0E03               	movlw	high getStringSecondsAsTime@return_string
 13672  015F5A  6F01               	movwf	(strcat@to+1)& (0+255),b
 13673  015F5C  0ED1               	movlw	low getStringSecondsAsTime@buff
 13674  015F5E  6F02               	movwf	strcat@from& (0+255),b
 13675  015F60  0E03               	movlw	high getStringSecondsAsTime@buff
 13676  015F62  6F03               	movwf	(strcat@from+1)& (0+255),b
 13677  015F64  EC69  F0DA         	call	_strcat	;wreg free
 13678  015F68                     l19418:
 13679                           
 13680                           ;heartbeat_timer.c: 155: };heartbeat_timer.c: 157: if (seconds > 0) {
 13681  015F68  0103               	movlb	3	; () banked
 13682  015F6A  51E6               	movf	getStringSecondsAsTime@seconds& (0+255),w,b
 13683  015F6C  B4D8               	btfsc	status,2,c
 13684  015F6E  D02B               	goto	l19428
 13685                           
 13686                           ; BSR set to: 3
 13687                           ;heartbeat_timer.c: 159: if (seconds == 1) {
 13688  015F70  05E6               	decf	getStringSecondsAsTime@seconds& (0+255),w,b
 13689  015F72  A4D8               	btfss	status,2,c
 13690  015F74  D00F               	goto	l19424
 13691                           
 13692                           ; BSR set to: 3
 13693                           ;heartbeat_timer.c: 161: sprintf(buff, "%d second", seconds);
 13694  015F76  0ED1               	movlw	low getStringSecondsAsTime@buff
 13695  015F78  0102               	movlb	2	; () banked
 13696  015F7A  6F8C               	movwf	sprintf@wh& (0+255),b
 13697  015F7C  0E03               	movlw	high getStringSecondsAsTime@buff
 13698  015F7E  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 13699  015F80  0E9C               	movlw	low STR_58
 13700  015F82  6F8E               	movwf	sprintf@f& (0+255),b
 13701  015F84  0EFE               	movlw	high STR_58
 13702  015F86  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 13703  015F88  C3E6  F290         	movff	getStringSecondsAsTime@seconds,?_sprintf+4
 13704  015F8C  6B91               	clrf	(?_sprintf+5)& (0+255),b
 13705  015F8E  EC0A  F0DD         	call	_sprintf	;wreg free
 13706                           
 13707                           ;heartbeat_timer.c: 163: }
 13708  015F92  D00E               	goto	l19426
 13709  015F94                     l19424:
 13710                           
 13711                           ; BSR set to: 3
 13712                           ;heartbeat_timer.c: 165: else {;heartbeat_timer.c: 167: sprintf(buff, "%d seconds", seco
      +                          nds);
 13713  015F94  0ED1               	movlw	low getStringSecondsAsTime@buff
 13714  015F96  0102               	movlb	2	; () banked
 13715  015F98  6F8C               	movwf	sprintf@wh& (0+255),b
 13716  015F9A  0E03               	movlw	high getStringSecondsAsTime@buff
 13717  015F9C  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 13718  015F9E  0E33               	movlw	low STR_59
 13719  015FA0  6F8E               	movwf	sprintf@f& (0+255),b
 13720  015FA2  0EFE               	movlw	high STR_59
 13721  015FA4  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 13722  015FA6  C3E6  F290         	movff	getStringSecondsAsTime@seconds,?_sprintf+4
 13723  015FAA  6B91               	clrf	(?_sprintf+5)& (0+255),b
 13724  015FAC  EC0A  F0DD         	call	_sprintf	;wreg free
 13725  015FB0                     l19426:
 13726                           
 13727                           ;heartbeat_timer.c: 169: };heartbeat_timer.c: 171: strcat(return_string, buff);
 13728  015FB0  0E84               	movlw	low getStringSecondsAsTime@return_string
 13729  015FB2  0102               	movlb	2	; () banked
 13730  015FB4  6F00               	movwf	strcat@to& (0+255),b
 13731  015FB6  0E03               	movlw	high getStringSecondsAsTime@return_string
 13732  015FB8  6F01               	movwf	(strcat@to+1)& (0+255),b
 13733  015FBA  0ED1               	movlw	low getStringSecondsAsTime@buff
 13734  015FBC  6F02               	movwf	strcat@from& (0+255),b
 13735  015FBE  0E03               	movlw	high getStringSecondsAsTime@buff
 13736  015FC0  6F03               	movwf	(strcat@from+1)& (0+255),b
 13737  015FC2  EC69  F0DA         	call	_strcat	;wreg free
 13738  015FC6                     l19428:
 13739                           
 13740                           ;heartbeat_timer.c: 173: };heartbeat_timer.c: 175: return return_string;
 13741  015FC6  0E84               	movlw	low getStringSecondsAsTime@return_string
 13742  015FC8  0102               	movlb	2	; () banked
 13743  015FCA  6F9F               	movwf	?_getStringSecondsAsTime& (0+255),b
 13744  015FCC  0E03               	movlw	high getStringSecondsAsTime@return_string
 13745  015FCE  6FA0               	movwf	(?_getStringSecondsAsTime+1)& (0+255),b
 13746                           
 13747                           ; BSR set to: 2
 13748  015FD0  0012               	return		;funcret
 13749  015FD2                     __end_of_getStringSecondsAsTime:
 13750                           	opt callstack 0
 13751                           
 13752 ;; *************** function _strcat *****************
 13753 ;; Defined at:
 13754 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcat.c"
 13755 ;; Parameters:    Size  Location     Type
 13756 ;;  to              2    0[BANK2 ] PTR unsigned char 
 13757 ;;		 -> terminalTextAttributes@print_string(16), getStringSecondsAsTime@return_string(40), 
 13758 ;;  from            2    2[BANK2 ] PTR const unsigned char 
 13759 ;;		 -> STR_328(2), STR_327(3), STR_326(3), STR_325(3), 
 13760 ;;		 -> STR_324(3), STR_323(3), STR_322(3), STR_321(3), 
 13761 ;;		 -> STR_320(3), STR_319(3), STR_318(2), STR_317(3), 
 13762 ;;		 -> STR_316(3), STR_315(3), STR_314(3), STR_313(3), 
 13763 ;;		 -> STR_312(3), STR_311(3), STR_310(3), STR_309(3), 
 13764 ;;		 -> STR_308(2), STR_307(2), STR_306(2), STR_305(2), 
 13765 ;;		 -> STR_304(2), STR_303(2), STR_302(2), STR_301(2), 
 13766 ;;		 -> getStringSecondsAsTime@buff(20), 
 13767 ;; Auto vars:     Size  Location     Type
 13768 ;;  cp              2    4[BANK2 ] PTR unsigned char 
 13769 ;;		 -> terminalTextAttributes@print_string(16), getStringSecondsAsTime@return_string(40), 
 13770 ;; Return value:  Size  Location     Type
 13771 ;;                  2    0[BANK2 ] PTR unsigned char 
 13772 ;; Registers used:
 13773 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13774 ;; Tracked objects:
 13775 ;;		On entry : 0/0
 13776 ;;		On exit  : 0/0
 13777 ;;		Unchanged: 0/0
 13778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13779 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13780 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13782 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13783 ;;Total ram usage:        6 bytes
 13784 ;; Hardware stack levels used:    1
 13785 ;; Hardware stack levels required when called:   11
 13786 ;; This function calls:
 13787 ;;		Nothing
 13788 ;; This function is called by:
 13789 ;;		_getStringSecondsAsTime
 13790 ;;		_terminalTextAttributes
 13791 ;; This function uses a non-reentrant model
 13792 ;;
 13793                           
 13794                           	psect	text10
 13795  01B4D2                     __ptext10:
 13796                           	opt callstack 0
 13797  01B4D2                     _strcat:
 13798                           	opt callstack 16
 13799                           
 13800                           ; BSR set to: 2
 13801                           ;incstack = 0
 13802  01B4D2  C200  F204         	movff	strcat@to,strcat@cp
 13803  01B4D6  C201  F205         	movff	strcat@to+1,strcat@cp+1
 13804  01B4DA  D003               	goto	l18576
 13805  01B4DC                     l18574:
 13806  01B4DC  0102               	movlb	2	; () banked
 13807  01B4DE  4B04               	infsnz	strcat@cp& (0+255),f,b
 13808  01B4E0  2B05               	incf	(strcat@cp+1)& (0+255),f,b
 13809  01B4E2                     l18576:
 13810  01B4E2  C204  FFD9         	movff	strcat@cp,fsr2l
 13811  01B4E6  C205  FFDA         	movff	strcat@cp+1,fsr2h
 13812  01B4EA  50DF               	movf	indf2,w,c
 13813  01B4EC  B4D8               	btfsc	status,2,c
 13814  01B4EE  D006               	goto	l18580
 13815  01B4F0  D7F5               	goto	l18574
 13816  01B4F2                     l18578:
 13817  01B4F2  0102               	movlb	2	; () banked
 13818  01B4F4  4B04               	infsnz	strcat@cp& (0+255),f,b
 13819  01B4F6  2B05               	incf	(strcat@cp+1)& (0+255),f,b
 13820  01B4F8  4B02               	infsnz	strcat@from& (0+255),f,b
 13821  01B4FA  2B03               	incf	(strcat@from+1)& (0+255),f,b
 13822  01B4FC                     l18580:
 13823  01B4FC  C202  FFF6         	movff	strcat@from,tblptrl
 13824  01B500  C203  FFF7         	movff	strcat@from+1,tblptrh
 13825  01B504  0E00               	movlw	low (__mediumconst shr (0+16))
 13826  01B506  6EF8               	movwf	tblptru,c
 13827  01B508  C204  FFD9         	movff	strcat@cp,fsr2l
 13828  01B50C  C205  FFDA         	movff	strcat@cp+1,fsr2h
 13829  01B510  0E0E               	movlw	(high __ramtop+-1)
 13830  01B512  64F7               	cpfsgt	tblptrh,c
 13831  01B514  D003               	bra	u23307
 13832  01B516  0008               	tblrd		*
 13833  01B518  50F5               	movf	tablat,w,c
 13834  01B51A  D005               	bra	u23300
 13835  01B51C                     u23307:
 13836  01B51C  CFF6 FFE9          	movff	tblptrl,fsr0l
 13837  01B520  CFF7 FFEA          	movff	tblptrh,fsr0h
 13838  01B524  50EF               	movf	indf0,w,c
 13839  01B526                     u23300:
 13840  01B526  6EDF               	movwf	indf2,c
 13841  01B528  50DF               	movf	indf2,w,c
 13842  01B52A  B4D8               	btfsc	status,2,c
 13843  01B52C  0012               	return	
 13844  01B52E  D7E1               	goto	l18578
 13845  01B530                     __end_of_strcat:
 13846                           	opt callstack 0
 13847                           
 13848 ;; *************** function _getNXQChargeStateString *****************
 13849 ;; Defined at:
 13850 ;;		line 9 in file "NXQ_charge_state.c"
 13851 ;; Parameters:    Size  Location     Type
 13852 ;;		None
 13853 ;; Auto vars:     Size  Location     Type
 13854 ;;		None
 13855 ;; Return value:  Size  Location     Type
 13856 ;;                  2    0[BANK2 ] PTR unsigned char 
 13857 ;; Registers used:
 13858 ;;		wreg, status,2, status,0
 13859 ;; Tracked objects:
 13860 ;;		On entry : 0/0
 13861 ;;		On exit  : 0/0
 13862 ;;		Unchanged: 0/0
 13863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13864 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13867 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13868 ;;Total ram usage:        2 bytes
 13869 ;; Hardware stack levels used:    1
 13870 ;; Hardware stack levels required when called:   11
 13871 ;; This function calls:
 13872 ;;		Nothing
 13873 ;; This function is called by:
 13874 ;;		_printCurrentMeasurements
 13875 ;; This function uses a non-reentrant model
 13876 ;;
 13877                           
 13878                           	psect	text11
 13879  01B530                     __ptext11:
 13880                           	opt callstack 0
 13881  01B530                     _getNXQChargeStateString:
 13882                           	opt callstack 16
 13883                           
 13884                           ;NXQ_charge_state.c: 11: switch (nxq_charge_state) {
 13885                           
 13886                           ;incstack = 0
 13887  01B530  D01E               	goto	l19354
 13888  01B532                     l19322:
 13889                           
 13890                           ; BSR set to: 1
 13891                           ;NXQ_charge_state.c: 14: return "idle";
 13892  01B532  0EAE               	movlw	low STR_13
 13893  01B534  0102               	movlb	2	; () banked
 13894  01B536  6F00               	movwf	?_getNXQChargeStateString& (0+255),b
 13895  01B538  0EFF               	movlw	high STR_13
 13896  01B53A  6F01               	movwf	(?_getNXQChargeStateString+1)& (0+255),b
 13897  01B53C  0012               	return	
 13898  01B53E                     l19328:
 13899                           
 13900                           ; BSR set to: 1
 13901                           ;NXQ_charge_state.c: 18: return "charging";
 13902  01B53E  0E31               	movlw	low STR_14
 13903  01B540  0102               	movlb	2	; () banked
 13904  01B542  6F00               	movwf	?_getNXQChargeStateString& (0+255),b
 13905  01B544  0EFF               	movlw	high STR_14
 13906  01B546  6F01               	movwf	(?_getNXQChargeStateString+1)& (0+255),b
 13907  01B548  0012               	return	
 13908  01B54A                     l19334:
 13909                           
 13910                           ; BSR set to: 1
 13911                           ;NXQ_charge_state.c: 22: return "fully charged";
 13912  01B54A  0ED3               	movlw	low STR_15
 13913  01B54C  0102               	movlb	2	; () banked
 13914  01B54E  6F00               	movwf	?_getNXQChargeStateString& (0+255),b
 13915  01B550  0EFC               	movlw	high STR_15
 13916  01B552  6F01               	movwf	(?_getNXQChargeStateString+1)& (0+255),b
 13917  01B554  0012               	return	
 13918  01B556                     l19340:
 13919                           
 13920                           ; BSR set to: 1
 13921                           ;NXQ_charge_state.c: 26: return "error";
 13922  01B556  0E8A               	movlw	low STR_16
 13923  01B558  0102               	movlb	2	; () banked
 13924  01B55A  6F00               	movwf	?_getNXQChargeStateString& (0+255),b
 13925  01B55C  0EFF               	movlw	high STR_16
 13926  01B55E  6F01               	movwf	(?_getNXQChargeStateString+1)& (0+255),b
 13927  01B560  0012               	return	
 13928  01B562                     l19346:
 13929                           
 13930                           ; BSR set to: 1
 13931                           ;NXQ_charge_state.c: 30: return "undefined";
 13932  01B562  0EC4               	movlw	low STR_17
 13933  01B564  0102               	movlb	2	; () banked
 13934  01B566  6F00               	movwf	?_getNXQChargeStateString& (0+255),b
 13935  01B568  0EFE               	movlw	high STR_17
 13936  01B56A  6F01               	movwf	(?_getNXQChargeStateString+1)& (0+255),b
 13937  01B56C  0012               	return	
 13938  01B56E                     l19354:
 13939  01B56E  0101               	movlb	1	; () banked
 13940  01B570  5195               	movf	_nxq_charge_state& (0+255),w,b
 13941                           
 13942                           ; Switch size 1, requested type "simple"
 13943                           ; Number of cases is 4, Range of values is 0 to 3
 13944                           ; switch strategies available:
 13945                           ; Name         Instructions Cycles
 13946                           ; simple_byte           13     7 (average)
 13947                           ;	Chosen strategy is simple_byte
 13948  01B572  0A00               	xorlw	0	; case 0
 13949  01B574  B4D8               	btfsc	status,2,c
 13950  01B576  D7DD               	goto	l19322
 13951  01B578  0A01               	xorlw	1	; case 1
 13952  01B57A  B4D8               	btfsc	status,2,c
 13953  01B57C  D7E0               	goto	l19328
 13954  01B57E  0A03               	xorlw	3	; case 2
 13955  01B580  B4D8               	btfsc	status,2,c
 13956  01B582  D7E3               	goto	l19334
 13957  01B584  0A01               	xorlw	1	; case 3
 13958  01B586  B4D8               	btfsc	status,2,c
 13959  01B588  D7E6               	goto	l19340
 13960  01B58A  D7EB               	goto	l19346
 13961  01B58C                     __end_of_getNXQChargeStateString:
 13962                           	opt callstack 0
 13963                           
 13964 ;; *************** function _getUserID *****************
 13965 ;; Defined at:
 13966 ;;		line 72 in file "device_IDs.c"
 13967 ;; Parameters:    Size  Location     Type
 13968 ;;  inputUserID     1    wreg     unsigned char 
 13969 ;; Auto vars:     Size  Location     Type
 13970 ;;  inputUserID     1   17[BANK2 ] unsigned char 
 13971 ;;  initialOffse    4    0        unsigned long 
 13972 ;;  IDOffset        1   18[BANK2 ] unsigned char 
 13973 ;; Return value:  Size  Location     Type
 13974 ;;                  2   11[BANK2 ] unsigned int 
 13975 ;; Registers used:
 13976 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13977 ;; Tracked objects:
 13978 ;;		On entry : 0/0
 13979 ;;		On exit  : 0/0
 13980 ;;		Unchanged: 0/0
 13981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13982 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13983 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13985 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13986 ;;Total ram usage:        8 bytes
 13987 ;; Hardware stack levels used:    1
 13988 ;; Hardware stack levels required when called:   13
 13989 ;; This function calls:
 13990 ;;		_FLASH_ReadWord
 13991 ;; This function is called by:
 13992 ;;		_ringBufferLUT
 13993 ;; This function uses a non-reentrant model
 13994 ;;
 13995                           
 13996                           	psect	text12
 13997  01BFA2                     __ptext12:
 13998                           	opt callstack 0
 13999  01BFA2                     _getUserID:
 14000                           	opt callstack 15
 14001                           
 14002                           ; BSR set to: 2
 14003                           ;incstack = 0
 14004                           ;getUserID@inputUserID stored from wreg
 14005  01BFA2  0102               	movlb	2	; () banked
 14006  01BFA4  6F11               	movwf	getUserID@inputUserID& (0+255),b
 14007                           
 14008                           ;device_IDs.c: 78: uint8_t IDOffset = inputUserID * 2;
 14009  01BFA6  0102               	movlb	2	; () banked
 14010  01BFA8  5111               	movf	getUserID@inputUserID& (0+255),w,b
 14011  01BFAA  0D02               	mullw	2
 14012  01BFAC  CFF3 F212          	movff	prodl,getUserID@IDOffset
 14013                           
 14014                           ; BSR set to: 2
 14015                           ;device_IDs.c: 80: return FLASH_ReadWord(initialOffset + IDOffset);
 14016  01BFB0  0E00               	movlw	0
 14017  01BFB2  2512               	addwf	getUserID@IDOffset& (0+255),w,b
 14018  01BFB4  6F04               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 14019  01BFB6  6B05               	clrf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 14020  01BFB8  0E00               	movlw	0
 14021  01BFBA  2305               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),f,b
 14022  01BFBC  6B06               	clrf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 14023  01BFBE  0E20               	movlw	32
 14024  01BFC0  2306               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),f,b
 14025  01BFC2  6B07               	clrf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 14026  01BFC4  0E00               	movlw	0
 14027  01BFC6  2307               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),f,b
 14028  01BFC8  EC45  F0DE         	call	_FLASH_ReadWord	;wreg free
 14029  01BFCC  C204  F20B         	movff	?_FLASH_ReadWord,?_getUserID
 14030  01BFD0  C205  F20C         	movff	?_FLASH_ReadWord+1,?_getUserID+1
 14031  01BFD4  0012               	return		;funcret
 14032  01BFD6                     __end_of_getUserID:
 14033                           	opt callstack 0
 14034                           
 14035 ;; *************** function _getDeviceIDString *****************
 14036 ;; Defined at:
 14037 ;;		line 34 in file "device_IDs.c"
 14038 ;; Parameters:    Size  Location     Type
 14039 ;;  inputDevID      2   13[BANK2 ] unsigned int 
 14040 ;; Auto vars:     Size  Location     Type
 14041 ;;		None
 14042 ;; Return value:  Size  Location     Type
 14043 ;;                  2   13[BANK2 ] PTR inline unsigned char
 14044 ;; Registers used:
 14045 ;;		wreg, status,2, status,0
 14046 ;; Tracked objects:
 14047 ;;		On entry : 0/0
 14048 ;;		On exit  : 0/0
 14049 ;;		Unchanged: 0/0
 14050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14051 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14053 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14054 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14055 ;;Total ram usage:        4 bytes
 14056 ;; Hardware stack levels used:    1
 14057 ;; Hardware stack levels required when called:   11
 14058 ;; This function calls:
 14059 ;;		Nothing
 14060 ;; This function is called by:
 14061 ;;		_ringBufferLUT
 14062 ;; This function uses a non-reentrant model
 14063 ;;
 14064                           
 14065                           	psect	text13
 14066  01AC9E                     __ptext13:
 14067                           	opt callstack 0
 14068  01AC9E                     _getDeviceIDString:
 14069                           	opt callstack 17
 14070                           
 14071                           ;device_IDs.c: 38: switch (inputDevID) {
 14072                           
 14073                           ;incstack = 0
 14074  01AC9E  D023               	goto	l20030
 14075  01ACA0                     l19986:
 14076                           
 14077                           ; BSR set to: 2
 14078                           ;device_IDs.c: 41: return "PIC18F67K40";
 14079  01ACA0  0EC4               	movlw	low STR_43
 14080  01ACA2  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 14081  01ACA4  0EFD               	movlw	high STR_43
 14082  01ACA6  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 14083  01ACA8  0012               	return	
 14084  01ACAA                     l19992:
 14085                           
 14086                           ; BSR set to: 2
 14087                           ;device_IDs.c: 45: return "PIC18LF67K40";
 14088  01ACAA  0E63               	movlw	low STR_44
 14089  01ACAC  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 14090  01ACAE  0EFD               	movlw	high STR_44
 14091  01ACB0  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 14092  01ACB2  0012               	return	
 14093  01ACB4                     l19998:
 14094                           
 14095                           ; BSR set to: 2
 14096                           ;device_IDs.c: 49: return "PIC18F27K40";
 14097  01ACB4  0EAC               	movlw	low STR_45
 14098  01ACB6  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 14099  01ACB8  0EFD               	movlw	high STR_45
 14100  01ACBA  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 14101  01ACBC  0012               	return	
 14102  01ACBE                     l20004:
 14103                           
 14104                           ; BSR set to: 2
 14105                           ;device_IDs.c: 53: return "PIC18F47K40";
 14106  01ACBE  0EB8               	movlw	low STR_46
 14107  01ACC0  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 14108  01ACC2  0EFD               	movlw	high STR_46
 14109  01ACC4  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 14110  01ACC6  0012               	return	
 14111  01ACC8                     l20010:
 14112                           
 14113                           ; BSR set to: 2
 14114                           ;device_IDs.c: 57: return "PIC18LF27K40";
 14115  01ACC8  0E49               	movlw	low STR_47
 14116  01ACCA  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 14117  01ACCC  0EFD               	movlw	high STR_47
 14118  01ACCE  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 14119  01ACD0  0012               	return	
 14120  01ACD2                     l20016:
 14121                           
 14122                           ; BSR set to: 2
 14123                           ;device_IDs.c: 61: return "PIC18LF47K40";
 14124  01ACD2  0E56               	movlw	low STR_48
 14125  01ACD4  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 14126  01ACD6  0EFD               	movlw	high STR_48
 14127  01ACD8  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 14128  01ACDA  0012               	return	
 14129  01ACDC                     l20022:
 14130                           
 14131                           ; BSR set to: 2
 14132                           ;device_IDs.c: 65: return "Undefined";
 14133  01ACDC  0EBA               	movlw	low STR_22
 14134  01ACDE  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 14135  01ACE0  0EFE               	movlw	high STR_22
 14136  01ACE2  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 14137  01ACE4  0012               	return	
 14138  01ACE6                     l20030:
 14139  01ACE6  C20D  F20F         	movff	getDeviceIDString@inputDevID,??_getDeviceIDString
 14140  01ACEA  C20E  F210         	movff	getDeviceIDString@inputDevID+1,??_getDeviceIDString+1
 14141                           
 14142                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
 14143                           ; Switch size 1, requested type "simple"
 14144                           ; Number of cases is 3, Range of values is 105 to 107
 14145                           ; switch strategies available:
 14146                           ; Name         Instructions Cycles
 14147                           ; simple_byte           10     6 (average)
 14148                           ;	Chosen strategy is simple_byte
 14149  01ACEE  0102               	movlb	2	; () banked
 14150  01ACF0  5110               	movf	(??_getDeviceIDString+1)& (0+255),w,b
 14151  01ACF2  0A69               	xorlw	105	; case 105
 14152  01ACF4  B4D8               	btfsc	status,2,c
 14153  01ACF6  D007               	goto	l22744
 14154  01ACF8  0A03               	xorlw	3	; case 106
 14155  01ACFA  B4D8               	btfsc	status,2,c
 14156  01ACFC  D00F               	goto	l22746
 14157  01ACFE  0A01               	xorlw	1	; case 107
 14158  01AD00  B4D8               	btfsc	status,2,c
 14159  01AD02  D014               	goto	l22748
 14160  01AD04  D7EB               	goto	l20022
 14161  01AD06                     l22744:
 14162                           
 14163                           ; BSR set to: 2
 14164                           ; Switch size 1, requested type "simple"
 14165                           ; Number of cases is 3, Range of values is 0 to 224
 14166                           ; switch strategies available:
 14167                           ; Name         Instructions Cycles
 14168                           ; simple_byte           10     6 (average)
 14169                           ;	Chosen strategy is simple_byte
 14170  01AD06  510F               	movf	??_getDeviceIDString& (0+255),w,b
 14171  01AD08  0A00               	xorlw	0	; case 0
 14172  01AD0A  B4D8               	btfsc	status,2,c
 14173  01AD0C  D7D8               	goto	l20004
 14174  01AD0E  0A60               	xorlw	96	; case 96
 14175  01AD10  B4D8               	btfsc	status,2,c
 14176  01AD12  D7D0               	goto	l19998
 14177  01AD14  0A80               	xorlw	128	; case 224
 14178  01AD16  B4D8               	btfsc	status,2,c
 14179  01AD18  D7DC               	goto	l20016
 14180  01AD1A  D7E0               	goto	l20022
 14181  01AD1C                     l22746:
 14182                           
 14183                           ; BSR set to: 2
 14184                           ; Switch size 1, requested type "simple"
 14185                           ; Number of cases is 2, Range of values is 64 to 192
 14186                           ; switch strategies available:
 14187                           ; Name         Instructions Cycles
 14188                           ; simple_byte            7     4 (average)
 14189                           ;	Chosen strategy is simple_byte
 14190  01AD1C  510F               	movf	??_getDeviceIDString& (0+255),w,b
 14191  01AD1E  0A40               	xorlw	64	; case 64
 14192  01AD20  B4D8               	btfsc	status,2,c
 14193  01AD22  D7D2               	goto	l20010
 14194  01AD24  0A80               	xorlw	128	; case 192
 14195  01AD26  B4D8               	btfsc	status,2,c
 14196  01AD28  D7BB               	goto	l19986
 14197  01AD2A  D7D8               	goto	l20022
 14198  01AD2C                     l22748:
 14199                           
 14200                           ; BSR set to: 2
 14201                           ; Switch size 1, requested type "simple"
 14202                           ; Number of cases is 1, Range of values is 32 to 32
 14203                           ; switch strategies available:
 14204                           ; Name         Instructions Cycles
 14205                           ; simple_byte            4     3 (average)
 14206                           ;	Chosen strategy is simple_byte
 14207  01AD2C  510F               	movf	??_getDeviceIDString& (0+255),w,b
 14208  01AD2E  0A20               	xorlw	32	; case 32
 14209  01AD30  B4D8               	btfsc	status,2,c
 14210  01AD32  D7BB               	goto	l19992
 14211  01AD34  D7D3               	goto	l20022
 14212  01AD36                     __end_of_getDeviceIDString:
 14213                           	opt callstack 0
 14214                           
 14215 ;; *************** function _getCauseOfResetString *****************
 14216 ;; Defined at:
 14217 ;;		line 87 in file "cause_of_reset.c"
 14218 ;; Parameters:    Size  Location     Type
 14219 ;;  r               1    wreg     enum E9577
 14220 ;; Auto vars:     Size  Location     Type
 14221 ;;  r               1    2[BANK2 ] enum E9577
 14222 ;; Return value:  Size  Location     Type
 14223 ;;                  2    0[BANK2 ] PTR inline unsigned char
 14224 ;; Registers used:
 14225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14226 ;; Tracked objects:
 14227 ;;		On entry : 0/0
 14228 ;;		On exit  : 0/0
 14229 ;;		Unchanged: 0/0
 14230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14231 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14232 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14234 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14235 ;;Total ram usage:        3 bytes
 14236 ;; Hardware stack levels used:    1
 14237 ;; Hardware stack levels required when called:   11
 14238 ;; This function calls:
 14239 ;;		Nothing
 14240 ;; This function is called by:
 14241 ;;		_main
 14242 ;;		_ringBufferLUT
 14243 ;; This function uses a non-reentrant model
 14244 ;;
 14245                           
 14246                           	psect	text14
 14247  01C070                     __ptext14:
 14248                           	opt callstack 0
 14249  01C070                     _getCauseOfResetString:
 14250                           	opt callstack 17
 14251                           
 14252                           ; BSR set to: 2
 14253                           ;incstack = 0
 14254                           ;getCauseOfResetString@r stored from wreg
 14255  01C070  0102               	movlb	2	; () banked
 14256  01C072  6F02               	movwf	getCauseOfResetString@r& (0+255),b
 14257                           
 14258                           ;cause_of_reset.c: 90: static char *strings[] = {;cause_of_reset.c: 91: "Undefined Reset
      +                          ",;cause_of_reset.c: 92: "Power On Reset",;cause_of_reset.c: 93: "Brown Out Reset",;caus
      +                          e_of_reset.c: 94: "Master Clear Reset",;cause_of_reset.c: 95: "Watch Dog Timer Violation
      +                           Reset",;cause_of_reset.c: 96: "Windowed Watch Dog Timer Violation Reset",;cause_of_rese
      +                          t.c: 97: "RESET Instruction Executed",;cause_of_reset.c: 98: "Stack Overflow Reset",;cau
      +                          se_of_reset.c: 99: "Stack Underflow Reset",;cause_of_reset.c: 100: };;cause_of_reset.c: 
      +                          103: if (r <= 8) {
 14259  01C074  0E09               	movlw	9
 14260  01C076  0102               	movlb	2	; () banked
 14261  01C078  6102               	cpfslt	getCauseOfResetString@r& (0+255),b
 14262  01C07A  D00D               	goto	l19928
 14263                           
 14264                           ; BSR set to: 2
 14265                           ;cause_of_reset.c: 105: return strings[r];
 14266  01C07C  5102               	movf	getCauseOfResetString@r& (0+255),w,b
 14267  01C07E  0D02               	mullw	2
 14268  01C080  0EA9               	movlw	low getCauseOfResetString@strings
 14269  01C082  24F3               	addwf	prodl,w,c
 14270  01C084  6ED9               	movwf	fsr2l,c
 14271  01C086  0E01               	movlw	high getCauseOfResetString@strings
 14272  01C088  20F4               	addwfc	prodh,w,c
 14273  01C08A  6EDA               	movwf	fsr2h,c
 14274  01C08C  CFDE F200          	movff	postinc2,?_getCauseOfResetString
 14275  01C090  CFDD F201          	movff	postdec2,?_getCauseOfResetString+1
 14276  01C094  0012               	return	
 14277  01C096                     l19928:
 14278                           
 14279                           ; BSR set to: 2
 14280                           ;cause_of_reset.c: 109: else {;cause_of_reset.c: 111: return "Undefined Reset";
 14281  01C096  0EA2               	movlw	low STR_23
 14282  01C098  6F00               	movwf	?_getCauseOfResetString& (0+255),b
 14283  01C09A  0EFB               	movlw	high STR_23
 14284  01C09C  6F01               	movwf	(?_getCauseOfResetString+1)& (0+255),b
 14285                           
 14286                           ; BSR set to: 2
 14287  01C09E  0012               	return		;funcret
 14288  01C0A0                     __end_of_getCauseOfResetString:
 14289                           	opt callstack 0
 14290                           
 14291 ;; *************** function _clearUARTErrors *****************
 14292 ;; Defined at:
 14293 ;;		line 85 in file "error_handling.c"
 14294 ;; Parameters:    Size  Location     Type
 14295 ;;		None
 14296 ;; Auto vars:     Size  Location     Type
 14297 ;;		None
 14298 ;; Return value:  Size  Location     Type
 14299 ;;                  1    wreg      void 
 14300 ;; Registers used:
 14301 ;;		wreg, status,2, status,0, cstack
 14302 ;; Tracked objects:
 14303 ;;		On entry : 0/0
 14304 ;;		On exit  : 0/0
 14305 ;;		Unchanged: 0/0
 14306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14311 ;;Total ram usage:        0 bytes
 14312 ;; Hardware stack levels used:    1
 14313 ;; Hardware stack levels required when called:   13
 14314 ;; This function calls:
 14315 ;;		_updateErrorLEDs
 14316 ;; This function is called by:
 14317 ;;		_ringBufferLUT
 14318 ;; This function uses a non-reentrant model
 14319 ;;
 14320                           
 14321                           	psect	text15
 14322  01C7EC                     __ptext15:
 14323                           	opt callstack 0
 14324  01C7EC                     _clearUARTErrors:
 14325                           	opt callstack 15
 14326                           
 14327                           ;error_handling.c: 88: error_handler.USB_UART_COMM_error_flag = 0;
 14328                           
 14329                           ; BSR set to: 2
 14330                           ;incstack = 0
 14331  01C7EC  0E00               	movlw	0
 14332  01C7EE  0100               	movlb	0	; () banked
 14333  01C7F0  6FC0               	movwf	(_error_handler+7)& (0+255),b
 14334                           
 14335                           ; BSR set to: 0
 14336                           ;error_handling.c: 90: updateErrorLEDs();
 14337  01C7F2  EC76  F0DD         	call	_updateErrorLEDs	;wreg free
 14338  01C7F6  0012               	return		;funcret
 14339  01C7F8                     __end_of_clearUARTErrors:
 14340                           	opt callstack 0
 14341                           
 14342 ;; *************** function _clearI2CErrors *****************
 14343 ;; Defined at:
 14344 ;;		line 95 in file "error_handling.c"
 14345 ;; Parameters:    Size  Location     Type
 14346 ;;		None
 14347 ;; Auto vars:     Size  Location     Type
 14348 ;;		None
 14349 ;; Return value:  Size  Location     Type
 14350 ;;                  1    wreg      void 
 14351 ;; Registers used:
 14352 ;;		wreg, status,2, status,0, cstack
 14353 ;; Tracked objects:
 14354 ;;		On entry : 0/0
 14355 ;;		On exit  : 0/0
 14356 ;;		Unchanged: 0/0
 14357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14362 ;;Total ram usage:        0 bytes
 14363 ;; Hardware stack levels used:    1
 14364 ;; Hardware stack levels required when called:   13
 14365 ;; This function calls:
 14366 ;;		_updateErrorLEDs
 14367 ;; This function is called by:
 14368 ;;		_ringBufferLUT
 14369 ;; This function uses a non-reentrant model
 14370 ;;
 14371                           
 14372                           	psect	text16
 14373  01C4D2                     __ptext16:
 14374                           	opt callstack 0
 14375  01C4D2                     _clearI2CErrors:
 14376                           	opt callstack 15
 14377                           
 14378                           ;error_handling.c: 97: error_handler.I2C_Ambient_Temp_Sense_error_flag = 0;
 14379                           
 14380                           ;incstack = 0
 14381  01C4D2  0E00               	movlw	0
 14382  01C4D4  0100               	movlb	0	; () banked
 14383  01C4D6  6FBF               	movwf	(_error_handler+6)& (0+255),b
 14384                           
 14385                           ;error_handling.c: 98: error_handler.I2C_General_error_flag = 0;
 14386  01C4D8  0E00               	movlw	0
 14387  01C4DA  6FBB               	movwf	(_error_handler+2)& (0+255),b
 14388                           
 14389                           ;error_handling.c: 99: error_handler.I2C_OLED_error_flag = 0;
 14390  01C4DC  0E00               	movlw	0
 14391  01C4DE  6FBC               	movwf	(_error_handler+3)& (0+255),b
 14392                           
 14393                           ;error_handling.c: 100: error_handler.I2C_POS5_Temp_Sense_error_flag = 0;
 14394  01C4E0  0E00               	movlw	0
 14395  01C4E2  6FBE               	movwf	(_error_handler+5)& (0+255),b
 14396                           
 14397                           ;error_handling.c: 101: error_handler.I2C_QI_Temp_Sense_error_flag = 0;
 14398  01C4E4  0E00               	movlw	0
 14399  01C4E6  6FBD               	movwf	(_error_handler+4)& (0+255),b
 14400                           
 14401                           ; BSR set to: 0
 14402                           ;error_handling.c: 103: updateErrorLEDs();
 14403  01C4E8  EC76  F0DD         	call	_updateErrorLEDs	;wreg free
 14404  01C4EC  0012               	return		;funcret
 14405  01C4EE                     __end_of_clearI2CErrors:
 14406                           	opt callstack 0
 14407                           
 14408 ;; *************** function _clearADCErrors *****************
 14409 ;; Defined at:
 14410 ;;		line 74 in file "error_handling.c"
 14411 ;; Parameters:    Size  Location     Type
 14412 ;;		None
 14413 ;; Auto vars:     Size  Location     Type
 14414 ;;		None
 14415 ;; Return value:  Size  Location     Type
 14416 ;;                  1    wreg      void 
 14417 ;; Registers used:
 14418 ;;		wreg, status,2, status,0, cstack
 14419 ;; Tracked objects:
 14420 ;;		On entry : 0/0
 14421 ;;		On exit  : 0/0
 14422 ;;		Unchanged: 0/0
 14423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14428 ;;Total ram usage:        0 bytes
 14429 ;; Hardware stack levels used:    1
 14430 ;; Hardware stack levels required when called:   13
 14431 ;; This function calls:
 14432 ;;		_updateErrorLEDs
 14433 ;; This function is called by:
 14434 ;;		_ringBufferLUT
 14435 ;; This function uses a non-reentrant model
 14436 ;;
 14437                           
 14438                           	psect	text17
 14439  01C6CE                     __ptext17:
 14440                           	opt callstack 0
 14441  01C6CE                     _clearADCErrors:
 14442                           	opt callstack 15
 14443                           
 14444                           ;error_handling.c: 77: error_handler.FVR_ADC_error_flag = 0;
 14445                           
 14446                           ;incstack = 0
 14447  01C6CE  0E00               	movlw	0
 14448  01C6D0  0100               	movlb	0	; () banked
 14449  01C6D2  6FB9               	movwf	_error_handler& (0+255),b
 14450                           
 14451                           ;error_handling.c: 78: error_handler.ADC_general_error_flag = 0;
 14452  01C6D4  0E00               	movlw	0
 14453  01C6D6  6FBA               	movwf	(_error_handler+1)& (0+255),b
 14454                           
 14455                           ; BSR set to: 0
 14456                           ;error_handling.c: 80: updateErrorLEDs();
 14457  01C6D8  EC76  F0DD         	call	_updateErrorLEDs	;wreg free
 14458  01C6DC  0012               	return		;funcret
 14459  01C6DE                     __end_of_clearADCErrors:
 14460                           	opt callstack 0
 14461                           
 14462 ;; *************** function _updateErrorLEDs *****************
 14463 ;; Defined at:
 14464 ;;		line 60 in file "error_handling.c"
 14465 ;; Parameters:    Size  Location     Type
 14466 ;;		None
 14467 ;; Auto vars:     Size  Location     Type
 14468 ;;		None
 14469 ;; Return value:  Size  Location     Type
 14470 ;;                  1    wreg      void 
 14471 ;; Registers used:
 14472 ;;		wreg, status,2, status,0, cstack
 14473 ;; Tracked objects:
 14474 ;;		On entry : 0/0
 14475 ;;		On exit  : 0/0
 14476 ;;		Unchanged: 0/0
 14477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14480 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14481 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14482 ;;Total ram usage:        1 bytes
 14483 ;; Hardware stack levels used:    1
 14484 ;; Hardware stack levels required when called:   12
 14485 ;; This function calls:
 14486 ;;		_getADCError
 14487 ;;		_getI2CError
 14488 ;;		_getUARTError
 14489 ;; This function is called by:
 14490 ;;		_main
 14491 ;;		_clearADCErrors
 14492 ;;		_clearUARTErrors
 14493 ;;		_clearI2CErrors
 14494 ;; This function uses a non-reentrant model
 14495 ;;
 14496                           
 14497                           	psect	text18
 14498  01BAEC                     __ptext18:
 14499                           	opt callstack 0
 14500  01BAEC                     _updateErrorLEDs:
 14501                           	opt callstack 18
 14502                           
 14503                           ;error_handling.c: 63: LATBbits.LATB7 = getADCError();
 14504                           
 14505                           ;incstack = 0
 14506  01BAEC  ECEF  F0E2         	call	_getADCError	;wreg free
 14507  01BAF0  0102               	movlb	2	; () banked
 14508  01BAF2  6F00               	movwf	??_updateErrorLEDs& (0+255),b
 14509  01BAF4  3300               	rrcf	??_updateErrorLEDs& (0+255),f,b
 14510  01BAF6  3300               	rrcf	??_updateErrorLEDs& (0+255),f,b
 14511  01BAF8  5084               	movf	3972,w,c	;volatile
 14512  01BAFA  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 14513  01BAFC  0B7F               	andlw	-129
 14514  01BAFE  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 14515  01BB00  6E84               	movwf	3972,c	;volatile
 14516                           
 14517                           ;error_handling.c: 66: LATCbits.LATC5 = getI2CError();
 14518  01BB02  EC1A  F0E1         	call	_getI2CError	;wreg free
 14519  01BB06  0102               	movlb	2	; () banked
 14520  01BB08  6F00               	movwf	??_updateErrorLEDs& (0+255),b
 14521  01BB0A  3B00               	swapf	??_updateErrorLEDs& (0+255),f,b
 14522  01BB0C  4700               	rlncf	??_updateErrorLEDs& (0+255),f,b
 14523  01BB0E  5085               	movf	3973,w,c	;volatile
 14524  01BB10  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 14525  01BB12  0BDF               	andlw	-33
 14526  01BB14  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 14527  01BB16  6E85               	movwf	3973,c	;volatile
 14528                           
 14529                           ;error_handling.c: 69: LATCbits.LATC6 = getUARTError();
 14530  01BB18  EC2B  F0E4         	call	_getUARTError	;wreg free
 14531  01BB1C  0102               	movlb	2	; () banked
 14532  01BB1E  6F00               	movwf	??_updateErrorLEDs& (0+255),b
 14533  01BB20  3B00               	swapf	??_updateErrorLEDs& (0+255),f,b
 14534  01BB22  4700               	rlncf	??_updateErrorLEDs& (0+255),f,b
 14535  01BB24  4700               	rlncf	??_updateErrorLEDs& (0+255),f,b
 14536  01BB26  5085               	movf	3973,w,c	;volatile
 14537  01BB28  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 14538  01BB2A  0BBF               	andlw	-65
 14539  01BB2C  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 14540  01BB2E  6E85               	movwf	3973,c	;volatile
 14541                           
 14542                           ; BSR set to: 2
 14543  01BB30  0012               	return		;funcret
 14544  01BB32                     __end_of_updateErrorLEDs:
 14545                           	opt callstack 0
 14546                           
 14547 ;; *************** function _getUARTError *****************
 14548 ;; Defined at:
 14549 ;;		line 31 in file "error_handling.c"
 14550 ;; Parameters:    Size  Location     Type
 14551 ;;		None
 14552 ;; Auto vars:     Size  Location     Type
 14553 ;;		None
 14554 ;; Return value:  Size  Location     Type
 14555 ;;                  1    wreg      unsigned char 
 14556 ;; Registers used:
 14557 ;;		wreg, status,2
 14558 ;; Tracked objects:
 14559 ;;		On entry : 0/0
 14560 ;;		On exit  : 0/0
 14561 ;;		Unchanged: 0/0
 14562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14567 ;;Total ram usage:        0 bytes
 14568 ;; Hardware stack levels used:    1
 14569 ;; Hardware stack levels required when called:   11
 14570 ;; This function calls:
 14571 ;;		Nothing
 14572 ;; This function is called by:
 14573 ;;		_updateErrorLEDs
 14574 ;;		_printErrorHandlerStatus
 14575 ;; This function uses a non-reentrant model
 14576 ;;
 14577                           
 14578                           	psect	text19
 14579  01C856                     __ptext19:
 14580                           	opt callstack 0
 14581  01C856                     _getUARTError:
 14582                           	opt callstack 18
 14583                           
 14584                           ;error_handling.c: 33: return error_handler.USB_UART_COMM_error_flag;
 14585                           
 14586                           ; BSR set to: 2
 14587                           ;incstack = 0
 14588  01C856  0100               	movlb	0	; () banked
 14589  01C858  51C0               	movf	(_error_handler+7)& (0+255),w,b
 14590                           
 14591                           ; BSR set to: 0
 14592  01C85A  0012               	return		;funcret
 14593  01C85C                     __end_of_getUARTError:
 14594                           	opt callstack 0
 14595                           
 14596 ;; *************** function _getI2CError *****************
 14597 ;; Defined at:
 14598 ;;		line 38 in file "error_handling.c"
 14599 ;; Parameters:    Size  Location     Type
 14600 ;;		None
 14601 ;; Auto vars:     Size  Location     Type
 14602 ;;		None
 14603 ;; Return value:  Size  Location     Type
 14604 ;;                  1    wreg      unsigned char 
 14605 ;; Registers used:
 14606 ;;		wreg, status,2
 14607 ;; Tracked objects:
 14608 ;;		On entry : 0/0
 14609 ;;		On exit  : 0/0
 14610 ;;		Unchanged: 0/0
 14611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14616 ;;Total ram usage:        0 bytes
 14617 ;; Hardware stack levels used:    1
 14618 ;; Hardware stack levels required when called:   11
 14619 ;; This function calls:
 14620 ;;		Nothing
 14621 ;; This function is called by:
 14622 ;;		_updateErrorLEDs
 14623 ;;		_printErrorHandlerStatus
 14624 ;; This function uses a non-reentrant model
 14625 ;;
 14626                           
 14627                           	psect	text20
 14628  01C234                     __ptext20:
 14629                           	opt callstack 0
 14630  01C234                     _getI2CError:
 14631                           	opt callstack 18
 14632                           
 14633                           ;error_handling.c: 41: if ( error_handler.I2C_General_error_flag ||;error_handling.c: 42
      +                          : error_handler.I2C_Ambient_Temp_Sense_error_flag ||;error_handling.c: 43: error_handler
      +                          .I2C_OLED_error_flag ||;error_handling.c: 44: error_handler.I2C_POS5_Temp_Sense_error_fl
      +                          ag ||;error_handling.c: 45: error_handler.I2C_QI_Temp_Sense_error_flag ) {
 14634                           
 14635                           ; BSR set to: 0
 14636                           ;incstack = 0
 14637  01C234  0100               	movlb	0	; () banked
 14638  01C236  51BB               	movf	(_error_handler+2)& (0+255),w,b
 14639  01C238  A4D8               	btfss	status,2,c
 14640  01C23A  D00C               	goto	u23270
 14641                           
 14642                           ; BSR set to: 0
 14643  01C23C  51BF               	movf	(_error_handler+6)& (0+255),w,b
 14644  01C23E  A4D8               	btfss	status,2,c
 14645  01C240  D009               	goto	u23270
 14646                           
 14647                           ; BSR set to: 0
 14648  01C242  51BC               	movf	(_error_handler+3)& (0+255),w,b
 14649  01C244  A4D8               	btfss	status,2,c
 14650  01C246  D006               	goto	u23270
 14651                           
 14652                           ; BSR set to: 0
 14653  01C248  51BE               	movf	(_error_handler+5)& (0+255),w,b
 14654  01C24A  A4D8               	btfss	status,2,c
 14655  01C24C  D003               	goto	u23270
 14656                           
 14657                           ; BSR set to: 0
 14658  01C24E  51BD               	movf	(_error_handler+4)& (0+255),w,b
 14659  01C250  B4D8               	btfsc	status,2,c
 14660  01C252  D002               	goto	l18550
 14661  01C254                     u23270:
 14662                           
 14663                           ; BSR set to: 0
 14664                           ;error_handling.c: 47: return 1;
 14665  01C254  0E01               	movlw	1
 14666  01C256  0012               	return	
 14667  01C258                     l18550:
 14668                           
 14669                           ; BSR set to: 0
 14670                           ;error_handling.c: 51: else {;error_handling.c: 53: return 0;
 14671  01C258  0E00               	movlw	0
 14672                           
 14673                           ; BSR set to: 0
 14674  01C25A  0012               	return		;funcret
 14675  01C25C                     __end_of_getI2CError:
 14676                           	opt callstack 0
 14677                           
 14678 ;; *************** function _getADCError *****************
 14679 ;; Defined at:
 14680 ;;		line 12 in file "error_handling.c"
 14681 ;; Parameters:    Size  Location     Type
 14682 ;;		None
 14683 ;; Auto vars:     Size  Location     Type
 14684 ;;		None
 14685 ;; Return value:  Size  Location     Type
 14686 ;;                  1    wreg      unsigned char 
 14687 ;; Registers used:
 14688 ;;		wreg, status,2
 14689 ;; Tracked objects:
 14690 ;;		On entry : 0/0
 14691 ;;		On exit  : 0/0
 14692 ;;		Unchanged: 0/0
 14693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14698 ;;Total ram usage:        0 bytes
 14699 ;; Hardware stack levels used:    1
 14700 ;; Hardware stack levels required when called:   11
 14701 ;; This function calls:
 14702 ;;		Nothing
 14703 ;; This function is called by:
 14704 ;;		_updateErrorLEDs
 14705 ;;		_printErrorHandlerStatus
 14706 ;; This function uses a non-reentrant model
 14707 ;;
 14708                           
 14709                           	psect	text21
 14710  01C5DE                     __ptext21:
 14711                           	opt callstack 0
 14712  01C5DE                     _getADCError:
 14713                           	opt callstack 18
 14714                           
 14715                           ;error_handling.c: 15: if ( error_handler.ADC_general_error_flag ||;error_handling.c: 16
      +                          : error_handler.FVR_ADC_error_flag ) {
 14716                           
 14717                           ; BSR set to: 0
 14718                           ;incstack = 0
 14719  01C5DE  0100               	movlb	0	; () banked
 14720  01C5E0  51BA               	movf	(_error_handler+1)& (0+255),w,b
 14721  01C5E2  A4D8               	btfss	status,2,c
 14722  01C5E4  D003               	goto	u23220
 14723                           
 14724                           ; BSR set to: 0
 14725  01C5E6  51B9               	movf	_error_handler& (0+255),w,b
 14726  01C5E8  B4D8               	btfsc	status,2,c
 14727  01C5EA  D002               	goto	l18526
 14728  01C5EC                     u23220:
 14729                           
 14730                           ; BSR set to: 0
 14731                           ;error_handling.c: 18: return 1;
 14732  01C5EC  0E01               	movlw	1
 14733  01C5EE  0012               	return	
 14734  01C5F0                     l18526:
 14735                           
 14736                           ; BSR set to: 0
 14737                           ;error_handling.c: 22: else {;error_handling.c: 24: return 0;
 14738  01C5F0  0E00               	movlw	0
 14739                           
 14740                           ; BSR set to: 0
 14741  01C5F2  0012               	return		;funcret
 14742  01C5F4                     __end_of_getADCError:
 14743                           	opt callstack 0
 14744                           
 14745 ;; *************** function _EUSART2_Read *****************
 14746 ;; Defined at:
 14747 ;;		line 132 in file "mcc_generated_files/eusart2.c"
 14748 ;; Parameters:    Size  Location     Type
 14749 ;;		None
 14750 ;; Auto vars:     Size  Location     Type
 14751 ;;  readValue       1    0[BANK2 ] unsigned char 
 14752 ;; Return value:  Size  Location     Type
 14753 ;;                  1    wreg      unsigned char 
 14754 ;; Registers used:
 14755 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14756 ;; Tracked objects:
 14757 ;;		On entry : 0/0
 14758 ;;		On exit  : 0/0
 14759 ;;		Unchanged: 0/0
 14760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14762 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14764 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14765 ;;Total ram usage:        1 bytes
 14766 ;; Hardware stack levels used:    1
 14767 ;; Hardware stack levels required when called:   11
 14768 ;; This function calls:
 14769 ;;		Nothing
 14770 ;; This function is called by:
 14771 ;;		_terminal_ringBufferPull
 14772 ;;		_getch
 14773 ;; This function uses a non-reentrant model
 14774 ;;
 14775                           
 14776                           	psect	text22
 14777  01BD4E                     __ptext22:
 14778                           	opt callstack 0
 14779  01BD4E                     _EUSART2_Read:
 14780                           	opt callstack 18
 14781                           
 14782                           ;eusart2.c: 136: while(0 == eusart2RxCount)
 14783                           
 14784                           ; BSR set to: 0
 14785                           ;incstack = 0
 14786  01BD4E  D001               	goto	l20734
 14787  01BD50                     l115:
 14788                           
 14789                           ; BSR set to: 1
 14790  01BD50  0004               	clrwdt		;# 
 14791  01BD52                     l20734:
 14792  01BD52  0101               	movlb	1	; () banked
 14793  01BD54  5197               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 14794  01BD56  B4D8               	btfsc	status,2,c
 14795  01BD58  D7FB               	goto	l115
 14796                           
 14797                           ; BSR set to: 1
 14798                           ;eusart2.c: 139: };eusart2.c: 141: readValue = eusart2RxBuffer[eusart2RxTail++];
 14799  01BD5A  0E80               	movlw	low _eusart2RxBuffer
 14800  01BD5C  2598               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
 14801  01BD5E  6ED9               	movwf	fsr2l,c
 14802  01BD60  6ADA               	clrf	fsr2h,c
 14803  01BD62  0E04               	movlw	high _eusart2RxBuffer
 14804  01BD64  22DA               	addwfc	fsr2h,f,c
 14805  01BD66  50DF               	movf	indf2,w,c
 14806  01BD68  0102               	movlb	2	; () banked
 14807  01BD6A  6F00               	movwf	EUSART2_Read@readValue& (0+255),b
 14808                           
 14809                           ; BSR set to: 2
 14810  01BD6C  0101               	movlb	1	; () banked
 14811  01BD6E  2B98               	incf	_eusart2RxTail& (0+255),f,b	;volatile
 14812                           
 14813                           ; BSR set to: 1
 14814                           ;eusart2.c: 142: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 14815  01BD70  0E3F               	movlw	63
 14816  01BD72  6598               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
 14817  01BD74  D002               	goto	l20744
 14818                           
 14819                           ; BSR set to: 1
 14820                           ;eusart2.c: 143: {;eusart2.c: 144: eusart2RxTail = 0;
 14821  01BD76  0E00               	movlw	0
 14822  01BD78  6F98               	movwf	_eusart2RxTail& (0+255),b	;volatile
 14823  01BD7A                     l20744:
 14824                           
 14825                           ; BSR set to: 1
 14826                           ;eusart2.c: 145: };eusart2.c: 146: PIE3bits.RC2IE = 0;
 14827  01BD7A  010E               	movlb	14	; () banked
 14828  01BD7C  9FC5               	bcf	197,7,b	;volatile
 14829                           
 14830                           ; BSR set to: 14
 14831                           ;eusart2.c: 147: eusart2RxCount--;
 14832  01BD7E  0101               	movlb	1	; () banked
 14833  01BD80  0797               	decf	_eusart2RxCount& (0+255),f,b	;volatile
 14834                           
 14835                           ; BSR set to: 1
 14836                           ;eusart2.c: 148: PIE3bits.RC2IE = 1;
 14837  01BD82  010E               	movlb	14	; () banked
 14838  01BD84  8FC5               	bsf	197,7,b	;volatile
 14839                           
 14840                           ; BSR set to: 14
 14841                           ;eusart2.c: 150: return readValue;
 14842  01BD86  0102               	movlb	2	; () banked
 14843  01BD88  5100               	movf	EUSART2_Read@readValue& (0+255),w,b
 14844                           
 14845                           ; BSR set to: 2
 14846  01BD8A  0012               	return		;funcret
 14847  01BD8C                     __end_of_EUSART2_Read:
 14848                           	opt callstack 0
 14849                           
 14850 ;; *************** function _terminalSetCursorHome *****************
 14851 ;; Defined at:
 14852 ;;		line 17 in file "terminal_control.c"
 14853 ;; Parameters:    Size  Location     Type
 14854 ;;		None
 14855 ;; Auto vars:     Size  Location     Type
 14856 ;;		None
 14857 ;; Return value:  Size  Location     Type
 14858 ;;                  1    wreg      void 
 14859 ;; Registers used:
 14860 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14861 ;; Tracked objects:
 14862 ;;		On entry : 0/0
 14863 ;;		On exit  : 0/0
 14864 ;;		Unchanged: 0/0
 14865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14870 ;;Total ram usage:        0 bytes
 14871 ;; Hardware stack levels used:    1
 14872 ;; Hardware stack levels required when called:   15
 14873 ;; This function calls:
 14874 ;;		_printf
 14875 ;; This function is called by:
 14876 ;;		_main
 14877 ;;		_terminalPrintTestMessage
 14878 ;; This function uses a non-reentrant model
 14879 ;;
 14880                           
 14881                           	psect	text23
 14882  01C6DE                     __ptext23:
 14883                           	opt callstack 0
 14884  01C6DE                     _terminalSetCursorHome:
 14885                           	opt callstack 15
 14886                           
 14887                           ;terminal_control.c: 18: printf("\033[H");
 14888                           
 14889                           ; BSR set to: 2
 14890                           ;incstack = 0
 14891  01C6DE  0EBB               	movlw	low STR_193
 14892  01C6E0  0102               	movlb	2	; () banked
 14893  01C6E2  6FA9               	movwf	printf@f& (0+255),b
 14894  01C6E4  0EFF               	movlw	high STR_193
 14895  01C6E6  6FAA               	movwf	(printf@f+1)& (0+255),b
 14896  01C6E8  EC04  F0DF         	call	_printf	;wreg free
 14897  01C6EC  0012               	return		;funcret
 14898  01C6EE                     __end_of_terminalSetCursorHome:
 14899                           	opt callstack 0
 14900                           
 14901 ;; *************** function _terminalClearScreen *****************
 14902 ;; Defined at:
 14903 ;;		line 12 in file "terminal_control.c"
 14904 ;; Parameters:    Size  Location     Type
 14905 ;;		None
 14906 ;; Auto vars:     Size  Location     Type
 14907 ;;		None
 14908 ;; Return value:  Size  Location     Type
 14909 ;;                  1    wreg      void 
 14910 ;; Registers used:
 14911 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14912 ;; Tracked objects:
 14913 ;;		On entry : 0/0
 14914 ;;		On exit  : 0/0
 14915 ;;		Unchanged: 0/0
 14916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14921 ;;Total ram usage:        0 bytes
 14922 ;; Hardware stack levels used:    1
 14923 ;; Hardware stack levels required when called:   15
 14924 ;; This function calls:
 14925 ;;		_printf
 14926 ;; This function is called by:
 14927 ;;		_main
 14928 ;;		_terminalPrintTestMessage
 14929 ;; This function uses a non-reentrant model
 14930 ;;
 14931                           
 14932                           	psect	text24
 14933  01C6EE                     __ptext24:
 14934                           	opt callstack 0
 14935  01C6EE                     _terminalClearScreen:
 14936                           	opt callstack 15
 14937                           
 14938                           ;terminal_control.c: 13: printf("\033[2J");
 14939                           
 14940                           ;incstack = 0
 14941  01C6EE  0E95               	movlw	low STR_192
 14942  01C6F0  0102               	movlb	2	; () banked
 14943  01C6F2  6FA9               	movwf	printf@f& (0+255),b
 14944  01C6F4  0EFF               	movlw	high STR_192
 14945  01C6F6  6FAA               	movwf	(printf@f+1)& (0+255),b
 14946  01C6F8  EC04  F0DF         	call	_printf	;wreg free
 14947  01C6FC  0012               	return		;funcret
 14948  01C6FE                     __end_of_terminalClearScreen:
 14949                           	opt callstack 0
 14950                           
 14951 ;; *************** function _printf *****************
 14952 ;; Defined at:
 14953 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\printf.c"
 14954 ;; Parameters:    Size  Location     Type
 14955 ;;  f               2  169[BANK2 ] PTR const unsigned char 
 14956 ;;		 -> STR_352(60), STR_351(24), STR_350(24), STR_349(24), 
 14957 ;;		 -> STR_348(27), STR_347(20), STR_346(35), STR_345(34), 
 14958 ;;		 -> STR_344(37), STR_343(34), STR_342(36), STR_341(35), 
 14959 ;;		 -> STR_340(33), STR_339(35), STR_338(20), STR_337(23), 
 14960 ;;		 -> STR_336(20), STR_335(22), STR_334(21), STR_333(19), 
 14961 ;;		 -> STR_332(21), STR_331(27), STR_330(18), STR_329(11), 
 14962 ;;		 -> terminalTextAttributes@print_string(16), STR_299(4), STR_298(4), STR_297(4), 
 14963 ;;		 -> STR_296(4), STR_295(5), STR_287(41), STR_286(96), 
 14964 ;;		 -> STR_285(62), STR_284(34), STR_283(52), STR_282(56), 
 14965 ;;		 -> STR_281(55), STR_280(27), STR_279(65), STR_278(40), 
 14966 ;;		 -> STR_277(64), STR_276(42), STR_275(36), STR_274(63), 
 14967 ;;		 -> STR_273(61), STR_272(47), STR_271(60), STR_270(59), 
 14968 ;;		 -> STR_269(20), STR_268(56), STR_267(52), STR_266(23), 
 14969 ;;		 -> STR_265(45), STR_264(44), STR_263(23), STR_262(48), 
 14970 ;;		 -> STR_261(52), STR_260(58), STR_259(35), STR_258(32), 
 14971 ;;		 -> STR_257(64), STR_256(30), STR_255(31), STR_254(63), 
 14972 ;;		 -> STR_253(33), STR_252(35), STR_251(37), STR_250(40), 
 14973 ;;		 -> STR_249(28), STR_248(46), STR_247(31), STR_246(52), 
 14974 ;;		 -> STR_245(14), STR_244(28), STR_243(50), STR_242(29), 
 14975 ;;		 -> STR_241(36), STR_240(45), STR_239(88), STR_238(37), 
 14976 ;;		 -> STR_237(3), STR_236(30), STR_235(46), STR_234(39), 
 14977 ;;		 -> STR_233(62), STR_232(57), STR_231(653), STR_230(22), 
 14978 ;;		 -> STR_229(3), STR_227(29), STR_225(3), STR_224(47), 
 14979 ;;		 -> STR_223(3), STR_220(24), STR_218(23), STR_216(23), 
 14980 ;;		 -> STR_214(3), STR_213(3), STR_212(54), STR_211(3), 
 14981 ;;		 -> STR_210(56), STR_209(3), STR_208(60), STR_207(61), 
 14982 ;;		 -> STR_206(3), STR_205(62), STR_204(3), STR_203(50), 
 14983 ;;		 -> STR_202(3), STR_201(45), STR_200(3), STR_198(54), 
 14984 ;;		 -> STR_196(4), STR_195(5), STR_193(4), STR_192(5), 
 14985 ;;		 -> STR_12(28), STR_11(23), STR_10(47), STR_9(30), 
 14986 ;;		 -> STR_8(46), STR_7(39), STR_6(62), STR_5(57), 
 14987 ;;		 -> STR_4(39), STR_3(44), STR_2(52), STR_1(4), 
 14988 ;; Auto vars:     Size  Location     Type
 14989 ;;  pb              5  179[BANK2 ] struct __prbuf
 14990 ;;  ap              2  177[BANK2 ] PTR void [1]
 14991 ;;		 -> ?_sprintf(2), ?_printf(2), 
 14992 ;; Return value:  Size  Location     Type
 14993 ;;                  2  169[BANK2 ] int 
 14994 ;; Registers used:
 14995 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14996 ;; Tracked objects:
 14997 ;;		On entry : 0/0
 14998 ;;		On exit  : 0/0
 14999 ;;		Unchanged: 0/0
 15000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15001 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15002 ;;      Locals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15004 ;;      Totals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15005 ;;Total ram usage:       15 bytes
 15006 ;; Hardware stack levels used:    1
 15007 ;; Hardware stack levels required when called:   14
 15008 ;; This function calls:
 15009 ;;		__doprnt
 15010 ;; This function is called by:
 15011 ;;		_main
 15012 ;;		_ringBufferLUT
 15013 ;;		_printErrorHandlerStatus
 15014 ;;		_printCurrentMeasurements
 15015 ;;		_terminalClearScreen
 15016 ;;		_terminalSetCursorHome
 15017 ;;		_terminalTextAttributes
 15018 ;;		_terminalTextAttributesReset
 15019 ;;		_terminalClearLine
 15020 ;;		_terminalSaveCursor
 15021 ;;		_terminalReturnCursor
 15022 ;;		_terminalPrintTestMessage
 15023 ;; This function uses a non-reentrant model
 15024 ;;
 15025                           
 15026                           	psect	text25
 15027  01BE08                     __ptext25:
 15028                           	opt callstack 0
 15029  01BE08                     _printf:
 15030                           	opt callstack 13
 15031                           
 15032                           ;incstack = 0
 15033  01BE08  0E00               	movlw	0
 15034  01BE0A  0102               	movlb	2	; () banked
 15035  01BE0C  6FB3               	movwf	printf@pb& (0+255),b
 15036  01BE0E  0E00               	movlw	0
 15037  01BE10  6FB4               	movwf	(printf@pb+1)& (0+255),b
 15038  01BE12  0E36               	movlw	low _putch
 15039  01BE14  6FB5               	movwf	(printf@pb+2)& (0+255),b
 15040  01BE16  0EC6               	movlw	high _putch
 15041  01BE18  6FB6               	movwf	(printf@pb+3)& (0+255),b
 15042  01BE1A  0E01               	movlw	low (_putch shr (0+16))
 15043  01BE1C  6FB7               	movwf	(printf@pb+4)& (0+255),b
 15044  01BE1E  0EAB               	movlw	low (?_printf+2)
 15045  01BE20  6FB1               	movwf	printf@ap& (0+255),b
 15046  01BE22  0E02               	movlw	high (?_printf+2)
 15047  01BE24  6FB2               	movwf	(printf@ap+1)& (0+255),b
 15048                           
 15049                           ; BSR set to: 2
 15050                           ;	Return value of _printf is never used
 15051  01BE26  0EB3               	movlw	low printf@pb
 15052  01BE28  6F54               	movwf	__doprnt@pb& (0+255),b
 15053  01BE2A  0E02               	movlw	high printf@pb
 15054  01BE2C  6F55               	movwf	(__doprnt@pb+1)& (0+255),b
 15055  01BE2E  C2A9  F256         	movff	printf@f,__doprnt@f
 15056  01BE32  C2AA  F257         	movff	printf@f+1,__doprnt@f+1
 15057  01BE36  0EB1               	movlw	low printf@ap
 15058  01BE38  6F58               	movwf	__doprnt@ap& (0+255),b
 15059  01BE3A  0E02               	movlw	high printf@ap
 15060  01BE3C  6F59               	movwf	(__doprnt@ap+1)& (0+255),b
 15061  01BE3E  EC00  F080         	call	__doprnt	;wreg free
 15062  01BE42  0012               	return		;funcret
 15063  01BE44                     __end_of_printf:
 15064                           	opt callstack 0
 15065                           
 15066 ;; *************** function _getCauseOfReset *****************
 15067 ;; Defined at:
 15068 ;;		line 11 in file "cause_of_reset.c"
 15069 ;; Parameters:    Size  Location     Type
 15070 ;;		None
 15071 ;; Auto vars:     Size  Location     Type
 15072 ;;  return_reset    1    0[BANK2 ] enum E9577
 15073 ;; Return value:  Size  Location     Type
 15074 ;;                  1    wreg      enum E10205
 15075 ;; Registers used:
 15076 ;;		wreg, status,2
 15077 ;; Tracked objects:
 15078 ;;		On entry : 0/0
 15079 ;;		On exit  : 0/0
 15080 ;;		Unchanged: 0/0
 15081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15083 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15085 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15086 ;;Total ram usage:        1 bytes
 15087 ;; Hardware stack levels used:    1
 15088 ;; Hardware stack levels required when called:   11
 15089 ;; This function calls:
 15090 ;;		Nothing
 15091 ;; This function is called by:
 15092 ;;		_main
 15093 ;; This function uses a non-reentrant model
 15094 ;;
 15095                           
 15096                           	psect	text26
 15097  01B5E8                     __ptext26:
 15098                           	opt callstack 0
 15099  01B5E8                     _getCauseOfReset:
 15100                           	opt callstack 19
 15101                           
 15102                           ;cause_of_reset.c: 13: reset_t return_reset_cause;;cause_of_reset.c: 18: if (PCON0bits.S
      +                          TKOVF == 1) {
 15103                           
 15104                           ;incstack = 0
 15105  01B5E8  AED7               	btfss	4055,7,c	;volatile
 15106  01B5EA  D002               	goto	l1633
 15107                           
 15108                           ;cause_of_reset.c: 20: return_reset_cause = Stack_Overflow_Reset;
 15109  01B5EC  0E07               	movlw	7
 15110  01B5EE  D01D               	goto	L2
 15111  01B5F0                     l1633:
 15112                           
 15113                           ;cause_of_reset.c: 24: else if (PCON0bits.STKUNF == 1) {
 15114  01B5F0  ACD7               	btfss	4055,6,c	;volatile
 15115  01B5F2  D002               	goto	l1635
 15116                           
 15117                           ;cause_of_reset.c: 26: return_reset_cause = Stack_Underflow_Reset;
 15118  01B5F4  0E08               	movlw	8
 15119  01B5F6  D019               	goto	L2
 15120  01B5F8                     l1635:
 15121                           
 15122                           ;cause_of_reset.c: 30: else if (PCON0bits.nWDTWV == 0) {
 15123  01B5F8  BAD7               	btfsc	4055,5,c	;volatile
 15124  01B5FA  D002               	goto	l1637
 15125                           
 15126                           ;cause_of_reset.c: 32: return_reset_cause = Windowed_Watch_Dog_Timer_Reset;
 15127  01B5FC  0E05               	movlw	5
 15128  01B5FE  D015               	goto	L2
 15129  01B600                     l1637:
 15130                           
 15131                           ;cause_of_reset.c: 36: else if (PCON0bits.nRWDT == 0) {
 15132  01B600  B8D7               	btfsc	4055,4,c	;volatile
 15133  01B602  D002               	goto	l1639
 15134                           
 15135                           ;cause_of_reset.c: 38: return_reset_cause = Watch_Dog_Timer_Reset;
 15136  01B604  0E04               	movlw	4
 15137  01B606  D011               	goto	L2
 15138  01B608                     l1639:
 15139                           
 15140                           ;cause_of_reset.c: 42: else if (PCON0bits.nRMCLR == 0) {
 15141  01B608  B6D7               	btfsc	4055,3,c	;volatile
 15142  01B60A  D002               	goto	l1641
 15143                           
 15144                           ;cause_of_reset.c: 44: return_reset_cause = Master_Clear_Reset;
 15145  01B60C  0E03               	movlw	3
 15146  01B60E  D00D               	goto	L2
 15147  01B610                     l1641:
 15148                           
 15149                           ;cause_of_reset.c: 48: else if (PCON0bits.nRI == 0) {
 15150  01B610  B4D7               	btfsc	4055,2,c	;volatile
 15151  01B612  D002               	goto	l1643
 15152                           
 15153                           ;cause_of_reset.c: 50: return_reset_cause = RESET_Instruction_Executed;
 15154  01B614  0E06               	movlw	6
 15155  01B616  D009               	goto	L2
 15156  01B618                     l1643:
 15157                           
 15158                           ;cause_of_reset.c: 54: else if (PCON0bits.nPOR == 0) {
 15159  01B618  B2D7               	btfsc	4055,1,c	;volatile
 15160  01B61A  D002               	goto	l1645
 15161                           
 15162                           ;cause_of_reset.c: 56: return_reset_cause = Power_On_Reset;
 15163  01B61C  0E01               	movlw	1
 15164  01B61E  D005               	goto	L2
 15165  01B620                     l1645:
 15166                           
 15167                           ;cause_of_reset.c: 60: else if (PCON0bits.nBOR == 0) {
 15168  01B620  B0D7               	btfsc	4055,0,c	;volatile
 15169  01B622  D002               	goto	l21646
 15170                           
 15171                           ;cause_of_reset.c: 62: return_reset_cause = Brown_Out_Reset;
 15172  01B624  0E02               	movlw	2
 15173  01B626  D001               	goto	L2
 15174  01B628                     l21646:
 15175                           
 15176                           ;cause_of_reset.c: 66: else {;cause_of_reset.c: 68: return_reset_cause = Undefined_Reset
      +                          ;
 15177  01B628  0E00               	movlw	0
 15178  01B62A                     L2:
 15179  01B62A  0102               	movlb	2	; () banked
 15180  01B62C  6F00               	movwf	getCauseOfReset@return_reset_cause& (0+255),b
 15181                           
 15182                           ; BSR set to: 2
 15183                           ;cause_of_reset.c: 70: };cause_of_reset.c: 73: PCON0bits.STKOVF = 0;
 15184  01B62E  9ED7               	bcf	4055,7,c	;volatile
 15185                           
 15186                           ; BSR set to: 2
 15187                           ;cause_of_reset.c: 74: PCON0bits.STKUNF = 0;
 15188  01B630  9CD7               	bcf	4055,6,c	;volatile
 15189                           
 15190                           ; BSR set to: 2
 15191                           ;cause_of_reset.c: 75: PCON0bits.nWDTWV = 1;
 15192  01B632  8AD7               	bsf	4055,5,c	;volatile
 15193                           
 15194                           ; BSR set to: 2
 15195                           ;cause_of_reset.c: 76: PCON0bits.nRWDT = 1;
 15196  01B634  88D7               	bsf	4055,4,c	;volatile
 15197                           
 15198                           ; BSR set to: 2
 15199                           ;cause_of_reset.c: 77: PCON0bits.nRMCLR = 1;
 15200  01B636  86D7               	bsf	4055,3,c	;volatile
 15201                           
 15202                           ; BSR set to: 2
 15203                           ;cause_of_reset.c: 78: PCON0bits.nRI = 1;
 15204  01B638  84D7               	bsf	4055,2,c	;volatile
 15205                           
 15206                           ; BSR set to: 2
 15207                           ;cause_of_reset.c: 79: PCON0bits.nPOR = 1;
 15208  01B63A  82D7               	bsf	4055,1,c	;volatile
 15209                           
 15210                           ; BSR set to: 2
 15211                           ;cause_of_reset.c: 80: PCON0bits.nBOR = 1;
 15212  01B63C  80D7               	bsf	4055,0,c	;volatile
 15213                           
 15214                           ;cause_of_reset.c: 82: return return_reset_cause;
 15215  01B63E  5100               	movf	getCauseOfReset@return_reset_cause& (0+255),w,b
 15216                           
 15217                           ; BSR set to: 2
 15218  01B640  0012               	return		;funcret
 15219  01B642                     __end_of_getCauseOfReset:
 15220                           	opt callstack 0
 15221                           
 15222 ;; *************** function _freqMeasStartCaptures *****************
 15223 ;; Defined at:
 15224 ;;		line 5 in file "freq_meas.c"
 15225 ;; Parameters:    Size  Location     Type
 15226 ;;		None
 15227 ;; Auto vars:     Size  Location     Type
 15228 ;;		None
 15229 ;; Return value:  Size  Location     Type
 15230 ;;                  1    wreg      void 
 15231 ;; Registers used:
 15232 ;;		wreg, status,2
 15233 ;; Tracked objects:
 15234 ;;		On entry : 0/0
 15235 ;;		On exit  : 0/0
 15236 ;;		Unchanged: 0/0
 15237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15242 ;;Total ram usage:        0 bytes
 15243 ;; Hardware stack levels used:    1
 15244 ;; Hardware stack levels required when called:   11
 15245 ;; This function calls:
 15246 ;;		Nothing
 15247 ;; This function is called by:
 15248 ;;		_main
 15249 ;; This function uses a non-reentrant model
 15250 ;;
 15251                           
 15252                           	psect	text27
 15253  01C81C                     __ptext27:
 15254                           	opt callstack 0
 15255  01C81C                     _freqMeasStartCaptures:
 15256                           	opt callstack 19
 15257                           
 15258                           ;freq_meas.c: 8: CCP2CONbits.EN = 1;
 15259                           
 15260                           ; BSR set to: 2
 15261                           ;incstack = 0
 15262  01C81C  8EA8               	bsf	4008,7,c	;volatile
 15263                           
 15264                           ;freq_meas.c: 11: freq_meas_start_flag = 0;
 15265  01C81E  0E00               	movlw	0
 15266  01C820  0102               	movlb	2	; () banked
 15267  01C822  6FDA               	movwf	_freq_meas_start_flag& (0+255),b
 15268                           
 15269                           ; BSR set to: 2
 15270  01C824  0012               	return		;funcret
 15271  01C826                     __end_of_freqMeasStartCaptures:
 15272                           	opt callstack 0
 15273                           
 15274 ;; *************** function _TMR5_WriteTimer *****************
 15275 ;; Defined at:
 15276 ;;		line 120 in file "mcc_generated_files/tmr5.c"
 15277 ;; Parameters:    Size  Location     Type
 15278 ;;  timerVal        2    0[BANK2 ] unsigned int 
 15279 ;; Auto vars:     Size  Location     Type
 15280 ;;		None
 15281 ;; Return value:  Size  Location     Type
 15282 ;;                  1    wreg      void 
 15283 ;; Registers used:
 15284 ;;		wreg, status,2
 15285 ;; Tracked objects:
 15286 ;;		On entry : 0/0
 15287 ;;		On exit  : 0/0
 15288 ;;		Unchanged: 0/0
 15289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15290 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15293 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15294 ;;Total ram usage:        2 bytes
 15295 ;; Hardware stack levels used:    1
 15296 ;; Hardware stack levels required when called:   11
 15297 ;; This function calls:
 15298 ;;		Nothing
 15299 ;; This function is called by:
 15300 ;;		_main
 15301 ;;		_TMR5_Reload
 15302 ;; This function uses a non-reentrant model
 15303 ;;
 15304                           
 15305                           	psect	text28
 15306  01C3D4                     __ptext28:
 15307                           	opt callstack 0
 15308  01C3D4                     _TMR5_WriteTimer:
 15309                           	opt callstack 19
 15310                           
 15311                           ;tmr5.c: 122: if (T5CONbits.nT5SYNC == 1)
 15312                           
 15313                           ; BSR set to: 2
 15314                           ;incstack = 0
 15315  01C3D4  A4C3               	btfss	4035,2,c	;volatile
 15316  01C3D6  D008               	goto	l21620
 15317                           
 15318                           ;tmr5.c: 123: {;tmr5.c: 125: T5CONbits.TMR5ON = 0;
 15319  01C3D8  90C3               	bcf	4035,0,c	;volatile
 15320                           
 15321                           ;tmr5.c: 128: TMR5H = (timerVal >> 8);
 15322  01C3DA  0102               	movlb	2	; () banked
 15323  01C3DC  5101               	movf	(TMR5_WriteTimer@timerVal+1)& (0+255),w,b
 15324  01C3DE  6EC2               	movwf	4034,c	;volatile
 15325                           
 15326                           ; BSR set to: 2
 15327                           ;tmr5.c: 129: TMR5L = timerVal;
 15328  01C3E0  C200  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 15329                           
 15330                           ; BSR set to: 2
 15331                           ;tmr5.c: 132: T5CONbits.TMR5ON =1;
 15332  01C3E4  80C3               	bsf	4035,0,c	;volatile
 15333                           
 15334                           ;tmr5.c: 133: }
 15335  01C3E6  0012               	return	
 15336  01C3E8                     l21620:
 15337                           
 15338                           ;tmr5.c: 134: else;tmr5.c: 135: {;tmr5.c: 137: TMR5H = (timerVal >> 8);
 15339  01C3E8  0102               	movlb	2	; () banked
 15340  01C3EA  5101               	movf	(TMR5_WriteTimer@timerVal+1)& (0+255),w,b
 15341  01C3EC  6EC2               	movwf	4034,c	;volatile
 15342                           
 15343                           ; BSR set to: 2
 15344                           ;tmr5.c: 138: TMR5L = timerVal;
 15345  01C3EE  C200  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 15346                           
 15347                           ; BSR set to: 2
 15348  01C3F2  0012               	return		;funcret
 15349  01C3F4                     __end_of_TMR5_WriteTimer:
 15350                           	opt callstack 0
 15351                           
 15352 ;; *************** function _TMR5_StopTimer *****************
 15353 ;; Defined at:
 15354 ;;		line 98 in file "mcc_generated_files/tmr5.c"
 15355 ;; Parameters:    Size  Location     Type
 15356 ;;		None
 15357 ;; Auto vars:     Size  Location     Type
 15358 ;;		None
 15359 ;; Return value:  Size  Location     Type
 15360 ;;                  1    wreg      void 
 15361 ;; Registers used:
 15362 ;;		None
 15363 ;; Tracked objects:
 15364 ;;		On entry : 0/0
 15365 ;;		On exit  : 0/0
 15366 ;;		Unchanged: 0/0
 15367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15372 ;;Total ram usage:        0 bytes
 15373 ;; Hardware stack levels used:    1
 15374 ;; Hardware stack levels required when called:   11
 15375 ;; This function calls:
 15376 ;;		Nothing
 15377 ;; This function is called by:
 15378 ;;		_main
 15379 ;; This function uses a non-reentrant model
 15380 ;;
 15381                           
 15382                           	psect	text29
 15383  01C86E                     __ptext29:
 15384                           	opt callstack 0
 15385  01C86E                     _TMR5_StopTimer:
 15386                           	opt callstack 19
 15387                           
 15388                           ;tmr5.c: 101: T5CONbits.TMR5ON = 0;
 15389                           
 15390                           ; BSR set to: 2
 15391                           ;incstack = 0
 15392  01C86E  90C3               	bcf	4035,0,c	;volatile
 15393  01C870  0012               	return		;funcret
 15394  01C872                     __end_of_TMR5_StopTimer:
 15395                           	opt callstack 0
 15396                           
 15397 ;; *************** function _TMR3_StopTimer *****************
 15398 ;; Defined at:
 15399 ;;		line 105 in file "mcc_generated_files/tmr3.c"
 15400 ;; Parameters:    Size  Location     Type
 15401 ;;		None
 15402 ;; Auto vars:     Size  Location     Type
 15403 ;;		None
 15404 ;; Return value:  Size  Location     Type
 15405 ;;                  1    wreg      void 
 15406 ;; Registers used:
 15407 ;;		None
 15408 ;; Tracked objects:
 15409 ;;		On entry : 0/0
 15410 ;;		On exit  : 0/0
 15411 ;;		Unchanged: 0/0
 15412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15417 ;;Total ram usage:        0 bytes
 15418 ;; Hardware stack levels used:    1
 15419 ;; Hardware stack levels required when called:   11
 15420 ;; This function calls:
 15421 ;;		Nothing
 15422 ;; This function is called by:
 15423 ;;		_main
 15424 ;; This function uses a non-reentrant model
 15425 ;;
 15426                           
 15427                           	psect	text30
 15428  01C872                     __ptext30:
 15429                           	opt callstack 0
 15430  01C872                     _TMR3_StopTimer:
 15431                           	opt callstack 19
 15432                           
 15433                           ;tmr3.c: 108: T3CONbits.TMR3ON = 0;
 15434                           
 15435                           ;incstack = 0
 15436  01C872  90C9               	bcf	4041,0,c	;volatile
 15437  01C874  0012               	return		;funcret
 15438  01C876                     __end_of_TMR3_StopTimer:
 15439                           	opt callstack 0
 15440                           
 15441 ;; *************** function _TMR3_Reload *****************
 15442 ;; Defined at:
 15443 ;;		line 149 in file "mcc_generated_files/tmr3.c"
 15444 ;; Parameters:    Size  Location     Type
 15445 ;;		None
 15446 ;; Auto vars:     Size  Location     Type
 15447 ;;		None
 15448 ;; Return value:  Size  Location     Type
 15449 ;;                  1    wreg      void 
 15450 ;; Registers used:
 15451 ;;		wreg, status,2, cstack
 15452 ;; Tracked objects:
 15453 ;;		On entry : 0/0
 15454 ;;		On exit  : 0/0
 15455 ;;		Unchanged: 0/0
 15456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15461 ;;Total ram usage:        0 bytes
 15462 ;; Hardware stack levels used:    1
 15463 ;; Hardware stack levels required when called:   12
 15464 ;; This function calls:
 15465 ;;		_TMR3_WriteTimer
 15466 ;; This function is called by:
 15467 ;;		_main
 15468 ;; This function uses a non-reentrant model
 15469 ;;
 15470                           
 15471                           	psect	text31
 15472  01C6FE                     __ptext31:
 15473                           	opt callstack 0
 15474  01C6FE                     _TMR3_Reload:
 15475                           	opt callstack 18
 15476                           
 15477                           ;tmr3.c: 151: TMR3_WriteTimer(timer3ReloadVal);
 15478                           
 15479                           ;incstack = 0
 15480  01C6FE  C18D  F200         	movff	_timer3ReloadVal,TMR3_WriteTimer@timerVal	;volatile
 15481  01C702  C18E  F201         	movff	_timer3ReloadVal+1,TMR3_WriteTimer@timerVal+1	;volatile
 15482  01C706  ECFA  F0E1         	call	_TMR3_WriteTimer	;wreg free
 15483  01C70A  0012               	return		;funcret
 15484  01C70C                     __end_of_TMR3_Reload:
 15485                           	opt callstack 0
 15486                           
 15487 ;; *************** function _TMR3_WriteTimer *****************
 15488 ;; Defined at:
 15489 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 15490 ;; Parameters:    Size  Location     Type
 15491 ;;  timerVal        2    0[BANK2 ] unsigned int 
 15492 ;; Auto vars:     Size  Location     Type
 15493 ;;		None
 15494 ;; Return value:  Size  Location     Type
 15495 ;;                  1    wreg      void 
 15496 ;; Registers used:
 15497 ;;		wreg, status,2
 15498 ;; Tracked objects:
 15499 ;;		On entry : 0/0
 15500 ;;		On exit  : 0/0
 15501 ;;		Unchanged: 0/0
 15502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15503 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15506 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15507 ;;Total ram usage:        2 bytes
 15508 ;; Hardware stack levels used:    1
 15509 ;; Hardware stack levels required when called:   11
 15510 ;; This function calls:
 15511 ;;		Nothing
 15512 ;; This function is called by:
 15513 ;;		_TMR3_Reload
 15514 ;; This function uses a non-reentrant model
 15515 ;;
 15516                           
 15517                           	psect	text32
 15518  01C3F4                     __ptext32:
 15519                           	opt callstack 0
 15520  01C3F4                     _TMR3_WriteTimer:
 15521                           	opt callstack 18
 15522                           
 15523                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 15524                           
 15525                           ;incstack = 0
 15526  01C3F4  A4C9               	btfss	4041,2,c	;volatile
 15527  01C3F6  D008               	goto	l20898
 15528                           
 15529                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 15530  01C3F8  90C9               	bcf	4041,0,c	;volatile
 15531                           
 15532                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 15533  01C3FA  0102               	movlb	2	; () banked
 15534  01C3FC  5101               	movf	(TMR3_WriteTimer@timerVal+1)& (0+255),w,b
 15535  01C3FE  6EC8               	movwf	4040,c	;volatile
 15536                           
 15537                           ; BSR set to: 2
 15538                           ;tmr3.c: 136: TMR3L = timerVal;
 15539  01C400  C200  FFC7         	movff	TMR3_WriteTimer@timerVal,4039	;volatile
 15540                           
 15541                           ; BSR set to: 2
 15542                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 15543  01C404  80C9               	bsf	4041,0,c	;volatile
 15544                           
 15545                           ;tmr3.c: 140: }
 15546  01C406  0012               	return	
 15547  01C408                     l20898:
 15548                           
 15549                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 15550  01C408  0102               	movlb	2	; () banked
 15551  01C40A  5101               	movf	(TMR3_WriteTimer@timerVal+1)& (0+255),w,b
 15552  01C40C  6EC8               	movwf	4040,c	;volatile
 15553                           
 15554                           ; BSR set to: 2
 15555                           ;tmr3.c: 145: TMR3L = timerVal;
 15556  01C40E  C200  FFC7         	movff	TMR3_WriteTimer@timerVal,4039	;volatile
 15557                           
 15558                           ; BSR set to: 2
 15559  01C412  0012               	return		;funcret
 15560  01C414                     __end_of_TMR3_WriteTimer:
 15561                           	opt callstack 0
 15562                           
 15563 ;; *************** function _TMR1_StopTimer *****************
 15564 ;; Defined at:
 15565 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 15566 ;; Parameters:    Size  Location     Type
 15567 ;;		None
 15568 ;; Auto vars:     Size  Location     Type
 15569 ;;		None
 15570 ;; Return value:  Size  Location     Type
 15571 ;;                  1    wreg      void 
 15572 ;; Registers used:
 15573 ;;		None
 15574 ;; Tracked objects:
 15575 ;;		On entry : 0/0
 15576 ;;		On exit  : 0/0
 15577 ;;		Unchanged: 0/0
 15578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15583 ;;Total ram usage:        0 bytes
 15584 ;; Hardware stack levels used:    1
 15585 ;; Hardware stack levels required when called:   11
 15586 ;; This function calls:
 15587 ;;		Nothing
 15588 ;; This function is called by:
 15589 ;;		_main
 15590 ;; This function uses a non-reentrant model
 15591 ;;
 15592                           
 15593                           	psect	text33
 15594  01C876                     __ptext33:
 15595                           	opt callstack 0
 15596  01C876                     _TMR1_StopTimer:
 15597                           	opt callstack 19
 15598                           
 15599                           ;tmr1.c: 108: T1CONbits.TMR1ON = 0;
 15600                           
 15601                           ; BSR set to: 2
 15602                           ;incstack = 0
 15603  01C876  90CF               	bcf	4047,0,c	;volatile
 15604  01C878  0012               	return		;funcret
 15605  01C87A                     __end_of_TMR1_StopTimer:
 15606                           	opt callstack 0
 15607                           
 15608 ;; *************** function _TMR1_Reload *****************
 15609 ;; Defined at:
 15610 ;;		line 149 in file "mcc_generated_files/tmr1.c"
 15611 ;; Parameters:    Size  Location     Type
 15612 ;;		None
 15613 ;; Auto vars:     Size  Location     Type
 15614 ;;		None
 15615 ;; Return value:  Size  Location     Type
 15616 ;;                  1    wreg      void 
 15617 ;; Registers used:
 15618 ;;		wreg, status,2, cstack
 15619 ;; Tracked objects:
 15620 ;;		On entry : 0/0
 15621 ;;		On exit  : 0/0
 15622 ;;		Unchanged: 0/0
 15623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15628 ;;Total ram usage:        0 bytes
 15629 ;; Hardware stack levels used:    1
 15630 ;; Hardware stack levels required when called:   12
 15631 ;; This function calls:
 15632 ;;		_TMR1_WriteTimer
 15633 ;; This function is called by:
 15634 ;;		_main
 15635 ;; This function uses a non-reentrant model
 15636 ;;
 15637                           
 15638                           	psect	text34
 15639  01C70C                     __ptext34:
 15640                           	opt callstack 0
 15641  01C70C                     _TMR1_Reload:
 15642                           	opt callstack 18
 15643                           
 15644                           ;tmr1.c: 151: TMR1_WriteTimer(timer1ReloadVal);
 15645                           
 15646                           ;incstack = 0
 15647  01C70C  C189  F200         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 15648  01C710  C18A  F201         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 15649  01C714  EC0A  F0E2         	call	_TMR1_WriteTimer	;wreg free
 15650  01C718  0012               	return		;funcret
 15651  01C71A                     __end_of_TMR1_Reload:
 15652                           	opt callstack 0
 15653                           
 15654 ;; *************** function _TMR1_WriteTimer *****************
 15655 ;; Defined at:
 15656 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 15657 ;; Parameters:    Size  Location     Type
 15658 ;;  timerVal        2    0[BANK2 ] unsigned int 
 15659 ;; Auto vars:     Size  Location     Type
 15660 ;;		None
 15661 ;; Return value:  Size  Location     Type
 15662 ;;                  1    wreg      void 
 15663 ;; Registers used:
 15664 ;;		wreg, status,2
 15665 ;; Tracked objects:
 15666 ;;		On entry : 0/0
 15667 ;;		On exit  : 0/0
 15668 ;;		Unchanged: 0/0
 15669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15670 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15673 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15674 ;;Total ram usage:        2 bytes
 15675 ;; Hardware stack levels used:    1
 15676 ;; Hardware stack levels required when called:   11
 15677 ;; This function calls:
 15678 ;;		Nothing
 15679 ;; This function is called by:
 15680 ;;		_TMR1_Reload
 15681 ;; This function uses a non-reentrant model
 15682 ;;
 15683                           
 15684                           	psect	text35
 15685  01C414                     __ptext35:
 15686                           	opt callstack 0
 15687  01C414                     _TMR1_WriteTimer:
 15688                           	opt callstack 18
 15689                           
 15690                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 15691                           
 15692                           ;incstack = 0
 15693  01C414  A4CF               	btfss	4047,2,c	;volatile
 15694  01C416  D008               	goto	l20934
 15695                           
 15696                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 15697  01C418  90CF               	bcf	4047,0,c	;volatile
 15698                           
 15699                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 15700  01C41A  0102               	movlb	2	; () banked
 15701  01C41C  5101               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 15702  01C41E  6ECE               	movwf	4046,c	;volatile
 15703                           
 15704                           ; BSR set to: 2
 15705                           ;tmr1.c: 136: TMR1L = timerVal;
 15706  01C420  C200  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 15707                           
 15708                           ; BSR set to: 2
 15709                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 15710  01C424  80CF               	bsf	4047,0,c	;volatile
 15711                           
 15712                           ;tmr1.c: 140: }
 15713  01C426  0012               	return	
 15714  01C428                     l20934:
 15715                           
 15716                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 15717  01C428  0102               	movlb	2	; () banked
 15718  01C42A  5101               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 15719  01C42C  6ECE               	movwf	4046,c	;volatile
 15720                           
 15721                           ; BSR set to: 2
 15722                           ;tmr1.c: 145: TMR1L = timerVal;
 15723  01C42E  C200  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 15724                           
 15725                           ; BSR set to: 2
 15726  01C432  0012               	return		;funcret
 15727  01C434                     __end_of_TMR1_WriteTimer:
 15728                           	opt callstack 0
 15729                           
 15730 ;; *************** function _SYSTEM_Initialize *****************
 15731 ;; Defined at:
 15732 ;;		line 50 in file "mcc_generated_files/mcc.c"
 15733 ;; Parameters:    Size  Location     Type
 15734 ;;		None
 15735 ;; Auto vars:     Size  Location     Type
 15736 ;;		None
 15737 ;; Return value:  Size  Location     Type
 15738 ;;                  1    wreg      void 
 15739 ;; Registers used:
 15740 ;;		wreg, status,2, status,0, cstack
 15741 ;; Tracked objects:
 15742 ;;		On entry : 0/0
 15743 ;;		On exit  : 0/0
 15744 ;;		Unchanged: 0/0
 15745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15750 ;;Total ram usage:        0 bytes
 15751 ;; Hardware stack levels used:    1
 15752 ;; Hardware stack levels required when called:   13
 15753 ;; This function calls:
 15754 ;;		_ADCC_Initialize
 15755 ;;		_CCP2_Initialize
 15756 ;;		_EUSART2_Initialize
 15757 ;;		_EXT_INT_Initialize
 15758 ;;		_FVR_Initialize
 15759 ;;		_I2C2_Initialize
 15760 ;;		_INTERRUPT_Initialize
 15761 ;;		_OSCILLATOR_Initialize
 15762 ;;		_PIN_MANAGER_Initialize
 15763 ;;		_PMD_Initialize
 15764 ;;		_TMR0_Initialize
 15765 ;;		_TMR1_Initialize
 15766 ;;		_TMR2_Initialize
 15767 ;;		_TMR3_Initialize
 15768 ;;		_TMR5_Initialize
 15769 ;; This function is called by:
 15770 ;;		_main
 15771 ;; This function uses a non-reentrant model
 15772 ;;
 15773                           
 15774                           	psect	text36
 15775  01BD8C                     __ptext36:
 15776                           	opt callstack 0
 15777  01BD8C                     _SYSTEM_Initialize:
 15778                           	opt callstack 17
 15779                           
 15780                           ;mcc.c: 52: INTERRUPT_Initialize();
 15781                           
 15782                           ; BSR set to: 2
 15783                           ;incstack = 0
 15784  01BD8C  EC1A  F0E2         	call	_INTERRUPT_Initialize	;wreg free
 15785                           
 15786                           ;mcc.c: 53: PMD_Initialize();
 15787  01BD90  EC77  F0E2         	call	_PMD_Initialize	;wreg free
 15788                           
 15789                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 15790  01BD94  ECFF  F0D5         	call	_PIN_MANAGER_Initialize	;wreg free
 15791                           
 15792                           ;mcc.c: 55: OSCILLATOR_Initialize();
 15793  01BD98  ECE3  F0E2         	call	_OSCILLATOR_Initialize	;wreg free
 15794                           
 15795                           ;mcc.c: 56: I2C2_Initialize();
 15796  01BD9C  ECB6  F0DF         	call	_I2C2_Initialize	;wreg free
 15797                           
 15798                           ;mcc.c: 57: FVR_Initialize();
 15799  01BDA0  ECFC  F0E3         	call	_FVR_Initialize	;wreg free
 15800                           
 15801                           ;mcc.c: 58: ADCC_Initialize();
 15802  01BDA4  EC39  F0DA         	call	_ADCC_Initialize	;wreg free
 15803                           
 15804                           ;mcc.c: 59: TMR2_Initialize();
 15805  01BDA8  EC1F  F0E0         	call	_TMR2_Initialize	;wreg free
 15806                           
 15807                           ;mcc.c: 60: EXT_INT_Initialize();
 15808  01BDAC  EC9A  F0DF         	call	_EXT_INT_Initialize	;wreg free
 15809                           
 15810                           ;mcc.c: 61: TMR0_Initialize();
 15811  01BDB0  ECC6  F0E0         	call	_TMR0_Initialize	;wreg free
 15812                           
 15813                           ;mcc.c: 62: CCP2_Initialize();
 15814  01BDB4  ECC8  F0E1         	call	_CCP2_Initialize	;wreg free
 15815                           
 15816                           ;mcc.c: 63: TMR3_Initialize();
 15817  01BDB8  EC46  F0DC         	call	_TMR3_Initialize	;wreg free
 15818                           
 15819                           ;mcc.c: 64: TMR5_Initialize();
 15820  01BDBC  EC22  F0DF         	call	_TMR5_Initialize	;wreg free
 15821                           
 15822                           ;mcc.c: 65: TMR1_Initialize();
 15823  01BDC0  EC6E  F0DC         	call	_TMR1_Initialize	;wreg free
 15824                           
 15825                           ;mcc.c: 66: EUSART2_Initialize();
 15826  01BDC4  ECC2  F0D8         	call	_EUSART2_Initialize	;wreg free
 15827  01BDC8  0012               	return		;funcret
 15828  01BDCA                     __end_of_SYSTEM_Initialize:
 15829                           	opt callstack 0
 15830                           
 15831 ;; *************** function _TMR5_Initialize *****************
 15832 ;; Defined at:
 15833 ;;		line 63 in file "mcc_generated_files/tmr5.c"
 15834 ;; Parameters:    Size  Location     Type
 15835 ;;		None
 15836 ;; Auto vars:     Size  Location     Type
 15837 ;;		None
 15838 ;; Return value:  Size  Location     Type
 15839 ;;                  1    wreg      void 
 15840 ;; Registers used:
 15841 ;;		wreg, status,2, status,0
 15842 ;; Tracked objects:
 15843 ;;		On entry : 0/0
 15844 ;;		On exit  : 0/0
 15845 ;;		Unchanged: 0/0
 15846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15849 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15850 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15851 ;;Total ram usage:        2 bytes
 15852 ;; Hardware stack levels used:    1
 15853 ;; Hardware stack levels required when called:   11
 15854 ;; This function calls:
 15855 ;;		Nothing
 15856 ;; This function is called by:
 15857 ;;		_SYSTEM_Initialize
 15858 ;; This function uses a non-reentrant model
 15859 ;;
 15860                           
 15861                           	psect	text37
 15862  01BE44                     __ptext37:
 15863                           	opt callstack 0
 15864  01BE44                     _TMR5_Initialize:
 15865                           	opt callstack 18
 15866                           
 15867                           ;tmr5.c: 68: T5GCON = 0x00;
 15868                           
 15869                           ;incstack = 0
 15870  01BE44  0E00               	movlw	0
 15871  01BE46  6EC4               	movwf	4036,c	;volatile
 15872                           
 15873                           ;tmr5.c: 71: T5GATE = 0x00;
 15874  01BE48  0E00               	movlw	0
 15875  01BE4A  6EC5               	movwf	4037,c	;volatile
 15876                           
 15877                           ;tmr5.c: 74: T5CLK = 0x01;
 15878  01BE4C  0E01               	movlw	1
 15879  01BE4E  6EC6               	movwf	4038,c	;volatile
 15880                           
 15881                           ;tmr5.c: 77: TMR5H = 0x00;
 15882  01BE50  0E00               	movlw	0
 15883  01BE52  6EC2               	movwf	4034,c	;volatile
 15884                           
 15885                           ;tmr5.c: 80: TMR5L = 0x00;
 15886  01BE54  0E00               	movlw	0
 15887  01BE56  6EC1               	movwf	4033,c	;volatile
 15888                           
 15889                           ;tmr5.c: 83: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 15890  01BE58  50C1               	movf	4033,w,c	;volatile
 15891  01BE5A  CFC2 F200          	movff	4034,??_TMR5_Initialize	;volatile
 15892  01BE5E  0102               	movlb	2	; () banked
 15893  01BE60  6B01               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 15894  01BE62  C200  F201         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 15895  01BE66  6B00               	clrf	??_TMR5_Initialize& (0+255),b
 15896  01BE68  1100               	iorwf	??_TMR5_Initialize& (0+255),w,b
 15897  01BE6A  0101               	movlb	1	; () banked
 15898  01BE6C  6F8B               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 15899  01BE6E  0102               	movlb	2	; () banked
 15900  01BE70  5101               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 15901  01BE72  0101               	movlb	1	; () banked
 15902  01BE74  6F8C               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 15903                           
 15904                           ; BSR set to: 1
 15905                           ;tmr5.c: 86: PIR4bits.TMR5IF = 0;
 15906  01BE76  010E               	movlb	14	; () banked
 15907  01BE78  99CE               	bcf	206,4,b	;volatile
 15908                           
 15909                           ; BSR set to: 14
 15910                           ;tmr5.c: 89: T5CON = 0x03;
 15911  01BE7A  0E03               	movlw	3
 15912  01BE7C  6EC3               	movwf	4035,c	;volatile
 15913                           
 15914                           ; BSR set to: 14
 15915  01BE7E  0012               	return		;funcret
 15916  01BE80                     __end_of_TMR5_Initialize:
 15917                           	opt callstack 0
 15918                           
 15919 ;; *************** function _TMR3_Initialize *****************
 15920 ;; Defined at:
 15921 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 15922 ;; Parameters:    Size  Location     Type
 15923 ;;		None
 15924 ;; Auto vars:     Size  Location     Type
 15925 ;;		None
 15926 ;; Return value:  Size  Location     Type
 15927 ;;                  1    wreg      void 
 15928 ;; Registers used:
 15929 ;;		wreg, status,2, status,0, cstack
 15930 ;; Tracked objects:
 15931 ;;		On entry : 0/0
 15932 ;;		On exit  : 0/0
 15933 ;;		Unchanged: 0/0
 15934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15937 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15938 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15939 ;;Total ram usage:        2 bytes
 15940 ;; Hardware stack levels used:    1
 15941 ;; Hardware stack levels required when called:   12
 15942 ;; This function calls:
 15943 ;;		_TMR3_SetInterruptHandler
 15944 ;; This function is called by:
 15945 ;;		_SYSTEM_Initialize
 15946 ;; This function uses a non-reentrant model
 15947 ;;
 15948                           
 15949                           	psect	text38
 15950  01B88C                     __ptext38:
 15951                           	opt callstack 0
 15952  01B88C                     _TMR3_Initialize:
 15953                           	opt callstack 17
 15954                           
 15955                           ;tmr3.c: 69: T3GCON = 0x00;
 15956                           
 15957                           ; BSR set to: 14
 15958                           ;incstack = 0
 15959  01B88C  0E00               	movlw	0
 15960  01B88E  6ECA               	movwf	4042,c	;volatile
 15961                           
 15962                           ;tmr3.c: 72: T3GATE = 0x00;
 15963  01B890  0E00               	movlw	0
 15964  01B892  6ECB               	movwf	4043,c	;volatile
 15965                           
 15966                           ;tmr3.c: 75: T3CLK = 0x04;
 15967  01B894  0E04               	movlw	4
 15968  01B896  6ECC               	movwf	4044,c	;volatile
 15969                           
 15970                           ;tmr3.c: 78: TMR3H = 0xCF;
 15971  01B898  0ECF               	movlw	207
 15972  01B89A  6EC8               	movwf	4040,c	;volatile
 15973                           
 15974                           ;tmr3.c: 81: TMR3L = 0x90;
 15975  01B89C  0E90               	movlw	144
 15976  01B89E  6EC7               	movwf	4039,c	;volatile
 15977                           
 15978                           ;tmr3.c: 84: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 15979  01B8A0  50C7               	movf	4039,w,c	;volatile
 15980  01B8A2  CFC8 F203          	movff	4040,??_TMR3_Initialize	;volatile
 15981  01B8A6  0102               	movlb	2	; () banked
 15982  01B8A8  6B04               	clrf	(??_TMR3_Initialize+1)& (0+255),b
 15983  01B8AA  C203  F204         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 15984  01B8AE  6B03               	clrf	??_TMR3_Initialize& (0+255),b
 15985  01B8B0  1103               	iorwf	??_TMR3_Initialize& (0+255),w,b
 15986  01B8B2  0101               	movlb	1	; () banked
 15987  01B8B4  6F8D               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 15988  01B8B6  0102               	movlb	2	; () banked
 15989  01B8B8  5104               	movf	(??_TMR3_Initialize+1)& (0+255),w,b
 15990  01B8BA  0101               	movlb	1	; () banked
 15991  01B8BC  6F8E               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 15992                           
 15993                           ; BSR set to: 1
 15994                           ;tmr3.c: 87: PIR4bits.TMR3IF = 0;
 15995  01B8BE  010E               	movlb	14	; () banked
 15996  01B8C0  95CE               	bcf	206,2,b	;volatile
 15997                           
 15998                           ; BSR set to: 14
 15999                           ;tmr3.c: 90: PIE4bits.TMR3IE = 1;
 16000  01B8C2  85C6               	bsf	198,2,b	;volatile
 16001                           
 16002                           ; BSR set to: 14
 16003                           ;tmr3.c: 93: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
 16004  01B8C4  0E9C               	movlw	low _TMR3_DefaultInterruptHandler
 16005  01B8C6  0102               	movlb	2	; () banked
 16006  01B8C8  6F00               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
 16007  01B8CA  0EC8               	movlw	high _TMR3_DefaultInterruptHandler
 16008  01B8CC  6F01               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16009  01B8CE  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 16010  01B8D0  6F02               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16011  01B8D2  EC8D  F0E3         	call	_TMR3_SetInterruptHandler	;wreg free
 16012                           
 16013                           ;tmr3.c: 96: T3CON = 0x11;
 16014  01B8D6  0E11               	movlw	17
 16015  01B8D8  6EC9               	movwf	4041,c	;volatile
 16016  01B8DA  0012               	return		;funcret
 16017  01B8DC                     __end_of_TMR3_Initialize:
 16018                           	opt callstack 0
 16019                           
 16020 ;; *************** function _TMR3_SetInterruptHandler *****************
 16021 ;; Defined at:
 16022 ;;		line 178 in file "mcc_generated_files/tmr3.c"
 16023 ;; Parameters:    Size  Location     Type
 16024 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 16025 ;;		 -> QIIdleChargedTimerHandler(1), TMR3_DefaultInterruptHandler(1), 
 16026 ;; Auto vars:     Size  Location     Type
 16027 ;;		None
 16028 ;; Return value:  Size  Location     Type
 16029 ;;                  1    wreg      void 
 16030 ;; Registers used:
 16031 ;;		wreg, status,2, status,0
 16032 ;; Tracked objects:
 16033 ;;		On entry : 0/0
 16034 ;;		On exit  : 0/0
 16035 ;;		Unchanged: 0/0
 16036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16037 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16040 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16041 ;;Total ram usage:        3 bytes
 16042 ;; Hardware stack levels used:    1
 16043 ;; Hardware stack levels required when called:   11
 16044 ;; This function calls:
 16045 ;;		Nothing
 16046 ;; This function is called by:
 16047 ;;		_TMR3_Initialize
 16048 ;;		_main
 16049 ;; This function uses a non-reentrant model
 16050 ;;
 16051                           
 16052                           	psect	text39
 16053  01C71A                     __ptext39:
 16054                           	opt callstack 0
 16055  01C71A                     _TMR3_SetInterruptHandler:
 16056                           	opt callstack 19
 16057                           
 16058                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
 16059                           
 16060                           ;incstack = 0
 16061  01C71A  C200  F171         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
 16062  01C71E  C201  F172         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
 16063  01C722  C202  F173         	movff	TMR3_SetInterruptHandler@InterruptHandler+2,_TMR3_InterruptHandler+2
 16064  01C726  0012               	return		;funcret
 16065  01C728                     __end_of_TMR3_SetInterruptHandler:
 16066                           	opt callstack 0
 16067                           
 16068 ;; *************** function _TMR2_Initialize *****************
 16069 ;; Defined at:
 16070 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 16071 ;; Parameters:    Size  Location     Type
 16072 ;;		None
 16073 ;; Auto vars:     Size  Location     Type
 16074 ;;		None
 16075 ;; Return value:  Size  Location     Type
 16076 ;;                  1    wreg      void 
 16077 ;; Registers used:
 16078 ;;		wreg, status,2, status,0, cstack
 16079 ;; Tracked objects:
 16080 ;;		On entry : 0/0
 16081 ;;		On exit  : 0/0
 16082 ;;		Unchanged: 0/0
 16083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16088 ;;Total ram usage:        0 bytes
 16089 ;; Hardware stack levels used:    1
 16090 ;; Hardware stack levels required when called:   12
 16091 ;; This function calls:
 16092 ;;		_TMR2_SetInterruptHandler
 16093 ;; This function is called by:
 16094 ;;		_SYSTEM_Initialize
 16095 ;; This function uses a non-reentrant model
 16096 ;;
 16097                           
 16098                           	psect	text40
 16099  01C03E                     __ptext40:
 16100                           	opt callstack 0
 16101  01C03E                     _TMR2_Initialize:
 16102                           	opt callstack 17
 16103                           
 16104                           ;tmr2.c: 69: T2CLKCON = 0x04;
 16105                           
 16106                           ;incstack = 0
 16107  01C03E  0E04               	movlw	4
 16108  01C040  6EBF               	movwf	4031,c	;volatile
 16109                           
 16110                           ;tmr2.c: 72: T2HLT = 0xA0;
 16111  01C042  0EA0               	movlw	160
 16112  01C044  6EBE               	movwf	4030,c	;volatile
 16113                           
 16114                           ;tmr2.c: 75: T2RST = 0x00;
 16115  01C046  0E00               	movlw	0
 16116  01C048  6EC0               	movwf	4032,c	;volatile
 16117                           
 16118                           ;tmr2.c: 78: T2PR = 0x00;
 16119  01C04A  0E00               	movlw	0
 16120  01C04C  6EBC               	movwf	4028,c	;volatile
 16121                           
 16122                           ;tmr2.c: 81: T2TMR = 0x00;
 16123  01C04E  0E00               	movlw	0
 16124  01C050  6EBB               	movwf	4027,c	;volatile
 16125                           
 16126                           ;tmr2.c: 84: PIR4bits.TMR2IF = 0;
 16127  01C052  010E               	movlb	14	; () banked
 16128  01C054  93CE               	bcf	206,1,b	;volatile
 16129                           
 16130                           ; BSR set to: 14
 16131                           ;tmr2.c: 87: PIE4bits.TMR2IE = 1;
 16132  01C056  83C6               	bsf	198,1,b	;volatile
 16133                           
 16134                           ; BSR set to: 14
 16135                           ;tmr2.c: 90: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
 16136  01C058  0E9E               	movlw	low _TMR2_DefaultInterruptHandler
 16137  01C05A  0102               	movlb	2	; () banked
 16138  01C05C  6F00               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
 16139  01C05E  0EC8               	movlw	high _TMR2_DefaultInterruptHandler
 16140  01C060  6F01               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16141  01C062  0E01               	movlw	low (_TMR2_DefaultInterruptHandler shr (0+16))
 16142  01C064  6F02               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16143  01C066  EC94  F0E3         	call	_TMR2_SetInterruptHandler	;wreg free
 16144                           
 16145                           ;tmr2.c: 93: T2CON = 0xDF;
 16146  01C06A  0EDF               	movlw	223
 16147  01C06C  6EBD               	movwf	4029,c	;volatile
 16148  01C06E  0012               	return		;funcret
 16149  01C070                     __end_of_TMR2_Initialize:
 16150                           	opt callstack 0
 16151                           
 16152 ;; *************** function _TMR2_SetInterruptHandler *****************
 16153 ;; Defined at:
 16154 ;;		line 178 in file "mcc_generated_files/tmr2.c"
 16155 ;; Parameters:    Size  Location     Type
 16156 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 16157 ;;		 -> ADC_acquisitionTimerHandler(1), TMR2_DefaultInterruptHandler(1), 
 16158 ;; Auto vars:     Size  Location     Type
 16159 ;;		None
 16160 ;; Return value:  Size  Location     Type
 16161 ;;                  1    wreg      void 
 16162 ;; Registers used:
 16163 ;;		wreg, status,2, status,0
 16164 ;; Tracked objects:
 16165 ;;		On entry : 0/0
 16166 ;;		On exit  : 0/0
 16167 ;;		Unchanged: 0/0
 16168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16169 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16172 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16173 ;;Total ram usage:        3 bytes
 16174 ;; Hardware stack levels used:    1
 16175 ;; Hardware stack levels required when called:   11
 16176 ;; This function calls:
 16177 ;;		Nothing
 16178 ;; This function is called by:
 16179 ;;		_TMR2_Initialize
 16180 ;;		_main
 16181 ;; This function uses a non-reentrant model
 16182 ;;
 16183                           
 16184                           	psect	text41
 16185  01C728                     __ptext41:
 16186                           	opt callstack 0
 16187  01C728                     _TMR2_SetInterruptHandler:
 16188                           	opt callstack 19
 16189                           
 16190                           ;tmr2.c: 179: TMR2_InterruptHandler = InterruptHandler;
 16191                           
 16192                           ;incstack = 0
 16193  01C728  C200  F174         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 16194  01C72C  C201  F175         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 16195  01C730  C202  F176         	movff	TMR2_SetInterruptHandler@InterruptHandler+2,_TMR2_InterruptHandler+2
 16196  01C734  0012               	return		;funcret
 16197  01C736                     __end_of_TMR2_SetInterruptHandler:
 16198                           	opt callstack 0
 16199                           
 16200 ;; *************** function _TMR1_Initialize *****************
 16201 ;; Defined at:
 16202 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 16203 ;; Parameters:    Size  Location     Type
 16204 ;;		None
 16205 ;; Auto vars:     Size  Location     Type
 16206 ;;		None
 16207 ;; Return value:  Size  Location     Type
 16208 ;;                  1    wreg      void 
 16209 ;; Registers used:
 16210 ;;		wreg, status,2, status,0, cstack
 16211 ;; Tracked objects:
 16212 ;;		On entry : 0/0
 16213 ;;		On exit  : 0/0
 16214 ;;		Unchanged: 0/0
 16215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16218 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16219 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16220 ;;Total ram usage:        2 bytes
 16221 ;; Hardware stack levels used:    1
 16222 ;; Hardware stack levels required when called:   12
 16223 ;; This function calls:
 16224 ;;		_TMR1_SetInterruptHandler
 16225 ;; This function is called by:
 16226 ;;		_SYSTEM_Initialize
 16227 ;; This function uses a non-reentrant model
 16228 ;;
 16229                           
 16230                           	psect	text42
 16231  01B8DC                     __ptext42:
 16232                           	opt callstack 0
 16233  01B8DC                     _TMR1_Initialize:
 16234                           	opt callstack 17
 16235                           
 16236                           ;tmr1.c: 69: T1GCON = 0x00;
 16237                           
 16238                           ;incstack = 0
 16239  01B8DC  0E00               	movlw	0
 16240  01B8DE  6ED0               	movwf	4048,c	;volatile
 16241                           
 16242                           ;tmr1.c: 72: T1GATE = 0x00;
 16243  01B8E0  0E00               	movlw	0
 16244  01B8E2  6ED1               	movwf	4049,c	;volatile
 16245                           
 16246                           ;tmr1.c: 75: T1CLK = 0x04;
 16247  01B8E4  0E04               	movlw	4
 16248  01B8E6  6ED2               	movwf	4050,c	;volatile
 16249                           
 16250                           ;tmr1.c: 78: TMR1H = 0xED;
 16251  01B8E8  0EED               	movlw	237
 16252  01B8EA  6ECE               	movwf	4046,c	;volatile
 16253                           
 16254                           ;tmr1.c: 81: TMR1L = 0xD6;
 16255  01B8EC  0ED6               	movlw	214
 16256  01B8EE  6ECD               	movwf	4045,c	;volatile
 16257                           
 16258                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 16259  01B8F0  50CD               	movf	4045,w,c	;volatile
 16260  01B8F2  CFCE F203          	movff	4046,??_TMR1_Initialize	;volatile
 16261  01B8F6  0102               	movlb	2	; () banked
 16262  01B8F8  6B04               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 16263  01B8FA  C203  F204         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 16264  01B8FE  6B03               	clrf	??_TMR1_Initialize& (0+255),b
 16265  01B900  1103               	iorwf	??_TMR1_Initialize& (0+255),w,b
 16266  01B902  0101               	movlb	1	; () banked
 16267  01B904  6F89               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 16268  01B906  0102               	movlb	2	; () banked
 16269  01B908  5104               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 16270  01B90A  0101               	movlb	1	; () banked
 16271  01B90C  6F8A               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 16272                           
 16273                           ; BSR set to: 1
 16274                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
 16275  01B90E  010E               	movlb	14	; () banked
 16276  01B910  91CE               	bcf	206,0,b	;volatile
 16277                           
 16278                           ; BSR set to: 14
 16279                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
 16280  01B912  81C6               	bsf	198,0,b	;volatile
 16281                           
 16282                           ; BSR set to: 14
 16283                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 16284  01B914  0EA0               	movlw	low _TMR1_DefaultInterruptHandler
 16285  01B916  0102               	movlb	2	; () banked
 16286  01B918  6F00               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
 16287  01B91A  0EC8               	movlw	high _TMR1_DefaultInterruptHandler
 16288  01B91C  6F01               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16289  01B91E  0E01               	movlw	low (_TMR1_DefaultInterruptHandler shr (0+16))
 16290  01B920  6F02               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16291  01B922  EC9B  F0E3         	call	_TMR1_SetInterruptHandler	;wreg free
 16292                           
 16293                           ;tmr1.c: 96: T1CON = 0x11;
 16294  01B926  0E11               	movlw	17
 16295  01B928  6ECF               	movwf	4047,c	;volatile
 16296  01B92A  0012               	return		;funcret
 16297  01B92C                     __end_of_TMR1_Initialize:
 16298                           	opt callstack 0
 16299                           
 16300 ;; *************** function _TMR1_SetInterruptHandler *****************
 16301 ;; Defined at:
 16302 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 16303 ;; Parameters:    Size  Location     Type
 16304 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 16305 ;;		 -> QIErrorTimerHandler(1), TMR1_DefaultInterruptHandler(1), 
 16306 ;; Auto vars:     Size  Location     Type
 16307 ;;		None
 16308 ;; Return value:  Size  Location     Type
 16309 ;;                  1    wreg      void 
 16310 ;; Registers used:
 16311 ;;		wreg, status,2, status,0
 16312 ;; Tracked objects:
 16313 ;;		On entry : 0/0
 16314 ;;		On exit  : 0/0
 16315 ;;		Unchanged: 0/0
 16316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16317 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16320 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16321 ;;Total ram usage:        3 bytes
 16322 ;; Hardware stack levels used:    1
 16323 ;; Hardware stack levels required when called:   11
 16324 ;; This function calls:
 16325 ;;		Nothing
 16326 ;; This function is called by:
 16327 ;;		_TMR1_Initialize
 16328 ;;		_main
 16329 ;; This function uses a non-reentrant model
 16330 ;;
 16331                           
 16332                           	psect	text43
 16333  01C736                     __ptext43:
 16334                           	opt callstack 0
 16335  01C736                     _TMR1_SetInterruptHandler:
 16336                           	opt callstack 19
 16337                           
 16338                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
 16339                           
 16340                           ;incstack = 0
 16341  01C736  C200  F16E         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 16342  01C73A  C201  F16F         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 16343  01C73E  C202  F170         	movff	TMR1_SetInterruptHandler@InterruptHandler+2,_TMR1_InterruptHandler+2
 16344  01C742  0012               	return		;funcret
 16345  01C744                     __end_of_TMR1_SetInterruptHandler:
 16346                           	opt callstack 0
 16347                           
 16348 ;; *************** function _TMR0_Initialize *****************
 16349 ;; Defined at:
 16350 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 16351 ;; Parameters:    Size  Location     Type
 16352 ;;		None
 16353 ;; Auto vars:     Size  Location     Type
 16354 ;;		None
 16355 ;; Return value:  Size  Location     Type
 16356 ;;                  1    wreg      void 
 16357 ;; Registers used:
 16358 ;;		wreg, status,2, status,0, cstack
 16359 ;; Tracked objects:
 16360 ;;		On entry : 0/0
 16361 ;;		On exit  : 0/0
 16362 ;;		Unchanged: 0/0
 16363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16368 ;;Total ram usage:        0 bytes
 16369 ;; Hardware stack levels used:    1
 16370 ;; Hardware stack levels required when called:   12
 16371 ;; This function calls:
 16372 ;;		_TMR0_SetInterruptHandler
 16373 ;; This function is called by:
 16374 ;;		_SYSTEM_Initialize
 16375 ;; This function uses a non-reentrant model
 16376 ;;
 16377                           
 16378                           	psect	text44
 16379  01C18C                     __ptext44:
 16380                           	opt callstack 0
 16381  01C18C                     _TMR0_Initialize:
 16382                           	opt callstack 17
 16383                           
 16384                           ;tmr0.c: 66: T0CON1 = 0x6F;
 16385                           
 16386                           ;incstack = 0
 16387  01C18C  0E6F               	movlw	111
 16388  01C18E  6ED6               	movwf	4054,c	;volatile
 16389                           
 16390                           ;tmr0.c: 69: TMR0H = 0x79;
 16391  01C190  0E79               	movlw	121
 16392  01C192  6ED4               	movwf	4052,c	;volatile
 16393                           
 16394                           ;tmr0.c: 72: TMR0L = 0x00;
 16395  01C194  0E00               	movlw	0
 16396  01C196  6ED3               	movwf	4051,c	;volatile
 16397                           
 16398                           ;tmr0.c: 75: PIR0bits.TMR0IF = 0;
 16399  01C198  010E               	movlb	14	; () banked
 16400  01C19A  9BCA               	bcf	202,5,b	;volatile
 16401                           
 16402                           ; BSR set to: 14
 16403                           ;tmr0.c: 78: PIE0bits.TMR0IE = 1;
 16404  01C19C  8BC2               	bsf	194,5,b	;volatile
 16405                           
 16406                           ; BSR set to: 14
 16407                           ;tmr0.c: 81: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 16408  01C19E  0EA2               	movlw	low _TMR0_DefaultInterruptHandler
 16409  01C1A0  0102               	movlb	2	; () banked
 16410  01C1A2  6F00               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
 16411  01C1A4  0EC8               	movlw	high _TMR0_DefaultInterruptHandler
 16412  01C1A6  6F01               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16413  01C1A8  0E01               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
 16414  01C1AA  6F02               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16415  01C1AC  ECA2  F0E3         	call	_TMR0_SetInterruptHandler	;wreg free
 16416                           
 16417                           ;tmr0.c: 84: T0CON0 = 0x8F;
 16418  01C1B0  0E8F               	movlw	143
 16419  01C1B2  6ED5               	movwf	4053,c	;volatile
 16420  01C1B4  0012               	return		;funcret
 16421  01C1B6                     __end_of_TMR0_Initialize:
 16422                           	opt callstack 0
 16423                           
 16424 ;; *************** function _TMR0_SetInterruptHandler *****************
 16425 ;; Defined at:
 16426 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 16427 ;; Parameters:    Size  Location     Type
 16428 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 16429 ;;		 -> heartbeatTimerHandler(1), TMR0_DefaultInterruptHandler(1), 
 16430 ;; Auto vars:     Size  Location     Type
 16431 ;;		None
 16432 ;; Return value:  Size  Location     Type
 16433 ;;                  1    wreg      void 
 16434 ;; Registers used:
 16435 ;;		wreg, status,2, status,0
 16436 ;; Tracked objects:
 16437 ;;		On entry : 0/0
 16438 ;;		On exit  : 0/0
 16439 ;;		Unchanged: 0/0
 16440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16441 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16444 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16445 ;;Total ram usage:        3 bytes
 16446 ;; Hardware stack levels used:    1
 16447 ;; Hardware stack levels required when called:   11
 16448 ;; This function calls:
 16449 ;;		Nothing
 16450 ;; This function is called by:
 16451 ;;		_TMR0_Initialize
 16452 ;;		_main
 16453 ;; This function uses a non-reentrant model
 16454 ;;
 16455                           
 16456                           	psect	text45
 16457  01C744                     __ptext45:
 16458                           	opt callstack 0
 16459  01C744                     _TMR0_SetInterruptHandler:
 16460                           	opt callstack 19
 16461                           
 16462                           ;tmr0.c: 135: TMR0_InterruptHandler = InterruptHandler;
 16463                           
 16464                           ;incstack = 0
 16465  01C744  C200  F0C9         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 16466  01C748  C201  F0CA         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 16467  01C74C  C202  F0CB         	movff	TMR0_SetInterruptHandler@InterruptHandler+2,_TMR0_InterruptHandler+2
 16468  01C750  0012               	return		;funcret
 16469  01C752                     __end_of_TMR0_SetInterruptHandler:
 16470                           	opt callstack 0
 16471                           
 16472 ;; *************** function _PMD_Initialize *****************
 16473 ;; Defined at:
 16474 ;;		line 83 in file "mcc_generated_files/mcc.c"
 16475 ;; Parameters:    Size  Location     Type
 16476 ;;		None
 16477 ;; Auto vars:     Size  Location     Type
 16478 ;;		None
 16479 ;; Return value:  Size  Location     Type
 16480 ;;                  1    wreg      void 
 16481 ;; Registers used:
 16482 ;;		wreg, status,2
 16483 ;; Tracked objects:
 16484 ;;		On entry : 0/0
 16485 ;;		On exit  : 0/0
 16486 ;;		Unchanged: 0/0
 16487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16492 ;;Total ram usage:        0 bytes
 16493 ;; Hardware stack levels used:    1
 16494 ;; Hardware stack levels required when called:   11
 16495 ;; This function calls:
 16496 ;;		Nothing
 16497 ;; This function is called by:
 16498 ;;		_SYSTEM_Initialize
 16499 ;; This function uses a non-reentrant model
 16500 ;;
 16501                           
 16502                           	psect	text46
 16503  01C4EE                     __ptext46:
 16504                           	opt callstack 0
 16505  01C4EE                     _PMD_Initialize:
 16506                           	opt callstack 18
 16507                           
 16508                           ;mcc.c: 86: PMD0 = 0x00;
 16509                           
 16510                           ;incstack = 0
 16511  01C4EE  0E00               	movlw	0
 16512  01C4F0  010E               	movlb	14	; () banked
 16513  01C4F2  6FE1               	movwf	225,b	;volatile
 16514                           
 16515                           ;mcc.c: 88: PMD1 = 0x00;
 16516  01C4F4  0E00               	movlw	0
 16517  01C4F6  6FE2               	movwf	226,b	;volatile
 16518                           
 16519                           ;mcc.c: 90: PMD2 = 0x00;
 16520  01C4F8  0E00               	movlw	0
 16521  01C4FA  6FE3               	movwf	227,b	;volatile
 16522                           
 16523                           ;mcc.c: 92: PMD3 = 0x00;
 16524  01C4FC  0E00               	movlw	0
 16525  01C4FE  6FE4               	movwf	228,b	;volatile
 16526                           
 16527                           ;mcc.c: 94: PMD4 = 0x00;
 16528  01C500  0E00               	movlw	0
 16529  01C502  6FE5               	movwf	229,b	;volatile
 16530                           
 16531                           ;mcc.c: 96: PMD5 = 0x00;
 16532  01C504  0E00               	movlw	0
 16533  01C506  6FE6               	movwf	230,b	;volatile
 16534                           
 16535                           ; BSR set to: 14
 16536  01C508  0012               	return		;funcret
 16537  01C50A                     __end_of_PMD_Initialize:
 16538                           	opt callstack 0
 16539                           
 16540 ;; *************** function _PIN_MANAGER_Initialize *****************
 16541 ;; Defined at:
 16542 ;;		line 60 in file "mcc_generated_files/pin_manager.c"
 16543 ;; Parameters:    Size  Location     Type
 16544 ;;		None
 16545 ;; Auto vars:     Size  Location     Type
 16546 ;;		None
 16547 ;; Return value:  Size  Location     Type
 16548 ;;                  1    wreg      void 
 16549 ;; Registers used:
 16550 ;;		wreg, status,2, status,0, cstack
 16551 ;; Tracked objects:
 16552 ;;		On entry : 0/0
 16553 ;;		On exit  : 0/0
 16554 ;;		Unchanged: 0/0
 16555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16560 ;;Total ram usage:        0 bytes
 16561 ;; Hardware stack levels used:    1
 16562 ;; Hardware stack levels required when called:   12
 16563 ;; This function calls:
 16564 ;;		_IOCBF2_SetInterruptHandler
 16565 ;;		_IOCBF3_SetInterruptHandler
 16566 ;; This function is called by:
 16567 ;;		_SYSTEM_Initialize
 16568 ;; This function uses a non-reentrant model
 16569 ;;
 16570                           
 16571                           	psect	text47
 16572  01ABFE                     __ptext47:
 16573                           	opt callstack 0
 16574  01ABFE                     _PIN_MANAGER_Initialize:
 16575                           	opt callstack 17
 16576                           
 16577                           ;pin_manager.c: 65: LATA = 0x00;
 16578                           
 16579                           ; BSR set to: 14
 16580                           ;incstack = 0
 16581  01ABFE  0E00               	movlw	0
 16582  01AC00  6E83               	movwf	3971,c	;volatile
 16583                           
 16584                           ;pin_manager.c: 66: LATB = 0x00;
 16585  01AC02  0E00               	movlw	0
 16586  01AC04  6E84               	movwf	3972,c	;volatile
 16587                           
 16588                           ;pin_manager.c: 67: LATC = 0x00;
 16589  01AC06  0E00               	movlw	0
 16590  01AC08  6E85               	movwf	3973,c	;volatile
 16591                           
 16592                           ;pin_manager.c: 72: TRISA = 0xFF;
 16593  01AC0A  6888               	setf	3976,c	;volatile
 16594                           
 16595                           ;pin_manager.c: 73: TRISB = 0x3F;
 16596  01AC0C  0E3F               	movlw	63
 16597  01AC0E  6E89               	movwf	3977,c	;volatile
 16598                           
 16599                           ;pin_manager.c: 74: TRISC = 0x08;
 16600  01AC10  0E08               	movlw	8
 16601  01AC12  6E8A               	movwf	3978,c	;volatile
 16602                           
 16603                           ;pin_manager.c: 79: ANSELC = 0x00;
 16604  01AC14  0E00               	movlw	0
 16605  01AC16  010F               	movlb	15	; () banked
 16606  01AC18  6F21               	movwf	33,b	;volatile
 16607                           
 16608                           ;pin_manager.c: 80: ANSELB = 0x00;
 16609  01AC1A  0E00               	movlw	0
 16610  01AC1C  6F19               	movwf	25,b	;volatile
 16611                           
 16612                           ;pin_manager.c: 81: ANSELA = 0x3F;
 16613  01AC1E  0E3F               	movlw	63
 16614  01AC20  6F11               	movwf	17,b	;volatile
 16615                           
 16616                           ;pin_manager.c: 86: WPUE = 0x00;
 16617  01AC22  0E00               	movlw	0
 16618  01AC24  6F2D               	movwf	45,b	;volatile
 16619                           
 16620                           ;pin_manager.c: 87: WPUB = 0x00;
 16621  01AC26  0E00               	movlw	0
 16622  01AC28  6F18               	movwf	24,b	;volatile
 16623                           
 16624                           ;pin_manager.c: 88: WPUA = 0x00;
 16625  01AC2A  0E00               	movlw	0
 16626  01AC2C  6F10               	movwf	16,b	;volatile
 16627                           
 16628                           ;pin_manager.c: 89: WPUC = 0x00;
 16629  01AC2E  0E00               	movlw	0
 16630  01AC30  6F20               	movwf	32,b	;volatile
 16631                           
 16632                           ;pin_manager.c: 94: ODCONA = 0x00;
 16633  01AC32  0E00               	movlw	0
 16634  01AC34  6F0F               	movwf	15,b	;volatile
 16635                           
 16636                           ;pin_manager.c: 95: ODCONB = 0x00;
 16637  01AC36  0E00               	movlw	0
 16638  01AC38  6F17               	movwf	23,b	;volatile
 16639                           
 16640                           ;pin_manager.c: 96: ODCONC = 0x00;
 16641  01AC3A  0E00               	movlw	0
 16642  01AC3C  6F1F               	movwf	31,b	;volatile
 16643                           
 16644                           ; BSR set to: 15
 16645                           ;pin_manager.c: 101: SLRCONA = 0xFF;
 16646  01AC3E  690E               	setf	14,b	;volatile
 16647                           
 16648                           ; BSR set to: 15
 16649                           ;pin_manager.c: 102: SLRCONB = 0xFF;
 16650  01AC40  6916               	setf	22,b	;volatile
 16651                           
 16652                           ; BSR set to: 15
 16653                           ;pin_manager.c: 103: SLRCONC = 0xFF;
 16654  01AC42  691E               	setf	30,b	;volatile
 16655                           
 16656                           ; BSR set to: 15
 16657                           ;pin_manager.c: 110: IOCBFbits.IOCBF2 = 0;
 16658  01AC44  9512               	bcf	18,2,b	;volatile
 16659                           
 16660                           ; BSR set to: 15
 16661                           ;pin_manager.c: 112: IOCBFbits.IOCBF3 = 0;
 16662  01AC46  9712               	bcf	18,3,b	;volatile
 16663                           
 16664                           ; BSR set to: 15
 16665                           ;pin_manager.c: 114: IOCBNbits.IOCBN2 = 1;
 16666  01AC48  8513               	bsf	19,2,b	;volatile
 16667                           
 16668                           ; BSR set to: 15
 16669                           ;pin_manager.c: 116: IOCBNbits.IOCBN3 = 1;
 16670  01AC4A  8713               	bsf	19,3,b	;volatile
 16671                           
 16672                           ; BSR set to: 15
 16673                           ;pin_manager.c: 118: IOCBPbits.IOCBP2 = 1;
 16674  01AC4C  8514               	bsf	20,2,b	;volatile
 16675                           
 16676                           ; BSR set to: 15
 16677                           ;pin_manager.c: 120: IOCBPbits.IOCBP3 = 1;
 16678  01AC4E  8714               	bsf	20,3,b	;volatile
 16679                           
 16680                           ; BSR set to: 15
 16681                           ;pin_manager.c: 125: IOCBF2_SetInterruptHandler(IOCBF2_DefaultInterruptHandler);
 16682  01AC50  0EA6               	movlw	low _IOCBF2_DefaultInterruptHandler
 16683  01AC52  0102               	movlb	2	; () banked
 16684  01AC54  6F00               	movwf	IOCBF2_SetInterruptHandler@InterruptHandler& (0+255),b
 16685  01AC56  0EC8               	movlw	high _IOCBF2_DefaultInterruptHandler
 16686  01AC58  6F01               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16687  01AC5A  0E01               	movlw	low (_IOCBF2_DefaultInterruptHandler shr (0+16))
 16688  01AC5C  6F02               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16689  01AC5E  ECB0  F0E3         	call	_IOCBF2_SetInterruptHandler	;wreg free
 16690                           
 16691                           ;pin_manager.c: 126: IOCBF3_SetInterruptHandler(IOCBF3_DefaultInterruptHandler);
 16692  01AC62  0EA4               	movlw	low _IOCBF3_DefaultInterruptHandler
 16693  01AC64  0102               	movlb	2	; () banked
 16694  01AC66  6F00               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler& (0+255),b
 16695  01AC68  0EC8               	movlw	high _IOCBF3_DefaultInterruptHandler
 16696  01AC6A  6F01               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16697  01AC6C  0E01               	movlw	low (_IOCBF3_DefaultInterruptHandler shr (0+16))
 16698  01AC6E  6F02               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16699  01AC70  ECA9  F0E3         	call	_IOCBF3_SetInterruptHandler	;wreg free
 16700                           
 16701                           ;pin_manager.c: 129: PIE0bits.IOCIE = 1;
 16702  01AC74  010E               	movlb	14	; () banked
 16703  01AC76  89C2               	bsf	194,4,b	;volatile
 16704                           
 16705                           ;pin_manager.c: 132: CCP2PPS = 0x09;
 16706  01AC78  0E09               	movlw	9
 16707  01AC7A  6FB0               	movwf	176,b	;volatile
 16708                           
 16709                           ;pin_manager.c: 133: SSP2DATPPS = 0x0C;
 16710  01AC7C  0E0C               	movlw	12
 16711  01AC7E  6F90               	movwf	144,b	;volatile
 16712                           
 16713                           ;pin_manager.c: 134: RB5PPS = 0x11;
 16714  01AC80  0E11               	movlw	17
 16715  01AC82  6FF4               	movwf	244,b	;volatile
 16716                           
 16717                           ;pin_manager.c: 135: RC4PPS = 0x0B;
 16718  01AC84  0E0B               	movlw	11
 16719  01AC86  6FFB               	movwf	251,b	;volatile
 16720                           
 16721                           ;pin_manager.c: 136: RB4PPS = 0x12;
 16722  01AC88  0E12               	movlw	18
 16723  01AC8A  6FF3               	movwf	243,b	;volatile
 16724                           
 16725                           ;pin_manager.c: 137: INT2PPS = 0x06;
 16726  01AC8C  0E06               	movlw	6
 16727  01AC8E  6FA3               	movwf	163,b	;volatile
 16728                           
 16729                           ;pin_manager.c: 138: INT1PPS = 0x07;
 16730  01AC90  0E07               	movlw	7
 16731  01AC92  6FA2               	movwf	162,b	;volatile
 16732                           
 16733                           ;pin_manager.c: 139: RX2PPS = 0x13;
 16734  01AC94  0E13               	movlw	19
 16735  01AC96  6F8D               	movwf	141,b	;volatile
 16736                           
 16737                           ;pin_manager.c: 140: SSP2CLKPPS = 0x0D;
 16738  01AC98  0E0D               	movlw	13
 16739  01AC9A  6F8F               	movwf	143,b	;volatile
 16740                           
 16741                           ; BSR set to: 14
 16742  01AC9C  0012               	return		;funcret
 16743  01AC9E                     __end_of_PIN_MANAGER_Initialize:
 16744                           	opt callstack 0
 16745                           
 16746 ;; *************** function _IOCBF3_SetInterruptHandler *****************
 16747 ;; Defined at:
 16748 ;;		line 205 in file "mcc_generated_files/pin_manager.c"
 16749 ;; Parameters:    Size  Location     Type
 16750 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 16751 ;;		 -> QIChargeIOCHandler(1), IOCBF3_DefaultInterruptHandler(1), 
 16752 ;; Auto vars:     Size  Location     Type
 16753 ;;		None
 16754 ;; Return value:  Size  Location     Type
 16755 ;;                  1    wreg      void 
 16756 ;; Registers used:
 16757 ;;		wreg, status,2, status,0
 16758 ;; Tracked objects:
 16759 ;;		On entry : 0/0
 16760 ;;		On exit  : 0/0
 16761 ;;		Unchanged: 0/0
 16762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16763 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16766 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16767 ;;Total ram usage:        3 bytes
 16768 ;; Hardware stack levels used:    1
 16769 ;; Hardware stack levels required when called:   11
 16770 ;; This function calls:
 16771 ;;		Nothing
 16772 ;; This function is called by:
 16773 ;;		_PIN_MANAGER_Initialize
 16774 ;;		_main
 16775 ;; This function uses a non-reentrant model
 16776 ;;
 16777                           
 16778                           	psect	text48
 16779  01C752                     __ptext48:
 16780                           	opt callstack 0
 16781  01C752                     _IOCBF3_SetInterruptHandler:
 16782                           	opt callstack 17
 16783                           
 16784                           ;pin_manager.c: 206: IOCBF3_InterruptHandler = InterruptHandler;
 16785                           
 16786                           ; BSR set to: 14
 16787                           ;incstack = 0
 16788  01C752  C200  F177         	movff	IOCBF3_SetInterruptHandler@InterruptHandler,_IOCBF3_InterruptHandler
 16789  01C756  C201  F178         	movff	IOCBF3_SetInterruptHandler@InterruptHandler+1,_IOCBF3_InterruptHandler+1
 16790  01C75A  C202  F179         	movff	IOCBF3_SetInterruptHandler@InterruptHandler+2,_IOCBF3_InterruptHandler+2
 16791  01C75E  0012               	return		;funcret
 16792  01C760                     __end_of_IOCBF3_SetInterruptHandler:
 16793                           	opt callstack 0
 16794                           
 16795 ;; *************** function _IOCBF2_SetInterruptHandler *****************
 16796 ;; Defined at:
 16797 ;;		line 175 in file "mcc_generated_files/pin_manager.c"
 16798 ;; Parameters:    Size  Location     Type
 16799 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 16800 ;;		 -> QIIdleIOCHandler(1), IOCBF2_DefaultInterruptHandler(1), 
 16801 ;; Auto vars:     Size  Location     Type
 16802 ;;		None
 16803 ;; Return value:  Size  Location     Type
 16804 ;;                  1    wreg      void 
 16805 ;; Registers used:
 16806 ;;		wreg, status,2, status,0
 16807 ;; Tracked objects:
 16808 ;;		On entry : 0/0
 16809 ;;		On exit  : 0/0
 16810 ;;		Unchanged: 0/0
 16811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16812 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16815 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16816 ;;Total ram usage:        3 bytes
 16817 ;; Hardware stack levels used:    1
 16818 ;; Hardware stack levels required when called:   11
 16819 ;; This function calls:
 16820 ;;		Nothing
 16821 ;; This function is called by:
 16822 ;;		_PIN_MANAGER_Initialize
 16823 ;;		_main
 16824 ;; This function uses a non-reentrant model
 16825 ;;
 16826                           
 16827                           	psect	text49
 16828  01C760                     __ptext49:
 16829                           	opt callstack 0
 16830  01C760                     _IOCBF2_SetInterruptHandler:
 16831                           	opt callstack 17
 16832                           
 16833                           ;pin_manager.c: 176: IOCBF2_InterruptHandler = InterruptHandler;
 16834                           
 16835                           ;incstack = 0
 16836  01C760  C200  F17A         	movff	IOCBF2_SetInterruptHandler@InterruptHandler,_IOCBF2_InterruptHandler
 16837  01C764  C201  F17B         	movff	IOCBF2_SetInterruptHandler@InterruptHandler+1,_IOCBF2_InterruptHandler+1
 16838  01C768  C202  F17C         	movff	IOCBF2_SetInterruptHandler@InterruptHandler+2,_IOCBF2_InterruptHandler+2
 16839  01C76C  0012               	return		;funcret
 16840  01C76E                     __end_of_IOCBF2_SetInterruptHandler:
 16841                           	opt callstack 0
 16842                           
 16843 ;; *************** function _OSCILLATOR_Initialize *****************
 16844 ;; Defined at:
 16845 ;;		line 69 in file "mcc_generated_files/mcc.c"
 16846 ;; Parameters:    Size  Location     Type
 16847 ;;		None
 16848 ;; Auto vars:     Size  Location     Type
 16849 ;;		None
 16850 ;; Return value:  Size  Location     Type
 16851 ;;                  1    wreg      void 
 16852 ;; Registers used:
 16853 ;;		wreg, status,2
 16854 ;; Tracked objects:
 16855 ;;		On entry : 0/0
 16856 ;;		On exit  : 0/0
 16857 ;;		Unchanged: 0/0
 16858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16863 ;;Total ram usage:        0 bytes
 16864 ;; Hardware stack levels used:    1
 16865 ;; Hardware stack levels required when called:   11
 16866 ;; This function calls:
 16867 ;;		Nothing
 16868 ;; This function is called by:
 16869 ;;		_SYSTEM_Initialize
 16870 ;; This function uses a non-reentrant model
 16871 ;;
 16872                           
 16873                           	psect	text50
 16874  01C5C6                     __ptext50:
 16875                           	opt callstack 0
 16876  01C5C6                     _OSCILLATOR_Initialize:
 16877                           	opt callstack 18
 16878                           
 16879                           ;mcc.c: 72: OSCCON1 = 0x60;
 16880                           
 16881                           ;incstack = 0
 16882  01C5C6  0E60               	movlw	96
 16883  01C5C8  010E               	movlb	14	; () banked
 16884  01C5CA  6FD8               	movwf	216,b	;volatile
 16885                           
 16886                           ;mcc.c: 74: OSCCON3 = 0x00;
 16887  01C5CC  0E00               	movlw	0
 16888  01C5CE  6FDA               	movwf	218,b	;volatile
 16889                           
 16890                           ;mcc.c: 76: OSCEN = 0x00;
 16891  01C5D0  0E00               	movlw	0
 16892  01C5D2  6FDC               	movwf	220,b	;volatile
 16893                           
 16894                           ;mcc.c: 78: OSCFRQ = 0x08;
 16895  01C5D4  0E08               	movlw	8
 16896  01C5D6  6FDE               	movwf	222,b	;volatile
 16897                           
 16898                           ;mcc.c: 80: OSCTUNE = 0x00;
 16899  01C5D8  0E00               	movlw	0
 16900  01C5DA  6FDD               	movwf	221,b	;volatile
 16901                           
 16902                           ; BSR set to: 14
 16903  01C5DC  0012               	return		;funcret
 16904  01C5DE                     __end_of_OSCILLATOR_Initialize:
 16905                           	opt callstack 0
 16906                           
 16907 ;; *************** function _INTERRUPT_Initialize *****************
 16908 ;; Defined at:
 16909 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 16910 ;; Parameters:    Size  Location     Type
 16911 ;;		None
 16912 ;; Auto vars:     Size  Location     Type
 16913 ;;		None
 16914 ;; Return value:  Size  Location     Type
 16915 ;;                  1    wreg      void 
 16916 ;; Registers used:
 16917 ;;		None
 16918 ;; Tracked objects:
 16919 ;;		On entry : 0/0
 16920 ;;		On exit  : 0/0
 16921 ;;		Unchanged: 0/0
 16922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16927 ;;Total ram usage:        0 bytes
 16928 ;; Hardware stack levels used:    1
 16929 ;; Hardware stack levels required when called:   11
 16930 ;; This function calls:
 16931 ;;		Nothing
 16932 ;; This function is called by:
 16933 ;;		_SYSTEM_Initialize
 16934 ;; This function uses a non-reentrant model
 16935 ;;
 16936                           
 16937                           	psect	text51
 16938  01C434                     __ptext51:
 16939                           	opt callstack 0
 16940  01C434                     _INTERRUPT_Initialize:
 16941                           	opt callstack 18
 16942                           
 16943                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 16944                           
 16945                           ; BSR set to: 14
 16946                           ;incstack = 0
 16947  01C434  8AF2               	bsf	4082,5,c	;volatile
 16948                           
 16949                           ;interrupt_manager.c: 60: IPR4bits.TMR1IP = 1;
 16950  01C436  010E               	movlb	14	; () banked
 16951  01C438  81BE               	bsf	190,0,b	;volatile
 16952                           
 16953                           ;interrupt_manager.c: 63: IPR0bits.INT2IP = 1;
 16954  01C43A  85BA               	bsf	186,2,b	;volatile
 16955                           
 16956                           ;interrupt_manager.c: 66: IPR0bits.TMR0IP = 1;
 16957  01C43C  8BBA               	bsf	186,5,b	;volatile
 16958                           
 16959                           ;interrupt_manager.c: 69: IPR3bits.RC2IP = 1;
 16960  01C43E  8FBD               	bsf	189,7,b	;volatile
 16961                           
 16962                           ;interrupt_manager.c: 72: IPR1bits.ADTIP = 1;
 16963  01C440  83BB               	bsf	187,1,b	;volatile
 16964                           
 16965                           ;interrupt_manager.c: 75: IPR0bits.IOCIP = 1;
 16966  01C442  89BA               	bsf	186,4,b	;volatile
 16967                           
 16968                           ;interrupt_manager.c: 78: IPR3bits.TX2IP = 1;
 16969  01C444  8DBD               	bsf	189,6,b	;volatile
 16970                           
 16971                           ;interrupt_manager.c: 81: IPR0bits.INT1IP = 1;
 16972  01C446  83BA               	bsf	186,1,b	;volatile
 16973                           
 16974                           ;interrupt_manager.c: 85: IPR4bits.TMR2IP = 0;
 16975  01C448  93BE               	bcf	190,1,b	;volatile
 16976                           
 16977                           ;interrupt_manager.c: 88: IPR3bits.BCL2IP = 0;
 16978  01C44A  97BD               	bcf	189,3,b	;volatile
 16979                           
 16980                           ;interrupt_manager.c: 91: IPR3bits.SSP2IP = 0;
 16981  01C44C  95BD               	bcf	189,2,b	;volatile
 16982                           
 16983                           ;interrupt_manager.c: 94: IPR4bits.TMR3IP = 0;
 16984  01C44E  95BE               	bcf	190,2,b	;volatile
 16985                           
 16986                           ;interrupt_manager.c: 97: IPR6bits.CCP2IP = 0;
 16987  01C450  93C0               	bcf	192,1,b	;volatile
 16988                           
 16989                           ; BSR set to: 14
 16990  01C452  0012               	return		;funcret
 16991  01C454                     __end_of_INTERRUPT_Initialize:
 16992                           	opt callstack 0
 16993                           
 16994 ;; *************** function _I2C2_Initialize *****************
 16995 ;; Defined at:
 16996 ;;		line 199 in file "mcc_generated_files/i2c2.c"
 16997 ;; Parameters:    Size  Location     Type
 16998 ;;		None
 16999 ;; Auto vars:     Size  Location     Type
 17000 ;;		None
 17001 ;; Return value:  Size  Location     Type
 17002 ;;                  1    wreg      void 
 17003 ;; Registers used:
 17004 ;;		wreg, status,2, status,0
 17005 ;; Tracked objects:
 17006 ;;		On entry : 0/0
 17007 ;;		On exit  : 0/0
 17008 ;;		Unchanged: 0/0
 17009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17014 ;;Total ram usage:        0 bytes
 17015 ;; Hardware stack levels used:    1
 17016 ;; Hardware stack levels required when called:   11
 17017 ;; This function calls:
 17018 ;;		Nothing
 17019 ;; This function is called by:
 17020 ;;		_SYSTEM_Initialize
 17021 ;; This function uses a non-reentrant model
 17022 ;;
 17023                           
 17024                           	psect	text52
 17025  01BF6C                     __ptext52:
 17026                           	opt callstack 0
 17027  01BF6C                     _I2C2_Initialize:
 17028                           	opt callstack 18
 17029                           
 17030                           ;i2c2.c: 201: i2c2_object.pTrHead = i2c2_tr_queue;
 17031                           
 17032                           ; BSR set to: 14
 17033                           ;incstack = 0
 17034  01BF6C  0EA3               	movlw	low _i2c2_tr_queue
 17035  01BF6E  0101               	movlb	1	; () banked
 17036  01BF70  6F63               	movwf	(_i2c2_object+2)& (0+255),b
 17037  01BF72  0E01               	movlw	high _i2c2_tr_queue
 17038  01BF74  6F64               	movwf	(_i2c2_object+3)& (0+255),b
 17039                           
 17040                           ;i2c2.c: 202: i2c2_object.pTrTail = i2c2_tr_queue;
 17041  01BF76  0EA3               	movlw	low _i2c2_tr_queue
 17042  01BF78  6F61               	movwf	_i2c2_object& (0+255),b
 17043  01BF7A  0E01               	movlw	high _i2c2_tr_queue
 17044  01BF7C  6F62               	movwf	(_i2c2_object+1)& (0+255),b
 17045                           
 17046                           ; BSR set to: 1
 17047                           ;i2c2.c: 203: i2c2_object.trStatus.s.empty = 1;
 17048  01BF7E  8365               	bsf	(_i2c2_object+4)& (0+255),1,b
 17049                           
 17050                           ; BSR set to: 1
 17051                           ;i2c2.c: 204: i2c2_object.trStatus.s.full = 0;
 17052  01BF80  9165               	bcf	(_i2c2_object+4)& (0+255),0,b
 17053                           
 17054                           ; BSR set to: 1
 17055                           ;i2c2.c: 206: i2c2_object.i2cErrors = 0;
 17056  01BF82  0E00               	movlw	0
 17057  01BF84  6F67               	movwf	(_i2c2_object+6)& (0+255),b
 17058                           
 17059                           ; BSR set to: 1
 17060                           ;i2c2.c: 209: SSP2STAT = 0x00;
 17061  01BF86  0E00               	movlw	0
 17062  01BF88  010E               	movlb	14	; () banked
 17063  01BF8A  6F95               	movwf	149,b	;volatile
 17064                           
 17065                           ; BSR set to: 14
 17066                           ;i2c2.c: 211: SSP2CON1 = 0x28;
 17067  01BF8C  0E28               	movlw	40
 17068  01BF8E  6F96               	movwf	150,b	;volatile
 17069                           
 17070                           ; BSR set to: 14
 17071                           ;i2c2.c: 213: SSP2CON3 = 0x00;
 17072  01BF90  0E00               	movlw	0
 17073  01BF92  6F98               	movwf	152,b	;volatile
 17074                           
 17075                           ; BSR set to: 14
 17076                           ;i2c2.c: 215: SSP2ADD = 0x27;
 17077  01BF94  0E27               	movlw	39
 17078  01BF96  6F93               	movwf	147,b	;volatile
 17079                           
 17080                           ; BSR set to: 14
 17081                           ;i2c2.c: 218: PIR3bits.SSP2IF = 0;
 17082  01BF98  95CD               	bcf	205,2,b	;volatile
 17083                           
 17084                           ; BSR set to: 14
 17085                           ;i2c2.c: 219: PIR3bits.BCL2IF = 0;
 17086  01BF9A  97CD               	bcf	205,3,b	;volatile
 17087                           
 17088                           ; BSR set to: 14
 17089                           ;i2c2.c: 222: PIE3bits.SSP2IE = 1;
 17090  01BF9C  85C5               	bsf	197,2,b	;volatile
 17091                           
 17092                           ; BSR set to: 14
 17093                           ;i2c2.c: 223: PIE3bits.BCL2IE = 1;
 17094  01BF9E  87C5               	bsf	197,3,b	;volatile
 17095                           
 17096                           ; BSR set to: 14
 17097  01BFA0  0012               	return		;funcret
 17098  01BFA2                     __end_of_I2C2_Initialize:
 17099                           	opt callstack 0
 17100                           
 17101 ;; *************** function _FVR_Initialize *****************
 17102 ;; Defined at:
 17103 ;;		line 58 in file "mcc_generated_files/fvr.c"
 17104 ;; Parameters:    Size  Location     Type
 17105 ;;		None
 17106 ;; Auto vars:     Size  Location     Type
 17107 ;;		None
 17108 ;; Return value:  Size  Location     Type
 17109 ;;                  1    wreg      void 
 17110 ;; Registers used:
 17111 ;;		wreg, status,2
 17112 ;; Tracked objects:
 17113 ;;		On entry : 0/0
 17114 ;;		On exit  : 0/0
 17115 ;;		Unchanged: 0/0
 17116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17121 ;;Total ram usage:        0 bytes
 17122 ;; Hardware stack levels used:    1
 17123 ;; Hardware stack levels required when called:   11
 17124 ;; This function calls:
 17125 ;;		Nothing
 17126 ;; This function is called by:
 17127 ;;		_SYSTEM_Initialize
 17128 ;; This function uses a non-reentrant model
 17129 ;;
 17130                           
 17131                           	psect	text53
 17132  01C7F8                     __ptext53:
 17133                           	opt callstack 0
 17134  01C7F8                     _FVR_Initialize:
 17135                           	opt callstack 18
 17136                           
 17137                           ;fvr.c: 61: FVRCON = 0xB3;
 17138                           
 17139                           ; BSR set to: 14
 17140                           ;incstack = 0
 17141  01C7F8  0EB3               	movlw	179
 17142  01C7FA  010F               	movlb	15	; () banked
 17143  01C7FC  6F31               	movwf	49,b	;volatile
 17144                           
 17145                           ; BSR set to: 15
 17146                           ;fvr.c: 62: FVRCONbits.TSRNG = 1;
 17147  01C7FE  8931               	bsf	49,4,b	;volatile
 17148                           
 17149                           ; BSR set to: 15
 17150                           ;fvr.c: 63: FVRCONbits.TSEN = 1;
 17151  01C800  8B31               	bsf	49,5,b	;volatile
 17152                           
 17153                           ; BSR set to: 15
 17154  01C802  0012               	return		;funcret
 17155  01C804                     __end_of_FVR_Initialize:
 17156                           	opt callstack 0
 17157                           
 17158 ;; *************** function _EXT_INT_Initialize *****************
 17159 ;; Defined at:
 17160 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 17161 ;; Parameters:    Size  Location     Type
 17162 ;;		None
 17163 ;; Auto vars:     Size  Location     Type
 17164 ;;		None
 17165 ;; Return value:  Size  Location     Type
 17166 ;;                  1    wreg      void 
 17167 ;; Registers used:
 17168 ;;		wreg, status,2, status,0, cstack
 17169 ;; Tracked objects:
 17170 ;;		On entry : 0/0
 17171 ;;		On exit  : 0/0
 17172 ;;		Unchanged: 0/0
 17173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17178 ;;Total ram usage:        0 bytes
 17179 ;; Hardware stack levels used:    1
 17180 ;; Hardware stack levels required when called:   12
 17181 ;; This function calls:
 17182 ;;		_INT1_SetInterruptHandler
 17183 ;;		_INT2_SetInterruptHandler
 17184 ;; This function is called by:
 17185 ;;		_SYSTEM_Initialize
 17186 ;; This function uses a non-reentrant model
 17187 ;;
 17188                           
 17189                           	psect	text54
 17190  01BF34                     __ptext54:
 17191                           	opt callstack 0
 17192  01BF34                     _EXT_INT_Initialize:
 17193                           	opt callstack 17
 17194                           
 17195                           ;ext_int.c: 91: (PIR0bits.INT1IF = 0);
 17196                           
 17197                           ; BSR set to: 15
 17198                           ;incstack = 0
 17199  01BF34  010E               	movlb	14	; () banked
 17200  01BF36  93CA               	bcf	202,1,b	;volatile
 17201                           
 17202                           ;ext_int.c: 92: (INTCONbits.INT1EDG = 1);
 17203  01BF38  82F2               	bsf	4082,1,c	;volatile
 17204                           
 17205                           ; BSR set to: 14
 17206                           ;ext_int.c: 94: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
 17207  01BF3A  0EAA               	movlw	low _INT1_DefaultInterruptHandler
 17208  01BF3C  0102               	movlb	2	; () banked
 17209  01BF3E  6F00               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
 17210  01BF40  0EC8               	movlw	high _INT1_DefaultInterruptHandler
 17211  01BF42  6F01               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 17212  01BF44  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 17213  01BF46  6F02               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 17214  01BF48  ECBE  F0E3         	call	_INT1_SetInterruptHandler	;wreg free
 17215                           
 17216                           ;ext_int.c: 95: (PIE0bits.INT1IE = 1);
 17217  01BF4C  010E               	movlb	14	; () banked
 17218  01BF4E  83C2               	bsf	194,1,b	;volatile
 17219                           
 17220                           ; BSR set to: 14
 17221                           ;ext_int.c: 100: (PIR0bits.INT2IF = 0);
 17222  01BF50  95CA               	bcf	202,2,b	;volatile
 17223                           
 17224                           ; BSR set to: 14
 17225                           ;ext_int.c: 101: (INTCONbits.INT2EDG = 1);
 17226  01BF52  84F2               	bsf	4082,2,c	;volatile
 17227                           
 17228                           ;ext_int.c: 103: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
 17229  01BF54  0EA8               	movlw	low _INT2_DefaultInterruptHandler
 17230  01BF56  0102               	movlb	2	; () banked
 17231  01BF58  6F00               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
 17232  01BF5A  0EC8               	movlw	high _INT2_DefaultInterruptHandler
 17233  01BF5C  6F01               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 17234  01BF5E  0E01               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 17235  01BF60  6F02               	movwf	(INT2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 17236  01BF62  ECB7  F0E3         	call	_INT2_SetInterruptHandler	;wreg free
 17237                           
 17238                           ;ext_int.c: 104: (PIE0bits.INT2IE = 1);
 17239  01BF66  010E               	movlb	14	; () banked
 17240  01BF68  85C2               	bsf	194,2,b	;volatile
 17241                           
 17242                           ; BSR set to: 14
 17243  01BF6A  0012               	return		;funcret
 17244  01BF6C                     __end_of_EXT_INT_Initialize:
 17245                           	opt callstack 0
 17246                           
 17247 ;; *************** function _INT2_SetInterruptHandler *****************
 17248 ;; Defined at:
 17249 ;;		line 77 in file "mcc_generated_files/ext_int.c"
 17250 ;; Parameters:    Size  Location     Type
 17251 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 17252 ;;		 -> rightCapTouchHandler(1), INT2_DefaultInterruptHandler(1), 
 17253 ;; Auto vars:     Size  Location     Type
 17254 ;;		None
 17255 ;; Return value:  Size  Location     Type
 17256 ;;                  1    wreg      void 
 17257 ;; Registers used:
 17258 ;;		wreg, status,2, status,0
 17259 ;; Tracked objects:
 17260 ;;		On entry : 0/0
 17261 ;;		On exit  : 0/0
 17262 ;;		Unchanged: 0/0
 17263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17264 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17267 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17268 ;;Total ram usage:        3 bytes
 17269 ;; Hardware stack levels used:    1
 17270 ;; Hardware stack levels required when called:   11
 17271 ;; This function calls:
 17272 ;;		Nothing
 17273 ;; This function is called by:
 17274 ;;		_EXT_INT_Initialize
 17275 ;;		_main
 17276 ;; This function uses a non-reentrant model
 17277 ;;
 17278                           
 17279                           	psect	text55
 17280  01C76E                     __ptext55:
 17281                           	opt callstack 0
 17282  01C76E                     _INT2_SetInterruptHandler:
 17283                           	opt callstack 17
 17284                           
 17285                           ;ext_int.c: 78: INT2_InterruptHandler = InterruptHandler;
 17286                           
 17287                           ; BSR set to: 14
 17288                           ;incstack = 0
 17289  01C76E  C200  F183         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
 17290  01C772  C201  F184         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
 17291  01C776  C202  F185         	movff	INT2_SetInterruptHandler@InterruptHandler+2,_INT2_InterruptHandler+2
 17292  01C77A  0012               	return		;funcret
 17293  01C77C                     __end_of_INT2_SetInterruptHandler:
 17294                           	opt callstack 0
 17295                           
 17296 ;; *************** function _INT1_SetInterruptHandler *****************
 17297 ;; Defined at:
 17298 ;;		line 51 in file "mcc_generated_files/ext_int.c"
 17299 ;; Parameters:    Size  Location     Type
 17300 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 17301 ;;		 -> leftCapTouchHandler(1), INT1_DefaultInterruptHandler(1), 
 17302 ;; Auto vars:     Size  Location     Type
 17303 ;;		None
 17304 ;; Return value:  Size  Location     Type
 17305 ;;                  1    wreg      void 
 17306 ;; Registers used:
 17307 ;;		wreg, status,2, status,0
 17308 ;; Tracked objects:
 17309 ;;		On entry : 0/0
 17310 ;;		On exit  : 0/0
 17311 ;;		Unchanged: 0/0
 17312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17313 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17316 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17317 ;;Total ram usage:        3 bytes
 17318 ;; Hardware stack levels used:    1
 17319 ;; Hardware stack levels required when called:   11
 17320 ;; This function calls:
 17321 ;;		Nothing
 17322 ;; This function is called by:
 17323 ;;		_EXT_INT_Initialize
 17324 ;;		_main
 17325 ;; This function uses a non-reentrant model
 17326 ;;
 17327                           
 17328                           	psect	text56
 17329  01C77C                     __ptext56:
 17330                           	opt callstack 0
 17331  01C77C                     _INT1_SetInterruptHandler:
 17332                           	opt callstack 17
 17333                           
 17334                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
 17335                           
 17336                           ;incstack = 0
 17337  01C77C  C200  F186         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
 17338  01C780  C201  F187         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
 17339  01C784  C202  F188         	movff	INT1_SetInterruptHandler@InterruptHandler+2,_INT1_InterruptHandler+2
 17340  01C788  0012               	return		;funcret
 17341  01C78A                     __end_of_INT1_SetInterruptHandler:
 17342                           	opt callstack 0
 17343                           
 17344 ;; *************** function _EUSART2_Initialize *****************
 17345 ;; Defined at:
 17346 ;;		line 79 in file "mcc_generated_files/eusart2.c"
 17347 ;; Parameters:    Size  Location     Type
 17348 ;;		None
 17349 ;; Auto vars:     Size  Location     Type
 17350 ;;		None
 17351 ;; Return value:  Size  Location     Type
 17352 ;;                  1    wreg      void 
 17353 ;; Registers used:
 17354 ;;		wreg, status,2, status,0, cstack
 17355 ;; Tracked objects:
 17356 ;;		On entry : 0/0
 17357 ;;		On exit  : 0/0
 17358 ;;		Unchanged: 0/0
 17359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17364 ;;Total ram usage:        0 bytes
 17365 ;; Hardware stack levels used:    1
 17366 ;; Hardware stack levels required when called:   12
 17367 ;; This function calls:
 17368 ;;		_EUSART2_SetRxInterruptHandler
 17369 ;;		_EUSART2_SetTxInterruptHandler
 17370 ;; This function is called by:
 17371 ;;		_SYSTEM_Initialize
 17372 ;; This function uses a non-reentrant model
 17373 ;;
 17374                           
 17375                           	psect	text57
 17376  01B184                     __ptext57:
 17377                           	opt callstack 0
 17378  01B184                     _EUSART2_Initialize:
 17379                           	opt callstack 17
 17380                           
 17381                           ;eusart2.c: 82: PIE3bits.RC2IE = 0;
 17382                           
 17383                           ;incstack = 0
 17384  01B184  010E               	movlb	14	; () banked
 17385  01B186  9FC5               	bcf	197,7,b	;volatile
 17386                           
 17387                           ; BSR set to: 14
 17388                           ;eusart2.c: 83: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 17389  01B188  0EB8               	movlw	low _EUSART2_Receive_ISR
 17390  01B18A  0102               	movlb	2	; () banked
 17391  01B18C  6F00               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 17392  01B18E  0EAA               	movlw	high _EUSART2_Receive_ISR
 17393  01B190  6F01               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 17394  01B192  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 17395  01B194  6F02               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 17396  01B196  ECCC  F0E3         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 17397                           
 17398                           ;eusart2.c: 84: PIE3bits.TX2IE = 0;
 17399  01B19A  010E               	movlb	14	; () banked
 17400  01B19C  9DC5               	bcf	197,6,b	;volatile
 17401                           
 17402                           ;eusart2.c: 85: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 17403  01B19E  0E78               	movlw	low _EUSART2_Transmit_ISR
 17404  01B1A0  0102               	movlb	2	; () banked
 17405  01B1A2  6F00               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 17406  01B1A4  0EBB               	movlw	high _EUSART2_Transmit_ISR
 17407  01B1A6  6F01               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 17408  01B1A8  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 17409  01B1AA  6F02               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 17410  01B1AC  ECC5  F0E3         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 17411                           
 17412                           ;eusart2.c: 89: BAUD2CON = 0x08;
 17413  01B1B0  0E08               	movlw	8
 17414  01B1B2  010E               	movlb	14	; () banked
 17415  01B1B4  6F9F               	movwf	159,b	;volatile
 17416                           
 17417                           ; BSR set to: 14
 17418                           ;eusart2.c: 92: RC2STA = 0x90;
 17419  01B1B6  0E90               	movlw	144
 17420  01B1B8  6F9D               	movwf	157,b	;volatile
 17421                           
 17422                           ; BSR set to: 14
 17423                           ;eusart2.c: 95: TX2STA = 0x24;
 17424  01B1BA  0E24               	movlw	36
 17425  01B1BC  6F9E               	movwf	158,b	;volatile
 17426                           
 17427                           ; BSR set to: 14
 17428                           ;eusart2.c: 98: SP2BRGL = 0x8A;
 17429  01B1BE  0E8A               	movlw	138
 17430  01B1C0  6F9B               	movwf	155,b	;volatile
 17431                           
 17432                           ; BSR set to: 14
 17433                           ;eusart2.c: 101: SP2BRGH = 0x00;
 17434  01B1C2  0E00               	movlw	0
 17435  01B1C4  6F9C               	movwf	156,b	;volatile
 17436                           
 17437                           ; BSR set to: 14
 17438                           ;eusart2.c: 105: eusart2TxHead = 0;
 17439  01B1C6  0E00               	movlw	0
 17440  01B1C8  0101               	movlb	1	; () banked
 17441  01B1CA  6F94               	movwf	(_eusart2TxHead+1)& (0+255),b	;volatile
 17442  01B1CC  0E00               	movlw	0
 17443  01B1CE  6F93               	movwf	_eusart2TxHead& (0+255),b	;volatile
 17444                           
 17445                           ; BSR set to: 1
 17446                           ;eusart2.c: 106: eusart2TxTail = 0;
 17447  01B1D0  0E00               	movlw	0
 17448  01B1D2  6F92               	movwf	(_eusart2TxTail+1)& (0+255),b	;volatile
 17449  01B1D4  0E00               	movlw	0
 17450  01B1D6  6F91               	movwf	_eusart2TxTail& (0+255),b	;volatile
 17451                           
 17452                           ; BSR set to: 1
 17453                           ;eusart2.c: 107: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 17454  01B1D8  0E04               	movlw	4
 17455  01B1DA  6F90               	movwf	(_eusart2TxBufferRemaining+1)& (0+255),b	;volatile
 17456  01B1DC  0E00               	movlw	0
 17457  01B1DE  6F8F               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 17458                           
 17459                           ; BSR set to: 1
 17460                           ;eusart2.c: 109: eusart2RxHead = 0;
 17461  01B1E0  0E00               	movlw	0
 17462  01B1E2  0100               	movlb	0	; () banked
 17463  01B1E4  6FDC               	movwf	_eusart2RxHead& (0+255),b	;volatile
 17464                           
 17465                           ; BSR set to: 0
 17466                           ;eusart2.c: 110: eusart2RxTail = 0;
 17467  01B1E6  0E00               	movlw	0
 17468  01B1E8  0101               	movlb	1	; () banked
 17469  01B1EA  6F98               	movwf	_eusart2RxTail& (0+255),b	;volatile
 17470                           
 17471                           ; BSR set to: 1
 17472                           ;eusart2.c: 111: eusart2RxCount = 0;
 17473  01B1EC  0E00               	movlw	0
 17474  01B1EE  6F97               	movwf	_eusart2RxCount& (0+255),b	;volatile
 17475                           
 17476                           ; BSR set to: 1
 17477                           ;eusart2.c: 114: PIE3bits.RC2IE = 1;
 17478  01B1F0  010E               	movlb	14	; () banked
 17479  01B1F2  8FC5               	bsf	197,7,b	;volatile
 17480                           
 17481                           ; BSR set to: 14
 17482  01B1F4  0012               	return		;funcret
 17483  01B1F6                     __end_of_EUSART2_Initialize:
 17484                           	opt callstack 0
 17485                           
 17486 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 17487 ;; Defined at:
 17488 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 17489 ;; Parameters:    Size  Location     Type
 17490 ;;  interruptHan    3    0[BANK2 ] PTR FTN()void 
 17491 ;;		 -> EUSART2_Transmit_ISR(1), 
 17492 ;; Auto vars:     Size  Location     Type
 17493 ;;		None
 17494 ;; Return value:  Size  Location     Type
 17495 ;;                  1    wreg      void 
 17496 ;; Registers used:
 17497 ;;		wreg, status,2, status,0
 17498 ;; Tracked objects:
 17499 ;;		On entry : 0/0
 17500 ;;		On exit  : 0/0
 17501 ;;		Unchanged: 0/0
 17502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17503 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17506 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17507 ;;Total ram usage:        3 bytes
 17508 ;; Hardware stack levels used:    1
 17509 ;; Hardware stack levels required when called:   11
 17510 ;; This function calls:
 17511 ;;		Nothing
 17512 ;; This function is called by:
 17513 ;;		_EUSART2_Initialize
 17514 ;; This function uses a non-reentrant model
 17515 ;;
 17516                           
 17517                           	psect	text58
 17518  01C78A                     __ptext58:
 17519                           	opt callstack 0
 17520  01C78A                     _EUSART2_SetTxInterruptHandler:
 17521                           	opt callstack 17
 17522                           
 17523                           ;eusart2.c: 265: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 17524                           
 17525                           ; BSR set to: 14
 17526                           ;incstack = 0
 17527  01C78A  C200  F180         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 17528  01C78E  C201  F181         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 17529  01C792  C202  F182         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 17530  01C796  0012               	return		;funcret
 17531  01C798                     __end_of_EUSART2_SetTxInterruptHandler:
 17532                           	opt callstack 0
 17533                           
 17534 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 17535 ;; Defined at:
 17536 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 17537 ;; Parameters:    Size  Location     Type
 17538 ;;  interruptHan    3    0[BANK2 ] PTR FTN()void 
 17539 ;;		 -> EUSART2_Receive_ISR(1), 
 17540 ;; Auto vars:     Size  Location     Type
 17541 ;;		None
 17542 ;; Return value:  Size  Location     Type
 17543 ;;                  1    wreg      void 
 17544 ;; Registers used:
 17545 ;;		wreg, status,2, status,0
 17546 ;; Tracked objects:
 17547 ;;		On entry : 0/0
 17548 ;;		On exit  : 0/0
 17549 ;;		Unchanged: 0/0
 17550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17551 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17554 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17555 ;;Total ram usage:        3 bytes
 17556 ;; Hardware stack levels used:    1
 17557 ;; Hardware stack levels required when called:   11
 17558 ;; This function calls:
 17559 ;;		Nothing
 17560 ;; This function is called by:
 17561 ;;		_EUSART2_Initialize
 17562 ;; This function uses a non-reentrant model
 17563 ;;
 17564                           
 17565                           	psect	text59
 17566  01C798                     __ptext59:
 17567                           	opt callstack 0
 17568  01C798                     _EUSART2_SetRxInterruptHandler:
 17569                           	opt callstack 17
 17570                           
 17571                           ;eusart2.c: 269: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 17572                           
 17573                           ;incstack = 0
 17574  01C798  C200  F17D         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 17575  01C79C  C201  F17E         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 17576  01C7A0  C202  F17F         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 17577  01C7A4  0012               	return		;funcret
 17578  01C7A6                     __end_of_EUSART2_SetRxInterruptHandler:
 17579                           	opt callstack 0
 17580                           
 17581 ;; *************** function _CCP2_Initialize *****************
 17582 ;; Defined at:
 17583 ;;		line 61 in file "mcc_generated_files/ccp2.c"
 17584 ;; Parameters:    Size  Location     Type
 17585 ;;		None
 17586 ;; Auto vars:     Size  Location     Type
 17587 ;;		None
 17588 ;; Return value:  Size  Location     Type
 17589 ;;                  1    wreg      void 
 17590 ;; Registers used:
 17591 ;;		wreg, status,2
 17592 ;; Tracked objects:
 17593 ;;		On entry : 0/0
 17594 ;;		On exit  : 0/0
 17595 ;;		Unchanged: 0/0
 17596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17601 ;;Total ram usage:        0 bytes
 17602 ;; Hardware stack levels used:    1
 17603 ;; Hardware stack levels required when called:   11
 17604 ;; This function calls:
 17605 ;;		Nothing
 17606 ;; This function is called by:
 17607 ;;		_SYSTEM_Initialize
 17608 ;; This function uses a non-reentrant model
 17609 ;;
 17610                           
 17611                           	psect	text60
 17612  01C390                     __ptext60:
 17613                           	opt callstack 0
 17614  01C390                     _CCP2_Initialize:
 17615                           	opt callstack 18
 17616                           
 17617                           ;ccp2.c: 66: CCP2CON = 0x87;
 17618                           
 17619                           ;incstack = 0
 17620  01C390  0E87               	movlw	135
 17621  01C392  6EA8               	movwf	4008,c	;volatile
 17622                           
 17623                           ;ccp2.c: 69: CCP2CAP = 0x00;
 17624  01C394  0E00               	movlw	0
 17625  01C396  6EA9               	movwf	4009,c	;volatile
 17626                           
 17627                           ;ccp2.c: 72: CCPR2H = 0x00;
 17628  01C398  0E00               	movlw	0
 17629  01C39A  6EA7               	movwf	4007,c	;volatile
 17630                           
 17631                           ;ccp2.c: 75: CCPR2L = 0x00;
 17632  01C39C  0E00               	movlw	0
 17633  01C39E  6EA6               	movwf	4006,c	;volatile
 17634                           
 17635                           ;ccp2.c: 78: CCPTMRSbits.C2TSEL = 0x3;
 17636  01C3A0  0E0C               	movlw	12
 17637  01C3A2  12AE               	iorwf	4014,f,c	;volatile
 17638                           
 17639                           ;ccp2.c: 81: PIR6bits.CCP2IF = 0;
 17640  01C3A4  010E               	movlb	14	; () banked
 17641  01C3A6  93D0               	bcf	208,1,b	;volatile
 17642                           
 17643                           ; BSR set to: 14
 17644                           ;ccp2.c: 84: PIE6bits.CCP2IE = 1;
 17645  01C3A8  83C8               	bsf	200,1,b	;volatile
 17646                           
 17647                           ;ccp2.c: 86: QI_current_edge = qi_period_rising_1;
 17648  01C3AA  0E00               	movlw	0
 17649  01C3AC  0101               	movlb	1	; () banked
 17650  01C3AE  6F96               	movwf	_QI_current_edge& (0+255),b
 17651                           
 17652                           ; BSR set to: 1
 17653  01C3B0  0012               	return		;funcret
 17654  01C3B2                     __end_of_CCP2_Initialize:
 17655                           	opt callstack 0
 17656                           
 17657 ;; *************** function _ADCC_Initialize *****************
 17658 ;; Defined at:
 17659 ;;		line 63 in file "mcc_generated_files/adcc.c"
 17660 ;; Parameters:    Size  Location     Type
 17661 ;;		None
 17662 ;; Auto vars:     Size  Location     Type
 17663 ;;		None
 17664 ;; Return value:  Size  Location     Type
 17665 ;;                  1    wreg      void 
 17666 ;; Registers used:
 17667 ;;		wreg, status,2, status,0, cstack
 17668 ;; Tracked objects:
 17669 ;;		On entry : 0/0
 17670 ;;		On exit  : 0/0
 17671 ;;		Unchanged: 0/0
 17672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17677 ;;Total ram usage:        0 bytes
 17678 ;; Hardware stack levels used:    1
 17679 ;; Hardware stack levels required when called:   12
 17680 ;; This function calls:
 17681 ;;		_ADCC_SetADTIInterruptHandler
 17682 ;; This function is called by:
 17683 ;;		_SYSTEM_Initialize
 17684 ;; This function uses a non-reentrant model
 17685 ;;
 17686                           
 17687                           	psect	text61
 17688  01B472                     __ptext61:
 17689                           	opt callstack 0
 17690  01B472                     _ADCC_Initialize:
 17691                           	opt callstack 17
 17692                           
 17693                           ;adcc.c: 67: ADLTHL = 0x00;
 17694                           
 17695                           ; BSR set to: 1
 17696                           ;incstack = 0
 17697  01B472  0E00               	movlw	0
 17698  01B474  6E6A               	movwf	3946,c	;volatile
 17699                           
 17700                           ;adcc.c: 69: ADLTHH = 0x00;
 17701  01B476  0E00               	movlw	0
 17702  01B478  6E6B               	movwf	3947,c	;volatile
 17703                           
 17704                           ;adcc.c: 71: ADUTHL = 0x00;
 17705  01B47A  0E00               	movlw	0
 17706  01B47C  6E6C               	movwf	3948,c	;volatile
 17707                           
 17708                           ;adcc.c: 73: ADUTHH = 0x00;
 17709  01B47E  0E00               	movlw	0
 17710  01B480  6E6D               	movwf	3949,c	;volatile
 17711                           
 17712                           ;adcc.c: 75: ADSTPTL = 0x00;
 17713  01B482  0E00               	movlw	0
 17714  01B484  6E68               	movwf	3944,c	;volatile
 17715                           
 17716                           ;adcc.c: 77: ADSTPTH = 0x00;
 17717  01B486  0E00               	movlw	0
 17718  01B488  6E69               	movwf	3945,c	;volatile
 17719                           
 17720                           ;adcc.c: 79: ADRPT = 0xFF;
 17721  01B48A  6866               	setf	3942,c	;volatile
 17722                           
 17723                           ;adcc.c: 81: ADPCH = 0x00;
 17724  01B48C  0E00               	movlw	0
 17725  01B48E  010F               	movlb	15	; () banked
 17726  01B490  6F5F               	movwf	95,b	;volatile
 17727                           
 17728                           ;adcc.c: 83: ADCAP = 0x00;
 17729  01B492  0E00               	movlw	0
 17730  01B494  6F5D               	movwf	93,b	;volatile
 17731                           
 17732                           ;adcc.c: 85: ADCON1 = 0x00;
 17733  01B496  0E00               	movlw	0
 17734  01B498  6F59               	movwf	89,b	;volatile
 17735                           
 17736                           ;adcc.c: 87: ADCON2 = 0x04;
 17737  01B49A  0E04               	movlw	4
 17738  01B49C  6F5A               	movwf	90,b	;volatile
 17739                           
 17740                           ;adcc.c: 89: ADCON3 = 0x5F;
 17741  01B49E  0E5F               	movlw	95
 17742  01B4A0  6F5B               	movwf	91,b	;volatile
 17743                           
 17744                           ;adcc.c: 91: ADSTAT = 0x00;
 17745  01B4A2  0E00               	movlw	0
 17746  01B4A4  6E65               	movwf	3941,c	;volatile
 17747                           
 17748                           ;adcc.c: 93: ADREF = 0x12;
 17749  01B4A6  0E12               	movlw	18
 17750  01B4A8  6F58               	movwf	88,b	;volatile
 17751                           
 17752                           ;adcc.c: 95: ADACT = 0x00;
 17753  01B4AA  0E00               	movlw	0
 17754  01B4AC  6F56               	movwf	86,b	;volatile
 17755                           
 17756                           ;adcc.c: 97: ADCLK = 0x1F;
 17757  01B4AE  0E1F               	movlw	31
 17758  01B4B0  6F57               	movwf	87,b	;volatile
 17759                           
 17760                           ;adcc.c: 99: ADCON0 = 0xC4;
 17761  01B4B2  0EC4               	movlw	196
 17762  01B4B4  6E60               	movwf	3936,c	;volatile
 17763                           
 17764                           ; BSR set to: 15
 17765                           ;adcc.c: 101: ADACQ = 0xFF;
 17766  01B4B6  695C               	setf	92,b	;volatile
 17767                           
 17768                           ; BSR set to: 15
 17769                           ;adcc.c: 105: PIR1bits.ADTIF = 0;
 17770  01B4B8  010E               	movlb	14	; () banked
 17771  01B4BA  93CB               	bcf	203,1,b	;volatile
 17772                           
 17773                           ; BSR set to: 14
 17774                           ;adcc.c: 107: PIE1bits.ADTIE = 1;
 17775  01B4BC  83C3               	bsf	195,1,b	;volatile
 17776                           
 17777                           ; BSR set to: 14
 17778                           ;adcc.c: 109: ADCC_SetADTIInterruptHandler(ADCC_DefaultInterruptHandler);
 17779  01B4BE  0EAC               	movlw	low _ADCC_DefaultInterruptHandler
 17780  01B4C0  0102               	movlb	2	; () banked
 17781  01B4C2  6F00               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 17782  01B4C4  0EC8               	movlw	high _ADCC_DefaultInterruptHandler
 17783  01B4C6  6F01               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 17784  01B4C8  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 17785  01B4CA  6F02               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 17786  01B4CC  ECD3  F0E3         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 17787  01B4D0  0012               	return		;funcret
 17788  01B4D2                     __end_of_ADCC_Initialize:
 17789                           	opt callstack 0
 17790                           
 17791 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 17792 ;; Defined at:
 17793 ;;		line 307 in file "mcc_generated_files/adcc.c"
 17794 ;; Parameters:    Size  Location     Type
 17795 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 17796 ;;		 -> ADC_PostProcessingHandler(1), ADCC_DefaultInterruptHandler(1), 
 17797 ;; Auto vars:     Size  Location     Type
 17798 ;;		None
 17799 ;; Return value:  Size  Location     Type
 17800 ;;                  1    wreg      void 
 17801 ;; Registers used:
 17802 ;;		wreg, status,2, status,0
 17803 ;; Tracked objects:
 17804 ;;		On entry : 0/0
 17805 ;;		On exit  : 0/0
 17806 ;;		Unchanged: 0/0
 17807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17808 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17811 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17812 ;;Total ram usage:        3 bytes
 17813 ;; Hardware stack levels used:    1
 17814 ;; Hardware stack levels required when called:   11
 17815 ;; This function calls:
 17816 ;;		Nothing
 17817 ;; This function is called by:
 17818 ;;		_ADCC_Initialize
 17819 ;;		_main
 17820 ;; This function uses a non-reentrant model
 17821 ;;
 17822                           
 17823                           	psect	text62
 17824  01C7A6                     __ptext62:
 17825                           	opt callstack 0
 17826  01C7A6                     _ADCC_SetADTIInterruptHandler:
 17827                           	opt callstack 17
 17828                           
 17829                           ;adcc.c: 308: ADCC_ADTI_InterruptHandler = InterruptHandler;
 17830                           
 17831                           ;incstack = 0
 17832  01C7A6  C200  F0CC         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 17833  01C7AA  C201  F0CD         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 17834  01C7AE  C202  F0CE         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+2,_ADCC_ADTI_InterruptHandler+2
 17835  01C7B2  0012               	return		;funcret
 17836  01C7B4                     __end_of_ADCC_SetADTIInterruptHandler:
 17837                           	opt callstack 0
 17838                           
 17839 ;; *************** function _OLED_updateHandler *****************
 17840 ;; Defined at:
 17841 ;;		line 324 in file "oled.c"
 17842 ;; Parameters:    Size  Location     Type
 17843 ;;		None
 17844 ;; Auto vars:     Size  Location     Type
 17845 ;;  rev_id_str     17   17[BANK3 ] unsigned char [17]
 17846 ;;  dev_id_str     17    0[BANK3 ] unsigned char [17]
 17847 ;; Return value:  Size  Location     Type
 17848 ;;                  1    wreg      void 
 17849 ;; Registers used:
 17850 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17851 ;; Tracked objects:
 17852 ;;		On entry : 0/0
 17853 ;;		On exit  : 0/0
 17854 ;;		Unchanged: 0/0
 17855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17857 ;;      Locals:         0       0       0       0      36       0       0       0       0       0       0       0       
      +0       0       0       0
 17858 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17859 ;;      Totals:         0       0       0       2      36       0       0       0       0       0       0       0       
      +0       0       0       0
 17860 ;;Total ram usage:       38 bytes
 17861 ;; Hardware stack levels used:    1
 17862 ;; Hardware stack levels required when called:   17
 17863 ;; This function calls:
 17864 ;;		_OLED_UpdateFromRAMBuffer
 17865 ;;		_floatToEngineeringFormat
 17866 ;;		_getCauseOfResetStringSmall
 17867 ;;		_getDaysFromOnTime
 17868 ;;		_getDeviceID
 17869 ;;		_getHoursFromOnTime
 17870 ;;		_getMajorRevisionID
 17871 ;;		_getMinorRevisionID
 17872 ;;		_getMinutesFromOnTime
 17873 ;;		_getNXQChargeStateStringCaps
 17874 ;;		_getSecondsFromOnTime
 17875 ;;		_getYearsFromOnTime
 17876 ;;		_sprintf
 17877 ;;		_strcpy
 17878 ;; This function is called by:
 17879 ;;		_main
 17880 ;; This function uses a non-reentrant model
 17881 ;;
 17882                           
 17883                           	psect	text63
 17884  012E3C                     __ptext63:
 17885                           	opt callstack 0
 17886  012E3C                     _OLED_updateHandler:
 17887                           	opt callstack 13
 17888                           
 17889                           ;oled.c: 326: switch (OLED_Frame) {
 17890                           
 17891                           ;incstack = 0
 17892  012E3C  EFDA  F09F         	goto	l22186
 17893  012E40                     l21696:
 17894                           
 17895                           ; BSR set to: 2
 17896                           ;oled.c: 330: OLED_update_flag = 0;
 17897  012E40  0E00               	movlw	0
 17898  012E42  6FD6               	movwf	_OLED_update_flag& (0+255),b
 17899                           
 17900                           ; BSR set to: 2
 17901                           ;oled.c: 333: strcpy(OLED_RAM_Buffer.line0, "QI Charger w/");
 17902  012E44  0E00               	movlw	low _OLED_RAM_Buffer
 17903  012E46  6F03               	movwf	strcpy@to& (0+255),b
 17904  012E48  0E03               	movlw	high _OLED_RAM_Buffer
 17905  012E4A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17906  012E4C  0E47               	movlw	low STR_62
 17907  012E4E  6F05               	movwf	strcpy@from& (0+255),b
 17908  012E50  0EFC               	movlw	high STR_62
 17909  012E52  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17910  012E54  ECE6  F0DC         	call	_strcpy	;wreg free
 17911                           
 17912                           ;oled.c: 334: strcpy(OLED_RAM_Buffer.line1, "Digital Monitor");
 17913  012E58  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 17914  012E5A  0102               	movlb	2	; () banked
 17915  012E5C  6F03               	movwf	strcpy@to& (0+255),b
 17916  012E5E  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 17917  012E60  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17918  012E62  0E82               	movlw	low STR_63
 17919  012E64  6F05               	movwf	strcpy@from& (0+255),b
 17920  012E66  0EFB               	movlw	high STR_63
 17921  012E68  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17922  012E6A  ECE6  F0DC         	call	_strcpy	;wreg free
 17923                           
 17924                           ;oled.c: 335: strcpy(OLED_RAM_Buffer.line2, "Cause of Reset:");
 17925  012E6E  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 17926  012E70  0102               	movlb	2	; () banked
 17927  012E72  6F03               	movwf	strcpy@to& (0+255),b
 17928  012E74  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 17929  012E76  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17930  012E78  0E72               	movlw	low STR_64
 17931  012E7A  6F05               	movwf	strcpy@from& (0+255),b
 17932  012E7C  0EFB               	movlw	high STR_64
 17933  012E7E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17934  012E80  ECE6  F0DC         	call	_strcpy	;wreg free
 17935                           
 17936                           ;oled.c: 336: strcpy(OLED_RAM_Buffer.line3, getCauseOfResetStringSmall(reset_cause));
 17937  012E84  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 17938  012E86  0102               	movlb	2	; () banked
 17939  012E88  6F03               	movwf	strcpy@to& (0+255),b
 17940  012E8A  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 17941  012E8C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17942  012E8E  51FF               	movf	_reset_cause& (0+255),w,b
 17943  012E90  EC68  F0E0         	call	_getCauseOfResetStringSmall
 17944  012E94  C200  F205         	movff	?_getCauseOfResetStringSmall,strcpy@from
 17945  012E98  C201  F206         	movff	?_getCauseOfResetStringSmall+1,strcpy@from+1
 17946  012E9C  ECE6  F0DC         	call	_strcpy	;wreg free
 17947                           
 17948                           ;oled.c: 337: OLED_UpdateFromRAMBuffer();
 17949  012EA0  EC6C  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 17950                           
 17951                           ;oled.c: 338: OLED_Frame = OLED_Boot_Frame_2;
 17952  012EA4  0E01               	movlw	1
 17953  012EA6                     L3:
 17954  012EA6  0102               	movlb	2	; () banked
 17955  012EA8  6FD7               	movwf	_OLED_Frame& (0+255),b
 17956                           
 17957                           ; BSR set to: 2
 17958                           ;oled.c: 339: OLED_update_time = 3;
 17959  012EAA  0E03               	movlw	3
 17960  012EAC  0100               	movlb	0	; () banked
 17961  012EAE  6FFB               	movwf	_OLED_update_time& (0+255),b
 17962                           
 17963                           ;oled.c: 341: break;
 17964  012EB0  0012               	return	
 17965  012EB2                     l21712:
 17966                           
 17967                           ; BSR set to: 2
 17968                           ;oled.c: 345: OLED_update_flag = 0;
 17969  012EB2  0E00               	movlw	0
 17970  012EB4  6FD6               	movwf	_OLED_update_flag& (0+255),b
 17971                           
 17972                           ; BSR set to: 2
 17973                           ;oled.c: 349: strcpy(OLED_RAM_Buffer.line0, "Device ID:");
 17974  012EB6  0E00               	movlw	low _OLED_RAM_Buffer
 17975  012EB8  6F03               	movwf	strcpy@to& (0+255),b
 17976  012EBA  0E03               	movlw	high _OLED_RAM_Buffer
 17977  012EBC  6F04               	movwf	(strcpy@to+1)& (0+255),b
 17978  012EBE  0EE6               	movlw	low STR_65
 17979  012EC0  6F05               	movwf	strcpy@from& (0+255),b
 17980  012EC2  0EFD               	movlw	high STR_65
 17981  012EC4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 17982  012EC6  ECE6  F0DC         	call	_strcpy	;wreg free
 17983                           
 17984                           ;oled.c: 350: char dev_id_str[17];;oled.c: 351: sprintf(dev_id_str,"0x%X",getDeviceID())
      +                          ;
 17985  012ECA  0ED1               	movlw	low OLED_updateHandler@dev_id_str
 17986  012ECC  0102               	movlb	2	; () banked
 17987  012ECE  6F8C               	movwf	sprintf@wh& (0+255),b
 17988  012ED0  0E03               	movlw	high OLED_updateHandler@dev_id_str
 17989  012ED2  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 17990  012ED4  0E9F               	movlw	low STR_66
 17991  012ED6  6F8E               	movwf	sprintf@f& (0+255),b
 17992  012ED8  0EFF               	movlw	high STR_66
 17993  012EDA  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 17994  012EDC  EC2A  F0E2         	call	_getDeviceID	;wreg free
 17995  012EE0  C20B  F290         	movff	?_getDeviceID,?_sprintf+4
 17996  012EE4  C20C  F291         	movff	?_getDeviceID+1,?_sprintf+5
 17997  012EE8  EC0A  F0DD         	call	_sprintf	;wreg free
 17998                           
 17999                           ;oled.c: 352: strcpy(OLED_RAM_Buffer.line1, dev_id_str);
 18000  012EEC  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18001  012EEE  0102               	movlb	2	; () banked
 18002  012EF0  6F03               	movwf	strcpy@to& (0+255),b
 18003  012EF2  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18004  012EF4  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18005  012EF6  0ED1               	movlw	low OLED_updateHandler@dev_id_str
 18006  012EF8  6F05               	movwf	strcpy@from& (0+255),b
 18007  012EFA  0E03               	movlw	high OLED_updateHandler@dev_id_str
 18008  012EFC  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18009  012EFE  ECE6  F0DC         	call	_strcpy	;wreg free
 18010                           
 18011                           ;oled.c: 355: strcpy(OLED_RAM_Buffer.line2, "Revision ID:");
 18012  012F02  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18013  012F04  0102               	movlb	2	; () banked
 18014  012F06  6F03               	movwf	strcpy@to& (0+255),b
 18015  012F08  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18016  012F0A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18017  012F0C  0EE1               	movlw	low STR_67
 18018  012F0E  6F05               	movwf	strcpy@from& (0+255),b
 18019  012F10  0EFC               	movlw	high STR_67
 18020  012F12  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18021  012F14  ECE6  F0DC         	call	_strcpy	;wreg free
 18022                           
 18023                           ;oled.c: 356: char rev_id_str[17];;oled.c: 357: sprintf(rev_id_str, "%c%03d", (char) get
      +                          MajorRevisionID() + 65, getMinorRevisionID());
 18024  012F18  0EE2               	movlw	low OLED_updateHandler@rev_id_str
 18025  012F1A  0102               	movlb	2	; () banked
 18026  012F1C  6F8C               	movwf	sprintf@wh& (0+255),b
 18027  012F1E  0E03               	movlw	high OLED_updateHandler@rev_id_str
 18028  012F20  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 18029  012F22  0E71               	movlw	low STR_68
 18030  012F24  6F8E               	movwf	sprintf@f& (0+255),b
 18031  012F26  0EFF               	movlw	high STR_68
 18032  012F28  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 18033  012F2A  EC40  F0DF         	call	_getMajorRevisionID	;wreg free
 18034  012F2E  0102               	movlb	2	; () banked
 18035  012F30  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 18036  012F32  0E41               	movlw	65
 18037  012F34  25A9               	addwf	??_OLED_updateHandler& (0+255),w,b
 18038  012F36  6F90               	movwf	(?_sprintf+4)& (0+255),b
 18039  012F38  6B91               	clrf	(?_sprintf+5)& (0+255),b
 18040  012F3A  0E00               	movlw	0
 18041  012F3C  2391               	addwfc	(?_sprintf+5)& (0+255),f,b
 18042  012F3E  EC7E  F0E1         	call	_getMinorRevisionID	;wreg free
 18043  012F42  0102               	movlb	2	; () banked
 18044  012F44  6FAA               	movwf	(??_OLED_updateHandler+1)& (0+255),b
 18045  012F46  51AA               	movf	(??_OLED_updateHandler+1)& (0+255),w,b
 18046  012F48  6F92               	movwf	(?_sprintf+6)& (0+255),b
 18047  012F4A  6B93               	clrf	(?_sprintf+7)& (0+255),b
 18048  012F4C  EC0A  F0DD         	call	_sprintf	;wreg free
 18049                           
 18050                           ;oled.c: 358: strcpy(OLED_RAM_Buffer.line3, rev_id_str);
 18051  012F50  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18052  012F52  0102               	movlb	2	; () banked
 18053  012F54  6F03               	movwf	strcpy@to& (0+255),b
 18054  012F56  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18055  012F58  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18056  012F5A  0EE2               	movlw	low OLED_updateHandler@rev_id_str
 18057  012F5C  6F05               	movwf	strcpy@from& (0+255),b
 18058  012F5E  0E03               	movlw	high OLED_updateHandler@rev_id_str
 18059  012F60  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18060  012F62  ECE6  F0DC         	call	_strcpy	;wreg free
 18061                           
 18062                           ;oled.c: 360: OLED_UpdateFromRAMBuffer();
 18063  012F66  EC6C  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18064                           
 18065                           ;oled.c: 361: OLED_Frame = OLED_Boot_Frame_3;
 18066  012F6A  0E02               	movlw	2
 18067  012F6C  D79C               	goto	L3
 18068  012F6E                     l21732:
 18069                           
 18070                           ; BSR set to: 2
 18071                           ;oled.c: 368: OLED_update_flag = 0;
 18072  012F6E  0E00               	movlw	0
 18073  012F70  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18074                           
 18075                           ; BSR set to: 2
 18076                           ;oled.c: 370: strcpy(OLED_RAM_Buffer.line0, "COM Port Setup:");
 18077  012F72  0E00               	movlw	low _OLED_RAM_Buffer
 18078  012F74  6F03               	movwf	strcpy@to& (0+255),b
 18079  012F76  0E03               	movlw	high _OLED_RAM_Buffer
 18080  012F78  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18081  012F7A  0E62               	movlw	low STR_69
 18082  012F7C  6F05               	movwf	strcpy@from& (0+255),b
 18083  012F7E  0EFB               	movlw	high STR_69
 18084  012F80  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18085  012F82  ECE6  F0DC         	call	_strcpy	;wreg free
 18086                           
 18087                           ;oled.c: 371: strcpy(OLED_RAM_Buffer.line1, "115.2 kbs");
 18088  012F86  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18089  012F88  0102               	movlb	2	; () banked
 18090  012F8A  6F03               	movwf	strcpy@to& (0+255),b
 18091  012F8C  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18092  012F8E  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18093  012F90  0E74               	movlw	low STR_70
 18094  012F92  6F05               	movwf	strcpy@from& (0+255),b
 18095  012F94  0EFE               	movlw	high STR_70
 18096  012F96  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18097  012F98  ECE6  F0DC         	call	_strcpy	;wreg free
 18098                           
 18099                           ;oled.c: 372: strcpy(OLED_RAM_Buffer.line2, "8bit, no parity");
 18100  012F9C  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18101  012F9E  0102               	movlb	2	; () banked
 18102  012FA0  6F03               	movwf	strcpy@to& (0+255),b
 18103  012FA2  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18104  012FA4  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18105  012FA6  0E92               	movlw	low STR_71
 18106  012FA8  6F05               	movwf	strcpy@from& (0+255),b
 18107  012FAA  0EFB               	movlw	high STR_71
 18108  012FAC  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18109  012FAE  ECE6  F0DC         	call	_strcpy	;wreg free
 18110                           
 18111                           ;oled.c: 373: strcpy(OLED_RAM_Buffer.line3, "1 stp, no flow");
 18112  012FB2  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18113  012FB4  0102               	movlb	2	; () banked
 18114  012FB6  6F03               	movwf	strcpy@to& (0+255),b
 18115  012FB8  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18116  012FBA  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18117  012FBC  0EFE               	movlw	low STR_72
 18118  012FBE  6F05               	movwf	strcpy@from& (0+255),b
 18119  012FC0  0EFB               	movlw	high STR_72
 18120  012FC2  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18121  012FC4  ECE6  F0DC         	call	_strcpy	;wreg free
 18122                           
 18123                           ;oled.c: 375: OLED_UpdateFromRAMBuffer();
 18124  012FC8  EC6C  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18125                           
 18126                           ;oled.c: 376: OLED_Frame = OLED_Boot_Frame_4;
 18127  012FCC  0E03               	movlw	3
 18128  012FCE  D76B               	goto	L3
 18129  012FD0                     l21748:
 18130                           
 18131                           ; BSR set to: 2
 18132                           ;oled.c: 383: OLED_update_flag = 0;
 18133  012FD0  0E00               	movlw	0
 18134  012FD2  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18135                           
 18136                           ; BSR set to: 2
 18137                           ;oled.c: 385: strcpy(OLED_RAM_Buffer.line0, "Boot Complete");
 18138  012FD4  0E00               	movlw	low _OLED_RAM_Buffer
 18139  012FD6  6F03               	movwf	strcpy@to& (0+255),b
 18140  012FD8  0E03               	movlw	high _OLED_RAM_Buffer
 18141  012FDA  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18142  012FDC  0EA9               	movlw	low STR_73
 18143  012FDE  6F05               	movwf	strcpy@from& (0+255),b
 18144  012FE0  0EFC               	movlw	high STR_73
 18145  012FE2  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18146  012FE4  ECE6  F0DC         	call	_strcpy	;wreg free
 18147                           
 18148                           ;oled.c: 386: strcpy(OLED_RAM_Buffer.line1, "QI Enabled");
 18149  012FE8  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18150  012FEA  0102               	movlb	2	; () banked
 18151  012FEC  6F03               	movwf	strcpy@to& (0+255),b
 18152  012FEE  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18153  012FF0  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18154  012FF2  0EF1               	movlw	low STR_74
 18155  012FF4  6F05               	movwf	strcpy@from& (0+255),b
 18156  012FF6  0EFD               	movlw	high STR_74
 18157  012FF8  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18158  012FFA  ECE6  F0DC         	call	_strcpy	;wreg free
 18159                           
 18160                           ;oled.c: 387: strcpy(OLED_RAM_Buffer.line2, "More Settings");
 18161  012FFE  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18162  013000  0102               	movlb	2	; () banked
 18163  013002  6F03               	movwf	strcpy@to& (0+255),b
 18164  013004  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18165  013006  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18166  013008  0EB7               	movlw	low STR_75
 18167  01300A  6F05               	movwf	strcpy@from& (0+255),b
 18168  01300C  0EFC               	movlw	high STR_75
 18169  01300E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18170  013010  ECE6  F0DC         	call	_strcpy	;wreg free
 18171                           
 18172                           ;oled.c: 388: strcpy(OLED_RAM_Buffer.line3, "via USB, 'Help'");
 18173  013014  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18174  013016  0102               	movlb	2	; () banked
 18175  013018  6F03               	movwf	strcpy@to& (0+255),b
 18176  01301A  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18177  01301C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18178  01301E  0E52               	movlw	low STR_76
 18179  013020  6F05               	movwf	strcpy@from& (0+255),b
 18180  013022  0EFB               	movlw	high STR_76
 18181  013024  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18182  013026  ECE6  F0DC         	call	_strcpy	;wreg free
 18183                           
 18184                           ;oled.c: 390: OLED_UpdateFromRAMBuffer();
 18185  01302A  EC6C  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18186                           
 18187                           ;oled.c: 391: OLED_Frame = OLED_Charge_Status;
 18188  01302E  0E04               	movlw	4
 18189  013030  D73A               	goto	L3
 18190  013032                     l21764:
 18191                           
 18192                           ; BSR set to: 2
 18193                           ;oled.c: 398: OLED_update_flag = 0;
 18194  013032  0E00               	movlw	0
 18195  013034  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18196                           
 18197                           ; BSR set to: 2
 18198                           ;oled.c: 400: strcpy(OLED_RAM_Buffer.line0, "Charge Status:");
 18199  013036  0E00               	movlw	low _OLED_RAM_Buffer
 18200  013038  6F03               	movwf	strcpy@to& (0+255),b
 18201  01303A  0E03               	movlw	high _OLED_RAM_Buffer
 18202  01303C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18203  01303E  0EE0               	movlw	low STR_77
 18204  013040  6F05               	movwf	strcpy@from& (0+255),b
 18205  013042  0EFB               	movlw	high STR_77
 18206  013044  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18207  013046  ECE6  F0DC         	call	_strcpy	;wreg free
 18208                           
 18209                           ;oled.c: 401: strcpy(OLED_RAM_Buffer.line1, " ");
 18210  01304A  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18211  01304C  0102               	movlb	2	; () banked
 18212  01304E  6F03               	movwf	strcpy@to& (0+255),b
 18213  013050  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18214  013052  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18215  013054  0EAA               	movlw	low (STR_56+10)
 18216  013056  6F05               	movwf	strcpy@from& (0+255),b
 18217  013058  0EFD               	movlw	high (STR_56+10)
 18218  01305A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18219  01305C  ECE6  F0DC         	call	_strcpy	;wreg free
 18220                           
 18221                           ;oled.c: 402: strcpy(OLED_RAM_Buffer.line2, getNXQChargeStateStringCaps());
 18222  013060  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18223  013062  0102               	movlb	2	; () banked
 18224  013064  6F03               	movwf	strcpy@to& (0+255),b
 18225  013066  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18226  013068  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18227  01306A  ECC6  F0DA         	call	_getNXQChargeStateStringCaps	;wreg free
 18228  01306E  C200  F205         	movff	?_getNXQChargeStateStringCaps,strcpy@from
 18229  013072  C201  F206         	movff	?_getNXQChargeStateStringCaps+1,strcpy@from+1
 18230  013076  ECE6  F0DC         	call	_strcpy	;wreg free
 18231                           
 18232                           ;oled.c: 403: strcpy(OLED_RAM_Buffer.line3, " ");
 18233  01307A  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18234  01307C  0102               	movlb	2	; () banked
 18235  01307E  6F03               	movwf	strcpy@to& (0+255),b
 18236  013080  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18237  013082  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18238  013084  0EAA               	movlw	low (STR_56+10)
 18239  013086  6F05               	movwf	strcpy@from& (0+255),b
 18240  013088  0EFD               	movlw	high (STR_56+10)
 18241  01308A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18242  01308C  ECE6  F0DC         	call	_strcpy	;wreg free
 18243                           
 18244                           ;oled.c: 405: OLED_UpdateFromRAMBuffer();
 18245  013090  EC6C  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18246                           
 18247                           ;oled.c: 406: OLED_Frame = OLED_Charge_Status;
 18248  013094  0E04               	movlw	4
 18249  013096                     L4:
 18250  013096  0102               	movlb	2	; () banked
 18251  013098  6FD7               	movwf	_OLED_Frame& (0+255),b
 18252                           
 18253                           ; BSR set to: 2
 18254                           ;oled.c: 407: OLED_update_time = 1;
 18255  01309A  0E01               	movlw	1
 18256  01309C  0100               	movlb	0	; () banked
 18257  01309E  6FFB               	movwf	_OLED_update_time& (0+255),b
 18258                           
 18259                           ;oled.c: 409: break;
 18260  0130A0  0012               	return	
 18261  0130A2                     l21780:
 18262                           
 18263                           ; BSR set to: 2
 18264                           ;oled.c: 413: OLED_update_flag = 0;
 18265  0130A2  0E00               	movlw	0
 18266  0130A4  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18267                           
 18268                           ; BSR set to: 2
 18269                           ;oled.c: 415: strcpy(OLED_RAM_Buffer.line0, "+12V Voltage:");
 18270  0130A6  0E00               	movlw	low _OLED_RAM_Buffer
 18271  0130A8  6F03               	movwf	strcpy@to& (0+255),b
 18272  0130AA  0E03               	movlw	high _OLED_RAM_Buffer
 18273  0130AC  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18274  0130AE  0E55               	movlw	low STR_80
 18275  0130B0  6F05               	movwf	strcpy@from& (0+255),b
 18276  0130B2  0EFC               	movlw	high STR_80
 18277  0130B4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18278  0130B6  ECE6  F0DC         	call	_strcpy	;wreg free
 18279                           
 18280                           ;oled.c: 416: sprintf(OLED_RAM_Buffer.line1, "%+.3f V", adc_results.pos12_adc_result);
 18281  0130BA  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18282  0130BC  0102               	movlb	2	; () banked
 18283  0130BE  6F8C               	movwf	sprintf@wh& (0+255),b
 18284  0130C0  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18285  0130C2  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 18286  0130C4  0E52               	movlw	low STR_81
 18287  0130C6  6F8E               	movwf	sprintf@f& (0+255),b
 18288  0130C8  0EFF               	movlw	high STR_81
 18289  0130CA  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 18290  0130CC  C0E9  F290         	movff	_adc_results+12,?_sprintf+4
 18291  0130D0  C0EA  F291         	movff	_adc_results+13,?_sprintf+5
 18292  0130D4  C0EB  F292         	movff	_adc_results+14,?_sprintf+6
 18293  0130D8  C0EC  F293         	movff	_adc_results+15,?_sprintf+7
 18294  0130DC  EC0A  F0DD         	call	_sprintf	;wreg free
 18295                           
 18296                           ;oled.c: 417: strcpy(OLED_RAM_Buffer.line2, " ");
 18297  0130E0  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18298  0130E2  0102               	movlb	2	; () banked
 18299  0130E4  6F03               	movwf	strcpy@to& (0+255),b
 18300  0130E6  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18301  0130E8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18302  0130EA  0EAA               	movlw	low (STR_56+10)
 18303  0130EC  6F05               	movwf	strcpy@from& (0+255),b
 18304  0130EE  0EFD               	movlw	high (STR_56+10)
 18305  0130F0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18306  0130F2  ECE6  F0DC         	call	_strcpy	;wreg free
 18307                           
 18308                           ;oled.c: 418: strcpy(OLED_RAM_Buffer.line3, " ");
 18309  0130F6  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18310  0130F8  0102               	movlb	2	; () banked
 18311  0130FA  6F03               	movwf	strcpy@to& (0+255),b
 18312  0130FC  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18313  0130FE  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18314  013100  0EAA               	movlw	low (STR_56+10)
 18315  013102  6F05               	movwf	strcpy@from& (0+255),b
 18316  013104  0EFD               	movlw	high (STR_56+10)
 18317  013106  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18318  013108  ECE6  F0DC         	call	_strcpy	;wreg free
 18319                           
 18320                           ;oled.c: 420: OLED_UpdateFromRAMBuffer();
 18321  01310C  EC6C  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18322                           
 18323                           ;oled.c: 421: OLED_Frame = OLED_POS12_Voltage;
 18324  013110  0E05               	movlw	5
 18325  013112  D7C1               	goto	L4
 18326  013114                     l21796:
 18327                           
 18328                           ; BSR set to: 2
 18329                           ;oled.c: 428: OLED_update_flag = 0;
 18330  013114  0E00               	movlw	0
 18331  013116  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18332                           
 18333                           ; BSR set to: 2
 18334                           ;oled.c: 430: strcpy(OLED_RAM_Buffer.line0, "+5V Voltage:");
 18335  013118  0E00               	movlw	low _OLED_RAM_Buffer
 18336  01311A  6F03               	movwf	strcpy@to& (0+255),b
 18337  01311C  0E03               	movlw	high _OLED_RAM_Buffer
 18338  01311E  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18339  013120  0EEE               	movlw	low STR_84
 18340  013122  6F05               	movwf	strcpy@from& (0+255),b
 18341  013124  0EFC               	movlw	high STR_84
 18342  013126  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18343  013128  ECE6  F0DC         	call	_strcpy	;wreg free
 18344                           
 18345                           ;oled.c: 431: sprintf(OLED_RAM_Buffer.line1, "%+.3f V", adc_results.pos5_adc_result);
 18346  01312C  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18347  01312E  0102               	movlb	2	; () banked
 18348  013130  6F8C               	movwf	sprintf@wh& (0+255),b
 18349  013132  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18350  013134  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 18351  013136  0E52               	movlw	low STR_81
 18352  013138  6F8E               	movwf	sprintf@f& (0+255),b
 18353  01313A  0EFF               	movlw	high STR_81
 18354  01313C  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 18355  01313E  C0E5  F290         	movff	_adc_results+8,?_sprintf+4
 18356  013142  C0E6  F291         	movff	_adc_results+9,?_sprintf+5
 18357  013146  C0E7  F292         	movff	_adc_results+10,?_sprintf+6
 18358  01314A  C0E8  F293         	movff	_adc_results+11,?_sprintf+7
 18359  01314E  EC0A  F0DD         	call	_sprintf	;wreg free
 18360                           
 18361                           ;oled.c: 432: strcpy(OLED_RAM_Buffer.line2, " ");
 18362  013152  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18363  013154  0102               	movlb	2	; () banked
 18364  013156  6F03               	movwf	strcpy@to& (0+255),b
 18365  013158  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18366  01315A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18367  01315C  0EAA               	movlw	low (STR_56+10)
 18368  01315E  6F05               	movwf	strcpy@from& (0+255),b
 18369  013160  0EFD               	movlw	high (STR_56+10)
 18370  013162  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18371  013164  ECE6  F0DC         	call	_strcpy	;wreg free
 18372                           
 18373                           ;oled.c: 433: strcpy(OLED_RAM_Buffer.line3, " ");
 18374  013168  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18375  01316A  0102               	movlb	2	; () banked
 18376  01316C  6F03               	movwf	strcpy@to& (0+255),b
 18377  01316E  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18378  013170  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18379  013172  0EAA               	movlw	low (STR_56+10)
 18380  013174  6F05               	movwf	strcpy@from& (0+255),b
 18381  013176  0EFD               	movlw	high (STR_56+10)
 18382  013178  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18383  01317A  ECE6  F0DC         	call	_strcpy	;wreg free
 18384                           
 18385                           ;oled.c: 435: OLED_UpdateFromRAMBuffer();
 18386  01317E  EC6C  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18387                           
 18388                           ;oled.c: 436: OLED_Frame = OLED_POS5_Voltage;
 18389  013182  0E06               	movlw	6
 18390  013184  D788               	goto	L4
 18391  013186                     l21812:
 18392                           
 18393                           ; BSR set to: 2
 18394                           ;oled.c: 443: OLED_update_flag = 0;
 18395  013186  0E00               	movlw	0
 18396  013188  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18397                           
 18398                           ; BSR set to: 2
 18399                           ;oled.c: 445: strcpy(OLED_RAM_Buffer.line0, "+12V Current:");
 18400  01318A  0E00               	movlw	low _OLED_RAM_Buffer
 18401  01318C  6F03               	movwf	strcpy@to& (0+255),b
 18402  01318E  0E03               	movlw	high _OLED_RAM_Buffer
 18403  013190  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18404  013192  0E9B               	movlw	low STR_88
 18405  013194  6F05               	movwf	strcpy@from& (0+255),b
 18406  013196  0EFC               	movlw	high STR_88
 18407  013198  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18408  01319A  ECE6  F0DC         	call	_strcpy	;wreg free
 18409                           
 18410                           ;oled.c: 446: sprintf(OLED_RAM_Buffer.line1, "%+.3f A", adc_results.pos12_isns_adc_resul
      +                          t);
 18411  01319E  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18412  0131A0  0102               	movlb	2	; () banked
 18413  0131A2  6F8C               	movwf	sprintf@wh& (0+255),b
 18414  0131A4  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18415  0131A6  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 18416  0131A8  0E42               	movlw	low STR_89
 18417  0131AA  6F8E               	movwf	sprintf@f& (0+255),b
 18418  0131AC  0EFF               	movlw	high STR_89
 18419  0131AE  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 18420  0131B0  C0ED  F290         	movff	_adc_results+16,?_sprintf+4
 18421  0131B4  C0EE  F291         	movff	_adc_results+17,?_sprintf+5
 18422  0131B8  C0EF  F292         	movff	_adc_results+18,?_sprintf+6
 18423  0131BC  C0F0  F293         	movff	_adc_results+19,?_sprintf+7
 18424  0131C0  EC0A  F0DD         	call	_sprintf	;wreg free
 18425                           
 18426                           ;oled.c: 447: strcpy(OLED_RAM_Buffer.line2, " ");
 18427  0131C4  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18428  0131C6  0102               	movlb	2	; () banked
 18429  0131C8  6F03               	movwf	strcpy@to& (0+255),b
 18430  0131CA  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18431  0131CC  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18432  0131CE  0EAA               	movlw	low (STR_56+10)
 18433  0131D0  6F05               	movwf	strcpy@from& (0+255),b
 18434  0131D2  0EFD               	movlw	high (STR_56+10)
 18435  0131D4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18436  0131D6  ECE6  F0DC         	call	_strcpy	;wreg free
 18437                           
 18438                           ;oled.c: 448: strcpy(OLED_RAM_Buffer.line3, " ");
 18439  0131DA  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18440  0131DC  0102               	movlb	2	; () banked
 18441  0131DE  6F03               	movwf	strcpy@to& (0+255),b
 18442  0131E0  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18443  0131E2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18444  0131E4  0EAA               	movlw	low (STR_56+10)
 18445  0131E6  6F05               	movwf	strcpy@from& (0+255),b
 18446  0131E8  0EFD               	movlw	high (STR_56+10)
 18447  0131EA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18448  0131EC  ECE6  F0DC         	call	_strcpy	;wreg free
 18449                           
 18450                           ;oled.c: 450: OLED_UpdateFromRAMBuffer();
 18451  0131F0  EC6C  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18452                           
 18453                           ;oled.c: 451: OLED_Frame = OLED_POS12_Current;
 18454  0131F4  0E07               	movlw	7
 18455  0131F6  D74F               	goto	L4
 18456  0131F8                     l21828:
 18457                           
 18458                           ; BSR set to: 2
 18459                           ;oled.c: 458: OLED_update_flag = 0;
 18460  0131F8  0E00               	movlw	0
 18461  0131FA  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18462                           
 18463                           ; BSR set to: 2
 18464                           ;oled.c: 460: strcpy(OLED_RAM_Buffer.line0, "QI Current:");
 18465  0131FC  0E00               	movlw	low _OLED_RAM_Buffer
 18466  0131FE  6F03               	movwf	strcpy@to& (0+255),b
 18467  013200  0E03               	movlw	high _OLED_RAM_Buffer
 18468  013202  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18469  013204  0E88               	movlw	low STR_92
 18470  013206  6F05               	movwf	strcpy@from& (0+255),b
 18471  013208  0EFD               	movlw	high STR_92
 18472  01320A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18473  01320C  ECE6  F0DC         	call	_strcpy	;wreg free
 18474                           
 18475                           ;oled.c: 461: if (QI_charge_time == 0) strcpy(OLED_RAM_Buffer.line1, "Not Charging");
 18476  013210  0102               	movlb	2	; () banked
 18477  013212  51D2               	movf	_QI_charge_time& (0+255),w,b
 18478  013214  11D3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 18479  013216  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 18480  013218  11D5               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 18481  01321A  A4D8               	btfss	status,2,c
 18482  01321C  D00B               	goto	l21836
 18483                           
 18484                           ; BSR set to: 2
 18485  01321E  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18486  013220  6F03               	movwf	strcpy@to& (0+255),b
 18487  013222  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18488  013224  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18489  013226  0E22               	movlw	low STR_93
 18490  013228  6F05               	movwf	strcpy@from& (0+255),b
 18491  01322A  0EFD               	movlw	high STR_93
 18492  01322C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18493  01322E  ECE6  F0DC         	call	_strcpy	;wreg free
 18494  013232  D012               	goto	l21838
 18495  013234                     l21836:
 18496                           
 18497                           ; BSR set to: 2
 18498                           ;oled.c: 462: else sprintf(OLED_RAM_Buffer.line1, "%+.3f A", adc_results.qi_isns_adc_res
      +                          ult);
 18499  013234  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18500  013236  6F8C               	movwf	sprintf@wh& (0+255),b
 18501  013238  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18502  01323A  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 18503  01323C  0E42               	movlw	low STR_89
 18504  01323E  6F8E               	movwf	sprintf@f& (0+255),b
 18505  013240  0EFF               	movlw	high STR_89
 18506  013242  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 18507  013244  C0F1  F290         	movff	_adc_results+20,?_sprintf+4
 18508  013248  C0F2  F291         	movff	_adc_results+21,?_sprintf+5
 18509  01324C  C0F3  F292         	movff	_adc_results+22,?_sprintf+6
 18510  013250  C0F4  F293         	movff	_adc_results+23,?_sprintf+7
 18511  013254  EC0A  F0DD         	call	_sprintf	;wreg free
 18512  013258                     l21838:
 18513                           
 18514                           ;oled.c: 463: strcpy(OLED_RAM_Buffer.line2, " ");
 18515  013258  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18516  01325A  0102               	movlb	2	; () banked
 18517  01325C  6F03               	movwf	strcpy@to& (0+255),b
 18518  01325E  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18519  013260  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18520  013262  0EAA               	movlw	low (STR_56+10)
 18521  013264  6F05               	movwf	strcpy@from& (0+255),b
 18522  013266  0EFD               	movlw	high (STR_56+10)
 18523  013268  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18524  01326A  ECE6  F0DC         	call	_strcpy	;wreg free
 18525                           
 18526                           ;oled.c: 464: strcpy(OLED_RAM_Buffer.line3, " ");
 18527  01326E  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18528  013270  0102               	movlb	2	; () banked
 18529  013272  6F03               	movwf	strcpy@to& (0+255),b
 18530  013274  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18531  013276  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18532  013278  0EAA               	movlw	low (STR_56+10)
 18533  01327A  6F05               	movwf	strcpy@from& (0+255),b
 18534  01327C  0EFD               	movlw	high (STR_56+10)
 18535  01327E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18536  013280  ECE6  F0DC         	call	_strcpy	;wreg free
 18537                           
 18538                           ;oled.c: 466: OLED_UpdateFromRAMBuffer();
 18539  013284  EC6C  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18540                           
 18541                           ;oled.c: 467: OLED_Frame = OLED_QI_Current;
 18542  013288  0E08               	movlw	8
 18543  01328A  D705               	goto	L4
 18544  01328C                     l21848:
 18545                           
 18546                           ; BSR set to: 2
 18547                           ;oled.c: 474: OLED_update_flag = 0;
 18548  01328C  0E00               	movlw	0
 18549  01328E  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18550                           
 18551                           ; BSR set to: 2
 18552                           ;oled.c: 476: strcpy(OLED_RAM_Buffer.line0, "Input Power:");
 18553  013290  0E00               	movlw	low _OLED_RAM_Buffer
 18554  013292  6F03               	movwf	strcpy@to& (0+255),b
 18555  013294  0E03               	movlw	high _OLED_RAM_Buffer
 18556  013296  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18557  013298  0E15               	movlw	low STR_97
 18558  01329A  6F05               	movwf	strcpy@from& (0+255),b
 18559  01329C  0EFD               	movlw	high STR_97
 18560  01329E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18561  0132A0  ECE6  F0DC         	call	_strcpy	;wreg free
 18562                           
 18563                           ;oled.c: 477: sprintf(OLED_RAM_Buffer.line1, "%+.3f W", adc_calculations.input_power);
 18564  0132A4  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18565  0132A6  0102               	movlb	2	; () banked
 18566  0132A8  6F8C               	movwf	sprintf@wh& (0+255),b
 18567  0132AA  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18568  0132AC  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 18569  0132AE  0E5A               	movlw	low STR_98
 18570  0132B0  6F8E               	movwf	sprintf@f& (0+255),b
 18571  0132B2  0EFF               	movlw	high STR_98
 18572  0132B4  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 18573  0132B6  C2BE  F290         	movff	_adc_calculations,?_sprintf+4
 18574  0132BA  C2BF  F291         	movff	_adc_calculations+1,?_sprintf+5
 18575  0132BE  C2C0  F292         	movff	_adc_calculations+2,?_sprintf+6
 18576  0132C2  C2C1  F293         	movff	_adc_calculations+3,?_sprintf+7
 18577  0132C6  EC0A  F0DD         	call	_sprintf	;wreg free
 18578                           
 18579                           ;oled.c: 478: strcpy(OLED_RAM_Buffer.line2, " ");
 18580  0132CA  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18581  0132CC  0102               	movlb	2	; () banked
 18582  0132CE  6F03               	movwf	strcpy@to& (0+255),b
 18583  0132D0  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18584  0132D2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18585  0132D4  0EAA               	movlw	low (STR_56+10)
 18586  0132D6  6F05               	movwf	strcpy@from& (0+255),b
 18587  0132D8  0EFD               	movlw	high (STR_56+10)
 18588  0132DA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18589  0132DC  ECE6  F0DC         	call	_strcpy	;wreg free
 18590                           
 18591                           ;oled.c: 479: strcpy(OLED_RAM_Buffer.line3, " ");
 18592  0132E0  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18593  0132E2  0102               	movlb	2	; () banked
 18594  0132E4  6F03               	movwf	strcpy@to& (0+255),b
 18595  0132E6  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18596  0132E8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18597  0132EA  0EAA               	movlw	low (STR_56+10)
 18598  0132EC  6F05               	movwf	strcpy@from& (0+255),b
 18599  0132EE  0EFD               	movlw	high (STR_56+10)
 18600  0132F0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18601  0132F2  ECE6  F0DC         	call	_strcpy	;wreg free
 18602                           
 18603                           ;oled.c: 481: OLED_UpdateFromRAMBuffer();
 18604  0132F6  EC6C  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18605                           
 18606                           ;oled.c: 482: OLED_Frame = OLED_Input_Power;
 18607  0132FA  0E09               	movlw	9
 18608  0132FC  D6CC               	goto	L4
 18609  0132FE                     l21864:
 18610                           
 18611                           ; BSR set to: 2
 18612                           ;oled.c: 489: OLED_update_flag = 0;
 18613  0132FE  0E00               	movlw	0
 18614  013300  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18615                           
 18616                           ; BSR set to: 2
 18617                           ;oled.c: 491: strcpy(OLED_RAM_Buffer.line0, "Output Power:");
 18618  013302  0E00               	movlw	low _OLED_RAM_Buffer
 18619  013304  6F03               	movwf	strcpy@to& (0+255),b
 18620  013306  0E03               	movlw	high _OLED_RAM_Buffer
 18621  013308  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18622  01330A  0E8D               	movlw	low STR_101
 18623  01330C  6F05               	movwf	strcpy@from& (0+255),b
 18624  01330E  0EFC               	movlw	high STR_101
 18625  013310  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18626  013312  ECE6  F0DC         	call	_strcpy	;wreg free
 18627                           
 18628                           ;oled.c: 492: if (QI_charge_time == 0) strcpy(OLED_RAM_Buffer.line1, "Not Charging");
 18629  013316  0102               	movlb	2	; () banked
 18630  013318  51D2               	movf	_QI_charge_time& (0+255),w,b
 18631  01331A  11D3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 18632  01331C  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 18633  01331E  11D5               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 18634  013320  A4D8               	btfss	status,2,c
 18635  013322  D00B               	goto	l21872
 18636                           
 18637                           ; BSR set to: 2
 18638  013324  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18639  013326  6F03               	movwf	strcpy@to& (0+255),b
 18640  013328  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18641  01332A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18642  01332C  0E22               	movlw	low STR_93
 18643  01332E  6F05               	movwf	strcpy@from& (0+255),b
 18644  013330  0EFD               	movlw	high STR_93
 18645  013332  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18646  013334  ECE6  F0DC         	call	_strcpy	;wreg free
 18647  013338  D012               	goto	l21874
 18648  01333A                     l21872:
 18649                           
 18650                           ; BSR set to: 2
 18651                           ;oled.c: 493: else sprintf(OLED_RAM_Buffer.line1, "%+.3f W", adc_calculations.output_pow
      +                          er);
 18652  01333A  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18653  01333C  6F8C               	movwf	sprintf@wh& (0+255),b
 18654  01333E  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18655  013340  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 18656  013342  0E5A               	movlw	low STR_98
 18657  013344  6F8E               	movwf	sprintf@f& (0+255),b
 18658  013346  0EFF               	movlw	high STR_98
 18659  013348  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 18660  01334A  C2C2  F290         	movff	_adc_calculations+4,?_sprintf+4
 18661  01334E  C2C3  F291         	movff	_adc_calculations+5,?_sprintf+5
 18662  013352  C2C4  F292         	movff	_adc_calculations+6,?_sprintf+6
 18663  013356  C2C5  F293         	movff	_adc_calculations+7,?_sprintf+7
 18664  01335A  EC0A  F0DD         	call	_sprintf	;wreg free
 18665  01335E                     l21874:
 18666                           
 18667                           ;oled.c: 494: strcpy(OLED_RAM_Buffer.line2, " ");
 18668  01335E  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18669  013360  0102               	movlb	2	; () banked
 18670  013362  6F03               	movwf	strcpy@to& (0+255),b
 18671  013364  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18672  013366  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18673  013368  0EAA               	movlw	low (STR_56+10)
 18674  01336A  6F05               	movwf	strcpy@from& (0+255),b
 18675  01336C  0EFD               	movlw	high (STR_56+10)
 18676  01336E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18677  013370  ECE6  F0DC         	call	_strcpy	;wreg free
 18678                           
 18679                           ;oled.c: 495: strcpy(OLED_RAM_Buffer.line3, " ");
 18680  013374  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18681  013376  0102               	movlb	2	; () banked
 18682  013378  6F03               	movwf	strcpy@to& (0+255),b
 18683  01337A  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18684  01337C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18685  01337E  0EAA               	movlw	low (STR_56+10)
 18686  013380  6F05               	movwf	strcpy@from& (0+255),b
 18687  013382  0EFD               	movlw	high (STR_56+10)
 18688  013384  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18689  013386  ECE6  F0DC         	call	_strcpy	;wreg free
 18690                           
 18691                           ;oled.c: 497: OLED_UpdateFromRAMBuffer();
 18692  01338A  EC6C  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18693                           
 18694                           ;oled.c: 498: OLED_Frame = OLED_Output_Power;
 18695  01338E  0E0A               	movlw	10
 18696  013390  D682               	goto	L4
 18697  013392                     l21884:
 18698                           
 18699                           ; BSR set to: 2
 18700                           ;oled.c: 505: OLED_update_flag = 0;
 18701  013392  0E00               	movlw	0
 18702  013394  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18703                           
 18704                           ; BSR set to: 2
 18705                           ;oled.c: 507: strcpy(OLED_RAM_Buffer.line0, "Efficiency:");
 18706  013396  0E00               	movlw	low _OLED_RAM_Buffer
 18707  013398  6F03               	movwf	strcpy@to& (0+255),b
 18708  01339A  0E03               	movlw	high _OLED_RAM_Buffer
 18709  01339C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18710  01339E  0E94               	movlw	low STR_106
 18711  0133A0  6F05               	movwf	strcpy@from& (0+255),b
 18712  0133A2  0EFD               	movlw	high STR_106
 18713  0133A4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18714  0133A6  ECE6  F0DC         	call	_strcpy	;wreg free
 18715                           
 18716                           ;oled.c: 508: if (QI_charge_time == 0) strcpy(OLED_RAM_Buffer.line1, "Not Charging");
 18717  0133AA  0102               	movlb	2	; () banked
 18718  0133AC  51D2               	movf	_QI_charge_time& (0+255),w,b
 18719  0133AE  11D3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 18720  0133B0  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 18721  0133B2  11D5               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 18722  0133B4  A4D8               	btfss	status,2,c
 18723  0133B6  D00B               	goto	l21892
 18724                           
 18725                           ; BSR set to: 2
 18726  0133B8  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18727  0133BA  6F03               	movwf	strcpy@to& (0+255),b
 18728  0133BC  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18729  0133BE  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18730  0133C0  0E22               	movlw	low STR_93
 18731  0133C2  6F05               	movwf	strcpy@from& (0+255),b
 18732  0133C4  0EFD               	movlw	high STR_93
 18733  0133C6  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18734  0133C8  ECE6  F0DC         	call	_strcpy	;wreg free
 18735  0133CC  D012               	goto	l21894
 18736  0133CE                     l21892:
 18737                           
 18738                           ; BSR set to: 2
 18739                           ;oled.c: 509: else sprintf(OLED_RAM_Buffer.line1, "%+.3f %%", adc_calculations.efficienc
      +                          y);
 18740  0133CE  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18741  0133D0  6F8C               	movwf	sprintf@wh& (0+255),b
 18742  0133D2  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18743  0133D4  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 18744  0133D6  0EFB               	movlw	low STR_108
 18745  0133D8  6F8E               	movwf	sprintf@f& (0+255),b
 18746  0133DA  0EFE               	movlw	high STR_108
 18747  0133DC  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 18748  0133DE  C2C6  F290         	movff	_adc_calculations+8,?_sprintf+4
 18749  0133E2  C2C7  F291         	movff	_adc_calculations+9,?_sprintf+5
 18750  0133E6  C2C8  F292         	movff	_adc_calculations+10,?_sprintf+6
 18751  0133EA  C2C9  F293         	movff	_adc_calculations+11,?_sprintf+7
 18752  0133EE  EC0A  F0DD         	call	_sprintf	;wreg free
 18753  0133F2                     l21894:
 18754                           
 18755                           ;oled.c: 510: strcpy(OLED_RAM_Buffer.line2, " ");
 18756  0133F2  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18757  0133F4  0102               	movlb	2	; () banked
 18758  0133F6  6F03               	movwf	strcpy@to& (0+255),b
 18759  0133F8  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18760  0133FA  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18761  0133FC  0EAA               	movlw	low (STR_56+10)
 18762  0133FE  6F05               	movwf	strcpy@from& (0+255),b
 18763  013400  0EFD               	movlw	high (STR_56+10)
 18764  013402  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18765  013404  ECE6  F0DC         	call	_strcpy	;wreg free
 18766                           
 18767                           ;oled.c: 511: strcpy(OLED_RAM_Buffer.line3, " ");
 18768  013408  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18769  01340A  0102               	movlb	2	; () banked
 18770  01340C  6F03               	movwf	strcpy@to& (0+255),b
 18771  01340E  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18772  013410  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18773  013412  0EAA               	movlw	low (STR_56+10)
 18774  013414  6F05               	movwf	strcpy@from& (0+255),b
 18775  013416  0EFD               	movlw	high (STR_56+10)
 18776  013418  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18777  01341A  ECE6  F0DC         	call	_strcpy	;wreg free
 18778                           
 18779                           ;oled.c: 513: OLED_UpdateFromRAMBuffer();
 18780  01341E  EC6C  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18781                           
 18782                           ;oled.c: 514: OLED_Frame = OLED_Efficiency;
 18783  013422  0E0B               	movlw	11
 18784  013424  D638               	goto	L4
 18785  013426                     l21904:
 18786                           
 18787                           ; BSR set to: 2
 18788                           ;oled.c: 521: OLED_update_flag = 0;
 18789  013426  0E00               	movlw	0
 18790  013428  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18791                           
 18792                           ; BSR set to: 2
 18793                           ;oled.c: 523: strcpy(OLED_RAM_Buffer.line0, "QI Temp:");
 18794  01342A  0E00               	movlw	low _OLED_RAM_Buffer
 18795  01342C  6F03               	movwf	strcpy@to& (0+255),b
 18796  01342E  0E03               	movlw	high _OLED_RAM_Buffer
 18797  013430  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18798  013432  0E04               	movlw	low STR_111
 18799  013434  6F05               	movwf	strcpy@from& (0+255),b
 18800  013436  0EFF               	movlw	high STR_111
 18801  013438  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18802  01343A  ECE6  F0DC         	call	_strcpy	;wreg free
 18803                           
 18804                           ;oled.c: 524: sprintf(OLED_RAM_Buffer.line1, "%+.3f C", LM73_temp_results.QI_temp_result
      +                          );
 18805  01343E  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18806  013440  0102               	movlb	2	; () banked
 18807  013442  6F8C               	movwf	sprintf@wh& (0+255),b
 18808  013444  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18809  013446  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 18810  013448  0E4A               	movlw	low STR_112
 18811  01344A  6F8E               	movwf	sprintf@f& (0+255),b
 18812  01344C  0EFF               	movlw	high STR_112
 18813  01344E  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 18814  013450  C2DB  F290         	movff	_LM73_temp_results,?_sprintf+4
 18815  013454  C2DC  F291         	movff	_LM73_temp_results+1,?_sprintf+5
 18816  013458  C2DD  F292         	movff	_LM73_temp_results+2,?_sprintf+6
 18817  01345C  C2DE  F293         	movff	_LM73_temp_results+3,?_sprintf+7
 18818  013460  EC0A  F0DD         	call	_sprintf	;wreg free
 18819                           
 18820                           ;oled.c: 525: strcpy(OLED_RAM_Buffer.line2, " ");
 18821  013464  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18822  013466  0102               	movlb	2	; () banked
 18823  013468  6F03               	movwf	strcpy@to& (0+255),b
 18824  01346A  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18825  01346C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18826  01346E  0EAA               	movlw	low (STR_56+10)
 18827  013470  6F05               	movwf	strcpy@from& (0+255),b
 18828  013472  0EFD               	movlw	high (STR_56+10)
 18829  013474  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18830  013476  ECE6  F0DC         	call	_strcpy	;wreg free
 18831                           
 18832                           ;oled.c: 526: strcpy(OLED_RAM_Buffer.line3, " ");
 18833  01347A  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18834  01347C  0102               	movlb	2	; () banked
 18835  01347E  6F03               	movwf	strcpy@to& (0+255),b
 18836  013480  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18837  013482  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18838  013484  0EAA               	movlw	low (STR_56+10)
 18839  013486  6F05               	movwf	strcpy@from& (0+255),b
 18840  013488  0EFD               	movlw	high (STR_56+10)
 18841  01348A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18842  01348C  ECE6  F0DC         	call	_strcpy	;wreg free
 18843                           
 18844                           ;oled.c: 528: OLED_UpdateFromRAMBuffer();
 18845  013490  EC6C  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18846                           
 18847                           ;oled.c: 529: OLED_Frame = OLED_QI_Temp;
 18848  013494  0E0F               	movlw	15
 18849  013496  D5FF               	goto	L4
 18850  013498                     l21920:
 18851                           
 18852                           ; BSR set to: 2
 18853                           ;oled.c: 536: OLED_update_flag = 0;
 18854  013498  0E00               	movlw	0
 18855  01349A  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18856                           
 18857                           ; BSR set to: 2
 18858                           ;oled.c: 538: strcpy(OLED_RAM_Buffer.line0, "+5V Temp:");
 18859  01349C  0E00               	movlw	low _OLED_RAM_Buffer
 18860  01349E  6F03               	movwf	strcpy@to& (0+255),b
 18861  0134A0  0E03               	movlw	high _OLED_RAM_Buffer
 18862  0134A2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18863  0134A4  0E6A               	movlw	low STR_115
 18864  0134A6  6F05               	movwf	strcpy@from& (0+255),b
 18865  0134A8  0EFE               	movlw	high STR_115
 18866  0134AA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18867  0134AC  ECE6  F0DC         	call	_strcpy	;wreg free
 18868                           
 18869                           ;oled.c: 539: sprintf(OLED_RAM_Buffer.line1, "%+.3f C", LM73_temp_results.POS5_temp_resu
      +                          lt);
 18870  0134B0  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18871  0134B2  0102               	movlb	2	; () banked
 18872  0134B4  6F8C               	movwf	sprintf@wh& (0+255),b
 18873  0134B6  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18874  0134B8  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 18875  0134BA  0E4A               	movlw	low STR_112
 18876  0134BC  6F8E               	movwf	sprintf@f& (0+255),b
 18877  0134BE  0EFF               	movlw	high STR_112
 18878  0134C0  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 18879  0134C2  C2DF  F290         	movff	_LM73_temp_results+4,?_sprintf+4
 18880  0134C6  C2E0  F291         	movff	_LM73_temp_results+5,?_sprintf+5
 18881  0134CA  C2E1  F292         	movff	_LM73_temp_results+6,?_sprintf+6
 18882  0134CE  C2E2  F293         	movff	_LM73_temp_results+7,?_sprintf+7
 18883  0134D2  EC0A  F0DD         	call	_sprintf	;wreg free
 18884                           
 18885                           ;oled.c: 540: strcpy(OLED_RAM_Buffer.line2, " ");
 18886  0134D6  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18887  0134D8  0102               	movlb	2	; () banked
 18888  0134DA  6F03               	movwf	strcpy@to& (0+255),b
 18889  0134DC  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18890  0134DE  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18891  0134E0  0EAA               	movlw	low (STR_56+10)
 18892  0134E2  6F05               	movwf	strcpy@from& (0+255),b
 18893  0134E4  0EFD               	movlw	high (STR_56+10)
 18894  0134E6  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18895  0134E8  ECE6  F0DC         	call	_strcpy	;wreg free
 18896                           
 18897                           ;oled.c: 541: strcpy(OLED_RAM_Buffer.line3, " ");
 18898  0134EC  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18899  0134EE  0102               	movlb	2	; () banked
 18900  0134F0  6F03               	movwf	strcpy@to& (0+255),b
 18901  0134F2  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18902  0134F4  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18903  0134F6  0EAA               	movlw	low (STR_56+10)
 18904  0134F8  6F05               	movwf	strcpy@from& (0+255),b
 18905  0134FA  0EFD               	movlw	high (STR_56+10)
 18906  0134FC  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18907  0134FE  ECE6  F0DC         	call	_strcpy	;wreg free
 18908                           
 18909                           ;oled.c: 543: OLED_UpdateFromRAMBuffer();
 18910  013502  EC6C  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18911                           
 18912                           ;oled.c: 544: OLED_Frame = OLED_POS5_Temp;
 18913  013506  0E10               	movlw	16
 18914  013508  D5C6               	goto	L4
 18915  01350A                     l21936:
 18916                           
 18917                           ; BSR set to: 2
 18918                           ;oled.c: 551: OLED_update_flag = 0;
 18919  01350A  0E00               	movlw	0
 18920  01350C  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18921                           
 18922                           ; BSR set to: 2
 18923                           ;oled.c: 553: strcpy(OLED_RAM_Buffer.line0, "Ambient Temp:");
 18924  01350E  0E00               	movlw	low _OLED_RAM_Buffer
 18925  013510  6F03               	movwf	strcpy@to& (0+255),b
 18926  013512  0E03               	movlw	high _OLED_RAM_Buffer
 18927  013514  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18928  013516  0E71               	movlw	low STR_119
 18929  013518  6F05               	movwf	strcpy@from& (0+255),b
 18930  01351A  0EFC               	movlw	high STR_119
 18931  01351C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18932  01351E  ECE6  F0DC         	call	_strcpy	;wreg free
 18933                           
 18934                           ;oled.c: 554: sprintf(OLED_RAM_Buffer.line1, "%+.3f C", LM73_temp_results.Ambient_temp_r
      +                          esult);
 18935  013522  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18936  013524  0102               	movlb	2	; () banked
 18937  013526  6F8C               	movwf	sprintf@wh& (0+255),b
 18938  013528  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18939  01352A  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 18940  01352C  0E4A               	movlw	low STR_112
 18941  01352E  6F8E               	movwf	sprintf@f& (0+255),b
 18942  013530  0EFF               	movlw	high STR_112
 18943  013532  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 18944  013534  C2E3  F290         	movff	_LM73_temp_results+8,?_sprintf+4
 18945  013538  C2E4  F291         	movff	_LM73_temp_results+9,?_sprintf+5
 18946  01353C  C2E5  F292         	movff	_LM73_temp_results+10,?_sprintf+6
 18947  013540  C2E6  F293         	movff	_LM73_temp_results+11,?_sprintf+7
 18948  013544  EC0A  F0DD         	call	_sprintf	;wreg free
 18949                           
 18950                           ;oled.c: 555: strcpy(OLED_RAM_Buffer.line2, " ");
 18951  013548  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18952  01354A  0102               	movlb	2	; () banked
 18953  01354C  6F03               	movwf	strcpy@to& (0+255),b
 18954  01354E  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18955  013550  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18956  013552  0EAA               	movlw	low (STR_56+10)
 18957  013554  6F05               	movwf	strcpy@from& (0+255),b
 18958  013556  0EFD               	movlw	high (STR_56+10)
 18959  013558  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18960  01355A  ECE6  F0DC         	call	_strcpy	;wreg free
 18961                           
 18962                           ;oled.c: 556: strcpy(OLED_RAM_Buffer.line3, " ");
 18963  01355E  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18964  013560  0102               	movlb	2	; () banked
 18965  013562  6F03               	movwf	strcpy@to& (0+255),b
 18966  013564  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18967  013566  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18968  013568  0EAA               	movlw	low (STR_56+10)
 18969  01356A  6F05               	movwf	strcpy@from& (0+255),b
 18970  01356C  0EFD               	movlw	high (STR_56+10)
 18971  01356E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18972  013570  ECE6  F0DC         	call	_strcpy	;wreg free
 18973                           
 18974                           ;oled.c: 558: OLED_UpdateFromRAMBuffer();
 18975  013574  EC6C  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18976                           
 18977                           ;oled.c: 559: OLED_Frame = OLED_Ambient_Temp;
 18978  013578  0E11               	movlw	17
 18979  01357A  D58D               	goto	L4
 18980  01357C                     l21952:
 18981                           
 18982                           ; BSR set to: 2
 18983                           ;oled.c: 566: OLED_update_flag = 0;
 18984  01357C  0E00               	movlw	0
 18985  01357E  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18986                           
 18987                           ; BSR set to: 2
 18988                           ;oled.c: 568: strcpy(OLED_RAM_Buffer.line0, "Micro Temp:");
 18989  013580  0E00               	movlw	low _OLED_RAM_Buffer
 18990  013582  6F03               	movwf	strcpy@to& (0+255),b
 18991  013584  0E03               	movlw	high _OLED_RAM_Buffer
 18992  013586  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18993  013588  0E7C               	movlw	low STR_123
 18994  01358A  6F05               	movwf	strcpy@from& (0+255),b
 18995  01358C  0EFD               	movlw	high STR_123
 18996  01358E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18997  013590  ECE6  F0DC         	call	_strcpy	;wreg free
 18998                           
 18999                           ;oled.c: 569: sprintf(OLED_RAM_Buffer.line1, "%+.3f C", adc_results.die_temp_adc_result)
      +                          ;
 19000  013594  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19001  013596  0102               	movlb	2	; () banked
 19002  013598  6F8C               	movwf	sprintf@wh& (0+255),b
 19003  01359A  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19004  01359C  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19005  01359E  0E4A               	movlw	low STR_112
 19006  0135A0  6F8E               	movwf	sprintf@f& (0+255),b
 19007  0135A2  0EFF               	movlw	high STR_112
 19008  0135A4  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19009  0135A6  C0F5  F290         	movff	_adc_results+24,?_sprintf+4
 19010  0135AA  C0F6  F291         	movff	_adc_results+25,?_sprintf+5
 19011  0135AE  C0F7  F292         	movff	_adc_results+26,?_sprintf+6
 19012  0135B2  C0F8  F293         	movff	_adc_results+27,?_sprintf+7
 19013  0135B6  EC0A  F0DD         	call	_sprintf	;wreg free
 19014                           
 19015                           ;oled.c: 570: strcpy(OLED_RAM_Buffer.line2, " ");
 19016  0135BA  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19017  0135BC  0102               	movlb	2	; () banked
 19018  0135BE  6F03               	movwf	strcpy@to& (0+255),b
 19019  0135C0  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19020  0135C2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19021  0135C4  0EAA               	movlw	low (STR_56+10)
 19022  0135C6  6F05               	movwf	strcpy@from& (0+255),b
 19023  0135C8  0EFD               	movlw	high (STR_56+10)
 19024  0135CA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19025  0135CC  ECE6  F0DC         	call	_strcpy	;wreg free
 19026                           
 19027                           ;oled.c: 571: strcpy(OLED_RAM_Buffer.line3, " ");
 19028  0135D0  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19029  0135D2  0102               	movlb	2	; () banked
 19030  0135D4  6F03               	movwf	strcpy@to& (0+255),b
 19031  0135D6  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19032  0135D8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19033  0135DA  0EAA               	movlw	low (STR_56+10)
 19034  0135DC  6F05               	movwf	strcpy@from& (0+255),b
 19035  0135DE  0EFD               	movlw	high (STR_56+10)
 19036  0135E0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19037  0135E2  ECE6  F0DC         	call	_strcpy	;wreg free
 19038                           
 19039                           ;oled.c: 573: OLED_UpdateFromRAMBuffer();
 19040  0135E6  EC6C  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19041                           
 19042                           ;oled.c: 574: OLED_Frame = OLED_Micro_Temp;
 19043  0135EA  0E12               	movlw	18
 19044  0135EC  D554               	goto	L4
 19045  0135EE                     l21968:
 19046                           
 19047                           ; BSR set to: 2
 19048                           ;oled.c: 581: OLED_update_flag = 0;
 19049  0135EE  0E00               	movlw	0
 19050  0135F0  6FD6               	movwf	_OLED_update_flag& (0+255),b
 19051                           
 19052                           ; BSR set to: 2
 19053                           ;oled.c: 583: strcpy(OLED_RAM_Buffer.line0, "+5V Sw. Freq:");
 19054  0135F2  0E00               	movlw	low _OLED_RAM_Buffer
 19055  0135F4  6F03               	movwf	strcpy@to& (0+255),b
 19056  0135F6  0E03               	movlw	high _OLED_RAM_Buffer
 19057  0135F8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19058  0135FA  0E7F               	movlw	low STR_127
 19059  0135FC  6F05               	movwf	strcpy@from& (0+255),b
 19060  0135FE  0EFC               	movlw	high STR_127
 19061  013600  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19062  013602  ECE6  F0DC         	call	_strcpy	;wreg free
 19063                           
 19064                           ;oled.c: 584: if (nxq_charge_state == QI_Idle || nxq_charge_state == QI_Error) strcpy(OL
      +                          ED_RAM_Buffer.line1, "Burst Mode");
 19065  013606  0101               	movlb	1	; () banked
 19066  013608  5195               	movf	_nxq_charge_state& (0+255),w,b
 19067  01360A  B4D8               	btfsc	status,2,c
 19068  01360C  D004               	goto	u27820
 19069                           
 19070                           ; BSR set to: 1
 19071  01360E  0E03               	movlw	3
 19072  013610  1995               	xorwf	_nxq_charge_state& (0+255),w,b
 19073  013612  A4D8               	btfss	status,2,c
 19074  013614  D00C               	goto	l21978
 19075  013616                     u27820:
 19076                           
 19077                           ; BSR set to: 1
 19078  013616  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19079  013618  0102               	movlb	2	; () banked
 19080  01361A  6F03               	movwf	strcpy@to& (0+255),b
 19081  01361C  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19082  01361E  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19083  013620  0EFC               	movlw	low STR_128
 19084  013622  6F05               	movwf	strcpy@from& (0+255),b
 19085  013624  0EFD               	movlw	high STR_128
 19086  013626  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19087  013628  ECE6  F0DC         	call	_strcpy	;wreg free
 19088  01362C  D00B               	goto	l2042
 19089  01362E                     l21978:
 19090                           
 19091                           ; BSR set to: 1
 19092                           ;oled.c: 585: else strcpy(OLED_RAM_Buffer.line1, "+2.5 MHz");
 19093  01362E  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19094  013630  0102               	movlb	2	; () banked
 19095  013632  6F03               	movwf	strcpy@to& (0+255),b
 19096  013634  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19097  013636  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19098  013638  0E1F               	movlw	low STR_129
 19099  01363A  6F05               	movwf	strcpy@from& (0+255),b
 19100  01363C  0EFF               	movlw	high STR_129
 19101  01363E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19102  013640  ECE6  F0DC         	call	_strcpy	;wreg free
 19103  013644                     l2042:
 19104                           
 19105                           ;oled.c: 586: strcpy(OLED_RAM_Buffer.line2, " ");
 19106  013644  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19107  013646  0102               	movlb	2	; () banked
 19108  013648  6F03               	movwf	strcpy@to& (0+255),b
 19109  01364A  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19110  01364C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19111  01364E  0EAA               	movlw	low (STR_56+10)
 19112  013650  6F05               	movwf	strcpy@from& (0+255),b
 19113  013652  0EFD               	movlw	high (STR_56+10)
 19114  013654  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19115  013656  ECE6  F0DC         	call	_strcpy	;wreg free
 19116                           
 19117                           ;oled.c: 587: strcpy(OLED_RAM_Buffer.line3, " ");
 19118  01365A  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19119  01365C  0102               	movlb	2	; () banked
 19120  01365E  6F03               	movwf	strcpy@to& (0+255),b
 19121  013660  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19122  013662  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19123  013664  0EAA               	movlw	low (STR_56+10)
 19124  013666  6F05               	movwf	strcpy@from& (0+255),b
 19125  013668  0EFD               	movlw	high (STR_56+10)
 19126  01366A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19127  01366C  ECE6  F0DC         	call	_strcpy	;wreg free
 19128                           
 19129                           ;oled.c: 589: OLED_UpdateFromRAMBuffer();
 19130  013670  EC6C  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19131                           
 19132                           ;oled.c: 590: OLED_Frame = OLED_POS5_FSW;
 19133  013674  0E13               	movlw	19
 19134  013676  D50F               	goto	L4
 19135  013678                     l21986:
 19136                           
 19137                           ; BSR set to: 2
 19138                           ;oled.c: 597: OLED_update_flag = 0;
 19139  013678  0E00               	movlw	0
 19140  01367A  6FD6               	movwf	_OLED_update_flag& (0+255),b
 19141                           
 19142                           ; BSR set to: 2
 19143                           ;oled.c: 599: strcpy(OLED_RAM_Buffer.line0, "QI Sw. Freq:");
 19144  01367C  0E00               	movlw	low _OLED_RAM_Buffer
 19145  01367E  6F03               	movwf	strcpy@to& (0+255),b
 19146  013680  0E03               	movlw	high _OLED_RAM_Buffer
 19147  013682  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19148  013684  0E08               	movlw	low STR_132
 19149  013686  6F05               	movwf	strcpy@from& (0+255),b
 19150  013688  0EFD               	movlw	high STR_132
 19151  01368A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19152  01368C  ECE6  F0DC         	call	_strcpy	;wreg free
 19153                           
 19154                           ;oled.c: 600: if (nxq_charge_state == QI_Idle || nxq_charge_state == QI_Error) strcpy(OL
      +                          ED_RAM_Buffer.line1, "Burst Mode");
 19155  013690  0101               	movlb	1	; () banked
 19156  013692  5195               	movf	_nxq_charge_state& (0+255),w,b
 19157  013694  B4D8               	btfsc	status,2,c
 19158  013696  D004               	goto	u27840
 19159                           
 19160                           ; BSR set to: 1
 19161  013698  0E03               	movlw	3
 19162  01369A  1995               	xorwf	_nxq_charge_state& (0+255),w,b
 19163  01369C  A4D8               	btfss	status,2,c
 19164  01369E  D00C               	goto	l21996
 19165  0136A0                     u27840:
 19166                           
 19167                           ; BSR set to: 1
 19168  0136A0  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19169  0136A2  0102               	movlb	2	; () banked
 19170  0136A4  6F03               	movwf	strcpy@to& (0+255),b
 19171  0136A6  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19172  0136A8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19173  0136AA  0EFC               	movlw	low STR_128
 19174  0136AC  6F05               	movwf	strcpy@from& (0+255),b
 19175  0136AE  0EFD               	movlw	high STR_128
 19176  0136B0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19177  0136B2  ECE6  F0DC         	call	_strcpy	;wreg free
 19178  0136B6  D01D               	goto	l21998
 19179  0136B8                     l21996:
 19180                           
 19181                           ; BSR set to: 1
 19182                           ;oled.c: 601: else sprintf(OLED_RAM_Buffer.line1, "%sHz", floatToEngineeringFormat(freq_
      +                          meas_results.QI_Freq_Meas));
 19183  0136B8  C168  F29F         	movff	_freq_meas_results,floatToEngineeringFormat@input_value
 19184  0136BC  C169  F2A0         	movff	_freq_meas_results+1,floatToEngineeringFormat@input_value+1
 19185  0136C0  C16A  F2A1         	movff	_freq_meas_results+2,floatToEngineeringFormat@input_value+2
 19186  0136C4  C16B  F2A2         	movff	_freq_meas_results+3,floatToEngineeringFormat@input_value+3
 19187  0136C8  EC9C  F0B1         	call	_floatToEngineeringFormat	;wreg free
 19188  0136CC  C29F  F3F3         	movff	?_floatToEngineeringFormat,_OLED_updateHandler$6029
 19189  0136D0  C2A0  F3F4         	movff	?_floatToEngineeringFormat+1,_OLED_updateHandler$6029+1
 19190                           
 19191                           ;oled.c: 601: else sprintf(OLED_RAM_Buffer.line1, "%sHz", floatToEngineeringFormat(freq_
      +                          meas_results.QI_Freq_Meas));
 19192  0136D4  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19193  0136D6  0102               	movlb	2	; () banked
 19194  0136D8  6F8C               	movwf	sprintf@wh& (0+255),b
 19195  0136DA  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19196  0136DC  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19197  0136DE  0EA4               	movlw	low STR_134
 19198  0136E0  6F8E               	movwf	sprintf@f& (0+255),b
 19199  0136E2  0EFF               	movlw	high STR_134
 19200  0136E4  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19201  0136E6  C3F3  F290         	movff	_OLED_updateHandler$6029,?_sprintf+4
 19202  0136EA  C3F4  F291         	movff	_OLED_updateHandler$6029+1,?_sprintf+5
 19203  0136EE  EC0A  F0DD         	call	_sprintf	;wreg free
 19204  0136F2                     l21998:
 19205                           
 19206                           ;oled.c: 602: strcpy(OLED_RAM_Buffer.line2, " ");
 19207  0136F2  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19208  0136F4  0102               	movlb	2	; () banked
 19209  0136F6  6F03               	movwf	strcpy@to& (0+255),b
 19210  0136F8  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19211  0136FA  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19212  0136FC  0EAA               	movlw	low (STR_56+10)
 19213  0136FE  6F05               	movwf	strcpy@from& (0+255),b
 19214  013700  0EFD               	movlw	high (STR_56+10)
 19215  013702  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19216  013704  ECE6  F0DC         	call	_strcpy	;wreg free
 19217                           
 19218                           ;oled.c: 603: strcpy(OLED_RAM_Buffer.line3, " ");
 19219  013708  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19220  01370A  0102               	movlb	2	; () banked
 19221  01370C  6F03               	movwf	strcpy@to& (0+255),b
 19222  01370E  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19223  013710  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19224  013712  0EAA               	movlw	low (STR_56+10)
 19225  013714  6F05               	movwf	strcpy@from& (0+255),b
 19226  013716  0EFD               	movlw	high (STR_56+10)
 19227  013718  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19228  01371A  ECE6  F0DC         	call	_strcpy	;wreg free
 19229                           
 19230                           ;oled.c: 605: OLED_UpdateFromRAMBuffer();
 19231  01371E  EC6C  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19232                           
 19233                           ;oled.c: 606: OLED_Frame = OLED_QI_FSW;
 19234  013722  0E14               	movlw	20
 19235  013724  D4B8               	goto	L4
 19236  013726                     l22008:
 19237                           
 19238                           ; BSR set to: 2
 19239                           ;oled.c: 614: OLED_update_flag = 0;
 19240  013726  0E00               	movlw	0
 19241  013728  6FD6               	movwf	_OLED_update_flag& (0+255),b
 19242                           
 19243                           ; BSR set to: 2
 19244                           ;oled.c: 616: strcpy(OLED_RAM_Buffer.line0, "Dev. On Time:");
 19245  01372A  0E00               	movlw	low _OLED_RAM_Buffer
 19246  01372C  6F03               	movwf	strcpy@to& (0+255),b
 19247  01372E  0E03               	movlw	high _OLED_RAM_Buffer
 19248  013730  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19249  013732  0E63               	movlw	low STR_137
 19250  013734  6F05               	movwf	strcpy@from& (0+255),b
 19251  013736  0EFC               	movlw	high STR_137
 19252  013738  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19253  01373A  ECE6  F0DC         	call	_strcpy	;wreg free
 19254                           
 19255                           ;oled.c: 619: if (device_on_time >= 31536000) {
 19256  01373E  0E80               	movlw	128
 19257  013740  0100               	movlb	0	; () banked
 19258  013742  5DC5               	subwf	_device_on_time& (0+255),w,b
 19259  013744  0E33               	movlw	51
 19260  013746  59C6               	subwfb	(_device_on_time+1)& (0+255),w,b
 19261  013748  0EE1               	movlw	225
 19262  01374A  59C7               	subwfb	(_device_on_time+2)& (0+255),w,b
 19263  01374C  0E01               	movlw	1
 19264  01374E  59C8               	subwfb	(_device_on_time+3)& (0+255),w,b
 19265  013750  A0D8               	btfss	status,0,c
 19266  013752  D04F               	goto	l22016
 19267                           
 19268                           ; BSR set to: 0
 19269                           ;oled.c: 621: sprintf(OLED_RAM_Buffer.line1, "%u years", getYearsFromOnTime(device_on_ti
      +                          me));
 19270  013754  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19271  013756  0102               	movlb	2	; () banked
 19272  013758  6F8C               	movwf	sprintf@wh& (0+255),b
 19273  01375A  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19274  01375C  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19275  01375E  0E0D               	movlw	low STR_138
 19276  013760  6F8E               	movwf	sprintf@f& (0+255),b
 19277  013762  0EFF               	movlw	high STR_138
 19278  013764  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19279  013766  C0C5  F20D         	movff	_device_on_time,getYearsFromOnTime@input_seconds
 19280  01376A  C0C6  F20E         	movff	_device_on_time+1,getYearsFromOnTime@input_seconds+1
 19281  01376E  C0C7  F20F         	movff	_device_on_time+2,getYearsFromOnTime@input_seconds+2
 19282  013772  C0C8  F210         	movff	_device_on_time+3,getYearsFromOnTime@input_seconds+3
 19283  013776  EC50  F0E0         	call	_getYearsFromOnTime	;wreg free
 19284  01377A  0102               	movlb	2	; () banked
 19285  01377C  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19286  01377E  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19287  013780  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19288  013782  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19289  013784  EC0A  F0DD         	call	_sprintf	;wreg free
 19290                           
 19291                           ;oled.c: 622: sprintf(OLED_RAM_Buffer.line2, "%u days", getDaysFromOnTime(device_on_time
      +                          ));
 19292  013788  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19293  01378A  0102               	movlb	2	; () banked
 19294  01378C  6F8C               	movwf	sprintf@wh& (0+255),b
 19295  01378E  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19296  013790  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19297  013792  0E62               	movlw	low STR_139
 19298  013794  6F8E               	movwf	sprintf@f& (0+255),b
 19299  013796  0EFF               	movlw	high STR_139
 19300  013798  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19301  01379A  C0C5  F20D         	movff	_device_on_time,getDaysFromOnTime@input_seconds
 19302  01379E  C0C6  F20E         	movff	_device_on_time+1,getDaysFromOnTime@input_seconds+1
 19303  0137A2  C0C7  F20F         	movff	_device_on_time+2,getDaysFromOnTime@input_seconds+2
 19304  0137A6  C0C8  F210         	movff	_device_on_time+3,getDaysFromOnTime@input_seconds+3
 19305  0137AA  ECE7  F0D6         	call	_getDaysFromOnTime	;wreg free
 19306  0137AE  0102               	movlb	2	; () banked
 19307  0137B0  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19308  0137B2  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19309  0137B4  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19310  0137B6  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19311  0137B8  EC0A  F0DD         	call	_sprintf	;wreg free
 19312                           
 19313                           ;oled.c: 623: sprintf(OLED_RAM_Buffer.line3, "%u hours", getHoursFromOnTime(device_on_ti
      +                          me));
 19314  0137BC  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19315  0137BE  0102               	movlb	2	; () banked
 19316  0137C0  6F8C               	movwf	sprintf@wh& (0+255),b
 19317  0137C2  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19318  0137C4  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19319  0137C6  0E16               	movlw	low STR_140
 19320  0137C8  6F8E               	movwf	sprintf@f& (0+255),b
 19321  0137CA  0EFF               	movlw	high STR_140
 19322  0137CC  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19323  0137CE  C0C5  F20D         	movff	_device_on_time,getHoursFromOnTime@input_seconds
 19324  0137D2  C0C6  F20E         	movff	_device_on_time+1,getHoursFromOnTime@input_seconds+1
 19325  0137D6  C0C7  F20F         	movff	_device_on_time+2,getHoursFromOnTime@input_seconds+2
 19326  0137DA  C0C8  F210         	movff	_device_on_time+3,getHoursFromOnTime@input_seconds+3
 19327  0137DE  EC6B  F0D1         	call	_getHoursFromOnTime	;wreg free
 19328  0137E2  0102               	movlb	2	; () banked
 19329  0137E4  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19330  0137E6  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19331  0137E8  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19332  0137EA  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19333  0137EC  EC0A  F0DD         	call	_sprintf	;wreg free
 19334                           
 19335                           ;oled.c: 626: }
 19336  0137F0  D129               	goto	l22036
 19337  0137F2                     l22016:
 19338                           
 19339                           ; BSR set to: 0
 19340                           ;oled.c: 629: else if (device_on_time >= 86400) {
 19341  0137F2  51C8               	movf	(_device_on_time+3)& (0+255),w,b
 19342  0137F4  E108               	bnz	u27860
 19343  0137F6  0E80               	movlw	128
 19344  0137F8  5DC5               	subwf	_device_on_time& (0+255),w,b
 19345  0137FA  0E51               	movlw	81
 19346  0137FC  59C6               	subwfb	(_device_on_time+1)& (0+255),w,b
 19347  0137FE  0E01               	movlw	1
 19348  013800  59C7               	subwfb	(_device_on_time+2)& (0+255),w,b
 19349  013802  A0D8               	btfss	status,0,c
 19350  013804  D04F               	goto	l22020
 19351  013806                     u27860:
 19352                           
 19353                           ; BSR set to: 0
 19354                           ;oled.c: 631: sprintf(OLED_RAM_Buffer.line1, "%u days", getDaysFromOnTime(device_on_time
      +                          ));
 19355  013806  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19356  013808  0102               	movlb	2	; () banked
 19357  01380A  6F8C               	movwf	sprintf@wh& (0+255),b
 19358  01380C  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19359  01380E  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19360  013810  0E62               	movlw	low STR_139
 19361  013812  6F8E               	movwf	sprintf@f& (0+255),b
 19362  013814  0EFF               	movlw	high STR_139
 19363  013816  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19364  013818  C0C5  F20D         	movff	_device_on_time,getDaysFromOnTime@input_seconds
 19365  01381C  C0C6  F20E         	movff	_device_on_time+1,getDaysFromOnTime@input_seconds+1
 19366  013820  C0C7  F20F         	movff	_device_on_time+2,getDaysFromOnTime@input_seconds+2
 19367  013824  C0C8  F210         	movff	_device_on_time+3,getDaysFromOnTime@input_seconds+3
 19368  013828  ECE7  F0D6         	call	_getDaysFromOnTime	;wreg free
 19369  01382C  0102               	movlb	2	; () banked
 19370  01382E  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19371  013830  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19372  013832  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19373  013834  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19374  013836  EC0A  F0DD         	call	_sprintf	;wreg free
 19375                           
 19376                           ;oled.c: 632: sprintf(OLED_RAM_Buffer.line2, "%u hours", getHoursFromOnTime(device_on_ti
      +                          me));
 19377  01383A  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19378  01383C  0102               	movlb	2	; () banked
 19379  01383E  6F8C               	movwf	sprintf@wh& (0+255),b
 19380  013840  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19381  013842  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19382  013844  0E16               	movlw	low STR_140
 19383  013846  6F8E               	movwf	sprintf@f& (0+255),b
 19384  013848  0EFF               	movlw	high STR_140
 19385  01384A  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19386  01384C  C0C5  F20D         	movff	_device_on_time,getHoursFromOnTime@input_seconds
 19387  013850  C0C6  F20E         	movff	_device_on_time+1,getHoursFromOnTime@input_seconds+1
 19388  013854  C0C7  F20F         	movff	_device_on_time+2,getHoursFromOnTime@input_seconds+2
 19389  013858  C0C8  F210         	movff	_device_on_time+3,getHoursFromOnTime@input_seconds+3
 19390  01385C  EC6B  F0D1         	call	_getHoursFromOnTime	;wreg free
 19391  013860  0102               	movlb	2	; () banked
 19392  013862  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19393  013864  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19394  013866  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19395  013868  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19396  01386A  EC0A  F0DD         	call	_sprintf	;wreg free
 19397                           
 19398                           ;oled.c: 633: sprintf(OLED_RAM_Buffer.line3, "%u minutes", getMinutesFromOnTime(device_o
      +                          n_time));
 19399  01386E  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19400  013870  0102               	movlb	2	; () banked
 19401  013872  6F8C               	movwf	sprintf@wh& (0+255),b
 19402  013874  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19403  013876  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19404  013878  0E12               	movlw	low STR_143
 19405  01387A  6F8E               	movwf	sprintf@f& (0+255),b
 19406  01387C  0EFE               	movlw	high STR_143
 19407  01387E  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19408  013880  C0C5  F20D         	movff	_device_on_time,getMinutesFromOnTime@input_seconds
 19409  013884  C0C6  F20E         	movff	_device_on_time+1,getMinutesFromOnTime@input_seconds+1
 19410  013888  C0C7  F20F         	movff	_device_on_time+2,getMinutesFromOnTime@input_seconds+2
 19411  01388C  C0C8  F210         	movff	_device_on_time+3,getMinutesFromOnTime@input_seconds+3
 19412  013890  ECE0  F0CB         	call	_getMinutesFromOnTime	;wreg free
 19413  013894  0102               	movlb	2	; () banked
 19414  013896  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19415  013898  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19416  01389A  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19417  01389C  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19418  01389E  EC0A  F0DD         	call	_sprintf	;wreg free
 19419                           
 19420                           ;oled.c: 635: }
 19421  0138A2  D0D0               	goto	l22036
 19422  0138A4                     l22020:
 19423                           
 19424                           ; BSR set to: 0
 19425                           ;oled.c: 638: else if (device_on_time >= 3600) {
 19426  0138A4  51C8               	movf	(_device_on_time+3)& (0+255),w,b
 19427  0138A6  11C7               	iorwf	(_device_on_time+2)& (0+255),w,b
 19428  0138A8  E106               	bnz	u27870
 19429  0138AA  0E10               	movlw	16
 19430  0138AC  5DC5               	subwf	_device_on_time& (0+255),w,b
 19431  0138AE  0E0E               	movlw	14
 19432  0138B0  59C6               	subwfb	(_device_on_time+1)& (0+255),w,b
 19433  0138B2  A0D8               	btfss	status,0,c
 19434  0138B4  D04F               	goto	l22024
 19435  0138B6                     u27870:
 19436                           
 19437                           ; BSR set to: 0
 19438                           ;oled.c: 640: sprintf(OLED_RAM_Buffer.line1, "%u hours", getHoursFromOnTime(device_on_ti
      +                          me));
 19439  0138B6  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19440  0138B8  0102               	movlb	2	; () banked
 19441  0138BA  6F8C               	movwf	sprintf@wh& (0+255),b
 19442  0138BC  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19443  0138BE  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19444  0138C0  0E16               	movlw	low STR_140
 19445  0138C2  6F8E               	movwf	sprintf@f& (0+255),b
 19446  0138C4  0EFF               	movlw	high STR_140
 19447  0138C6  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19448  0138C8  C0C5  F20D         	movff	_device_on_time,getHoursFromOnTime@input_seconds
 19449  0138CC  C0C6  F20E         	movff	_device_on_time+1,getHoursFromOnTime@input_seconds+1
 19450  0138D0  C0C7  F20F         	movff	_device_on_time+2,getHoursFromOnTime@input_seconds+2
 19451  0138D4  C0C8  F210         	movff	_device_on_time+3,getHoursFromOnTime@input_seconds+3
 19452  0138D8  EC6B  F0D1         	call	_getHoursFromOnTime	;wreg free
 19453  0138DC  0102               	movlb	2	; () banked
 19454  0138DE  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19455  0138E0  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19456  0138E2  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19457  0138E4  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19458  0138E6  EC0A  F0DD         	call	_sprintf	;wreg free
 19459                           
 19460                           ;oled.c: 641: sprintf(OLED_RAM_Buffer.line2, "%u minutes", getMinutesFromOnTime(device_o
      +                          n_time));
 19461  0138EA  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19462  0138EC  0102               	movlb	2	; () banked
 19463  0138EE  6F8C               	movwf	sprintf@wh& (0+255),b
 19464  0138F0  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19465  0138F2  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19466  0138F4  0E12               	movlw	low STR_143
 19467  0138F6  6F8E               	movwf	sprintf@f& (0+255),b
 19468  0138F8  0EFE               	movlw	high STR_143
 19469  0138FA  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19470  0138FC  C0C5  F20D         	movff	_device_on_time,getMinutesFromOnTime@input_seconds
 19471  013900  C0C6  F20E         	movff	_device_on_time+1,getMinutesFromOnTime@input_seconds+1
 19472  013904  C0C7  F20F         	movff	_device_on_time+2,getMinutesFromOnTime@input_seconds+2
 19473  013908  C0C8  F210         	movff	_device_on_time+3,getMinutesFromOnTime@input_seconds+3
 19474  01390C  ECE0  F0CB         	call	_getMinutesFromOnTime	;wreg free
 19475  013910  0102               	movlb	2	; () banked
 19476  013912  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19477  013914  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19478  013916  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19479  013918  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19480  01391A  EC0A  F0DD         	call	_sprintf	;wreg free
 19481                           
 19482                           ;oled.c: 642: sprintf(OLED_RAM_Buffer.line3, "%u seconds", getSecondsFromOnTime(device_o
      +                          n_time));
 19483  01391E  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19484  013920  0102               	movlb	2	; () banked
 19485  013922  6F8C               	movwf	sprintf@wh& (0+255),b
 19486  013924  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19487  013926  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19488  013928  0E07               	movlw	low STR_146
 19489  01392A  6F8E               	movwf	sprintf@f& (0+255),b
 19490  01392C  0EFE               	movlw	high STR_146
 19491  01392E  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19492  013930  C0C5  F20D         	movff	_device_on_time,getSecondsFromOnTime@input_seconds
 19493  013934  C0C6  F20E         	movff	_device_on_time+1,getSecondsFromOnTime@input_seconds+1
 19494  013938  C0C7  F20F         	movff	_device_on_time+2,getSecondsFromOnTime@input_seconds+2
 19495  01393C  C0C8  F210         	movff	_device_on_time+3,getSecondsFromOnTime@input_seconds+3
 19496  013940  EC72  F0CA         	call	_getSecondsFromOnTime	;wreg free
 19497  013944  0102               	movlb	2	; () banked
 19498  013946  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19499  013948  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19500  01394A  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19501  01394C  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19502  01394E  EC0A  F0DD         	call	_sprintf	;wreg free
 19503                           
 19504                           ;oled.c: 644: }
 19505  013952  D078               	goto	l22036
 19506  013954                     l22024:
 19507                           
 19508                           ; BSR set to: 0
 19509                           ;oled.c: 647: else if (device_on_time >= 60) {
 19510  013954  51C8               	movf	(_device_on_time+3)& (0+255),w,b
 19511  013956  11C7               	iorwf	(_device_on_time+2)& (0+255),w,b
 19512  013958  11C6               	iorwf	(_device_on_time+1)& (0+255),w,b
 19513  01395A  E104               	bnz	u27880
 19514  01395C  0E3C               	movlw	60
 19515  01395E  5DC5               	subwf	_device_on_time& (0+255),w,b
 19516  013960  A0D8               	btfss	status,0,c
 19517  013962  D040               	goto	l22030
 19518  013964                     u27880:
 19519                           
 19520                           ; BSR set to: 0
 19521                           ;oled.c: 649: sprintf(OLED_RAM_Buffer.line1, "%u minutes", getMinutesFromOnTime(device_o
      +                          n_time));
 19522  013964  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19523  013966  0102               	movlb	2	; () banked
 19524  013968  6F8C               	movwf	sprintf@wh& (0+255),b
 19525  01396A  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19526  01396C  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19527  01396E  0E12               	movlw	low STR_143
 19528  013970  6F8E               	movwf	sprintf@f& (0+255),b
 19529  013972  0EFE               	movlw	high STR_143
 19530  013974  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19531  013976  C0C5  F20D         	movff	_device_on_time,getMinutesFromOnTime@input_seconds
 19532  01397A  C0C6  F20E         	movff	_device_on_time+1,getMinutesFromOnTime@input_seconds+1
 19533  01397E  C0C7  F20F         	movff	_device_on_time+2,getMinutesFromOnTime@input_seconds+2
 19534  013982  C0C8  F210         	movff	_device_on_time+3,getMinutesFromOnTime@input_seconds+3
 19535  013986  ECE0  F0CB         	call	_getMinutesFromOnTime	;wreg free
 19536  01398A  0102               	movlb	2	; () banked
 19537  01398C  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19538  01398E  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19539  013990  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19540  013992  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19541  013994  EC0A  F0DD         	call	_sprintf	;wreg free
 19542                           
 19543                           ;oled.c: 650: sprintf(OLED_RAM_Buffer.line2, "%u seconds", getSecondsFromOnTime(device_o
      +                          n_time));
 19544  013998  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19545  01399A  0102               	movlb	2	; () banked
 19546  01399C  6F8C               	movwf	sprintf@wh& (0+255),b
 19547  01399E  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19548  0139A0  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19549  0139A2  0E07               	movlw	low STR_146
 19550  0139A4  6F8E               	movwf	sprintf@f& (0+255),b
 19551  0139A6  0EFE               	movlw	high STR_146
 19552  0139A8  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19553  0139AA  C0C5  F20D         	movff	_device_on_time,getSecondsFromOnTime@input_seconds
 19554  0139AE  C0C6  F20E         	movff	_device_on_time+1,getSecondsFromOnTime@input_seconds+1
 19555  0139B2  C0C7  F20F         	movff	_device_on_time+2,getSecondsFromOnTime@input_seconds+2
 19556  0139B6  C0C8  F210         	movff	_device_on_time+3,getSecondsFromOnTime@input_seconds+3
 19557  0139BA  EC72  F0CA         	call	_getSecondsFromOnTime	;wreg free
 19558  0139BE  0102               	movlb	2	; () banked
 19559  0139C0  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19560  0139C2  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19561  0139C4  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19562  0139C6  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19563  0139C8  EC0A  F0DD         	call	_sprintf	;wreg free
 19564                           
 19565                           ;oled.c: 651: strcpy(OLED_RAM_Buffer.line3, " ");
 19566  0139CC  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19567  0139CE  0102               	movlb	2	; () banked
 19568  0139D0  6F03               	movwf	strcpy@to& (0+255),b
 19569  0139D2  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19570  0139D4  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19571  0139D6  0EAA               	movlw	low (STR_56+10)
 19572  0139D8  6F05               	movwf	strcpy@from& (0+255),b
 19573  0139DA  0EFD               	movlw	high (STR_56+10)
 19574  0139DC  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19575  0139DE  ECE6  F0DC         	call	_strcpy	;wreg free
 19576                           
 19577                           ;oled.c: 653: }
 19578  0139E2  D030               	goto	l22036
 19579  0139E4                     l22030:
 19580                           
 19581                           ; BSR set to: 0
 19582                           ;oled.c: 656: else {;oled.c: 658: sprintf(OLED_RAM_Buffer.line1, "%u seconds", getSecond
      +                          sFromOnTime(device_on_time));
 19583  0139E4  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19584  0139E6  0102               	movlb	2	; () banked
 19585  0139E8  6F8C               	movwf	sprintf@wh& (0+255),b
 19586  0139EA  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19587  0139EC  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19588  0139EE  0E07               	movlw	low STR_146
 19589  0139F0  6F8E               	movwf	sprintf@f& (0+255),b
 19590  0139F2  0EFE               	movlw	high STR_146
 19591  0139F4  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19592  0139F6  C0C5  F20D         	movff	_device_on_time,getSecondsFromOnTime@input_seconds
 19593  0139FA  C0C6  F20E         	movff	_device_on_time+1,getSecondsFromOnTime@input_seconds+1
 19594  0139FE  C0C7  F20F         	movff	_device_on_time+2,getSecondsFromOnTime@input_seconds+2
 19595  013A02  C0C8  F210         	movff	_device_on_time+3,getSecondsFromOnTime@input_seconds+3
 19596  013A06  EC72  F0CA         	call	_getSecondsFromOnTime	;wreg free
 19597  013A0A  0102               	movlb	2	; () banked
 19598  013A0C  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19599  013A0E  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19600  013A10  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19601  013A12  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19602  013A14  EC0A  F0DD         	call	_sprintf	;wreg free
 19603                           
 19604                           ;oled.c: 659: strcpy(OLED_RAM_Buffer.line2, " ");
 19605  013A18  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19606  013A1A  0102               	movlb	2	; () banked
 19607  013A1C  6F03               	movwf	strcpy@to& (0+255),b
 19608  013A1E  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19609  013A20  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19610  013A22  0EAA               	movlw	low (STR_56+10)
 19611  013A24  6F05               	movwf	strcpy@from& (0+255),b
 19612  013A26  0EFD               	movlw	high (STR_56+10)
 19613  013A28  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19614  013A2A  ECE6  F0DC         	call	_strcpy	;wreg free
 19615                           
 19616                           ;oled.c: 660: strcpy(OLED_RAM_Buffer.line3, " ");
 19617  013A2E  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19618  013A30  0102               	movlb	2	; () banked
 19619  013A32  6F03               	movwf	strcpy@to& (0+255),b
 19620  013A34  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19621  013A36  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19622  013A38  0EAA               	movlw	low (STR_56+10)
 19623  013A3A  6F05               	movwf	strcpy@from& (0+255),b
 19624  013A3C  0EFD               	movlw	high (STR_56+10)
 19625  013A3E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19626  013A40  ECE6  F0DC         	call	_strcpy	;wreg free
 19627  013A44                     l22036:
 19628                           
 19629                           ;oled.c: 662: };oled.c: 665: OLED_UpdateFromRAMBuffer();
 19630  013A44  EC6C  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19631                           
 19632                           ;oled.c: 666: OLED_Frame = OLED_Dev_On_Time;
 19633  013A48  0E15               	movlw	21
 19634  013A4A  EF4B  F098         	goto	L4
 19635  013A4E                     l22042:
 19636                           
 19637                           ; BSR set to: 2
 19638                           ;oled.c: 673: OLED_update_flag = 0;
 19639  013A4E  0E00               	movlw	0
 19640  013A50  6FD6               	movwf	_OLED_update_flag& (0+255),b
 19641                           
 19642                           ; BSR set to: 2
 19643                           ;oled.c: 675: strcpy(OLED_RAM_Buffer.line0, "Charge Time:");
 19644  013A52  0E00               	movlw	low _OLED_RAM_Buffer
 19645  013A54  6F03               	movwf	strcpy@to& (0+255),b
 19646  013A56  0E03               	movlw	high _OLED_RAM_Buffer
 19647  013A58  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19648  013A5A  0EFB               	movlw	low STR_153
 19649  013A5C  6F05               	movwf	strcpy@from& (0+255),b
 19650  013A5E  0EFC               	movlw	high STR_153
 19651  013A60  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19652  013A62  ECE6  F0DC         	call	_strcpy	;wreg free
 19653                           
 19654                           ;oled.c: 678: if (QI_charge_time >= 3600) {
 19655  013A66  0102               	movlb	2	; () banked
 19656  013A68  51D5               	movf	(_QI_charge_time+3)& (0+255),w,b
 19657  013A6A  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 19658  013A6C  E106               	bnz	u27890
 19659  013A6E  0E10               	movlw	16
 19660  013A70  5DD2               	subwf	_QI_charge_time& (0+255),w,b
 19661  013A72  0E0E               	movlw	14
 19662  013A74  59D3               	subwfb	(_QI_charge_time+1)& (0+255),w,b
 19663  013A76  A0D8               	btfss	status,0,c
 19664  013A78  D04E               	goto	l22050
 19665  013A7A                     u27890:
 19666                           
 19667                           ; BSR set to: 2
 19668                           ;oled.c: 680: sprintf(OLED_RAM_Buffer.line1, "%u hours", getHoursFromOnTime(QI_charge_ti
      +                          me));
 19669  013A7A  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19670  013A7C  6F8C               	movwf	sprintf@wh& (0+255),b
 19671  013A7E  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19672  013A80  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19673  013A82  0E16               	movlw	low STR_140
 19674  013A84  6F8E               	movwf	sprintf@f& (0+255),b
 19675  013A86  0EFF               	movlw	high STR_140
 19676  013A88  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19677  013A8A  C2D2  F20D         	movff	_QI_charge_time,getHoursFromOnTime@input_seconds
 19678  013A8E  C2D3  F20E         	movff	_QI_charge_time+1,getHoursFromOnTime@input_seconds+1
 19679  013A92  C2D4  F20F         	movff	_QI_charge_time+2,getHoursFromOnTime@input_seconds+2
 19680  013A96  C2D5  F210         	movff	_QI_charge_time+3,getHoursFromOnTime@input_seconds+3
 19681  013A9A  EC6B  F0D1         	call	_getHoursFromOnTime	;wreg free
 19682  013A9E  0102               	movlb	2	; () banked
 19683  013AA0  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19684  013AA2  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19685  013AA4  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19686  013AA6  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19687  013AA8  EC0A  F0DD         	call	_sprintf	;wreg free
 19688                           
 19689                           ;oled.c: 681: sprintf(OLED_RAM_Buffer.line2, "%u minutes", getMinutesFromOnTime(QI_charg
      +                          e_time));
 19690  013AAC  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19691  013AAE  0102               	movlb	2	; () banked
 19692  013AB0  6F8C               	movwf	sprintf@wh& (0+255),b
 19693  013AB2  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19694  013AB4  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19695  013AB6  0E12               	movlw	low STR_143
 19696  013AB8  6F8E               	movwf	sprintf@f& (0+255),b
 19697  013ABA  0EFE               	movlw	high STR_143
 19698  013ABC  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19699  013ABE  C2D2  F20D         	movff	_QI_charge_time,getMinutesFromOnTime@input_seconds
 19700  013AC2  C2D3  F20E         	movff	_QI_charge_time+1,getMinutesFromOnTime@input_seconds+1
 19701  013AC6  C2D4  F20F         	movff	_QI_charge_time+2,getMinutesFromOnTime@input_seconds+2
 19702  013ACA  C2D5  F210         	movff	_QI_charge_time+3,getMinutesFromOnTime@input_seconds+3
 19703  013ACE  ECE0  F0CB         	call	_getMinutesFromOnTime	;wreg free
 19704  013AD2  0102               	movlb	2	; () banked
 19705  013AD4  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19706  013AD6  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19707  013AD8  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19708  013ADA  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19709  013ADC  EC0A  F0DD         	call	_sprintf	;wreg free
 19710                           
 19711                           ;oled.c: 682: sprintf(OLED_RAM_Buffer.line3, "%u seconds", getSecondsFromOnTime(QI_charg
      +                          e_time));
 19712  013AE0  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19713  013AE2  0102               	movlb	2	; () banked
 19714  013AE4  6F8C               	movwf	sprintf@wh& (0+255),b
 19715  013AE6  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19716  013AE8  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19717  013AEA  0E07               	movlw	low STR_146
 19718  013AEC  6F8E               	movwf	sprintf@f& (0+255),b
 19719  013AEE  0EFE               	movlw	high STR_146
 19720  013AF0  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19721  013AF2  C2D2  F20D         	movff	_QI_charge_time,getSecondsFromOnTime@input_seconds
 19722  013AF6  C2D3  F20E         	movff	_QI_charge_time+1,getSecondsFromOnTime@input_seconds+1
 19723  013AFA  C2D4  F20F         	movff	_QI_charge_time+2,getSecondsFromOnTime@input_seconds+2
 19724  013AFE  C2D5  F210         	movff	_QI_charge_time+3,getSecondsFromOnTime@input_seconds+3
 19725  013B02  EC72  F0CA         	call	_getSecondsFromOnTime	;wreg free
 19726  013B06  0102               	movlb	2	; () banked
 19727  013B08  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19728  013B0A  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19729  013B0C  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19730  013B0E  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19731  013B10  EC0A  F0DD         	call	_sprintf	;wreg free
 19732                           
 19733                           ;oled.c: 684: }
 19734  013B14  D09D               	goto	l22066
 19735  013B16                     l22050:
 19736                           
 19737                           ; BSR set to: 2
 19738                           ;oled.c: 687: else if (QI_charge_time >= 60) {
 19739  013B16  51D5               	movf	(_QI_charge_time+3)& (0+255),w,b
 19740  013B18  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 19741  013B1A  11D3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 19742  013B1C  E104               	bnz	u27900
 19743  013B1E  0E3C               	movlw	60
 19744  013B20  5DD2               	subwf	_QI_charge_time& (0+255),w,b
 19745  013B22  A0D8               	btfss	status,0,c
 19746  013B24  D03F               	goto	l22056
 19747  013B26                     u27900:
 19748                           
 19749                           ; BSR set to: 2
 19750                           ;oled.c: 689: sprintf(OLED_RAM_Buffer.line1, "%u minutes", getMinutesFromOnTime(QI_charg
      +                          e_time));
 19751  013B26  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19752  013B28  6F8C               	movwf	sprintf@wh& (0+255),b
 19753  013B2A  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19754  013B2C  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19755  013B2E  0E12               	movlw	low STR_143
 19756  013B30  6F8E               	movwf	sprintf@f& (0+255),b
 19757  013B32  0EFE               	movlw	high STR_143
 19758  013B34  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19759  013B36  C2D2  F20D         	movff	_QI_charge_time,getMinutesFromOnTime@input_seconds
 19760  013B3A  C2D3  F20E         	movff	_QI_charge_time+1,getMinutesFromOnTime@input_seconds+1
 19761  013B3E  C2D4  F20F         	movff	_QI_charge_time+2,getMinutesFromOnTime@input_seconds+2
 19762  013B42  C2D5  F210         	movff	_QI_charge_time+3,getMinutesFromOnTime@input_seconds+3
 19763  013B46  ECE0  F0CB         	call	_getMinutesFromOnTime	;wreg free
 19764  013B4A  0102               	movlb	2	; () banked
 19765  013B4C  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19766  013B4E  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19767  013B50  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19768  013B52  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19769  013B54  EC0A  F0DD         	call	_sprintf	;wreg free
 19770                           
 19771                           ;oled.c: 690: sprintf(OLED_RAM_Buffer.line2, "%u seconds", getSecondsFromOnTime(QI_charg
      +                          e_time));
 19772  013B58  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19773  013B5A  0102               	movlb	2	; () banked
 19774  013B5C  6F8C               	movwf	sprintf@wh& (0+255),b
 19775  013B5E  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19776  013B60  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19777  013B62  0E07               	movlw	low STR_146
 19778  013B64  6F8E               	movwf	sprintf@f& (0+255),b
 19779  013B66  0EFE               	movlw	high STR_146
 19780  013B68  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19781  013B6A  C2D2  F20D         	movff	_QI_charge_time,getSecondsFromOnTime@input_seconds
 19782  013B6E  C2D3  F20E         	movff	_QI_charge_time+1,getSecondsFromOnTime@input_seconds+1
 19783  013B72  C2D4  F20F         	movff	_QI_charge_time+2,getSecondsFromOnTime@input_seconds+2
 19784  013B76  C2D5  F210         	movff	_QI_charge_time+3,getSecondsFromOnTime@input_seconds+3
 19785  013B7A  EC72  F0CA         	call	_getSecondsFromOnTime	;wreg free
 19786  013B7E  0102               	movlb	2	; () banked
 19787  013B80  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19788  013B82  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19789  013B84  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19790  013B86  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19791  013B88  EC0A  F0DD         	call	_sprintf	;wreg free
 19792                           
 19793                           ;oled.c: 691: strcpy(OLED_RAM_Buffer.line3, " ");
 19794  013B8C  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19795  013B8E  0102               	movlb	2	; () banked
 19796  013B90  6F03               	movwf	strcpy@to& (0+255),b
 19797  013B92  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19798  013B94  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19799  013B96  0EAA               	movlw	low (STR_56+10)
 19800  013B98  6F05               	movwf	strcpy@from& (0+255),b
 19801  013B9A  0EFD               	movlw	high (STR_56+10)
 19802  013B9C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19803  013B9E  ECE6  F0DC         	call	_strcpy	;wreg free
 19804                           
 19805                           ;oled.c: 693: }
 19806  013BA2  D056               	goto	l22066
 19807  013BA4                     l22056:
 19808                           
 19809                           ; BSR set to: 2
 19810                           ;oled.c: 695: else if (QI_charge_time == 0) {
 19811  013BA4  51D2               	movf	_QI_charge_time& (0+255),w,b
 19812  013BA6  11D3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 19813  013BA8  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 19814  013BAA  11D5               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 19815  013BAC  A4D8               	btfss	status,2,c
 19816  013BAE  D021               	goto	l22060
 19817                           
 19818                           ; BSR set to: 2
 19819                           ;oled.c: 697: strcpy(OLED_RAM_Buffer.line1, "Not Charging");
 19820  013BB0  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19821  013BB2  6F03               	movwf	strcpy@to& (0+255),b
 19822  013BB4  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19823  013BB6  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19824  013BB8  0E22               	movlw	low STR_93
 19825  013BBA  6F05               	movwf	strcpy@from& (0+255),b
 19826  013BBC  0EFD               	movlw	high STR_93
 19827  013BBE  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19828  013BC0  ECE6  F0DC         	call	_strcpy	;wreg free
 19829                           
 19830                           ;oled.c: 698: strcpy(OLED_RAM_Buffer.line2, " ");
 19831  013BC4  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19832  013BC6  0102               	movlb	2	; () banked
 19833  013BC8  6F03               	movwf	strcpy@to& (0+255),b
 19834  013BCA  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19835  013BCC  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19836  013BCE  0EAA               	movlw	low (STR_56+10)
 19837  013BD0  6F05               	movwf	strcpy@from& (0+255),b
 19838  013BD2  0EFD               	movlw	high (STR_56+10)
 19839  013BD4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19840  013BD6  ECE6  F0DC         	call	_strcpy	;wreg free
 19841                           
 19842                           ;oled.c: 699: strcpy(OLED_RAM_Buffer.line3, " ");
 19843  013BDA  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19844  013BDC  0102               	movlb	2	; () banked
 19845  013BDE  6F03               	movwf	strcpy@to& (0+255),b
 19846  013BE0  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19847  013BE2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19848  013BE4  0EAA               	movlw	low (STR_56+10)
 19849  013BE6  6F05               	movwf	strcpy@from& (0+255),b
 19850  013BE8  0EFD               	movlw	high (STR_56+10)
 19851  013BEA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19852  013BEC  ECE6  F0DC         	call	_strcpy	;wreg free
 19853                           
 19854                           ;oled.c: 701: }
 19855  013BF0  D02F               	goto	l22066
 19856  013BF2                     l22060:
 19857                           
 19858                           ; BSR set to: 2
 19859                           ;oled.c: 704: else {;oled.c: 706: sprintf(OLED_RAM_Buffer.line1, "%u seconds", getSecond
      +                          sFromOnTime(QI_charge_time));
 19860  013BF2  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19861  013BF4  6F8C               	movwf	sprintf@wh& (0+255),b
 19862  013BF6  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19863  013BF8  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19864  013BFA  0E07               	movlw	low STR_146
 19865  013BFC  6F8E               	movwf	sprintf@f& (0+255),b
 19866  013BFE  0EFE               	movlw	high STR_146
 19867  013C00  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19868  013C02  C2D2  F20D         	movff	_QI_charge_time,getSecondsFromOnTime@input_seconds
 19869  013C06  C2D3  F20E         	movff	_QI_charge_time+1,getSecondsFromOnTime@input_seconds+1
 19870  013C0A  C2D4  F20F         	movff	_QI_charge_time+2,getSecondsFromOnTime@input_seconds+2
 19871  013C0E  C2D5  F210         	movff	_QI_charge_time+3,getSecondsFromOnTime@input_seconds+3
 19872  013C12  EC72  F0CA         	call	_getSecondsFromOnTime	;wreg free
 19873  013C16  0102               	movlb	2	; () banked
 19874  013C18  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 19875  013C1A  51A9               	movf	??_OLED_updateHandler& (0+255),w,b
 19876  013C1C  6F90               	movwf	(?_sprintf+4)& (0+255),b
 19877  013C1E  6B91               	clrf	(?_sprintf+5)& (0+255),b
 19878  013C20  EC0A  F0DD         	call	_sprintf	;wreg free
 19879                           
 19880                           ;oled.c: 707: strcpy(OLED_RAM_Buffer.line2, " ");
 19881  013C24  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19882  013C26  0102               	movlb	2	; () banked
 19883  013C28  6F03               	movwf	strcpy@to& (0+255),b
 19884  013C2A  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19885  013C2C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19886  013C2E  0EAA               	movlw	low (STR_56+10)
 19887  013C30  6F05               	movwf	strcpy@from& (0+255),b
 19888  013C32  0EFD               	movlw	high (STR_56+10)
 19889  013C34  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19890  013C36  ECE6  F0DC         	call	_strcpy	;wreg free
 19891                           
 19892                           ;oled.c: 708: strcpy(OLED_RAM_Buffer.line3, " ");
 19893  013C3A  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19894  013C3C  0102               	movlb	2	; () banked
 19895  013C3E  6F03               	movwf	strcpy@to& (0+255),b
 19896  013C40  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19897  013C42  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19898  013C44  0EAA               	movlw	low (STR_56+10)
 19899  013C46  6F05               	movwf	strcpy@from& (0+255),b
 19900  013C48  0EFD               	movlw	high (STR_56+10)
 19901  013C4A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19902  013C4C  ECE6  F0DC         	call	_strcpy	;wreg free
 19903  013C50                     l22066:
 19904                           
 19905                           ;oled.c: 710: };oled.c: 712: OLED_UpdateFromRAMBuffer();
 19906  013C50  EC6C  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19907                           
 19908                           ;oled.c: 713: OLED_Frame = OLED_Charge_Time;
 19909  013C54  0E0C               	movlw	12
 19910  013C56  EF4B  F098         	goto	L4
 19911  013C5A                     l22072:
 19912                           
 19913                           ; BSR set to: 2
 19914                           ;oled.c: 720: OLED_update_flag = 0;
 19915  013C5A  0E00               	movlw	0
 19916  013C5C  6FD6               	movwf	_OLED_update_flag& (0+255),b
 19917                           
 19918                           ; BSR set to: 2
 19919                           ;oled.c: 722: strcpy(OLED_RAM_Buffer.line0, "Output Charge:");
 19920  013C5E  0E00               	movlw	low _OLED_RAM_Buffer
 19921  013C60  6F03               	movwf	strcpy@to& (0+255),b
 19922  013C62  0E03               	movlw	high _OLED_RAM_Buffer
 19923  013C64  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19924  013C66  0ED1               	movlw	low STR_166
 19925  013C68  6F05               	movwf	strcpy@from& (0+255),b
 19926  013C6A  0EFB               	movlw	high STR_166
 19927  013C6C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19928  013C6E  ECE6  F0DC         	call	_strcpy	;wreg free
 19929                           
 19930                           ;oled.c: 723: if (QI_charge_time == 0) strcpy(OLED_RAM_Buffer.line1, "Not Charging");
 19931  013C72  0102               	movlb	2	; () banked
 19932  013C74  51D2               	movf	_QI_charge_time& (0+255),w,b
 19933  013C76  11D3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 19934  013C78  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 19935  013C7A  11D5               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 19936  013C7C  A4D8               	btfss	status,2,c
 19937  013C7E  D00B               	goto	l22080
 19938                           
 19939                           ; BSR set to: 2
 19940  013C80  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19941  013C82  6F03               	movwf	strcpy@to& (0+255),b
 19942  013C84  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19943  013C86  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19944  013C88  0E22               	movlw	low STR_93
 19945  013C8A  6F05               	movwf	strcpy@from& (0+255),b
 19946  013C8C  0EFD               	movlw	high STR_93
 19947  013C8E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19948  013C90  ECE6  F0DC         	call	_strcpy	;wreg free
 19949  013C94  D01D               	goto	l22082
 19950  013C96                     l22080:
 19951                           
 19952                           ; BSR set to: 2
 19953                           ;oled.c: 724: else sprintf(OLED_RAM_Buffer.line1, "%sC", floatToEngineeringFormat(adc_ca
      +                          lculations.output_charge));
 19954  013C96  C2CA  F29F         	movff	_adc_calculations+12,floatToEngineeringFormat@input_value
 19955  013C9A  C2CB  F2A0         	movff	_adc_calculations+13,floatToEngineeringFormat@input_value+1
 19956  013C9E  C2CC  F2A1         	movff	_adc_calculations+14,floatToEngineeringFormat@input_value+2
 19957  013CA2  C2CD  F2A2         	movff	_adc_calculations+15,floatToEngineeringFormat@input_value+3
 19958  013CA6  EC9C  F0B1         	call	_floatToEngineeringFormat	;wreg free
 19959  013CAA  C29F  F3F3         	movff	?_floatToEngineeringFormat,_OLED_updateHandler$6029
 19960  013CAE  C2A0  F3F4         	movff	?_floatToEngineeringFormat+1,_OLED_updateHandler$6029+1
 19961                           
 19962                           ;oled.c: 724: else sprintf(OLED_RAM_Buffer.line1, "%sC", floatToEngineeringFormat(adc_ca
      +                          lculations.output_charge));
 19963  013CB2  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19964  013CB4  0102               	movlb	2	; () banked
 19965  013CB6  6F8C               	movwf	sprintf@wh& (0+255),b
 19966  013CB8  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19967  013CBA  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 19968  013CBC  0EBF               	movlw	low STR_168
 19969  013CBE  6F8E               	movwf	sprintf@f& (0+255),b
 19970  013CC0  0EFF               	movlw	high STR_168
 19971  013CC2  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 19972  013CC4  C3F3  F290         	movff	_OLED_updateHandler$6029,?_sprintf+4
 19973  013CC8  C3F4  F291         	movff	_OLED_updateHandler$6029+1,?_sprintf+5
 19974  013CCC  EC0A  F0DD         	call	_sprintf	;wreg free
 19975  013CD0                     l22082:
 19976                           
 19977                           ;oled.c: 725: strcpy(OLED_RAM_Buffer.line2, " ");
 19978  013CD0  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19979  013CD2  0102               	movlb	2	; () banked
 19980  013CD4  6F03               	movwf	strcpy@to& (0+255),b
 19981  013CD6  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19982  013CD8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19983  013CDA  0EAA               	movlw	low (STR_56+10)
 19984  013CDC  6F05               	movwf	strcpy@from& (0+255),b
 19985  013CDE  0EFD               	movlw	high (STR_56+10)
 19986  013CE0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19987  013CE2  ECE6  F0DC         	call	_strcpy	;wreg free
 19988                           
 19989                           ;oled.c: 726: strcpy(OLED_RAM_Buffer.line3, " ");
 19990  013CE6  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19991  013CE8  0102               	movlb	2	; () banked
 19992  013CEA  6F03               	movwf	strcpy@to& (0+255),b
 19993  013CEC  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19994  013CEE  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19995  013CF0  0EAA               	movlw	low (STR_56+10)
 19996  013CF2  6F05               	movwf	strcpy@from& (0+255),b
 19997  013CF4  0EFD               	movlw	high (STR_56+10)
 19998  013CF6  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19999  013CF8  ECE6  F0DC         	call	_strcpy	;wreg free
 20000                           
 20001                           ;oled.c: 728: OLED_UpdateFromRAMBuffer();
 20002  013CFC  EC6C  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 20003                           
 20004                           ;oled.c: 729: OLED_Frame = OLED_Load_Charge;
 20005  013D00  0E0D               	movlw	13
 20006  013D02  EF4B  F098         	goto	L4
 20007  013D06                     l22092:
 20008                           
 20009                           ; BSR set to: 2
 20010                           ;oled.c: 736: OLED_update_flag = 0;
 20011  013D06  0E00               	movlw	0
 20012  013D08  6FD6               	movwf	_OLED_update_flag& (0+255),b
 20013                           
 20014                           ; BSR set to: 2
 20015                           ;oled.c: 738: strcpy(OLED_RAM_Buffer.line0, "Output Energy:");
 20016  013D0A  0E00               	movlw	low _OLED_RAM_Buffer
 20017  013D0C  6F03               	movwf	strcpy@to& (0+255),b
 20018  013D0E  0E03               	movlw	high _OLED_RAM_Buffer
 20019  013D10  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20020  013D12  0EEF               	movlw	low STR_171
 20021  013D14  6F05               	movwf	strcpy@from& (0+255),b
 20022  013D16  0EFB               	movlw	high STR_171
 20023  013D18  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20024  013D1A  ECE6  F0DC         	call	_strcpy	;wreg free
 20025                           
 20026                           ;oled.c: 739: if (QI_charge_time == 0) strcpy(OLED_RAM_Buffer.line1, "Not Charging");
 20027  013D1E  0102               	movlb	2	; () banked
 20028  013D20  51D2               	movf	_QI_charge_time& (0+255),w,b
 20029  013D22  11D3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 20030  013D24  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 20031  013D26  11D5               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 20032  013D28  A4D8               	btfss	status,2,c
 20033  013D2A  D00B               	goto	l22100
 20034                           
 20035                           ; BSR set to: 2
 20036  013D2C  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 20037  013D2E  6F03               	movwf	strcpy@to& (0+255),b
 20038  013D30  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 20039  013D32  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20040  013D34  0E22               	movlw	low STR_93
 20041  013D36  6F05               	movwf	strcpy@from& (0+255),b
 20042  013D38  0EFD               	movlw	high STR_93
 20043  013D3A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20044  013D3C  ECE6  F0DC         	call	_strcpy	;wreg free
 20045  013D40  D01D               	goto	l22102
 20046  013D42                     l22100:
 20047                           
 20048                           ; BSR set to: 2
 20049                           ;oled.c: 740: else sprintf(OLED_RAM_Buffer.line1, "%sJ", floatToEngineeringFormat(adc_ca
      +                          lculations.output_energy));
 20050  013D42  C2CE  F29F         	movff	_adc_calculations+16,floatToEngineeringFormat@input_value
 20051  013D46  C2CF  F2A0         	movff	_adc_calculations+17,floatToEngineeringFormat@input_value+1
 20052  013D4A  C2D0  F2A1         	movff	_adc_calculations+18,floatToEngineeringFormat@input_value+2
 20053  013D4E  C2D1  F2A2         	movff	_adc_calculations+19,floatToEngineeringFormat@input_value+3
 20054  013D52  EC9C  F0B1         	call	_floatToEngineeringFormat	;wreg free
 20055  013D56  C29F  F3F3         	movff	?_floatToEngineeringFormat,_OLED_updateHandler$6029
 20056  013D5A  C2A0  F3F4         	movff	?_floatToEngineeringFormat+1,_OLED_updateHandler$6029+1
 20057                           
 20058                           ;oled.c: 740: else sprintf(OLED_RAM_Buffer.line1, "%sJ", floatToEngineeringFormat(adc_ca
      +                          lculations.output_energy));
 20059  013D5E  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 20060  013D60  0102               	movlb	2	; () banked
 20061  013D62  6F8C               	movwf	sprintf@wh& (0+255),b
 20062  013D64  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 20063  013D66  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 20064  013D68  0EC3               	movlw	low STR_173
 20065  013D6A  6F8E               	movwf	sprintf@f& (0+255),b
 20066  013D6C  0EFF               	movlw	high STR_173
 20067  013D6E  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 20068  013D70  C3F3  F290         	movff	_OLED_updateHandler$6029,?_sprintf+4
 20069  013D74  C3F4  F291         	movff	_OLED_updateHandler$6029+1,?_sprintf+5
 20070  013D78  EC0A  F0DD         	call	_sprintf	;wreg free
 20071  013D7C                     l22102:
 20072                           
 20073                           ;oled.c: 741: strcpy(OLED_RAM_Buffer.line2, " ");
 20074  013D7C  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 20075  013D7E  0102               	movlb	2	; () banked
 20076  013D80  6F03               	movwf	strcpy@to& (0+255),b
 20077  013D82  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 20078  013D84  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20079  013D86  0EAA               	movlw	low (STR_56+10)
 20080  013D88  6F05               	movwf	strcpy@from& (0+255),b
 20081  013D8A  0EFD               	movlw	high (STR_56+10)
 20082  013D8C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20083  013D8E  ECE6  F0DC         	call	_strcpy	;wreg free
 20084                           
 20085                           ;oled.c: 742: strcpy(OLED_RAM_Buffer.line3, " ");
 20086  013D92  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 20087  013D94  0102               	movlb	2	; () banked
 20088  013D96  6F03               	movwf	strcpy@to& (0+255),b
 20089  013D98  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 20090  013D9A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20091  013D9C  0EAA               	movlw	low (STR_56+10)
 20092  013D9E  6F05               	movwf	strcpy@from& (0+255),b
 20093  013DA0  0EFD               	movlw	high (STR_56+10)
 20094  013DA2  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20095  013DA4  ECE6  F0DC         	call	_strcpy	;wreg free
 20096                           
 20097                           ;oled.c: 744: OLED_UpdateFromRAMBuffer();
 20098  013DA8  EC6C  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 20099                           
 20100                           ;oled.c: 745: OLED_Frame = OLED_Load_Energy;
 20101  013DAC  0E0E               	movlw	14
 20102  013DAE  EF4B  F098         	goto	L4
 20103  013DB2                     l22112:
 20104                           
 20105                           ; BSR set to: 2
 20106                           ;oled.c: 752: OLED_update_flag = 0;
 20107  013DB2  0E00               	movlw	0
 20108  013DB4  6FD6               	movwf	_OLED_update_flag& (0+255),b
 20109                           
 20110                           ; BSR set to: 2
 20111                           ;oled.c: 754: strcpy(OLED_RAM_Buffer.line0, "Cause of Reset:");
 20112  013DB6  0E00               	movlw	low _OLED_RAM_Buffer
 20113  013DB8  6F03               	movwf	strcpy@to& (0+255),b
 20114  013DBA  0E03               	movlw	high _OLED_RAM_Buffer
 20115  013DBC  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20116  013DBE  0E72               	movlw	low STR_64
 20117  013DC0  6F05               	movwf	strcpy@from& (0+255),b
 20118  013DC2  0EFB               	movlw	high STR_64
 20119  013DC4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20120  013DC6  ECE6  F0DC         	call	_strcpy	;wreg free
 20121                           
 20122                           ;oled.c: 755: strcpy(OLED_RAM_Buffer.line1, " ");
 20123  013DCA  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 20124  013DCC  0102               	movlb	2	; () banked
 20125  013DCE  6F03               	movwf	strcpy@to& (0+255),b
 20126  013DD0  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 20127  013DD2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20128  013DD4  0EAA               	movlw	low (STR_56+10)
 20129  013DD6  6F05               	movwf	strcpy@from& (0+255),b
 20130  013DD8  0EFD               	movlw	high (STR_56+10)
 20131  013DDA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20132  013DDC  ECE6  F0DC         	call	_strcpy	;wreg free
 20133                           
 20134                           ;oled.c: 756: strcpy(OLED_RAM_Buffer.line2, getCauseOfResetStringSmall(reset_cause));
 20135  013DE0  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 20136  013DE2  0102               	movlb	2	; () banked
 20137  013DE4  6F03               	movwf	strcpy@to& (0+255),b
 20138  013DE6  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 20139  013DE8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20140  013DEA  51FF               	movf	_reset_cause& (0+255),w,b
 20141  013DEC  EC68  F0E0         	call	_getCauseOfResetStringSmall
 20142  013DF0  C200  F205         	movff	?_getCauseOfResetStringSmall,strcpy@from
 20143  013DF4  C201  F206         	movff	?_getCauseOfResetStringSmall+1,strcpy@from+1
 20144  013DF8  ECE6  F0DC         	call	_strcpy	;wreg free
 20145                           
 20146                           ;oled.c: 757: strcpy(OLED_RAM_Buffer.line3, " ");
 20147  013DFC  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 20148  013DFE  0102               	movlb	2	; () banked
 20149  013E00  6F03               	movwf	strcpy@to& (0+255),b
 20150  013E02  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 20151  013E04  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20152  013E06  0EAA               	movlw	low (STR_56+10)
 20153  013E08  6F05               	movwf	strcpy@from& (0+255),b
 20154  013E0A  0EFD               	movlw	high (STR_56+10)
 20155  013E0C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20156  013E0E  ECE6  F0DC         	call	_strcpy	;wreg free
 20157                           
 20158                           ;oled.c: 759: OLED_UpdateFromRAMBuffer();
 20159  013E12  EC6C  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 20160                           
 20161                           ;oled.c: 760: OLED_Frame = OLED_Cause_Of_Reset;
 20162  013E16  0E16               	movlw	22
 20163  013E18                     L5:
 20164  013E18  0102               	movlb	2	; () banked
 20165  013E1A  6FD7               	movwf	_OLED_Frame& (0+255),b
 20166                           
 20167                           ; BSR set to: 2
 20168                           ;oled.c: 761: OLED_update_time = 255;
 20169  013E1C  0100               	movlb	0	; () banked
 20170  013E1E  69FB               	setf	_OLED_update_time& (0+255),b
 20171                           
 20172                           ;oled.c: 763: break;
 20173  013E20  0012               	return	
 20174  013E22                     l22128:
 20175                           
 20176                           ; BSR set to: 2
 20177                           ;oled.c: 767: OLED_update_flag = 0;
 20178  013E22  0E00               	movlw	0
 20179  013E24  6FD6               	movwf	_OLED_update_flag& (0+255),b
 20180                           
 20181                           ; BSR set to: 2
 20182                           ;oled.c: 771: strcpy(OLED_RAM_Buffer.line0, "Device ID:");
 20183  013E26  0E00               	movlw	low _OLED_RAM_Buffer
 20184  013E28  6F03               	movwf	strcpy@to& (0+255),b
 20185  013E2A  0E03               	movlw	high _OLED_RAM_Buffer
 20186  013E2C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20187  013E2E  0EE6               	movlw	low STR_65
 20188  013E30  6F05               	movwf	strcpy@from& (0+255),b
 20189  013E32  0EFD               	movlw	high STR_65
 20190  013E34  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20191  013E36  ECE6  F0DC         	call	_strcpy	;wreg free
 20192                           
 20193                           ;oled.c: 772: char dev_id_str[17];;oled.c: 773: sprintf(dev_id_str,"0x%X",getDeviceID())
      +                          ;
 20194  013E3A  0ED1               	movlw	low OLED_updateHandler@dev_id_str
 20195  013E3C  0102               	movlb	2	; () banked
 20196  013E3E  6F8C               	movwf	sprintf@wh& (0+255),b
 20197  013E40  0E03               	movlw	high OLED_updateHandler@dev_id_str
 20198  013E42  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 20199  013E44  0E9F               	movlw	low STR_66
 20200  013E46  6F8E               	movwf	sprintf@f& (0+255),b
 20201  013E48  0EFF               	movlw	high STR_66
 20202  013E4A  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 20203  013E4C  EC2A  F0E2         	call	_getDeviceID	;wreg free
 20204  013E50  C20B  F290         	movff	?_getDeviceID,?_sprintf+4
 20205  013E54  C20C  F291         	movff	?_getDeviceID+1,?_sprintf+5
 20206  013E58  EC0A  F0DD         	call	_sprintf	;wreg free
 20207                           
 20208                           ;oled.c: 774: strcpy(OLED_RAM_Buffer.line1, dev_id_str);
 20209  013E5C  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 20210  013E5E  0102               	movlb	2	; () banked
 20211  013E60  6F03               	movwf	strcpy@to& (0+255),b
 20212  013E62  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 20213  013E64  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20214  013E66  0ED1               	movlw	low OLED_updateHandler@dev_id_str
 20215  013E68  6F05               	movwf	strcpy@from& (0+255),b
 20216  013E6A  0E03               	movlw	high OLED_updateHandler@dev_id_str
 20217  013E6C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20218  013E6E  ECE6  F0DC         	call	_strcpy	;wreg free
 20219                           
 20220                           ;oled.c: 777: strcpy(OLED_RAM_Buffer.line2, "Revision ID:");
 20221  013E72  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 20222  013E74  0102               	movlb	2	; () banked
 20223  013E76  6F03               	movwf	strcpy@to& (0+255),b
 20224  013E78  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 20225  013E7A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20226  013E7C  0EE1               	movlw	low STR_67
 20227  013E7E  6F05               	movwf	strcpy@from& (0+255),b
 20228  013E80  0EFC               	movlw	high STR_67
 20229  013E82  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20230  013E84  ECE6  F0DC         	call	_strcpy	;wreg free
 20231                           
 20232                           ;oled.c: 778: char rev_id_str[17];;oled.c: 779: sprintf(rev_id_str, "%c%03d", (char) get
      +                          MajorRevisionID() + 65, getMinorRevisionID());
 20233  013E88  0EE2               	movlw	low OLED_updateHandler@rev_id_str
 20234  013E8A  0102               	movlb	2	; () banked
 20235  013E8C  6F8C               	movwf	sprintf@wh& (0+255),b
 20236  013E8E  0E03               	movlw	high OLED_updateHandler@rev_id_str
 20237  013E90  6F8D               	movwf	(sprintf@wh+1)& (0+255),b
 20238  013E92  0E71               	movlw	low STR_68
 20239  013E94  6F8E               	movwf	sprintf@f& (0+255),b
 20240  013E96  0EFF               	movlw	high STR_68
 20241  013E98  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 20242  013E9A  EC40  F0DF         	call	_getMajorRevisionID	;wreg free
 20243  013E9E  0102               	movlb	2	; () banked
 20244  013EA0  6FA9               	movwf	??_OLED_updateHandler& (0+255),b
 20245  013EA2  0E41               	movlw	65
 20246  013EA4  25A9               	addwf	??_OLED_updateHandler& (0+255),w,b
 20247  013EA6  6F90               	movwf	(?_sprintf+4)& (0+255),b
 20248  013EA8  6B91               	clrf	(?_sprintf+5)& (0+255),b
 20249  013EAA  0E00               	movlw	0
 20250  013EAC  2391               	addwfc	(?_sprintf+5)& (0+255),f,b
 20251  013EAE  EC7E  F0E1         	call	_getMinorRevisionID	;wreg free
 20252  013EB2  0102               	movlb	2	; () banked
 20253  013EB4  6FAA               	movwf	(??_OLED_updateHandler+1)& (0+255),b
 20254  013EB6  51AA               	movf	(??_OLED_updateHandler+1)& (0+255),w,b
 20255  013EB8  6F92               	movwf	(?_sprintf+6)& (0+255),b
 20256  013EBA  6B93               	clrf	(?_sprintf+7)& (0+255),b
 20257  013EBC  EC0A  F0DD         	call	_sprintf	;wreg free
 20258                           
 20259                           ;oled.c: 780: strcpy(OLED_RAM_Buffer.line3, rev_id_str);
 20260  013EC0  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 20261  013EC2  0102               	movlb	2	; () banked
 20262  013EC4  6F03               	movwf	strcpy@to& (0+255),b
 20263  013EC6  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 20264  013EC8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20265  013ECA  0EE2               	movlw	low OLED_updateHandler@rev_id_str
 20266  013ECC  6F05               	movwf	strcpy@from& (0+255),b
 20267  013ECE  0E03               	movlw	high OLED_updateHandler@rev_id_str
 20268  013ED0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20269  013ED2  ECE6  F0DC         	call	_strcpy	;wreg free
 20270                           
 20271                           ;oled.c: 782: OLED_UpdateFromRAMBuffer();
 20272  013ED6  EC6C  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 20273                           
 20274                           ;oled.c: 783: OLED_Frame = OLED_Dev_Rev_ID;
 20275  013EDA  0E17               	movlw	23
 20276  013EDC  D79D               	goto	L5
 20277  013EDE                     l22148:
 20278                           
 20279                           ; BSR set to: 2
 20280                           ;oled.c: 790: OLED_update_flag = 0;
 20281  013EDE  0E00               	movlw	0
 20282  013EE0  6FD6               	movwf	_OLED_update_flag& (0+255),b
 20283                           
 20284                           ; BSR set to: 2
 20285                           ;oled.c: 792: strcpy(OLED_RAM_Buffer.line0, "COM Port Setup:");
 20286  013EE2  0E00               	movlw	low _OLED_RAM_Buffer
 20287  013EE4  6F03               	movwf	strcpy@to& (0+255),b
 20288  013EE6  0E03               	movlw	high _OLED_RAM_Buffer
 20289  013EE8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20290  013EEA  0E62               	movlw	low STR_69
 20291  013EEC  6F05               	movwf	strcpy@from& (0+255),b
 20292  013EEE  0EFB               	movlw	high STR_69
 20293  013EF0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20294  013EF2  ECE6  F0DC         	call	_strcpy	;wreg free
 20295                           
 20296                           ;oled.c: 793: strcpy(OLED_RAM_Buffer.line1, "115.2 kbs");
 20297  013EF6  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 20298  013EF8  0102               	movlb	2	; () banked
 20299  013EFA  6F03               	movwf	strcpy@to& (0+255),b
 20300  013EFC  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 20301  013EFE  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20302  013F00  0E74               	movlw	low STR_70
 20303  013F02  6F05               	movwf	strcpy@from& (0+255),b
 20304  013F04  0EFE               	movlw	high STR_70
 20305  013F06  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20306  013F08  ECE6  F0DC         	call	_strcpy	;wreg free
 20307                           
 20308                           ;oled.c: 794: strcpy(OLED_RAM_Buffer.line2, "8bit, no parity");
 20309  013F0C  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 20310  013F0E  0102               	movlb	2	; () banked
 20311  013F10  6F03               	movwf	strcpy@to& (0+255),b
 20312  013F12  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 20313  013F14  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20314  013F16  0E92               	movlw	low STR_71
 20315  013F18  6F05               	movwf	strcpy@from& (0+255),b
 20316  013F1A  0EFB               	movlw	high STR_71
 20317  013F1C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20318  013F1E  ECE6  F0DC         	call	_strcpy	;wreg free
 20319                           
 20320                           ;oled.c: 795: strcpy(OLED_RAM_Buffer.line3, "1 stp, no flow");
 20321  013F22  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 20322  013F24  0102               	movlb	2	; () banked
 20323  013F26  6F03               	movwf	strcpy@to& (0+255),b
 20324  013F28  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 20325  013F2A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20326  013F2C  0EFE               	movlw	low STR_72
 20327  013F2E  6F05               	movwf	strcpy@from& (0+255),b
 20328  013F30  0EFB               	movlw	high STR_72
 20329  013F32  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20330  013F34  ECE6  F0DC         	call	_strcpy	;wreg free
 20331                           
 20332                           ;oled.c: 797: OLED_UpdateFromRAMBuffer();
 20333  013F38  EC6C  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 20334                           
 20335                           ;oled.c: 798: OLED_Frame = OLED_COM_PORT_SET;
 20336  013F3C  0E18               	movlw	24
 20337  013F3E  D76C               	goto	L5
 20338  013F40                     l22164:
 20339                           
 20340                           ; BSR set to: 2
 20341                           ;oled.c: 805: OLED_update_flag = 0;
 20342  013F40  0E00               	movlw	0
 20343  013F42  6FD6               	movwf	_OLED_update_flag& (0+255),b
 20344                           
 20345                           ; BSR set to: 2
 20346                           ;oled.c: 807: strcpy(OLED_RAM_Buffer.line0, "QI Charger w/");
 20347  013F44  0E00               	movlw	low _OLED_RAM_Buffer
 20348  013F46  6F03               	movwf	strcpy@to& (0+255),b
 20349  013F48  0E03               	movlw	high _OLED_RAM_Buffer
 20350  013F4A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20351  013F4C  0E47               	movlw	low STR_62
 20352  013F4E  6F05               	movwf	strcpy@from& (0+255),b
 20353  013F50  0EFC               	movlw	high STR_62
 20354  013F52  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20355  013F54  ECE6  F0DC         	call	_strcpy	;wreg free
 20356                           
 20357                           ;oled.c: 808: strcpy(OLED_RAM_Buffer.line1, "Digital Monitor");
 20358  013F58  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 20359  013F5A  0102               	movlb	2	; () banked
 20360  013F5C  6F03               	movwf	strcpy@to& (0+255),b
 20361  013F5E  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 20362  013F60  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20363  013F62  0E82               	movlw	low STR_63
 20364  013F64  6F05               	movwf	strcpy@from& (0+255),b
 20365  013F66  0EFB               	movlw	high STR_63
 20366  013F68  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20367  013F6A  ECE6  F0DC         	call	_strcpy	;wreg free
 20368                           
 20369                           ;oled.c: 809: strcpy(OLED_RAM_Buffer.line2, "Drew Maatman");
 20370  013F6E  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 20371  013F70  0102               	movlb	2	; () banked
 20372  013F72  6F03               	movwf	strcpy@to& (0+255),b
 20373  013F74  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 20374  013F76  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20375  013F78  0E2F               	movlw	low STR_189
 20376  013F7A  6F05               	movwf	strcpy@from& (0+255),b
 20377  013F7C  0EFD               	movlw	high STR_189
 20378  013F7E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20379  013F80  ECE6  F0DC         	call	_strcpy	;wreg free
 20380                           
 20381                           ;oled.c: 810: strcpy(OLED_RAM_Buffer.line3, "Spring 2019");
 20382  013F84  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 20383  013F86  0102               	movlb	2	; () banked
 20384  013F88  6F03               	movwf	strcpy@to& (0+255),b
 20385  013F8A  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 20386  013F8C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20387  013F8E  0E70               	movlw	low STR_190
 20388  013F90  6F05               	movwf	strcpy@from& (0+255),b
 20389  013F92  0EFD               	movlw	high STR_190
 20390  013F94  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20391  013F96  ECE6  F0DC         	call	_strcpy	;wreg free
 20392                           
 20393                           ;oled.c: 812: OLED_UpdateFromRAMBuffer();
 20394  013F9A  EC6C  F0CE         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 20395                           
 20396                           ;oled.c: 813: OLED_Frame = OLED_TITLE_FRAME;
 20397  013F9E  0E19               	movlw	25
 20398  013FA0  D73B               	goto	L5
 20399  013FA2                     l22180:
 20400                           
 20401                           ; BSR set to: 2
 20402                           ;oled.c: 820: OLED_update_flag = 0;
 20403  013FA2  0E00               	movlw	0
 20404  013FA4  6FD6               	movwf	_OLED_update_flag& (0+255),b
 20405                           
 20406                           ;oled.c: 822: break;
 20407  013FA6  0012               	return	
 20408  013FA8                     l22182:
 20409                           
 20410                           ; BSR set to: 2
 20411                           ;oled.c: 826: OLED_update_flag = 0;
 20412  013FA8  0E00               	movlw	0
 20413  013FAA  6FD6               	movwf	_OLED_update_flag& (0+255),b
 20414                           
 20415                           ;oled.c: 828: error_handler.I2C_OLED_error_flag = 1;
 20416  013FAC  0E01               	movlw	1
 20417  013FAE  0100               	movlb	0	; () banked
 20418  013FB0  6FBC               	movwf	(_error_handler+3)& (0+255),b
 20419                           
 20420                           ;oled.c: 829: break;
 20421  013FB2  0012               	return	
 20422  013FB4                     l22186:
 20423  013FB4  0102               	movlb	2	; () banked
 20424  013FB6  51D7               	movf	_OLED_Frame& (0+255),w,b
 20425                           
 20426                           ; Switch size 1, requested type "simple"
 20427                           ; Number of cases is 27, Range of values is 0 to 26
 20428                           ; switch strategies available:
 20429                           ; Name         Instructions Cycles
 20430                           ; simple_byte           82    42 (average)
 20431                           ;	Chosen strategy is simple_byte
 20432  013FB8  0A00               	xorlw	0	; case 0
 20433  013FBA  B4D8               	btfsc	status,2,c
 20434  013FBC  EF20  F097         	goto	l21696
 20435  013FC0  0A01               	xorlw	1	; case 1
 20436  013FC2  B4D8               	btfsc	status,2,c
 20437  013FC4  EF59  F097         	goto	l21712
 20438  013FC8  0A03               	xorlw	3	; case 2
 20439  013FCA  B4D8               	btfsc	status,2,c
 20440  013FCC  EFB7  F097         	goto	l21732
 20441  013FD0  0A01               	xorlw	1	; case 3
 20442  013FD2  B4D8               	btfsc	status,2,c
 20443  013FD4  EFE8  F097         	goto	l21748
 20444  013FD8  0A07               	xorlw	7	; case 4
 20445  013FDA  B4D8               	btfsc	status,2,c
 20446  013FDC  EF19  F098         	goto	l21764
 20447  013FE0  0A01               	xorlw	1	; case 5
 20448  013FE2  B4D8               	btfsc	status,2,c
 20449  013FE4  EF51  F098         	goto	l21780
 20450  013FE8  0A03               	xorlw	3	; case 6
 20451  013FEA  B4D8               	btfsc	status,2,c
 20452  013FEC  EF8A  F098         	goto	l21796
 20453  013FF0  0A01               	xorlw	1	; case 7
 20454  013FF2  B4D8               	btfsc	status,2,c
 20455  013FF4  EFC3  F098         	goto	l21812
 20456  013FF8  0A0F               	xorlw	15	; case 8
 20457  013FFA  B4D8               	btfsc	status,2,c
 20458  013FFC  EFFC  F098         	goto	l21828
 20459  014000  0A01               	xorlw	1	; case 9
 20460  014002  B4D8               	btfsc	status,2,c
 20461  014004  EF46  F099         	goto	l21848
 20462  014008  0A03               	xorlw	3	; case 10
 20463  01400A  B4D8               	btfsc	status,2,c
 20464  01400C  EF7F  F099         	goto	l21864
 20465  014010  0A01               	xorlw	1	; case 11
 20466  014012  B4D8               	btfsc	status,2,c
 20467  014014  EFC9  F099         	goto	l21884
 20468  014018  0A07               	xorlw	7	; case 12
 20469  01401A  B4D8               	btfsc	status,2,c
 20470  01401C  D518               	goto	l22042
 20471  01401E  0A01               	xorlw	1	; case 13
 20472  014020  B4D8               	btfsc	status,2,c
 20473  014022  D61B               	goto	l22072
 20474  014024  0A03               	xorlw	3	; case 14
 20475  014026  B4D8               	btfsc	status,2,c
 20476  014028  D66E               	goto	l22092
 20477  01402A  0A01               	xorlw	1	; case 15
 20478  01402C  B4D8               	btfsc	status,2,c
 20479  01402E  EF13  F09A         	goto	l21904
 20480  014032  0A1F               	xorlw	31	; case 16
 20481  014034  B4D8               	btfsc	status,2,c
 20482  014036  EF4C  F09A         	goto	l21920
 20483  01403A  0A01               	xorlw	1	; case 17
 20484  01403C  B4D8               	btfsc	status,2,c
 20485  01403E  EF85  F09A         	goto	l21936
 20486  014042  0A03               	xorlw	3	; case 18
 20487  014044  B4D8               	btfsc	status,2,c
 20488  014046  EFBE  F09A         	goto	l21952
 20489  01404A  0A01               	xorlw	1	; case 19
 20490  01404C  B4D8               	btfsc	status,2,c
 20491  01404E  EFF7  F09A         	goto	l21968
 20492  014052  0A07               	xorlw	7	; case 20
 20493  014054  B4D8               	btfsc	status,2,c
 20494  014056  EF3C  F09B         	goto	l21986
 20495  01405A  0A01               	xorlw	1	; case 21
 20496  01405C  B4D8               	btfsc	status,2,c
 20497  01405E  EF93  F09B         	goto	l22008
 20498  014062  0A03               	xorlw	3	; case 22
 20499  014064  B4D8               	btfsc	status,2,c
 20500  014066  D6A5               	goto	l22112
 20501  014068  0A01               	xorlw	1	; case 23
 20502  01406A  B4D8               	btfsc	status,2,c
 20503  01406C  D6DA               	goto	l22128
 20504  01406E  0A0F               	xorlw	15	; case 24
 20505  014070  B4D8               	btfsc	status,2,c
 20506  014072  D735               	goto	l22148
 20507  014074  0A01               	xorlw	1	; case 25
 20508  014076  B4D8               	btfsc	status,2,c
 20509  014078  D763               	goto	l22164
 20510  01407A  0A03               	xorlw	3	; case 26
 20511  01407C  B4D8               	btfsc	status,2,c
 20512  01407E  D791               	goto	l22180
 20513  014080  D793               	goto	l22182
 20514  014082                     __end_of_OLED_updateHandler:
 20515                           	opt callstack 0
 20516                           
 20517 ;; *************** function _strcpy *****************
 20518 ;; Defined at:
 20519 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcpy.c"
 20520 ;; Parameters:    Size  Location     Type
 20521 ;;  to              2    3[BANK2 ] PTR unsigned char 
 20522 ;;		 -> OLED_RAM_Buffer(68), 
 20523 ;;  from            2    5[BANK2 ] PTR const unsigned char 
 20524 ;;		 -> STR_190(12), STR_189(13), STR_188(16), STR_187(14), 
 20525 ;;		 -> STR_186(15), STR_185(16), STR_184(10), STR_183(16), 
 20526 ;;		 -> STR_181(13), STR_179(11), STR_178(2), STR_177(2), 
 20527 ;;		 -> STR_176(16), STR_175(2), STR_174(2), STR_172(13), 
 20528 ;;		 -> STR_171(15), STR_170(2), STR_169(2), STR_167(13), 
 20529 ;;		 -> STR_166(15), STR_165(2), STR_164(2), STR_162(2), 
 20530 ;;		 -> STR_161(2), STR_160(13), STR_159(2), STR_153(13), 
 20531 ;;		 -> STR_152(2), STR_151(2), STR_149(2), STR_137(14), 
 20532 ;;		 -> STR_136(2), STR_135(2), STR_133(11), STR_132(13), 
 20533 ;;		 -> STR_131(2), STR_130(2), STR_129(9), STR_128(11), 
 20534 ;;		 -> STR_127(14), STR_126(2), STR_125(2), STR_123(12), 
 20535 ;;		 -> STR_122(2), STR_121(2), STR_119(14), STR_118(2), 
 20536 ;;		 -> STR_117(2), STR_115(10), STR_114(2), STR_113(2), 
 20537 ;;		 -> STR_111(9), STR_110(2), STR_109(2), STR_107(13), 
 20538 ;;		 -> STR_106(12), STR_105(2), STR_104(2), STR_102(13), 
 20539 ;;		 -> STR_101(14), STR_100(2), STR_99(2), STR_97(13), 
 20540 ;;		 -> STR_96(2), STR_95(2), STR_93(13), STR_92(12), 
 20541 ;;		 -> STR_91(2), STR_90(2), STR_88(14), STR_87(2), 
 20542 ;;		 -> STR_86(2), STR_84(13), STR_83(2), STR_82(2), 
 20543 ;;		 -> STR_80(14), STR_79(2), STR_78(2), STR_77(15), 
 20544 ;;		 -> STR_76(16), STR_75(14), STR_74(11), STR_73(14), 
 20545 ;;		 -> STR_72(15), STR_71(16), STR_70(10), STR_69(16), 
 20546 ;;		 -> OLED_updateHandler@rev_id_str(17), STR_67(13), OLED_updateHandler@dev_id_str(17), STR_65(11), 
 20547 ;;		 -> STR_64(16), STR_63(16), STR_62(14), STR_42(10), 
 20548 ;;		 -> STR_41(11), STR_40(11), STR_39(15), STR_38(11), 
 20549 ;;		 -> STR_37(10), STR_36(11), STR_35(10), STR_34(10), 
 20550 ;;		 -> STR_33(10), STR_22(10), STR_21(6), STR_20(14), 
 20551 ;;		 -> STR_19(9), STR_18(5), 
 20552 ;; Auto vars:     Size  Location     Type
 20553 ;;  cp              2    7[BANK2 ] PTR unsigned char 
 20554 ;;		 -> OLED_RAM_Buffer(68), 
 20555 ;; Return value:  Size  Location     Type
 20556 ;;                  2    3[BANK2 ] PTR unsigned char 
 20557 ;; Registers used:
 20558 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20559 ;; Tracked objects:
 20560 ;;		On entry : 0/0
 20561 ;;		On exit  : 0/0
 20562 ;;		Unchanged: 0/0
 20563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20564 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20565 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20567 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20568 ;;Total ram usage:        6 bytes
 20569 ;; Hardware stack levels used:    1
 20570 ;; Hardware stack levels required when called:   11
 20571 ;; This function calls:
 20572 ;;		Nothing
 20573 ;; This function is called by:
 20574 ;;		_OLED_updateHandler
 20575 ;; This function uses a non-reentrant model
 20576 ;;
 20577                           
 20578                           	psect	text64
 20579  01B9CC                     __ptext64:
 20580                           	opt callstack 0
 20581  01B9CC                     _strcpy:
 20582                           	opt callstack 18
 20583                           
 20584                           ;incstack = 0
 20585  01B9CC  C203  F207         	movff	strcpy@to,strcpy@cp
 20586  01B9D0  C204  F208         	movff	strcpy@to+1,strcpy@cp+1
 20587  01B9D4  D005               	goto	l21286
 20588  01B9D6                     l21284:
 20589  01B9D6  0102               	movlb	2	; () banked
 20590  01B9D8  4B07               	infsnz	strcpy@cp& (0+255),f,b
 20591  01B9DA  2B08               	incf	(strcpy@cp+1)& (0+255),f,b
 20592  01B9DC  4B05               	infsnz	strcpy@from& (0+255),f,b
 20593  01B9DE  2B06               	incf	(strcpy@from+1)& (0+255),f,b
 20594  01B9E0                     l21286:
 20595  01B9E0  C205  FFF6         	movff	strcpy@from,tblptrl
 20596  01B9E4  C206  FFF7         	movff	strcpy@from+1,tblptrh
 20597  01B9E8  0E00               	movlw	low (__mediumconst shr (0+16))
 20598  01B9EA  6EF8               	movwf	tblptru,c
 20599  01B9EC  C207  FFD9         	movff	strcpy@cp,fsr2l
 20600  01B9F0  C208  FFDA         	movff	strcpy@cp+1,fsr2h
 20601  01B9F4  0E0E               	movlw	(high __ramtop+-1)
 20602  01B9F6  64F7               	cpfsgt	tblptrh,c
 20603  01B9F8  D003               	bra	u27287
 20604  01B9FA  0008               	tblrd		*
 20605  01B9FC  50F5               	movf	tablat,w,c
 20606  01B9FE  D005               	bra	u27280
 20607  01BA00                     u27287:
 20608  01BA00  CFF6 FFE9          	movff	tblptrl,fsr0l
 20609  01BA04  CFF7 FFEA          	movff	tblptrh,fsr0h
 20610  01BA08  50EF               	movf	indf0,w,c
 20611  01BA0A                     u27280:
 20612  01BA0A  6EDF               	movwf	indf2,c
 20613  01BA0C  50DF               	movf	indf2,w,c
 20614  01BA0E  B4D8               	btfsc	status,2,c
 20615  01BA10  0012               	return	
 20616  01BA12  D7E1               	goto	l21284
 20617  01BA14                     __end_of_strcpy:
 20618                           	opt callstack 0
 20619                           
 20620 ;; *************** function _getYearsFromOnTime *****************
 20621 ;; Defined at:
 20622 ;;		line 180 in file "heartbeat_timer.c"
 20623 ;; Parameters:    Size  Location     Type
 20624 ;;  input_second    4   13[BANK2 ] unsigned long 
 20625 ;; Auto vars:     Size  Location     Type
 20626 ;;  years           1   17[BANK2 ] unsigned char 
 20627 ;; Return value:  Size  Location     Type
 20628 ;;                  1    wreg      unsigned char 
 20629 ;; Registers used:
 20630 ;;		wreg, status,2, status,0, cstack
 20631 ;; Tracked objects:
 20632 ;;		On entry : 0/0
 20633 ;;		On exit  : 0/0
 20634 ;;		Unchanged: 0/0
 20635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20636 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20637 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20639 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20640 ;;Total ram usage:        5 bytes
 20641 ;; Hardware stack levels used:    1
 20642 ;; Hardware stack levels required when called:   12
 20643 ;; This function calls:
 20644 ;;		___lldiv
 20645 ;; This function is called by:
 20646 ;;		_OLED_updateHandler
 20647 ;; This function uses a non-reentrant model
 20648 ;;
 20649                           
 20650                           	psect	text65
 20651  01C0A0                     __ptext65:
 20652                           	opt callstack 0
 20653  01C0A0                     _getYearsFromOnTime:
 20654                           	opt callstack 17
 20655                           
 20656                           ;heartbeat_timer.c: 182: uint8_t years;;heartbeat_timer.c: 183: return years = input_sec
      +                          onds / (60 * 60 * 24 * 365);
 20657                           
 20658                           ;incstack = 0
 20659  01C0A0  C20D  F200         	movff	getYearsFromOnTime@input_seconds,___lldiv@dividend
 20660  01C0A4  C20E  F201         	movff	getYearsFromOnTime@input_seconds+1,___lldiv@dividend+1
 20661  01C0A8  C20F  F202         	movff	getYearsFromOnTime@input_seconds+2,___lldiv@dividend+2
 20662  01C0AC  C210  F203         	movff	getYearsFromOnTime@input_seconds+3,___lldiv@dividend+3
 20663  01C0B0  0E80               	movlw	128
 20664  01C0B2  0102               	movlb	2	; () banked
 20665  01C0B4  6F04               	movwf	___lldiv@divisor& (0+255),b
 20666  01C0B6  0E33               	movlw	51
 20667  01C0B8  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 20668  01C0BA  0E00               	movlw	0
 20669  01C0BC  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 20670  01C0BE  0E00               	movlw	0
 20671  01C0C0  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 20672  01C0C2  ECFD  F0D7         	call	___lldiv	;wreg free
 20673  01C0C6  0102               	movlb	2	; () banked
 20674  01C0C8  5100               	movf	?___lldiv& (0+255),w,b
 20675  01C0CA  6F11               	movwf	getYearsFromOnTime@years& (0+255),b
 20676  01C0CC  5111               	movf	getYearsFromOnTime@years& (0+255),w,b
 20677                           
 20678                           ; BSR set to: 2
 20679  01C0CE  0012               	return		;funcret
 20680  01C0D0                     __end_of_getYearsFromOnTime:
 20681                           	opt callstack 0
 20682                           
 20683 ;; *************** function _getSecondsFromOnTime *****************
 20684 ;; Defined at:
 20685 ;;		line 224 in file "heartbeat_timer.c"
 20686 ;; Parameters:    Size  Location     Type
 20687 ;;  input_second    4   13[BANK2 ] unsigned long 
 20688 ;; Auto vars:     Size  Location     Type
 20689 ;;  minutes         1   25[BANK2 ] unsigned char 
 20690 ;;  hours           1   24[BANK2 ] unsigned char 
 20691 ;;  days            1   23[BANK2 ] unsigned char 
 20692 ;;  years           1   22[BANK2 ] unsigned char 
 20693 ;;  seconds         1   21[BANK2 ] unsigned char 
 20694 ;; Return value:  Size  Location     Type
 20695 ;;                  1    wreg      unsigned char 
 20696 ;; Registers used:
 20697 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 20698 ;; Tracked objects:
 20699 ;;		On entry : 0/0
 20700 ;;		On exit  : 0/0
 20701 ;;		Unchanged: 0/0
 20702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20703 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20704 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20705 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20706 ;;      Totals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20707 ;;Total ram usage:       13 bytes
 20708 ;; Hardware stack levels used:    1
 20709 ;; Hardware stack levels required when called:   12
 20710 ;; This function calls:
 20711 ;;		___lldiv
 20712 ;;		___wmul
 20713 ;; This function is called by:
 20714 ;;		_OLED_updateHandler
 20715 ;; This function uses a non-reentrant model
 20716 ;;
 20717                           
 20718                           	psect	text66
 20719  0194E4                     __ptext66:
 20720                           	opt callstack 0
 20721  0194E4                     _getSecondsFromOnTime:
 20722                           	opt callstack 17
 20723                           
 20724                           ;heartbeat_timer.c: 226: uint8_t years, days, hours, minutes, seconds;;heartbeat_timer.c
      +                          : 227: years = input_seconds / (60 * 60 * 24 * 365);
 20725                           
 20726                           ; BSR set to: 2
 20727                           ;incstack = 0
 20728  0194E4  C20D  F200         	movff	getSecondsFromOnTime@input_seconds,___lldiv@dividend
 20729  0194E8  C20E  F201         	movff	getSecondsFromOnTime@input_seconds+1,___lldiv@dividend+1
 20730  0194EC  C20F  F202         	movff	getSecondsFromOnTime@input_seconds+2,___lldiv@dividend+2
 20731  0194F0  C210  F203         	movff	getSecondsFromOnTime@input_seconds+3,___lldiv@dividend+3
 20732  0194F4  0E80               	movlw	128
 20733  0194F6  0102               	movlb	2	; () banked
 20734  0194F8  6F04               	movwf	___lldiv@divisor& (0+255),b
 20735  0194FA  0E33               	movlw	51
 20736  0194FC  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 20737  0194FE  0E00               	movlw	0
 20738  019500  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 20739  019502  0E00               	movlw	0
 20740  019504  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 20741  019506  ECFD  F0D7         	call	___lldiv	;wreg free
 20742  01950A  0102               	movlb	2	; () banked
 20743  01950C  5100               	movf	?___lldiv& (0+255),w,b
 20744  01950E  6F16               	movwf	getSecondsFromOnTime@years& (0+255),b
 20745                           
 20746                           ; BSR set to: 2
 20747                           ;heartbeat_timer.c: 228: input_seconds -= years * (60 * 60 * 24 * 365);
 20748  019510  C216  F200         	movff	getSecondsFromOnTime@years,___wmul@multiplier
 20749  019514  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 20750  019516  0E33               	movlw	51
 20751  019518  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20752  01951A  0E80               	movlw	128
 20753  01951C  6F02               	movwf	___wmul@multiplicand& (0+255),b
 20754  01951E  EC2E  F0E1         	call	___wmul	;wreg free
 20755  019522  0102               	movlb	2	; () banked
 20756  019524  C200  F211         	movff	?___wmul,??_getSecondsFromOnTime
 20757  019528  C201  F212         	movff	?___wmul+1,??_getSecondsFromOnTime+1
 20758  01952C  0E00               	movlw	0
 20759  01952E  BF12               	btfsc	(??_getSecondsFromOnTime+1)& (0+255),7,b
 20760  019530  0EFF               	movlw	255
 20761  019532  6F13               	movwf	(??_getSecondsFromOnTime+2)& (0+255),b
 20762  019534  6F14               	movwf	(??_getSecondsFromOnTime+3)& (0+255),b
 20763  019536  5111               	movf	??_getSecondsFromOnTime& (0+255),w,b
 20764  019538  5F0D               	subwf	getSecondsFromOnTime@input_seconds& (0+255),f,b
 20765  01953A  5112               	movf	(??_getSecondsFromOnTime+1)& (0+255),w,b
 20766  01953C  5B0E               	subwfb	(getSecondsFromOnTime@input_seconds+1)& (0+255),f,b
 20767  01953E  5113               	movf	(??_getSecondsFromOnTime+2)& (0+255),w,b
 20768  019540  5B0F               	subwfb	(getSecondsFromOnTime@input_seconds+2)& (0+255),f,b
 20769  019542  5114               	movf	(??_getSecondsFromOnTime+3)& (0+255),w,b
 20770  019544  5B10               	subwfb	(getSecondsFromOnTime@input_seconds+3)& (0+255),f,b
 20771                           
 20772                           ; BSR set to: 2
 20773                           ;heartbeat_timer.c: 229: days = input_seconds / (60 * 60 * 24);
 20774  019546  C20D  F200         	movff	getSecondsFromOnTime@input_seconds,___lldiv@dividend
 20775  01954A  C20E  F201         	movff	getSecondsFromOnTime@input_seconds+1,___lldiv@dividend+1
 20776  01954E  C20F  F202         	movff	getSecondsFromOnTime@input_seconds+2,___lldiv@dividend+2
 20777  019552  C210  F203         	movff	getSecondsFromOnTime@input_seconds+3,___lldiv@dividend+3
 20778  019556  0E80               	movlw	128
 20779  019558  6F04               	movwf	___lldiv@divisor& (0+255),b
 20780  01955A  0E51               	movlw	81
 20781  01955C  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 20782  01955E  0E00               	movlw	0
 20783  019560  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 20784  019562  0E00               	movlw	0
 20785  019564  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 20786  019566  ECFD  F0D7         	call	___lldiv	;wreg free
 20787  01956A  0102               	movlb	2	; () banked
 20788  01956C  5100               	movf	?___lldiv& (0+255),w,b
 20789  01956E  6F17               	movwf	getSecondsFromOnTime@days& (0+255),b
 20790                           
 20791                           ;heartbeat_timer.c: 230: input_seconds -= days * (60 * 60 * 24);
 20792  019570  C217  F200         	movff	getSecondsFromOnTime@days,___wmul@multiplier
 20793  019574  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 20794  019576  0E51               	movlw	81
 20795  019578  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20796  01957A  0E80               	movlw	128
 20797  01957C  6F02               	movwf	___wmul@multiplicand& (0+255),b
 20798  01957E  EC2E  F0E1         	call	___wmul	;wreg free
 20799  019582  0102               	movlb	2	; () banked
 20800  019584  C200  F211         	movff	?___wmul,??_getSecondsFromOnTime
 20801  019588  C201  F212         	movff	?___wmul+1,??_getSecondsFromOnTime+1
 20802  01958C  0E00               	movlw	0
 20803  01958E  BF12               	btfsc	(??_getSecondsFromOnTime+1)& (0+255),7,b
 20804  019590  0EFF               	movlw	255
 20805  019592  6F13               	movwf	(??_getSecondsFromOnTime+2)& (0+255),b
 20806  019594  6F14               	movwf	(??_getSecondsFromOnTime+3)& (0+255),b
 20807  019596  5111               	movf	??_getSecondsFromOnTime& (0+255),w,b
 20808  019598  5F0D               	subwf	getSecondsFromOnTime@input_seconds& (0+255),f,b
 20809  01959A  5112               	movf	(??_getSecondsFromOnTime+1)& (0+255),w,b
 20810  01959C  5B0E               	subwfb	(getSecondsFromOnTime@input_seconds+1)& (0+255),f,b
 20811  01959E  5113               	movf	(??_getSecondsFromOnTime+2)& (0+255),w,b
 20812  0195A0  5B0F               	subwfb	(getSecondsFromOnTime@input_seconds+2)& (0+255),f,b
 20813  0195A2  5114               	movf	(??_getSecondsFromOnTime+3)& (0+255),w,b
 20814  0195A4  5B10               	subwfb	(getSecondsFromOnTime@input_seconds+3)& (0+255),f,b
 20815                           
 20816                           ; BSR set to: 2
 20817                           ;heartbeat_timer.c: 231: hours = input_seconds / (60 * 60);
 20818  0195A6  C20D  F200         	movff	getSecondsFromOnTime@input_seconds,___lldiv@dividend
 20819  0195AA  C20E  F201         	movff	getSecondsFromOnTime@input_seconds+1,___lldiv@dividend+1
 20820  0195AE  C20F  F202         	movff	getSecondsFromOnTime@input_seconds+2,___lldiv@dividend+2
 20821  0195B2  C210  F203         	movff	getSecondsFromOnTime@input_seconds+3,___lldiv@dividend+3
 20822  0195B6  0E10               	movlw	16
 20823  0195B8  6F04               	movwf	___lldiv@divisor& (0+255),b
 20824  0195BA  0E0E               	movlw	14
 20825  0195BC  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 20826  0195BE  0E00               	movlw	0
 20827  0195C0  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 20828  0195C2  0E00               	movlw	0
 20829  0195C4  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 20830  0195C6  ECFD  F0D7         	call	___lldiv	;wreg free
 20831  0195CA  0102               	movlb	2	; () banked
 20832  0195CC  5100               	movf	?___lldiv& (0+255),w,b
 20833  0195CE  6F18               	movwf	getSecondsFromOnTime@hours& (0+255),b
 20834                           
 20835                           ; BSR set to: 2
 20836                           ;heartbeat_timer.c: 232: input_seconds -= hours * (60 * 60);
 20837  0195D0  C218  F200         	movff	getSecondsFromOnTime@hours,___wmul@multiplier
 20838  0195D4  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 20839  0195D6  0E0E               	movlw	14
 20840  0195D8  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20841  0195DA  0E10               	movlw	16
 20842  0195DC  6F02               	movwf	___wmul@multiplicand& (0+255),b
 20843  0195DE  EC2E  F0E1         	call	___wmul	;wreg free
 20844  0195E2  0102               	movlb	2	; () banked
 20845  0195E4  C200  F211         	movff	?___wmul,??_getSecondsFromOnTime
 20846  0195E8  C201  F212         	movff	?___wmul+1,??_getSecondsFromOnTime+1
 20847  0195EC  0E00               	movlw	0
 20848  0195EE  BF12               	btfsc	(??_getSecondsFromOnTime+1)& (0+255),7,b
 20849  0195F0  0EFF               	movlw	255
 20850  0195F2  6F13               	movwf	(??_getSecondsFromOnTime+2)& (0+255),b
 20851  0195F4  6F14               	movwf	(??_getSecondsFromOnTime+3)& (0+255),b
 20852  0195F6  5111               	movf	??_getSecondsFromOnTime& (0+255),w,b
 20853  0195F8  5F0D               	subwf	getSecondsFromOnTime@input_seconds& (0+255),f,b
 20854  0195FA  5112               	movf	(??_getSecondsFromOnTime+1)& (0+255),w,b
 20855  0195FC  5B0E               	subwfb	(getSecondsFromOnTime@input_seconds+1)& (0+255),f,b
 20856  0195FE  5113               	movf	(??_getSecondsFromOnTime+2)& (0+255),w,b
 20857  019600  5B0F               	subwfb	(getSecondsFromOnTime@input_seconds+2)& (0+255),f,b
 20858  019602  5114               	movf	(??_getSecondsFromOnTime+3)& (0+255),w,b
 20859  019604  5B10               	subwfb	(getSecondsFromOnTime@input_seconds+3)& (0+255),f,b
 20860                           
 20861                           ;heartbeat_timer.c: 233: minutes = input_seconds / 60;
 20862  019606  C20D  F200         	movff	getSecondsFromOnTime@input_seconds,___lldiv@dividend
 20863  01960A  C20E  F201         	movff	getSecondsFromOnTime@input_seconds+1,___lldiv@dividend+1
 20864  01960E  C20F  F202         	movff	getSecondsFromOnTime@input_seconds+2,___lldiv@dividend+2
 20865  019612  C210  F203         	movff	getSecondsFromOnTime@input_seconds+3,___lldiv@dividend+3
 20866  019616  0E3C               	movlw	60
 20867  019618  6F04               	movwf	___lldiv@divisor& (0+255),b
 20868  01961A  0E00               	movlw	0
 20869  01961C  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 20870  01961E  0E00               	movlw	0
 20871  019620  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 20872  019622  0E00               	movlw	0
 20873  019624  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 20874  019626  ECFD  F0D7         	call	___lldiv	;wreg free
 20875  01962A  0102               	movlb	2	; () banked
 20876  01962C  5100               	movf	?___lldiv& (0+255),w,b
 20877  01962E  6F19               	movwf	getSecondsFromOnTime@minutes& (0+255),b
 20878                           
 20879                           ; BSR set to: 2
 20880                           ;heartbeat_timer.c: 234: input_seconds -= minutes * 60;
 20881  019630  5119               	movf	getSecondsFromOnTime@minutes& (0+255),w,b
 20882  019632  0D3C               	mullw	60
 20883  019634  CFF3 F211          	movff	prodl,??_getSecondsFromOnTime
 20884  019638  CFF4 F212          	movff	prodh,??_getSecondsFromOnTime+1
 20885  01963C  0E00               	movlw	0
 20886  01963E  BF12               	btfsc	(??_getSecondsFromOnTime+1)& (0+255),7,b
 20887  019640  0EFF               	movlw	255
 20888  019642  6F13               	movwf	(??_getSecondsFromOnTime+2)& (0+255),b
 20889  019644  6F14               	movwf	(??_getSecondsFromOnTime+3)& (0+255),b
 20890  019646  5111               	movf	??_getSecondsFromOnTime& (0+255),w,b
 20891  019648  5F0D               	subwf	getSecondsFromOnTime@input_seconds& (0+255),f,b
 20892  01964A  5112               	movf	(??_getSecondsFromOnTime+1)& (0+255),w,b
 20893  01964C  5B0E               	subwfb	(getSecondsFromOnTime@input_seconds+1)& (0+255),f,b
 20894  01964E  5113               	movf	(??_getSecondsFromOnTime+2)& (0+255),w,b
 20895  019650  5B0F               	subwfb	(getSecondsFromOnTime@input_seconds+2)& (0+255),f,b
 20896  019652  5114               	movf	(??_getSecondsFromOnTime+3)& (0+255),w,b
 20897  019654  5B10               	subwfb	(getSecondsFromOnTime@input_seconds+3)& (0+255),f,b
 20898                           
 20899                           ; BSR set to: 2
 20900                           ;heartbeat_timer.c: 235: return seconds = input_seconds;
 20901  019656  C20D  F215         	movff	getSecondsFromOnTime@input_seconds,getSecondsFromOnTime@seconds
 20902  01965A  5115               	movf	getSecondsFromOnTime@seconds& (0+255),w,b
 20903                           
 20904                           ; BSR set to: 2
 20905  01965C  0012               	return		;funcret
 20906  01965E                     __end_of_getSecondsFromOnTime:
 20907                           	opt callstack 0
 20908                           
 20909 ;; *************** function _getNXQChargeStateStringCaps *****************
 20910 ;; Defined at:
 20911 ;;		line 38 in file "NXQ_charge_state.c"
 20912 ;; Parameters:    Size  Location     Type
 20913 ;;		None
 20914 ;; Auto vars:     Size  Location     Type
 20915 ;;		None
 20916 ;; Return value:  Size  Location     Type
 20917 ;;                  2    0[BANK2 ] PTR unsigned char 
 20918 ;; Registers used:
 20919 ;;		wreg, status,2, status,0
 20920 ;; Tracked objects:
 20921 ;;		On entry : 0/0
 20922 ;;		On exit  : 0/0
 20923 ;;		Unchanged: 0/0
 20924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20925 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20928 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20929 ;;Total ram usage:        2 bytes
 20930 ;; Hardware stack levels used:    1
 20931 ;; Hardware stack levels required when called:   11
 20932 ;; This function calls:
 20933 ;;		Nothing
 20934 ;; This function is called by:
 20935 ;;		_OLED_updateHandler
 20936 ;; This function uses a non-reentrant model
 20937 ;;
 20938                           
 20939                           	psect	text67
 20940  01B58C                     __ptext67:
 20941                           	opt callstack 0
 20942  01B58C                     _getNXQChargeStateStringCaps:
 20943                           	opt callstack 18
 20944                           
 20945                           ;NXQ_charge_state.c: 40: switch (nxq_charge_state) {
 20946                           
 20947                           ; BSR set to: 2
 20948                           ;incstack = 0
 20949  01B58C  D01E               	goto	l21016
 20950  01B58E                     l20984:
 20951                           
 20952                           ; BSR set to: 1
 20953                           ;NXQ_charge_state.c: 43: return "Idle";
 20954  01B58E  0EA9               	movlw	low STR_18
 20955  01B590  0102               	movlb	2	; () banked
 20956  01B592  6F00               	movwf	?_getNXQChargeStateStringCaps& (0+255),b
 20957  01B594  0EFF               	movlw	high STR_18
 20958  01B596  6F01               	movwf	(?_getNXQChargeStateStringCaps+1)& (0+255),b
 20959  01B598  0012               	return	
 20960  01B59A                     l20990:
 20961                           
 20962                           ; BSR set to: 1
 20963                           ;NXQ_charge_state.c: 47: return "Charging";
 20964  01B59A  0E26               	movlw	low (STR_93+4)
 20965  01B59C  0102               	movlb	2	; () banked
 20966  01B59E  6F00               	movwf	?_getNXQChargeStateStringCaps& (0+255),b
 20967  01B5A0  0EFD               	movlw	high (STR_93+4)
 20968  01B5A2  6F01               	movwf	(?_getNXQChargeStateStringCaps+1)& (0+255),b
 20969  01B5A4  0012               	return	
 20970  01B5A6                     l20996:
 20971                           
 20972                           ; BSR set to: 1
 20973                           ;NXQ_charge_state.c: 51: return "Fully Charged";
 20974  01B5A6  0EC5               	movlw	low STR_20
 20975  01B5A8  0102               	movlb	2	; () banked
 20976  01B5AA  6F00               	movwf	?_getNXQChargeStateStringCaps& (0+255),b
 20977  01B5AC  0EFC               	movlw	high STR_20
 20978  01B5AE  6F01               	movwf	(?_getNXQChargeStateStringCaps+1)& (0+255),b
 20979  01B5B0  0012               	return	
 20980  01B5B2                     l21002:
 20981                           
 20982                           ; BSR set to: 1
 20983                           ;NXQ_charge_state.c: 55: return "Error";
 20984  01B5B2  0E84               	movlw	low STR_21
 20985  01B5B4  0102               	movlb	2	; () banked
 20986  01B5B6  6F00               	movwf	?_getNXQChargeStateStringCaps& (0+255),b
 20987  01B5B8  0EFF               	movlw	high STR_21
 20988  01B5BA  6F01               	movwf	(?_getNXQChargeStateStringCaps+1)& (0+255),b
 20989  01B5BC  0012               	return	
 20990  01B5BE                     l21008:
 20991                           
 20992                           ; BSR set to: 1
 20993                           ;NXQ_charge_state.c: 59: return "Undefined";
 20994  01B5BE  0EBA               	movlw	low STR_22
 20995  01B5C0  0102               	movlb	2	; () banked
 20996  01B5C2  6F00               	movwf	?_getNXQChargeStateStringCaps& (0+255),b
 20997  01B5C4  0EFE               	movlw	high STR_22
 20998  01B5C6  6F01               	movwf	(?_getNXQChargeStateStringCaps+1)& (0+255),b
 20999  01B5C8  0012               	return	
 21000  01B5CA                     l21016:
 21001  01B5CA  0101               	movlb	1	; () banked
 21002  01B5CC  5195               	movf	_nxq_charge_state& (0+255),w,b
 21003                           
 21004                           ; Switch size 1, requested type "simple"
 21005                           ; Number of cases is 4, Range of values is 0 to 3
 21006                           ; switch strategies available:
 21007                           ; Name         Instructions Cycles
 21008                           ; simple_byte           13     7 (average)
 21009                           ;	Chosen strategy is simple_byte
 21010  01B5CE  0A00               	xorlw	0	; case 0
 21011  01B5D0  B4D8               	btfsc	status,2,c
 21012  01B5D2  D7DD               	goto	l20984
 21013  01B5D4  0A01               	xorlw	1	; case 1
 21014  01B5D6  B4D8               	btfsc	status,2,c
 21015  01B5D8  D7E0               	goto	l20990
 21016  01B5DA  0A03               	xorlw	3	; case 2
 21017  01B5DC  B4D8               	btfsc	status,2,c
 21018  01B5DE  D7E3               	goto	l20996
 21019  01B5E0  0A01               	xorlw	1	; case 3
 21020  01B5E2  B4D8               	btfsc	status,2,c
 21021  01B5E4  D7E6               	goto	l21002
 21022  01B5E6  D7EB               	goto	l21008
 21023  01B5E8                     __end_of_getNXQChargeStateStringCaps:
 21024                           	opt callstack 0
 21025                           
 21026 ;; *************** function _getMinutesFromOnTime *****************
 21027 ;; Defined at:
 21028 ;;		line 210 in file "heartbeat_timer.c"
 21029 ;; Parameters:    Size  Location     Type
 21030 ;;  input_second    4   13[BANK2 ] unsigned long 
 21031 ;; Auto vars:     Size  Location     Type
 21032 ;;  hours           1   24[BANK2 ] unsigned char 
 21033 ;;  days            1   23[BANK2 ] unsigned char 
 21034 ;;  years           1   22[BANK2 ] unsigned char 
 21035 ;;  minutes         1   21[BANK2 ] unsigned char 
 21036 ;; Return value:  Size  Location     Type
 21037 ;;                  1    wreg      unsigned char 
 21038 ;; Registers used:
 21039 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 21040 ;; Tracked objects:
 21041 ;;		On entry : 0/0
 21042 ;;		On exit  : 0/0
 21043 ;;		Unchanged: 0/0
 21044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21045 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21046 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21047 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21048 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21049 ;;Total ram usage:       12 bytes
 21050 ;; Hardware stack levels used:    1
 21051 ;; Hardware stack levels required when called:   12
 21052 ;; This function calls:
 21053 ;;		___lldiv
 21054 ;;		___wmul
 21055 ;; This function is called by:
 21056 ;;		_OLED_updateHandler
 21057 ;; This function uses a non-reentrant model
 21058 ;;
 21059                           
 21060                           	psect	text68
 21061  0197C0                     __ptext68:
 21062                           	opt callstack 0
 21063  0197C0                     _getMinutesFromOnTime:
 21064                           	opt callstack 17
 21065                           
 21066                           ;heartbeat_timer.c: 212: uint8_t years, days, hours, minutes;;heartbeat_timer.c: 213: ye
      +                          ars = input_seconds / (60 * 60 * 24 * 365);
 21067                           
 21068                           ; BSR set to: 2
 21069                           ;incstack = 0
 21070  0197C0  C20D  F200         	movff	getMinutesFromOnTime@input_seconds,___lldiv@dividend
 21071  0197C4  C20E  F201         	movff	getMinutesFromOnTime@input_seconds+1,___lldiv@dividend+1
 21072  0197C8  C20F  F202         	movff	getMinutesFromOnTime@input_seconds+2,___lldiv@dividend+2
 21073  0197CC  C210  F203         	movff	getMinutesFromOnTime@input_seconds+3,___lldiv@dividend+3
 21074  0197D0  0E80               	movlw	128
 21075  0197D2  0102               	movlb	2	; () banked
 21076  0197D4  6F04               	movwf	___lldiv@divisor& (0+255),b
 21077  0197D6  0E33               	movlw	51
 21078  0197D8  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21079  0197DA  0E00               	movlw	0
 21080  0197DC  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21081  0197DE  0E00               	movlw	0
 21082  0197E0  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21083  0197E2  ECFD  F0D7         	call	___lldiv	;wreg free
 21084  0197E6  0102               	movlb	2	; () banked
 21085  0197E8  5100               	movf	?___lldiv& (0+255),w,b
 21086  0197EA  6F16               	movwf	getMinutesFromOnTime@years& (0+255),b
 21087                           
 21088                           ; BSR set to: 2
 21089                           ;heartbeat_timer.c: 214: input_seconds -= years * (60 * 60 * 24 * 365);
 21090  0197EC  C216  F200         	movff	getMinutesFromOnTime@years,___wmul@multiplier
 21091  0197F0  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 21092  0197F2  0E33               	movlw	51
 21093  0197F4  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21094  0197F6  0E80               	movlw	128
 21095  0197F8  6F02               	movwf	___wmul@multiplicand& (0+255),b
 21096  0197FA  EC2E  F0E1         	call	___wmul	;wreg free
 21097  0197FE  0102               	movlb	2	; () banked
 21098  019800  C200  F211         	movff	?___wmul,??_getMinutesFromOnTime
 21099  019804  C201  F212         	movff	?___wmul+1,??_getMinutesFromOnTime+1
 21100  019808  0E00               	movlw	0
 21101  01980A  BF12               	btfsc	(??_getMinutesFromOnTime+1)& (0+255),7,b
 21102  01980C  0EFF               	movlw	255
 21103  01980E  6F13               	movwf	(??_getMinutesFromOnTime+2)& (0+255),b
 21104  019810  6F14               	movwf	(??_getMinutesFromOnTime+3)& (0+255),b
 21105  019812  5111               	movf	??_getMinutesFromOnTime& (0+255),w,b
 21106  019814  5F0D               	subwf	getMinutesFromOnTime@input_seconds& (0+255),f,b
 21107  019816  5112               	movf	(??_getMinutesFromOnTime+1)& (0+255),w,b
 21108  019818  5B0E               	subwfb	(getMinutesFromOnTime@input_seconds+1)& (0+255),f,b
 21109  01981A  5113               	movf	(??_getMinutesFromOnTime+2)& (0+255),w,b
 21110  01981C  5B0F               	subwfb	(getMinutesFromOnTime@input_seconds+2)& (0+255),f,b
 21111  01981E  5114               	movf	(??_getMinutesFromOnTime+3)& (0+255),w,b
 21112  019820  5B10               	subwfb	(getMinutesFromOnTime@input_seconds+3)& (0+255),f,b
 21113                           
 21114                           ; BSR set to: 2
 21115                           ;heartbeat_timer.c: 215: days = input_seconds / (60 * 60 * 24);
 21116  019822  C20D  F200         	movff	getMinutesFromOnTime@input_seconds,___lldiv@dividend
 21117  019826  C20E  F201         	movff	getMinutesFromOnTime@input_seconds+1,___lldiv@dividend+1
 21118  01982A  C20F  F202         	movff	getMinutesFromOnTime@input_seconds+2,___lldiv@dividend+2
 21119  01982E  C210  F203         	movff	getMinutesFromOnTime@input_seconds+3,___lldiv@dividend+3
 21120  019832  0E80               	movlw	128
 21121  019834  6F04               	movwf	___lldiv@divisor& (0+255),b
 21122  019836  0E51               	movlw	81
 21123  019838  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21124  01983A  0E00               	movlw	0
 21125  01983C  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21126  01983E  0E00               	movlw	0
 21127  019840  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21128  019842  ECFD  F0D7         	call	___lldiv	;wreg free
 21129  019846  0102               	movlb	2	; () banked
 21130  019848  5100               	movf	?___lldiv& (0+255),w,b
 21131  01984A  6F17               	movwf	getMinutesFromOnTime@days& (0+255),b
 21132                           
 21133                           ;heartbeat_timer.c: 216: input_seconds -= days * (60 * 60 * 24);
 21134  01984C  C217  F200         	movff	getMinutesFromOnTime@days,___wmul@multiplier
 21135  019850  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 21136  019852  0E51               	movlw	81
 21137  019854  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21138  019856  0E80               	movlw	128
 21139  019858  6F02               	movwf	___wmul@multiplicand& (0+255),b
 21140  01985A  EC2E  F0E1         	call	___wmul	;wreg free
 21141  01985E  0102               	movlb	2	; () banked
 21142  019860  C200  F211         	movff	?___wmul,??_getMinutesFromOnTime
 21143  019864  C201  F212         	movff	?___wmul+1,??_getMinutesFromOnTime+1
 21144  019868  0E00               	movlw	0
 21145  01986A  BF12               	btfsc	(??_getMinutesFromOnTime+1)& (0+255),7,b
 21146  01986C  0EFF               	movlw	255
 21147  01986E  6F13               	movwf	(??_getMinutesFromOnTime+2)& (0+255),b
 21148  019870  6F14               	movwf	(??_getMinutesFromOnTime+3)& (0+255),b
 21149  019872  5111               	movf	??_getMinutesFromOnTime& (0+255),w,b
 21150  019874  5F0D               	subwf	getMinutesFromOnTime@input_seconds& (0+255),f,b
 21151  019876  5112               	movf	(??_getMinutesFromOnTime+1)& (0+255),w,b
 21152  019878  5B0E               	subwfb	(getMinutesFromOnTime@input_seconds+1)& (0+255),f,b
 21153  01987A  5113               	movf	(??_getMinutesFromOnTime+2)& (0+255),w,b
 21154  01987C  5B0F               	subwfb	(getMinutesFromOnTime@input_seconds+2)& (0+255),f,b
 21155  01987E  5114               	movf	(??_getMinutesFromOnTime+3)& (0+255),w,b
 21156  019880  5B10               	subwfb	(getMinutesFromOnTime@input_seconds+3)& (0+255),f,b
 21157                           
 21158                           ; BSR set to: 2
 21159                           ;heartbeat_timer.c: 217: hours = input_seconds / (60 * 60);
 21160  019882  C20D  F200         	movff	getMinutesFromOnTime@input_seconds,___lldiv@dividend
 21161  019886  C20E  F201         	movff	getMinutesFromOnTime@input_seconds+1,___lldiv@dividend+1
 21162  01988A  C20F  F202         	movff	getMinutesFromOnTime@input_seconds+2,___lldiv@dividend+2
 21163  01988E  C210  F203         	movff	getMinutesFromOnTime@input_seconds+3,___lldiv@dividend+3
 21164  019892  0E10               	movlw	16
 21165  019894  6F04               	movwf	___lldiv@divisor& (0+255),b
 21166  019896  0E0E               	movlw	14
 21167  019898  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21168  01989A  0E00               	movlw	0
 21169  01989C  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21170  01989E  0E00               	movlw	0
 21171  0198A0  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21172  0198A2  ECFD  F0D7         	call	___lldiv	;wreg free
 21173  0198A6  0102               	movlb	2	; () banked
 21174  0198A8  5100               	movf	?___lldiv& (0+255),w,b
 21175  0198AA  6F18               	movwf	getMinutesFromOnTime@hours& (0+255),b
 21176                           
 21177                           ; BSR set to: 2
 21178                           ;heartbeat_timer.c: 218: input_seconds -= hours * (60 * 60);
 21179  0198AC  C218  F200         	movff	getMinutesFromOnTime@hours,___wmul@multiplier
 21180  0198B0  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 21181  0198B2  0E0E               	movlw	14
 21182  0198B4  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21183  0198B6  0E10               	movlw	16
 21184  0198B8  6F02               	movwf	___wmul@multiplicand& (0+255),b
 21185  0198BA  EC2E  F0E1         	call	___wmul	;wreg free
 21186  0198BE  0102               	movlb	2	; () banked
 21187  0198C0  C200  F211         	movff	?___wmul,??_getMinutesFromOnTime
 21188  0198C4  C201  F212         	movff	?___wmul+1,??_getMinutesFromOnTime+1
 21189  0198C8  0E00               	movlw	0
 21190  0198CA  BF12               	btfsc	(??_getMinutesFromOnTime+1)& (0+255),7,b
 21191  0198CC  0EFF               	movlw	255
 21192  0198CE  6F13               	movwf	(??_getMinutesFromOnTime+2)& (0+255),b
 21193  0198D0  6F14               	movwf	(??_getMinutesFromOnTime+3)& (0+255),b
 21194  0198D2  5111               	movf	??_getMinutesFromOnTime& (0+255),w,b
 21195  0198D4  5F0D               	subwf	getMinutesFromOnTime@input_seconds& (0+255),f,b
 21196  0198D6  5112               	movf	(??_getMinutesFromOnTime+1)& (0+255),w,b
 21197  0198D8  5B0E               	subwfb	(getMinutesFromOnTime@input_seconds+1)& (0+255),f,b
 21198  0198DA  5113               	movf	(??_getMinutesFromOnTime+2)& (0+255),w,b
 21199  0198DC  5B0F               	subwfb	(getMinutesFromOnTime@input_seconds+2)& (0+255),f,b
 21200  0198DE  5114               	movf	(??_getMinutesFromOnTime+3)& (0+255),w,b
 21201  0198E0  5B10               	subwfb	(getMinutesFromOnTime@input_seconds+3)& (0+255),f,b
 21202                           
 21203                           ;heartbeat_timer.c: 219: return minutes = input_seconds / 60;
 21204  0198E2  C20D  F200         	movff	getMinutesFromOnTime@input_seconds,___lldiv@dividend
 21205  0198E6  C20E  F201         	movff	getMinutesFromOnTime@input_seconds+1,___lldiv@dividend+1
 21206  0198EA  C20F  F202         	movff	getMinutesFromOnTime@input_seconds+2,___lldiv@dividend+2
 21207  0198EE  C210  F203         	movff	getMinutesFromOnTime@input_seconds+3,___lldiv@dividend+3
 21208  0198F2  0E3C               	movlw	60
 21209  0198F4  6F04               	movwf	___lldiv@divisor& (0+255),b
 21210  0198F6  0E00               	movlw	0
 21211  0198F8  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21212  0198FA  0E00               	movlw	0
 21213  0198FC  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21214  0198FE  0E00               	movlw	0
 21215  019900  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21216  019902  ECFD  F0D7         	call	___lldiv	;wreg free
 21217  019906  0102               	movlb	2	; () banked
 21218  019908  5100               	movf	?___lldiv& (0+255),w,b
 21219  01990A  6F15               	movwf	getMinutesFromOnTime@minutes& (0+255),b
 21220  01990C  5115               	movf	getMinutesFromOnTime@minutes& (0+255),w,b
 21221                           
 21222                           ; BSR set to: 2
 21223  01990E  0012               	return		;funcret
 21224  019910                     __end_of_getMinutesFromOnTime:
 21225                           	opt callstack 0
 21226                           
 21227 ;; *************** function _getMinorRevisionID *****************
 21228 ;; Defined at:
 21229 ;;		line 23 in file "device_IDs.c"
 21230 ;; Parameters:    Size  Location     Type
 21231 ;;		None
 21232 ;; Auto vars:     Size  Location     Type
 21233 ;;  REVID_RAW       2   11[BANK2 ] unsigned int 
 21234 ;; Return value:  Size  Location     Type
 21235 ;;                  1    wreg      unsigned char 
 21236 ;; Registers used:
 21237 ;;		wreg, status,2, status,0, cstack
 21238 ;; Tracked objects:
 21239 ;;		On entry : 0/0
 21240 ;;		On exit  : 0/0
 21241 ;;		Unchanged: 0/0
 21242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21244 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21246 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21247 ;;Total ram usage:        2 bytes
 21248 ;; Hardware stack levels used:    1
 21249 ;; Hardware stack levels required when called:   13
 21250 ;; This function calls:
 21251 ;;		_FLASH_ReadWord
 21252 ;; This function is called by:
 21253 ;;		_OLED_updateHandler
 21254 ;;		_ringBufferLUT
 21255 ;; This function uses a non-reentrant model
 21256 ;;
 21257                           
 21258                           	psect	text69
 21259  01C2FC                     __ptext69:
 21260                           	opt callstack 0
 21261  01C2FC                     _getMinorRevisionID:
 21262                           	opt callstack 15
 21263                           
 21264                           ;device_IDs.c: 26: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 21265                           
 21266                           ; BSR set to: 2
 21267                           ;incstack = 0
 21268  01C2FC  0EFC               	movlw	252
 21269  01C2FE  0102               	movlb	2	; () banked
 21270  01C300  6F04               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 21271  01C302  0EFF               	movlw	255
 21272  01C304  6F05               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 21273  01C306  0E3F               	movlw	63
 21274  01C308  6F06               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 21275  01C30A  0E00               	movlw	0
 21276  01C30C  6F07               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 21277  01C30E  EC45  F0DE         	call	_FLASH_ReadWord	;wreg free
 21278  01C312  C204  F20B         	movff	?_FLASH_ReadWord,getMinorRevisionID@REVID_RAW
 21279  01C316  C205  F20C         	movff	?_FLASH_ReadWord+1,getMinorRevisionID@REVID_RAW+1
 21280                           
 21281                           ;device_IDs.c: 29: return REVID_RAW & 0b11111;
 21282  01C31A  0102               	movlb	2	; () banked
 21283  01C31C  510B               	movf	getMinorRevisionID@REVID_RAW& (0+255),w,b
 21284  01C31E  0B1F               	andlw	31
 21285                           
 21286                           ; BSR set to: 2
 21287  01C320  0012               	return		;funcret
 21288  01C322                     __end_of_getMinorRevisionID:
 21289                           	opt callstack 0
 21290                           
 21291 ;; *************** function _getMajorRevisionID *****************
 21292 ;; Defined at:
 21293 ;;		line 12 in file "device_IDs.c"
 21294 ;; Parameters:    Size  Location     Type
 21295 ;;		None
 21296 ;; Auto vars:     Size  Location     Type
 21297 ;;  REVID_RAW       2   14[BANK2 ] unsigned int 
 21298 ;; Return value:  Size  Location     Type
 21299 ;;                  1    wreg      unsigned char 
 21300 ;; Registers used:
 21301 ;;		wreg, status,2, status,0, cstack
 21302 ;; Tracked objects:
 21303 ;;		On entry : 0/0
 21304 ;;		On exit  : 0/0
 21305 ;;		Unchanged: 0/0
 21306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21308 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21309 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21310 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21311 ;;Total ram usage:        5 bytes
 21312 ;; Hardware stack levels used:    1
 21313 ;; Hardware stack levels required when called:   13
 21314 ;; This function calls:
 21315 ;;		_FLASH_ReadWord
 21316 ;; This function is called by:
 21317 ;;		_OLED_updateHandler
 21318 ;;		_ringBufferLUT
 21319 ;; This function uses a non-reentrant model
 21320 ;;
 21321                           
 21322                           	psect	text70
 21323  01BE80                     __ptext70:
 21324                           	opt callstack 0
 21325  01BE80                     _getMajorRevisionID:
 21326                           	opt callstack 15
 21327                           
 21328                           ;device_IDs.c: 15: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 21329                           
 21330                           ; BSR set to: 2
 21331                           ;incstack = 0
 21332  01BE80  0EFC               	movlw	252
 21333  01BE82  0102               	movlb	2	; () banked
 21334  01BE84  6F04               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 21335  01BE86  0EFF               	movlw	255
 21336  01BE88  6F05               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 21337  01BE8A  0E3F               	movlw	63
 21338  01BE8C  6F06               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 21339  01BE8E  0E00               	movlw	0
 21340  01BE90  6F07               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 21341  01BE92  EC45  F0DE         	call	_FLASH_ReadWord	;wreg free
 21342  01BE96  C204  F20E         	movff	?_FLASH_ReadWord,getMajorRevisionID@REVID_RAW
 21343  01BE9A  C205  F20F         	movff	?_FLASH_ReadWord+1,getMajorRevisionID@REVID_RAW+1
 21344                           
 21345                           ;device_IDs.c: 18: return (REVID_RAW >> 6) & 0b11111;
 21346  01BE9E  C20E  F20B         	movff	getMajorRevisionID@REVID_RAW,??_getMajorRevisionID
 21347  01BEA2  C20F  F20C         	movff	getMajorRevisionID@REVID_RAW+1,??_getMajorRevisionID+1
 21348  01BEA6  0E06               	movlw	6
 21349  01BEA8  0102               	movlb	2	; () banked
 21350  01BEAA  6F0D               	movwf	(??_getMajorRevisionID+2)& (0+255),b
 21351  01BEAC                     u25425:
 21352  01BEAC  90D8               	bcf	status,0,c
 21353  01BEAE  330C               	rrcf	(??_getMajorRevisionID+1)& (0+255),f,b
 21354  01BEB0  330B               	rrcf	??_getMajorRevisionID& (0+255),f,b
 21355  01BEB2  2F0D               	decfsz	(??_getMajorRevisionID+2)& (0+255),f,b
 21356  01BEB4  D7FB               	goto	u25425
 21357  01BEB6  510B               	movf	??_getMajorRevisionID& (0+255),w,b
 21358  01BEB8  0B1F               	andlw	31
 21359                           
 21360                           ; BSR set to: 2
 21361  01BEBA  0012               	return		;funcret
 21362  01BEBC                     __end_of_getMajorRevisionID:
 21363                           	opt callstack 0
 21364                           
 21365 ;; *************** function _getHoursFromOnTime *****************
 21366 ;; Defined at:
 21367 ;;		line 198 in file "heartbeat_timer.c"
 21368 ;; Parameters:    Size  Location     Type
 21369 ;;  input_second    4   13[BANK2 ] unsigned long 
 21370 ;; Auto vars:     Size  Location     Type
 21371 ;;  days            1   23[BANK2 ] unsigned char 
 21372 ;;  years           1   22[BANK2 ] unsigned char 
 21373 ;;  hours           1   21[BANK2 ] unsigned char 
 21374 ;; Return value:  Size  Location     Type
 21375 ;;                  1    wreg      unsigned char 
 21376 ;; Registers used:
 21377 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 21378 ;; Tracked objects:
 21379 ;;		On entry : 0/0
 21380 ;;		On exit  : 0/0
 21381 ;;		Unchanged: 0/0
 21382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21383 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21384 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21385 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21386 ;;      Totals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21387 ;;Total ram usage:       11 bytes
 21388 ;; Hardware stack levels used:    1
 21389 ;; Hardware stack levels required when called:   12
 21390 ;; This function calls:
 21391 ;;		___lldiv
 21392 ;;		___wmul
 21393 ;; This function is called by:
 21394 ;;		_OLED_updateHandler
 21395 ;; This function uses a non-reentrant model
 21396 ;;
 21397                           
 21398                           	psect	text71
 21399  01A2D6                     __ptext71:
 21400                           	opt callstack 0
 21401  01A2D6                     _getHoursFromOnTime:
 21402                           	opt callstack 17
 21403                           
 21404                           ;heartbeat_timer.c: 200: uint8_t years, days, hours;;heartbeat_timer.c: 201: years = inp
      +                          ut_seconds / (60 * 60 * 24 * 365);
 21405                           
 21406                           ; BSR set to: 2
 21407                           ;incstack = 0
 21408  01A2D6  C20D  F200         	movff	getHoursFromOnTime@input_seconds,___lldiv@dividend
 21409  01A2DA  C20E  F201         	movff	getHoursFromOnTime@input_seconds+1,___lldiv@dividend+1
 21410  01A2DE  C20F  F202         	movff	getHoursFromOnTime@input_seconds+2,___lldiv@dividend+2
 21411  01A2E2  C210  F203         	movff	getHoursFromOnTime@input_seconds+3,___lldiv@dividend+3
 21412  01A2E6  0E80               	movlw	128
 21413  01A2E8  0102               	movlb	2	; () banked
 21414  01A2EA  6F04               	movwf	___lldiv@divisor& (0+255),b
 21415  01A2EC  0E33               	movlw	51
 21416  01A2EE  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21417  01A2F0  0E00               	movlw	0
 21418  01A2F2  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21419  01A2F4  0E00               	movlw	0
 21420  01A2F6  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21421  01A2F8  ECFD  F0D7         	call	___lldiv	;wreg free
 21422  01A2FC  0102               	movlb	2	; () banked
 21423  01A2FE  5100               	movf	?___lldiv& (0+255),w,b
 21424  01A300  6F16               	movwf	getHoursFromOnTime@years& (0+255),b
 21425                           
 21426                           ; BSR set to: 2
 21427                           ;heartbeat_timer.c: 202: input_seconds -= years * (60 * 60 * 24 * 365);
 21428  01A302  C216  F200         	movff	getHoursFromOnTime@years,___wmul@multiplier
 21429  01A306  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 21430  01A308  0E33               	movlw	51
 21431  01A30A  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21432  01A30C  0E80               	movlw	128
 21433  01A30E  6F02               	movwf	___wmul@multiplicand& (0+255),b
 21434  01A310  EC2E  F0E1         	call	___wmul	;wreg free
 21435  01A314  0102               	movlb	2	; () banked
 21436  01A316  C200  F211         	movff	?___wmul,??_getHoursFromOnTime
 21437  01A31A  C201  F212         	movff	?___wmul+1,??_getHoursFromOnTime+1
 21438  01A31E  0E00               	movlw	0
 21439  01A320  BF12               	btfsc	(??_getHoursFromOnTime+1)& (0+255),7,b
 21440  01A322  0EFF               	movlw	255
 21441  01A324  6F13               	movwf	(??_getHoursFromOnTime+2)& (0+255),b
 21442  01A326  6F14               	movwf	(??_getHoursFromOnTime+3)& (0+255),b
 21443  01A328  5111               	movf	??_getHoursFromOnTime& (0+255),w,b
 21444  01A32A  5F0D               	subwf	getHoursFromOnTime@input_seconds& (0+255),f,b
 21445  01A32C  5112               	movf	(??_getHoursFromOnTime+1)& (0+255),w,b
 21446  01A32E  5B0E               	subwfb	(getHoursFromOnTime@input_seconds+1)& (0+255),f,b
 21447  01A330  5113               	movf	(??_getHoursFromOnTime+2)& (0+255),w,b
 21448  01A332  5B0F               	subwfb	(getHoursFromOnTime@input_seconds+2)& (0+255),f,b
 21449  01A334  5114               	movf	(??_getHoursFromOnTime+3)& (0+255),w,b
 21450  01A336  5B10               	subwfb	(getHoursFromOnTime@input_seconds+3)& (0+255),f,b
 21451                           
 21452                           ; BSR set to: 2
 21453                           ;heartbeat_timer.c: 203: days = input_seconds / (60 * 60 * 24);
 21454  01A338  C20D  F200         	movff	getHoursFromOnTime@input_seconds,___lldiv@dividend
 21455  01A33C  C20E  F201         	movff	getHoursFromOnTime@input_seconds+1,___lldiv@dividend+1
 21456  01A340  C20F  F202         	movff	getHoursFromOnTime@input_seconds+2,___lldiv@dividend+2
 21457  01A344  C210  F203         	movff	getHoursFromOnTime@input_seconds+3,___lldiv@dividend+3
 21458  01A348  0E80               	movlw	128
 21459  01A34A  6F04               	movwf	___lldiv@divisor& (0+255),b
 21460  01A34C  0E51               	movlw	81
 21461  01A34E  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21462  01A350  0E00               	movlw	0
 21463  01A352  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21464  01A354  0E00               	movlw	0
 21465  01A356  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21466  01A358  ECFD  F0D7         	call	___lldiv	;wreg free
 21467  01A35C  0102               	movlb	2	; () banked
 21468  01A35E  5100               	movf	?___lldiv& (0+255),w,b
 21469  01A360  6F17               	movwf	getHoursFromOnTime@days& (0+255),b
 21470                           
 21471                           ;heartbeat_timer.c: 204: input_seconds -= days * (60 * 60 * 24);
 21472  01A362  C217  F200         	movff	getHoursFromOnTime@days,___wmul@multiplier
 21473  01A366  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 21474  01A368  0E51               	movlw	81
 21475  01A36A  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21476  01A36C  0E80               	movlw	128
 21477  01A36E  6F02               	movwf	___wmul@multiplicand& (0+255),b
 21478  01A370  EC2E  F0E1         	call	___wmul	;wreg free
 21479  01A374  0102               	movlb	2	; () banked
 21480  01A376  C200  F211         	movff	?___wmul,??_getHoursFromOnTime
 21481  01A37A  C201  F212         	movff	?___wmul+1,??_getHoursFromOnTime+1
 21482  01A37E  0E00               	movlw	0
 21483  01A380  BF12               	btfsc	(??_getHoursFromOnTime+1)& (0+255),7,b
 21484  01A382  0EFF               	movlw	255
 21485  01A384  6F13               	movwf	(??_getHoursFromOnTime+2)& (0+255),b
 21486  01A386  6F14               	movwf	(??_getHoursFromOnTime+3)& (0+255),b
 21487  01A388  5111               	movf	??_getHoursFromOnTime& (0+255),w,b
 21488  01A38A  5F0D               	subwf	getHoursFromOnTime@input_seconds& (0+255),f,b
 21489  01A38C  5112               	movf	(??_getHoursFromOnTime+1)& (0+255),w,b
 21490  01A38E  5B0E               	subwfb	(getHoursFromOnTime@input_seconds+1)& (0+255),f,b
 21491  01A390  5113               	movf	(??_getHoursFromOnTime+2)& (0+255),w,b
 21492  01A392  5B0F               	subwfb	(getHoursFromOnTime@input_seconds+2)& (0+255),f,b
 21493  01A394  5114               	movf	(??_getHoursFromOnTime+3)& (0+255),w,b
 21494  01A396  5B10               	subwfb	(getHoursFromOnTime@input_seconds+3)& (0+255),f,b
 21495                           
 21496                           ; BSR set to: 2
 21497                           ;heartbeat_timer.c: 205: return hours = input_seconds / (60 * 60);
 21498  01A398  C20D  F200         	movff	getHoursFromOnTime@input_seconds,___lldiv@dividend
 21499  01A39C  C20E  F201         	movff	getHoursFromOnTime@input_seconds+1,___lldiv@dividend+1
 21500  01A3A0  C20F  F202         	movff	getHoursFromOnTime@input_seconds+2,___lldiv@dividend+2
 21501  01A3A4  C210  F203         	movff	getHoursFromOnTime@input_seconds+3,___lldiv@dividend+3
 21502  01A3A8  0E10               	movlw	16
 21503  01A3AA  6F04               	movwf	___lldiv@divisor& (0+255),b
 21504  01A3AC  0E0E               	movlw	14
 21505  01A3AE  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21506  01A3B0  0E00               	movlw	0
 21507  01A3B2  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21508  01A3B4  0E00               	movlw	0
 21509  01A3B6  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21510  01A3B8  ECFD  F0D7         	call	___lldiv	;wreg free
 21511  01A3BC  0102               	movlb	2	; () banked
 21512  01A3BE  5100               	movf	?___lldiv& (0+255),w,b
 21513  01A3C0  6F15               	movwf	getHoursFromOnTime@hours& (0+255),b
 21514  01A3C2  5115               	movf	getHoursFromOnTime@hours& (0+255),w,b
 21515                           
 21516                           ; BSR set to: 2
 21517  01A3C4  0012               	return		;funcret
 21518  01A3C6                     __end_of_getHoursFromOnTime:
 21519                           	opt callstack 0
 21520                           
 21521 ;; *************** function _getDeviceID *****************
 21522 ;; Defined at:
 21523 ;;		line 4 in file "device_IDs.c"
 21524 ;; Parameters:    Size  Location     Type
 21525 ;;		None
 21526 ;; Auto vars:     Size  Location     Type
 21527 ;;		None
 21528 ;; Return value:  Size  Location     Type
 21529 ;;                  2   11[BANK2 ] unsigned int 
 21530 ;; Registers used:
 21531 ;;		wreg, status,2, status,0, cstack
 21532 ;; Tracked objects:
 21533 ;;		On entry : 0/0
 21534 ;;		On exit  : 0/0
 21535 ;;		Unchanged: 0/0
 21536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21537 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21540 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21541 ;;Total ram usage:        2 bytes
 21542 ;; Hardware stack levels used:    1
 21543 ;; Hardware stack levels required when called:   13
 21544 ;; This function calls:
 21545 ;;		_FLASH_ReadWord
 21546 ;; This function is called by:
 21547 ;;		_OLED_updateHandler
 21548 ;;		_ringBufferLUT
 21549 ;; This function uses a non-reentrant model
 21550 ;;
 21551                           
 21552                           	psect	text72
 21553  01C454                     __ptext72:
 21554                           	opt callstack 0
 21555  01C454                     _getDeviceID:
 21556                           	opt callstack 15
 21557                           
 21558                           ;device_IDs.c: 8: return FLASH_ReadWord(0x3FFFFE);
 21559                           
 21560                           ; BSR set to: 2
 21561                           ;incstack = 0
 21562  01C454  0EFE               	movlw	254
 21563  01C456  0102               	movlb	2	; () banked
 21564  01C458  6F04               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 21565  01C45A  0EFF               	movlw	255
 21566  01C45C  6F05               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 21567  01C45E  0E3F               	movlw	63
 21568  01C460  6F06               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 21569  01C462  0E00               	movlw	0
 21570  01C464  6F07               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 21571  01C466  EC45  F0DE         	call	_FLASH_ReadWord	;wreg free
 21572  01C46A  C204  F20B         	movff	?_FLASH_ReadWord,?_getDeviceID
 21573  01C46E  C205  F20C         	movff	?_FLASH_ReadWord+1,?_getDeviceID+1
 21574  01C472  0012               	return		;funcret
 21575  01C474                     __end_of_getDeviceID:
 21576                           	opt callstack 0
 21577                           
 21578 ;; *************** function _FLASH_ReadWord *****************
 21579 ;; Defined at:
 21580 ;;		line 71 in file "mcc_generated_files/memory.c"
 21581 ;; Parameters:    Size  Location     Type
 21582 ;;  flashAddr       4    4[BANK2 ] unsigned long 
 21583 ;; Auto vars:     Size  Location     Type
 21584 ;;		None
 21585 ;; Return value:  Size  Location     Type
 21586 ;;                  2    4[BANK2 ] unsigned int 
 21587 ;; Registers used:
 21588 ;;		wreg, status,2, status,0, cstack
 21589 ;; Tracked objects:
 21590 ;;		On entry : 0/0
 21591 ;;		On exit  : 0/0
 21592 ;;		Unchanged: 0/0
 21593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21594 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21596 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21597 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21598 ;;Total ram usage:        7 bytes
 21599 ;; Hardware stack levels used:    1
 21600 ;; Hardware stack levels required when called:   12
 21601 ;; This function calls:
 21602 ;;		_FLASH_ReadByte
 21603 ;; This function is called by:
 21604 ;;		_getDeviceID
 21605 ;;		_getMajorRevisionID
 21606 ;;		_getMinorRevisionID
 21607 ;;		_getUserID
 21608 ;; This function uses a non-reentrant model
 21609 ;;
 21610                           
 21611                           	psect	text73
 21612  01BC8A                     __ptext73:
 21613                           	opt callstack 0
 21614  01BC8A                     _FLASH_ReadWord:
 21615                           	opt callstack 15
 21616                           
 21617                           ;memory.c: 73: return ((((uint16_t)FLASH_ReadByte(flashAddr+1))<<8)|(FLASH_ReadByte(flas
      +                          hAddr)));
 21618                           
 21619                           ;incstack = 0
 21620  01BC8A  C204  F200         	movff	FLASH_ReadWord@flashAddr,FLASH_ReadByte@flashAddr
 21621  01BC8E  C205  F201         	movff	FLASH_ReadWord@flashAddr+1,FLASH_ReadByte@flashAddr+1
 21622  01BC92  C206  F202         	movff	FLASH_ReadWord@flashAddr+2,FLASH_ReadByte@flashAddr+2
 21623  01BC96  C207  F203         	movff	FLASH_ReadWord@flashAddr+3,FLASH_ReadByte@flashAddr+3
 21624  01BC9A  ECAF  F0E2         	call	_FLASH_ReadByte	;wreg free
 21625  01BC9E  0102               	movlb	2	; () banked
 21626  01BCA0  6F08               	movwf	??_FLASH_ReadWord& (0+255),b
 21627  01BCA2  0E01               	movlw	1
 21628  01BCA4  2504               	addwf	FLASH_ReadWord@flashAddr& (0+255),w,b
 21629  01BCA6  6F00               	movwf	FLASH_ReadByte@flashAddr& (0+255),b
 21630  01BCA8  0E00               	movlw	0
 21631  01BCAA  2105               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),w,b
 21632  01BCAC  6F01               	movwf	(FLASH_ReadByte@flashAddr+1)& (0+255),b
 21633  01BCAE  0E00               	movlw	0
 21634  01BCB0  2106               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),w,b
 21635  01BCB2  6F02               	movwf	(FLASH_ReadByte@flashAddr+2)& (0+255),b
 21636  01BCB4  0E00               	movlw	0
 21637  01BCB6  2107               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),w,b
 21638  01BCB8  6F03               	movwf	(FLASH_ReadByte@flashAddr+3)& (0+255),b
 21639  01BCBA  ECAF  F0E2         	call	_FLASH_ReadByte	;wreg free
 21640  01BCBE  0102               	movlb	2	; () banked
 21641  01BCC0  6F09               	movwf	(??_FLASH_ReadWord+1)& (0+255),b
 21642  01BCC2  5108               	movf	??_FLASH_ReadWord& (0+255),w,b
 21643  01BCC4  6F04               	movwf	?_FLASH_ReadWord& (0+255),b
 21644  01BCC6  C209  F205         	movff	??_FLASH_ReadWord+1,?_FLASH_ReadWord+1
 21645                           
 21646                           ; BSR set to: 2
 21647  01BCCA  0012               	return		;funcret
 21648  01BCCC                     __end_of_FLASH_ReadWord:
 21649                           	opt callstack 0
 21650                           
 21651 ;; *************** function _FLASH_ReadByte *****************
 21652 ;; Defined at:
 21653 ;;		line 59 in file "mcc_generated_files/memory.c"
 21654 ;; Parameters:    Size  Location     Type
 21655 ;;  flashAddr       4    0[BANK2 ] unsigned long 
 21656 ;; Auto vars:     Size  Location     Type
 21657 ;;		None
 21658 ;; Return value:  Size  Location     Type
 21659 ;;                  1    wreg      unsigned char 
 21660 ;; Registers used:
 21661 ;;		wreg, status,2
 21662 ;; Tracked objects:
 21663 ;;		On entry : 0/0
 21664 ;;		On exit  : 0/0
 21665 ;;		Unchanged: 0/0
 21666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21667 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21670 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21671 ;;Total ram usage:        4 bytes
 21672 ;; Hardware stack levels used:    1
 21673 ;; Hardware stack levels required when called:   11
 21674 ;; This function calls:
 21675 ;;		Nothing
 21676 ;; This function is called by:
 21677 ;;		_FLASH_ReadWord
 21678 ;;		_FLASH_WriteByte
 21679 ;; This function uses a non-reentrant model
 21680 ;;
 21681                           
 21682                           	psect	text74
 21683  01C55E                     __ptext74:
 21684                           	opt callstack 0
 21685  01C55E                     _FLASH_ReadByte:
 21686                           	opt callstack 15
 21687                           
 21688                           ;memory.c: 61: NVMCON1bits.NVMREG = 2;
 21689                           
 21690                           ; BSR set to: 2
 21691                           ;incstack = 0
 21692  01C55E  5081               	movf	3969,w,c	;volsfr
 21693  01C560  0B3F               	andlw	-193
 21694  01C562  0980               	iorlw	128
 21695  01C564  6E81               	movwf	3969,c	;volsfr
 21696                           
 21697                           ;memory.c: 62: TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 16);
 21698  01C566  C202  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
 21699                           
 21700                           ;memory.c: 63: TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8);
 21701  01C56A  C201  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
 21702                           
 21703                           ;memory.c: 64: TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 21704  01C56E  C200  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
 21705  01C572  0008               	tblrd		*	;# 
 21706                           
 21707                           ;memory.c: 68: return (TABLAT);
 21708  01C574  50F5               	movf	tablat,w,c	;volatile
 21709  01C576  0012               	return		;funcret
 21710  01C578                     __end_of_FLASH_ReadByte:
 21711                           	opt callstack 0
 21712                           
 21713 ;; *************** function _getDaysFromOnTime *****************
 21714 ;; Defined at:
 21715 ;;		line 188 in file "heartbeat_timer.c"
 21716 ;; Parameters:    Size  Location     Type
 21717 ;;  input_second    4   13[BANK2 ] unsigned long 
 21718 ;; Auto vars:     Size  Location     Type
 21719 ;;  years           1   22[BANK2 ] unsigned char 
 21720 ;;  days            1   21[BANK2 ] unsigned char 
 21721 ;; Return value:  Size  Location     Type
 21722 ;;                  1    wreg      unsigned char 
 21723 ;; Registers used:
 21724 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 21725 ;; Tracked objects:
 21726 ;;		On entry : 0/0
 21727 ;;		On exit  : 0/0
 21728 ;;		Unchanged: 0/0
 21729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21730 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21731 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21732 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21733 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21734 ;;Total ram usage:       10 bytes
 21735 ;; Hardware stack levels used:    1
 21736 ;; Hardware stack levels required when called:   12
 21737 ;; This function calls:
 21738 ;;		___lldiv
 21739 ;;		___wmul
 21740 ;; This function is called by:
 21741 ;;		_OLED_updateHandler
 21742 ;; This function uses a non-reentrant model
 21743 ;;
 21744                           
 21745                           	psect	text75
 21746  01ADCE                     __ptext75:
 21747                           	opt callstack 0
 21748  01ADCE                     _getDaysFromOnTime:
 21749                           	opt callstack 17
 21750                           
 21751                           ;heartbeat_timer.c: 190: uint8_t years, days;;heartbeat_timer.c: 191: years = input_seco
      +                          nds / (60 * 60 * 24 * 365);
 21752                           
 21753                           ;incstack = 0
 21754  01ADCE  C20D  F200         	movff	getDaysFromOnTime@input_seconds,___lldiv@dividend
 21755  01ADD2  C20E  F201         	movff	getDaysFromOnTime@input_seconds+1,___lldiv@dividend+1
 21756  01ADD6  C20F  F202         	movff	getDaysFromOnTime@input_seconds+2,___lldiv@dividend+2
 21757  01ADDA  C210  F203         	movff	getDaysFromOnTime@input_seconds+3,___lldiv@dividend+3
 21758  01ADDE  0E80               	movlw	128
 21759  01ADE0  0102               	movlb	2	; () banked
 21760  01ADE2  6F04               	movwf	___lldiv@divisor& (0+255),b
 21761  01ADE4  0E33               	movlw	51
 21762  01ADE6  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21763  01ADE8  0E00               	movlw	0
 21764  01ADEA  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21765  01ADEC  0E00               	movlw	0
 21766  01ADEE  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21767  01ADF0  ECFD  F0D7         	call	___lldiv	;wreg free
 21768  01ADF4  0102               	movlb	2	; () banked
 21769  01ADF6  5100               	movf	?___lldiv& (0+255),w,b
 21770  01ADF8  6F16               	movwf	getDaysFromOnTime@years& (0+255),b
 21771                           
 21772                           ; BSR set to: 2
 21773                           ;heartbeat_timer.c: 192: input_seconds -= years * (60 * 60 * 24 * 365);
 21774  01ADFA  C216  F200         	movff	getDaysFromOnTime@years,___wmul@multiplier
 21775  01ADFE  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 21776  01AE00  0E33               	movlw	51
 21777  01AE02  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21778  01AE04  0E80               	movlw	128
 21779  01AE06  6F02               	movwf	___wmul@multiplicand& (0+255),b
 21780  01AE08  EC2E  F0E1         	call	___wmul	;wreg free
 21781  01AE0C  0102               	movlb	2	; () banked
 21782  01AE0E  C200  F211         	movff	?___wmul,??_getDaysFromOnTime
 21783  01AE12  C201  F212         	movff	?___wmul+1,??_getDaysFromOnTime+1
 21784  01AE16  0E00               	movlw	0
 21785  01AE18  BF12               	btfsc	(??_getDaysFromOnTime+1)& (0+255),7,b
 21786  01AE1A  0EFF               	movlw	255
 21787  01AE1C  6F13               	movwf	(??_getDaysFromOnTime+2)& (0+255),b
 21788  01AE1E  6F14               	movwf	(??_getDaysFromOnTime+3)& (0+255),b
 21789  01AE20  5111               	movf	??_getDaysFromOnTime& (0+255),w,b
 21790  01AE22  5F0D               	subwf	getDaysFromOnTime@input_seconds& (0+255),f,b
 21791  01AE24  5112               	movf	(??_getDaysFromOnTime+1)& (0+255),w,b
 21792  01AE26  5B0E               	subwfb	(getDaysFromOnTime@input_seconds+1)& (0+255),f,b
 21793  01AE28  5113               	movf	(??_getDaysFromOnTime+2)& (0+255),w,b
 21794  01AE2A  5B0F               	subwfb	(getDaysFromOnTime@input_seconds+2)& (0+255),f,b
 21795  01AE2C  5114               	movf	(??_getDaysFromOnTime+3)& (0+255),w,b
 21796  01AE2E  5B10               	subwfb	(getDaysFromOnTime@input_seconds+3)& (0+255),f,b
 21797                           
 21798                           ; BSR set to: 2
 21799                           ;heartbeat_timer.c: 193: return days = input_seconds / (60 * 60 * 24);
 21800  01AE30  C20D  F200         	movff	getDaysFromOnTime@input_seconds,___lldiv@dividend
 21801  01AE34  C20E  F201         	movff	getDaysFromOnTime@input_seconds+1,___lldiv@dividend+1
 21802  01AE38  C20F  F202         	movff	getDaysFromOnTime@input_seconds+2,___lldiv@dividend+2
 21803  01AE3C  C210  F203         	movff	getDaysFromOnTime@input_seconds+3,___lldiv@dividend+3
 21804  01AE40  0E80               	movlw	128
 21805  01AE42  6F04               	movwf	___lldiv@divisor& (0+255),b
 21806  01AE44  0E51               	movlw	81
 21807  01AE46  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21808  01AE48  0E00               	movlw	0
 21809  01AE4A  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21810  01AE4C  0E00               	movlw	0
 21811  01AE4E  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21812  01AE50  ECFD  F0D7         	call	___lldiv	;wreg free
 21813  01AE54  0102               	movlb	2	; () banked
 21814  01AE56  5100               	movf	?___lldiv& (0+255),w,b
 21815  01AE58  6F15               	movwf	getDaysFromOnTime@days& (0+255),b
 21816  01AE5A  5115               	movf	getDaysFromOnTime@days& (0+255),w,b
 21817                           
 21818                           ; BSR set to: 2
 21819  01AE5C  0012               	return		;funcret
 21820  01AE5E                     __end_of_getDaysFromOnTime:
 21821                           	opt callstack 0
 21822                           
 21823 ;; *************** function _getCauseOfResetStringSmall *****************
 21824 ;; Defined at:
 21825 ;;		line 118 in file "cause_of_reset.c"
 21826 ;; Parameters:    Size  Location     Type
 21827 ;;  r               1    wreg     enum E9577
 21828 ;; Auto vars:     Size  Location     Type
 21829 ;;  r               1    2[BANK2 ] enum E9577
 21830 ;; Return value:  Size  Location     Type
 21831 ;;                  2    0[BANK2 ] PTR inline unsigned char
 21832 ;; Registers used:
 21833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21834 ;; Tracked objects:
 21835 ;;		On entry : 0/0
 21836 ;;		On exit  : 0/0
 21837 ;;		Unchanged: 0/0
 21838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21839 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21840 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21842 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21843 ;;Total ram usage:        3 bytes
 21844 ;; Hardware stack levels used:    1
 21845 ;; Hardware stack levels required when called:   11
 21846 ;; This function calls:
 21847 ;;		Nothing
 21848 ;; This function is called by:
 21849 ;;		_OLED_updateHandler
 21850 ;; This function uses a non-reentrant model
 21851 ;;
 21852                           
 21853                           	psect	text76
 21854  01C0D0                     __ptext76:
 21855                           	opt callstack 0
 21856  01C0D0                     _getCauseOfResetStringSmall:
 21857                           	opt callstack 18
 21858                           
 21859                           ; BSR set to: 2
 21860                           ;incstack = 0
 21861                           ;getCauseOfResetStringSmall@r stored from wreg
 21862  01C0D0  0102               	movlb	2	; () banked
 21863  01C0D2  6F02               	movwf	getCauseOfResetStringSmall@r& (0+255),b
 21864                           
 21865                           ;cause_of_reset.c: 121: static char *strings[] = {;cause_of_reset.c: 122: "Undefined",;c
      +                          ause_of_reset.c: 123: "POR Reset",;cause_of_reset.c: 124: "BOR Reset",;cause_of_reset.c:
      +                           125: "MCLR Reset",;cause_of_reset.c: 126: "WDT Reset",;cause_of_reset.c: 127: "WWDT Res
      +                          et",;cause_of_reset.c: 128: "RESET Executed",;cause_of_reset.c: 129: "STOF Reset",;cause
      +                          _of_reset.c: 130: "STUF Reset",;cause_of_reset.c: 131: };;cause_of_reset.c: 134: if (r <
      +                          = 8) {
 21866  01C0D4  0E09               	movlw	9
 21867  01C0D6  0102               	movlb	2	; () banked
 21868  01C0D8  6102               	cpfslt	getCauseOfResetStringSmall@r& (0+255),b
 21869  01C0DA  D00D               	goto	l21136
 21870                           
 21871                           ; BSR set to: 2
 21872                           ;cause_of_reset.c: 136: return strings[r];
 21873  01C0DC  5102               	movf	getCauseOfResetStringSmall@r& (0+255),w,b
 21874  01C0DE  0D02               	mullw	2
 21875  01C0E0  0EED               	movlw	low getCauseOfResetStringSmall@strings
 21876  01C0E2  24F3               	addwf	prodl,w,c
 21877  01C0E4  6ED9               	movwf	fsr2l,c
 21878  01C0E6  0E02               	movlw	high getCauseOfResetStringSmall@strings
 21879  01C0E8  20F4               	addwfc	prodh,w,c
 21880  01C0EA  6EDA               	movwf	fsr2h,c
 21881  01C0EC  CFDE F200          	movff	postinc2,?_getCauseOfResetStringSmall
 21882  01C0F0  CFDD F201          	movff	postdec2,?_getCauseOfResetStringSmall+1
 21883  01C0F4  0012               	return	
 21884  01C0F6                     l21136:
 21885                           
 21886                           ; BSR set to: 2
 21887                           ;cause_of_reset.c: 140: else {;cause_of_reset.c: 142: return "Undefined";
 21888  01C0F6  0EBA               	movlw	low STR_22
 21889  01C0F8  6F00               	movwf	?_getCauseOfResetStringSmall& (0+255),b
 21890  01C0FA  0EFE               	movlw	high STR_22
 21891  01C0FC  6F01               	movwf	(?_getCauseOfResetStringSmall+1)& (0+255),b
 21892                           
 21893                           ; BSR set to: 2
 21894  01C0FE  0012               	return		;funcret
 21895  01C100                     __end_of_getCauseOfResetStringSmall:
 21896                           	opt callstack 0
 21897                           
 21898 ;; *************** function _floatToEngineeringFormat *****************
 21899 ;; Defined at:
 21900 ;;		line 404 in file "ring_buffer_LUT.c"
 21901 ;; Parameters:    Size  Location     Type
 21902 ;;  input_value     4  159[BANK2 ] float 
 21903 ;; Auto vars:     Size  Location     Type
 21904 ;;  mag             4  163[BANK2 ] float 
 21905 ;;  res             2  167[BANK2 ] PTR unsigned char 
 21906 ;;		 -> floatToEngineeringFormat@result(20), 
 21907 ;; Return value:  Size  Location     Type
 21908 ;;                  2  159[BANK2 ] PTR unsigned char 
 21909 ;; Registers used:
 21910 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21911 ;; Tracked objects:
 21912 ;;		On entry : 0/0
 21913 ;;		On exit  : 0/0
 21914 ;;		Unchanged: 0/0
 21915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21916 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21917 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21919 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21920 ;;Total ram usage:       10 bytes
 21921 ;; Hardware stack levels used:    1
 21922 ;; Hardware stack levels required when called:   15
 21923 ;; This function calls:
 21924 ;;		___fldiv
 21925 ;;		___fleq
 21926 ;;		___flge
 21927 ;;		___fltol
 21928 ;;		___xxtofl
 21929 ;;		_abs
 21930 ;;		_sprintf
 21931 ;; This function is called by:
 21932 ;;		_OLED_updateHandler
 21933 ;;		_printCurrentMeasurements
 21934 ;; This function uses a non-reentrant model
 21935 ;;
 21936                           
 21937                           	psect	text77
 21938  016338                     __ptext77:
 21939                           	opt callstack 0
 21940  016338                     _floatToEngineeringFormat:
 21941                           	opt callstack 12
 21942                           
 21943                           ;ring_buffer_LUT.c: 406: static unsigned char result[20];;ring_buffer_LUT.c: 407: unsign
      +                          ed char *res = result;
 21944                           
 21945                           ; BSR set to: 2
 21946                           ;incstack = 0
 21947  016338  0EAC               	movlw	low floatToEngineeringFormat@result
 21948  01633A  0102               	movlb	2	; () banked
 21949  01633C  6FA7               	movwf	floatToEngineeringFormat@res& (0+255),b
 21950  01633E  0E03               	movlw	high floatToEngineeringFormat@result
 21951  016340  6FA8               	movwf	(floatToEngineeringFormat@res+1)& (0+255),b
 21952                           
 21953                           ; BSR set to: 2
 21954                           ;ring_buffer_LUT.c: 411: float mag = abs(input_value);
 21955  016342  C29F  F230         	movff	floatToEngineeringFormat@input_value,___fltol@f1
 21956  016346  C2A0  F231         	movff	floatToEngineeringFormat@input_value+1,___fltol@f1+1
 21957  01634A  C2A1  F232         	movff	floatToEngineeringFormat@input_value+2,___fltol@f1+2
 21958  01634E  C2A2  F233         	movff	floatToEngineeringFormat@input_value+3,___fltol@f1+3
 21959  016352  ECEF  F0D3         	call	___fltol	;wreg free
 21960  016356  C230  F23A         	movff	?___fltol,abs@a
 21961  01635A  C231  F23B         	movff	?___fltol+1,abs@a+1
 21962  01635E  ECDB  F0E0         	call	_abs	;wreg free
 21963  016362  0102               	movlb	2	; () banked
 21964  016364  C23A  F23E         	movff	?_abs,___xxtofl@val
 21965  016368  C23B  F23F         	movff	?_abs+1,___xxtofl@val+1
 21966  01636C  0E00               	movlw	0
 21967  01636E  BF3F               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 21968  016370  0EFF               	movlw	-1
 21969  016372  6F40               	movwf	(___xxtofl@val+2)& (0+255),b
 21970  016374  6F41               	movwf	(___xxtofl@val+3)& (0+255),b
 21971  016376  0E01               	movlw	1
 21972  016378  EC88  F0CC         	call	___xxtofl
 21973  01637C  C23E  F2A3         	movff	?___xxtofl,floatToEngineeringFormat@mag
 21974  016380  C23F  F2A4         	movff	?___xxtofl+1,floatToEngineeringFormat@mag+1
 21975  016384  C240  F2A5         	movff	?___xxtofl+2,floatToEngineeringFormat@mag+2
 21976  016388  C241  F2A6         	movff	?___xxtofl+3,floatToEngineeringFormat@mag+3
 21977                           
 21978                           ;ring_buffer_LUT.c: 413: if (mag >= 1000000.0) sprintf(res, "+%0.3f M", input_value / 10
      +                          00000.0);
 21979  01638C  C2A3  F200         	movff	floatToEngineeringFormat@mag,___flge@ff1
 21980  016390  C2A4  F201         	movff	floatToEngineeringFormat@mag+1,___flge@ff1+1
 21981  016394  C2A5  F202         	movff	floatToEngineeringFormat@mag+2,___flge@ff1+2
 21982  016398  C2A6  F203         	movff	floatToEngineeringFormat@mag+3,___flge@ff1+3
 21983  01639C  0E00               	movlw	0
 21984  01639E  0102               	movlb	2	; () banked
 21985  0163A0  6F04               	movwf	___flge@ff2& (0+255),b
 21986  0163A2  0E24               	movlw	36
 21987  0163A4  6F05               	movwf	(___flge@ff2+1)& (0+255),b
 21988  0163A6  0E74               	movlw	116
 21989  0163A8  6F06               	movwf	(___flge@ff2+2)& (0+255),b
 21990  0163AA  0E49               	movlw	73
 21991  0163AC  6F07               	movwf	(___flge@ff2+3)& (0+255),b
 21992  0163AE  EC57  F0D2         	call	___flge	;wreg free
 21993  0163B2  0102               	movlb	2	; () banked
 21994  0163B4  A0D8               	btfss	status,0,c
 21995  0163B6  D025               	goto	l19490
 21996                           
 21997                           ; BSR set to: 2
 21998  0163B8  C2A7  F28C         	movff	floatToEngineeringFormat@res,sprintf@wh
 21999  0163BC  C2A8  F28D         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 22000  0163C0  0ECE               	movlw	low STR_288
 22001  0163C2  6F8E               	movwf	sprintf@f& (0+255),b
 22002  0163C4  0EFE               	movlw	high STR_288
 22003  0163C6  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 22004  0163C8  C29F  F200         	movff	floatToEngineeringFormat@input_value,___fldiv@b
 22005  0163CC  C2A0  F201         	movff	floatToEngineeringFormat@input_value+1,___fldiv@b+1
 22006  0163D0  C2A1  F202         	movff	floatToEngineeringFormat@input_value+2,___fldiv@b+2
 22007  0163D4  C2A2  F203         	movff	floatToEngineeringFormat@input_value+3,___fldiv@b+3
 22008  0163D8  0E00               	movlw	0
 22009  0163DA  6F04               	movwf	___fldiv@a& (0+255),b
 22010  0163DC  0E24               	movlw	36
 22011  0163DE  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 22012  0163E0  0E74               	movlw	116
 22013  0163E2  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 22014  0163E4  0E49               	movlw	73
 22015  0163E6  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 22016  0163E8  ECFB  F0C0         	call	___fldiv	;wreg free
 22017  0163EC  C200  F290         	movff	?___fldiv,?_sprintf+4
 22018  0163F0  C201  F291         	movff	?___fldiv+1,?_sprintf+5
 22019  0163F4  C202  F292         	movff	?___fldiv+2,?_sprintf+6
 22020  0163F8  C203  F293         	movff	?___fldiv+3,?_sprintf+7
 22021  0163FC  EC0A  F0DD         	call	_sprintf	;wreg free
 22022  016400  D141               	goto	l2248
 22023  016402                     l19490:
 22024                           
 22025                           ; BSR set to: 2
 22026                           ;ring_buffer_LUT.c: 414: else if (mag >= 1000.0) sprintf(res, "+%0.3f k", input_value/ 1
      +                          000.0);
 22027  016402  C2A3  F200         	movff	floatToEngineeringFormat@mag,___flge@ff1
 22028  016406  C2A4  F201         	movff	floatToEngineeringFormat@mag+1,___flge@ff1+1
 22029  01640A  C2A5  F202         	movff	floatToEngineeringFormat@mag+2,___flge@ff1+2
 22030  01640E  C2A6  F203         	movff	floatToEngineeringFormat@mag+3,___flge@ff1+3
 22031  016412  0E00               	movlw	0
 22032  016414  6F04               	movwf	___flge@ff2& (0+255),b
 22033  016416  0E00               	movlw	0
 22034  016418  6F05               	movwf	(___flge@ff2+1)& (0+255),b
 22035  01641A  0E7A               	movlw	122
 22036  01641C  6F06               	movwf	(___flge@ff2+2)& (0+255),b
 22037  01641E  0E44               	movlw	68
 22038  016420  6F07               	movwf	(___flge@ff2+3)& (0+255),b
 22039  016422  EC57  F0D2         	call	___flge	;wreg free
 22040  016426  0102               	movlb	2	; () banked
 22041  016428  A0D8               	btfss	status,0,c
 22042  01642A  D025               	goto	l19494
 22043                           
 22044                           ; BSR set to: 2
 22045  01642C  C2A7  F28C         	movff	floatToEngineeringFormat@res,sprintf@wh
 22046  016430  C2A8  F28D         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 22047  016434  0ED7               	movlw	low STR_289
 22048  016436  6F8E               	movwf	sprintf@f& (0+255),b
 22049  016438  0EFE               	movlw	high STR_289
 22050  01643A  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 22051  01643C  C29F  F200         	movff	floatToEngineeringFormat@input_value,___fldiv@b
 22052  016440  C2A0  F201         	movff	floatToEngineeringFormat@input_value+1,___fldiv@b+1
 22053  016444  C2A1  F202         	movff	floatToEngineeringFormat@input_value+2,___fldiv@b+2
 22054  016448  C2A2  F203         	movff	floatToEngineeringFormat@input_value+3,___fldiv@b+3
 22055  01644C  0E00               	movlw	0
 22056  01644E  6F04               	movwf	___fldiv@a& (0+255),b
 22057  016450  0E00               	movlw	0
 22058  016452  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 22059  016454  0E7A               	movlw	122
 22060  016456  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 22061  016458  0E44               	movlw	68
 22062  01645A  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 22063  01645C  ECFB  F0C0         	call	___fldiv	;wreg free
 22064  016460  C200  F290         	movff	?___fldiv,?_sprintf+4
 22065  016464  C201  F291         	movff	?___fldiv+1,?_sprintf+5
 22066  016468  C202  F292         	movff	?___fldiv+2,?_sprintf+6
 22067  01646C  C203  F293         	movff	?___fldiv+3,?_sprintf+7
 22068  016470  EC0A  F0DD         	call	_sprintf	;wreg free
 22069  016474  D107               	goto	l2248
 22070  016476                     l19494:
 22071                           
 22072                           ; BSR set to: 2
 22073                           ;ring_buffer_LUT.c: 415: else if (mag >= 1.0) sprintf(res, "+%0.3f ", input_value / 1.0)
      +                          ;
 22074  016476  C2A3  F200         	movff	floatToEngineeringFormat@mag,___flge@ff1
 22075  01647A  C2A4  F201         	movff	floatToEngineeringFormat@mag+1,___flge@ff1+1
 22076  01647E  C2A5  F202         	movff	floatToEngineeringFormat@mag+2,___flge@ff1+2
 22077  016482  C2A6  F203         	movff	floatToEngineeringFormat@mag+3,___flge@ff1+3
 22078  016486  0E00               	movlw	0
 22079  016488  6F04               	movwf	___flge@ff2& (0+255),b
 22080  01648A  0E00               	movlw	0
 22081  01648C  6F05               	movwf	(___flge@ff2+1)& (0+255),b
 22082  01648E  0E80               	movlw	128
 22083  016490  6F06               	movwf	(___flge@ff2+2)& (0+255),b
 22084  016492  0E3F               	movlw	63
 22085  016494  6F07               	movwf	(___flge@ff2+3)& (0+255),b
 22086  016496  EC57  F0D2         	call	___flge	;wreg free
 22087  01649A  0102               	movlb	2	; () banked
 22088  01649C  A0D8               	btfss	status,0,c
 22089  01649E  D025               	goto	l19498
 22090                           
 22091                           ; BSR set to: 2
 22092  0164A0  C2A7  F28C         	movff	floatToEngineeringFormat@res,sprintf@wh
 22093  0164A4  C2A8  F28D         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 22094  0164A8  0E3A               	movlw	low STR_290
 22095  0164AA  6F8E               	movwf	sprintf@f& (0+255),b
 22096  0164AC  0EFF               	movlw	high STR_290
 22097  0164AE  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 22098  0164B0  C29F  F200         	movff	floatToEngineeringFormat@input_value,___fldiv@b
 22099  0164B4  C2A0  F201         	movff	floatToEngineeringFormat@input_value+1,___fldiv@b+1
 22100  0164B8  C2A1  F202         	movff	floatToEngineeringFormat@input_value+2,___fldiv@b+2
 22101  0164BC  C2A2  F203         	movff	floatToEngineeringFormat@input_value+3,___fldiv@b+3
 22102  0164C0  0E00               	movlw	0
 22103  0164C2  6F04               	movwf	___fldiv@a& (0+255),b
 22104  0164C4  0E00               	movlw	0
 22105  0164C6  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 22106  0164C8  0E80               	movlw	128
 22107  0164CA  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 22108  0164CC  0E3F               	movlw	63
 22109  0164CE  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 22110  0164D0  ECFB  F0C0         	call	___fldiv	;wreg free
 22111  0164D4  C200  F290         	movff	?___fldiv,?_sprintf+4
 22112  0164D8  C201  F291         	movff	?___fldiv+1,?_sprintf+5
 22113  0164DC  C202  F292         	movff	?___fldiv+2,?_sprintf+6
 22114  0164E0  C203  F293         	movff	?___fldiv+3,?_sprintf+7
 22115  0164E4  EC0A  F0DD         	call	_sprintf	;wreg free
 22116  0164E8  D0CD               	goto	l2248
 22117  0164EA                     l19498:
 22118                           
 22119                           ; BSR set to: 2
 22120                           ;ring_buffer_LUT.c: 416: else if (mag >= 0.0001) sprintf(res, "+%0.3f m", input_value / 
      +                          0.001);
 22121  0164EA  C2A3  F200         	movff	floatToEngineeringFormat@mag,___flge@ff1
 22122  0164EE  C2A4  F201         	movff	floatToEngineeringFormat@mag+1,___flge@ff1+1
 22123  0164F2  C2A5  F202         	movff	floatToEngineeringFormat@mag+2,___flge@ff1+2
 22124  0164F6  C2A6  F203         	movff	floatToEngineeringFormat@mag+3,___flge@ff1+3
 22125  0164FA  0E17               	movlw	23
 22126  0164FC  6F04               	movwf	___flge@ff2& (0+255),b
 22127  0164FE  0EB7               	movlw	183
 22128  016500  6F05               	movwf	(___flge@ff2+1)& (0+255),b
 22129  016502  0ED1               	movlw	209
 22130  016504  6F06               	movwf	(___flge@ff2+2)& (0+255),b
 22131  016506  0E38               	movlw	56
 22132  016508  6F07               	movwf	(___flge@ff2+3)& (0+255),b
 22133  01650A  EC57  F0D2         	call	___flge	;wreg free
 22134  01650E  0102               	movlb	2	; () banked
 22135  016510  A0D8               	btfss	status,0,c
 22136  016512  D025               	goto	l19502
 22137                           
 22138                           ; BSR set to: 2
 22139  016514  C2A7  F28C         	movff	floatToEngineeringFormat@res,sprintf@wh
 22140  016518  C2A8  F28D         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 22141  01651C  0EE0               	movlw	low STR_291
 22142  01651E  6F8E               	movwf	sprintf@f& (0+255),b
 22143  016520  0EFE               	movlw	high STR_291
 22144  016522  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 22145  016524  C29F  F200         	movff	floatToEngineeringFormat@input_value,___fldiv@b
 22146  016528  C2A0  F201         	movff	floatToEngineeringFormat@input_value+1,___fldiv@b+1
 22147  01652C  C2A1  F202         	movff	floatToEngineeringFormat@input_value+2,___fldiv@b+2
 22148  016530  C2A2  F203         	movff	floatToEngineeringFormat@input_value+3,___fldiv@b+3
 22149  016534  0E6F               	movlw	111
 22150  016536  6F04               	movwf	___fldiv@a& (0+255),b
 22151  016538  0E12               	movlw	18
 22152  01653A  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 22153  01653C  0E83               	movlw	131
 22154  01653E  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 22155  016540  0E3A               	movlw	58
 22156  016542  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 22157  016544  ECFB  F0C0         	call	___fldiv	;wreg free
 22158  016548  C200  F290         	movff	?___fldiv,?_sprintf+4
 22159  01654C  C201  F291         	movff	?___fldiv+1,?_sprintf+5
 22160  016550  C202  F292         	movff	?___fldiv+2,?_sprintf+6
 22161  016554  C203  F293         	movff	?___fldiv+3,?_sprintf+7
 22162  016558  EC0A  F0DD         	call	_sprintf	;wreg free
 22163  01655C  D093               	goto	l2248
 22164  01655E                     l19502:
 22165                           
 22166                           ; BSR set to: 2
 22167                           ;ring_buffer_LUT.c: 417: else if (mag >= 0.0000001) sprintf(res, "+%0.3f u", input_value
      +                           / 0.000001);
 22168  01655E  C2A3  F200         	movff	floatToEngineeringFormat@mag,___flge@ff1
 22169  016562  C2A4  F201         	movff	floatToEngineeringFormat@mag+1,___flge@ff1+1
 22170  016566  C2A5  F202         	movff	floatToEngineeringFormat@mag+2,___flge@ff1+2
 22171  01656A  C2A6  F203         	movff	floatToEngineeringFormat@mag+3,___flge@ff1+3
 22172  01656E  0E95               	movlw	149
 22173  016570  6F04               	movwf	___flge@ff2& (0+255),b
 22174  016572  0EBF               	movlw	191
 22175  016574  6F05               	movwf	(___flge@ff2+1)& (0+255),b
 22176  016576  0ED6               	movlw	214
 22177  016578  6F06               	movwf	(___flge@ff2+2)& (0+255),b
 22178  01657A  0E33               	movlw	51
 22179  01657C  6F07               	movwf	(___flge@ff2+3)& (0+255),b
 22180  01657E  EC57  F0D2         	call	___flge	;wreg free
 22181  016582  0102               	movlb	2	; () banked
 22182  016584  A0D8               	btfss	status,0,c
 22183  016586  D025               	goto	l19506
 22184                           
 22185                           ; BSR set to: 2
 22186  016588  C2A7  F28C         	movff	floatToEngineeringFormat@res,sprintf@wh
 22187  01658C  C2A8  F28D         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 22188  016590  0EF2               	movlw	low STR_292
 22189  016592  6F8E               	movwf	sprintf@f& (0+255),b
 22190  016594  0EFE               	movlw	high STR_292
 22191  016596  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 22192  016598  C29F  F200         	movff	floatToEngineeringFormat@input_value,___fldiv@b
 22193  01659C  C2A0  F201         	movff	floatToEngineeringFormat@input_value+1,___fldiv@b+1
 22194  0165A0  C2A1  F202         	movff	floatToEngineeringFormat@input_value+2,___fldiv@b+2
 22195  0165A4  C2A2  F203         	movff	floatToEngineeringFormat@input_value+3,___fldiv@b+3
 22196  0165A8  0EBD               	movlw	189
 22197  0165AA  6F04               	movwf	___fldiv@a& (0+255),b
 22198  0165AC  0E37               	movlw	55
 22199  0165AE  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 22200  0165B0  0E86               	movlw	134
 22201  0165B2  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 22202  0165B4  0E35               	movlw	53
 22203  0165B6  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 22204  0165B8  ECFB  F0C0         	call	___fldiv	;wreg free
 22205  0165BC  C200  F290         	movff	?___fldiv,?_sprintf+4
 22206  0165C0  C201  F291         	movff	?___fldiv+1,?_sprintf+5
 22207  0165C4  C202  F292         	movff	?___fldiv+2,?_sprintf+6
 22208  0165C8  C203  F293         	movff	?___fldiv+3,?_sprintf+7
 22209  0165CC  EC0A  F0DD         	call	_sprintf	;wreg free
 22210  0165D0  D059               	goto	l2248
 22211  0165D2                     l19506:
 22212                           
 22213                           ; BSR set to: 2
 22214                           ;ring_buffer_LUT.c: 418: else if (mag >= 0.0000000001) sprintf(res, "+%0.3f n", input_va
      +                          lue / 0.000000001);
 22215  0165D2  C2A3  F200         	movff	floatToEngineeringFormat@mag,___flge@ff1
 22216  0165D6  C2A4  F201         	movff	floatToEngineeringFormat@mag+1,___flge@ff1+1
 22217  0165DA  C2A5  F202         	movff	floatToEngineeringFormat@mag+2,___flge@ff1+2
 22218  0165DE  C2A6  F203         	movff	floatToEngineeringFormat@mag+3,___flge@ff1+3
 22219  0165E2  0EFF               	movlw	255
 22220  0165E4  6F04               	movwf	___flge@ff2& (0+255),b
 22221  0165E6  0EE6               	movlw	230
 22222  0165E8  6F05               	movwf	(___flge@ff2+1)& (0+255),b
 22223  0165EA  0EDB               	movlw	219
 22224  0165EC  6F06               	movwf	(___flge@ff2+2)& (0+255),b
 22225  0165EE  0E2E               	movlw	46
 22226  0165F0  6F07               	movwf	(___flge@ff2+3)& (0+255),b
 22227  0165F2  EC57  F0D2         	call	___flge	;wreg free
 22228  0165F6  0102               	movlb	2	; () banked
 22229  0165F8  A0D8               	btfss	status,0,c
 22230  0165FA  D025               	goto	l19510
 22231                           
 22232                           ; BSR set to: 2
 22233  0165FC  C2A7  F28C         	movff	floatToEngineeringFormat@res,sprintf@wh
 22234  016600  C2A8  F28D         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 22235  016604  0EE9               	movlw	low STR_293
 22236  016606  6F8E               	movwf	sprintf@f& (0+255),b
 22237  016608  0EFE               	movlw	high STR_293
 22238  01660A  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 22239  01660C  C29F  F200         	movff	floatToEngineeringFormat@input_value,___fldiv@b
 22240  016610  C2A0  F201         	movff	floatToEngineeringFormat@input_value+1,___fldiv@b+1
 22241  016614  C2A1  F202         	movff	floatToEngineeringFormat@input_value+2,___fldiv@b+2
 22242  016618  C2A2  F203         	movff	floatToEngineeringFormat@input_value+3,___fldiv@b+3
 22243  01661C  0E5F               	movlw	95
 22244  01661E  6F04               	movwf	___fldiv@a& (0+255),b
 22245  016620  0E70               	movlw	112
 22246  016622  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 22247  016624  0E89               	movlw	137
 22248  016626  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 22249  016628  0E30               	movlw	48
 22250  01662A  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 22251  01662C  ECFB  F0C0         	call	___fldiv	;wreg free
 22252  016630  C200  F290         	movff	?___fldiv,?_sprintf+4
 22253  016634  C201  F291         	movff	?___fldiv+1,?_sprintf+5
 22254  016638  C202  F292         	movff	?___fldiv+2,?_sprintf+6
 22255  01663C  C203  F293         	movff	?___fldiv+3,?_sprintf+7
 22256  016640  EC0A  F0DD         	call	_sprintf	;wreg free
 22257  016644  D01F               	goto	l2248
 22258  016646                     l19510:
 22259                           
 22260                           ; BSR set to: 2
 22261                           ;ring_buffer_LUT.c: 419: else if (input_value == 0.0) sprintf(res, "0.0 ");
 22262  016646  C29F  F200         	movff	floatToEngineeringFormat@input_value,___fleq@ff1
 22263  01664A  C2A0  F201         	movff	floatToEngineeringFormat@input_value+1,___fleq@ff1+1
 22264  01664E  C2A1  F202         	movff	floatToEngineeringFormat@input_value+2,___fleq@ff1+2
 22265  016652  C2A2  F203         	movff	floatToEngineeringFormat@input_value+3,___fleq@ff1+3
 22266  016656  0E00               	movlw	0
 22267  016658  6F04               	movwf	___fleq@ff2& (0+255),b
 22268  01665A  0E00               	movlw	0
 22269  01665C  6F05               	movwf	(___fleq@ff2+1)& (0+255),b
 22270  01665E  0E00               	movlw	0
 22271  016660  6F06               	movwf	(___fleq@ff2+2)& (0+255),b
 22272  016662  0E00               	movlw	0
 22273  016664  6F07               	movwf	(___fleq@ff2+3)& (0+255),b
 22274  016666  EC2F  F0D7         	call	___fleq	;wreg free
 22275  01666A  0102               	movlb	2	; () banked
 22276  01666C  A0D8               	btfss	status,0,c
 22277  01666E  D00A               	goto	l2248
 22278                           
 22279                           ; BSR set to: 2
 22280  016670  C2A7  F28C         	movff	floatToEngineeringFormat@res,sprintf@wh
 22281  016674  C2A8  F28D         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 22282  016678  0E90               	movlw	low STR_294
 22283  01667A  6F8E               	movwf	sprintf@f& (0+255),b
 22284  01667C  0EFF               	movlw	high STR_294
 22285  01667E  6F8F               	movwf	(sprintf@f+1)& (0+255),b
 22286  016680  EC0A  F0DD         	call	_sprintf	;wreg free
 22287  016684                     l2248:
 22288                           
 22289                           ;ring_buffer_LUT.c: 421: return result;
 22290                           
 22291                           ; BSR set to: 2
 22292  016684  0EAC               	movlw	low floatToEngineeringFormat@result
 22293  016686  0102               	movlb	2	; () banked
 22294  016688  6F9F               	movwf	?_floatToEngineeringFormat& (0+255),b
 22295  01668A  0E03               	movlw	high floatToEngineeringFormat@result
 22296  01668C  6FA0               	movwf	(?_floatToEngineeringFormat+1)& (0+255),b
 22297                           
 22298                           ; BSR set to: 2
 22299  01668E  0012               	return		;funcret
 22300  016690                     __end_of_floatToEngineeringFormat:
 22301                           	opt callstack 0
 22302                           
 22303 ;; *************** function _sprintf *****************
 22304 ;; Defined at:
 22305 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprintf.c"
 22306 ;; Parameters:    Size  Location     Type
 22307 ;;  wh              2  140[BANK2 ] PTR unsigned char 
 22308 ;;		 -> ftoa@buf(17), floatToEngineeringFormat@result(20), OLED_updateHandler@rev_id_str(17), OLED_updateHandler@dev_id_
      +str(17), 
 22309 ;;		 -> OLED_RAM_Buffer(68), getStringSecondsAsTime@buff(20), 
 22310 ;;  f               2  142[BANK2 ] PTR const unsigned char 
 22311 ;;		 -> STR_355(11), STR_294(5), STR_293(9), STR_292(9), 
 22312 ;;		 -> STR_291(9), STR_290(8), STR_289(9), STR_288(9), 
 22313 ;;		 -> STR_182(7), STR_180(5), STR_173(4), STR_168(4), 
 22314 ;;		 -> STR_163(11), STR_158(11), STR_157(11), STR_156(11), 
 22315 ;;		 -> STR_155(11), STR_154(9), STR_150(11), STR_148(11), 
 22316 ;;		 -> STR_147(11), STR_146(11), STR_145(11), STR_144(9), 
 22317 ;;		 -> STR_143(11), STR_142(9), STR_141(8), STR_140(9), 
 22318 ;;		 -> STR_139(8), STR_138(9), STR_134(5), STR_124(8), 
 22319 ;;		 -> STR_120(8), STR_116(8), STR_112(8), STR_108(9), 
 22320 ;;		 -> STR_103(8), STR_98(8), STR_94(8), STR_89(8), 
 22321 ;;		 -> STR_85(8), STR_81(8), STR_68(7), STR_66(5), 
 22322 ;;		 -> STR_59(11), STR_58(10), STR_57(13), STR_56(12), 
 22323 ;;		 -> STR_55(11), STR_54(10), STR_53(10), STR_52(9), 
 22324 ;;		 -> STR_51(11), STR_50(10), 
 22325 ;; Auto vars:     Size  Location     Type
 22326 ;;  pb              5  154[BANK2 ] struct __prbuf
 22327 ;;  ap              2  152[BANK2 ] PTR void [1]
 22328 ;;		 -> ?_sprintf(2), ?_printf(2), 
 22329 ;; Return value:  Size  Location     Type
 22330 ;;                  2  140[BANK2 ] int 
 22331 ;; Registers used:
 22332 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22333 ;; Tracked objects:
 22334 ;;		On entry : 0/0
 22335 ;;		On exit  : 0/0
 22336 ;;		Unchanged: 0/0
 22337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22338 ;;      Params:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22339 ;;      Locals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22341 ;;      Totals:         0       0       0      19       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22342 ;;Total ram usage:       19 bytes
 22343 ;; Hardware stack levels used:    1
 22344 ;; Hardware stack levels required when called:   14
 22345 ;; This function calls:
 22346 ;;		__doprnt
 22347 ;; This function is called by:
 22348 ;;		_getStringSecondsAsTime
 22349 ;;		_OLED_updateHandler
 22350 ;;		_floatToEngineeringFormat
 22351 ;;		_ftoa
 22352 ;; This function uses a non-reentrant model
 22353 ;;
 22354                           
 22355                           	psect	text78
 22356  01BA14                     __ptext78:
 22357                           	opt callstack 0
 22358  01BA14                     _sprintf:
 22359                           	opt callstack 12
 22360                           
 22361                           ; BSR set to: 2
 22362                           ;incstack = 0
 22363  01BA14  C28C  F29A         	movff	sprintf@wh,sprintf@pb
 22364  01BA18  C28D  F29B         	movff	sprintf@wh+1,sprintf@pb+1
 22365  01BA1C  0E00               	movlw	0
 22366  01BA1E  0102               	movlb	2	; () banked
 22367  01BA20  6F9C               	movwf	(sprintf@pb+2)& (0+255),b
 22368  01BA22  0E00               	movlw	0
 22369  01BA24  6F9D               	movwf	(sprintf@pb+3)& (0+255),b
 22370  01BA26  0E00               	movlw	0
 22371  01BA28  6F9E               	movwf	(sprintf@pb+4)& (0+255),b
 22372  01BA2A  0E90               	movlw	low (?_sprintf+4)
 22373  01BA2C  6F98               	movwf	sprintf@ap& (0+255),b
 22374  01BA2E  0E02               	movlw	high (?_sprintf+4)
 22375  01BA30  6F99               	movwf	(sprintf@ap+1)& (0+255),b
 22376                           
 22377                           ; BSR set to: 2
 22378  01BA32  0E9A               	movlw	low sprintf@pb
 22379  01BA34  6F54               	movwf	__doprnt@pb& (0+255),b
 22380  01BA36  0E02               	movlw	high sprintf@pb
 22381  01BA38  6F55               	movwf	(__doprnt@pb+1)& (0+255),b
 22382  01BA3A  C28E  F256         	movff	sprintf@f,__doprnt@f
 22383  01BA3E  C28F  F257         	movff	sprintf@f+1,__doprnt@f+1
 22384  01BA42  0E98               	movlw	low sprintf@ap
 22385  01BA44  6F58               	movwf	__doprnt@ap& (0+255),b
 22386  01BA46  0E02               	movlw	high sprintf@ap
 22387  01BA48  6F59               	movwf	(__doprnt@ap+1)& (0+255),b
 22388  01BA4A  EC00  F080         	call	__doprnt	;wreg free
 22389  01BA4E  C29A  FFD9         	movff	sprintf@pb,fsr2l
 22390  01BA52  C29B  FFDA         	movff	sprintf@pb+1,fsr2h
 22391  01BA56  0E00               	movlw	0
 22392  01BA58  6EDF               	movwf	indf2,c
 22393  01BA5A  0012               	return		;funcret
 22394  01BA5C                     __end_of_sprintf:
 22395                           	opt callstack 0
 22396                           
 22397 ;; *************** function __doprnt *****************
 22398 ;; Defined at:
 22399 ;;		line 466 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 22400 ;; Parameters:    Size  Location     Type
 22401 ;;  pb              2   84[BANK2 ] PTR struct __prbuf
 22402 ;;		 -> sprintf@pb(5), printf@pb(5), 
 22403 ;;  f               2   86[BANK2 ] PTR const unsigned char 
 22404 ;;		 -> STR_355(11), STR_352(60), STR_351(24), STR_350(24), 
 22405 ;;		 -> STR_349(24), STR_348(27), STR_347(20), STR_346(35), 
 22406 ;;		 -> STR_345(34), STR_344(37), STR_343(34), STR_342(36), 
 22407 ;;		 -> STR_341(35), STR_340(33), STR_339(35), STR_338(20), 
 22408 ;;		 -> STR_337(23), STR_336(20), STR_335(22), STR_334(21), 
 22409 ;;		 -> STR_333(19), STR_332(21), STR_331(27), STR_330(18), 
 22410 ;;		 -> STR_329(11), terminalTextAttributes@print_string(16), STR_299(4), STR_298(4), 
 22411 ;;		 -> STR_297(4), STR_296(4), STR_295(5), STR_294(5), 
 22412 ;;		 -> STR_293(9), STR_292(9), STR_291(9), STR_290(8), 
 22413 ;;		 -> STR_289(9), STR_288(9), STR_287(41), STR_286(96), 
 22414 ;;		 -> STR_285(62), STR_284(34), STR_283(52), STR_282(56), 
 22415 ;;		 -> STR_281(55), STR_280(27), STR_279(65), STR_278(40), 
 22416 ;;		 -> STR_277(64), STR_276(42), STR_275(36), STR_274(63), 
 22417 ;;		 -> STR_273(61), STR_272(47), STR_271(60), STR_270(59), 
 22418 ;;		 -> STR_269(20), STR_268(56), STR_267(52), STR_266(23), 
 22419 ;;		 -> STR_265(45), STR_264(44), STR_263(23), STR_262(48), 
 22420 ;;		 -> STR_261(52), STR_260(58), STR_259(35), STR_258(32), 
 22421 ;;		 -> STR_257(64), STR_256(30), STR_255(31), STR_254(63), 
 22422 ;;		 -> STR_253(33), STR_252(35), STR_251(37), STR_250(40), 
 22423 ;;		 -> STR_249(28), STR_248(46), STR_247(31), STR_246(52), 
 22424 ;;		 -> STR_245(14), STR_244(28), STR_243(50), STR_242(29), 
 22425 ;;		 -> STR_241(36), STR_240(45), STR_239(88), STR_238(37), 
 22426 ;;		 -> STR_237(3), STR_236(30), STR_235(46), STR_234(39), 
 22427 ;;		 -> STR_233(62), STR_232(57), STR_231(653), STR_230(22), 
 22428 ;;		 -> STR_229(3), STR_227(29), STR_225(3), STR_224(47), 
 22429 ;;		 -> STR_223(3), STR_220(24), STR_218(23), STR_216(23), 
 22430 ;;		 -> STR_214(3), STR_213(3), STR_212(54), STR_211(3), 
 22431 ;;		 -> STR_210(56), STR_209(3), STR_208(60), STR_207(61), 
 22432 ;;		 -> STR_206(3), STR_205(62), STR_204(3), STR_203(50), 
 22433 ;;		 -> STR_202(3), STR_201(45), STR_200(3), STR_198(54), 
 22434 ;;		 -> STR_196(4), STR_195(5), STR_193(4), STR_192(5), 
 22435 ;;		 -> STR_182(7), STR_180(5), STR_173(4), STR_168(4), 
 22436 ;;		 -> STR_163(11), STR_158(11), STR_157(11), STR_156(11), 
 22437 ;;		 -> STR_155(11), STR_154(9), STR_150(11), STR_148(11), 
 22438 ;;		 -> STR_147(11), STR_146(11), STR_145(11), STR_144(9), 
 22439 ;;		 -> STR_143(11), STR_142(9), STR_141(8), STR_140(9), 
 22440 ;;		 -> STR_139(8), STR_138(9), STR_134(5), STR_124(8), 
 22441 ;;		 -> STR_120(8), STR_116(8), STR_112(8), STR_108(9), 
 22442 ;;		 -> STR_103(8), STR_98(8), STR_94(8), STR_89(8), 
 22443 ;;		 -> STR_85(8), STR_81(8), STR_68(7), STR_66(5), 
 22444 ;;		 -> STR_59(11), STR_58(10), STR_57(13), STR_56(12), 
 22445 ;;		 -> STR_55(11), STR_54(10), STR_53(10), STR_52(9), 
 22446 ;;		 -> STR_51(11), STR_50(10), STR_12(28), STR_11(23), 
 22447 ;;		 -> STR_10(47), STR_9(30), STR_8(46), STR_7(39), 
 22448 ;;		 -> STR_6(62), STR_5(57), STR_4(39), STR_3(44), 
 22449 ;;		 -> STR_2(52), STR_1(4), 
 22450 ;;  ap              2   88[BANK2 ] PTR PTR void 
 22451 ;;		 -> sprintf@ap(2), printf@ap(2), 
 22452 ;; Auto vars:     Size  Location     Type
 22453 ;;  idx             1   98[BANK2 ] unsigned char 
 22454 ;;  val             4  129[BANK2 ] unsigned long 
 22455 ;;  fval            4  125[BANK2 ] unsigned long 
 22456 ;;  tmpval          4  121[BANK2 ] struct .
 22457 ;;  flag            2  137[BANK2 ] unsigned short 
 22458 ;;  prec            2  135[BANK2 ] int 
 22459 ;;  width           2  133[BANK2 ] int 
 22460 ;;  eexp            2  119[BANK2 ] int 
 22461 ;;  len             2  117[BANK2 ] unsigned int 
 22462 ;;  cp              2  115[BANK2 ] PTR const unsigned char 
 22463 ;;		 -> ?_sprintf(2), ?_printf(2), ftoa@buf(17), STR_353(7), 
 22464 ;;		 -> _doprnt@c(1), freqMeasConvert@qi_period(4), floatToEngineeringFormat@result(20), OLED_updateHandler@rev_id_str(1
      +7), 
 22465 ;;		 -> OLED_updateHandler@dev_id_str(17), OLED_RAM_Buffer(68), getStringSecondsAsTime@buff(20), getStringSecondsAsTime@
      +return_string(40), 
 22466 ;;		 -> STR_49(10), STR_48(13), STR_47(13), STR_46(12), 
 22467 ;;		 -> STR_45(12), STR_44(13), STR_43(12), STR_32(16), 
 22468 ;;		 -> STR_31(22), STR_30(21), STR_29(27), STR_28(41), 
 22469 ;;		 -> STR_27(32), STR_26(19), STR_25(16), STR_24(15), 
 22470 ;;		 -> STR_23(16), STR_17(10), STR_16(6), STR_15(14), 
 22471 ;;		 -> STR_14(9), STR_13(5), LM73Convert@Ambient_Conv(2), LM73Convert@POS5_Conv(2), 
 22472 ;;		 -> LM73Convert@QI_Conv(2), NULL(0), 
 22473 ;;  c               1  139[BANK2 ] unsigned char 
 22474 ;;  d               1    0        unsigned char 
 22475 ;; Return value:  Size  Location     Type
 22476 ;;                  2   84[BANK2 ] int 
 22477 ;; Registers used:
 22478 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22479 ;; Tracked objects:
 22480 ;;		On entry : 0/0
 22481 ;;		On exit  : 0/0
 22482 ;;		Unchanged: 0/0
 22483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22484 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22485 ;;      Locals:         0       0       0      46       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22486 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22487 ;;      Totals:         0       0       0      56       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22488 ;;Total ram usage:       56 bytes
 22489 ;; Hardware stack levels used:    1
 22490 ;; Hardware stack levels required when called:   13
 22491 ;; This function calls:
 22492 ;;		Absolute function
 22493 ;;		___awdiv
 22494 ;;		___fladd
 22495 ;;		___fleq
 22496 ;;		___flge
 22497 ;;		___flmul
 22498 ;;		___flneg
 22499 ;;		___flsub
 22500 ;;		___fltol
 22501 ;;		___lldiv
 22502 ;;		___llmod
 22503 ;;		___wmul
 22504 ;;		___xxtofl
 22505 ;;		__div_to_l_
 22506 ;;		__tdiv_to_l_
 22507 ;;		_fround
 22508 ;;		_isdigit
 22509 ;;		_putch
 22510 ;;		_scale
 22511 ;; This function is called by:
 22512 ;;		_printf
 22513 ;;		_sprintf
 22514 ;; This function uses a non-reentrant model
 22515 ;;
 22516                           
 22517                           	psect	text79
 22518  010000                     __ptext79:
 22519                           	opt callstack 0
 22520  010000                     __doprnt:
 22521                           	opt callstack 13
 22522                           
 22523                           ;doprnt.c: 507: char c;;doprnt.c: 509: int width;;doprnt.c: 512: int prec;;doprnt.c: 520
      +                          : unsigned short flag;;doprnt.c: 527: char d;;doprnt.c: 528: double fval;;doprnt.c: 529:
      +                           int eexp;;doprnt.c: 535: union {;doprnt.c: 536: unsigned long vd;;doprnt.c: 537: double
      +                           integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: unsigned long val;;doprnt.c: 541: unsign
      +                          ed len;;doprnt.c: 542: const char * cp;;doprnt.c: 548: while((c = *f++)) {
 22524                           
 22525                           ;incstack = 0
 22526  010000  EF6F  F08B         	goto	u23170
 22527  010004                     l17942:
 22528                           
 22529                           ; BSR set to: 2
 22530                           ;doprnt.c: 550: if(c != '%')
 22531  010004  0E25               	movlw	37
 22532  010006  198B               	xorwf	__doprnt@c& (0+255),w,b
 22533  010008  B4D8               	btfsc	status,2,c
 22534  01000A  D036               	goto	l17952
 22535                           
 22536                           ; BSR set to: 2
 22537  01000C  EE20 F002          	lfsr	2,2
 22538  010010  5154               	movf	__doprnt@pb& (0+255),w,b
 22539  010012  26D9               	addwf	fsr2l,f,c
 22540  010014  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 22541  010016  22DA               	addwfc	fsr2h,f,c
 22542  010018  50DE               	movf	postinc2,w,c
 22543  01001A  10DE               	iorwf	postinc2,w,c
 22544  01001C  10DE               	iorwf	postinc2,w,c
 22545  01001E  B4D8               	btfsc	status,2,c
 22546  010020  D014               	goto	l17948
 22547                           
 22548                           ; BSR set to: 2
 22549  010022  EE20 F002          	lfsr	2,2
 22550  010026  5154               	movf	__doprnt@pb& (0+255),w,b
 22551  010028  26D9               	addwf	fsr2l,f,c
 22552  01002A  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 22553  01002C  22DA               	addwfc	fsr2h,f,c
 22554  01002E  D802               	call	u21898
 22555  010030  EF6F  F08B         	goto	u23170
 22556  010034                     u21898:
 22557  010034  0005               	push	
 22558  010036  6EFA               	movwf	pclath,c
 22559  010038  50DE               	movf	postinc2,w,c
 22560  01003A  6EFD               	movwf	tosl,c
 22561  01003C  50DE               	movf	postinc2,w,c
 22562  01003E  6EFE               	movwf	tosh,c
 22563  010040  50DE               	movf	postinc2,w,c
 22564  010042  6EFF               	movwf	tosu,c
 22565  010044  50FA               	movf	pclath,w,c
 22566  010046  518B               	movf	__doprnt@c& (0+255),w,b
 22567  010048  0012               	return		;indir
 22568  01004A                     l17948:
 22569                           
 22570                           ; BSR set to: 2
 22571  01004A  C254  FFD9         	movff	__doprnt@pb,fsr2l
 22572  01004E  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 22573  010052  CFDE F25A          	movff	postinc2,??__doprnt
 22574  010056  CFDD F25B          	movff	postdec2,??__doprnt+1
 22575  01005A  C25A  FFD9         	movff	??__doprnt,fsr2l
 22576  01005E  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 22577  010062  C28B  FFDF         	movff	__doprnt@c,indf2
 22578                           
 22579                           ; BSR set to: 2
 22580  010066  C254  FFD9         	movff	__doprnt@pb,fsr2l
 22581  01006A  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 22582  01006E  2ADE               	incf	postinc2,f,c
 22583  010070  0E00               	movlw	0
 22584  010072  22DD               	addwfc	postdec2,f,c
 22585  010074  EF6F  F08B         	goto	u23170
 22586  010078                     l17952:
 22587                           
 22588                           ; BSR set to: 2
 22589                           ;doprnt.c: 555: };doprnt.c: 558: width = 0;
 22590  010078  0E00               	movlw	0
 22591  01007A  6F86               	movwf	(__doprnt@width+1)& (0+255),b
 22592  01007C  0E00               	movlw	0
 22593  01007E  6F85               	movwf	__doprnt@width& (0+255),b
 22594                           
 22595                           ;doprnt.c: 560: flag = 0;
 22596  010080  0E00               	movlw	0
 22597  010082  6F8A               	movwf	(__doprnt@flag+1)& (0+255),b
 22598  010084  0E00               	movlw	0
 22599  010086  6F89               	movwf	__doprnt@flag& (0+255),b
 22600  010088  D00A               	goto	l17962
 22601  01008A                     l17954:
 22602                           
 22603                           ;doprnt.c: 573: flag |= 0x01;
 22604  01008A  0102               	movlb	2	; () banked
 22605  01008C  8189               	bsf	__doprnt@flag& (0+255),0,b
 22606  01008E  D005               	goto	L6
 22607  010090                     l17956:
 22608                           
 22609                           ;doprnt.c: 580: flag |= 0x02;
 22610  010090  0102               	movlb	2	; () banked
 22611  010092  8389               	bsf	__doprnt@flag& (0+255),1,b
 22612  010094  D002               	goto	L6
 22613  010096                     l17958:
 22614                           
 22615                           ;doprnt.c: 592: flag |= 0x04;
 22616  010096  0102               	movlb	2	; () banked
 22617  010098  8589               	bsf	__doprnt@flag& (0+255),2,b
 22618  01009A                     L6:
 22619                           
 22620                           ;doprnt.c: 593: f++;
 22621  01009A  4B56               	infsnz	__doprnt@f& (0+255),f,b
 22622  01009C  2B57               	incf	(__doprnt@f+1)& (0+255),f,b
 22623  01009E                     l17962:
 22624                           
 22625                           ; BSR set to: 2
 22626  01009E  C256  FFF6         	movff	__doprnt@f,tblptrl
 22627  0100A2  C257  FFF7         	movff	__doprnt@f+1,tblptrh
 22628  0100A6  0E00               	movlw	low (__mediumconst shr (0+16))
 22629  0100A8  6EF8               	movwf	tblptru,c
 22630  0100AA  0E0E               	movlw	(high __ramtop+-1)
 22631  0100AC  64F7               	cpfsgt	tblptrh,c
 22632  0100AE  D003               	bra	u21907
 22633  0100B0  0008               	tblrd		*
 22634  0100B2  50F5               	movf	tablat,w,c
 22635  0100B4  D005               	bra	u21900
 22636  0100B6                     u21907:
 22637  0100B6  CFF6 FFE9          	movff	tblptrl,fsr0l
 22638  0100BA  CFF7 FFEA          	movff	tblptrh,fsr0h
 22639  0100BE  50EF               	movf	indf0,w,c
 22640  0100C0                     u21900:
 22641                           
 22642                           ; Switch size 1, requested type "simple"
 22643                           ; Number of cases is 3, Range of values is 32 to 48
 22644                           ; switch strategies available:
 22645                           ; Name         Instructions Cycles
 22646                           ; simple_byte           10     6 (average)
 22647                           ;	Chosen strategy is simple_byte
 22648  0100C0  0A20               	xorlw	32	; case 32
 22649  0100C2  B4D8               	btfsc	status,2,c
 22650  0100C4  D7E2               	goto	l17954
 22651  0100C6  0A0B               	xorlw	11	; case 43
 22652  0100C8  B4D8               	btfsc	status,2,c
 22653  0100CA  D7E2               	goto	l17956
 22654  0100CC  0A1B               	xorlw	27	; case 48
 22655  0100CE  B4D8               	btfsc	status,2,c
 22656  0100D0  D7E2               	goto	l17958
 22657                           
 22658                           ;doprnt.c: 601: if(flag & 0x02)
 22659  0100D2  0102               	movlb	2	; () banked
 22660  0100D4  B389               	btfsc	__doprnt@flag& (0+255),1,b
 22661                           
 22662                           ; BSR set to: 2
 22663                           ;doprnt.c: 602: flag &= ~0x01;
 22664  0100D6  9189               	bcf	__doprnt@flag& (0+255),0,b
 22665                           
 22666                           ; BSR set to: 2
 22667                           ;doprnt.c: 609: if(isdigit((unsigned)*f)) {
 22668  0100D8  C256  FFF6         	movff	__doprnt@f,tblptrl
 22669  0100DC  C257  FFF7         	movff	__doprnt@f+1,tblptrh
 22670  0100E0  0E00               	movlw	low (__mediumconst shr (0+16))
 22671  0100E2  6EF8               	movwf	tblptru,c
 22672  0100E4  0E0E               	movlw	(high __ramtop+-1)
 22673  0100E6  64F7               	cpfsgt	tblptrh,c
 22674  0100E8  D003               	bra	u21927
 22675  0100EA  0008               	tblrd		*
 22676  0100EC  50F5               	movf	tablat,w,c
 22677  0100EE  D005               	bra	u21920
 22678  0100F0                     u21927:
 22679  0100F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 22680  0100F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 22681  0100F8  50EF               	movf	indf0,w,c
 22682  0100FA                     u21920:
 22683  0100FA  ECD9  F0E1         	call	_isdigit
 22684  0100FE  A0D8               	btfss	status,0,c
 22685  010100  D04C               	goto	u21960
 22686                           
 22687                           ;doprnt.c: 610: width = 0;
 22688  010102  0E00               	movlw	0
 22689  010104  0102               	movlb	2	; () banked
 22690  010106  6F86               	movwf	(__doprnt@width+1)& (0+255),b
 22691  010108  0E00               	movlw	0
 22692  01010A  6F85               	movwf	__doprnt@width& (0+255),b
 22693  01010C                     l17970:
 22694                           
 22695                           ;doprnt.c: 612: width *= 10;
 22696  01010C  C285  F200         	movff	__doprnt@width,___wmul@multiplier
 22697  010110  C286  F201         	movff	__doprnt@width+1,___wmul@multiplier+1
 22698  010114  0E00               	movlw	0
 22699  010116  0102               	movlb	2	; () banked
 22700  010118  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 22701  01011A  0E0A               	movlw	10
 22702  01011C  6F02               	movwf	___wmul@multiplicand& (0+255),b
 22703  01011E  EC2E  F0E1         	call	___wmul	;wreg free
 22704  010122  C200  F285         	movff	?___wmul,__doprnt@width
 22705  010126  C201  F286         	movff	?___wmul+1,__doprnt@width+1
 22706                           
 22707                           ;doprnt.c: 613: width += *f++ - '0';
 22708  01012A  0ED0               	movlw	208
 22709  01012C  0102               	movlb	2	; () banked
 22710  01012E  6F5A               	movwf	??__doprnt& (0+255),b
 22711  010130  0EFF               	movlw	255
 22712  010132  6F5B               	movwf	(??__doprnt+1)& (0+255),b
 22713  010134  C256  FFF6         	movff	__doprnt@f,tblptrl
 22714  010138  C257  FFF7         	movff	__doprnt@f+1,tblptrh
 22715  01013C  0E00               	movlw	low (__mediumconst shr (0+16))
 22716  01013E  6EF8               	movwf	tblptru,c
 22717  010140  0E0E               	movlw	(high __ramtop+-1)
 22718  010142  64F7               	cpfsgt	tblptrh,c
 22719  010144  D003               	bra	u21947
 22720  010146  0008               	tblrd		*
 22721  010148  50F5               	movf	tablat,w,c
 22722  01014A  D005               	bra	u21940
 22723  01014C                     u21947:
 22724  01014C  CFF6 FFE9          	movff	tblptrl,fsr0l
 22725  010150  CFF7 FFEA          	movff	tblptrh,fsr0h
 22726  010154  50EF               	movf	indf0,w,c
 22727  010156                     u21940:
 22728  010156  0102               	movlb	2	; () banked
 22729  010158  6F5C               	movwf	(??__doprnt+2)& (0+255),b
 22730  01015A  6B5D               	clrf	(??__doprnt+3)& (0+255),b
 22731  01015C  515A               	movf	??__doprnt& (0+255),w,b
 22732  01015E  275C               	addwf	(??__doprnt+2)& (0+255),f,b
 22733  010160  515B               	movf	(??__doprnt+1)& (0+255),w,b
 22734  010162  235D               	addwfc	(??__doprnt+3)& (0+255),f,b
 22735  010164  515C               	movf	(??__doprnt+2)& (0+255),w,b
 22736  010166  2785               	addwf	__doprnt@width& (0+255),f,b
 22737  010168  515D               	movf	(??__doprnt+3)& (0+255),w,b
 22738  01016A  2386               	addwfc	(__doprnt@width+1)& (0+255),f,b
 22739                           
 22740                           ; BSR set to: 2
 22741  01016C  4B56               	infsnz	__doprnt@f& (0+255),f,b
 22742  01016E  2B57               	incf	(__doprnt@f+1)& (0+255),f,b
 22743                           
 22744                           ; BSR set to: 2
 22745                           ;doprnt.c: 614: } while(isdigit((unsigned)*f));
 22746  010170  C256  FFF6         	movff	__doprnt@f,tblptrl
 22747  010174  C257  FFF7         	movff	__doprnt@f+1,tblptrh
 22748  010178  0E00               	movlw	low (__mediumconst shr (0+16))
 22749  01017A  6EF8               	movwf	tblptru,c
 22750  01017C  0E0E               	movlw	(high __ramtop+-1)
 22751  01017E  64F7               	cpfsgt	tblptrh,c
 22752  010180  D003               	bra	u21957
 22753  010182  0008               	tblrd		*
 22754  010184  50F5               	movf	tablat,w,c
 22755  010186  D005               	bra	u21950
 22756  010188                     u21957:
 22757  010188  CFF6 FFE9          	movff	tblptrl,fsr0l
 22758  01018C  CFF7 FFEA          	movff	tblptrh,fsr0h
 22759  010190  50EF               	movf	indf0,w,c
 22760  010192                     u21950:
 22761  010192  ECD9  F0E1         	call	_isdigit
 22762  010196  B0D8               	btfsc	status,0,c
 22763  010198  D7B9               	goto	l17970
 22764  01019A                     u21960:
 22765                           
 22766                           ;doprnt.c: 620: };doprnt.c: 623: if(*f == '.') {
 22767  01019A  C256  FFF6         	movff	__doprnt@f,tblptrl
 22768  01019E  C257  FFF7         	movff	__doprnt@f+1,tblptrh
 22769  0101A2  0E00               	movlw	low (__mediumconst shr (0+16))
 22770  0101A4  6EF8               	movwf	tblptru,c
 22771  0101A6  0E0E               	movlw	(high __ramtop+-1)
 22772  0101A8  64F7               	cpfsgt	tblptrh,c
 22773  0101AA  D003               	bra	u21977
 22774  0101AC  0008               	tblrd		*
 22775  0101AE  50F5               	movf	tablat,w,c
 22776  0101B0  D005               	bra	u21970
 22777  0101B2                     u21977:
 22778  0101B2  CFF6 FFE9          	movff	tblptrl,fsr0l
 22779  0101B6  CFF7 FFEA          	movff	tblptrh,fsr0h
 22780  0101BA  50EF               	movf	indf0,w,c
 22781  0101BC                     u21970:
 22782  0101BC  0A2E               	xorlw	46
 22783  0101BE  A4D8               	btfss	status,2,c
 22784  0101C0  D049               	goto	l17990
 22785                           
 22786                           ;doprnt.c: 624: flag |= 0x4000;
 22787  0101C2  0102               	movlb	2	; () banked
 22788  0101C4  8D8A               	bsf	(__doprnt@flag+1)& (0+255),6,b
 22789                           
 22790                           ;doprnt.c: 625: f++;
 22791  0101C6  4B56               	infsnz	__doprnt@f& (0+255),f,b
 22792  0101C8  2B57               	incf	(__doprnt@f+1)& (0+255),f,b
 22793                           
 22794                           ; BSR set to: 2
 22795                           ;doprnt.c: 639: {;doprnt.c: 640: prec = 0;
 22796  0101CA  0E00               	movlw	0
 22797  0101CC  6F88               	movwf	(__doprnt@prec+1)& (0+255),b
 22798  0101CE  0E00               	movlw	0
 22799  0101D0  6F87               	movwf	__doprnt@prec& (0+255),b
 22800                           
 22801                           ;doprnt.c: 641: while(isdigit((unsigned)*f))
 22802  0101D2  D02A               	goto	l17988
 22803  0101D4                     l17984:
 22804                           
 22805                           ;doprnt.c: 642: prec = prec*10 + *f++ - '0';
 22806  0101D4  C287  F200         	movff	__doprnt@prec,___wmul@multiplier
 22807  0101D8  C288  F201         	movff	__doprnt@prec+1,___wmul@multiplier+1
 22808  0101DC  0E00               	movlw	0
 22809  0101DE  0102               	movlb	2	; () banked
 22810  0101E0  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 22811  0101E2  0E0A               	movlw	10
 22812  0101E4  6F02               	movwf	___wmul@multiplicand& (0+255),b
 22813  0101E6  EC2E  F0E1         	call	___wmul	;wreg free
 22814  0101EA  C256  FFF6         	movff	__doprnt@f,tblptrl
 22815  0101EE  C257  FFF7         	movff	__doprnt@f+1,tblptrh
 22816  0101F2  0E00               	movlw	low (__mediumconst shr (0+16))
 22817  0101F4  6EF8               	movwf	tblptru,c
 22818  0101F6  0E0E               	movlw	(high __ramtop+-1)
 22819  0101F8  64F7               	cpfsgt	tblptrh,c
 22820  0101FA  D003               	bra	u21997
 22821  0101FC  0008               	tblrd		*
 22822  0101FE  50F5               	movf	tablat,w,c
 22823  010200  D005               	bra	u21990
 22824  010202                     u21997:
 22825  010202  CFF6 FFE9          	movff	tblptrl,fsr0l
 22826  010206  CFF7 FFEA          	movff	tblptrh,fsr0h
 22827  01020A  50EF               	movf	indf0,w,c
 22828  01020C                     u21990:
 22829  01020C  0102               	movlb	2	; () banked
 22830  01020E  6F5A               	movwf	??__doprnt& (0+255),b
 22831  010210  515A               	movf	??__doprnt& (0+255),w,b
 22832  010212  2700               	addwf	?___wmul& (0+255),f,b
 22833  010214  0E00               	movlw	0
 22834  010216  2301               	addwfc	(?___wmul+1)& (0+255),f,b
 22835  010218  0ED0               	movlw	208
 22836  01021A  2500               	addwf	?___wmul& (0+255),w,b
 22837  01021C  6F87               	movwf	__doprnt@prec& (0+255),b
 22838  01021E  0EFF               	movlw	255
 22839  010220  2101               	addwfc	(?___wmul+1)& (0+255),w,b
 22840  010222  6F88               	movwf	(__doprnt@prec+1)& (0+255),b
 22841                           
 22842                           ; BSR set to: 2
 22843  010224  4B56               	infsnz	__doprnt@f& (0+255),f,b
 22844  010226  2B57               	incf	(__doprnt@f+1)& (0+255),f,b
 22845  010228                     l17988:
 22846                           
 22847                           ; BSR set to: 2
 22848  010228  C256  FFF6         	movff	__doprnt@f,tblptrl
 22849  01022C  C257  FFF7         	movff	__doprnt@f+1,tblptrh
 22850  010230  0E00               	movlw	low (__mediumconst shr (0+16))
 22851  010232  6EF8               	movwf	tblptru,c
 22852  010234  0E0E               	movlw	(high __ramtop+-1)
 22853  010236  64F7               	cpfsgt	tblptrh,c
 22854  010238  D003               	bra	u22007
 22855  01023A  0008               	tblrd		*
 22856  01023C  50F5               	movf	tablat,w,c
 22857  01023E  D005               	bra	u22000
 22858  010240                     u22007:
 22859  010240  CFF6 FFE9          	movff	tblptrl,fsr0l
 22860  010244  CFF7 FFEA          	movff	tblptrh,fsr0h
 22861  010248  50EF               	movf	indf0,w,c
 22862  01024A                     u22000:
 22863  01024A  ECD9  F0E1         	call	_isdigit
 22864  01024E  A0D8               	btfss	status,0,c
 22865  010250  D12A               	goto	l18058
 22866  010252  D7C0               	goto	l17984
 22867  010254                     l17990:
 22868                           
 22869                           ;doprnt.c: 645: prec = 0;
 22870  010254  0E00               	movlw	0
 22871  010256  0102               	movlb	2	; () banked
 22872  010258  6F88               	movwf	(__doprnt@prec+1)& (0+255),b
 22873  01025A  0E00               	movlw	0
 22874  01025C  6F87               	movwf	__doprnt@prec& (0+255),b
 22875                           
 22876                           ; BSR set to: 2
 22877                           ;doprnt.c: 647: flag |= 0x1000;
 22878  01025E  898A               	bsf	(__doprnt@flag+1)& (0+255),4,b
 22879  010260  D122               	goto	l18058
 22880  010262                     l17994:
 22881                           
 22882                           ; BSR set to: 2
 22883                           ;doprnt.c: 662: flag |= 0x10;
 22884  010262  8989               	bsf	__doprnt@flag& (0+255),4,b
 22885                           
 22886                           ;doprnt.c: 663: goto loop;
 22887  010264  D120               	goto	l18058
 22888  010266                     l17996:
 22889                           
 22890                           ; BSR set to: 2
 22891                           ;doprnt.c: 682: flag |= 0x400;
 22892  010266  858A               	bsf	(__doprnt@flag+1)& (0+255),2,b
 22893                           
 22894                           ;doprnt.c: 683: break;
 22895  010268  D159               	goto	l18060
 22896  01026A                     l17998:
 22897                           
 22898                           ; BSR set to: 2
 22899                           ;doprnt.c: 737: case 'x':;doprnt.c: 740: flag |= 0x80;
 22900  01026A  8F89               	bsf	__doprnt@flag& (0+255),7,b
 22901                           
 22902                           ;doprnt.c: 742: break;
 22903  01026C  D157               	goto	l18060
 22904  01026E                     l18000:
 22905                           
 22906                           ; BSR set to: 2
 22907                           ;doprnt.c: 753: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 22908  01026E  C258  FFD9         	movff	__doprnt@ap,fsr2l
 22909  010272  C259  FFDA         	movff	__doprnt@ap+1,fsr2h
 22910  010276  CFDF F25A          	movff	indf2,??__doprnt
 22911  01027A  0E02               	movlw	2
 22912  01027C  26DE               	addwf	postinc2,f,c
 22913  01027E  CFDF F25B          	movff	indf2,??__doprnt+1
 22914  010282  0E00               	movlw	0
 22915  010284  22DD               	addwfc	postdec2,f,c
 22916  010286  C25A  FFD9         	movff	??__doprnt,fsr2l
 22917  01028A  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 22918  01028E  CFDE F273          	movff	postinc2,__doprnt@cp
 22919  010292  CFDD F274          	movff	postdec2,__doprnt@cp+1
 22920                           
 22921                           ; BSR set to: 2
 22922                           ;doprnt.c: 759: if(!cp)
 22923  010296  5173               	movf	__doprnt@cp& (0+255),w,b
 22924  010298  1174               	iorwf	(__doprnt@cp+1)& (0+255),w,b
 22925  01029A  A4D8               	btfss	status,2,c
 22926  01029C  D004               	goto	l18006
 22927                           
 22928                           ; BSR set to: 2
 22929                           ;doprnt.c: 760: cp = "(null)";
 22930  01029E  0E6A               	movlw	low STR_353
 22931  0102A0  6F73               	movwf	__doprnt@cp& (0+255),b
 22932  0102A2  0EFF               	movlw	high STR_353
 22933  0102A4  6F74               	movwf	(__doprnt@cp+1)& (0+255),b
 22934  0102A6                     l18006:
 22935                           
 22936                           ; BSR set to: 2
 22937                           ;doprnt.c: 764: len = 0;
 22938  0102A6  0E00               	movlw	0
 22939  0102A8  6F76               	movwf	(__doprnt@len+1)& (0+255),b
 22940  0102AA  0E00               	movlw	0
 22941  0102AC  6F75               	movwf	__doprnt@len& (0+255),b
 22942                           
 22943                           ;doprnt.c: 765: while(cp[len])
 22944  0102AE  D003               	goto	l18010
 22945  0102B0                     l18008:
 22946                           
 22947                           ;doprnt.c: 766: len++;
 22948  0102B0  0102               	movlb	2	; () banked
 22949  0102B2  4B75               	infsnz	__doprnt@len& (0+255),f,b
 22950  0102B4  2B76               	incf	(__doprnt@len+1)& (0+255),f,b
 22951  0102B6                     l18010:
 22952                           
 22953                           ; BSR set to: 2
 22954  0102B6  5175               	movf	__doprnt@len& (0+255),w,b
 22955  0102B8  2573               	addwf	__doprnt@cp& (0+255),w,b
 22956  0102BA  6F5A               	movwf	??__doprnt& (0+255),b
 22957  0102BC  5176               	movf	(__doprnt@len+1)& (0+255),w,b
 22958  0102BE  2174               	addwfc	(__doprnt@cp+1)& (0+255),w,b
 22959  0102C0  6F5B               	movwf	(??__doprnt+1)& (0+255),b
 22960  0102C2  C25A  FFF6         	movff	??__doprnt,tblptrl
 22961  0102C6  C25B  FFF7         	movff	??__doprnt+1,tblptrh
 22962  0102CA  0E00               	movlw	low (__mediumconst shr (0+16))
 22963  0102CC  6EF8               	movwf	tblptru,c
 22964  0102CE  0E0E               	movlw	(high __ramtop+-1)
 22965  0102D0  64F7               	cpfsgt	tblptrh,c
 22966  0102D2  D003               	bra	u22037
 22967  0102D4  0008               	tblrd		*
 22968  0102D6  50F5               	movf	tablat,w,c
 22969  0102D8  D005               	bra	u22030
 22970  0102DA                     u22037:
 22971  0102DA  CFF6 FFE9          	movff	tblptrl,fsr0l
 22972  0102DE  CFF7 FFEA          	movff	tblptrh,fsr0h
 22973  0102E2  50EF               	movf	indf0,w,c
 22974  0102E4                     u22030:
 22975  0102E4  0900               	iorlw	0
 22976  0102E6  A4D8               	btfss	status,2,c
 22977  0102E8  D7E3               	goto	l18008
 22978  0102EA                     u22040:
 22979                           
 22980                           ;doprnt.c: 772: if(prec && prec < len)
 22981  0102EA  0102               	movlb	2	; () banked
 22982  0102EC  5187               	movf	__doprnt@prec& (0+255),w,b
 22983  0102EE  1188               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 22984  0102F0  B4D8               	btfsc	status,2,c
 22985  0102F2  D00A               	goto	l18018
 22986                           
 22987                           ; BSR set to: 2
 22988  0102F4  5175               	movf	__doprnt@len& (0+255),w,b
 22989  0102F6  5D87               	subwf	__doprnt@prec& (0+255),w,b
 22990  0102F8  5176               	movf	(__doprnt@len+1)& (0+255),w,b
 22991  0102FA  5988               	subwfb	(__doprnt@prec+1)& (0+255),w,b
 22992  0102FC  B0D8               	btfsc	status,0,c
 22993  0102FE  D004               	goto	l18018
 22994                           
 22995                           ; BSR set to: 2
 22996                           ;doprnt.c: 773: len = prec;
 22997  010300  C287  F275         	movff	__doprnt@prec,__doprnt@len
 22998  010304  C288  F276         	movff	__doprnt@prec+1,__doprnt@len+1
 22999  010308                     l18018:
 23000                           
 23001                           ; BSR set to: 2
 23002                           ;doprnt.c: 776: if(width > len)
 23003  010308  5185               	movf	__doprnt@width& (0+255),w,b
 23004  01030A  5D75               	subwf	__doprnt@len& (0+255),w,b
 23005  01030C  5186               	movf	(__doprnt@width+1)& (0+255),w,b
 23006  01030E  5976               	subwfb	(__doprnt@len+1)& (0+255),w,b
 23007  010310  B0D8               	btfsc	status,0,c
 23008  010312  D005               	goto	l18022
 23009                           
 23010                           ; BSR set to: 2
 23011                           ;doprnt.c: 777: width -= len;
 23012  010314  5175               	movf	__doprnt@len& (0+255),w,b
 23013  010316  5F85               	subwf	__doprnt@width& (0+255),f,b
 23014  010318  5176               	movf	(__doprnt@len+1)& (0+255),w,b
 23015  01031A  5B86               	subwfb	(__doprnt@width+1)& (0+255),f,b
 23016  01031C  D038               	goto	l18032
 23017  01031E                     l18022:
 23018                           
 23019                           ; BSR set to: 2
 23020                           ;doprnt.c: 778: else;doprnt.c: 779: width = 0;
 23021  01031E  0E00               	movlw	0
 23022  010320  6F86               	movwf	(__doprnt@width+1)& (0+255),b
 23023  010322  0E00               	movlw	0
 23024  010324  6F85               	movwf	__doprnt@width& (0+255),b
 23025  010326  D033               	goto	l18032
 23026  010328                     l18024:
 23027                           
 23028                           ; BSR set to: 2
 23029  010328  EE20 F002          	lfsr	2,2
 23030  01032C  5154               	movf	__doprnt@pb& (0+255),w,b
 23031  01032E  26D9               	addwf	fsr2l,f,c
 23032  010330  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 23033  010332  22DA               	addwfc	fsr2h,f,c
 23034  010334  50DE               	movf	postinc2,w,c
 23035  010336  10DE               	iorwf	postinc2,w,c
 23036  010338  10DE               	iorwf	postinc2,w,c
 23037  01033A  B4D8               	btfsc	status,2,c
 23038  01033C  D013               	goto	l18028
 23039                           
 23040                           ; BSR set to: 2
 23041  01033E  EE20 F002          	lfsr	2,2
 23042  010342  5154               	movf	__doprnt@pb& (0+255),w,b
 23043  010344  26D9               	addwf	fsr2l,f,c
 23044  010346  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 23045  010348  22DA               	addwfc	fsr2h,f,c
 23046  01034A  D801               	call	u22098
 23047  01034C  D020               	goto	l18032
 23048  01034E                     u22098:
 23049  01034E  0005               	push	
 23050  010350  6EFA               	movwf	pclath,c
 23051  010352  50DE               	movf	postinc2,w,c
 23052  010354  6EFD               	movwf	tosl,c
 23053  010356  50DE               	movf	postinc2,w,c
 23054  010358  6EFE               	movwf	tosh,c
 23055  01035A  50DE               	movf	postinc2,w,c
 23056  01035C  6EFF               	movwf	tosu,c
 23057  01035E  50FA               	movf	pclath,w,c
 23058  010360  0E20               	movlw	32
 23059  010362  0012               	return		;indir
 23060  010364                     l18028:
 23061                           
 23062                           ; BSR set to: 2
 23063  010364  C254  FFD9         	movff	__doprnt@pb,fsr2l
 23064  010368  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 23065  01036C  CFDE F25A          	movff	postinc2,??__doprnt
 23066  010370  CFDD F25B          	movff	postdec2,??__doprnt+1
 23067  010374  C25A  FFD9         	movff	??__doprnt,fsr2l
 23068  010378  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 23069  01037C  0E20               	movlw	32
 23070  01037E  6EDF               	movwf	indf2,c
 23071                           
 23072                           ; BSR set to: 2
 23073  010380  C254  FFD9         	movff	__doprnt@pb,fsr2l
 23074  010384  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 23075  010388  2ADE               	incf	postinc2,f,c
 23076  01038A  0E00               	movlw	0
 23077  01038C  22DD               	addwfc	postdec2,f,c
 23078  01038E                     l18032:
 23079  01038E  0102               	movlb	2	; () banked
 23080  010390  0785               	decf	__doprnt@width& (0+255),f,b
 23081  010392  A0D8               	btfss	status,0,c
 23082  010394  0786               	decf	(__doprnt@width+1)& (0+255),f,b
 23083  010396  2985               	incf	__doprnt@width& (0+255),w,b
 23084  010398  E1C7               	bnz	l18024
 23085  01039A  2986               	incf	(__doprnt@width+1)& (0+255),w,b
 23086  01039C  B4D8               	btfsc	status,2,c
 23087  01039E  D05B               	goto	l18046
 23088  0103A0  D7C3               	goto	l18024
 23089  0103A2                     l18034:
 23090                           
 23091                           ; BSR set to: 2
 23092  0103A2  EE20 F002          	lfsr	2,2
 23093  0103A6  5154               	movf	__doprnt@pb& (0+255),w,b
 23094  0103A8  26D9               	addwf	fsr2l,f,c
 23095  0103AA  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 23096  0103AC  22DA               	addwfc	fsr2h,f,c
 23097  0103AE  50DE               	movf	postinc2,w,c
 23098  0103B0  10DE               	iorwf	postinc2,w,c
 23099  0103B2  10DE               	iorwf	postinc2,w,c
 23100  0103B4  B4D8               	btfsc	status,2,c
 23101  0103B6  D027               	goto	l18040
 23102                           
 23103                           ; BSR set to: 2
 23104  0103B8  EE20 F002          	lfsr	2,2
 23105  0103BC  5154               	movf	__doprnt@pb& (0+255),w,b
 23106  0103BE  26D9               	addwf	fsr2l,f,c
 23107  0103C0  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 23108  0103C2  22DA               	addwfc	fsr2h,f,c
 23109  0103C4  D801               	call	u22128
 23110  0103C6  D01B               	goto	u22129
 23111  0103C8                     u22128:
 23112  0103C8  0005               	push	
 23113  0103CA  6EFA               	movwf	pclath,c
 23114  0103CC  50DE               	movf	postinc2,w,c
 23115  0103CE  6EFD               	movwf	tosl,c
 23116  0103D0  50DE               	movf	postinc2,w,c
 23117  0103D2  6EFE               	movwf	tosh,c
 23118  0103D4  50DE               	movf	postinc2,w,c
 23119  0103D6  6EFF               	movwf	tosu,c
 23120  0103D8  50FA               	movf	pclath,w,c
 23121  0103DA  C273  FFF6         	movff	__doprnt@cp,tblptrl
 23122  0103DE  C274  FFF7         	movff	__doprnt@cp+1,tblptrh
 23123  0103E2  0E00               	movlw	low (__mediumconst shr (0+16))
 23124  0103E4  6EF8               	movwf	tblptru,c
 23125  0103E6  0E0E               	movlw	(high __ramtop+-1)
 23126  0103E8  64F7               	cpfsgt	tblptrh,c
 23127  0103EA  D003               	bra	u22137
 23128  0103EC  0008               	tblrd		*
 23129  0103EE  50F5               	movf	tablat,w,c
 23130  0103F0  D005               	bra	u22130
 23131  0103F2                     u22137:
 23132  0103F2  CFF6 FFE9          	movff	tblptrl,fsr0l
 23133  0103F6  CFF7 FFEA          	movff	tblptrh,fsr0h
 23134  0103FA  50EF               	movf	indf0,w,c
 23135  0103FC                     u22130:
 23136  0103FC  0012               	return		;indir
 23137  0103FE                     u22129:
 23138  0103FE  0102               	movlb	2	; () banked
 23139  010400  4B73               	infsnz	__doprnt@cp& (0+255),f,b
 23140  010402  2B74               	incf	(__doprnt@cp+1)& (0+255),f,b
 23141  010404  D028               	goto	l18046
 23142  010406                     l18040:
 23143                           
 23144                           ; BSR set to: 2
 23145  010406  C273  FFF6         	movff	__doprnt@cp,tblptrl
 23146  01040A  C274  FFF7         	movff	__doprnt@cp+1,tblptrh
 23147  01040E  0E00               	movlw	low (__mediumconst shr (0+16))
 23148  010410  6EF8               	movwf	tblptru,c
 23149  010412  C254  FFD9         	movff	__doprnt@pb,fsr2l
 23150  010416  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 23151  01041A  CFDE F25A          	movff	postinc2,??__doprnt
 23152  01041E  CFDD F25B          	movff	postdec2,??__doprnt+1
 23153  010422  C25A  FFD9         	movff	??__doprnt,fsr2l
 23154  010426  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 23155  01042A  0E0E               	movlw	(high __ramtop+-1)
 23156  01042C  64F7               	cpfsgt	tblptrh,c
 23157  01042E  D003               	bra	u22147
 23158  010430  0008               	tblrd		*
 23159  010432  50F5               	movf	tablat,w,c
 23160  010434  D005               	bra	u22140
 23161  010436                     u22147:
 23162  010436  CFF6 FFE9          	movff	tblptrl,fsr0l
 23163  01043A  CFF7 FFEA          	movff	tblptrh,fsr0h
 23164  01043E  50EF               	movf	indf0,w,c
 23165  010440                     u22140:
 23166  010440  6EDF               	movwf	indf2,c
 23167  010442  0102               	movlb	2	; () banked
 23168  010444  4B73               	infsnz	__doprnt@cp& (0+255),f,b
 23169  010446  2B74               	incf	(__doprnt@cp+1)& (0+255),f,b
 23170                           
 23171                           ; BSR set to: 2
 23172  010448  C254  FFD9         	movff	__doprnt@pb,fsr2l
 23173  01044C  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 23174  010450  2ADE               	incf	postinc2,f,c
 23175  010452  0E00               	movlw	0
 23176  010454  22DD               	addwfc	postdec2,f,c
 23177  010456                     l18046:
 23178                           
 23179                           ; BSR set to: 2
 23180  010456  0775               	decf	__doprnt@len& (0+255),f,b
 23181  010458  A0D8               	btfss	status,0,c
 23182  01045A  0776               	decf	(__doprnt@len+1)& (0+255),f,b
 23183  01045C  2975               	incf	__doprnt@len& (0+255),w,b
 23184  01045E  E1A1               	bnz	l18034
 23185  010460  2976               	incf	(__doprnt@len+1)& (0+255),w,b
 23186  010462  B4D8               	btfsc	status,2,c
 23187  010464  EF6F  F08B         	goto	u23170
 23188  010468  D79C               	goto	l18034
 23189  01046A                     l18048:
 23190                           
 23191                           ; BSR set to: 2
 23192                           ;doprnt.c: 818: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 23193  01046A  C258  FFD9         	movff	__doprnt@ap,fsr2l
 23194  01046E  C259  FFDA         	movff	__doprnt@ap+1,fsr2h
 23195  010472  CFDF F25A          	movff	indf2,??__doprnt
 23196  010476  0E02               	movlw	2
 23197  010478  26DE               	addwf	postinc2,f,c
 23198  01047A  CFDF F25B          	movff	indf2,??__doprnt+1
 23199  01047E  0E00               	movlw	0
 23200  010480  22DD               	addwfc	postdec2,f,c
 23201  010482  C25A  FFD9         	movff	??__doprnt,fsr2l
 23202  010486  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 23203  01048A  50DF               	movf	indf2,w,c
 23204  01048C  6F8B               	movwf	__doprnt@c& (0+255),b
 23205  01048E                     l18050:
 23206                           
 23207                           ; BSR set to: 2
 23208                           ;doprnt.c: 824: cp = (char *)&c;
 23209  01048E  0E8B               	movlw	low __doprnt@c
 23210  010490  6F73               	movwf	__doprnt@cp& (0+255),b
 23211  010492  0E02               	movlw	high __doprnt@c
 23212  010494  6F74               	movwf	(__doprnt@cp+1)& (0+255),b
 23213                           
 23214                           ; BSR set to: 2
 23215                           ;doprnt.c: 825: len = 1;
 23216  010496  0E00               	movlw	0
 23217  010498  6F76               	movwf	(__doprnt@len+1)& (0+255),b
 23218  01049A  0E01               	movlw	1
 23219  01049C  6F75               	movwf	__doprnt@len& (0+255),b
 23220                           
 23221                           ;doprnt.c: 826: goto dostring;
 23222  01049E  D725               	goto	u22040
 23223  0104A0                     l18054:
 23224                           
 23225                           ; BSR set to: 2
 23226                           ;doprnt.c: 837: flag |= 0xC0;
 23227  0104A0  0EC0               	movlw	192
 23228  0104A2  1389               	iorwf	__doprnt@flag& (0+255),f,b
 23229                           
 23230                           ;doprnt.c: 838: break;
 23231  0104A4  D03B               	goto	l18060
 23232  0104A6                     l18058:
 23233  0104A6  0102               	movlb	2	; () banked
 23234  0104A8  5156               	movf	__doprnt@f& (0+255),w,b
 23235  0104AA  6F5A               	movwf	??__doprnt& (0+255),b
 23236  0104AC  5157               	movf	(__doprnt@f+1)& (0+255),w,b
 23237  0104AE  6F5B               	movwf	(??__doprnt+1)& (0+255),b
 23238  0104B0  4B56               	infsnz	__doprnt@f& (0+255),f,b
 23239  0104B2  2B57               	incf	(__doprnt@f+1)& (0+255),f,b
 23240  0104B4  C25A  FFF6         	movff	??__doprnt,tblptrl
 23241  0104B8  C25B  FFF7         	movff	??__doprnt+1,tblptrh
 23242  0104BC  0E00               	movlw	low (__mediumconst shr (0+16))
 23243  0104BE  6EF8               	movwf	tblptru,c
 23244  0104C0  0E0E               	movlw	(high __ramtop+-1)
 23245  0104C2  64F7               	cpfsgt	tblptrh,c
 23246  0104C4  D003               	bra	u22167
 23247  0104C6  0008               	tblrd		*
 23248  0104C8  50F5               	movf	tablat,w,c
 23249  0104CA  D005               	bra	u22160
 23250  0104CC                     u22167:
 23251  0104CC  CFF6 FFE9          	movff	tblptrl,fsr0l
 23252  0104D0  CFF7 FFEA          	movff	tblptrh,fsr0h
 23253  0104D4  50EF               	movf	indf0,w,c
 23254  0104D6                     u22160:
 23255  0104D6  0102               	movlb	2	; () banked
 23256  0104D8  6F8B               	movwf	__doprnt@c& (0+255),b
 23257  0104DA  518B               	movf	__doprnt@c& (0+255),w,b
 23258                           
 23259                           ; Switch size 1, requested type "simple"
 23260                           ; Number of cases is 10, Range of values is 0 to 120
 23261                           ; switch strategies available:
 23262                           ; Name         Instructions Cycles
 23263                           ; simple_byte           31    16 (average)
 23264                           ;	Chosen strategy is simple_byte
 23265  0104DC  0A00               	xorlw	0	; case 0
 23266  0104DE  B4D8               	btfsc	status,2,c
 23267  0104E0  EF8D  F08B         	goto	u23190
 23268  0104E4  0A58               	xorlw	88	; case 88
 23269  0104E6  B4D8               	btfsc	status,2,c
 23270  0104E8  D6C0               	goto	l17998
 23271  0104EA  0A3B               	xorlw	59	; case 99
 23272  0104EC  B4D8               	btfsc	status,2,c
 23273  0104EE  D7BD               	goto	l18048
 23274  0104F0  0A07               	xorlw	7	; case 100
 23275  0104F2  B4D8               	btfsc	status,2,c
 23276  0104F4  D013               	goto	l18060
 23277  0104F6  0A02               	xorlw	2	; case 102
 23278  0104F8  B4D8               	btfsc	status,2,c
 23279  0104FA  D6B5               	goto	l17996
 23280  0104FC  0A0F               	xorlw	15	; case 105
 23281  0104FE  B4D8               	btfsc	status,2,c
 23282  010500  D00D               	goto	l18060
 23283  010502  0A05               	xorlw	5	; case 108
 23284  010504  B4D8               	btfsc	status,2,c
 23285  010506  D6AD               	goto	l17994
 23286  010508  0A1F               	xorlw	31	; case 115
 23287  01050A  B4D8               	btfsc	status,2,c
 23288  01050C  D6B0               	goto	l18000
 23289  01050E  0A06               	xorlw	6	; case 117
 23290  010510  B4D8               	btfsc	status,2,c
 23291  010512  D7C6               	goto	l18054
 23292  010514  0A0D               	xorlw	13	; case 120
 23293  010516  B4D8               	btfsc	status,2,c
 23294  010518  D6A8               	goto	l17998
 23295  01051A  D7B9               	goto	l18050
 23296  01051C                     l18060:
 23297                           
 23298                           ; BSR set to: 2
 23299                           ;doprnt.c: 844: if(flag & (0x700)) {
 23300  01051C  0E07               	movlw	7
 23301  01051E  158A               	andwf	(__doprnt@flag+1)& (0+255),w,b
 23302  010520  B4D8               	btfsc	status,2,c
 23303  010522  EF0F  F088         	goto	l18304
 23304                           
 23305                           ; BSR set to: 2
 23306                           ;doprnt.c: 846: if(flag & 0x1000)
 23307  010526  A98A               	btfss	(__doprnt@flag+1)& (0+255),4,b
 23308  010528  D004               	goto	l18066
 23309                           
 23310                           ; BSR set to: 2
 23311                           ;doprnt.c: 848: prec = 6;
 23312  01052A  0E00               	movlw	0
 23313  01052C  6F88               	movwf	(__doprnt@prec+1)& (0+255),b
 23314  01052E  0E06               	movlw	6
 23315  010530  6F87               	movwf	__doprnt@prec& (0+255),b
 23316  010532                     l18066:
 23317                           
 23318                           ; BSR set to: 2
 23319                           ;doprnt.c: 849: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 23320  010532  C258  FFD9         	movff	__doprnt@ap,fsr2l
 23321  010536  C259  FFDA         	movff	__doprnt@ap+1,fsr2h
 23322  01053A  CFDF F25A          	movff	indf2,??__doprnt
 23323  01053E  0E04               	movlw	4
 23324  010540  26DE               	addwf	postinc2,f,c
 23325  010542  CFDF F25B          	movff	indf2,??__doprnt+1
 23326  010546  0E00               	movlw	0
 23327  010548  22DD               	addwfc	postdec2,f,c
 23328  01054A  C25A  FFD9         	movff	??__doprnt,fsr2l
 23329  01054E  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 23330  010552  CFDE F27D          	movff	postinc2,__doprnt@fval
 23331  010556  CFDE F27E          	movff	postinc2,__doprnt@fval+1
 23332  01055A  CFDE F27F          	movff	postinc2,__doprnt@fval+2
 23333  01055E  CFDE F280          	movff	postinc2,__doprnt@fval+3
 23334                           
 23335                           ; BSR set to: 2
 23336                           ;doprnt.c: 850: if(fval < 0.0) {
 23337  010562  AF80               	btfss	(__doprnt@fval+3)& (0+255),7,b
 23338  010564  D015               	goto	l18074
 23339                           
 23340                           ; BSR set to: 2
 23341                           ;doprnt.c: 851: fval = -fval;
 23342  010566  C27D  F200         	movff	__doprnt@fval,___flneg@f1
 23343  01056A  C27E  F201         	movff	__doprnt@fval+1,___flneg@f1+1
 23344  01056E  C27F  F202         	movff	__doprnt@fval+2,___flneg@f1+2
 23345  010572  C280  F203         	movff	__doprnt@fval+3,___flneg@f1+3
 23346  010576  EC80  F0E0         	call	___flneg
 23347  01057A  C200  F27D         	movff	?___flneg,__doprnt@fval
 23348  01057E  C201  F27E         	movff	?___flneg+1,__doprnt@fval+1
 23349  010582  C202  F27F         	movff	?___flneg+2,__doprnt@fval+2
 23350  010586  C203  F280         	movff	?___flneg+3,__doprnt@fval+3
 23351                           
 23352                           ;doprnt.c: 852: flag |= 0x03;
 23353  01058A  0E03               	movlw	3
 23354  01058C  0102               	movlb	2	; () banked
 23355  01058E  1389               	iorwf	__doprnt@flag& (0+255),f,b
 23356  010590                     l18074:
 23357                           
 23358                           ; BSR set to: 2
 23359                           ;doprnt.c: 853: };doprnt.c: 854: eexp = 0;
 23360  010590  0E00               	movlw	0
 23361  010592  6F78               	movwf	(__doprnt@eexp+1)& (0+255),b
 23362  010594  0E00               	movlw	0
 23363  010596  6F77               	movwf	__doprnt@eexp& (0+255),b
 23364                           
 23365                           ; BSR set to: 2
 23366                           ;doprnt.c: 855: if( fval!=0) {
 23367  010598  C27D  F200         	movff	__doprnt@fval,___fleq@ff1
 23368  01059C  C27E  F201         	movff	__doprnt@fval+1,___fleq@ff1+1
 23369  0105A0  C27F  F202         	movff	__doprnt@fval+2,___fleq@ff1+2
 23370  0105A4  C280  F203         	movff	__doprnt@fval+3,___fleq@ff1+3
 23371  0105A8  0E00               	movlw	0
 23372  0105AA  6F04               	movwf	___fleq@ff2& (0+255),b
 23373  0105AC  0E00               	movlw	0
 23374  0105AE  6F05               	movwf	(___fleq@ff2+1)& (0+255),b
 23375  0105B0  0E00               	movlw	0
 23376  0105B2  6F06               	movwf	(___fleq@ff2+2)& (0+255),b
 23377  0105B4  0E00               	movlw	0
 23378  0105B6  6F07               	movwf	(___fleq@ff2+3)& (0+255),b
 23379  0105B8  EC2F  F0D7         	call	___fleq	;wreg free
 23380  0105BC  0102               	movlb	2	; () banked
 23381  0105BE  B0D8               	btfsc	status,0,c
 23382  0105C0  D084               	goto	l18102
 23383                           
 23384                           ; BSR set to: 2
 23385                           ;doprnt.c: 856: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
 23386  0105C2  357F               	rlcf	(__doprnt@fval+2)& (0+255),w,b
 23387  0105C4  3580               	rlcf	(__doprnt@fval+3)& (0+255),w,b
 23388  0105C6  0F82               	addlw	130
 23389  0105C8  6F77               	movwf	__doprnt@eexp& (0+255),b
 23390  0105CA  6B78               	clrf	(__doprnt@eexp+1)& (0+255),b
 23391  0105CC  0EFF               	movlw	255
 23392  0105CE  2378               	addwfc	(__doprnt@eexp+1)& (0+255),f,b
 23393                           
 23394                           ; BSR set to: 2
 23395                           ;doprnt.c: 857: eexp--;
 23396  0105D0  0777               	decf	__doprnt@eexp& (0+255),f,b
 23397  0105D2  A0D8               	btfss	status,0,c
 23398  0105D4  0778               	decf	(__doprnt@eexp+1)& (0+255),f,b
 23399                           
 23400                           ; BSR set to: 2
 23401                           ;doprnt.c: 858: eexp *= 3;
 23402  0105D6  C277  F200         	movff	__doprnt@eexp,___wmul@multiplier
 23403  0105DA  C278  F201         	movff	__doprnt@eexp+1,___wmul@multiplier+1
 23404  0105DE  0E00               	movlw	0
 23405  0105E0  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23406  0105E2  0E03               	movlw	3
 23407  0105E4  6F02               	movwf	___wmul@multiplicand& (0+255),b
 23408  0105E6  EC2E  F0E1         	call	___wmul	;wreg free
 23409  0105EA  C200  F277         	movff	?___wmul,__doprnt@eexp
 23410  0105EE  C201  F278         	movff	?___wmul+1,__doprnt@eexp+1
 23411                           
 23412                           ;doprnt.c: 859: eexp /= 10;
 23413  0105F2  C277  F206         	movff	__doprnt@eexp,___awdiv@dividend
 23414  0105F6  C278  F207         	movff	__doprnt@eexp+1,___awdiv@dividend+1
 23415  0105FA  0E00               	movlw	0
 23416  0105FC  0102               	movlb	2	; () banked
 23417  0105FE  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 23418  010600  0E0A               	movlw	10
 23419  010602  6F08               	movwf	___awdiv@divisor& (0+255),b
 23420  010604  ECBA  F0D7         	call	___awdiv	;wreg free
 23421  010608  C206  F277         	movff	?___awdiv,__doprnt@eexp
 23422  01060C  C207  F278         	movff	?___awdiv+1,__doprnt@eexp+1
 23423                           
 23424                           ;doprnt.c: 860: if(eexp < 0)
 23425  010610  0102               	movlb	2	; () banked
 23426  010612  AF78               	btfss	(__doprnt@eexp+1)& (0+255),7,b
 23427  010614  D003               	goto	l18090
 23428                           
 23429                           ; BSR set to: 2
 23430                           ;doprnt.c: 861: eexp--;
 23431  010616  0777               	decf	__doprnt@eexp& (0+255),f,b
 23432  010618  A0D8               	btfss	status,0,c
 23433  01061A  0778               	decf	(__doprnt@eexp+1)& (0+255),f,b
 23434  01061C                     l18090:
 23435                           
 23436                           ; BSR set to: 2
 23437                           ;doprnt.c: 865: tmpval.integ = scale(-eexp);
 23438  01061C  5177               	movf	__doprnt@eexp& (0+255),w,b
 23439  01061E  0800               	sublw	0
 23440  010620  ECF0  F0A9         	call	_scale
 23441  010624  C227  F279         	movff	?_scale,__doprnt@tmpval
 23442  010628  C228  F27A         	movff	?_scale+1,__doprnt@tmpval+1
 23443  01062C  C229  F27B         	movff	?_scale+2,__doprnt@tmpval+2
 23444  010630  C22A  F27C         	movff	?_scale+3,__doprnt@tmpval+3
 23445                           
 23446                           ;doprnt.c: 866: tmpval.integ *= fval;
 23447  010634  C279  F20E         	movff	__doprnt@tmpval,___flmul@b
 23448  010638  C27A  F20F         	movff	__doprnt@tmpval+1,___flmul@b+1
 23449  01063C  C27B  F210         	movff	__doprnt@tmpval+2,___flmul@b+2
 23450  010640  C27C  F211         	movff	__doprnt@tmpval+3,___flmul@b+3
 23451  010644  C27D  F212         	movff	__doprnt@fval,___flmul@a
 23452  010648  C27E  F213         	movff	__doprnt@fval+1,___flmul@a+1
 23453  01064C  C27F  F214         	movff	__doprnt@fval+2,___flmul@a+2
 23454  010650  C280  F215         	movff	__doprnt@fval+3,___flmul@a+3
 23455  010654  EC48  F0B3         	call	___flmul	;wreg free
 23456  010658  C20E  F279         	movff	?___flmul,__doprnt@tmpval
 23457  01065C  C20F  F27A         	movff	?___flmul+1,__doprnt@tmpval+1
 23458  010660  C210  F27B         	movff	?___flmul+2,__doprnt@tmpval+2
 23459  010664  C211  F27C         	movff	?___flmul+3,__doprnt@tmpval+3
 23460                           
 23461                           ;doprnt.c: 867: if(tmpval.integ < 1.0)
 23462  010668  C279  F200         	movff	__doprnt@tmpval,___flge@ff1
 23463  01066C  C27A  F201         	movff	__doprnt@tmpval+1,___flge@ff1+1
 23464  010670  C27B  F202         	movff	__doprnt@tmpval+2,___flge@ff1+2
 23465  010674  C27C  F203         	movff	__doprnt@tmpval+3,___flge@ff1+3
 23466  010678  0E00               	movlw	0
 23467  01067A  0102               	movlb	2	; () banked
 23468  01067C  6F04               	movwf	___flge@ff2& (0+255),b
 23469  01067E  0E00               	movlw	0
 23470  010680  6F05               	movwf	(___flge@ff2+1)& (0+255),b
 23471  010682  0E80               	movlw	128
 23472  010684  6F06               	movwf	(___flge@ff2+2)& (0+255),b
 23473  010686  0E3F               	movlw	63
 23474  010688  6F07               	movwf	(___flge@ff2+3)& (0+255),b
 23475  01068A  EC57  F0D2         	call	___flge	;wreg free
 23476  01068E  0102               	movlb	2	; () banked
 23477  010690  B0D8               	btfsc	status,0,c
 23478  010692  D004               	goto	l18098
 23479                           
 23480                           ; BSR set to: 2
 23481                           ;doprnt.c: 868: eexp--;
 23482  010694  0777               	decf	__doprnt@eexp& (0+255),f,b
 23483  010696  A0D8               	btfss	status,0,c
 23484  010698  0778               	decf	(__doprnt@eexp+1)& (0+255),f,b
 23485  01069A  D017               	goto	l18102
 23486  01069C                     l18098:
 23487                           
 23488                           ; BSR set to: 2
 23489                           ;doprnt.c: 869: else if(tmpval.integ >= 10.0)
 23490  01069C  C279  F200         	movff	__doprnt@tmpval,___flge@ff1
 23491  0106A0  C27A  F201         	movff	__doprnt@tmpval+1,___flge@ff1+1
 23492  0106A4  C27B  F202         	movff	__doprnt@tmpval+2,___flge@ff1+2
 23493  0106A8  C27C  F203         	movff	__doprnt@tmpval+3,___flge@ff1+3
 23494  0106AC  0E00               	movlw	0
 23495  0106AE  6F04               	movwf	___flge@ff2& (0+255),b
 23496  0106B0  0E00               	movlw	0
 23497  0106B2  6F05               	movwf	(___flge@ff2+1)& (0+255),b
 23498  0106B4  0E20               	movlw	32
 23499  0106B6  6F06               	movwf	(___flge@ff2+2)& (0+255),b
 23500  0106B8  0E41               	movlw	65
 23501  0106BA  6F07               	movwf	(___flge@ff2+3)& (0+255),b
 23502  0106BC  EC57  F0D2         	call	___flge	;wreg free
 23503  0106C0  0102               	movlb	2	; () banked
 23504  0106C2  A0D8               	btfss	status,0,c
 23505  0106C4  D002               	goto	l18102
 23506                           
 23507                           ; BSR set to: 2
 23508                           ;doprnt.c: 870: eexp++;
 23509  0106C6  4B77               	infsnz	__doprnt@eexp& (0+255),f,b
 23510  0106C8  2B78               	incf	(__doprnt@eexp+1)& (0+255),f,b
 23511  0106CA                     l18102:
 23512                           
 23513                           ; BSR set to: 2
 23514                           ;doprnt.c: 871: };doprnt.c: 1131: if(prec <= 12)
 23515  0106CA  BF88               	btfsc	(__doprnt@prec+1)& (0+255),7,b
 23516  0106CC  D006               	goto	u22240
 23517  0106CE  5188               	movf	(__doprnt@prec+1)& (0+255),w,b
 23518  0106D0  E121               	bnz	l18106
 23519  0106D2  0E0D               	movlw	13
 23520  0106D4  5D87               	subwf	__doprnt@prec& (0+255),w,b
 23521  0106D6  B0D8               	btfsc	status,0,c
 23522  0106D8  D01D               	goto	l18106
 23523  0106DA                     u22240:
 23524                           
 23525                           ; BSR set to: 2
 23526                           ;doprnt.c: 1132: fval += fround((unsigned int)prec);
 23527  0106DA  C27D  F234         	movff	__doprnt@fval,___fladd@b
 23528  0106DE  C27E  F235         	movff	__doprnt@fval+1,___fladd@b+1
 23529  0106E2  C27F  F236         	movff	__doprnt@fval+2,___fladd@b+2
 23530  0106E6  C280  F237         	movff	__doprnt@fval+3,___fladd@b+3
 23531  0106EA  5187               	movf	__doprnt@prec& (0+255),w,b
 23532  0106EC  EC43  F0BE         	call	_fround
 23533  0106F0  C227  F238         	movff	?_fround,___fladd@a
 23534  0106F4  C228  F239         	movff	?_fround+1,___fladd@a+1
 23535  0106F8  C229  F23A         	movff	?_fround+2,___fladd@a+2
 23536  0106FC  C22A  F23B         	movff	?_fround+3,___fladd@a+3
 23537  010700  EC45  F0B8         	call	___fladd	;wreg free
 23538  010704  C234  F27D         	movff	?___fladd,__doprnt@fval
 23539  010708  C235  F27E         	movff	?___fladd+1,__doprnt@fval+1
 23540  01070C  C236  F27F         	movff	?___fladd+2,__doprnt@fval+2
 23541  010710  C237  F280         	movff	?___fladd+3,__doprnt@fval+3
 23542  010714                     l18106:
 23543                           
 23544                           ;doprnt.c: 1135: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
 23545  010714  0102               	movlb	2	; () banked
 23546  010716  BF78               	btfsc	(__doprnt@eexp+1)& (0+255),7,b
 23547  010718  D006               	goto	u22250
 23548  01071A  5178               	movf	(__doprnt@eexp+1)& (0+255),w,b
 23549  01071C  E131               	bnz	l18114
 23550  01071E  0E0A               	movlw	10
 23551  010720  5D77               	subwf	__doprnt@eexp& (0+255),w,b
 23552  010722  B0D8               	btfsc	status,0,c
 23553  010724  D02D               	goto	u22280
 23554  010726                     u22250:
 23555                           
 23556                           ; BSR set to: 2
 23557  010726  C27D  F200         	movff	__doprnt@fval,___fleq@ff1
 23558  01072A  C27E  F201         	movff	__doprnt@fval+1,___fleq@ff1+1
 23559  01072E  C27F  F202         	movff	__doprnt@fval+2,___fleq@ff1+2
 23560  010732  C280  F203         	movff	__doprnt@fval+3,___fleq@ff1+3
 23561  010736  0E00               	movlw	0
 23562  010738  6F04               	movwf	___fleq@ff2& (0+255),b
 23563  01073A  0E00               	movlw	0
 23564  01073C  6F05               	movwf	(___fleq@ff2+1)& (0+255),b
 23565  01073E  0E00               	movlw	0
 23566  010740  6F06               	movwf	(___fleq@ff2+2)& (0+255),b
 23567  010742  0E00               	movlw	0
 23568  010744  6F07               	movwf	(___fleq@ff2+3)& (0+255),b
 23569  010746  EC2F  F0D7         	call	___fleq	;wreg free
 23570  01074A  0102               	movlb	2	; () banked
 23571  01074C  B0D8               	btfsc	status,0,c
 23572  01074E  D062               	goto	l18128
 23573                           
 23574                           ; BSR set to: 2
 23575  010750  C27D  F230         	movff	__doprnt@fval,___fltol@f1
 23576  010754  C27E  F231         	movff	__doprnt@fval+1,___fltol@f1+1
 23577  010758  C27F  F232         	movff	__doprnt@fval+2,___fltol@f1+2
 23578  01075C  C280  F233         	movff	__doprnt@fval+3,___fltol@f1+3
 23579  010760  ECEF  F0D3         	call	___fltol	;wreg free
 23580  010764  0102               	movlb	2	; () banked
 23581  010766  5130               	movf	?___fltol& (0+255),w,b
 23582  010768  1131               	iorwf	(?___fltol+1)& (0+255),w,b
 23583  01076A  1132               	iorwf	(?___fltol+2)& (0+255),w,b
 23584  01076C  1133               	iorwf	(?___fltol+3)& (0+255),w,b
 23585  01076E  B4D8               	btfsc	status,2,c
 23586                           
 23587                           ; BSR set to: 2
 23588  010770  BF78               	btfsc	(__doprnt@eexp+1)& (0+255),7,b
 23589  010772  D050               	goto	l18128
 23590  010774  5178               	movf	(__doprnt@eexp+1)& (0+255),w,b
 23591  010776  E104               	bnz	u22280
 23592  010778  0E02               	movlw	2
 23593  01077A  5D77               	subwf	__doprnt@eexp& (0+255),w,b
 23594  01077C  A0D8               	btfss	status,0,c
 23595  01077E  D04A               	goto	l18128
 23596  010780                     u22280:
 23597  010780                     l18114:
 23598                           
 23599                           ; BSR set to: 2
 23600                           ;doprnt.c: 1139: if(tmpval.integ < 4.294967296){
 23601  010780  C279  F200         	movff	__doprnt@tmpval,___flge@ff1
 23602  010784  C27A  F201         	movff	__doprnt@tmpval+1,___flge@ff1+1
 23603  010788  C27B  F202         	movff	__doprnt@tmpval+2,___flge@ff1+2
 23604  01078C  C27C  F203         	movff	__doprnt@tmpval+3,___flge@ff1+3
 23605  010790  0E5F               	movlw	95
 23606  010792  6F04               	movwf	___flge@ff2& (0+255),b
 23607  010794  0E70               	movlw	112
 23608  010796  6F05               	movwf	(___flge@ff2+1)& (0+255),b
 23609  010798  0E89               	movlw	137
 23610  01079A  6F06               	movwf	(___flge@ff2+2)& (0+255),b
 23611  01079C  0E40               	movlw	64
 23612  01079E  6F07               	movwf	(___flge@ff2+3)& (0+255),b
 23613  0107A0  EC57  F0D2         	call	___flge	;wreg free
 23614  0107A4  0102               	movlb	2	; () banked
 23615  0107A6  B0D8               	btfsc	status,0,c
 23616  0107A8  D002               	goto	l18118
 23617                           
 23618                           ; BSR set to: 2
 23619                           ;doprnt.c: 1140: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
 23620  0107AA  0EF7               	movlw	247
 23621  0107AC  D001               	goto	L7
 23622  0107AE                     l18118:
 23623                           
 23624                           ; BSR set to: 2
 23625                           ;doprnt.c: 1142: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
 23626  0107AE  0EF8               	movlw	248
 23627  0107B0                     L7:
 23628  0107B0  2777               	addwf	__doprnt@eexp& (0+255),f,b
 23629  0107B2  0EFF               	movlw	255
 23630  0107B4  2378               	addwfc	(__doprnt@eexp+1)& (0+255),f,b
 23631                           
 23632                           ; BSR set to: 2
 23633                           ;doprnt.c: 1145: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 23634  0107B6  5177               	movf	__doprnt@eexp& (0+255),w,b
 23635  0107B8  ECF0  F0A9         	call	_scale
 23636  0107BC  C227  F279         	movff	?_scale,__doprnt@tmpval
 23637  0107C0  C228  F27A         	movff	?_scale+1,__doprnt@tmpval+1
 23638  0107C4  C229  F27B         	movff	?_scale+2,__doprnt@tmpval+2
 23639  0107C8  C22A  F27C         	movff	?_scale+3,__doprnt@tmpval+3
 23640  0107CC  C27D  F200         	movff	__doprnt@fval,__div_to_l_@f1
 23641  0107D0  C27E  F201         	movff	__doprnt@fval+1,__div_to_l_@f1+1
 23642  0107D4  C27F  F202         	movff	__doprnt@fval+2,__div_to_l_@f1+2
 23643  0107D8  C280  F203         	movff	__doprnt@fval+3,__div_to_l_@f1+3
 23644  0107DC  C279  F204         	movff	__doprnt@tmpval,__div_to_l_@f2
 23645  0107E0  C27A  F205         	movff	__doprnt@tmpval+1,__div_to_l_@f2+1
 23646  0107E4  C27B  F206         	movff	__doprnt@tmpval+2,__div_to_l_@f2+2
 23647  0107E8  C27C  F207         	movff	__doprnt@tmpval+3,__div_to_l_@f2+3
 23648  0107EC  ECFC  F0CF         	call	__div_to_l_	;wreg free
 23649  0107F0  C200  F281         	movff	?__div_to_l_,__doprnt@val
 23650  0107F4  C201  F282         	movff	?__div_to_l_+1,__doprnt@val+1
 23651  0107F8  C202  F283         	movff	?__div_to_l_+2,__doprnt@val+2
 23652  0107FC  C203  F284         	movff	?__div_to_l_+3,__doprnt@val+3
 23653                           
 23654                           ;doprnt.c: 1148: fval = 0.0;
 23655  010800  0E00               	movlw	0
 23656  010802  0102               	movlb	2	; () banked
 23657  010804  6F7D               	movwf	__doprnt@fval& (0+255),b
 23658  010806  0E00               	movlw	0
 23659  010808  6F7E               	movwf	(__doprnt@fval+1)& (0+255),b
 23660  01080A  0E00               	movlw	0
 23661  01080C  6F7F               	movwf	(__doprnt@fval+2)& (0+255),b
 23662  01080E  0E00               	movlw	0
 23663  010810  6F80               	movwf	(__doprnt@fval+3)& (0+255),b
 23664                           
 23665                           ;doprnt.c: 1149: } else {
 23666  010812  D03C               	goto	l18132
 23667  010814                     l18128:
 23668                           
 23669                           ; BSR set to: 2
 23670                           ;doprnt.c: 1150: val = (unsigned long)fval;
 23671  010814  C27D  F230         	movff	__doprnt@fval,___fltol@f1
 23672  010818  C27E  F231         	movff	__doprnt@fval+1,___fltol@f1+1
 23673  01081C  C27F  F232         	movff	__doprnt@fval+2,___fltol@f1+2
 23674  010820  C280  F233         	movff	__doprnt@fval+3,___fltol@f1+3
 23675  010824  ECEF  F0D3         	call	___fltol	;wreg free
 23676  010828  C230  F281         	movff	?___fltol,__doprnt@val
 23677  01082C  C231  F282         	movff	?___fltol+1,__doprnt@val+1
 23678  010830  C232  F283         	movff	?___fltol+2,__doprnt@val+2
 23679  010834  C233  F284         	movff	?___fltol+3,__doprnt@val+3
 23680                           
 23681                           ;doprnt.c: 1151: fval -= (double)val;
 23682  010838  C27D  F24C         	movff	__doprnt@fval,___flsub@b
 23683  01083C  C27E  F24D         	movff	__doprnt@fval+1,___flsub@b+1
 23684  010840  C27F  F24E         	movff	__doprnt@fval+2,___flsub@b+2
 23685  010844  C280  F24F         	movff	__doprnt@fval+3,___flsub@b+3
 23686  010848  C281  F23E         	movff	__doprnt@val,___xxtofl@val
 23687  01084C  C282  F23F         	movff	__doprnt@val+1,___xxtofl@val+1
 23688  010850  C283  F240         	movff	__doprnt@val+2,___xxtofl@val+2
 23689  010854  C284  F241         	movff	__doprnt@val+3,___xxtofl@val+3
 23690  010858  0E00               	movlw	0
 23691  01085A  EC88  F0CC         	call	___xxtofl
 23692  01085E  C23E  F250         	movff	?___xxtofl,___flsub@a
 23693  010862  C23F  F251         	movff	?___xxtofl+1,___flsub@a+1
 23694  010866  C240  F252         	movff	?___xxtofl+2,___flsub@a+2
 23695  01086A  C241  F253         	movff	?___xxtofl+3,___flsub@a+3
 23696  01086E  EC2E  F0DD         	call	___flsub	;wreg free
 23697  010872  C24C  F27D         	movff	?___flsub,__doprnt@fval
 23698  010876  C24D  F27E         	movff	?___flsub+1,__doprnt@fval+1
 23699  01087A  C24E  F27F         	movff	?___flsub+2,__doprnt@fval+2
 23700  01087E  C24F  F280         	movff	?___flsub+3,__doprnt@fval+3
 23701                           
 23702                           ;doprnt.c: 1152: eexp = 0;
 23703  010882  0E00               	movlw	0
 23704  010884  0102               	movlb	2	; () banked
 23705  010886  6F78               	movwf	(__doprnt@eexp+1)& (0+255),b
 23706  010888  0E00               	movlw	0
 23707  01088A  6F77               	movwf	__doprnt@eexp& (0+255),b
 23708  01088C                     l18132:
 23709                           
 23710                           ; BSR set to: 2
 23711                           ;doprnt.c: 1153: };doprnt.c: 1155: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
 23712  01088C  0E01               	movlw	1
 23713  01088E  6F8B               	movwf	__doprnt@c& (0+255),b
 23714  010890                     l18134:
 23715                           
 23716                           ; BSR set to: 2
 23717  010890  0E0A               	movlw	10
 23718  010892  198B               	xorwf	__doprnt@c& (0+255),w,b
 23719  010894  B4D8               	btfsc	status,2,c
 23720  010896  D01B               	goto	l18146
 23721                           
 23722                           ; BSR set to: 2
 23723                           ;doprnt.c: 1156: if(val < dpowers[c])
 23724  010898  518B               	movf	__doprnt@c& (0+255),w,b
 23725  01089A  0D04               	mullw	4
 23726  01089C  0E47               	movlw	low _dpowers
 23727  01089E  24F3               	addwf	prodl,w,c
 23728  0108A0  6EF6               	movwf	tblptrl,c
 23729  0108A2  0EE8               	movlw	high _dpowers
 23730  0108A4  20F4               	addwfc	prodh,w,c
 23731  0108A6  6EF7               	movwf	tblptrh,c
 23732  0108A8                     	if	1	;There are 3 active tblptr bytes
 23733  0108A8  6AF8               	clrf	tblptru,c
 23734  0108AA  0E00               	movlw	low (__mediumconst shr (0+16))
 23735  0108AC  22F8               	addwfc	tblptru,f,c
 23736  0108AE                     	endif
 23737  0108AE  0009               	tblrd		*+
 23738  0108B0  50F5               	movf	tablat,w,c
 23739  0108B2  5D81               	subwf	__doprnt@val& (0+255),w,b
 23740  0108B4  0009               	tblrd		*+
 23741  0108B6  50F5               	movf	tablat,w,c
 23742  0108B8  5982               	subwfb	(__doprnt@val+1)& (0+255),w,b
 23743  0108BA  0009               	tblrd		*+
 23744  0108BC  50F5               	movf	tablat,w,c
 23745  0108BE  5983               	subwfb	(__doprnt@val+2)& (0+255),w,b
 23746  0108C0  0009               	tblrd		*+
 23747  0108C2  50F5               	movf	tablat,w,c
 23748  0108C4  5984               	subwfb	(__doprnt@val+3)& (0+255),w,b
 23749  0108C6  A0D8               	btfss	status,0,c
 23750  0108C8  D002               	goto	l18146
 23751                           
 23752                           ; BSR set to: 2
 23753  0108CA  2B8B               	incf	__doprnt@c& (0+255),f,b
 23754  0108CC  D7E1               	goto	l18134
 23755  0108CE                     l18146:
 23756                           
 23757                           ; BSR set to: 2
 23758                           ;doprnt.c: 1161: width -= prec + c + eexp;
 23759  0108CE  518B               	movf	__doprnt@c& (0+255),w,b
 23760  0108D0  2587               	addwf	__doprnt@prec& (0+255),w,b
 23761  0108D2  6F5A               	movwf	??__doprnt& (0+255),b
 23762  0108D4  0E00               	movlw	0
 23763  0108D6  2188               	addwfc	(__doprnt@prec+1)& (0+255),w,b
 23764  0108D8  6F5B               	movwf	(??__doprnt+1)& (0+255),b
 23765  0108DA  5177               	movf	__doprnt@eexp& (0+255),w,b
 23766  0108DC  275A               	addwf	??__doprnt& (0+255),f,b
 23767  0108DE  5178               	movf	(__doprnt@eexp+1)& (0+255),w,b
 23768  0108E0  235B               	addwfc	(??__doprnt+1)& (0+255),f,b
 23769  0108E2  515A               	movf	??__doprnt& (0+255),w,b
 23770  0108E4  5F85               	subwf	__doprnt@width& (0+255),f,b
 23771  0108E6  515B               	movf	(??__doprnt+1)& (0+255),w,b
 23772  0108E8  5B86               	subwfb	(__doprnt@width+1)& (0+255),f,b
 23773                           
 23774                           ;doprnt.c: 1162: if(;doprnt.c: 1166: prec)
 23775  0108EA  5187               	movf	__doprnt@prec& (0+255),w,b
 23776  0108EC  1188               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 23777  0108EE  B4D8               	btfsc	status,2,c
 23778  0108F0  D003               	goto	l18150
 23779                           
 23780                           ; BSR set to: 2
 23781                           ;doprnt.c: 1167: width--;
 23782  0108F2  0785               	decf	__doprnt@width& (0+255),f,b
 23783  0108F4  A0D8               	btfss	status,0,c
 23784  0108F6  0786               	decf	(__doprnt@width+1)& (0+255),f,b
 23785  0108F8                     l18150:
 23786                           
 23787                           ; BSR set to: 2
 23788                           ;doprnt.c: 1168: if(flag & 0x03)
 23789  0108F8  0E03               	movlw	3
 23790  0108FA  1589               	andwf	__doprnt@flag& (0+255),w,b
 23791  0108FC  6F5A               	movwf	??__doprnt& (0+255),b
 23792  0108FE  0E00               	movlw	0
 23793  010900  158A               	andwf	(__doprnt@flag+1)& (0+255),w,b
 23794  010902  6F5B               	movwf	(??__doprnt+1)& (0+255),b
 23795  010904  515A               	movf	??__doprnt& (0+255),w,b
 23796  010906  115B               	iorwf	(??__doprnt+1)& (0+255),w,b
 23797  010908  B4D8               	btfsc	status,2,c
 23798  01090A  D003               	goto	l18154
 23799                           
 23800                           ; BSR set to: 2
 23801                           ;doprnt.c: 1169: width--;
 23802  01090C  0785               	decf	__doprnt@width& (0+255),f,b
 23803  01090E  A0D8               	btfss	status,0,c
 23804  010910  0786               	decf	(__doprnt@width+1)& (0+255),f,b
 23805  010912                     l18154:
 23806                           
 23807                           ; BSR set to: 2
 23808                           ;doprnt.c: 1172: if(flag & 0x04) {
 23809  010912  A589               	btfss	__doprnt@flag& (0+255),2,b
 23810  010914  D0F0               	goto	l18206
 23811                           
 23812                           ; BSR set to: 2
 23813                           ;doprnt.c: 1174: if(flag & 0x02)
 23814  010916  A389               	btfss	__doprnt@flag& (0+255),1,b
 23815  010918  D041               	goto	l2489
 23816                           
 23817                           ; BSR set to: 2
 23818  01091A  EE20 F002          	lfsr	2,2
 23819  01091E  5154               	movf	__doprnt@pb& (0+255),w,b
 23820  010920  26D9               	addwf	fsr2l,f,c
 23821  010922  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 23822  010924  22DA               	addwfc	fsr2h,f,c
 23823  010926  50DE               	movf	postinc2,w,c
 23824  010928  10DE               	iorwf	postinc2,w,c
 23825  01092A  10DE               	iorwf	postinc2,w,c
 23826  01092C  B4D8               	btfsc	status,2,c
 23827  01092E  D01D               	goto	l2491
 23828                           
 23829                           ; BSR set to: 2
 23830  010930  B189               	btfsc	__doprnt@flag& (0+255),0,b
 23831  010932  D004               	goto	l18164
 23832                           
 23833                           ; BSR set to: 2
 23834  010934  0E00               	movlw	0
 23835  010936  6F64               	movwf	(__doprnt$4975+1)& (0+255),b
 23836  010938  0E2B               	movlw	43
 23837  01093A  D003               	goto	L8
 23838  01093C                     l18164:
 23839                           
 23840                           ; BSR set to: 2
 23841  01093C  0E00               	movlw	0
 23842  01093E  6F64               	movwf	(__doprnt$4975+1)& (0+255),b
 23843  010940  0E2D               	movlw	45
 23844  010942                     L8:
 23845  010942  6F63               	movwf	__doprnt$4975& (0+255),b
 23846                           
 23847                           ; BSR set to: 2
 23848  010944  EE20 F002          	lfsr	2,2
 23849  010948  5154               	movf	__doprnt@pb& (0+255),w,b
 23850  01094A  26D9               	addwf	fsr2l,f,c
 23851  01094C  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 23852  01094E  22DA               	addwfc	fsr2h,f,c
 23853  010950  D801               	call	u22388
 23854  010952  D091               	goto	l18194
 23855  010954                     u22388:
 23856  010954  0005               	push	
 23857  010956  6EFA               	movwf	pclath,c
 23858  010958  50DE               	movf	postinc2,w,c
 23859  01095A  6EFD               	movwf	tosl,c
 23860  01095C  50DE               	movf	postinc2,w,c
 23861  01095E  6EFE               	movwf	tosh,c
 23862  010960  50DE               	movf	postinc2,w,c
 23863  010962  6EFF               	movwf	tosu,c
 23864  010964  50FA               	movf	pclath,w,c
 23865  010966  5163               	movf	__doprnt$4975& (0+255),w,b
 23866  010968  0012               	return		;indir
 23867  01096A                     l2491:
 23868                           
 23869                           ; BSR set to: 2
 23870  01096A  B189               	btfsc	__doprnt@flag& (0+255),0,b
 23871  01096C  D004               	goto	l18170
 23872                           
 23873                           ; BSR set to: 2
 23874  01096E  0E00               	movlw	0
 23875  010970  6F66               	movwf	(__doprnt$4976+1)& (0+255),b
 23876  010972  0E2B               	movlw	43
 23877  010974  D003               	goto	L9
 23878  010976                     l18170:
 23879                           
 23880                           ; BSR set to: 2
 23881  010976  0E00               	movlw	0
 23882  010978  6F66               	movwf	(__doprnt$4976+1)& (0+255),b
 23883  01097A  0E2D               	movlw	45
 23884  01097C                     L9:
 23885  01097C  6F65               	movwf	__doprnt$4976& (0+255),b
 23886                           
 23887                           ; BSR set to: 2
 23888  01097E  C254  FFD9         	movff	__doprnt@pb,fsr2l
 23889  010982  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 23890  010986  CFDE F25A          	movff	postinc2,??__doprnt
 23891  01098A  CFDD F25B          	movff	postdec2,??__doprnt+1
 23892  01098E  C25A  FFD9         	movff	??__doprnt,fsr2l
 23893  010992  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 23894  010996  C265  FFDF         	movff	__doprnt$4976,indf2
 23895  01099A  D02E               	goto	l18182
 23896  01099C                     l2489:
 23897                           
 23898                           ; BSR set to: 2
 23899                           ;doprnt.c: 1180: else;doprnt.c: 1183: if(flag & 0x01)
 23900  01099C  A189               	btfss	__doprnt@flag& (0+255),0,b
 23901  01099E  D06B               	goto	l18194
 23902                           
 23903                           ; BSR set to: 2
 23904  0109A0  EE20 F002          	lfsr	2,2
 23905  0109A4  5154               	movf	__doprnt@pb& (0+255),w,b
 23906  0109A6  26D9               	addwf	fsr2l,f,c
 23907  0109A8  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 23908  0109AA  22DA               	addwfc	fsr2h,f,c
 23909  0109AC  50DE               	movf	postinc2,w,c
 23910  0109AE  10DE               	iorwf	postinc2,w,c
 23911  0109B0  10DE               	iorwf	postinc2,w,c
 23912  0109B2  B4D8               	btfsc	status,2,c
 23913  0109B4  D013               	goto	l18180
 23914                           
 23915                           ; BSR set to: 2
 23916  0109B6  EE20 F002          	lfsr	2,2
 23917  0109BA  5154               	movf	__doprnt@pb& (0+255),w,b
 23918  0109BC  26D9               	addwf	fsr2l,f,c
 23919  0109BE  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 23920  0109C0  22DA               	addwfc	fsr2h,f,c
 23921  0109C2  D801               	call	u22428
 23922  0109C4  D058               	goto	l18194
 23923  0109C6                     u22428:
 23924  0109C6  0005               	push	
 23925  0109C8  6EFA               	movwf	pclath,c
 23926  0109CA  50DE               	movf	postinc2,w,c
 23927  0109CC  6EFD               	movwf	tosl,c
 23928  0109CE  50DE               	movf	postinc2,w,c
 23929  0109D0  6EFE               	movwf	tosh,c
 23930  0109D2  50DE               	movf	postinc2,w,c
 23931  0109D4  6EFF               	movwf	tosu,c
 23932  0109D6  50FA               	movf	pclath,w,c
 23933  0109D8  0E20               	movlw	32
 23934  0109DA  0012               	return		;indir
 23935  0109DC                     l18180:
 23936                           
 23937                           ; BSR set to: 2
 23938  0109DC  C254  FFD9         	movff	__doprnt@pb,fsr2l
 23939  0109E0  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 23940  0109E4  CFDE F25A          	movff	postinc2,??__doprnt
 23941  0109E8  CFDD F25B          	movff	postdec2,??__doprnt+1
 23942  0109EC  C25A  FFD9         	movff	??__doprnt,fsr2l
 23943  0109F0  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 23944  0109F4  0E20               	movlw	32
 23945  0109F6  6EDF               	movwf	indf2,c
 23946  0109F8                     l18182:
 23947                           
 23948                           ; BSR set to: 2
 23949  0109F8  C254  FFD9         	movff	__doprnt@pb,fsr2l
 23950  0109FC  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 23951  010A00  2ADE               	incf	postinc2,f,c
 23952  010A02  0E00               	movlw	0
 23953  010A04  22DD               	addwfc	postdec2,f,c
 23954  010A06  D037               	goto	l18194
 23955  010A08                     l18184:
 23956                           
 23957                           ; BSR set to: 2
 23958  010A08  EE20 F002          	lfsr	2,2
 23959  010A0C  5154               	movf	__doprnt@pb& (0+255),w,b
 23960  010A0E  26D9               	addwf	fsr2l,f,c
 23961  010A10  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 23962  010A12  22DA               	addwfc	fsr2h,f,c
 23963  010A14  50DE               	movf	postinc2,w,c
 23964  010A16  10DE               	iorwf	postinc2,w,c
 23965  010A18  10DE               	iorwf	postinc2,w,c
 23966  010A1A  B4D8               	btfsc	status,2,c
 23967  010A1C  D013               	goto	l18188
 23968                           
 23969                           ; BSR set to: 2
 23970  010A1E  EE20 F002          	lfsr	2,2
 23971  010A22  5154               	movf	__doprnt@pb& (0+255),w,b
 23972  010A24  26D9               	addwf	fsr2l,f,c
 23973  010A26  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 23974  010A28  22DA               	addwfc	fsr2h,f,c
 23975  010A2A  D801               	call	u22448
 23976  010A2C  D020               	goto	l18192
 23977  010A2E                     u22448:
 23978  010A2E  0005               	push	
 23979  010A30  6EFA               	movwf	pclath,c
 23980  010A32  50DE               	movf	postinc2,w,c
 23981  010A34  6EFD               	movwf	tosl,c
 23982  010A36  50DE               	movf	postinc2,w,c
 23983  010A38  6EFE               	movwf	tosh,c
 23984  010A3A  50DE               	movf	postinc2,w,c
 23985  010A3C  6EFF               	movwf	tosu,c
 23986  010A3E  50FA               	movf	pclath,w,c
 23987  010A40  0E30               	movlw	48
 23988  010A42  0012               	return		;indir
 23989  010A44                     l18188:
 23990                           
 23991                           ; BSR set to: 2
 23992  010A44  C254  FFD9         	movff	__doprnt@pb,fsr2l
 23993  010A48  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 23994  010A4C  CFDE F25A          	movff	postinc2,??__doprnt
 23995  010A50  CFDD F25B          	movff	postdec2,??__doprnt+1
 23996  010A54  C25A  FFD9         	movff	??__doprnt,fsr2l
 23997  010A58  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 23998  010A5C  0E30               	movlw	48
 23999  010A5E  6EDF               	movwf	indf2,c
 24000                           
 24001                           ; BSR set to: 2
 24002  010A60  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24003  010A64  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24004  010A68  2ADE               	incf	postinc2,f,c
 24005  010A6A  0E00               	movlw	0
 24006  010A6C  22DD               	addwfc	postdec2,f,c
 24007  010A6E                     l18192:
 24008                           
 24009                           ;doprnt.c: 1189: width--;
 24010  010A6E  0102               	movlb	2	; () banked
 24011  010A70  0785               	decf	__doprnt@width& (0+255),f,b
 24012  010A72  A0D8               	btfss	status,0,c
 24013  010A74  0786               	decf	(__doprnt@width+1)& (0+255),f,b
 24014  010A76                     l18194:
 24015  010A76  0102               	movlb	2	; () banked
 24016  010A78  BF86               	btfsc	(__doprnt@width+1)& (0+255),7,b
 24017  010A7A  D12F               	goto	l18244
 24018  010A7C  5186               	movf	(__doprnt@width+1)& (0+255),w,b
 24019  010A7E  E1C4               	bnz	l18184
 24020  010A80  0585               	decf	__doprnt@width& (0+255),w,b
 24021  010A82  A0D8               	btfss	status,0,c
 24022  010A84  D12A               	goto	l18244
 24023  010A86  D7C0               	goto	l18184
 24024  010A88                     l18196:
 24025                           
 24026                           ; BSR set to: 2
 24027  010A88  EE20 F002          	lfsr	2,2
 24028  010A8C  5154               	movf	__doprnt@pb& (0+255),w,b
 24029  010A8E  26D9               	addwf	fsr2l,f,c
 24030  010A90  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24031  010A92  22DA               	addwfc	fsr2h,f,c
 24032  010A94  50DE               	movf	postinc2,w,c
 24033  010A96  10DE               	iorwf	postinc2,w,c
 24034  010A98  10DE               	iorwf	postinc2,w,c
 24035  010A9A  B4D8               	btfsc	status,2,c
 24036  010A9C  D013               	goto	l18200
 24037                           
 24038                           ; BSR set to: 2
 24039  010A9E  EE20 F002          	lfsr	2,2
 24040  010AA2  5154               	movf	__doprnt@pb& (0+255),w,b
 24041  010AA4  26D9               	addwf	fsr2l,f,c
 24042  010AA6  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24043  010AA8  22DA               	addwfc	fsr2h,f,c
 24044  010AAA  D801               	call	u22478
 24045  010AAC  D020               	goto	l18204
 24046  010AAE                     u22478:
 24047  010AAE  0005               	push	
 24048  010AB0  6EFA               	movwf	pclath,c
 24049  010AB2  50DE               	movf	postinc2,w,c
 24050  010AB4  6EFD               	movwf	tosl,c
 24051  010AB6  50DE               	movf	postinc2,w,c
 24052  010AB8  6EFE               	movwf	tosh,c
 24053  010ABA  50DE               	movf	postinc2,w,c
 24054  010ABC  6EFF               	movwf	tosu,c
 24055  010ABE  50FA               	movf	pclath,w,c
 24056  010AC0  0E20               	movlw	32
 24057  010AC2  0012               	return		;indir
 24058  010AC4                     l18200:
 24059                           
 24060                           ; BSR set to: 2
 24061  010AC4  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24062  010AC8  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24063  010ACC  CFDE F25A          	movff	postinc2,??__doprnt
 24064  010AD0  CFDD F25B          	movff	postdec2,??__doprnt+1
 24065  010AD4  C25A  FFD9         	movff	??__doprnt,fsr2l
 24066  010AD8  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 24067  010ADC  0E20               	movlw	32
 24068  010ADE  6EDF               	movwf	indf2,c
 24069                           
 24070                           ; BSR set to: 2
 24071  010AE0  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24072  010AE4  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24073  010AE8  2ADE               	incf	postinc2,f,c
 24074  010AEA  0E00               	movlw	0
 24075  010AEC  22DD               	addwfc	postdec2,f,c
 24076  010AEE                     l18204:
 24077                           
 24078                           ;doprnt.c: 1201: width--;
 24079  010AEE  0102               	movlb	2	; () banked
 24080  010AF0  0785               	decf	__doprnt@width& (0+255),f,b
 24081  010AF2  A0D8               	btfss	status,0,c
 24082  010AF4  0786               	decf	(__doprnt@width+1)& (0+255),f,b
 24083  010AF6                     l18206:
 24084                           
 24085                           ; BSR set to: 2
 24086  010AF6  BF86               	btfsc	(__doprnt@width+1)& (0+255),7,b
 24087  010AF8  D005               	goto	u22480
 24088  010AFA  5186               	movf	(__doprnt@width+1)& (0+255),w,b
 24089  010AFC  E1C5               	bnz	l18196
 24090  010AFE  0585               	decf	__doprnt@width& (0+255),w,b
 24091  010B00  B0D8               	btfsc	status,0,c
 24092  010B02  D7C2               	goto	l18196
 24093  010B04                     u22480:
 24094                           
 24095                           ; BSR set to: 2
 24096                           ;doprnt.c: 1202: };doprnt.c: 1205: if(flag & 0x02)
 24097  010B04  A389               	btfss	__doprnt@flag& (0+255),1,b
 24098  010B06  D041               	goto	l2523
 24099                           
 24100                           ; BSR set to: 2
 24101  010B08  EE20 F002          	lfsr	2,2
 24102  010B0C  5154               	movf	__doprnt@pb& (0+255),w,b
 24103  010B0E  26D9               	addwf	fsr2l,f,c
 24104  010B10  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24105  010B12  22DA               	addwfc	fsr2h,f,c
 24106  010B14  50DE               	movf	postinc2,w,c
 24107  010B16  10DE               	iorwf	postinc2,w,c
 24108  010B18  10DE               	iorwf	postinc2,w,c
 24109  010B1A  B4D8               	btfsc	status,2,c
 24110  010B1C  D01D               	goto	l2525
 24111                           
 24112                           ; BSR set to: 2
 24113  010B1E  B189               	btfsc	__doprnt@flag& (0+255),0,b
 24114  010B20  D004               	goto	l18214
 24115                           
 24116                           ; BSR set to: 2
 24117  010B22  0E00               	movlw	0
 24118  010B24  6F68               	movwf	(__doprnt$4977+1)& (0+255),b
 24119  010B26  0E2B               	movlw	43
 24120  010B28  D003               	goto	L10
 24121  010B2A                     l18214:
 24122                           
 24123                           ; BSR set to: 2
 24124  010B2A  0E00               	movlw	0
 24125  010B2C  6F68               	movwf	(__doprnt$4977+1)& (0+255),b
 24126  010B2E  0E2D               	movlw	45
 24127  010B30                     L10:
 24128  010B30  6F67               	movwf	__doprnt$4977& (0+255),b
 24129                           
 24130                           ; BSR set to: 2
 24131  010B32  EE20 F002          	lfsr	2,2
 24132  010B36  5154               	movf	__doprnt@pb& (0+255),w,b
 24133  010B38  26D9               	addwf	fsr2l,f,c
 24134  010B3A  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24135  010B3C  22DA               	addwfc	fsr2h,f,c
 24136  010B3E  D801               	call	u22528
 24137  010B40  D0CC               	goto	l18244
 24138  010B42                     u22528:
 24139  010B42  0005               	push	
 24140  010B44  6EFA               	movwf	pclath,c
 24141  010B46  50DE               	movf	postinc2,w,c
 24142  010B48  6EFD               	movwf	tosl,c
 24143  010B4A  50DE               	movf	postinc2,w,c
 24144  010B4C  6EFE               	movwf	tosh,c
 24145  010B4E  50DE               	movf	postinc2,w,c
 24146  010B50  6EFF               	movwf	tosu,c
 24147  010B52  50FA               	movf	pclath,w,c
 24148  010B54  5167               	movf	__doprnt$4977& (0+255),w,b
 24149  010B56  0012               	return		;indir
 24150  010B58                     l2525:
 24151                           
 24152                           ; BSR set to: 2
 24153  010B58  B189               	btfsc	__doprnt@flag& (0+255),0,b
 24154  010B5A  D004               	goto	l18220
 24155                           
 24156                           ; BSR set to: 2
 24157  010B5C  0E00               	movlw	0
 24158  010B5E  6F6A               	movwf	(__doprnt$4978+1)& (0+255),b
 24159  010B60  0E2B               	movlw	43
 24160  010B62  D003               	goto	L11
 24161  010B64                     l18220:
 24162                           
 24163                           ; BSR set to: 2
 24164  010B64  0E00               	movlw	0
 24165  010B66  6F6A               	movwf	(__doprnt$4978+1)& (0+255),b
 24166  010B68  0E2D               	movlw	45
 24167  010B6A                     L11:
 24168  010B6A  6F69               	movwf	__doprnt$4978& (0+255),b
 24169                           
 24170                           ; BSR set to: 2
 24171  010B6C  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24172  010B70  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24173  010B74  CFDE F25A          	movff	postinc2,??__doprnt
 24174  010B78  CFDD F25B          	movff	postdec2,??__doprnt+1
 24175  010B7C  C25A  FFD9         	movff	??__doprnt,fsr2l
 24176  010B80  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 24177  010B84  C269  FFDF         	movff	__doprnt$4978,indf2
 24178  010B88  D0A1               	goto	L12
 24179  010B8A                     l2523:
 24180                           
 24181                           ; BSR set to: 2
 24182                           ;doprnt.c: 1211: else if(flag & 0x01)
 24183  010B8A  A189               	btfss	__doprnt@flag& (0+255),0,b
 24184  010B8C  D0A6               	goto	l18244
 24185                           
 24186                           ; BSR set to: 2
 24187  010B8E  EE20 F002          	lfsr	2,2
 24188  010B92  5154               	movf	__doprnt@pb& (0+255),w,b
 24189  010B94  26D9               	addwf	fsr2l,f,c
 24190  010B96  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24191  010B98  22DA               	addwfc	fsr2h,f,c
 24192  010B9A  50DE               	movf	postinc2,w,c
 24193  010B9C  10DE               	iorwf	postinc2,w,c
 24194  010B9E  10DE               	iorwf	postinc2,w,c
 24195  010BA0  B4D8               	btfsc	status,2,c
 24196  010BA2  D013               	goto	l18230
 24197                           
 24198                           ; BSR set to: 2
 24199  010BA4  EE20 F002          	lfsr	2,2
 24200  010BA8  5154               	movf	__doprnt@pb& (0+255),w,b
 24201  010BAA  26D9               	addwf	fsr2l,f,c
 24202  010BAC  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24203  010BAE  22DA               	addwfc	fsr2h,f,c
 24204  010BB0  D801               	call	u22568
 24205  010BB2  D093               	goto	l18244
 24206  010BB4                     u22568:
 24207  010BB4  0005               	push	
 24208  010BB6  6EFA               	movwf	pclath,c
 24209  010BB8  50DE               	movf	postinc2,w,c
 24210  010BBA  6EFD               	movwf	tosl,c
 24211  010BBC  50DE               	movf	postinc2,w,c
 24212  010BBE  6EFE               	movwf	tosh,c
 24213  010BC0  50DE               	movf	postinc2,w,c
 24214  010BC2  6EFF               	movwf	tosu,c
 24215  010BC4  50FA               	movf	pclath,w,c
 24216  010BC6  0E20               	movlw	32
 24217  010BC8  0012               	return		;indir
 24218  010BCA                     l18230:
 24219                           
 24220                           ; BSR set to: 2
 24221  010BCA  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24222  010BCE  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24223  010BD2  CFDE F25A          	movff	postinc2,??__doprnt
 24224  010BD6  CFDD F25B          	movff	postdec2,??__doprnt+1
 24225  010BDA  C25A  FFD9         	movff	??__doprnt,fsr2l
 24226  010BDE  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 24227  010BE2  0E20               	movlw	32
 24228  010BE4  D072               	goto	L58
 24229  010BE6                     l18234:
 24230                           
 24231                           ; BSR set to: 2
 24232                           ;doprnt.c: 1219: {;doprnt.c: 1220: tmpval.vd = val/dpowers[c];
 24233  010BE6  C281  F200         	movff	__doprnt@val,___lldiv@dividend
 24234  010BEA  C282  F201         	movff	__doprnt@val+1,___lldiv@dividend+1
 24235  010BEE  C283  F202         	movff	__doprnt@val+2,___lldiv@dividend+2
 24236  010BF2  C284  F203         	movff	__doprnt@val+3,___lldiv@dividend+3
 24237  010BF6  518B               	movf	__doprnt@c& (0+255),w,b
 24238  010BF8  0D04               	mullw	4
 24239  010BFA  0E47               	movlw	low _dpowers
 24240  010BFC  24F3               	addwf	prodl,w,c
 24241  010BFE  6EF6               	movwf	tblptrl,c
 24242  010C00  0EE8               	movlw	high _dpowers
 24243  010C02  20F4               	addwfc	prodh,w,c
 24244  010C04  6EF7               	movwf	tblptrh,c
 24245  010C06                     	if	1	;There are 3 active tblptr bytes
 24246  010C06  6AF8               	clrf	tblptru,c
 24247  010C08  0E00               	movlw	low (__mediumconst shr (0+16))
 24248  010C0A  22F8               	addwfc	tblptru,f,c
 24249  010C0C                     	endif
 24250  010C0C  0009               	tblrd		*+
 24251  010C0E  CFF5 F204          	movff	tablat,___lldiv@divisor
 24252  010C12  0009               	tblrd		*+
 24253  010C14  CFF5 F205          	movff	tablat,___lldiv@divisor+1
 24254  010C18  0009               	tblrd		*+
 24255  010C1A  CFF5 F206          	movff	tablat,___lldiv@divisor+2
 24256  010C1E  000A               	tblrd		*-
 24257  010C20  CFF5 F207          	movff	tablat,___lldiv@divisor+3
 24258  010C24  ECFD  F0D7         	call	___lldiv
 24259  010C28  C200  F279         	movff	?___lldiv,__doprnt@tmpval
 24260  010C2C  C201  F27A         	movff	?___lldiv+1,__doprnt@tmpval+1
 24261  010C30  C202  F27B         	movff	?___lldiv+2,__doprnt@tmpval+2
 24262  010C34  C203  F27C         	movff	?___lldiv+3,__doprnt@tmpval+3
 24263                           
 24264                           ;doprnt.c: 1221: tmpval.vd %= 10;
 24265  010C38  C279  F20D         	movff	__doprnt@tmpval,___llmod@dividend
 24266  010C3C  C27A  F20E         	movff	__doprnt@tmpval+1,___llmod@dividend+1
 24267  010C40  C27B  F20F         	movff	__doprnt@tmpval+2,___llmod@dividend+2
 24268  010C44  C27C  F210         	movff	__doprnt@tmpval+3,___llmod@dividend+3
 24269  010C48  0E0A               	movlw	10
 24270  010C4A  0102               	movlb	2	; () banked
 24271  010C4C  6F11               	movwf	___llmod@divisor& (0+255),b
 24272  010C4E  0E00               	movlw	0
 24273  010C50  6F12               	movwf	(___llmod@divisor+1)& (0+255),b
 24274  010C52  0E00               	movlw	0
 24275  010C54  6F13               	movwf	(___llmod@divisor+2)& (0+255),b
 24276  010C56  0E00               	movlw	0
 24277  010C58  6F14               	movwf	(___llmod@divisor+3)& (0+255),b
 24278  010C5A  EC6C  F0D9         	call	___llmod	;wreg free
 24279  010C5E  C20D  F279         	movff	?___llmod,__doprnt@tmpval
 24280  010C62  C20E  F27A         	movff	?___llmod+1,__doprnt@tmpval+1
 24281  010C66  C20F  F27B         	movff	?___llmod+2,__doprnt@tmpval+2
 24282  010C6A  C210  F27C         	movff	?___llmod+3,__doprnt@tmpval+3
 24283  010C6E  0102               	movlb	2	; () banked
 24284  010C70  EE20 F002          	lfsr	2,2
 24285  010C74  5154               	movf	__doprnt@pb& (0+255),w,b
 24286  010C76  26D9               	addwf	fsr2l,f,c
 24287  010C78  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24288  010C7A  22DA               	addwfc	fsr2h,f,c
 24289  010C7C  50DE               	movf	postinc2,w,c
 24290  010C7E  10DE               	iorwf	postinc2,w,c
 24291  010C80  10DE               	iorwf	postinc2,w,c
 24292  010C82  B4D8               	btfsc	status,2,c
 24293  010C84  D014               	goto	l18242
 24294                           
 24295                           ; BSR set to: 2
 24296  010C86  EE20 F002          	lfsr	2,2
 24297  010C8A  5154               	movf	__doprnt@pb& (0+255),w,b
 24298  010C8C  26D9               	addwf	fsr2l,f,c
 24299  010C8E  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24300  010C90  22DA               	addwfc	fsr2h,f,c
 24301  010C92  D801               	call	u22588
 24302  010C94  D022               	goto	l18244
 24303  010C96                     u22588:
 24304  010C96  0005               	push	
 24305  010C98  6EFA               	movwf	pclath,c
 24306  010C9A  50DE               	movf	postinc2,w,c
 24307  010C9C  6EFD               	movwf	tosl,c
 24308  010C9E  50DE               	movf	postinc2,w,c
 24309  010CA0  6EFE               	movwf	tosh,c
 24310  010CA2  50DE               	movf	postinc2,w,c
 24311  010CA4  6EFF               	movwf	tosu,c
 24312  010CA6  50FA               	movf	pclath,w,c
 24313  010CA8  5179               	movf	__doprnt@tmpval& (0+255),w,b
 24314  010CAA  0F30               	addlw	48
 24315  010CAC  0012               	return		;indir
 24316  010CAE                     l18242:
 24317                           
 24318                           ; BSR set to: 2
 24319  010CAE  5179               	movf	__doprnt@tmpval& (0+255),w,b
 24320  010CB0  0F30               	addlw	48
 24321  010CB2  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24322  010CB6  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24323  010CBA  CFDE F25A          	movff	postinc2,??__doprnt
 24324  010CBE  CFDD F25B          	movff	postdec2,??__doprnt+1
 24325  010CC2  C25A  FFD9         	movff	??__doprnt,fsr2l
 24326  010CC6  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 24327  010CCA                     L58:
 24328  010CCA  6EDF               	movwf	indf2,c
 24329  010CCC                     L12:
 24330  010CCC  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24331  010CD0  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24332  010CD4  2ADE               	incf	postinc2,f,c
 24333  010CD6  0E00               	movlw	0
 24334  010CD8  22DD               	addwfc	postdec2,f,c
 24335  010CDA                     l18244:
 24336  010CDA  0102               	movlb	2	; () banked
 24337  010CDC  078B               	decf	__doprnt@c& (0+255),f,b
 24338  010CDE  298B               	incf	__doprnt@c& (0+255),w,b
 24339  010CE0  B4D8               	btfsc	status,2,c
 24340  010CE2  D038               	goto	l18256
 24341  010CE4  D780               	goto	l18234
 24342  010CE6                     l18246:
 24343                           
 24344                           ; BSR set to: 2
 24345  010CE6  EE20 F002          	lfsr	2,2
 24346  010CEA  5154               	movf	__doprnt@pb& (0+255),w,b
 24347  010CEC  26D9               	addwf	fsr2l,f,c
 24348  010CEE  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24349  010CF0  22DA               	addwfc	fsr2h,f,c
 24350  010CF2  50DE               	movf	postinc2,w,c
 24351  010CF4  10DE               	iorwf	postinc2,w,c
 24352  010CF6  10DE               	iorwf	postinc2,w,c
 24353  010CF8  B4D8               	btfsc	status,2,c
 24354  010CFA  D013               	goto	l18250
 24355                           
 24356                           ; BSR set to: 2
 24357  010CFC  EE20 F002          	lfsr	2,2
 24358  010D00  5154               	movf	__doprnt@pb& (0+255),w,b
 24359  010D02  26D9               	addwf	fsr2l,f,c
 24360  010D04  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24361  010D06  22DA               	addwfc	fsr2h,f,c
 24362  010D08  D801               	call	u22618
 24363  010D0A  D020               	goto	l18254
 24364  010D0C                     u22618:
 24365  010D0C  0005               	push	
 24366  010D0E  6EFA               	movwf	pclath,c
 24367  010D10  50DE               	movf	postinc2,w,c
 24368  010D12  6EFD               	movwf	tosl,c
 24369  010D14  50DE               	movf	postinc2,w,c
 24370  010D16  6EFE               	movwf	tosh,c
 24371  010D18  50DE               	movf	postinc2,w,c
 24372  010D1A  6EFF               	movwf	tosu,c
 24373  010D1C  50FA               	movf	pclath,w,c
 24374  010D1E  0E30               	movlw	48
 24375  010D20  0012               	return		;indir
 24376  010D22                     l18250:
 24377                           
 24378                           ; BSR set to: 2
 24379  010D22  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24380  010D26  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24381  010D2A  CFDE F25A          	movff	postinc2,??__doprnt
 24382  010D2E  CFDD F25B          	movff	postdec2,??__doprnt+1
 24383  010D32  C25A  FFD9         	movff	??__doprnt,fsr2l
 24384  010D36  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 24385  010D3A  0E30               	movlw	48
 24386  010D3C  6EDF               	movwf	indf2,c
 24387                           
 24388                           ; BSR set to: 2
 24389  010D3E  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24390  010D42  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24391  010D46  2ADE               	incf	postinc2,f,c
 24392  010D48  0E00               	movlw	0
 24393  010D4A  22DD               	addwfc	postdec2,f,c
 24394  010D4C                     l18254:
 24395                           
 24396                           ;doprnt.c: 1228: eexp--;
 24397  010D4C  0102               	movlb	2	; () banked
 24398  010D4E  0777               	decf	__doprnt@eexp& (0+255),f,b
 24399  010D50  A0D8               	btfss	status,0,c
 24400  010D52  0778               	decf	(__doprnt@eexp+1)& (0+255),f,b
 24401  010D54                     l18256:
 24402                           
 24403                           ; BSR set to: 2
 24404  010D54  BF78               	btfsc	(__doprnt@eexp+1)& (0+255),7,b
 24405  010D56  D005               	goto	u22620
 24406  010D58  5178               	movf	(__doprnt@eexp+1)& (0+255),w,b
 24407  010D5A  E1C5               	bnz	l18246
 24408  010D5C  0577               	decf	__doprnt@eexp& (0+255),w,b
 24409  010D5E  B0D8               	btfsc	status,0,c
 24410  010D60  D7C2               	goto	l18246
 24411  010D62                     u22620:
 24412                           
 24413                           ; BSR set to: 2
 24414                           ;doprnt.c: 1229: };doprnt.c: 1230: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
 24415  010D62  BF88               	btfsc	(__doprnt@prec+1)& (0+255),7,b
 24416  010D64  D009               	goto	l2556
 24417  010D66  5188               	movf	(__doprnt@prec+1)& (0+255),w,b
 24418  010D68  E104               	bnz	u22630
 24419  010D6A  0E09               	movlw	9
 24420  010D6C  5D87               	subwf	__doprnt@prec& (0+255),w,b
 24421  010D6E  A0D8               	btfss	status,0,c
 24422  010D70  D003               	goto	l2556
 24423  010D72                     u22630:
 24424                           
 24425                           ; BSR set to: 2
 24426                           ;doprnt.c: 1231: c = (sizeof dpowers/sizeof dpowers[0])-2;
 24427  010D72  0E08               	movlw	8
 24428  010D74  6F8B               	movwf	__doprnt@c& (0+255),b
 24429  010D76  D002               	goto	l18262
 24430  010D78                     l2556:
 24431                           
 24432                           ; BSR set to: 2
 24433                           ;doprnt.c: 1232: else;doprnt.c: 1233: c = (char)prec;
 24434  010D78  C287  F28B         	movff	__doprnt@prec,__doprnt@c
 24435  010D7C                     l18262:
 24436                           
 24437                           ; BSR set to: 2
 24438                           ;doprnt.c: 1234: prec -= (int)c;
 24439  010D7C  518B               	movf	__doprnt@c& (0+255),w,b
 24440  010D7E  5F87               	subwf	__doprnt@prec& (0+255),f,b
 24441  010D80  0E00               	movlw	0
 24442  010D82  5B88               	subwfb	(__doprnt@prec+1)& (0+255),f,b
 24443                           
 24444                           ; BSR set to: 2
 24445                           ;doprnt.c: 1238: if(c)
 24446  010D84  518B               	movf	__doprnt@c& (0+255),w,b
 24447  010D86  B4D8               	btfsc	status,2,c
 24448  010D88  D033               	goto	l18274
 24449                           
 24450                           ; BSR set to: 2
 24451  010D8A  EE20 F002          	lfsr	2,2
 24452  010D8E  5154               	movf	__doprnt@pb& (0+255),w,b
 24453  010D90  26D9               	addwf	fsr2l,f,c
 24454  010D92  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24455  010D94  22DA               	addwfc	fsr2h,f,c
 24456  010D96  50DE               	movf	postinc2,w,c
 24457  010D98  10DE               	iorwf	postinc2,w,c
 24458  010D9A  10DE               	iorwf	postinc2,w,c
 24459  010D9C  B4D8               	btfsc	status,2,c
 24460  010D9E  D013               	goto	l18270
 24461                           
 24462                           ; BSR set to: 2
 24463  010DA0  EE20 F002          	lfsr	2,2
 24464  010DA4  5154               	movf	__doprnt@pb& (0+255),w,b
 24465  010DA6  26D9               	addwf	fsr2l,f,c
 24466  010DA8  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24467  010DAA  22DA               	addwfc	fsr2h,f,c
 24468  010DAC  D801               	call	u22668
 24469  010DAE  D020               	goto	l18274
 24470  010DB0                     u22668:
 24471  010DB0  0005               	push	
 24472  010DB2  6EFA               	movwf	pclath,c
 24473  010DB4  50DE               	movf	postinc2,w,c
 24474  010DB6  6EFD               	movwf	tosl,c
 24475  010DB8  50DE               	movf	postinc2,w,c
 24476  010DBA  6EFE               	movwf	tosh,c
 24477  010DBC  50DE               	movf	postinc2,w,c
 24478  010DBE  6EFF               	movwf	tosu,c
 24479  010DC0  50FA               	movf	pclath,w,c
 24480  010DC2  0E2E               	movlw	46
 24481  010DC4  0012               	return		;indir
 24482  010DC6                     l18270:
 24483                           
 24484                           ; BSR set to: 2
 24485  010DC6  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24486  010DCA  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24487  010DCE  CFDE F25A          	movff	postinc2,??__doprnt
 24488  010DD2  CFDD F25B          	movff	postdec2,??__doprnt+1
 24489  010DD6  C25A  FFD9         	movff	??__doprnt,fsr2l
 24490  010DDA  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 24491  010DDE  0E2E               	movlw	46
 24492  010DE0  6EDF               	movwf	indf2,c
 24493                           
 24494                           ; BSR set to: 2
 24495  010DE2  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24496  010DE6  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24497  010DEA  2ADE               	incf	postinc2,f,c
 24498  010DEC  0E00               	movlw	0
 24499  010DEE  22DD               	addwfc	postdec2,f,c
 24500  010DF0                     l18274:
 24501                           
 24502                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
 24503  010DF0  0102               	movlb	2	; () banked
 24504  010DF2  518B               	movf	__doprnt@c& (0+255),w,b
 24505  010DF4  ECF0  F0A9         	call	_scale
 24506  010DF8  C227  F25E         	movff	?_scale,__doprnt$6033
 24507  010DFC  C228  F25F         	movff	?_scale+1,__doprnt$6033+1
 24508  010E00  C229  F260         	movff	?_scale+2,__doprnt$6033+2
 24509  010E04  C22A  F261         	movff	?_scale+3,__doprnt$6033+3
 24510                           
 24511                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
 24512  010E08  C27D  F212         	movff	__doprnt@fval,___flmul@a
 24513  010E0C  C27E  F213         	movff	__doprnt@fval+1,___flmul@a+1
 24514  010E10  C27F  F214         	movff	__doprnt@fval+2,___flmul@a+2
 24515  010E14  C280  F215         	movff	__doprnt@fval+3,___flmul@a+3
 24516  010E18  C25E  F20E         	movff	__doprnt$6033,___flmul@b
 24517  010E1C  C25F  F20F         	movff	__doprnt$6033+1,___flmul@b+1
 24518  010E20  C260  F210         	movff	__doprnt$6033+2,___flmul@b+2
 24519  010E24  C261  F211         	movff	__doprnt$6033+3,___flmul@b+3
 24520  010E28  EC48  F0B3         	call	___flmul	;wreg free
 24521  010E2C  C20E  F230         	movff	?___flmul,___fltol@f1
 24522  010E30  C20F  F231         	movff	?___flmul+1,___fltol@f1+1
 24523  010E34  C210  F232         	movff	?___flmul+2,___fltol@f1+2
 24524  010E38  C211  F233         	movff	?___flmul+3,___fltol@f1+3
 24525  010E3C  ECEF  F0D3         	call	___fltol	;wreg free
 24526  010E40  C230  F281         	movff	?___fltol,__doprnt@val
 24527  010E44  C231  F282         	movff	?___fltol+1,__doprnt@val+1
 24528  010E48  C232  F283         	movff	?___fltol+2,__doprnt@val+2
 24529  010E4C  C233  F284         	movff	?___fltol+3,__doprnt@val+3
 24530                           
 24531                           ;doprnt.c: 1247: while(c--) {
 24532  010E50  D0A4               	goto	l18290
 24533  010E52                     l18278:
 24534                           
 24535                           ; BSR set to: 2
 24536                           ;doprnt.c: 1248: tmpval.vd = val/dpowers[c];
 24537  010E52  C281  F200         	movff	__doprnt@val,___lldiv@dividend
 24538  010E56  C282  F201         	movff	__doprnt@val+1,___lldiv@dividend+1
 24539  010E5A  C283  F202         	movff	__doprnt@val+2,___lldiv@dividend+2
 24540  010E5E  C284  F203         	movff	__doprnt@val+3,___lldiv@dividend+3
 24541  010E62  518B               	movf	__doprnt@c& (0+255),w,b
 24542  010E64  0D04               	mullw	4
 24543  010E66  0E47               	movlw	low _dpowers
 24544  010E68  24F3               	addwf	prodl,w,c
 24545  010E6A  6EF6               	movwf	tblptrl,c
 24546  010E6C  0EE8               	movlw	high _dpowers
 24547  010E6E  20F4               	addwfc	prodh,w,c
 24548  010E70  6EF7               	movwf	tblptrh,c
 24549  010E72                     	if	1	;There are 3 active tblptr bytes
 24550  010E72  6AF8               	clrf	tblptru,c
 24551  010E74  0E00               	movlw	low (__mediumconst shr (0+16))
 24552  010E76  22F8               	addwfc	tblptru,f,c
 24553  010E78                     	endif
 24554  010E78  0009               	tblrd		*+
 24555  010E7A  CFF5 F204          	movff	tablat,___lldiv@divisor
 24556  010E7E  0009               	tblrd		*+
 24557  010E80  CFF5 F205          	movff	tablat,___lldiv@divisor+1
 24558  010E84  0009               	tblrd		*+
 24559  010E86  CFF5 F206          	movff	tablat,___lldiv@divisor+2
 24560  010E8A  000A               	tblrd		*-
 24561  010E8C  CFF5 F207          	movff	tablat,___lldiv@divisor+3
 24562  010E90  ECFD  F0D7         	call	___lldiv	;wreg free
 24563  010E94  C200  F279         	movff	?___lldiv,__doprnt@tmpval
 24564  010E98  C201  F27A         	movff	?___lldiv+1,__doprnt@tmpval+1
 24565  010E9C  C202  F27B         	movff	?___lldiv+2,__doprnt@tmpval+2
 24566  010EA0  C203  F27C         	movff	?___lldiv+3,__doprnt@tmpval+3
 24567                           
 24568                           ;doprnt.c: 1249: tmpval.vd %= 10;
 24569  010EA4  C279  F20D         	movff	__doprnt@tmpval,___llmod@dividend
 24570  010EA8  C27A  F20E         	movff	__doprnt@tmpval+1,___llmod@dividend+1
 24571  010EAC  C27B  F20F         	movff	__doprnt@tmpval+2,___llmod@dividend+2
 24572  010EB0  C27C  F210         	movff	__doprnt@tmpval+3,___llmod@dividend+3
 24573  010EB4  0E0A               	movlw	10
 24574  010EB6  0102               	movlb	2	; () banked
 24575  010EB8  6F11               	movwf	___llmod@divisor& (0+255),b
 24576  010EBA  0E00               	movlw	0
 24577  010EBC  6F12               	movwf	(___llmod@divisor+1)& (0+255),b
 24578  010EBE  0E00               	movlw	0
 24579  010EC0  6F13               	movwf	(___llmod@divisor+2)& (0+255),b
 24580  010EC2  0E00               	movlw	0
 24581  010EC4  6F14               	movwf	(___llmod@divisor+3)& (0+255),b
 24582  010EC6  EC6C  F0D9         	call	___llmod	;wreg free
 24583  010ECA  C20D  F279         	movff	?___llmod,__doprnt@tmpval
 24584  010ECE  C20E  F27A         	movff	?___llmod+1,__doprnt@tmpval+1
 24585  010ED2  C20F  F27B         	movff	?___llmod+2,__doprnt@tmpval+2
 24586  010ED6  C210  F27C         	movff	?___llmod+3,__doprnt@tmpval+3
 24587  010EDA  0102               	movlb	2	; () banked
 24588  010EDC  EE20 F002          	lfsr	2,2
 24589  010EE0  5154               	movf	__doprnt@pb& (0+255),w,b
 24590  010EE2  26D9               	addwf	fsr2l,f,c
 24591  010EE4  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24592  010EE6  22DA               	addwfc	fsr2h,f,c
 24593  010EE8  50DE               	movf	postinc2,w,c
 24594  010EEA  10DE               	iorwf	postinc2,w,c
 24595  010EEC  10DE               	iorwf	postinc2,w,c
 24596  010EEE  B4D8               	btfsc	status,2,c
 24597  010EF0  D014               	goto	l18286
 24598                           
 24599                           ; BSR set to: 2
 24600  010EF2  EE20 F002          	lfsr	2,2
 24601  010EF6  5154               	movf	__doprnt@pb& (0+255),w,b
 24602  010EF8  26D9               	addwf	fsr2l,f,c
 24603  010EFA  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24604  010EFC  22DA               	addwfc	fsr2h,f,c
 24605  010EFE  D801               	call	u22688
 24606  010F00  D022               	goto	l18288
 24607  010F02                     u22688:
 24608  010F02  0005               	push	
 24609  010F04  6EFA               	movwf	pclath,c
 24610  010F06  50DE               	movf	postinc2,w,c
 24611  010F08  6EFD               	movwf	tosl,c
 24612  010F0A  50DE               	movf	postinc2,w,c
 24613  010F0C  6EFE               	movwf	tosh,c
 24614  010F0E  50DE               	movf	postinc2,w,c
 24615  010F10  6EFF               	movwf	tosu,c
 24616  010F12  50FA               	movf	pclath,w,c
 24617  010F14  5179               	movf	__doprnt@tmpval& (0+255),w,b
 24618  010F16  0F30               	addlw	48
 24619  010F18  0012               	return		;indir
 24620  010F1A                     l18286:
 24621                           
 24622                           ; BSR set to: 2
 24623  010F1A  5179               	movf	__doprnt@tmpval& (0+255),w,b
 24624  010F1C  0F30               	addlw	48
 24625  010F1E  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24626  010F22  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24627  010F26  CFDE F25A          	movff	postinc2,??__doprnt
 24628  010F2A  CFDD F25B          	movff	postdec2,??__doprnt+1
 24629  010F2E  C25A  FFD9         	movff	??__doprnt,fsr2l
 24630  010F32  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 24631  010F36  6EDF               	movwf	indf2,c
 24632  010F38  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24633  010F3C  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24634  010F40  2ADE               	incf	postinc2,f,c
 24635  010F42  0E00               	movlw	0
 24636  010F44  22DD               	addwfc	postdec2,f,c
 24637  010F46                     l18288:
 24638                           
 24639                           ;doprnt.c: 1251: val %= dpowers[c];
 24640  010F46  C281  F20D         	movff	__doprnt@val,___llmod@dividend
 24641  010F4A  C282  F20E         	movff	__doprnt@val+1,___llmod@dividend+1
 24642  010F4E  C283  F20F         	movff	__doprnt@val+2,___llmod@dividend+2
 24643  010F52  C284  F210         	movff	__doprnt@val+3,___llmod@dividend+3
 24644  010F56  0102               	movlb	2	; () banked
 24645  010F58  518B               	movf	__doprnt@c& (0+255),w,b
 24646  010F5A  0D04               	mullw	4
 24647  010F5C  0E47               	movlw	low _dpowers
 24648  010F5E  24F3               	addwf	prodl,w,c
 24649  010F60  6EF6               	movwf	tblptrl,c
 24650  010F62  0EE8               	movlw	high _dpowers
 24651  010F64  20F4               	addwfc	prodh,w,c
 24652  010F66  6EF7               	movwf	tblptrh,c
 24653  010F68                     	if	1	;There are 3 active tblptr bytes
 24654  010F68  6AF8               	clrf	tblptru,c
 24655  010F6A  0E00               	movlw	low (__mediumconst shr (0+16))
 24656  010F6C  22F8               	addwfc	tblptru,f,c
 24657  010F6E                     	endif
 24658  010F6E  0009               	tblrd		*+
 24659  010F70  CFF5 F211          	movff	tablat,___llmod@divisor
 24660  010F74  0009               	tblrd		*+
 24661  010F76  CFF5 F212          	movff	tablat,___llmod@divisor+1
 24662  010F7A  0009               	tblrd		*+
 24663  010F7C  CFF5 F213          	movff	tablat,___llmod@divisor+2
 24664  010F80  000A               	tblrd		*-
 24665  010F82  CFF5 F214          	movff	tablat,___llmod@divisor+3
 24666  010F86  EC6C  F0D9         	call	___llmod
 24667  010F8A  C20D  F281         	movff	?___llmod,__doprnt@val
 24668  010F8E  C20E  F282         	movff	?___llmod+1,__doprnt@val+1
 24669  010F92  C20F  F283         	movff	?___llmod+2,__doprnt@val+2
 24670  010F96  C210  F284         	movff	?___llmod+3,__doprnt@val+3
 24671  010F9A                     l18290:
 24672  010F9A  0102               	movlb	2	; () banked
 24673  010F9C  078B               	decf	__doprnt@c& (0+255),f,b
 24674  010F9E  298B               	incf	__doprnt@c& (0+255),w,b
 24675  010FA0  B4D8               	btfsc	status,2,c
 24676  010FA2  D038               	goto	l18302
 24677  010FA4  D756               	goto	l18278
 24678  010FA6                     l18292:
 24679                           
 24680                           ; BSR set to: 2
 24681  010FA6  EE20 F002          	lfsr	2,2
 24682  010FAA  5154               	movf	__doprnt@pb& (0+255),w,b
 24683  010FAC  26D9               	addwf	fsr2l,f,c
 24684  010FAE  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24685  010FB0  22DA               	addwfc	fsr2h,f,c
 24686  010FB2  50DE               	movf	postinc2,w,c
 24687  010FB4  10DE               	iorwf	postinc2,w,c
 24688  010FB6  10DE               	iorwf	postinc2,w,c
 24689  010FB8  B4D8               	btfsc	status,2,c
 24690  010FBA  D013               	goto	l18296
 24691                           
 24692                           ; BSR set to: 2
 24693  010FBC  EE20 F002          	lfsr	2,2
 24694  010FC0  5154               	movf	__doprnt@pb& (0+255),w,b
 24695  010FC2  26D9               	addwf	fsr2l,f,c
 24696  010FC4  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 24697  010FC6  22DA               	addwfc	fsr2h,f,c
 24698  010FC8  D801               	call	u22718
 24699  010FCA  D020               	goto	l18300
 24700  010FCC                     u22718:
 24701  010FCC  0005               	push	
 24702  010FCE  6EFA               	movwf	pclath,c
 24703  010FD0  50DE               	movf	postinc2,w,c
 24704  010FD2  6EFD               	movwf	tosl,c
 24705  010FD4  50DE               	movf	postinc2,w,c
 24706  010FD6  6EFE               	movwf	tosh,c
 24707  010FD8  50DE               	movf	postinc2,w,c
 24708  010FDA  6EFF               	movwf	tosu,c
 24709  010FDC  50FA               	movf	pclath,w,c
 24710  010FDE  0E30               	movlw	48
 24711  010FE0  0012               	return		;indir
 24712  010FE2                     l18296:
 24713                           
 24714                           ; BSR set to: 2
 24715  010FE2  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24716  010FE6  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24717  010FEA  CFDE F25A          	movff	postinc2,??__doprnt
 24718  010FEE  CFDD F25B          	movff	postdec2,??__doprnt+1
 24719  010FF2  C25A  FFD9         	movff	??__doprnt,fsr2l
 24720  010FF6  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 24721  010FFA  0E30               	movlw	48
 24722  010FFC  6EDF               	movwf	indf2,c
 24723                           
 24724                           ; BSR set to: 2
 24725  010FFE  C254  FFD9         	movff	__doprnt@pb,fsr2l
 24726  011002  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 24727  011006  2ADE               	incf	postinc2,f,c
 24728  011008  0E00               	movlw	0
 24729  01100A  22DD               	addwfc	postdec2,f,c
 24730  01100C                     l18300:
 24731                           
 24732                           ;doprnt.c: 1256: prec--;
 24733  01100C  0102               	movlb	2	; () banked
 24734  01100E  0787               	decf	__doprnt@prec& (0+255),f,b
 24735  011010  A0D8               	btfss	status,0,c
 24736  011012  0788               	decf	(__doprnt@prec+1)& (0+255),f,b
 24737  011014                     l18302:
 24738                           
 24739                           ; BSR set to: 2
 24740  011014  5187               	movf	__doprnt@prec& (0+255),w,b
 24741  011016  1188               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 24742  011018  B4D8               	btfsc	status,2,c
 24743  01101A  D361               	goto	u23170
 24744  01101C  D7C4               	goto	l18292
 24745  01101E                     l18304:
 24746                           
 24747                           ; BSR set to: 2
 24748                           ;doprnt.c: 1265: };doprnt.c: 1270: if((flag & (0xC0)) == 0x00)
 24749  01101E  0EC0               	movlw	192
 24750  011020  1589               	andwf	__doprnt@flag& (0+255),w,b
 24751  011022  6F5A               	movwf	??__doprnt& (0+255),b
 24752  011024  0E00               	movlw	0
 24753  011026  158A               	andwf	(__doprnt@flag+1)& (0+255),w,b
 24754  011028  6F5B               	movwf	(??__doprnt+1)& (0+255),b
 24755  01102A  515A               	movf	??__doprnt& (0+255),w,b
 24756  01102C  115B               	iorwf	(??__doprnt+1)& (0+255),w,b
 24757  01102E  A4D8               	btfss	status,2,c
 24758  011030  D041               	goto	l2577
 24759                           
 24760                           ; BSR set to: 2
 24761                           ;doprnt.c: 1272: {;doprnt.c: 1274: if(flag & 0x10)
 24762  011032  A989               	btfss	__doprnt@flag& (0+255),4,b
 24763  011034  D019               	goto	l18310
 24764                           
 24765                           ; BSR set to: 2
 24766                           ;doprnt.c: 1275: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 24767  011036  C258  FFD9         	movff	__doprnt@ap,fsr2l
 24768  01103A  C259  FFDA         	movff	__doprnt@ap+1,fsr2h
 24769  01103E  CFDF F25A          	movff	indf2,??__doprnt
 24770  011042  0E04               	movlw	4
 24771  011044  26DE               	addwf	postinc2,f,c
 24772  011046  CFDF F25B          	movff	indf2,??__doprnt+1
 24773  01104A  0E00               	movlw	0
 24774  01104C  22DD               	addwfc	postdec2,f,c
 24775  01104E  C25A  FFD9         	movff	??__doprnt,fsr2l
 24776  011052  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 24777  011056  CFDE F281          	movff	postinc2,__doprnt@val
 24778  01105A  CFDE F282          	movff	postinc2,__doprnt@val+1
 24779  01105E  CFDE F283          	movff	postinc2,__doprnt@val+2
 24780  011062  CFDE F284          	movff	postinc2,__doprnt@val+3
 24781  011066  D019               	goto	l18312
 24782  011068                     l18310:
 24783                           
 24784                           ; BSR set to: 2
 24785                           ;doprnt.c: 1276: else;doprnt.c: 1278: val = (long)(*(int *)__va_arg((*(int **)ap), (int)
      +                          0));
 24786  011068  C258  FFD9         	movff	__doprnt@ap,fsr2l
 24787  01106C  C259  FFDA         	movff	__doprnt@ap+1,fsr2h
 24788  011070  CFDF F25A          	movff	indf2,??__doprnt
 24789  011074  0E02               	movlw	2
 24790  011076  26DE               	addwf	postinc2,f,c
 24791  011078  CFDF F25B          	movff	indf2,??__doprnt+1
 24792  01107C  0E00               	movlw	0
 24793  01107E  22DD               	addwfc	postdec2,f,c
 24794  011080  C25A  FFD9         	movff	??__doprnt,fsr2l
 24795  011084  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 24796  011088  CFDE F281          	movff	postinc2,__doprnt@val
 24797  01108C  CFDD F282          	movff	postdec2,__doprnt@val+1
 24798  011090  0E00               	movlw	0
 24799  011092  BF82               	btfsc	(__doprnt@val+1)& (0+255),7,b
 24800  011094  0EFF               	movlw	-1
 24801  011096  6F83               	movwf	(__doprnt@val+2)& (0+255),b
 24802  011098  6F84               	movwf	(__doprnt@val+3)& (0+255),b
 24803  01109A                     l18312:
 24804                           
 24805                           ; BSR set to: 2
 24806                           ;doprnt.c: 1280: if((long)val < 0) {
 24807  01109A  AF84               	btfss	(__doprnt@val+3)& (0+255),7,b
 24808  01109C  D040               	goto	l18322
 24809                           
 24810                           ; BSR set to: 2
 24811                           ;doprnt.c: 1281: flag |= 0x03;
 24812  01109E  0E03               	movlw	3
 24813  0110A0  1389               	iorwf	__doprnt@flag& (0+255),f,b
 24814                           
 24815                           ; BSR set to: 2
 24816                           ;doprnt.c: 1282: val = -val;
 24817  0110A2  1F84               	comf	(__doprnt@val+3)& (0+255),f,b
 24818  0110A4  1F83               	comf	(__doprnt@val+2)& (0+255),f,b
 24819  0110A6  1F82               	comf	(__doprnt@val+1)& (0+255),f,b
 24820  0110A8  6D81               	negf	__doprnt@val& (0+255),b
 24821  0110AA  0E00               	movlw	0
 24822  0110AC  2382               	addwfc	(__doprnt@val+1)& (0+255),f,b
 24823  0110AE  2383               	addwfc	(__doprnt@val+2)& (0+255),f,b
 24824  0110B0  2384               	addwfc	(__doprnt@val+3)& (0+255),f,b
 24825  0110B2  D035               	goto	l18322
 24826  0110B4                     l2577:
 24827                           
 24828                           ; BSR set to: 2
 24829                           ;doprnt.c: 1287: else;doprnt.c: 1292: {;doprnt.c: 1300: if(flag & 0x10)
 24830  0110B4  A989               	btfss	__doprnt@flag& (0+255),4,b
 24831  0110B6  D019               	goto	l18320
 24832                           
 24833                           ; BSR set to: 2
 24834                           ;doprnt.c: 1301: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 24835  0110B8  C258  FFD9         	movff	__doprnt@ap,fsr2l
 24836  0110BC  C259  FFDA         	movff	__doprnt@ap+1,fsr2h
 24837  0110C0  CFDF F25A          	movff	indf2,??__doprnt
 24838  0110C4  0E04               	movlw	4
 24839  0110C6  26DE               	addwf	postinc2,f,c
 24840  0110C8  CFDF F25B          	movff	indf2,??__doprnt+1
 24841  0110CC  0E00               	movlw	0
 24842  0110CE  22DD               	addwfc	postdec2,f,c
 24843  0110D0  C25A  FFD9         	movff	??__doprnt,fsr2l
 24844  0110D4  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 24845  0110D8  CFDE F281          	movff	postinc2,__doprnt@val
 24846  0110DC  CFDE F282          	movff	postinc2,__doprnt@val+1
 24847  0110E0  CFDE F283          	movff	postinc2,__doprnt@val+2
 24848  0110E4  CFDE F284          	movff	postinc2,__doprnt@val+3
 24849  0110E8  D01A               	goto	l18322
 24850  0110EA                     l18320:
 24851                           
 24852                           ; BSR set to: 2
 24853                           ;doprnt.c: 1302: else;doprnt.c: 1305: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
 24854  0110EA  C258  FFD9         	movff	__doprnt@ap,fsr2l
 24855  0110EE  C259  FFDA         	movff	__doprnt@ap+1,fsr2h
 24856  0110F2  CFDF F25A          	movff	indf2,??__doprnt
 24857  0110F6  0E02               	movlw	2
 24858  0110F8  26DE               	addwf	postinc2,f,c
 24859  0110FA  CFDF F25B          	movff	indf2,??__doprnt+1
 24860  0110FE  0E00               	movlw	0
 24861  011100  22DD               	addwfc	postdec2,f,c
 24862  011102  C25A  FFD9         	movff	??__doprnt,fsr2l
 24863  011106  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 24864  01110A  CFDE F25C          	movff	postinc2,??__doprnt+2
 24865  01110E  CFDD F25D          	movff	postdec2,??__doprnt+3
 24866  011112  C25C  F281         	movff	??__doprnt+2,__doprnt@val
 24867  011116  C25D  F282         	movff	??__doprnt+3,__doprnt@val+1
 24868  01111A  6B83               	clrf	(__doprnt@val+2)& (0+255),b
 24869  01111C  6B84               	clrf	(__doprnt@val+3)& (0+255),b
 24870  01111E                     l18322:
 24871                           
 24872                           ; BSR set to: 2
 24873                           ;doprnt.c: 1306: };doprnt.c: 1309: if(prec == 0 && val == 0)
 24874  01111E  5187               	movf	__doprnt@prec& (0+255),w,b
 24875  011120  1188               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 24876  011122  A4D8               	btfss	status,2,c
 24877  011124  D04B               	goto	l18358
 24878                           
 24879                           ; BSR set to: 2
 24880  011126  5181               	movf	__doprnt@val& (0+255),w,b
 24881  011128  1182               	iorwf	(__doprnt@val+1)& (0+255),w,b
 24882  01112A  1183               	iorwf	(__doprnt@val+2)& (0+255),w,b
 24883  01112C  1184               	iorwf	(__doprnt@val+3)& (0+255),w,b
 24884  01112E  A4D8               	btfss	status,2,c
 24885  011130  D045               	goto	l18358
 24886                           
 24887                           ; BSR set to: 2
 24888                           ;doprnt.c: 1310: prec++;
 24889  011132  4B87               	infsnz	__doprnt@prec& (0+255),f,b
 24890  011134  2B88               	incf	(__doprnt@prec+1)& (0+255),f,b
 24891  011136  D042               	goto	l18358
 24892  011138                     l18328:
 24893                           
 24894                           ; BSR set to: 2
 24895                           ;doprnt.c: 1321: case 0xC0:;doprnt.c: 1324: for(c = 1 ; c != sizeof dpowers/sizeof dpowe
      +                          rs[0] ; c++)
 24896  011138  0E01               	movlw	1
 24897  01113A  6F8B               	movwf	__doprnt@c& (0+255),b
 24898  01113C                     l18330:
 24899                           
 24900                           ; BSR set to: 2
 24901  01113C  0E0A               	movlw	10
 24902  01113E  198B               	xorwf	__doprnt@c& (0+255),w,b
 24903  011140  B4D8               	btfsc	status,2,c
 24904  011142  D047               	goto	l18360
 24905                           
 24906                           ; BSR set to: 2
 24907                           ;doprnt.c: 1325: if(val < dpowers[c])
 24908  011144  518B               	movf	__doprnt@c& (0+255),w,b
 24909  011146  0D04               	mullw	4
 24910  011148  0E47               	movlw	low _dpowers
 24911  01114A  24F3               	addwf	prodl,w,c
 24912  01114C  6EF6               	movwf	tblptrl,c
 24913  01114E  0EE8               	movlw	high _dpowers
 24914  011150  20F4               	addwfc	prodh,w,c
 24915  011152  6EF7               	movwf	tblptrh,c
 24916  011154                     	if	1	;There are 3 active tblptr bytes
 24917  011154  6AF8               	clrf	tblptru,c
 24918  011156  0E00               	movlw	low (__mediumconst shr (0+16))
 24919  011158  22F8               	addwfc	tblptru,f,c
 24920  01115A                     	endif
 24921  01115A  0009               	tblrd		*+
 24922  01115C  50F5               	movf	tablat,w,c
 24923  01115E  5D81               	subwf	__doprnt@val& (0+255),w,b
 24924  011160  0009               	tblrd		*+
 24925  011162  50F5               	movf	tablat,w,c
 24926  011164  5982               	subwfb	(__doprnt@val+1)& (0+255),w,b
 24927  011166  0009               	tblrd		*+
 24928  011168  50F5               	movf	tablat,w,c
 24929  01116A  5983               	subwfb	(__doprnt@val+2)& (0+255),w,b
 24930  01116C  0009               	tblrd		*+
 24931  01116E  50F5               	movf	tablat,w,c
 24932  011170  5984               	subwfb	(__doprnt@val+3)& (0+255),w,b
 24933  011172  A0D8               	btfss	status,0,c
 24934  011174  D02E               	goto	l18360
 24935                           
 24936                           ; BSR set to: 2
 24937  011176  2B8B               	incf	__doprnt@c& (0+255),f,b
 24938  011178  D7E1               	goto	l18330
 24939  01117A                     l18342:
 24940                           
 24941                           ; BSR set to: 2
 24942                           ;doprnt.c: 1335: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 24943  01117A  0E01               	movlw	1
 24944  01117C  6F8B               	movwf	__doprnt@c& (0+255),b
 24945  01117E                     l18344:
 24946                           
 24947                           ; BSR set to: 2
 24948  01117E  0E08               	movlw	8
 24949  011180  198B               	xorwf	__doprnt@c& (0+255),w,b
 24950  011182  B4D8               	btfsc	status,2,c
 24951  011184  D026               	goto	l18360
 24952                           
 24953                           ; BSR set to: 2
 24954                           ;doprnt.c: 1336: if(val < hexpowers[c])
 24955  011186  518B               	movf	__doprnt@c& (0+255),w,b
 24956  011188  0D04               	mullw	4
 24957  01118A  0E27               	movlw	low _hexpowers
 24958  01118C  24F3               	addwf	prodl,w,c
 24959  01118E  6EF6               	movwf	tblptrl,c
 24960  011190  0EE5               	movlw	high _hexpowers
 24961  011192  20F4               	addwfc	prodh,w,c
 24962  011194  6EF7               	movwf	tblptrh,c
 24963  011196                     	if	1	;There are 3 active tblptr bytes
 24964  011196  6AF8               	clrf	tblptru,c
 24965  011198  0E00               	movlw	low (__mediumconst shr (0+16))
 24966  01119A  22F8               	addwfc	tblptru,f,c
 24967  01119C                     	endif
 24968  01119C  0009               	tblrd		*+
 24969  01119E  50F5               	movf	tablat,w,c
 24970  0111A0  5D81               	subwf	__doprnt@val& (0+255),w,b
 24971  0111A2  0009               	tblrd		*+
 24972  0111A4  50F5               	movf	tablat,w,c
 24973  0111A6  5982               	subwfb	(__doprnt@val+1)& (0+255),w,b
 24974  0111A8  0009               	tblrd		*+
 24975  0111AA  50F5               	movf	tablat,w,c
 24976  0111AC  5983               	subwfb	(__doprnt@val+2)& (0+255),w,b
 24977  0111AE  0009               	tblrd		*+
 24978  0111B0  50F5               	movf	tablat,w,c
 24979  0111B2  5984               	subwfb	(__doprnt@val+3)& (0+255),w,b
 24980  0111B4  A0D8               	btfss	status,0,c
 24981  0111B6  D00D               	goto	l18360
 24982                           
 24983                           ; BSR set to: 2
 24984  0111B8  2B8B               	incf	__doprnt@c& (0+255),f,b
 24985  0111BA  D7E1               	goto	l18344
 24986  0111BC                     l18358:
 24987                           
 24988                           ; BSR set to: 2
 24989  0111BC  5189               	movf	__doprnt@flag& (0+255),w,b
 24990  0111BE  0BC0               	andlw	192
 24991                           
 24992                           ; Switch size 1, requested type "simple"
 24993                           ; Number of cases is 3, Range of values is 0 to 192
 24994                           ; switch strategies available:
 24995                           ; Name         Instructions Cycles
 24996                           ; simple_byte           10     6 (average)
 24997                           ;	Chosen strategy is simple_byte
 24998  0111C0  0A00               	xorlw	0	; case 0
 24999  0111C2  B4D8               	btfsc	status,2,c
 25000  0111C4  D7B9               	goto	l18328
 25001  0111C6  0A80               	xorlw	128	; case 128
 25002  0111C8  B4D8               	btfsc	status,2,c
 25003  0111CA  D7D7               	goto	l18342
 25004  0111CC  0A40               	xorlw	64	; case 192
 25005  0111CE  B4D8               	btfsc	status,2,c
 25006  0111D0  D7B3               	goto	l18328
 25007  0111D2                     l18360:
 25008                           
 25009                           ; BSR set to: 2
 25010                           ;doprnt.c: 1358: if(c < prec)
 25011  0111D2  518B               	movf	__doprnt@c& (0+255),w,b
 25012  0111D4  6F5A               	movwf	??__doprnt& (0+255),b
 25013  0111D6  6B5B               	clrf	(??__doprnt+1)& (0+255),b
 25014  0111D8  5187               	movf	__doprnt@prec& (0+255),w,b
 25015  0111DA  5D5A               	subwf	??__doprnt& (0+255),w,b
 25016  0111DC  515B               	movf	(??__doprnt+1)& (0+255),w,b
 25017  0111DE  0A80               	xorlw	128
 25018  0111E0  6F5C               	movwf	(??__doprnt+2)& (0+255),b
 25019  0111E2  5188               	movf	(__doprnt@prec+1)& (0+255),w,b
 25020  0111E4  0A80               	xorlw	128
 25021  0111E6  595C               	subwfb	(??__doprnt+2)& (0+255),w,b
 25022  0111E8  B0D8               	btfsc	status,0,c
 25023  0111EA  D003               	goto	l18364
 25024                           
 25025                           ; BSR set to: 2
 25026                           ;doprnt.c: 1359: c = prec;
 25027  0111EC  C287  F28B         	movff	__doprnt@prec,__doprnt@c
 25028  0111F0  D010               	goto	l18368
 25029  0111F2                     l18364:
 25030                           
 25031                           ; BSR set to: 2
 25032                           ;doprnt.c: 1360: else if(prec < c)
 25033  0111F2  518B               	movf	__doprnt@c& (0+255),w,b
 25034  0111F4  6F5A               	movwf	??__doprnt& (0+255),b
 25035  0111F6  6B5B               	clrf	(??__doprnt+1)& (0+255),b
 25036  0111F8  515A               	movf	??__doprnt& (0+255),w,b
 25037  0111FA  5D87               	subwf	__doprnt@prec& (0+255),w,b
 25038  0111FC  5188               	movf	(__doprnt@prec+1)& (0+255),w,b
 25039  0111FE  0A80               	xorlw	128
 25040  011200  6F5C               	movwf	(??__doprnt+2)& (0+255),b
 25041  011202  515B               	movf	(??__doprnt+1)& (0+255),w,b
 25042  011204  0A80               	xorlw	128
 25043  011206  595C               	subwfb	(??__doprnt+2)& (0+255),w,b
 25044  011208  B0D8               	btfsc	status,0,c
 25045  01120A  D003               	goto	l18368
 25046                           
 25047                           ; BSR set to: 2
 25048                           ;doprnt.c: 1361: prec = c;
 25049  01120C  C28B  F287         	movff	__doprnt@c,__doprnt@prec
 25050  011210  6B88               	clrf	(__doprnt@prec+1)& (0+255),b
 25051  011212                     l18368:
 25052                           
 25053                           ; BSR set to: 2
 25054                           ;doprnt.c: 1364: if(width && flag & 0x03)
 25055  011212  5185               	movf	__doprnt@width& (0+255),w,b
 25056  011214  1186               	iorwf	(__doprnt@width+1)& (0+255),w,b
 25057  011216  B4D8               	btfsc	status,2,c
 25058  011218  D00D               	goto	l18374
 25059                           
 25060                           ; BSR set to: 2
 25061  01121A  0E03               	movlw	3
 25062  01121C  1589               	andwf	__doprnt@flag& (0+255),w,b
 25063  01121E  6F5A               	movwf	??__doprnt& (0+255),b
 25064  011220  0E00               	movlw	0
 25065  011222  158A               	andwf	(__doprnt@flag+1)& (0+255),w,b
 25066  011224  6F5B               	movwf	(??__doprnt+1)& (0+255),b
 25067  011226  515A               	movf	??__doprnt& (0+255),w,b
 25068  011228  115B               	iorwf	(??__doprnt+1)& (0+255),w,b
 25069  01122A  B4D8               	btfsc	status,2,c
 25070  01122C  D003               	goto	l18374
 25071                           
 25072                           ; BSR set to: 2
 25073                           ;doprnt.c: 1365: width--;
 25074  01122E  0785               	decf	__doprnt@width& (0+255),f,b
 25075  011230  A0D8               	btfss	status,0,c
 25076  011232  0786               	decf	(__doprnt@width+1)& (0+255),f,b
 25077  011234                     l18374:
 25078                           
 25079                           ; BSR set to: 2
 25080                           ;doprnt.c: 1367: if(flag & 0x4000) {
 25081  011234  AD8A               	btfss	(__doprnt@flag+1)& (0+255),6,b
 25082  011236  D013               	goto	l18382
 25083                           
 25084                           ; BSR set to: 2
 25085                           ;doprnt.c: 1368: if(width > prec)
 25086  011238  5185               	movf	__doprnt@width& (0+255),w,b
 25087  01123A  5D87               	subwf	__doprnt@prec& (0+255),w,b
 25088  01123C  5188               	movf	(__doprnt@prec+1)& (0+255),w,b
 25089  01123E  0A80               	xorlw	128
 25090  011240  6F5A               	movwf	??__doprnt& (0+255),b
 25091  011242  5186               	movf	(__doprnt@width+1)& (0+255),w,b
 25092  011244  0A80               	xorlw	128
 25093  011246  595A               	subwfb	??__doprnt& (0+255),w,b
 25094  011248  B0D8               	btfsc	status,0,c
 25095  01124A  D005               	goto	l18380
 25096                           
 25097                           ; BSR set to: 2
 25098                           ;doprnt.c: 1369: width -= prec;
 25099  01124C  5187               	movf	__doprnt@prec& (0+255),w,b
 25100  01124E  5F85               	subwf	__doprnt@width& (0+255),f,b
 25101  011250  5188               	movf	(__doprnt@prec+1)& (0+255),w,b
 25102  011252  5B86               	subwfb	(__doprnt@width+1)& (0+255),f,b
 25103  011254  D004               	goto	l18382
 25104  011256                     l18380:
 25105                           
 25106                           ; BSR set to: 2
 25107                           ;doprnt.c: 1370: else;doprnt.c: 1371: width = 0;
 25108  011256  0E00               	movlw	0
 25109  011258  6F86               	movwf	(__doprnt@width+1)& (0+255),b
 25110  01125A  0E00               	movlw	0
 25111  01125C  6F85               	movwf	__doprnt@width& (0+255),b
 25112  01125E                     l18382:
 25113                           
 25114                           ; BSR set to: 2
 25115                           ;doprnt.c: 1372: };doprnt.c: 1400: if(width > c)
 25116  01125E  518B               	movf	__doprnt@c& (0+255),w,b
 25117  011260  6F5A               	movwf	??__doprnt& (0+255),b
 25118  011262  6B5B               	clrf	(??__doprnt+1)& (0+255),b
 25119  011264  5185               	movf	__doprnt@width& (0+255),w,b
 25120  011266  5D5A               	subwf	??__doprnt& (0+255),w,b
 25121  011268  515B               	movf	(??__doprnt+1)& (0+255),w,b
 25122  01126A  0A80               	xorlw	128
 25123  01126C  6F5C               	movwf	(??__doprnt+2)& (0+255),b
 25124  01126E  5186               	movf	(__doprnt@width+1)& (0+255),w,b
 25125  011270  0A80               	xorlw	128
 25126  011272  595C               	subwfb	(??__doprnt+2)& (0+255),w,b
 25127  011274  B0D8               	btfsc	status,0,c
 25128  011276  D005               	goto	l18386
 25129                           
 25130                           ; BSR set to: 2
 25131                           ;doprnt.c: 1401: width -= c;
 25132  011278  518B               	movf	__doprnt@c& (0+255),w,b
 25133  01127A  5F85               	subwf	__doprnt@width& (0+255),f,b
 25134  01127C  0E00               	movlw	0
 25135  01127E  5B86               	subwfb	(__doprnt@width+1)& (0+255),f,b
 25136  011280  D004               	goto	l18388
 25137  011282                     l18386:
 25138                           
 25139                           ; BSR set to: 2
 25140                           ;doprnt.c: 1402: else;doprnt.c: 1403: width = 0;
 25141  011282  0E00               	movlw	0
 25142  011284  6F86               	movwf	(__doprnt@width+1)& (0+255),b
 25143  011286  0E00               	movlw	0
 25144  011288  6F85               	movwf	__doprnt@width& (0+255),b
 25145  01128A                     l18388:
 25146                           
 25147                           ; BSR set to: 2
 25148                           ;doprnt.c: 1406: if(flag & 0x04) {
 25149  01128A  A589               	btfss	__doprnt@flag& (0+255),2,b
 25150  01128C  D0B5               	goto	l18430
 25151                           
 25152                           ; BSR set to: 2
 25153                           ;doprnt.c: 1408: if(flag & 0x02)
 25154  01128E  A389               	btfss	__doprnt@flag& (0+255),1,b
 25155  011290  D041               	goto	l2606
 25156                           
 25157                           ; BSR set to: 2
 25158  011292  EE20 F002          	lfsr	2,2
 25159  011296  5154               	movf	__doprnt@pb& (0+255),w,b
 25160  011298  26D9               	addwf	fsr2l,f,c
 25161  01129A  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25162  01129C  22DA               	addwfc	fsr2h,f,c
 25163  01129E  50DE               	movf	postinc2,w,c
 25164  0112A0  10DE               	iorwf	postinc2,w,c
 25165  0112A2  10DE               	iorwf	postinc2,w,c
 25166  0112A4  B4D8               	btfsc	status,2,c
 25167  0112A6  D01D               	goto	l2608
 25168                           
 25169                           ; BSR set to: 2
 25170  0112A8  B189               	btfsc	__doprnt@flag& (0+255),0,b
 25171  0112AA  D004               	goto	l18398
 25172                           
 25173                           ; BSR set to: 2
 25174  0112AC  0E00               	movlw	0
 25175  0112AE  6F6C               	movwf	(__doprnt$4979+1)& (0+255),b
 25176  0112B0  0E2B               	movlw	43
 25177  0112B2  D003               	goto	L13
 25178  0112B4                     l18398:
 25179                           
 25180                           ; BSR set to: 2
 25181  0112B4  0E00               	movlw	0
 25182  0112B6  6F6C               	movwf	(__doprnt$4979+1)& (0+255),b
 25183  0112B8  0E2D               	movlw	45
 25184  0112BA                     L13:
 25185  0112BA  6F6B               	movwf	__doprnt$4979& (0+255),b
 25186                           
 25187                           ; BSR set to: 2
 25188  0112BC  EE20 F002          	lfsr	2,2
 25189  0112C0  5154               	movf	__doprnt@pb& (0+255),w,b
 25190  0112C2  26D9               	addwf	fsr2l,f,c
 25191  0112C4  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25192  0112C6  22DA               	addwfc	fsr2h,f,c
 25193  0112C8  D801               	call	u22948
 25194  0112CA  D059               	goto	l18418
 25195  0112CC                     u22948:
 25196  0112CC  0005               	push	
 25197  0112CE  6EFA               	movwf	pclath,c
 25198  0112D0  50DE               	movf	postinc2,w,c
 25199  0112D2  6EFD               	movwf	tosl,c
 25200  0112D4  50DE               	movf	postinc2,w,c
 25201  0112D6  6EFE               	movwf	tosh,c
 25202  0112D8  50DE               	movf	postinc2,w,c
 25203  0112DA  6EFF               	movwf	tosu,c
 25204  0112DC  50FA               	movf	pclath,w,c
 25205  0112DE  516B               	movf	__doprnt$4979& (0+255),w,b
 25206  0112E0  0012               	return		;indir
 25207  0112E2                     l2608:
 25208                           
 25209                           ; BSR set to: 2
 25210  0112E2  B189               	btfsc	__doprnt@flag& (0+255),0,b
 25211  0112E4  D004               	goto	l18404
 25212                           
 25213                           ; BSR set to: 2
 25214  0112E6  0E00               	movlw	0
 25215  0112E8  6F6E               	movwf	(__doprnt$4980+1)& (0+255),b
 25216  0112EA  0E2B               	movlw	43
 25217  0112EC  D003               	goto	L14
 25218  0112EE                     l18404:
 25219                           
 25220                           ; BSR set to: 2
 25221  0112EE  0E00               	movlw	0
 25222  0112F0  6F6E               	movwf	(__doprnt$4980+1)& (0+255),b
 25223  0112F2  0E2D               	movlw	45
 25224  0112F4                     L14:
 25225  0112F4  6F6D               	movwf	__doprnt$4980& (0+255),b
 25226                           
 25227                           ; BSR set to: 2
 25228  0112F6  C254  FFD9         	movff	__doprnt@pb,fsr2l
 25229  0112FA  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 25230  0112FE  CFDE F25A          	movff	postinc2,??__doprnt
 25231  011302  CFDD F25B          	movff	postdec2,??__doprnt+1
 25232  011306  C25A  FFD9         	movff	??__doprnt,fsr2l
 25233  01130A  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 25234  01130E  C26D  FFDF         	movff	__doprnt$4980,indf2
 25235  011312  D02E               	goto	l18416
 25236  011314                     l2606:
 25237                           
 25238                           ; BSR set to: 2
 25239                           ;doprnt.c: 1415: else;doprnt.c: 1418: if(flag & 0x01)
 25240  011314  A189               	btfss	__doprnt@flag& (0+255),0,b
 25241  011316  D033               	goto	l18418
 25242                           
 25243                           ; BSR set to: 2
 25244  011318  EE20 F002          	lfsr	2,2
 25245  01131C  5154               	movf	__doprnt@pb& (0+255),w,b
 25246  01131E  26D9               	addwf	fsr2l,f,c
 25247  011320  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25248  011322  22DA               	addwfc	fsr2h,f,c
 25249  011324  50DE               	movf	postinc2,w,c
 25250  011326  10DE               	iorwf	postinc2,w,c
 25251  011328  10DE               	iorwf	postinc2,w,c
 25252  01132A  B4D8               	btfsc	status,2,c
 25253  01132C  D013               	goto	l18414
 25254                           
 25255                           ; BSR set to: 2
 25256  01132E  EE20 F002          	lfsr	2,2
 25257  011332  5154               	movf	__doprnt@pb& (0+255),w,b
 25258  011334  26D9               	addwf	fsr2l,f,c
 25259  011336  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25260  011338  22DA               	addwfc	fsr2h,f,c
 25261  01133A  D801               	call	u22988
 25262  01133C  D020               	goto	l18418
 25263  01133E                     u22988:
 25264  01133E  0005               	push	
 25265  011340  6EFA               	movwf	pclath,c
 25266  011342  50DE               	movf	postinc2,w,c
 25267  011344  6EFD               	movwf	tosl,c
 25268  011346  50DE               	movf	postinc2,w,c
 25269  011348  6EFE               	movwf	tosh,c
 25270  01134A  50DE               	movf	postinc2,w,c
 25271  01134C  6EFF               	movwf	tosu,c
 25272  01134E  50FA               	movf	pclath,w,c
 25273  011350  0E20               	movlw	32
 25274  011352  0012               	return		;indir
 25275  011354                     l18414:
 25276                           
 25277                           ; BSR set to: 2
 25278  011354  C254  FFD9         	movff	__doprnt@pb,fsr2l
 25279  011358  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 25280  01135C  CFDE F25A          	movff	postinc2,??__doprnt
 25281  011360  CFDD F25B          	movff	postdec2,??__doprnt+1
 25282  011364  C25A  FFD9         	movff	??__doprnt,fsr2l
 25283  011368  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 25284  01136C  0E20               	movlw	32
 25285  01136E  6EDF               	movwf	indf2,c
 25286  011370                     l18416:
 25287                           
 25288                           ; BSR set to: 2
 25289  011370  C254  FFD9         	movff	__doprnt@pb,fsr2l
 25290  011374  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 25291  011378  2ADE               	incf	postinc2,f,c
 25292  01137A  0E00               	movlw	0
 25293  01137C  22DD               	addwfc	postdec2,f,c
 25294  01137E                     l18418:
 25295                           
 25296                           ;doprnt.c: 1434: if(width)
 25297  01137E  0102               	movlb	2	; () banked
 25298  011380  5185               	movf	__doprnt@width& (0+255),w,b
 25299  011382  1186               	iorwf	(__doprnt@width+1)& (0+255),w,b
 25300  011384  B4D8               	btfsc	status,2,c
 25301  011386  D1A2               	goto	l18486
 25302                           
 25303                           ; BSR set to: 2
 25304  011388  EE20 F002          	lfsr	2,2
 25305  01138C  5154               	movf	__doprnt@pb& (0+255),w,b
 25306  01138E  26D9               	addwf	fsr2l,f,c
 25307  011390  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25308  011392  22DA               	addwfc	fsr2h,f,c
 25309  011394  50DE               	movf	postinc2,w,c
 25310  011396  10DE               	iorwf	postinc2,w,c
 25311  011398  10DE               	iorwf	postinc2,w,c
 25312  01139A  B4D8               	btfsc	status,2,c
 25313  01139C  D013               	goto	l18424
 25314                           
 25315                           ; BSR set to: 2
 25316  01139E  EE20 F002          	lfsr	2,2
 25317  0113A2  5154               	movf	__doprnt@pb& (0+255),w,b
 25318  0113A4  26D9               	addwf	fsr2l,f,c
 25319  0113A6  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25320  0113A8  22DA               	addwfc	fsr2h,f,c
 25321  0113AA  D801               	call	u23018
 25322  0113AC  D020               	goto	l18428
 25323  0113AE                     u23018:
 25324  0113AE  0005               	push	
 25325  0113B0  6EFA               	movwf	pclath,c
 25326  0113B2  50DE               	movf	postinc2,w,c
 25327  0113B4  6EFD               	movwf	tosl,c
 25328  0113B6  50DE               	movf	postinc2,w,c
 25329  0113B8  6EFE               	movwf	tosh,c
 25330  0113BA  50DE               	movf	postinc2,w,c
 25331  0113BC  6EFF               	movwf	tosu,c
 25332  0113BE  50FA               	movf	pclath,w,c
 25333  0113C0  0E30               	movlw	48
 25334  0113C2  0012               	return		;indir
 25335  0113C4                     l18424:
 25336                           
 25337                           ; BSR set to: 2
 25338  0113C4  C254  FFD9         	movff	__doprnt@pb,fsr2l
 25339  0113C8  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 25340  0113CC  CFDE F25A          	movff	postinc2,??__doprnt
 25341  0113D0  CFDD F25B          	movff	postdec2,??__doprnt+1
 25342  0113D4  C25A  FFD9         	movff	??__doprnt,fsr2l
 25343  0113D8  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 25344  0113DC  0E30               	movlw	48
 25345  0113DE  6EDF               	movwf	indf2,c
 25346                           
 25347                           ; BSR set to: 2
 25348  0113E0  C254  FFD9         	movff	__doprnt@pb,fsr2l
 25349  0113E4  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 25350  0113E8  2ADE               	incf	postinc2,f,c
 25351  0113EA  0E00               	movlw	0
 25352  0113EC  22DD               	addwfc	postdec2,f,c
 25353  0113EE                     l18428:
 25354                           
 25355                           ;doprnt.c: 1437: while(--width);
 25356  0113EE  0102               	movlb	2	; () banked
 25357  0113F0  0785               	decf	__doprnt@width& (0+255),f,b
 25358  0113F2  A0D8               	btfss	status,0,c
 25359  0113F4  0786               	decf	(__doprnt@width+1)& (0+255),f,b
 25360  0113F6  D7C4               	goto	L57
 25361  0113F8                     l18430:
 25362                           
 25363                           ; BSR set to: 2
 25364                           ;doprnt.c: 1441: {;doprnt.c: 1443: if(width;doprnt.c: 1447: )
 25365  0113F8  5185               	movf	__doprnt@width& (0+255),w,b
 25366  0113FA  1186               	iorwf	(__doprnt@width+1)& (0+255),w,b
 25367  0113FC  B4D8               	btfsc	status,2,c
 25368  0113FE  D03B               	goto	u23060
 25369  011400                     u23030:
 25370                           
 25371                           ; BSR set to: 2
 25372  011400  EE20 F002          	lfsr	2,2
 25373  011404  5154               	movf	__doprnt@pb& (0+255),w,b
 25374  011406  26D9               	addwf	fsr2l,f,c
 25375  011408  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25376  01140A  22DA               	addwfc	fsr2h,f,c
 25377  01140C  50DE               	movf	postinc2,w,c
 25378  01140E  10DE               	iorwf	postinc2,w,c
 25379  011410  10DE               	iorwf	postinc2,w,c
 25380  011412  B4D8               	btfsc	status,2,c
 25381  011414  D013               	goto	l18436
 25382                           
 25383                           ; BSR set to: 2
 25384  011416  EE20 F002          	lfsr	2,2
 25385  01141A  5154               	movf	__doprnt@pb& (0+255),w,b
 25386  01141C  26D9               	addwf	fsr2l,f,c
 25387  01141E  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25388  011420  22DA               	addwfc	fsr2h,f,c
 25389  011422  D801               	call	u23058
 25390  011424  D020               	goto	l18440
 25391  011426                     u23058:
 25392  011426  0005               	push	
 25393  011428  6EFA               	movwf	pclath,c
 25394  01142A  50DE               	movf	postinc2,w,c
 25395  01142C  6EFD               	movwf	tosl,c
 25396  01142E  50DE               	movf	postinc2,w,c
 25397  011430  6EFE               	movwf	tosh,c
 25398  011432  50DE               	movf	postinc2,w,c
 25399  011434  6EFF               	movwf	tosu,c
 25400  011436  50FA               	movf	pclath,w,c
 25401  011438  0E20               	movlw	32
 25402  01143A  0012               	return		;indir
 25403  01143C                     l18436:
 25404                           
 25405                           ; BSR set to: 2
 25406  01143C  C254  FFD9         	movff	__doprnt@pb,fsr2l
 25407  011440  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 25408  011444  CFDE F25A          	movff	postinc2,??__doprnt
 25409  011448  CFDD F25B          	movff	postdec2,??__doprnt+1
 25410  01144C  C25A  FFD9         	movff	??__doprnt,fsr2l
 25411  011450  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 25412  011454  0E20               	movlw	32
 25413  011456  6EDF               	movwf	indf2,c
 25414                           
 25415                           ; BSR set to: 2
 25416  011458  C254  FFD9         	movff	__doprnt@pb,fsr2l
 25417  01145C  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 25418  011460  2ADE               	incf	postinc2,f,c
 25419  011462  0E00               	movlw	0
 25420  011464  22DD               	addwfc	postdec2,f,c
 25421  011466                     l18440:
 25422                           
 25423                           ;doprnt.c: 1450: while(--width);
 25424  011466  0102               	movlb	2	; () banked
 25425  011468  0785               	decf	__doprnt@width& (0+255),f,b
 25426  01146A  A0D8               	btfss	status,0,c
 25427  01146C  0786               	decf	(__doprnt@width+1)& (0+255),f,b
 25428  01146E  5185               	movf	__doprnt@width& (0+255),w,b
 25429  011470  1186               	iorwf	(__doprnt@width+1)& (0+255),w,b
 25430  011472  A4D8               	btfss	status,2,c
 25431  011474  D7C5               	goto	u23030
 25432  011476                     u23060:
 25433                           
 25434                           ; BSR set to: 2
 25435                           ;doprnt.c: 1453: if(flag & 0x02)
 25436  011476  A389               	btfss	__doprnt@flag& (0+255),1,b
 25437  011478  D041               	goto	l2640
 25438                           
 25439                           ; BSR set to: 2
 25440  01147A  EE20 F002          	lfsr	2,2
 25441  01147E  5154               	movf	__doprnt@pb& (0+255),w,b
 25442  011480  26D9               	addwf	fsr2l,f,c
 25443  011482  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25444  011484  22DA               	addwfc	fsr2h,f,c
 25445  011486  50DE               	movf	postinc2,w,c
 25446  011488  10DE               	iorwf	postinc2,w,c
 25447  01148A  10DE               	iorwf	postinc2,w,c
 25448  01148C  B4D8               	btfsc	status,2,c
 25449  01148E  D01D               	goto	l2642
 25450                           
 25451                           ; BSR set to: 2
 25452  011490  B189               	btfsc	__doprnt@flag& (0+255),0,b
 25453  011492  D004               	goto	l18448
 25454                           
 25455                           ; BSR set to: 2
 25456  011494  0E00               	movlw	0
 25457  011496  6F70               	movwf	(__doprnt$4981+1)& (0+255),b
 25458  011498  0E2B               	movlw	43
 25459  01149A  D003               	goto	L15
 25460  01149C                     l18448:
 25461                           
 25462                           ; BSR set to: 2
 25463  01149C  0E00               	movlw	0
 25464  01149E  6F70               	movwf	(__doprnt$4981+1)& (0+255),b
 25465  0114A0  0E2D               	movlw	45
 25466  0114A2                     L15:
 25467  0114A2  6F6F               	movwf	__doprnt$4981& (0+255),b
 25468                           
 25469                           ; BSR set to: 2
 25470  0114A4  EE20 F002          	lfsr	2,2
 25471  0114A8  5154               	movf	__doprnt@pb& (0+255),w,b
 25472  0114AA  26D9               	addwf	fsr2l,f,c
 25473  0114AC  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25474  0114AE  22DA               	addwfc	fsr2h,f,c
 25475  0114B0  D801               	call	u23108
 25476  0114B2  D10C               	goto	l18486
 25477  0114B4                     u23108:
 25478  0114B4  0005               	push	
 25479  0114B6  6EFA               	movwf	pclath,c
 25480  0114B8  50DE               	movf	postinc2,w,c
 25481  0114BA  6EFD               	movwf	tosl,c
 25482  0114BC  50DE               	movf	postinc2,w,c
 25483  0114BE  6EFE               	movwf	tosh,c
 25484  0114C0  50DE               	movf	postinc2,w,c
 25485  0114C2  6EFF               	movwf	tosu,c
 25486  0114C4  50FA               	movf	pclath,w,c
 25487  0114C6  516F               	movf	__doprnt$4981& (0+255),w,b
 25488  0114C8  0012               	return		;indir
 25489  0114CA                     l2642:
 25490                           
 25491                           ; BSR set to: 2
 25492  0114CA  B189               	btfsc	__doprnt@flag& (0+255),0,b
 25493  0114CC  D004               	goto	l18454
 25494                           
 25495                           ; BSR set to: 2
 25496  0114CE  0E00               	movlw	0
 25497  0114D0  6F72               	movwf	(__doprnt$4982+1)& (0+255),b
 25498  0114D2  0E2B               	movlw	43
 25499  0114D4  D003               	goto	L16
 25500  0114D6                     l18454:
 25501                           
 25502                           ; BSR set to: 2
 25503  0114D6  0E00               	movlw	0
 25504  0114D8  6F72               	movwf	(__doprnt$4982+1)& (0+255),b
 25505  0114DA  0E2D               	movlw	45
 25506  0114DC                     L16:
 25507  0114DC  6F71               	movwf	__doprnt$4982& (0+255),b
 25508                           
 25509                           ; BSR set to: 2
 25510  0114DE  C254  FFD9         	movff	__doprnt@pb,fsr2l
 25511  0114E2  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 25512  0114E6  CFDE F25A          	movff	postinc2,??__doprnt
 25513  0114EA  CFDD F25B          	movff	postdec2,??__doprnt+1
 25514  0114EE  C25A  FFD9         	movff	??__doprnt,fsr2l
 25515  0114F2  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 25516  0114F6  C271  FFDF         	movff	__doprnt$4982,indf2
 25517  0114FA  D0E1               	goto	l18484
 25518  0114FC                     l2640:
 25519                           
 25520                           ; BSR set to: 2
 25521                           ;doprnt.c: 1462: else if(flag & 0x01)
 25522  0114FC  A189               	btfss	__doprnt@flag& (0+255),0,b
 25523  0114FE  D0E6               	goto	l18486
 25524                           
 25525                           ; BSR set to: 2
 25526  011500  EE20 F002          	lfsr	2,2
 25527  011504  5154               	movf	__doprnt@pb& (0+255),w,b
 25528  011506  26D9               	addwf	fsr2l,f,c
 25529  011508  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25530  01150A  22DA               	addwfc	fsr2h,f,c
 25531  01150C  50DE               	movf	postinc2,w,c
 25532  01150E  10DE               	iorwf	postinc2,w,c
 25533  011510  10DE               	iorwf	postinc2,w,c
 25534  011512  B4D8               	btfsc	status,2,c
 25535  011514  D013               	goto	l18464
 25536                           
 25537                           ; BSR set to: 2
 25538  011516  EE20 F002          	lfsr	2,2
 25539  01151A  5154               	movf	__doprnt@pb& (0+255),w,b
 25540  01151C  26D9               	addwf	fsr2l,f,c
 25541  01151E  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25542  011520  22DA               	addwfc	fsr2h,f,c
 25543  011522  D801               	call	u23148
 25544  011524  D0D3               	goto	l18486
 25545  011526                     u23148:
 25546  011526  0005               	push	
 25547  011528  6EFA               	movwf	pclath,c
 25548  01152A  50DE               	movf	postinc2,w,c
 25549  01152C  6EFD               	movwf	tosl,c
 25550  01152E  50DE               	movf	postinc2,w,c
 25551  011530  6EFE               	movwf	tosh,c
 25552  011532  50DE               	movf	postinc2,w,c
 25553  011534  6EFF               	movwf	tosu,c
 25554  011536  50FA               	movf	pclath,w,c
 25555  011538  0E20               	movlw	32
 25556  01153A  0012               	return		;indir
 25557  01153C                     l18464:
 25558                           
 25559                           ; BSR set to: 2
 25560  01153C  C254  FFD9         	movff	__doprnt@pb,fsr2l
 25561  011540  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 25562  011544  CFDE F25A          	movff	postinc2,??__doprnt
 25563  011548  CFDD F25B          	movff	postdec2,??__doprnt+1
 25564  01154C  C25A  FFD9         	movff	??__doprnt,fsr2l
 25565  011550  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 25566  011554  0E20               	movlw	32
 25567  011556  6EDF               	movwf	indf2,c
 25568  011558  D0B2               	goto	l18484
 25569  01155A                     l18468:
 25570                           
 25571                           ; BSR set to: 2
 25572                           ;doprnt.c: 1505: case 0xC0:;doprnt.c: 1508: c = (val / dpowers[prec]) % 10 + '0';
 25573  01155A  C287  F25A         	movff	__doprnt@prec,??__doprnt
 25574  01155E  C288  F25B         	movff	__doprnt@prec+1,??__doprnt+1
 25575  011562  90D8               	bcf	status,0,c
 25576  011564  375A               	rlcf	??__doprnt& (0+255),f,b
 25577  011566  375B               	rlcf	(??__doprnt+1)& (0+255),f,b
 25578  011568  90D8               	bcf	status,0,c
 25579  01156A  375A               	rlcf	??__doprnt& (0+255),f,b
 25580  01156C  375B               	rlcf	(??__doprnt+1)& (0+255),f,b
 25581  01156E  0E47               	movlw	low _dpowers
 25582  011570  255A               	addwf	??__doprnt& (0+255),w,b
 25583  011572  6EF6               	movwf	tblptrl,c
 25584  011574  0EE8               	movlw	high _dpowers
 25585  011576  215B               	addwfc	(??__doprnt+1)& (0+255),w,b
 25586  011578  6EF7               	movwf	tblptrh,c
 25587  01157A                     	if	1	;There are 3 active tblptr bytes
 25588  01157A  6AF8               	clrf	tblptru,c
 25589  01157C  0E00               	movlw	low (__mediumconst shr (0+16))
 25590  01157E  22F8               	addwfc	tblptru,f,c
 25591  011580                     	endif
 25592  011580  0009               	tblrd		*+
 25593  011582  CFF5 F204          	movff	tablat,___lldiv@divisor
 25594  011586  0009               	tblrd		*+
 25595  011588  CFF5 F205          	movff	tablat,___lldiv@divisor+1
 25596  01158C  0009               	tblrd		*+
 25597  01158E  CFF5 F206          	movff	tablat,___lldiv@divisor+2
 25598  011592  000A               	tblrd		*-
 25599  011594  CFF5 F207          	movff	tablat,___lldiv@divisor+3
 25600  011598  C281  F200         	movff	__doprnt@val,___lldiv@dividend
 25601  01159C  C282  F201         	movff	__doprnt@val+1,___lldiv@dividend+1
 25602  0115A0  C283  F202         	movff	__doprnt@val+2,___lldiv@dividend+2
 25603  0115A4  C284  F203         	movff	__doprnt@val+3,___lldiv@dividend+3
 25604  0115A8  ECFD  F0D7         	call	___lldiv
 25605  0115AC  C200  F20D         	movff	?___lldiv,___llmod@dividend
 25606  0115B0  C201  F20E         	movff	?___lldiv+1,___llmod@dividend+1
 25607  0115B4  C202  F20F         	movff	?___lldiv+2,___llmod@dividend+2
 25608  0115B8  C203  F210         	movff	?___lldiv+3,___llmod@dividend+3
 25609  0115BC  0E0A               	movlw	10
 25610  0115BE  0102               	movlb	2	; () banked
 25611  0115C0  6F11               	movwf	___llmod@divisor& (0+255),b
 25612  0115C2  0E00               	movlw	0
 25613  0115C4  6F12               	movwf	(___llmod@divisor+1)& (0+255),b
 25614  0115C6  0E00               	movlw	0
 25615  0115C8  6F13               	movwf	(___llmod@divisor+2)& (0+255),b
 25616  0115CA  0E00               	movlw	0
 25617  0115CC  6F14               	movwf	(___llmod@divisor+3)& (0+255),b
 25618  0115CE  EC6C  F0D9         	call	___llmod	;wreg free
 25619  0115D2  0102               	movlb	2	; () banked
 25620  0115D4  510D               	movf	?___llmod& (0+255),w,b
 25621  0115D6  0F30               	addlw	48
 25622  0115D8  6F8B               	movwf	__doprnt@c& (0+255),b
 25623                           
 25624                           ;doprnt.c: 1510: break;
 25625  0115DA  D045               	goto	l18478
 25626  0115DC                     l18470:
 25627                           
 25628                           ; BSR set to: 2
 25629                           ;doprnt.c: 1518: {;doprnt.c: 1519: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 25630  0115DC  C281  F200         	movff	__doprnt@val,___lldiv@dividend
 25631  0115E0  C282  F201         	movff	__doprnt@val+1,___lldiv@dividend+1
 25632  0115E4  C283  F202         	movff	__doprnt@val+2,___lldiv@dividend+2
 25633  0115E8  C284  F203         	movff	__doprnt@val+3,___lldiv@dividend+3
 25634  0115EC  C287  F25A         	movff	__doprnt@prec,??__doprnt
 25635  0115F0  C288  F25B         	movff	__doprnt@prec+1,??__doprnt+1
 25636  0115F4  90D8               	bcf	status,0,c
 25637  0115F6  375A               	rlcf	??__doprnt& (0+255),f,b
 25638  0115F8  375B               	rlcf	(??__doprnt+1)& (0+255),f,b
 25639  0115FA  90D8               	bcf	status,0,c
 25640  0115FC  375A               	rlcf	??__doprnt& (0+255),f,b
 25641  0115FE  375B               	rlcf	(??__doprnt+1)& (0+255),f,b
 25642  011600  0E27               	movlw	low _hexpowers
 25643  011602  255A               	addwf	??__doprnt& (0+255),w,b
 25644  011604  6EF6               	movwf	tblptrl,c
 25645  011606  0EE5               	movlw	high _hexpowers
 25646  011608  215B               	addwfc	(??__doprnt+1)& (0+255),w,b
 25647  01160A  6EF7               	movwf	tblptrh,c
 25648  01160C                     	if	1	;There are 3 active tblptr bytes
 25649  01160C  6AF8               	clrf	tblptru,c
 25650  01160E  0E00               	movlw	low (__mediumconst shr (0+16))
 25651  011610  22F8               	addwfc	tblptru,f,c
 25652  011612                     	endif
 25653  011612  0009               	tblrd		*+
 25654  011614  CFF5 F204          	movff	tablat,___lldiv@divisor
 25655  011618  0009               	tblrd		*+
 25656  01161A  CFF5 F205          	movff	tablat,___lldiv@divisor+1
 25657  01161E  0009               	tblrd		*+
 25658  011620  CFF5 F206          	movff	tablat,___lldiv@divisor+2
 25659  011624  000A               	tblrd		*-
 25660  011626  CFF5 F207          	movff	tablat,___lldiv@divisor+3
 25661  01162A  ECFD  F0D7         	call	___lldiv	;wreg free
 25662  01162E  0102               	movlb	2	; () banked
 25663  011630  5100               	movf	?___lldiv& (0+255),w,b
 25664  011632  0B0F               	andlw	15
 25665  011634  6F62               	movwf	__doprnt@idx& (0+255),b
 25666                           
 25667                           ; BSR set to: 2
 25668                           ;doprnt.c: 1523: c = "0123456789ABCDEF"[idx];
 25669  011636  0E1F               	movlw	low STR_354
 25670  011638  2562               	addwf	__doprnt@idx& (0+255),w,b
 25671  01163A  6EF6               	movwf	tblptrl,c
 25672  01163C  6AF7               	clrf	tblptrh,c
 25673  01163E  0EFB               	movlw	high STR_354
 25674  011640  22F7               	addwfc	tblptrh,f,c
 25675  011642                     	if	1	;There are 3 active tblptr bytes
 25676  011642  6AF8               	clrf	tblptru,c
 25677  011644  0E00               	movlw	low (__mediumconst shr (0+16))
 25678  011646  22F8               	addwfc	tblptru,f,c
 25679  011648                     	endif
 25680  011648  0008               	tblrd		*
 25681  01164A  CFF5 F28B          	movff	tablat,__doprnt@c
 25682                           
 25683                           ;doprnt.c: 1527: };doprnt.c: 1529: break;
 25684  01164E  D00B               	goto	l18478
 25685  011650                     l18476:
 25686                           
 25687                           ; BSR set to: 2
 25688  011650  5189               	movf	__doprnt@flag& (0+255),w,b
 25689  011652  0BC0               	andlw	192
 25690                           
 25691                           ; Switch size 1, requested type "simple"
 25692                           ; Number of cases is 3, Range of values is 0 to 192
 25693                           ; switch strategies available:
 25694                           ; Name         Instructions Cycles
 25695                           ; simple_byte           10     6 (average)
 25696                           ;	Chosen strategy is simple_byte
 25697  011654  0A00               	xorlw	0	; case 0
 25698  011656  B4D8               	btfsc	status,2,c
 25699  011658  D780               	goto	l18468
 25700  01165A  0A80               	xorlw	128	; case 128
 25701  01165C  B4D8               	btfsc	status,2,c
 25702  01165E  D7BE               	goto	l18470
 25703  011660  0A40               	xorlw	64	; case 192
 25704  011662  B4D8               	btfsc	status,2,c
 25705  011664  D77A               	goto	l18468
 25706  011666                     l18478:
 25707                           
 25708                           ; BSR set to: 2
 25709  011666  EE20 F002          	lfsr	2,2
 25710  01166A  5154               	movf	__doprnt@pb& (0+255),w,b
 25711  01166C  26D9               	addwf	fsr2l,f,c
 25712  01166E  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25713  011670  22DA               	addwfc	fsr2h,f,c
 25714  011672  50DE               	movf	postinc2,w,c
 25715  011674  10DE               	iorwf	postinc2,w,c
 25716  011676  10DE               	iorwf	postinc2,w,c
 25717  011678  B4D8               	btfsc	status,2,c
 25718  01167A  D013               	goto	l18482
 25719                           
 25720                           ; BSR set to: 2
 25721  01167C  EE20 F002          	lfsr	2,2
 25722  011680  5154               	movf	__doprnt@pb& (0+255),w,b
 25723  011682  26D9               	addwf	fsr2l,f,c
 25724  011684  5155               	movf	(__doprnt@pb+1)& (0+255),w,b
 25725  011686  22DA               	addwfc	fsr2h,f,c
 25726  011688  D801               	call	u23168
 25727  01168A  D020               	goto	l18486
 25728  01168C                     u23168:
 25729  01168C  0005               	push	
 25730  01168E  6EFA               	movwf	pclath,c
 25731  011690  50DE               	movf	postinc2,w,c
 25732  011692  6EFD               	movwf	tosl,c
 25733  011694  50DE               	movf	postinc2,w,c
 25734  011696  6EFE               	movwf	tosh,c
 25735  011698  50DE               	movf	postinc2,w,c
 25736  01169A  6EFF               	movwf	tosu,c
 25737  01169C  50FA               	movf	pclath,w,c
 25738  01169E  518B               	movf	__doprnt@c& (0+255),w,b
 25739  0116A0  0012               	return		;indir
 25740  0116A2                     l18482:
 25741                           
 25742                           ; BSR set to: 2
 25743  0116A2  C254  FFD9         	movff	__doprnt@pb,fsr2l
 25744  0116A6  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 25745  0116AA  CFDE F25A          	movff	postinc2,??__doprnt
 25746  0116AE  CFDD F25B          	movff	postdec2,??__doprnt+1
 25747  0116B2  C25A  FFD9         	movff	??__doprnt,fsr2l
 25748  0116B6  C25B  FFDA         	movff	??__doprnt+1,fsr2h
 25749  0116BA  C28B  FFDF         	movff	__doprnt@c,indf2
 25750  0116BE                     l18484:
 25751                           
 25752                           ; BSR set to: 2
 25753  0116BE  C254  FFD9         	movff	__doprnt@pb,fsr2l
 25754  0116C2  C255  FFDA         	movff	__doprnt@pb+1,fsr2h
 25755  0116C6  2ADE               	incf	postinc2,f,c
 25756  0116C8  0E00               	movlw	0
 25757  0116CA  22DD               	addwfc	postdec2,f,c
 25758  0116CC                     l18486:
 25759  0116CC  0102               	movlb	2	; () banked
 25760  0116CE  0787               	decf	__doprnt@prec& (0+255),f,b
 25761  0116D0  A0D8               	btfss	status,0,c
 25762  0116D2  0788               	decf	(__doprnt@prec+1)& (0+255),f,b
 25763  0116D4  2987               	incf	__doprnt@prec& (0+255),w,b
 25764  0116D6  E1BC               	bnz	l18476
 25765  0116D8  2988               	incf	(__doprnt@prec+1)& (0+255),w,b
 25766  0116DA  A4D8               	btfss	status,2,c
 25767  0116DC  D7B9               	goto	l18476
 25768  0116DE                     u23170:
 25769  0116DE  0102               	movlb	2	; () banked
 25770  0116E0  5156               	movf	__doprnt@f& (0+255),w,b
 25771  0116E2  6F5A               	movwf	??__doprnt& (0+255),b
 25772  0116E4  5157               	movf	(__doprnt@f+1)& (0+255),w,b
 25773  0116E6  6F5B               	movwf	(??__doprnt+1)& (0+255),b
 25774  0116E8  4B56               	infsnz	__doprnt@f& (0+255),f,b
 25775  0116EA  2B57               	incf	(__doprnt@f+1)& (0+255),f,b
 25776  0116EC  C25A  FFF6         	movff	??__doprnt,tblptrl
 25777  0116F0  C25B  FFF7         	movff	??__doprnt+1,tblptrh
 25778  0116F4  0E00               	movlw	low (__mediumconst shr (0+16))
 25779  0116F6  6EF8               	movwf	tblptru,c
 25780  0116F8  0E0E               	movlw	(high __ramtop+-1)
 25781  0116FA  64F7               	cpfsgt	tblptrh,c
 25782  0116FC  D003               	bra	u23187
 25783  0116FE  0008               	tblrd		*
 25784  011700  50F5               	movf	tablat,w,c
 25785  011702  D005               	bra	u23180
 25786  011704                     u23187:
 25787  011704  CFF6 FFE9          	movff	tblptrl,fsr0l
 25788  011708  CFF7 FFEA          	movff	tblptrh,fsr0h
 25789  01170C  50EF               	movf	indf0,w,c
 25790  01170E                     u23180:
 25791  01170E  0102               	movlb	2	; () banked
 25792  011710  6F8B               	movwf	__doprnt@c& (0+255),b
 25793  011712  518B               	movf	__doprnt@c& (0+255),w,b
 25794  011714  A4D8               	btfss	status,2,c
 25795  011716  EF02  F080         	goto	l17942
 25796  01171A                     u23190:
 25797                           
 25798                           ; BSR set to: 2
 25799                           ;doprnt.c: 1559: return 0;
 25800  01171A  0E00               	movlw	0
 25801  01171C  6F55               	movwf	(?__doprnt+1)& (0+255),b
 25802  01171E  0E00               	movlw	0
 25803  011720  6F54               	movwf	?__doprnt& (0+255),b
 25804                           
 25805                           ; BSR set to: 2
 25806  011722  0012               	return		;funcret
 25807  011724                     __end_of__doprnt:
 25808                           	opt callstack 0
 25809                           
 25810 ;; *************** function _scale *****************
 25811 ;; Defined at:
 25812 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 25813 ;; Parameters:    Size  Location     Type
 25814 ;;  scl             1    wreg     char 
 25815 ;; Auto vars:     Size  Location     Type
 25816 ;;  scl             1   47[BANK2 ] char 
 25817 ;; Return value:  Size  Location     Type
 25818 ;;                  4   39[BANK2 ] char 
 25819 ;; Registers used:
 25820 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25821 ;; Tracked objects:
 25822 ;;		On entry : 0/0
 25823 ;;		On exit  : 0/0
 25824 ;;		Unchanged: 0/0
 25825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25826 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25827 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25829 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25830 ;;Total ram usage:        9 bytes
 25831 ;; Hardware stack levels used:    1
 25832 ;; Hardware stack levels required when called:   12
 25833 ;; This function calls:
 25834 ;;		___awdiv
 25835 ;;		___awmod
 25836 ;;		___flmul
 25837 ;; This function is called by:
 25838 ;;		__doprnt
 25839 ;; This function uses a non-reentrant model
 25840 ;;
 25841                           
 25842                           	psect	text80
 25843  0153E0                     __ptext80:
 25844                           	opt callstack 0
 25845  0153E0                     _scale:
 25846                           	opt callstack 13
 25847                           
 25848                           ; BSR set to: 2
 25849                           ;incstack = 0
 25850                           ;scale@scl stored from wreg
 25851  0153E0  0102               	movlb	2	; () banked
 25852  0153E2  6F2F               	movwf	scale@scl& (0+255),b
 25853                           
 25854                           ;doprnt.c: 436: if(scl < 0) {
 25855  0153E4  0102               	movlb	2	; () banked
 25856  0153E6  AF2F               	btfss	scale@scl& (0+255),7,b
 25857  0153E8  D10B               	goto	l17574
 25858                           
 25859                           ; BSR set to: 2
 25860                           ;doprnt.c: 437: scl = -scl;
 25861  0153EA  6D2F               	negf	scale@scl& (0+255),b
 25862                           
 25863                           ;doprnt.c: 438: if(scl>=110)
 25864  0153EC  512F               	movf	scale@scl& (0+255),w,b
 25865  0153EE  0A80               	xorlw	128
 25866  0153F0  0F12               	addlw	-238
 25867  0153F2  A0D8               	btfss	status,0,c
 25868  0153F4  D095               	goto	l17564
 25869                           
 25870                           ; BSR set to: 2
 25871                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 25872  0153F6  0E00               	movlw	0
 25873  0153F8  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 25874  0153FA  0E0A               	movlw	10
 25875  0153FC  6F08               	movwf	___awdiv@divisor& (0+255),b
 25876  0153FE  0E00               	movlw	0
 25877  015400  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 25878  015402  0E64               	movlw	100
 25879  015404  6F02               	movwf	___awmod@divisor& (0+255),b
 25880  015406  512F               	movf	scale@scl& (0+255),w,b
 25881  015408  6F00               	movwf	___awmod@dividend& (0+255),b
 25882  01540A  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 25883  01540C  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 25884  01540E  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 25885  015410  ECFB  F0D8         	call	___awmod
 25886  015414  C200  F206         	movff	?___awmod,___awdiv@dividend
 25887  015418  C201  F207         	movff	?___awmod+1,___awdiv@dividend+1
 25888  01541C  ECBA  F0D7         	call	___awdiv	;wreg free
 25889  015420  0E09               	movlw	9
 25890  015422  0102               	movlb	2	; () banked
 25891  015424  2706               	addwf	?___awdiv& (0+255),f,b
 25892  015426  5106               	movf	?___awdiv& (0+255),w,b
 25893  015428  0D04               	mullw	4
 25894  01542A  0EF3               	movlw	low __npowers_
 25895  01542C  24F3               	addwf	prodl,w,c
 25896  01542E  6EF6               	movwf	tblptrl,c
 25897  015430  0EE4               	movlw	high __npowers_
 25898  015432  20F4               	addwfc	prodh,w,c
 25899  015434  6EF7               	movwf	tblptrh,c
 25900  015436                     	if	1	;There are 3 active tblptr bytes
 25901  015436  6AF8               	clrf	tblptru,c
 25902  015438  0E00               	movlw	low (__mediumconst shr (0+16))
 25903  01543A  22F8               	addwfc	tblptru,f,c
 25904  01543C                     	endif
 25905  01543C  0009               	tblrd		*+
 25906  01543E  CFF5 F212          	movff	tablat,___flmul@a
 25907  015442  0009               	tblrd		*+
 25908  015444  CFF5 F213          	movff	tablat,___flmul@a+1
 25909  015448  0009               	tblrd		*+
 25910  01544A  CFF5 F214          	movff	tablat,___flmul@a+2
 25911  01544E  000A               	tblrd		*-
 25912  015450  CFF5 F215          	movff	tablat,___flmul@a+3
 25913  015454  0E00               	movlw	0
 25914  015456  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 25915  015458  0E64               	movlw	100
 25916  01545A  6F08               	movwf	___awdiv@divisor& (0+255),b
 25917  01545C  512F               	movf	scale@scl& (0+255),w,b
 25918  01545E  6F06               	movwf	___awdiv@dividend& (0+255),b
 25919  015460  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 25920  015462  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 25921  015464  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 25922  015466  ECBA  F0D7         	call	___awdiv	;wreg free
 25923  01546A  0E12               	movlw	18
 25924  01546C  0102               	movlb	2	; () banked
 25925  01546E  2706               	addwf	?___awdiv& (0+255),f,b
 25926  015470  5106               	movf	?___awdiv& (0+255),w,b
 25927  015472  0D04               	mullw	4
 25928  015474  0EF3               	movlw	low __npowers_
 25929  015476  24F3               	addwf	prodl,w,c
 25930  015478  6EF6               	movwf	tblptrl,c
 25931  01547A  0EE4               	movlw	high __npowers_
 25932  01547C  20F4               	addwfc	prodh,w,c
 25933  01547E  6EF7               	movwf	tblptrh,c
 25934  015480                     	if	1	;There are 3 active tblptr bytes
 25935  015480  6AF8               	clrf	tblptru,c
 25936  015482  0E00               	movlw	low (__mediumconst shr (0+16))
 25937  015484  22F8               	addwfc	tblptru,f,c
 25938  015486                     	endif
 25939  015486  0009               	tblrd		*+
 25940  015488  CFF5 F20E          	movff	tablat,___flmul@b
 25941  01548C  0009               	tblrd		*+
 25942  01548E  CFF5 F20F          	movff	tablat,___flmul@b+1
 25943  015492  0009               	tblrd		*+
 25944  015494  CFF5 F210          	movff	tablat,___flmul@b+2
 25945  015498  000A               	tblrd		*-
 25946  01549A  CFF5 F211          	movff	tablat,___flmul@b+3
 25947  01549E  EC48  F0B3         	call	___flmul	;wreg free
 25948  0154A2  C20E  F22B         	movff	?___flmul,_scale$6032
 25949  0154A6  C20F  F22C         	movff	?___flmul+1,_scale$6032+1
 25950  0154AA  C210  F22D         	movff	?___flmul+2,_scale$6032+2
 25951  0154AE  C211  F22E         	movff	?___flmul+3,_scale$6032+3
 25952                           
 25953                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 25954  0154B2  C22B  F20E         	movff	_scale$6032,___flmul@b
 25955  0154B6  C22C  F20F         	movff	_scale$6032+1,___flmul@b+1
 25956  0154BA  C22D  F210         	movff	_scale$6032+2,___flmul@b+2
 25957  0154BE  C22E  F211         	movff	_scale$6032+3,___flmul@b+3
 25958  0154C2  0E00               	movlw	0
 25959  0154C4  0102               	movlb	2	; () banked
 25960  0154C6  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 25961  0154C8  0E0A               	movlw	10
 25962  0154CA  6F02               	movwf	___awmod@divisor& (0+255),b
 25963  0154CC  512F               	movf	scale@scl& (0+255),w,b
 25964  0154CE  6F00               	movwf	___awmod@dividend& (0+255),b
 25965  0154D0  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 25966  0154D2  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 25967  0154D4  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 25968  0154D6  ECFB  F0D8         	call	___awmod	;wreg free
 25969  0154DA  0102               	movlb	2	; () banked
 25970  0154DC  5100               	movf	?___awmod& (0+255),w,b
 25971  0154DE  0D04               	mullw	4
 25972  0154E0  0EF3               	movlw	low __npowers_
 25973  0154E2  24F3               	addwf	prodl,w,c
 25974  0154E4  6EF6               	movwf	tblptrl,c
 25975  0154E6  0EE4               	movlw	high __npowers_
 25976  0154E8  20F4               	addwfc	prodh,w,c
 25977  0154EA  6EF7               	movwf	tblptrh,c
 25978  0154EC                     	if	1	;There are 3 active tblptr bytes
 25979  0154EC  6AF8               	clrf	tblptru,c
 25980  0154EE  0E00               	movlw	low (__mediumconst shr (0+16))
 25981  0154F0  22F8               	addwfc	tblptru,f,c
 25982  0154F2                     	endif
 25983  0154F2  0009               	tblrd		*+
 25984  0154F4  CFF5 F212          	movff	tablat,___flmul@a
 25985  0154F8  0009               	tblrd		*+
 25986  0154FA  CFF5 F213          	movff	tablat,___flmul@a+1
 25987  0154FE  0009               	tblrd		*+
 25988  015500  CFF5 F214          	movff	tablat,___flmul@a+2
 25989  015504  000A               	tblrd		*-
 25990  015506  CFF5 F215          	movff	tablat,___flmul@a+3
 25991  01550A  EC48  F0B3         	call	___flmul	;wreg free
 25992  01550E  C20E  F227         	movff	?___flmul,?_scale
 25993  015512  C20F  F228         	movff	?___flmul+1,?_scale+1
 25994  015516  C210  F229         	movff	?___flmul+2,?_scale+2
 25995  01551A  C211  F22A         	movff	?___flmul+3,?_scale+3
 25996  01551E  0012               	return	
 25997  015520                     l17564:
 25998                           
 25999                           ; BSR set to: 2
 26000                           ;doprnt.c: 440: else if(scl > 10)
 26001  015520  512F               	movf	scale@scl& (0+255),w,b
 26002  015522  0A80               	xorlw	128
 26003  015524  0F75               	addlw	-139
 26004  015526  A0D8               	btfss	status,0,c
 26005  015528  D053               	goto	l17570
 26006                           
 26007                           ; BSR set to: 2
 26008                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
 26009  01552A  0E00               	movlw	0
 26010  01552C  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 26011  01552E  0E0A               	movlw	10
 26012  015530  6F08               	movwf	___awdiv@divisor& (0+255),b
 26013  015532  512F               	movf	scale@scl& (0+255),w,b
 26014  015534  6F06               	movwf	___awdiv@dividend& (0+255),b
 26015  015536  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 26016  015538  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 26017  01553A  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 26018  01553C  ECBA  F0D7         	call	___awdiv	;wreg free
 26019  015540  0E09               	movlw	9
 26020  015542  0102               	movlb	2	; () banked
 26021  015544  2706               	addwf	?___awdiv& (0+255),f,b
 26022  015546  5106               	movf	?___awdiv& (0+255),w,b
 26023  015548  0D04               	mullw	4
 26024  01554A  0EF3               	movlw	low __npowers_
 26025  01554C  24F3               	addwf	prodl,w,c
 26026  01554E  6EF6               	movwf	tblptrl,c
 26027  015550  0EE4               	movlw	high __npowers_
 26028  015552  20F4               	addwfc	prodh,w,c
 26029  015554  6EF7               	movwf	tblptrh,c
 26030  015556                     	if	1	;There are 3 active tblptr bytes
 26031  015556  6AF8               	clrf	tblptru,c
 26032  015558  0E00               	movlw	low (__mediumconst shr (0+16))
 26033  01555A  22F8               	addwfc	tblptru,f,c
 26034  01555C                     	endif
 26035  01555C  0009               	tblrd		*+
 26036  01555E  CFF5 F20E          	movff	tablat,___flmul@b
 26037  015562  0009               	tblrd		*+
 26038  015564  CFF5 F20F          	movff	tablat,___flmul@b+1
 26039  015568  0009               	tblrd		*+
 26040  01556A  CFF5 F210          	movff	tablat,___flmul@b+2
 26041  01556E  000A               	tblrd		*-
 26042  015570  CFF5 F211          	movff	tablat,___flmul@b+3
 26043  015574  0E00               	movlw	0
 26044  015576  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 26045  015578  0E0A               	movlw	10
 26046  01557A  6F02               	movwf	___awmod@divisor& (0+255),b
 26047  01557C  512F               	movf	scale@scl& (0+255),w,b
 26048  01557E  6F00               	movwf	___awmod@dividend& (0+255),b
 26049  015580  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 26050  015582  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 26051  015584  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 26052  015586  ECFB  F0D8         	call	___awmod	;wreg free
 26053  01558A  0102               	movlb	2	; () banked
 26054  01558C  5100               	movf	?___awmod& (0+255),w,b
 26055  01558E  0D04               	mullw	4
 26056  015590  0EF3               	movlw	low __npowers_
 26057  015592  24F3               	addwf	prodl,w,c
 26058  015594  6EF6               	movwf	tblptrl,c
 26059  015596  0EE4               	movlw	high __npowers_
 26060  015598  20F4               	addwfc	prodh,w,c
 26061  01559A  6EF7               	movwf	tblptrh,c
 26062  01559C                     	if	1	;There are 3 active tblptr bytes
 26063  01559C  6AF8               	clrf	tblptru,c
 26064  01559E  0E00               	movlw	low (__mediumconst shr (0+16))
 26065  0155A0  22F8               	addwfc	tblptru,f,c
 26066  0155A2                     	endif
 26067  0155A2  0009               	tblrd		*+
 26068  0155A4  CFF5 F212          	movff	tablat,___flmul@a
 26069  0155A8  0009               	tblrd		*+
 26070  0155AA  CFF5 F213          	movff	tablat,___flmul@a+1
 26071  0155AE  0009               	tblrd		*+
 26072  0155B0  CFF5 F214          	movff	tablat,___flmul@a+2
 26073  0155B4  000A               	tblrd		*-
 26074  0155B6  CFF5 F215          	movff	tablat,___flmul@a+3
 26075  0155BA  EC48  F0B3         	call	___flmul	;wreg free
 26076  0155BE  C20E  F227         	movff	?___flmul,?_scale
 26077  0155C2  C20F  F228         	movff	?___flmul+1,?_scale+1
 26078  0155C6  C210  F229         	movff	?___flmul+2,?_scale+2
 26079  0155CA  C211  F22A         	movff	?___flmul+3,?_scale+3
 26080  0155CE  0012               	return	
 26081  0155D0                     l17570:
 26082                           
 26083                           ; BSR set to: 2
 26084                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
 26085  0155D0  512F               	movf	scale@scl& (0+255),w,b
 26086  0155D2  0D04               	mullw	4
 26087  0155D4  0EF3               	movlw	low __npowers_
 26088  0155D6  24F3               	addwf	prodl,w,c
 26089  0155D8  6EF6               	movwf	tblptrl,c
 26090  0155DA  0EE4               	movlw	high __npowers_
 26091  0155DC  20F4               	addwfc	prodh,w,c
 26092  0155DE  6EF7               	movwf	tblptrh,c
 26093  0155E0                     	if	1	;There are 3 active tblptr bytes
 26094  0155E0  6AF8               	clrf	tblptru,c
 26095  0155E2  0E00               	movlw	low (__mediumconst shr (0+16))
 26096  0155E4  22F8               	addwfc	tblptru,f,c
 26097  0155E6                     	endif
 26098  0155E6  0009               	tblrd		*+
 26099  0155E8  CFF5 F227          	movff	tablat,?_scale
 26100  0155EC  0009               	tblrd		*+
 26101  0155EE  CFF5 F228          	movff	tablat,?_scale+1
 26102  0155F2  0009               	tblrd		*+
 26103  0155F4  CFF5 F229          	movff	tablat,?_scale+2
 26104  0155F8  000A               	tblrd		*-
 26105  0155FA  CFF5 F22A          	movff	tablat,?_scale+3
 26106  0155FE  0012               	return	
 26107  015600                     l17574:
 26108                           
 26109                           ; BSR set to: 2
 26110                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
 26111  015600  512F               	movf	scale@scl& (0+255),w,b
 26112  015602  0A80               	xorlw	128
 26113  015604  0F12               	addlw	-238
 26114  015606  A0D8               	btfss	status,0,c
 26115  015608  D095               	goto	l17582
 26116                           
 26117                           ; BSR set to: 2
 26118                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 26119  01560A  0E00               	movlw	0
 26120  01560C  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 26121  01560E  0E0A               	movlw	10
 26122  015610  6F08               	movwf	___awdiv@divisor& (0+255),b
 26123  015612  0E00               	movlw	0
 26124  015614  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 26125  015616  0E64               	movlw	100
 26126  015618  6F02               	movwf	___awmod@divisor& (0+255),b
 26127  01561A  512F               	movf	scale@scl& (0+255),w,b
 26128  01561C  6F00               	movwf	___awmod@dividend& (0+255),b
 26129  01561E  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 26130  015620  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 26131  015622  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 26132  015624  ECFB  F0D8         	call	___awmod	;wreg free
 26133  015628  C200  F206         	movff	?___awmod,___awdiv@dividend
 26134  01562C  C201  F207         	movff	?___awmod+1,___awdiv@dividend+1
 26135  015630  ECBA  F0D7         	call	___awdiv	;wreg free
 26136  015634  0E09               	movlw	9
 26137  015636  0102               	movlb	2	; () banked
 26138  015638  2706               	addwf	?___awdiv& (0+255),f,b
 26139  01563A  5106               	movf	?___awdiv& (0+255),w,b
 26140  01563C  0D04               	mullw	4
 26141  01563E  0EBF               	movlw	low __powers_
 26142  015640  24F3               	addwf	prodl,w,c
 26143  015642  6EF6               	movwf	tblptrl,c
 26144  015644  0EE4               	movlw	high __powers_
 26145  015646  20F4               	addwfc	prodh,w,c
 26146  015648  6EF7               	movwf	tblptrh,c
 26147  01564A                     	if	1	;There are 3 active tblptr bytes
 26148  01564A  6AF8               	clrf	tblptru,c
 26149  01564C  0E00               	movlw	low (__mediumconst shr (0+16))
 26150  01564E  22F8               	addwfc	tblptru,f,c
 26151  015650                     	endif
 26152  015650  0009               	tblrd		*+
 26153  015652  CFF5 F212          	movff	tablat,___flmul@a
 26154  015656  0009               	tblrd		*+
 26155  015658  CFF5 F213          	movff	tablat,___flmul@a+1
 26156  01565C  0009               	tblrd		*+
 26157  01565E  CFF5 F214          	movff	tablat,___flmul@a+2
 26158  015662  000A               	tblrd		*-
 26159  015664  CFF5 F215          	movff	tablat,___flmul@a+3
 26160  015668  0E00               	movlw	0
 26161  01566A  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 26162  01566C  0E64               	movlw	100
 26163  01566E  6F08               	movwf	___awdiv@divisor& (0+255),b
 26164  015670  512F               	movf	scale@scl& (0+255),w,b
 26165  015672  6F06               	movwf	___awdiv@dividend& (0+255),b
 26166  015674  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 26167  015676  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 26168  015678  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 26169  01567A  ECBA  F0D7         	call	___awdiv	;wreg free
 26170  01567E  0E12               	movlw	18
 26171  015680  0102               	movlb	2	; () banked
 26172  015682  2706               	addwf	?___awdiv& (0+255),f,b
 26173  015684  5106               	movf	?___awdiv& (0+255),w,b
 26174  015686  0D04               	mullw	4
 26175  015688  0EBF               	movlw	low __powers_
 26176  01568A  24F3               	addwf	prodl,w,c
 26177  01568C  6EF6               	movwf	tblptrl,c
 26178  01568E  0EE4               	movlw	high __powers_
 26179  015690  20F4               	addwfc	prodh,w,c
 26180  015692  6EF7               	movwf	tblptrh,c
 26181  015694                     	if	1	;There are 3 active tblptr bytes
 26182  015694  6AF8               	clrf	tblptru,c
 26183  015696  0E00               	movlw	low (__mediumconst shr (0+16))
 26184  015698  22F8               	addwfc	tblptru,f,c
 26185  01569A                     	endif
 26186  01569A  0009               	tblrd		*+
 26187  01569C  CFF5 F20E          	movff	tablat,___flmul@b
 26188  0156A0  0009               	tblrd		*+
 26189  0156A2  CFF5 F20F          	movff	tablat,___flmul@b+1
 26190  0156A6  0009               	tblrd		*+
 26191  0156A8  CFF5 F210          	movff	tablat,___flmul@b+2
 26192  0156AC  000A               	tblrd		*-
 26193  0156AE  CFF5 F211          	movff	tablat,___flmul@b+3
 26194  0156B2  EC48  F0B3         	call	___flmul	;wreg free
 26195  0156B6  C20E  F22B         	movff	?___flmul,_scale$6032
 26196  0156BA  C20F  F22C         	movff	?___flmul+1,_scale$6032+1
 26197  0156BE  C210  F22D         	movff	?___flmul+2,_scale$6032+2
 26198  0156C2  C211  F22E         	movff	?___flmul+3,_scale$6032+3
 26199                           
 26200                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 26201  0156C6  C22B  F20E         	movff	_scale$6032,___flmul@b
 26202  0156CA  C22C  F20F         	movff	_scale$6032+1,___flmul@b+1
 26203  0156CE  C22D  F210         	movff	_scale$6032+2,___flmul@b+2
 26204  0156D2  C22E  F211         	movff	_scale$6032+3,___flmul@b+3
 26205  0156D6  0E00               	movlw	0
 26206  0156D8  0102               	movlb	2	; () banked
 26207  0156DA  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 26208  0156DC  0E0A               	movlw	10
 26209  0156DE  6F02               	movwf	___awmod@divisor& (0+255),b
 26210  0156E0  512F               	movf	scale@scl& (0+255),w,b
 26211  0156E2  6F00               	movwf	___awmod@dividend& (0+255),b
 26212  0156E4  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 26213  0156E6  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 26214  0156E8  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 26215  0156EA  ECFB  F0D8         	call	___awmod	;wreg free
 26216  0156EE  0102               	movlb	2	; () banked
 26217  0156F0  5100               	movf	?___awmod& (0+255),w,b
 26218  0156F2  0D04               	mullw	4
 26219  0156F4  0EBF               	movlw	low __powers_
 26220  0156F6  24F3               	addwf	prodl,w,c
 26221  0156F8  6EF6               	movwf	tblptrl,c
 26222  0156FA  0EE4               	movlw	high __powers_
 26223  0156FC  20F4               	addwfc	prodh,w,c
 26224  0156FE  6EF7               	movwf	tblptrh,c
 26225  015700                     	if	1	;There are 3 active tblptr bytes
 26226  015700  6AF8               	clrf	tblptru,c
 26227  015702  0E00               	movlw	low (__mediumconst shr (0+16))
 26228  015704  22F8               	addwfc	tblptru,f,c
 26229  015706                     	endif
 26230  015706  0009               	tblrd		*+
 26231  015708  CFF5 F212          	movff	tablat,___flmul@a
 26232  01570C  0009               	tblrd		*+
 26233  01570E  CFF5 F213          	movff	tablat,___flmul@a+1
 26234  015712  0009               	tblrd		*+
 26235  015714  CFF5 F214          	movff	tablat,___flmul@a+2
 26236  015718  000A               	tblrd		*-
 26237  01571A  CFF5 F215          	movff	tablat,___flmul@a+3
 26238  01571E  EC48  F0B3         	call	___flmul	;wreg free
 26239  015722  C20E  F227         	movff	?___flmul,?_scale
 26240  015726  C20F  F228         	movff	?___flmul+1,?_scale+1
 26241  01572A  C210  F229         	movff	?___flmul+2,?_scale+2
 26242  01572E  C211  F22A         	movff	?___flmul+3,?_scale+3
 26243  015732  0012               	return	
 26244  015734                     l17582:
 26245                           
 26246                           ; BSR set to: 2
 26247                           ;doprnt.c: 446: else if(scl > 10)
 26248  015734  512F               	movf	scale@scl& (0+255),w,b
 26249  015736  0A80               	xorlw	128
 26250  015738  0F75               	addlw	-139
 26251  01573A  A0D8               	btfss	status,0,c
 26252  01573C  D053               	goto	l17588
 26253                           
 26254                           ; BSR set to: 2
 26255                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
 26256  01573E  0E00               	movlw	0
 26257  015740  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 26258  015742  0E0A               	movlw	10
 26259  015744  6F08               	movwf	___awdiv@divisor& (0+255),b
 26260  015746  512F               	movf	scale@scl& (0+255),w,b
 26261  015748  6F06               	movwf	___awdiv@dividend& (0+255),b
 26262  01574A  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 26263  01574C  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 26264  01574E  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 26265  015750  ECBA  F0D7         	call	___awdiv	;wreg free
 26266  015754  0E09               	movlw	9
 26267  015756  0102               	movlb	2	; () banked
 26268  015758  2706               	addwf	?___awdiv& (0+255),f,b
 26269  01575A  5106               	movf	?___awdiv& (0+255),w,b
 26270  01575C  0D04               	mullw	4
 26271  01575E  0EBF               	movlw	low __powers_
 26272  015760  24F3               	addwf	prodl,w,c
 26273  015762  6EF6               	movwf	tblptrl,c
 26274  015764  0EE4               	movlw	high __powers_
 26275  015766  20F4               	addwfc	prodh,w,c
 26276  015768  6EF7               	movwf	tblptrh,c
 26277  01576A                     	if	1	;There are 3 active tblptr bytes
 26278  01576A  6AF8               	clrf	tblptru,c
 26279  01576C  0E00               	movlw	low (__mediumconst shr (0+16))
 26280  01576E  22F8               	addwfc	tblptru,f,c
 26281  015770                     	endif
 26282  015770  0009               	tblrd		*+
 26283  015772  CFF5 F20E          	movff	tablat,___flmul@b
 26284  015776  0009               	tblrd		*+
 26285  015778  CFF5 F20F          	movff	tablat,___flmul@b+1
 26286  01577C  0009               	tblrd		*+
 26287  01577E  CFF5 F210          	movff	tablat,___flmul@b+2
 26288  015782  000A               	tblrd		*-
 26289  015784  CFF5 F211          	movff	tablat,___flmul@b+3
 26290  015788  0E00               	movlw	0
 26291  01578A  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 26292  01578C  0E0A               	movlw	10
 26293  01578E  6F02               	movwf	___awmod@divisor& (0+255),b
 26294  015790  512F               	movf	scale@scl& (0+255),w,b
 26295  015792  6F00               	movwf	___awmod@dividend& (0+255),b
 26296  015794  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 26297  015796  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 26298  015798  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 26299  01579A  ECFB  F0D8         	call	___awmod	;wreg free
 26300  01579E  0102               	movlb	2	; () banked
 26301  0157A0  5100               	movf	?___awmod& (0+255),w,b
 26302  0157A2  0D04               	mullw	4
 26303  0157A4  0EBF               	movlw	low __powers_
 26304  0157A6  24F3               	addwf	prodl,w,c
 26305  0157A8  6EF6               	movwf	tblptrl,c
 26306  0157AA  0EE4               	movlw	high __powers_
 26307  0157AC  20F4               	addwfc	prodh,w,c
 26308  0157AE  6EF7               	movwf	tblptrh,c
 26309  0157B0                     	if	1	;There are 3 active tblptr bytes
 26310  0157B0  6AF8               	clrf	tblptru,c
 26311  0157B2  0E00               	movlw	low (__mediumconst shr (0+16))
 26312  0157B4  22F8               	addwfc	tblptru,f,c
 26313  0157B6                     	endif
 26314  0157B6  0009               	tblrd		*+
 26315  0157B8  CFF5 F212          	movff	tablat,___flmul@a
 26316  0157BC  0009               	tblrd		*+
 26317  0157BE  CFF5 F213          	movff	tablat,___flmul@a+1
 26318  0157C2  0009               	tblrd		*+
 26319  0157C4  CFF5 F214          	movff	tablat,___flmul@a+2
 26320  0157C8  000A               	tblrd		*-
 26321  0157CA  CFF5 F215          	movff	tablat,___flmul@a+3
 26322  0157CE  EC48  F0B3         	call	___flmul	;wreg free
 26323  0157D2  C20E  F227         	movff	?___flmul,?_scale
 26324  0157D6  C20F  F228         	movff	?___flmul+1,?_scale+1
 26325  0157DA  C210  F229         	movff	?___flmul+2,?_scale+2
 26326  0157DE  C211  F22A         	movff	?___flmul+3,?_scale+3
 26327  0157E2  0012               	return	
 26328  0157E4                     l17588:
 26329                           
 26330                           ; BSR set to: 2
 26331                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
 26332  0157E4  512F               	movf	scale@scl& (0+255),w,b
 26333  0157E6  0D04               	mullw	4
 26334  0157E8  0EBF               	movlw	low __powers_
 26335  0157EA  24F3               	addwf	prodl,w,c
 26336  0157EC  6EF6               	movwf	tblptrl,c
 26337  0157EE  0EE4               	movlw	high __powers_
 26338  0157F0  20F4               	addwfc	prodh,w,c
 26339  0157F2  6EF7               	movwf	tblptrh,c
 26340  0157F4                     	if	1	;There are 3 active tblptr bytes
 26341  0157F4  6AF8               	clrf	tblptru,c
 26342  0157F6  0E00               	movlw	low (__mediumconst shr (0+16))
 26343  0157F8  22F8               	addwfc	tblptru,f,c
 26344  0157FA                     	endif
 26345  0157FA  0009               	tblrd		*+
 26346  0157FC  CFF5 F227          	movff	tablat,?_scale
 26347  015800  0009               	tblrd		*+
 26348  015802  CFF5 F228          	movff	tablat,?_scale+1
 26349  015806  0009               	tblrd		*+
 26350  015808  CFF5 F229          	movff	tablat,?_scale+2
 26351  01580C  000A               	tblrd		*-
 26352  01580E  CFF5 F22A          	movff	tablat,?_scale+3
 26353  015812  0012               	return		;funcret
 26354  015814                     __end_of_scale:
 26355                           	opt callstack 0
 26356                           
 26357 ;; *************** function ___awmod *****************
 26358 ;; Defined at:
 26359 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
 26360 ;; Parameters:    Size  Location     Type
 26361 ;;  dividend        2    0[BANK2 ] int 
 26362 ;;  divisor         2    2[BANK2 ] int 
 26363 ;; Auto vars:     Size  Location     Type
 26364 ;;  sign            1    5[BANK2 ] unsigned char 
 26365 ;;  counter         1    4[BANK2 ] unsigned char 
 26366 ;; Return value:  Size  Location     Type
 26367 ;;                  2    0[BANK2 ] int 
 26368 ;; Registers used:
 26369 ;;		wreg, status,2, status,0
 26370 ;; Tracked objects:
 26371 ;;		On entry : 0/0
 26372 ;;		On exit  : 0/0
 26373 ;;		Unchanged: 0/0
 26374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26375 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26376 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26378 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26379 ;;Total ram usage:        6 bytes
 26380 ;; Hardware stack levels used:    1
 26381 ;; Hardware stack levels required when called:   11
 26382 ;; This function calls:
 26383 ;;		Nothing
 26384 ;; This function is called by:
 26385 ;;		_scale
 26386 ;; This function uses a non-reentrant model
 26387 ;;
 26388                           
 26389                           	psect	text81
 26390  01B1F6                     __ptext81:
 26391                           	opt callstack 0
 26392  01B1F6                     ___awmod:
 26393                           	opt callstack 13
 26394                           
 26395                           ;incstack = 0
 26396  01B1F6  0E00               	movlw	0
 26397  01B1F8  0102               	movlb	2	; () banked
 26398  01B1FA  6F05               	movwf	___awmod@sign& (0+255),b
 26399                           
 26400                           ; BSR set to: 2
 26401  01B1FC  AF01               	btfss	(___awmod@dividend+1)& (0+255),7,b
 26402  01B1FE  D006               	goto	l17464
 26403                           
 26404                           ; BSR set to: 2
 26405  01B200  6D00               	negf	___awmod@dividend& (0+255),b
 26406  01B202  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
 26407  01B204  B0D8               	btfsc	status,0,c
 26408  01B206  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
 26409                           
 26410                           ; BSR set to: 2
 26411  01B208  0E01               	movlw	1
 26412  01B20A  6F05               	movwf	___awmod@sign& (0+255),b
 26413  01B20C                     l17464:
 26414                           
 26415                           ; BSR set to: 2
 26416  01B20C  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
 26417  01B20E  D004               	goto	l17468
 26418                           
 26419                           ; BSR set to: 2
 26420  01B210  6D02               	negf	___awmod@divisor& (0+255),b
 26421  01B212  1F03               	comf	(___awmod@divisor+1)& (0+255),f,b
 26422  01B214  B0D8               	btfsc	status,0,c
 26423  01B216  2B03               	incf	(___awmod@divisor+1)& (0+255),f,b
 26424  01B218                     l17468:
 26425                           
 26426                           ; BSR set to: 2
 26427  01B218  5102               	movf	___awmod@divisor& (0+255),w,b
 26428  01B21A  1103               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 26429  01B21C  B4D8               	btfsc	status,2,c
 26430  01B21E  D018               	goto	l17484
 26431                           
 26432                           ; BSR set to: 2
 26433  01B220  0E01               	movlw	1
 26434  01B222  6F04               	movwf	___awmod@counter& (0+255),b
 26435  01B224  D004               	goto	l17474
 26436  01B226                     l17472:
 26437                           
 26438                           ; BSR set to: 2
 26439  01B226  90D8               	bcf	status,0,c
 26440  01B228  3702               	rlcf	___awmod@divisor& (0+255),f,b
 26441  01B22A  3703               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 26442  01B22C  2B04               	incf	___awmod@counter& (0+255),f,b
 26443  01B22E                     l17474:
 26444                           
 26445                           ; BSR set to: 2
 26446  01B22E  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
 26447  01B230  D7FA               	goto	l17472
 26448  01B232                     u21160:
 26449                           
 26450                           ; BSR set to: 2
 26451  01B232  5102               	movf	___awmod@divisor& (0+255),w,b
 26452  01B234  5D00               	subwf	___awmod@dividend& (0+255),w,b
 26453  01B236  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
 26454  01B238  5901               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 26455  01B23A  A0D8               	btfss	status,0,c
 26456  01B23C  D004               	goto	l17480
 26457                           
 26458                           ; BSR set to: 2
 26459  01B23E  5102               	movf	___awmod@divisor& (0+255),w,b
 26460  01B240  5F00               	subwf	___awmod@dividend& (0+255),f,b
 26461  01B242  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
 26462  01B244  5B01               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 26463  01B246                     l17480:
 26464                           
 26465                           ; BSR set to: 2
 26466  01B246  90D8               	bcf	status,0,c
 26467  01B248  3303               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 26468  01B24A  3302               	rrcf	___awmod@divisor& (0+255),f,b
 26469                           
 26470                           ; BSR set to: 2
 26471  01B24C  2F04               	decfsz	___awmod@counter& (0+255),f,b
 26472  01B24E  D7F1               	goto	u21160
 26473  01B250                     l17484:
 26474                           
 26475                           ; BSR set to: 2
 26476  01B250  5105               	movf	___awmod@sign& (0+255),w,b
 26477  01B252  B4D8               	btfsc	status,2,c
 26478  01B254  D004               	goto	l17488
 26479                           
 26480                           ; BSR set to: 2
 26481  01B256  6D00               	negf	___awmod@dividend& (0+255),b
 26482  01B258  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
 26483  01B25A  B0D8               	btfsc	status,0,c
 26484  01B25C  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
 26485  01B25E                     l17488:
 26486                           
 26487                           ; BSR set to: 2
 26488  01B25E  C200  F200         	movff	___awmod@dividend,?___awmod
 26489  01B262  C201  F201         	movff	___awmod@dividend+1,?___awmod+1
 26490                           
 26491                           ; BSR set to: 2
 26492  01B266  0012               	return		;funcret
 26493  01B268                     __end_of___awmod:
 26494                           	opt callstack 0
 26495                           
 26496 ;; *************** function ___awdiv *****************
 26497 ;; Defined at:
 26498 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
 26499 ;; Parameters:    Size  Location     Type
 26500 ;;  dividend        2    6[BANK2 ] int 
 26501 ;;  divisor         2    8[BANK2 ] int 
 26502 ;; Auto vars:     Size  Location     Type
 26503 ;;  quotient        2   12[BANK2 ] int 
 26504 ;;  sign            1   11[BANK2 ] unsigned char 
 26505 ;;  counter         1   10[BANK2 ] unsigned char 
 26506 ;; Return value:  Size  Location     Type
 26507 ;;                  2    6[BANK2 ] int 
 26508 ;; Registers used:
 26509 ;;		wreg, status,2, status,0
 26510 ;; Tracked objects:
 26511 ;;		On entry : 0/0
 26512 ;;		On exit  : 0/0
 26513 ;;		Unchanged: 0/0
 26514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26515 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26516 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26518 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26519 ;;Total ram usage:        8 bytes
 26520 ;; Hardware stack levels used:    1
 26521 ;; Hardware stack levels required when called:   11
 26522 ;; This function calls:
 26523 ;;		Nothing
 26524 ;; This function is called by:
 26525 ;;		_scale
 26526 ;;		__doprnt
 26527 ;; This function uses a non-reentrant model
 26528 ;;
 26529                           
 26530                           	psect	text82
 26531  01AF74                     __ptext82:
 26532                           	opt callstack 0
 26533  01AF74                     ___awdiv:
 26534                           	opt callstack 13
 26535                           
 26536                           ; BSR set to: 2
 26537                           ;incstack = 0
 26538  01AF74  0E00               	movlw	0
 26539  01AF76  0102               	movlb	2	; () banked
 26540  01AF78  6F0B               	movwf	___awdiv@sign& (0+255),b
 26541                           
 26542                           ; BSR set to: 2
 26543  01AF7A  AF09               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 26544  01AF7C  D006               	goto	l17420
 26545                           
 26546                           ; BSR set to: 2
 26547  01AF7E  6D08               	negf	___awdiv@divisor& (0+255),b
 26548  01AF80  1F09               	comf	(___awdiv@divisor+1)& (0+255),f,b
 26549  01AF82  B0D8               	btfsc	status,0,c
 26550  01AF84  2B09               	incf	(___awdiv@divisor+1)& (0+255),f,b
 26551                           
 26552                           ; BSR set to: 2
 26553  01AF86  0E01               	movlw	1
 26554  01AF88  6F0B               	movwf	___awdiv@sign& (0+255),b
 26555  01AF8A                     l17420:
 26556                           
 26557                           ; BSR set to: 2
 26558  01AF8A  AF07               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 26559  01AF8C  D006               	goto	l17426
 26560                           
 26561                           ; BSR set to: 2
 26562  01AF8E  6D06               	negf	___awdiv@dividend& (0+255),b
 26563  01AF90  1F07               	comf	(___awdiv@dividend+1)& (0+255),f,b
 26564  01AF92  B0D8               	btfsc	status,0,c
 26565  01AF94  2B07               	incf	(___awdiv@dividend+1)& (0+255),f,b
 26566                           
 26567                           ; BSR set to: 2
 26568  01AF96  0E01               	movlw	1
 26569  01AF98  1B0B               	xorwf	___awdiv@sign& (0+255),f,b
 26570  01AF9A                     l17426:
 26571                           
 26572                           ; BSR set to: 2
 26573  01AF9A  0E00               	movlw	0
 26574  01AF9C  6F0D               	movwf	(___awdiv@quotient+1)& (0+255),b
 26575  01AF9E  0E00               	movlw	0
 26576  01AFA0  6F0C               	movwf	___awdiv@quotient& (0+255),b
 26577                           
 26578                           ; BSR set to: 2
 26579  01AFA2  5108               	movf	___awdiv@divisor& (0+255),w,b
 26580  01AFA4  1109               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 26581  01AFA6  B4D8               	btfsc	status,2,c
 26582  01AFA8  D01C               	goto	l17448
 26583                           
 26584                           ; BSR set to: 2
 26585  01AFAA  0E01               	movlw	1
 26586  01AFAC  6F0A               	movwf	___awdiv@counter& (0+255),b
 26587  01AFAE  D004               	goto	l17434
 26588  01AFB0                     l17432:
 26589                           
 26590                           ; BSR set to: 2
 26591  01AFB0  90D8               	bcf	status,0,c
 26592  01AFB2  3708               	rlcf	___awdiv@divisor& (0+255),f,b
 26593  01AFB4  3709               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 26594  01AFB6  2B0A               	incf	___awdiv@counter& (0+255),f,b
 26595  01AFB8                     l17434:
 26596                           
 26597                           ; BSR set to: 2
 26598  01AFB8  AF09               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 26599  01AFBA  D7FA               	goto	l17432
 26600  01AFBC                     u21100:
 26601                           
 26602                           ; BSR set to: 2
 26603  01AFBC  90D8               	bcf	status,0,c
 26604  01AFBE  370C               	rlcf	___awdiv@quotient& (0+255),f,b
 26605  01AFC0  370D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 26606                           
 26607                           ; BSR set to: 2
 26608  01AFC2  5108               	movf	___awdiv@divisor& (0+255),w,b
 26609  01AFC4  5D06               	subwf	___awdiv@dividend& (0+255),w,b
 26610  01AFC6  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 26611  01AFC8  5907               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 26612  01AFCA  A0D8               	btfss	status,0,c
 26613  01AFCC  D005               	goto	l17444
 26614                           
 26615                           ; BSR set to: 2
 26616  01AFCE  5108               	movf	___awdiv@divisor& (0+255),w,b
 26617  01AFD0  5F06               	subwf	___awdiv@dividend& (0+255),f,b
 26618  01AFD2  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 26619  01AFD4  5B07               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 26620                           
 26621                           ; BSR set to: 2
 26622  01AFD6  810C               	bsf	___awdiv@quotient& (0+255),0,b
 26623  01AFD8                     l17444:
 26624                           
 26625                           ; BSR set to: 2
 26626  01AFD8  90D8               	bcf	status,0,c
 26627  01AFDA  3309               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 26628  01AFDC  3308               	rrcf	___awdiv@divisor& (0+255),f,b
 26629                           
 26630                           ; BSR set to: 2
 26631  01AFDE  2F0A               	decfsz	___awdiv@counter& (0+255),f,b
 26632  01AFE0  D7ED               	goto	u21100
 26633  01AFE2                     l17448:
 26634                           
 26635                           ; BSR set to: 2
 26636  01AFE2  510B               	movf	___awdiv@sign& (0+255),w,b
 26637  01AFE4  B4D8               	btfsc	status,2,c
 26638  01AFE6  D004               	goto	l17452
 26639                           
 26640                           ; BSR set to: 2
 26641  01AFE8  6D0C               	negf	___awdiv@quotient& (0+255),b
 26642  01AFEA  1F0D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 26643  01AFEC  B0D8               	btfsc	status,0,c
 26644  01AFEE  2B0D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 26645  01AFF0                     l17452:
 26646                           
 26647                           ; BSR set to: 2
 26648  01AFF0  C20C  F206         	movff	___awdiv@quotient,?___awdiv
 26649  01AFF4  C20D  F207         	movff	___awdiv@quotient+1,?___awdiv+1
 26650                           
 26651                           ; BSR set to: 2
 26652  01AFF8  0012               	return		;funcret
 26653  01AFFA                     __end_of___awdiv:
 26654                           	opt callstack 0
 26655                           
 26656 ;; *************** function _putch *****************
 26657 ;; Defined at:
 26658 ;;		line 182 in file "mcc_generated_files/eusart2.c"
 26659 ;; Parameters:    Size  Location     Type
 26660 ;;  txData          1    wreg     unsigned char 
 26661 ;; Auto vars:     Size  Location     Type
 26662 ;;  txData          1    1[BANK2 ] unsigned char 
 26663 ;; Return value:  Size  Location     Type
 26664 ;;                  1    wreg      void 
 26665 ;; Registers used:
 26666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26667 ;; Tracked objects:
 26668 ;;		On entry : 0/0
 26669 ;;		On exit  : 0/0
 26670 ;;		Unchanged: 0/0
 26671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26673 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26675 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26676 ;;Total ram usage:        1 bytes
 26677 ;; Hardware stack levels used:    1
 26678 ;; Hardware stack levels required when called:   12
 26679 ;; This function calls:
 26680 ;;		_EUSART2_Write
 26681 ;; This function is called by:
 26682 ;;		_printf
 26683 ;;		__doprnt
 26684 ;;		i2__doprnt
 26685 ;; This function uses a non-reentrant model
 26686 ;;
 26687                           
 26688                           	psect	text83
 26689  01C636                     __ptext83:
 26690                           	opt callstack 0
 26691  01C636                     _putch:
 26692                           	opt callstack 0
 26693                           
 26694                           ; BSR set to: 2
 26695                           ;Skip over the trampoline to the duplicate function for level 2
 26696  01C636  B25F               	btfsc	btemp,1,c
 26697  01C638  EF22  F0E4         	goto	i2_putch
 26698  01C63C                     _putch$intlevel0:
 26699                           	opt callstack 13
 26700                           
 26701                           ;incstack = 0
 26702                           ;putch@txData stored from wreg
 26703  01C63C  0102               	movlb	2	; () banked
 26704  01C63E  6F01               	movwf	putch@txData& (0+255),b
 26705                           
 26706                           ;eusart2.c: 184: EUSART2_Write(txData);
 26707  01C640  0102               	movlb	2	; () banked
 26708  01C642  5101               	movf	putch@txData& (0+255),w,b
 26709  01C644  EC4D  F0DB         	call	_EUSART2_Write
 26710  01C648  0012               	return		;funcret
 26711  01C64A                     __end_of_putch:
 26712                           	opt callstack 0
 26713                           
 26714 ;; *************** function _EUSART2_Write *****************
 26715 ;; Defined at:
 26716 ;;		line 153 in file "mcc_generated_files/eusart2.c"
 26717 ;; Parameters:    Size  Location     Type
 26718 ;;  txData          1    wreg     unsigned char 
 26719 ;; Auto vars:     Size  Location     Type
 26720 ;;  txData          1    0[BANK2 ] unsigned char 
 26721 ;; Return value:  Size  Location     Type
 26722 ;;                  1    wreg      void 
 26723 ;; Registers used:
 26724 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26725 ;; Tracked objects:
 26726 ;;		On entry : 0/0
 26727 ;;		On exit  : 0/0
 26728 ;;		Unchanged: 0/0
 26729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26731 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26733 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26734 ;;Total ram usage:        1 bytes
 26735 ;; Hardware stack levels used:    1
 26736 ;; Hardware stack levels required when called:   11
 26737 ;; This function calls:
 26738 ;;		Nothing
 26739 ;; This function is called by:
 26740 ;;		_putch
 26741 ;; This function uses a non-reentrant model
 26742 ;;
 26743                           
 26744                           	psect	text84
 26745  01B69A                     __ptext84:
 26746                           	opt callstack 0
 26747  01B69A                     _EUSART2_Write:
 26748                           	opt callstack 13
 26749                           
 26750                           ;incstack = 0
 26751                           ;EUSART2_Write@txData stored from wreg
 26752  01B69A  0102               	movlb	2	; () banked
 26753  01B69C  6F00               	movwf	EUSART2_Write@txData& (0+255),b
 26754                           
 26755                           ;eusart2.c: 155: while(0 == eusart2TxBufferRemaining)
 26756  01B69E  D001               	goto	l17064
 26757  01B6A0                     l122:
 26758                           
 26759                           ; BSR set to: 1
 26760  01B6A0  0004               	clrwdt		;# 
 26761  01B6A2                     l17064:
 26762  01B6A2  0101               	movlb	1	; () banked
 26763  01B6A4  518F               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 26764  01B6A6  1190               	iorwf	(_eusart2TxBufferRemaining+1)& (0+255),w,b	;volatile
 26765  01B6A8  B4D8               	btfsc	status,2,c
 26766  01B6AA  D7FA               	goto	l122
 26767                           
 26768                           ; BSR set to: 1
 26769                           ;eusart2.c: 158: };eusart2.c: 160: if(0 == PIE3bits.TX2IE)
 26770  01B6AC  010E               	movlb	14	; () banked
 26771  01B6AE  BDC5               	btfsc	197,6,b	;volatile
 26772  01B6B0  D003               	goto	l124
 26773                           
 26774                           ; BSR set to: 14
 26775                           ;eusart2.c: 161: {;eusart2.c: 162: TX2REG = txData;
 26776  01B6B2  C200  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
 26777                           
 26778                           ;eusart2.c: 163: }
 26779  01B6B6  D019               	goto	l17078
 26780  01B6B8                     l124:
 26781                           
 26782                           ; BSR set to: 14
 26783                           ;eusart2.c: 164: else;eusart2.c: 165: {;eusart2.c: 166: PIE3bits.TX2IE = 0;
 26784  01B6B8  9DC5               	bcf	197,6,b	;volatile
 26785                           
 26786                           ; BSR set to: 14
 26787                           ;eusart2.c: 167: eusart2TxBuffer[eusart2TxHead++] = txData;
 26788  01B6BA  0EC8               	movlw	low _eusart2TxBuffer
 26789  01B6BC  0101               	movlb	1	; () banked
 26790  01B6BE  2593               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
 26791  01B6C0  6ED9               	movwf	fsr2l,c
 26792  01B6C2  0E04               	movlw	high _eusart2TxBuffer
 26793  01B6C4  2194               	addwfc	(_eusart2TxHead+1)& (0+255),w,b	;volatile
 26794  01B6C6  6EDA               	movwf	fsr2h,c
 26795  01B6C8  C200  FFDF         	movff	EUSART2_Write@txData,indf2
 26796                           
 26797                           ; BSR set to: 1
 26798  01B6CC  4B93               	infsnz	_eusart2TxHead& (0+255),f,b	;volatile
 26799  01B6CE  2B94               	incf	(_eusart2TxHead+1)& (0+255),f,b	;volatile
 26800                           
 26801                           ; BSR set to: 1
 26802                           ;eusart2.c: 168: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 26803  01B6D0  0E00               	movlw	0
 26804  01B6D2  5D93               	subwf	_eusart2TxHead& (0+255),w,b	;volatile
 26805  01B6D4  0E04               	movlw	4
 26806  01B6D6  5994               	subwfb	(_eusart2TxHead+1)& (0+255),w,b	;volatile
 26807  01B6D8  A0D8               	btfss	status,0,c
 26808  01B6DA  D004               	goto	l17076
 26809                           
 26810                           ; BSR set to: 1
 26811                           ;eusart2.c: 169: {;eusart2.c: 170: eusart2TxHead = 0;
 26812  01B6DC  0E00               	movlw	0
 26813  01B6DE  6F94               	movwf	(_eusart2TxHead+1)& (0+255),b	;volatile
 26814  01B6E0  0E00               	movlw	0
 26815  01B6E2  6F93               	movwf	_eusart2TxHead& (0+255),b	;volatile
 26816  01B6E4                     l17076:
 26817                           
 26818                           ; BSR set to: 1
 26819                           ;eusart2.c: 171: };eusart2.c: 172: eusart2TxBufferRemaining--;
 26820  01B6E4  078F               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 26821  01B6E6  A0D8               	btfss	status,0,c
 26822  01B6E8  0790               	decf	(_eusart2TxBufferRemaining+1)& (0+255),f,b	;volatile
 26823  01B6EA                     l17078:
 26824                           
 26825                           ;eusart2.c: 173: };eusart2.c: 174: PIE3bits.TX2IE = 1;
 26826  01B6EA  010E               	movlb	14	; () banked
 26827  01B6EC  8DC5               	bsf	197,6,b	;volatile
 26828                           
 26829                           ; BSR set to: 14
 26830  01B6EE  0012               	return		;funcret
 26831  01B6F0                     __end_of_EUSART2_Write:
 26832                           	opt callstack 0
 26833                           
 26834 ;; *************** function _isdigit *****************
 26835 ;; Defined at:
 26836 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
 26837 ;; Parameters:    Size  Location     Type
 26838 ;;  c               1    wreg     unsigned char 
 26839 ;; Auto vars:     Size  Location     Type
 26840 ;;  c               1    2[BANK2 ] unsigned char 
 26841 ;; Return value:  Size  Location     Type
 26842 ;;		None               void
 26843 ;; Registers used:
 26844 ;;		wreg, status,2, status,0
 26845 ;; Tracked objects:
 26846 ;;		On entry : 0/0
 26847 ;;		On exit  : 0/0
 26848 ;;		Unchanged: 0/0
 26849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26851 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26852 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26853 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26854 ;;Total ram usage:        3 bytes
 26855 ;; Hardware stack levels used:    1
 26856 ;; Hardware stack levels required when called:   11
 26857 ;; This function calls:
 26858 ;;		Nothing
 26859 ;; This function is called by:
 26860 ;;		__doprnt
 26861 ;; This function uses a non-reentrant model
 26862 ;;
 26863                           
 26864                           	psect	text85
 26865  01C3B2                     __ptext85:
 26866                           	opt callstack 0
 26867  01C3B2                     _isdigit:
 26868                           	opt callstack 14
 26869                           
 26870                           ; BSR set to: 14
 26871                           ;incstack = 0
 26872                           ;isdigit@c stored from wreg
 26873  01C3B2  0102               	movlb	2	; () banked
 26874  01C3B4  6F02               	movwf	isdigit@c& (0+255),b
 26875  01C3B6  0E00               	movlw	0
 26876  01C3B8  0102               	movlb	2	; () banked
 26877  01C3BA  6F01               	movwf	_isdigit$5449& (0+255),b
 26878                           
 26879                           ; BSR set to: 2
 26880  01C3BC  0E3A               	movlw	58
 26881  01C3BE  6102               	cpfslt	isdigit@c& (0+255),b
 26882  01C3C0  D005               	goto	l17600
 26883                           
 26884                           ; BSR set to: 2
 26885  01C3C2  0E2F               	movlw	47
 26886  01C3C4  6502               	cpfsgt	isdigit@c& (0+255),b
 26887  01C3C6  D002               	goto	l17600
 26888                           
 26889                           ; BSR set to: 2
 26890  01C3C8  0E01               	movlw	1
 26891  01C3CA  6F01               	movwf	_isdigit$5449& (0+255),b
 26892  01C3CC                     l17600:
 26893                           
 26894                           ; BSR set to: 2
 26895  01C3CC  C201  F200         	movff	_isdigit$5449,??_isdigit
 26896  01C3D0  3100               	rrcf	??_isdigit& (0+255),w,b
 26897                           
 26898                           ; BSR set to: 2
 26899  01C3D2  0012               	return		;funcret
 26900  01C3D4                     __end_of_isdigit:
 26901                           	opt callstack 0
 26902                           
 26903 ;; *************** function _fround *****************
 26904 ;; Defined at:
 26905 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 26906 ;; Parameters:    Size  Location     Type
 26907 ;;  prec            1    wreg     unsigned char 
 26908 ;; Auto vars:     Size  Location     Type
 26909 ;;  prec            1   51[BANK2 ] unsigned char 
 26910 ;; Return value:  Size  Location     Type
 26911 ;;                  4   39[BANK2 ] unsigned char 
 26912 ;; Registers used:
 26913 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26914 ;; Tracked objects:
 26915 ;;		On entry : 0/0
 26916 ;;		On exit  : 0/0
 26917 ;;		Unchanged: 0/0
 26918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26919 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26920 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26922 ;;      Totals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26923 ;;Total ram usage:       13 bytes
 26924 ;; Hardware stack levels used:    1
 26925 ;; Hardware stack levels required when called:   12
 26926 ;; This function calls:
 26927 ;;		___flmul
 26928 ;;		___lwdiv
 26929 ;;		___lwmod
 26930 ;; This function is called by:
 26931 ;;		__doprnt
 26932 ;; This function uses a non-reentrant model
 26933 ;;
 26934                           
 26935                           	psect	text86
 26936  017C86                     __ptext86:
 26937                           	opt callstack 0
 26938  017C86                     _fround:
 26939                           	opt callstack 13
 26940                           
 26941                           ; BSR set to: 2
 26942                           ;incstack = 0
 26943                           ;fround@prec stored from wreg
 26944  017C86  0102               	movlb	2	; () banked
 26945  017C88  6F33               	movwf	fround@prec& (0+255),b
 26946                           
 26947                           ;doprnt.c: 421: if(prec>=110)
 26948  017C8A  0E6D               	movlw	109
 26949  017C8C  0102               	movlb	2	; () banked
 26950  017C8E  6533               	cpfsgt	fround@prec& (0+255),b
 26951  017C90  D0BA               	goto	l17544
 26952                           
 26953                           ; BSR set to: 2
 26954                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 26955  017C92  0E00               	movlw	0
 26956  017C94  6F12               	movwf	___flmul@a& (0+255),b
 26957  017C96  0E00               	movlw	0
 26958  017C98  6F13               	movwf	(___flmul@a+1)& (0+255),b
 26959  017C9A  0E00               	movlw	0
 26960  017C9C  6F14               	movwf	(___flmul@a+2)& (0+255),b
 26961  017C9E  0E3F               	movlw	63
 26962  017CA0  6F15               	movwf	(___flmul@a+3)& (0+255),b
 26963  017CA2  0E00               	movlw	0
 26964  017CA4  6F08               	movwf	(___lwdiv@divisor+1)& (0+255),b
 26965  017CA6  0E64               	movlw	100
 26966  017CA8  6F07               	movwf	___lwdiv@divisor& (0+255),b
 26967  017CAA  C233  F205         	movff	fround@prec,___lwdiv@dividend
 26968  017CAE  6B06               	clrf	(___lwdiv@dividend+1)& (0+255),b
 26969  017CB0  EC78  F0DB         	call	___lwdiv	;wreg free
 26970  017CB4  0102               	movlb	2	; () banked
 26971  017CB6  90D8               	bcf	status,0,c
 26972  017CB8  3705               	rlcf	?___lwdiv& (0+255),f,b
 26973  017CBA  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 26974  017CBC  90D8               	bcf	status,0,c
 26975  017CBE  3705               	rlcf	?___lwdiv& (0+255),f,b
 26976  017CC0  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 26977  017CC2  0E48               	movlw	72
 26978  017CC4  2705               	addwf	?___lwdiv& (0+255),f,b
 26979  017CC6  0E00               	movlw	0
 26980  017CC8  2306               	addwfc	(?___lwdiv+1)& (0+255),f,b
 26981  017CCA  0EF3               	movlw	low __npowers_
 26982  017CCC  2505               	addwf	?___lwdiv& (0+255),w,b
 26983  017CCE  6EF6               	movwf	tblptrl,c
 26984  017CD0  0EE4               	movlw	high __npowers_
 26985  017CD2  2106               	addwfc	(?___lwdiv+1)& (0+255),w,b
 26986  017CD4  6EF7               	movwf	tblptrh,c
 26987  017CD6                     	if	1	;There are 3 active tblptr bytes
 26988  017CD6  6AF8               	clrf	tblptru,c
 26989  017CD8  0E00               	movlw	low (__mediumconst shr (0+16))
 26990  017CDA  22F8               	addwfc	tblptru,f,c
 26991  017CDC                     	endif
 26992  017CDC  0009               	tblrd		*+
 26993  017CDE  CFF5 F20E          	movff	tablat,___flmul@b
 26994  017CE2  0009               	tblrd		*+
 26995  017CE4  CFF5 F20F          	movff	tablat,___flmul@b+1
 26996  017CE8  0009               	tblrd		*+
 26997  017CEA  CFF5 F210          	movff	tablat,___flmul@b+2
 26998  017CEE  000A               	tblrd		*-
 26999  017CF0  CFF5 F211          	movff	tablat,___flmul@b+3
 27000  017CF4  EC48  F0B3         	call	___flmul	;wreg free
 27001  017CF8  C20E  F22F         	movff	?___flmul,_fround$6030
 27002  017CFC  C20F  F230         	movff	?___flmul+1,_fround$6030+1
 27003  017D00  C210  F231         	movff	?___flmul+2,_fround$6030+2
 27004  017D04  C211  F232         	movff	?___flmul+3,_fround$6030+3
 27005                           
 27006                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 27007  017D08  0E00               	movlw	0
 27008  017D0A  0102               	movlb	2	; () banked
 27009  017D0C  6F08               	movwf	(___lwdiv@divisor+1)& (0+255),b
 27010  017D0E  0E0A               	movlw	10
 27011  017D10  6F07               	movwf	___lwdiv@divisor& (0+255),b
 27012  017D12  0E00               	movlw	0
 27013  017D14  6F03               	movwf	(___lwmod@divisor+1)& (0+255),b
 27014  017D16  0E64               	movlw	100
 27015  017D18  6F02               	movwf	___lwmod@divisor& (0+255),b
 27016  017D1A  C233  F200         	movff	fround@prec,___lwmod@dividend
 27017  017D1E  6B01               	clrf	(___lwmod@dividend+1)& (0+255),b
 27018  017D20  ECDF  F0DD         	call	___lwmod	;wreg free
 27019  017D24  C200  F205         	movff	?___lwmod,___lwdiv@dividend
 27020  017D28  C201  F206         	movff	?___lwmod+1,___lwdiv@dividend+1
 27021  017D2C  EC78  F0DB         	call	___lwdiv	;wreg free
 27022  017D30  0102               	movlb	2	; () banked
 27023  017D32  90D8               	bcf	status,0,c
 27024  017D34  3705               	rlcf	?___lwdiv& (0+255),f,b
 27025  017D36  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 27026  017D38  90D8               	bcf	status,0,c
 27027  017D3A  3705               	rlcf	?___lwdiv& (0+255),f,b
 27028  017D3C  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 27029  017D3E  0E24               	movlw	36
 27030  017D40  2705               	addwf	?___lwdiv& (0+255),f,b
 27031  017D42  0E00               	movlw	0
 27032  017D44  2306               	addwfc	(?___lwdiv+1)& (0+255),f,b
 27033  017D46  0EF3               	movlw	low __npowers_
 27034  017D48  2505               	addwf	?___lwdiv& (0+255),w,b
 27035  017D4A  6EF6               	movwf	tblptrl,c
 27036  017D4C  0EE4               	movlw	high __npowers_
 27037  017D4E  2106               	addwfc	(?___lwdiv+1)& (0+255),w,b
 27038  017D50  6EF7               	movwf	tblptrh,c
 27039  017D52                     	if	1	;There are 3 active tblptr bytes
 27040  017D52  6AF8               	clrf	tblptru,c
 27041  017D54  0E00               	movlw	low (__mediumconst shr (0+16))
 27042  017D56  22F8               	addwfc	tblptru,f,c
 27043  017D58                     	endif
 27044  017D58  0009               	tblrd		*+
 27045  017D5A  CFF5 F212          	movff	tablat,___flmul@a
 27046  017D5E  0009               	tblrd		*+
 27047  017D60  CFF5 F213          	movff	tablat,___flmul@a+1
 27048  017D64  0009               	tblrd		*+
 27049  017D66  CFF5 F214          	movff	tablat,___flmul@a+2
 27050  017D6A  000A               	tblrd		*-
 27051  017D6C  CFF5 F215          	movff	tablat,___flmul@a+3
 27052  017D70  C22F  F20E         	movff	_fround$6030,___flmul@b
 27053  017D74  C230  F20F         	movff	_fround$6030+1,___flmul@b+1
 27054  017D78  C231  F210         	movff	_fround$6030+2,___flmul@b+2
 27055  017D7C  C232  F211         	movff	_fround$6030+3,___flmul@b+3
 27056  017D80  EC48  F0B3         	call	___flmul	;wreg free
 27057  017D84  C20E  F22B         	movff	?___flmul,_fround$6031
 27058  017D88  C20F  F22C         	movff	?___flmul+1,_fround$6031+1
 27059  017D8C  C210  F22D         	movff	?___flmul+2,_fround$6031+2
 27060  017D90  C211  F22E         	movff	?___flmul+3,_fround$6031+3
 27061                           
 27062                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 27063  017D94  C22B  F20E         	movff	_fround$6031,___flmul@b
 27064  017D98  C22C  F20F         	movff	_fround$6031+1,___flmul@b+1
 27065  017D9C  C22D  F210         	movff	_fround$6031+2,___flmul@b+2
 27066  017DA0  C22E  F211         	movff	_fround$6031+3,___flmul@b+3
 27067  017DA4  0E00               	movlw	0
 27068  017DA6  0102               	movlb	2	; () banked
 27069  017DA8  6F03               	movwf	(___lwmod@divisor+1)& (0+255),b
 27070  017DAA  0E0A               	movlw	10
 27071  017DAC  6F02               	movwf	___lwmod@divisor& (0+255),b
 27072  017DAE  C233  F200         	movff	fround@prec,___lwmod@dividend
 27073  017DB2  6B01               	clrf	(___lwmod@dividend+1)& (0+255),b
 27074  017DB4  ECDF  F0DD         	call	___lwmod	;wreg free
 27075  017DB8  0102               	movlb	2	; () banked
 27076  017DBA  90D8               	bcf	status,0,c
 27077  017DBC  3700               	rlcf	?___lwmod& (0+255),f,b
 27078  017DBE  3701               	rlcf	(?___lwmod+1)& (0+255),f,b
 27079  017DC0  90D8               	bcf	status,0,c
 27080  017DC2  3700               	rlcf	?___lwmod& (0+255),f,b
 27081  017DC4  3701               	rlcf	(?___lwmod+1)& (0+255),f,b
 27082  017DC6  0EF3               	movlw	low __npowers_
 27083  017DC8  2500               	addwf	?___lwmod& (0+255),w,b
 27084  017DCA  6EF6               	movwf	tblptrl,c
 27085  017DCC  0EE4               	movlw	high __npowers_
 27086  017DCE  2101               	addwfc	(?___lwmod+1)& (0+255),w,b
 27087  017DD0  6EF7               	movwf	tblptrh,c
 27088  017DD2                     	if	1	;There are 3 active tblptr bytes
 27089  017DD2  6AF8               	clrf	tblptru,c
 27090  017DD4  0E00               	movlw	low (__mediumconst shr (0+16))
 27091  017DD6  22F8               	addwfc	tblptru,f,c
 27092  017DD8                     	endif
 27093  017DD8  0009               	tblrd		*+
 27094  017DDA  CFF5 F212          	movff	tablat,___flmul@a
 27095  017DDE  0009               	tblrd		*+
 27096  017DE0  CFF5 F213          	movff	tablat,___flmul@a+1
 27097  017DE4  0009               	tblrd		*+
 27098  017DE6  CFF5 F214          	movff	tablat,___flmul@a+2
 27099  017DEA  000A               	tblrd		*-
 27100  017DEC  CFF5 F215          	movff	tablat,___flmul@a+3
 27101  017DF0  EC48  F0B3         	call	___flmul	;wreg free
 27102  017DF4  C20E  F227         	movff	?___flmul,?_fround
 27103  017DF8  C20F  F228         	movff	?___flmul+1,?_fround+1
 27104  017DFC  C210  F229         	movff	?___flmul+2,?_fround+2
 27105  017E00  C211  F22A         	movff	?___flmul+3,?_fround+3
 27106  017E04  0012               	return	
 27107  017E06                     l17544:
 27108                           
 27109                           ; BSR set to: 2
 27110                           ;doprnt.c: 423: else if(prec > 10)
 27111  017E06  0E0A               	movlw	10
 27112  017E08  6533               	cpfsgt	fround@prec& (0+255),b
 27113  017E0A  D074               	goto	l17550
 27114                           
 27115                           ; BSR set to: 2
 27116                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 27117  017E0C  0E00               	movlw	0
 27118  017E0E  6F12               	movwf	___flmul@a& (0+255),b
 27119  017E10  0E00               	movlw	0
 27120  017E12  6F13               	movwf	(___flmul@a+1)& (0+255),b
 27121  017E14  0E00               	movlw	0
 27122  017E16  6F14               	movwf	(___flmul@a+2)& (0+255),b
 27123  017E18  0E3F               	movlw	63
 27124  017E1A  6F15               	movwf	(___flmul@a+3)& (0+255),b
 27125  017E1C  0E00               	movlw	0
 27126  017E1E  6F08               	movwf	(___lwdiv@divisor+1)& (0+255),b
 27127  017E20  0E0A               	movlw	10
 27128  017E22  6F07               	movwf	___lwdiv@divisor& (0+255),b
 27129  017E24  C233  F205         	movff	fround@prec,___lwdiv@dividend
 27130  017E28  6B06               	clrf	(___lwdiv@dividend+1)& (0+255),b
 27131  017E2A  EC78  F0DB         	call	___lwdiv	;wreg free
 27132  017E2E  0102               	movlb	2	; () banked
 27133  017E30  90D8               	bcf	status,0,c
 27134  017E32  3705               	rlcf	?___lwdiv& (0+255),f,b
 27135  017E34  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 27136  017E36  90D8               	bcf	status,0,c
 27137  017E38  3705               	rlcf	?___lwdiv& (0+255),f,b
 27138  017E3A  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 27139  017E3C  0E24               	movlw	36
 27140  017E3E  2705               	addwf	?___lwdiv& (0+255),f,b
 27141  017E40  0E00               	movlw	0
 27142  017E42  2306               	addwfc	(?___lwdiv+1)& (0+255),f,b
 27143  017E44  0EF3               	movlw	low __npowers_
 27144  017E46  2505               	addwf	?___lwdiv& (0+255),w,b
 27145  017E48  6EF6               	movwf	tblptrl,c
 27146  017E4A  0EE4               	movlw	high __npowers_
 27147  017E4C  2106               	addwfc	(?___lwdiv+1)& (0+255),w,b
 27148  017E4E  6EF7               	movwf	tblptrh,c
 27149  017E50                     	if	1	;There are 3 active tblptr bytes
 27150  017E50  6AF8               	clrf	tblptru,c
 27151  017E52  0E00               	movlw	low (__mediumconst shr (0+16))
 27152  017E54  22F8               	addwfc	tblptru,f,c
 27153  017E56                     	endif
 27154  017E56  0009               	tblrd		*+
 27155  017E58  CFF5 F20E          	movff	tablat,___flmul@b
 27156  017E5C  0009               	tblrd		*+
 27157  017E5E  CFF5 F20F          	movff	tablat,___flmul@b+1
 27158  017E62  0009               	tblrd		*+
 27159  017E64  CFF5 F210          	movff	tablat,___flmul@b+2
 27160  017E68  000A               	tblrd		*-
 27161  017E6A  CFF5 F211          	movff	tablat,___flmul@b+3
 27162  017E6E  EC48  F0B3         	call	___flmul	;wreg free
 27163  017E72  C20E  F22F         	movff	?___flmul,_fround$6030
 27164  017E76  C20F  F230         	movff	?___flmul+1,_fround$6030+1
 27165  017E7A  C210  F231         	movff	?___flmul+2,_fround$6030+2
 27166  017E7E  C211  F232         	movff	?___flmul+3,_fround$6030+3
 27167                           
 27168                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 27169  017E82  C22F  F20E         	movff	_fround$6030,___flmul@b
 27170  017E86  C230  F20F         	movff	_fround$6030+1,___flmul@b+1
 27171  017E8A  C231  F210         	movff	_fround$6030+2,___flmul@b+2
 27172  017E8E  C232  F211         	movff	_fround$6030+3,___flmul@b+3
 27173  017E92  0E00               	movlw	0
 27174  017E94  0102               	movlb	2	; () banked
 27175  017E96  6F03               	movwf	(___lwmod@divisor+1)& (0+255),b
 27176  017E98  0E0A               	movlw	10
 27177  017E9A  6F02               	movwf	___lwmod@divisor& (0+255),b
 27178  017E9C  C233  F200         	movff	fround@prec,___lwmod@dividend
 27179  017EA0  6B01               	clrf	(___lwmod@dividend+1)& (0+255),b
 27180  017EA2  ECDF  F0DD         	call	___lwmod	;wreg free
 27181  017EA6  0102               	movlb	2	; () banked
 27182  017EA8  90D8               	bcf	status,0,c
 27183  017EAA  3700               	rlcf	?___lwmod& (0+255),f,b
 27184  017EAC  3701               	rlcf	(?___lwmod+1)& (0+255),f,b
 27185  017EAE  90D8               	bcf	status,0,c
 27186  017EB0  3700               	rlcf	?___lwmod& (0+255),f,b
 27187  017EB2  3701               	rlcf	(?___lwmod+1)& (0+255),f,b
 27188  017EB4  0EF3               	movlw	low __npowers_
 27189  017EB6  2500               	addwf	?___lwmod& (0+255),w,b
 27190  017EB8  6EF6               	movwf	tblptrl,c
 27191  017EBA  0EE4               	movlw	high __npowers_
 27192  017EBC  2101               	addwfc	(?___lwmod+1)& (0+255),w,b
 27193  017EBE  6EF7               	movwf	tblptrh,c
 27194  017EC0                     	if	1	;There are 3 active tblptr bytes
 27195  017EC0  6AF8               	clrf	tblptru,c
 27196  017EC2  0E00               	movlw	low (__mediumconst shr (0+16))
 27197  017EC4  22F8               	addwfc	tblptru,f,c
 27198  017EC6                     	endif
 27199  017EC6  0009               	tblrd		*+
 27200  017EC8  CFF5 F212          	movff	tablat,___flmul@a
 27201  017ECC  0009               	tblrd		*+
 27202  017ECE  CFF5 F213          	movff	tablat,___flmul@a+1
 27203  017ED2  0009               	tblrd		*+
 27204  017ED4  CFF5 F214          	movff	tablat,___flmul@a+2
 27205  017ED8  000A               	tblrd		*-
 27206  017EDA  CFF5 F215          	movff	tablat,___flmul@a+3
 27207  017EDE  EC48  F0B3         	call	___flmul	;wreg free
 27208  017EE2  C20E  F227         	movff	?___flmul,?_fround
 27209  017EE6  C20F  F228         	movff	?___flmul+1,?_fround+1
 27210  017EEA  C210  F229         	movff	?___flmul+2,?_fround+2
 27211  017EEE  C211  F22A         	movff	?___flmul+3,?_fround+3
 27212  017EF2  0012               	return	
 27213  017EF4                     l17550:
 27214                           
 27215                           ; BSR set to: 2
 27216                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
 27217  017EF4  5133               	movf	fround@prec& (0+255),w,b
 27218  017EF6  0D04               	mullw	4
 27219  017EF8  0EF3               	movlw	low __npowers_
 27220  017EFA  24F3               	addwf	prodl,w,c
 27221  017EFC  6EF6               	movwf	tblptrl,c
 27222  017EFE  0EE4               	movlw	high __npowers_
 27223  017F00  20F4               	addwfc	prodh,w,c
 27224  017F02  6EF7               	movwf	tblptrh,c
 27225  017F04                     	if	1	;There are 3 active tblptr bytes
 27226  017F04  6AF8               	clrf	tblptru,c
 27227  017F06  0E00               	movlw	low (__mediumconst shr (0+16))
 27228  017F08  22F8               	addwfc	tblptru,f,c
 27229  017F0A                     	endif
 27230  017F0A  0009               	tblrd		*+
 27231  017F0C  CFF5 F20E          	movff	tablat,___flmul@b
 27232  017F10  0009               	tblrd		*+
 27233  017F12  CFF5 F20F          	movff	tablat,___flmul@b+1
 27234  017F16  0009               	tblrd		*+
 27235  017F18  CFF5 F210          	movff	tablat,___flmul@b+2
 27236  017F1C  000A               	tblrd		*-
 27237  017F1E  CFF5 F211          	movff	tablat,___flmul@b+3
 27238  017F22  0E00               	movlw	0
 27239  017F24  6F12               	movwf	___flmul@a& (0+255),b
 27240  017F26  0E00               	movlw	0
 27241  017F28  6F13               	movwf	(___flmul@a+1)& (0+255),b
 27242  017F2A  0E00               	movlw	0
 27243  017F2C  6F14               	movwf	(___flmul@a+2)& (0+255),b
 27244  017F2E  0E3F               	movlw	63
 27245  017F30  6F15               	movwf	(___flmul@a+3)& (0+255),b
 27246  017F32  EC48  F0B3         	call	___flmul	;wreg free
 27247  017F36  C20E  F227         	movff	?___flmul,?_fround
 27248  017F3A  C20F  F228         	movff	?___flmul+1,?_fround+1
 27249  017F3E  C210  F229         	movff	?___flmul+2,?_fround+2
 27250  017F42  C211  F22A         	movff	?___flmul+3,?_fround+3
 27251  017F46  0012               	return		;funcret
 27252  017F48                     __end_of_fround:
 27253                           	opt callstack 0
 27254                           
 27255 ;; *************** function ___lwmod *****************
 27256 ;; Defined at:
 27257 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
 27258 ;; Parameters:    Size  Location     Type
 27259 ;;  dividend        2    0[BANK2 ] unsigned int 
 27260 ;;  divisor         2    2[BANK2 ] unsigned int 
 27261 ;; Auto vars:     Size  Location     Type
 27262 ;;  counter         1    4[BANK2 ] unsigned char 
 27263 ;; Return value:  Size  Location     Type
 27264 ;;                  2    0[BANK2 ] unsigned int 
 27265 ;; Registers used:
 27266 ;;		wreg, status,2, status,0
 27267 ;; Tracked objects:
 27268 ;;		On entry : 0/0
 27269 ;;		On exit  : 0/0
 27270 ;;		Unchanged: 0/0
 27271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27272 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27273 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27275 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27276 ;;Total ram usage:        5 bytes
 27277 ;; Hardware stack levels used:    1
 27278 ;; Hardware stack levels required when called:   11
 27279 ;; This function calls:
 27280 ;;		Nothing
 27281 ;; This function is called by:
 27282 ;;		_fround
 27283 ;; This function uses a non-reentrant model
 27284 ;;
 27285                           
 27286                           	psect	text87
 27287  01BBBE                     __ptext87:
 27288                           	opt callstack 0
 27289  01BBBE                     ___lwmod:
 27290                           	opt callstack 13
 27291                           
 27292                           ;incstack = 0
 27293  01BBBE  0102               	movlb	2	; () banked
 27294  01BBC0  5102               	movf	___lwmod@divisor& (0+255),w,b
 27295  01BBC2  1103               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 27296  01BBC4  B4D8               	btfsc	status,2,c
 27297  01BBC6  D018               	goto	l3198
 27298                           
 27299                           ; BSR set to: 2
 27300  01BBC8  0E01               	movlw	1
 27301  01BBCA  6F04               	movwf	___lwmod@counter& (0+255),b
 27302  01BBCC  D004               	goto	l17520
 27303  01BBCE                     l17518:
 27304                           
 27305                           ; BSR set to: 2
 27306  01BBCE  90D8               	bcf	status,0,c
 27307  01BBD0  3702               	rlcf	___lwmod@divisor& (0+255),f,b
 27308  01BBD2  3703               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 27309  01BBD4  2B04               	incf	___lwmod@counter& (0+255),f,b
 27310  01BBD6                     l17520:
 27311                           
 27312                           ; BSR set to: 2
 27313  01BBD6  AF03               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 27314  01BBD8  D7FA               	goto	l17518
 27315  01BBDA                     u21230:
 27316                           
 27317                           ; BSR set to: 2
 27318  01BBDA  5102               	movf	___lwmod@divisor& (0+255),w,b
 27319  01BBDC  5D00               	subwf	___lwmod@dividend& (0+255),w,b
 27320  01BBDE  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
 27321  01BBE0  5901               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 27322  01BBE2  A0D8               	btfss	status,0,c
 27323  01BBE4  D004               	goto	l17526
 27324                           
 27325                           ; BSR set to: 2
 27326  01BBE6  5102               	movf	___lwmod@divisor& (0+255),w,b
 27327  01BBE8  5F00               	subwf	___lwmod@dividend& (0+255),f,b
 27328  01BBEA  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
 27329  01BBEC  5B01               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 27330  01BBEE                     l17526:
 27331                           
 27332                           ; BSR set to: 2
 27333  01BBEE  90D8               	bcf	status,0,c
 27334  01BBF0  3303               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 27335  01BBF2  3302               	rrcf	___lwmod@divisor& (0+255),f,b
 27336                           
 27337                           ; BSR set to: 2
 27338  01BBF4  2F04               	decfsz	___lwmod@counter& (0+255),f,b
 27339  01BBF6  D7F1               	goto	u21230
 27340  01BBF8                     l3198:
 27341                           
 27342                           ; BSR set to: 2
 27343  01BBF8  C200  F200         	movff	___lwmod@dividend,?___lwmod
 27344  01BBFC  C201  F201         	movff	___lwmod@dividend+1,?___lwmod+1
 27345                           
 27346                           ; BSR set to: 2
 27347  01BC00  0012               	return		;funcret
 27348  01BC02                     __end_of___lwmod:
 27349                           	opt callstack 0
 27350                           
 27351 ;; *************** function ___lwdiv *****************
 27352 ;; Defined at:
 27353 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
 27354 ;; Parameters:    Size  Location     Type
 27355 ;;  dividend        2    5[BANK2 ] unsigned int 
 27356 ;;  divisor         2    7[BANK2 ] unsigned int 
 27357 ;; Auto vars:     Size  Location     Type
 27358 ;;  quotient        2   10[BANK2 ] unsigned int 
 27359 ;;  counter         1    9[BANK2 ] unsigned char 
 27360 ;; Return value:  Size  Location     Type
 27361 ;;                  2    5[BANK2 ] unsigned int 
 27362 ;; Registers used:
 27363 ;;		wreg, status,2, status,0
 27364 ;; Tracked objects:
 27365 ;;		On entry : 0/0
 27366 ;;		On exit  : 0/0
 27367 ;;		Unchanged: 0/0
 27368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27369 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27370 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27372 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27373 ;;Total ram usage:        7 bytes
 27374 ;; Hardware stack levels used:    1
 27375 ;; Hardware stack levels required when called:   11
 27376 ;; This function calls:
 27377 ;;		Nothing
 27378 ;; This function is called by:
 27379 ;;		_fround
 27380 ;; This function uses a non-reentrant model
 27381 ;;
 27382                           
 27383                           	psect	text88
 27384  01B6F0                     __ptext88:
 27385                           	opt callstack 0
 27386  01B6F0                     ___lwdiv:
 27387                           	opt callstack 13
 27388                           
 27389                           ; BSR set to: 2
 27390                           ;incstack = 0
 27391  01B6F0  0E00               	movlw	0
 27392  01B6F2  0102               	movlb	2	; () banked
 27393  01B6F4  6F0B               	movwf	(___lwdiv@quotient+1)& (0+255),b
 27394  01B6F6  0E00               	movlw	0
 27395  01B6F8  6F0A               	movwf	___lwdiv@quotient& (0+255),b
 27396                           
 27397                           ; BSR set to: 2
 27398  01B6FA  5107               	movf	___lwdiv@divisor& (0+255),w,b
 27399  01B6FC  1108               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 27400  01B6FE  B4D8               	btfsc	status,2,c
 27401  01B700  D01C               	goto	l3188
 27402                           
 27403                           ; BSR set to: 2
 27404  01B702  0E01               	movlw	1
 27405  01B704  6F09               	movwf	___lwdiv@counter& (0+255),b
 27406  01B706  D004               	goto	l17500
 27407  01B708                     l17498:
 27408                           
 27409                           ; BSR set to: 2
 27410  01B708  90D8               	bcf	status,0,c
 27411  01B70A  3707               	rlcf	___lwdiv@divisor& (0+255),f,b
 27412  01B70C  3708               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 27413  01B70E  2B09               	incf	___lwdiv@counter& (0+255),f,b
 27414  01B710                     l17500:
 27415                           
 27416                           ; BSR set to: 2
 27417  01B710  AF08               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 27418  01B712  D7FA               	goto	l17498
 27419  01B714                     u21200:
 27420                           
 27421                           ; BSR set to: 2
 27422  01B714  90D8               	bcf	status,0,c
 27423  01B716  370A               	rlcf	___lwdiv@quotient& (0+255),f,b
 27424  01B718  370B               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 27425                           
 27426                           ; BSR set to: 2
 27427  01B71A  5107               	movf	___lwdiv@divisor& (0+255),w,b
 27428  01B71C  5D05               	subwf	___lwdiv@dividend& (0+255),w,b
 27429  01B71E  5108               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 27430  01B720  5906               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 27431  01B722  A0D8               	btfss	status,0,c
 27432  01B724  D005               	goto	l17510
 27433                           
 27434                           ; BSR set to: 2
 27435  01B726  5107               	movf	___lwdiv@divisor& (0+255),w,b
 27436  01B728  5F05               	subwf	___lwdiv@dividend& (0+255),f,b
 27437  01B72A  5108               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 27438  01B72C  5B06               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 27439                           
 27440                           ; BSR set to: 2
 27441  01B72E  810A               	bsf	___lwdiv@quotient& (0+255),0,b
 27442  01B730                     l17510:
 27443                           
 27444                           ; BSR set to: 2
 27445  01B730  90D8               	bcf	status,0,c
 27446  01B732  3308               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 27447  01B734  3307               	rrcf	___lwdiv@divisor& (0+255),f,b
 27448                           
 27449                           ; BSR set to: 2
 27450  01B736  2F09               	decfsz	___lwdiv@counter& (0+255),f,b
 27451  01B738  D7ED               	goto	u21200
 27452  01B73A                     l3188:
 27453                           
 27454                           ; BSR set to: 2
 27455  01B73A  C20A  F205         	movff	___lwdiv@quotient,?___lwdiv
 27456  01B73E  C20B  F206         	movff	___lwdiv@quotient+1,?___lwdiv+1
 27457                           
 27458                           ; BSR set to: 2
 27459  01B742  0012               	return		;funcret
 27460  01B744                     __end_of___lwdiv:
 27461                           	opt callstack 0
 27462                           
 27463 ;; *************** function __tdiv_to_l_ *****************
 27464 ;; Defined at:
 27465 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
 27466 ;; Parameters:    Size  Location     Type
 27467 ;;  f1              4    0[BANK2 ] float 
 27468 ;;  f2              4    4[BANK2 ] float 
 27469 ;; Auto vars:     Size  Location     Type
 27470 ;;  quot            4   11[BANK2 ] unsigned long 
 27471 ;;  exp1            1   16[BANK2 ] unsigned char 
 27472 ;;  cntr            1   15[BANK2 ] unsigned char 
 27473 ;; Return value:  Size  Location     Type
 27474 ;;                  4    0[BANK2 ] unsigned long 
 27475 ;; Registers used:
 27476 ;;		wreg, status,2, status,0
 27477 ;; Tracked objects:
 27478 ;;		On entry : 0/0
 27479 ;;		On exit  : 0/0
 27480 ;;		Unchanged: 0/0
 27481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27482 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27483 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27484 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27485 ;;      Totals:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27486 ;;Total ram usage:       17 bytes
 27487 ;; Hardware stack levels used:    1
 27488 ;; Hardware stack levels required when called:   11
 27489 ;; This function calls:
 27490 ;;		Nothing
 27491 ;; This function is called by:
 27492 ;;		__doprnt
 27493 ;; This function uses a non-reentrant model
 27494 ;;
 27495                           
 27496                           	psect	text89
 27497  019DFA                     __ptext89:
 27498                           	opt callstack 0
 27499  019DFA                     __tdiv_to_l_:
 27500                           	opt callstack 14
 27501                           
 27502                           ; BSR set to: 2
 27503                           ;incstack = 0
 27504  019DFA  C202  F208         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 27505  019DFE  0102               	movlb	2	; () banked
 27506  019E00  6B09               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 27507  019E02  6B0A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 27508  019E04  3501               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 27509  019E06  3708               	rlcf	??__tdiv_to_l_& (0+255),f,b
 27510  019E08  E301               	bnc	u21351
 27511  019E0A  8109               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 27512  019E0C                     u21351:
 27513  019E0C  5108               	movf	??__tdiv_to_l_& (0+255),w,b
 27514  019E0E  6F10               	movwf	__tdiv_to_l_@exp1& (0+255),b
 27515  019E10  5110               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 27516  019E12  A4D8               	btfss	status,2,c
 27517  019E14  D009               	goto	l17610
 27518  019E16                     u21360:
 27519                           
 27520                           ; BSR set to: 2
 27521  019E16  0E00               	movlw	0
 27522  019E18  6F00               	movwf	?__tdiv_to_l_& (0+255),b
 27523  019E1A  0E00               	movlw	0
 27524  019E1C  6F01               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 27525  019E1E  0E00               	movlw	0
 27526  019E20  6F02               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 27527  019E22  0E00               	movlw	0
 27528  019E24  6F03               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 27529  019E26  0012               	return	
 27530  019E28                     l17610:
 27531                           
 27532                           ; BSR set to: 2
 27533  019E28  C206  F208         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 27534  019E2C  6B09               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 27535  019E2E  6B0A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 27536  019E30  3505               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 27537  019E32  3708               	rlcf	??__tdiv_to_l_& (0+255),f,b
 27538  019E34  E301               	bnc	u21371
 27539  019E36  8109               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 27540  019E38                     u21371:
 27541  019E38  5108               	movf	??__tdiv_to_l_& (0+255),w,b
 27542  019E3A  6F0F               	movwf	__tdiv_to_l_@cntr& (0+255),b
 27543  019E3C  510F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 27544  019E3E  B4D8               	btfsc	status,2,c
 27545  019E40  D7EA               	goto	u21360
 27546                           
 27547                           ; BSR set to: 2
 27548  019E42  8F01               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 27549                           
 27550                           ; BSR set to: 2
 27551  019E44  0EFF               	movlw	255
 27552  019E46  1700               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 27553  019E48  0EFF               	movlw	255
 27554  019E4A  1701               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 27555  019E4C  0E00               	movlw	0
 27556  019E4E  1702               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 27557  019E50  8F05               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 27558                           
 27559                           ; BSR set to: 2
 27560  019E52  0EFF               	movlw	255
 27561  019E54  1704               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 27562  019E56  0EFF               	movlw	255
 27563  019E58  1705               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 27564  019E5A  0E00               	movlw	0
 27565  019E5C  1706               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 27566                           
 27567                           ; BSR set to: 2
 27568  019E5E  0E00               	movlw	0
 27569  019E60  6F0B               	movwf	__tdiv_to_l_@quot& (0+255),b
 27570  019E62  0E00               	movlw	0
 27571  019E64  6F0C               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 27572  019E66  0E00               	movlw	0
 27573  019E68  6F0D               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 27574  019E6A  0E00               	movlw	0
 27575  019E6C  6F0E               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 27576                           
 27577                           ; BSR set to: 2
 27578  019E6E  0E7F               	movlw	127
 27579  019E70  5F10               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 27580                           
 27581                           ; BSR set to: 2
 27582  019E72  510F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 27583  019E74  0F98               	addlw	152
 27584  019E76  5F10               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 27585                           
 27586                           ; BSR set to: 2
 27587  019E78  0E18               	movlw	24
 27588  019E7A  6F0F               	movwf	__tdiv_to_l_@cntr& (0+255),b
 27589  019E7C                     l3040:
 27590                           
 27591                           ; BSR set to: 2
 27592  019E7C  90D8               	bcf	status,0,c
 27593  019E7E  370B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 27594  019E80  370C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 27595  019E82  370D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 27596  019E84  370E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 27597                           
 27598                           ; BSR set to: 2
 27599  019E86  5104               	movf	__tdiv_to_l_@f2& (0+255),w,b
 27600  019E88  5D00               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 27601  019E8A  5105               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 27602  019E8C  5901               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 27603  019E8E  5106               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 27604  019E90  5902               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 27605  019E92  A0D8               	btfss	status,0,c
 27606  019E94  D007               	goto	l3041
 27607                           
 27608                           ; BSR set to: 2
 27609  019E96  5104               	movf	__tdiv_to_l_@f2& (0+255),w,b
 27610  019E98  5F00               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 27611  019E9A  5105               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 27612  019E9C  5B01               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 27613  019E9E  5106               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 27614  019EA0  5B02               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 27615                           
 27616                           ; BSR set to: 2
 27617  019EA2  810B               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 27618  019EA4                     l3041:
 27619                           
 27620                           ; BSR set to: 2
 27621  019EA4  90D8               	bcf	status,0,c
 27622  019EA6  3700               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 27623  019EA8  3701               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 27624  019EAA  3702               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 27625                           
 27626                           ; BSR set to: 2
 27627  019EAC  2F0F               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 27628  019EAE  D7E6               	goto	l3040
 27629                           
 27630                           ; BSR set to: 2
 27631  019EB0  AF10               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 27632  019EB2  D00D               	goto	l17650
 27633                           
 27634                           ; BSR set to: 2
 27635  019EB4  5110               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 27636  019EB6  0A80               	xorlw	128
 27637  019EB8  0F97               	addlw	151
 27638  019EBA  A0D8               	btfss	status,0,c
 27639  019EBC  D7AC               	goto	u21360
 27640  019EBE                     l17646:
 27641                           
 27642                           ; BSR set to: 2
 27643  019EBE  90D8               	bcf	status,0,c
 27644  019EC0  330E               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 27645  019EC2  330D               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 27646  019EC4  330C               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 27647  019EC6  330B               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 27648                           
 27649                           ; BSR set to: 2
 27650  019EC8  3F10               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 27651  019ECA  D7F9               	goto	l17646
 27652  019ECC  D00D               	goto	u21430
 27653  019ECE                     l17650:
 27654                           
 27655                           ; BSR set to: 2
 27656  019ECE  0E17               	movlw	23
 27657  019ED0  6510               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 27658  019ED2  D007               	goto	l17658
 27659  019ED4  D7A0               	goto	u21360
 27660  019ED6                     l17656:
 27661                           
 27662                           ; BSR set to: 2
 27663  019ED6  90D8               	bcf	status,0,c
 27664  019ED8  370B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 27665  019EDA  370C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 27666  019EDC  370D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 27667  019EDE  370E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 27668  019EE0  0710               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 27669  019EE2                     l17658:
 27670                           
 27671                           ; BSR set to: 2
 27672  019EE2  5110               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 27673  019EE4  A4D8               	btfss	status,2,c
 27674  019EE6  D7F7               	goto	l17656
 27675  019EE8                     u21430:
 27676                           
 27677                           ; BSR set to: 2
 27678  019EE8  C20B  F200         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 27679  019EEC  C20C  F201         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 27680  019EF0  C20D  F202         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 27681  019EF4  C20E  F203         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 27682                           
 27683                           ; BSR set to: 2
 27684  019EF8  0012               	return		;funcret
 27685  019EFA                     __end_of__tdiv_to_l_:
 27686                           	opt callstack 0
 27687                           
 27688 ;; *************** function __div_to_l_ *****************
 27689 ;; Defined at:
 27690 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
 27691 ;; Parameters:    Size  Location     Type
 27692 ;;  f1              4    0[BANK2 ] unsigned long 
 27693 ;;  f2              4    4[BANK2 ] unsigned long 
 27694 ;; Auto vars:     Size  Location     Type
 27695 ;;  quot            4    8[BANK2 ] unsigned long 
 27696 ;;  exp1            1   13[BANK2 ] unsigned char 
 27697 ;;  cntr            1   12[BANK2 ] unsigned char 
 27698 ;; Return value:  Size  Location     Type
 27699 ;;                  4    0[BANK2 ] unsigned long 
 27700 ;; Registers used:
 27701 ;;		wreg, status,2, status,0
 27702 ;; Tracked objects:
 27703 ;;		On entry : 0/0
 27704 ;;		On exit  : 0/0
 27705 ;;		Unchanged: 0/0
 27706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27707 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27708 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27710 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27711 ;;Total ram usage:       14 bytes
 27712 ;; Hardware stack levels used:    1
 27713 ;; Hardware stack levels required when called:   11
 27714 ;; This function calls:
 27715 ;;		Nothing
 27716 ;; This function is called by:
 27717 ;;		__doprnt
 27718 ;; This function uses a non-reentrant model
 27719 ;;
 27720                           
 27721                           	psect	text90
 27722  019FF8                     __ptext90:
 27723                           	opt callstack 0
 27724  019FF8                     __div_to_l_:
 27725                           	opt callstack 14
 27726                           
 27727                           ; BSR set to: 2
 27728                           ;incstack = 0
 27729  019FF8  0102               	movlb	2	; () banked
 27730  019FFA  3502               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 27731  019FFC  3503               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 27732  019FFE  6F0D               	movwf	__div_to_l_@exp1& (0+255),b
 27733  01A000  510D               	movf	__div_to_l_@exp1& (0+255),w,b
 27734  01A002  A4D8               	btfss	status,2,c
 27735  01A004  D009               	goto	l17666
 27736  01A006                     u21440:
 27737                           
 27738                           ; BSR set to: 2
 27739  01A006  0E00               	movlw	0
 27740  01A008  6F00               	movwf	?__div_to_l_& (0+255),b
 27741  01A00A  0E00               	movlw	0
 27742  01A00C  6F01               	movwf	(?__div_to_l_+1)& (0+255),b
 27743  01A00E  0E00               	movlw	0
 27744  01A010  6F02               	movwf	(?__div_to_l_+2)& (0+255),b
 27745  01A012  0E00               	movlw	0
 27746  01A014  6F03               	movwf	(?__div_to_l_+3)& (0+255),b
 27747  01A016  0012               	return	
 27748  01A018                     l17666:
 27749                           
 27750                           ; BSR set to: 2
 27751  01A018  3506               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 27752  01A01A  3507               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 27753  01A01C  6F0C               	movwf	__div_to_l_@cntr& (0+255),b
 27754  01A01E  510C               	movf	__div_to_l_@cntr& (0+255),w,b
 27755  01A020  B4D8               	btfsc	status,2,c
 27756  01A022  D7F1               	goto	u21440
 27757                           
 27758                           ; BSR set to: 2
 27759  01A024  8F02               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 27760                           
 27761                           ; BSR set to: 2
 27762  01A026  0EFF               	movlw	255
 27763  01A028  1700               	andwf	__div_to_l_@f1& (0+255),f,b
 27764  01A02A  0EFF               	movlw	255
 27765  01A02C  1701               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 27766  01A02E  0EFF               	movlw	255
 27767  01A030  1702               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 27768  01A032  0E00               	movlw	0
 27769  01A034  1703               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 27770                           
 27771                           ; BSR set to: 2
 27772  01A036  8F06               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 27773  01A038  0EFF               	movlw	255
 27774  01A03A  1704               	andwf	__div_to_l_@f2& (0+255),f,b
 27775  01A03C  0EFF               	movlw	255
 27776  01A03E  1705               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 27777  01A040  0EFF               	movlw	255
 27778  01A042  1706               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 27779  01A044  0E00               	movlw	0
 27780  01A046  1707               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 27781                           
 27782                           ; BSR set to: 2
 27783  01A048  0E00               	movlw	0
 27784  01A04A  6F08               	movwf	__div_to_l_@quot& (0+255),b
 27785  01A04C  0E00               	movlw	0
 27786  01A04E  6F09               	movwf	(__div_to_l_@quot+1)& (0+255),b
 27787  01A050  0E00               	movlw	0
 27788  01A052  6F0A               	movwf	(__div_to_l_@quot+2)& (0+255),b
 27789  01A054  0E00               	movlw	0
 27790  01A056  6F0B               	movwf	(__div_to_l_@quot+3)& (0+255),b
 27791                           
 27792                           ; BSR set to: 2
 27793  01A058  0E7F               	movlw	127
 27794  01A05A  5F0D               	subwf	__div_to_l_@exp1& (0+255),f,b
 27795                           
 27796                           ; BSR set to: 2
 27797  01A05C  510C               	movf	__div_to_l_@cntr& (0+255),w,b
 27798  01A05E  0FA0               	addlw	160
 27799  01A060  5F0D               	subwf	__div_to_l_@exp1& (0+255),f,b
 27800                           
 27801                           ; BSR set to: 2
 27802  01A062  0E20               	movlw	32
 27803  01A064  6F0C               	movwf	__div_to_l_@cntr& (0+255),b
 27804  01A066                     l17686:
 27805                           
 27806                           ; BSR set to: 2
 27807  01A066  90D8               	bcf	status,0,c
 27808  01A068  3708               	rlcf	__div_to_l_@quot& (0+255),f,b
 27809  01A06A  3709               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 27810  01A06C  370A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 27811  01A06E  370B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 27812                           
 27813                           ; BSR set to: 2
 27814  01A070  5104               	movf	__div_to_l_@f2& (0+255),w,b
 27815  01A072  5D00               	subwf	__div_to_l_@f1& (0+255),w,b
 27816  01A074  5105               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 27817  01A076  5901               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 27818  01A078  5106               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 27819  01A07A  5902               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 27820  01A07C  5107               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 27821  01A07E  5903               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 27822  01A080  A0D8               	btfss	status,0,c
 27823  01A082  D009               	goto	l17694
 27824                           
 27825                           ; BSR set to: 2
 27826  01A084  5104               	movf	__div_to_l_@f2& (0+255),w,b
 27827  01A086  5F00               	subwf	__div_to_l_@f1& (0+255),f,b
 27828  01A088  5105               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 27829  01A08A  5B01               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 27830  01A08C  5106               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 27831  01A08E  5B02               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 27832  01A090  5107               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 27833  01A092  5B03               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 27834                           
 27835                           ; BSR set to: 2
 27836  01A094  8108               	bsf	__div_to_l_@quot& (0+255),0,b
 27837  01A096                     l17694:
 27838                           
 27839                           ; BSR set to: 2
 27840  01A096  90D8               	bcf	status,0,c
 27841  01A098  3700               	rlcf	__div_to_l_@f1& (0+255),f,b
 27842  01A09A  3701               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 27843  01A09C  3702               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 27844  01A09E  3703               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 27845                           
 27846                           ; BSR set to: 2
 27847  01A0A0  2F0C               	decfsz	__div_to_l_@cntr& (0+255),f,b
 27848  01A0A2  D7E1               	goto	l17686
 27849                           
 27850                           ; BSR set to: 2
 27851  01A0A4  AF0D               	btfss	__div_to_l_@exp1& (0+255),7,b
 27852  01A0A6  D00D               	goto	l17710
 27853                           
 27854                           ; BSR set to: 2
 27855  01A0A8  510D               	movf	__div_to_l_@exp1& (0+255),w,b
 27856  01A0AA  0A80               	xorlw	128
 27857  01A0AC  0F9F               	addlw	159
 27858  01A0AE  A0D8               	btfss	status,0,c
 27859  01A0B0  D7AA               	goto	u21440
 27860  01A0B2                     l17706:
 27861                           
 27862                           ; BSR set to: 2
 27863  01A0B2  90D8               	bcf	status,0,c
 27864  01A0B4  330B               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 27865  01A0B6  330A               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 27866  01A0B8  3309               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 27867  01A0BA  3308               	rrcf	__div_to_l_@quot& (0+255),f,b
 27868                           
 27869                           ; BSR set to: 2
 27870  01A0BC  3F0D               	incfsz	__div_to_l_@exp1& (0+255),f,b
 27871  01A0BE  D7F9               	goto	l17706
 27872  01A0C0  D00D               	goto	u21500
 27873  01A0C2                     l17710:
 27874                           
 27875                           ; BSR set to: 2
 27876  01A0C2  0E1F               	movlw	31
 27877  01A0C4  650D               	cpfsgt	__div_to_l_@exp1& (0+255),b
 27878  01A0C6  D007               	goto	l17718
 27879  01A0C8  D79E               	goto	u21440
 27880  01A0CA                     l17716:
 27881                           
 27882                           ; BSR set to: 2
 27883  01A0CA  90D8               	bcf	status,0,c
 27884  01A0CC  3708               	rlcf	__div_to_l_@quot& (0+255),f,b
 27885  01A0CE  3709               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 27886  01A0D0  370A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 27887  01A0D2  370B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 27888  01A0D4  070D               	decf	__div_to_l_@exp1& (0+255),f,b
 27889  01A0D6                     l17718:
 27890                           
 27891                           ; BSR set to: 2
 27892  01A0D6  510D               	movf	__div_to_l_@exp1& (0+255),w,b
 27893  01A0D8  A4D8               	btfss	status,2,c
 27894  01A0DA  D7F7               	goto	l17716
 27895  01A0DC                     u21500:
 27896                           
 27897                           ; BSR set to: 2
 27898  01A0DC  C208  F200         	movff	__div_to_l_@quot,?__div_to_l_
 27899  01A0E0  C209  F201         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 27900  01A0E4  C20A  F202         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 27901  01A0E8  C20B  F203         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 27902                           
 27903                           ; BSR set to: 2
 27904  01A0EC  0012               	return		;funcret
 27905  01A0EE                     __end_of__div_to_l_:
 27906                           	opt callstack 0
 27907                           
 27908 ;; *************** function ___wmul *****************
 27909 ;; Defined at:
 27910 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 27911 ;; Parameters:    Size  Location     Type
 27912 ;;  multiplier      2    0[BANK2 ] unsigned int 
 27913 ;;  multiplicand    2    2[BANK2 ] unsigned int 
 27914 ;; Auto vars:     Size  Location     Type
 27915 ;;  product         2    4[BANK2 ] unsigned int 
 27916 ;; Return value:  Size  Location     Type
 27917 ;;                  2    0[BANK2 ] unsigned int 
 27918 ;; Registers used:
 27919 ;;		wreg, status,2, status,0, prodl, prodh
 27920 ;; Tracked objects:
 27921 ;;		On entry : 0/0
 27922 ;;		On exit  : 0/0
 27923 ;;		Unchanged: 0/0
 27924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27925 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27926 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27928 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27929 ;;Total ram usage:        6 bytes
 27930 ;; Hardware stack levels used:    1
 27931 ;; Hardware stack levels required when called:   11
 27932 ;; This function calls:
 27933 ;;		Nothing
 27934 ;; This function is called by:
 27935 ;;		_getStringSecondsAsTime
 27936 ;;		_getDaysFromOnTime
 27937 ;;		_getHoursFromOnTime
 27938 ;;		_getMinutesFromOnTime
 27939 ;;		_getSecondsFromOnTime
 27940 ;;		__doprnt
 27941 ;; This function uses a non-reentrant model
 27942 ;;
 27943                           
 27944                           	psect	text91
 27945  01C25C                     __ptext91:
 27946                           	opt callstack 0
 27947  01C25C                     ___wmul:
 27948                           	opt callstack 14
 27949                           
 27950                           ; BSR set to: 2
 27951                           ;incstack = 0
 27952  01C25C  0102               	movlb	2	; () banked
 27953  01C25E  5100               	movf	___wmul@multiplier& (0+255),w,b
 27954  01C260  0302               	mulwf	___wmul@multiplicand& (0+255),b
 27955  01C262  CFF3 F204          	movff	prodl,___wmul@product
 27956  01C266  CFF4 F205          	movff	prodh,___wmul@product+1
 27957  01C26A  5100               	movf	___wmul@multiplier& (0+255),w,b
 27958  01C26C  0303               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 27959  01C26E  50F3               	movf	prodl,w,c
 27960  01C270  2705               	addwf	(___wmul@product+1)& (0+255),f,b
 27961  01C272  5101               	movf	(___wmul@multiplier+1)& (0+255),w,b
 27962  01C274  0302               	mulwf	___wmul@multiplicand& (0+255),b
 27963  01C276  50F3               	movf	prodl,w,c
 27964  01C278  2705               	addwf	(___wmul@product+1)& (0+255),f,b
 27965                           
 27966                           ; BSR set to: 2
 27967  01C27A  C204  F200         	movff	___wmul@product,?___wmul
 27968  01C27E  C205  F201         	movff	___wmul@product+1,?___wmul+1
 27969                           
 27970                           ; BSR set to: 2
 27971  01C282  0012               	return		;funcret
 27972  01C284                     __end_of___wmul:
 27973                           	opt callstack 0
 27974                           
 27975 ;; *************** function ___llmod *****************
 27976 ;; Defined at:
 27977 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
 27978 ;; Parameters:    Size  Location     Type
 27979 ;;  dividend        4   13[BANK2 ] unsigned long 
 27980 ;;  divisor         4   17[BANK2 ] unsigned long 
 27981 ;; Auto vars:     Size  Location     Type
 27982 ;;  counter         1   21[BANK2 ] unsigned char 
 27983 ;; Return value:  Size  Location     Type
 27984 ;;                  4   13[BANK2 ] unsigned long 
 27985 ;; Registers used:
 27986 ;;		wreg, status,2, status,0
 27987 ;; Tracked objects:
 27988 ;;		On entry : 0/0
 27989 ;;		On exit  : 0/0
 27990 ;;		Unchanged: 0/0
 27991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27992 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27993 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27995 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27996 ;;Total ram usage:        9 bytes
 27997 ;; Hardware stack levels used:    1
 27998 ;; Hardware stack levels required when called:   11
 27999 ;; This function calls:
 28000 ;;		Nothing
 28001 ;; This function is called by:
 28002 ;;		__doprnt
 28003 ;; This function uses a non-reentrant model
 28004 ;;
 28005                           
 28006                           	psect	text92
 28007  01B2D8                     __ptext92:
 28008                           	opt callstack 0
 28009  01B2D8                     ___llmod:
 28010                           	opt callstack 14
 28011                           
 28012                           ; BSR set to: 2
 28013                           ;incstack = 0
 28014  01B2D8  0102               	movlb	2	; () banked
 28015  01B2DA  5111               	movf	___llmod@divisor& (0+255),w,b
 28016  01B2DC  1112               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 28017  01B2DE  1113               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 28018  01B2E0  1114               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 28019  01B2E2  B4D8               	btfsc	status,2,c
 28020  01B2E4  D024               	goto	l3117
 28021                           
 28022                           ; BSR set to: 2
 28023  01B2E6  0E01               	movlw	1
 28024  01B2E8  6F15               	movwf	___llmod@counter& (0+255),b
 28025  01B2EA  D006               	goto	l17850
 28026  01B2EC                     l17848:
 28027                           
 28028                           ; BSR set to: 2
 28029  01B2EC  90D8               	bcf	status,0,c
 28030  01B2EE  3711               	rlcf	___llmod@divisor& (0+255),f,b
 28031  01B2F0  3712               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 28032  01B2F2  3713               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 28033  01B2F4  3714               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 28034  01B2F6  2B15               	incf	___llmod@counter& (0+255),f,b
 28035  01B2F8                     l17850:
 28036                           
 28037                           ; BSR set to: 2
 28038  01B2F8  AF14               	btfss	(___llmod@divisor+3)& (0+255),7,b
 28039  01B2FA  D7F8               	goto	l17848
 28040  01B2FC                     u21710:
 28041                           
 28042                           ; BSR set to: 2
 28043  01B2FC  5111               	movf	___llmod@divisor& (0+255),w,b
 28044  01B2FE  5D0D               	subwf	___llmod@dividend& (0+255),w,b
 28045  01B300  5112               	movf	(___llmod@divisor+1)& (0+255),w,b
 28046  01B302  590E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 28047  01B304  5113               	movf	(___llmod@divisor+2)& (0+255),w,b
 28048  01B306  590F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 28049  01B308  5114               	movf	(___llmod@divisor+3)& (0+255),w,b
 28050  01B30A  5910               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 28051  01B30C  A0D8               	btfss	status,0,c
 28052  01B30E  D008               	goto	l17856
 28053                           
 28054                           ; BSR set to: 2
 28055  01B310  5111               	movf	___llmod@divisor& (0+255),w,b
 28056  01B312  5F0D               	subwf	___llmod@dividend& (0+255),f,b
 28057  01B314  5112               	movf	(___llmod@divisor+1)& (0+255),w,b
 28058  01B316  5B0E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 28059  01B318  5113               	movf	(___llmod@divisor+2)& (0+255),w,b
 28060  01B31A  5B0F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 28061  01B31C  5114               	movf	(___llmod@divisor+3)& (0+255),w,b
 28062  01B31E  5B10               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 28063  01B320                     l17856:
 28064                           
 28065                           ; BSR set to: 2
 28066  01B320  90D8               	bcf	status,0,c
 28067  01B322  3314               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 28068  01B324  3313               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 28069  01B326  3312               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 28070  01B328  3311               	rrcf	___llmod@divisor& (0+255),f,b
 28071                           
 28072                           ; BSR set to: 2
 28073  01B32A  2F15               	decfsz	___llmod@counter& (0+255),f,b
 28074  01B32C  D7E7               	goto	u21710
 28075  01B32E                     l3117:
 28076                           
 28077                           ; BSR set to: 2
 28078  01B32E  C20D  F20D         	movff	___llmod@dividend,?___llmod
 28079  01B332  C20E  F20E         	movff	___llmod@dividend+1,?___llmod+1
 28080  01B336  C20F  F20F         	movff	___llmod@dividend+2,?___llmod+2
 28081  01B33A  C210  F210         	movff	___llmod@dividend+3,?___llmod+3
 28082                           
 28083                           ; BSR set to: 2
 28084  01B33E  0012               	return		;funcret
 28085  01B340                     __end_of___llmod:
 28086                           	opt callstack 0
 28087                           
 28088 ;; *************** function ___lldiv *****************
 28089 ;; Defined at:
 28090 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
 28091 ;; Parameters:    Size  Location     Type
 28092 ;;  dividend        4    0[BANK2 ] unsigned long 
 28093 ;;  divisor         4    4[BANK2 ] unsigned long 
 28094 ;; Auto vars:     Size  Location     Type
 28095 ;;  quotient        4    8[BANK2 ] unsigned long 
 28096 ;;  counter         1   12[BANK2 ] unsigned char 
 28097 ;; Return value:  Size  Location     Type
 28098 ;;                  4    0[BANK2 ] unsigned long 
 28099 ;; Registers used:
 28100 ;;		wreg, status,2, status,0
 28101 ;; Tracked objects:
 28102 ;;		On entry : 0/0
 28103 ;;		On exit  : 0/0
 28104 ;;		Unchanged: 0/0
 28105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28106 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28107 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28109 ;;      Totals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28110 ;;Total ram usage:       13 bytes
 28111 ;; Hardware stack levels used:    1
 28112 ;; Hardware stack levels required when called:   11
 28113 ;; This function calls:
 28114 ;;		Nothing
 28115 ;; This function is called by:
 28116 ;;		_getStringSecondsAsTime
 28117 ;;		_getYearsFromOnTime
 28118 ;;		_getDaysFromOnTime
 28119 ;;		_getHoursFromOnTime
 28120 ;;		_getMinutesFromOnTime
 28121 ;;		_getSecondsFromOnTime
 28122 ;;		__doprnt
 28123 ;; This function uses a non-reentrant model
 28124 ;;
 28125                           
 28126                           	psect	text93
 28127  01AFFA                     __ptext93:
 28128                           	opt callstack 0
 28129  01AFFA                     ___lldiv:
 28130                           	opt callstack 14
 28131                           
 28132                           ; BSR set to: 2
 28133                           ;incstack = 0
 28134  01AFFA  0E00               	movlw	0
 28135  01AFFC  0102               	movlb	2	; () banked
 28136  01AFFE  6F08               	movwf	___lldiv@quotient& (0+255),b
 28137  01B000  0E00               	movlw	0
 28138  01B002  6F09               	movwf	(___lldiv@quotient+1)& (0+255),b
 28139  01B004  0E00               	movlw	0
 28140  01B006  6F0A               	movwf	(___lldiv@quotient+2)& (0+255),b
 28141  01B008  0E00               	movlw	0
 28142  01B00A  6F0B               	movwf	(___lldiv@quotient+3)& (0+255),b
 28143                           
 28144                           ; BSR set to: 2
 28145  01B00C  5104               	movf	___lldiv@divisor& (0+255),w,b
 28146  01B00E  1105               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 28147  01B010  1106               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 28148  01B012  1107               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 28149  01B014  B4D8               	btfsc	status,2,c
 28150  01B016  D02A               	goto	l2702
 28151                           
 28152                           ; BSR set to: 2
 28153  01B018  0E01               	movlw	1
 28154  01B01A  6F0C               	movwf	___lldiv@counter& (0+255),b
 28155  01B01C  D006               	goto	l17734
 28156  01B01E                     l17732:
 28157                           
 28158                           ; BSR set to: 2
 28159  01B01E  90D8               	bcf	status,0,c
 28160  01B020  3704               	rlcf	___lldiv@divisor& (0+255),f,b
 28161  01B022  3705               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 28162  01B024  3706               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 28163  01B026  3707               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 28164  01B028  2B0C               	incf	___lldiv@counter& (0+255),f,b
 28165  01B02A                     l17734:
 28166                           
 28167                           ; BSR set to: 2
 28168  01B02A  AF07               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 28169  01B02C  D7F8               	goto	l17732
 28170  01B02E                     u21520:
 28171                           
 28172                           ; BSR set to: 2
 28173  01B02E  90D8               	bcf	status,0,c
 28174  01B030  3708               	rlcf	___lldiv@quotient& (0+255),f,b
 28175  01B032  3709               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 28176  01B034  370A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 28177  01B036  370B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 28178                           
 28179                           ; BSR set to: 2
 28180  01B038  5104               	movf	___lldiv@divisor& (0+255),w,b
 28181  01B03A  5D00               	subwf	___lldiv@dividend& (0+255),w,b
 28182  01B03C  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
 28183  01B03E  5901               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 28184  01B040  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
 28185  01B042  5902               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 28186  01B044  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
 28187  01B046  5903               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 28188  01B048  A0D8               	btfss	status,0,c
 28189  01B04A  D009               	goto	l17744
 28190                           
 28191                           ; BSR set to: 2
 28192  01B04C  5104               	movf	___lldiv@divisor& (0+255),w,b
 28193  01B04E  5F00               	subwf	___lldiv@dividend& (0+255),f,b
 28194  01B050  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
 28195  01B052  5B01               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 28196  01B054  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
 28197  01B056  5B02               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 28198  01B058  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
 28199  01B05A  5B03               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 28200                           
 28201                           ; BSR set to: 2
 28202  01B05C  8108               	bsf	___lldiv@quotient& (0+255),0,b
 28203  01B05E                     l17744:
 28204                           
 28205                           ; BSR set to: 2
 28206  01B05E  90D8               	bcf	status,0,c
 28207  01B060  3307               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 28208  01B062  3306               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 28209  01B064  3305               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 28210  01B066  3304               	rrcf	___lldiv@divisor& (0+255),f,b
 28211                           
 28212                           ; BSR set to: 2
 28213  01B068  2F0C               	decfsz	___lldiv@counter& (0+255),f,b
 28214  01B06A  D7E1               	goto	u21520
 28215  01B06C                     l2702:
 28216                           
 28217                           ; BSR set to: 2
 28218  01B06C  C208  F200         	movff	___lldiv@quotient,?___lldiv
 28219  01B070  C209  F201         	movff	___lldiv@quotient+1,?___lldiv+1
 28220  01B074  C20A  F202         	movff	___lldiv@quotient+2,?___lldiv+2
 28221  01B078  C20B  F203         	movff	___lldiv@quotient+3,?___lldiv+3
 28222                           
 28223                           ; BSR set to: 2
 28224  01B07C  0012               	return		;funcret
 28225  01B07E                     __end_of___lldiv:
 28226                           	opt callstack 0
 28227                           
 28228 ;; *************** function ___fltol *****************
 28229 ;; Defined at:
 28230 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
 28231 ;; Parameters:    Size  Location     Type
 28232 ;;  f1              4   48[BANK2 ] unsigned long 
 28233 ;; Auto vars:     Size  Location     Type
 28234 ;;  exp1            1   57[BANK2 ] unsigned char 
 28235 ;;  sign1           1   56[BANK2 ] unsigned char 
 28236 ;; Return value:  Size  Location     Type
 28237 ;;                  4   48[BANK2 ] long 
 28238 ;; Registers used:
 28239 ;;		wreg, status,2, status,0
 28240 ;; Tracked objects:
 28241 ;;		On entry : 0/0
 28242 ;;		On exit  : 0/0
 28243 ;;		Unchanged: 0/0
 28244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28245 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28246 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28247 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28248 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28249 ;;Total ram usage:       10 bytes
 28250 ;; Hardware stack levels used:    1
 28251 ;; Hardware stack levels required when called:   11
 28252 ;; This function calls:
 28253 ;;		Nothing
 28254 ;; This function is called by:
 28255 ;;		_floatToEngineeringFormat
 28256 ;;		__doprnt
 28257 ;;		_ftoa
 28258 ;; This function uses a non-reentrant model
 28259 ;;
 28260                           
 28261                           	psect	text94
 28262  01A7DE                     __ptext94:
 28263                           	opt callstack 0
 28264  01A7DE                     ___fltol:
 28265                           	opt callstack 14
 28266                           
 28267                           ; BSR set to: 2
 28268                           ;incstack = 0
 28269  01A7DE  0102               	movlb	2	; () banked
 28270  01A7E0  3532               	rlcf	(___fltol@f1+2)& (0+255),w,b
 28271  01A7E2  3533               	rlcf	(___fltol@f1+3)& (0+255),w,b
 28272  01A7E4  6F39               	movwf	___fltol@exp1& (0+255),b
 28273  01A7E6  5139               	movf	___fltol@exp1& (0+255),w,b
 28274  01A7E8  A4D8               	btfss	status,2,c
 28275  01A7EA  D009               	goto	l17806
 28276  01A7EC                     u21630:
 28277                           
 28278                           ; BSR set to: 2
 28279  01A7EC  0E00               	movlw	0
 28280  01A7EE  6F30               	movwf	?___fltol& (0+255),b
 28281  01A7F0  0E00               	movlw	0
 28282  01A7F2  6F31               	movwf	(?___fltol+1)& (0+255),b
 28283  01A7F4  0E00               	movlw	0
 28284  01A7F6  6F32               	movwf	(?___fltol+2)& (0+255),b
 28285  01A7F8  0E00               	movlw	0
 28286  01A7FA  6F33               	movwf	(?___fltol+3)& (0+255),b
 28287  01A7FC  0012               	return	
 28288  01A7FE                     l17806:
 28289                           
 28290                           ; BSR set to: 2
 28291  01A7FE  C230  F234         	movff	___fltol@f1,??___fltol
 28292  01A802  C231  F235         	movff	___fltol@f1+1,??___fltol+1
 28293  01A806  C232  F236         	movff	___fltol@f1+2,??___fltol+2
 28294  01A80A  C233  F237         	movff	___fltol@f1+3,??___fltol+3
 28295  01A80E  0E20               	movlw	32
 28296  01A810  D005               	goto	u21640
 28297  01A812                     u21645:
 28298  01A812  90D8               	bcf	status,0,c
 28299  01A814  3337               	rrcf	(??___fltol+3)& (0+255),f,b
 28300  01A816  3336               	rrcf	(??___fltol+2)& (0+255),f,b
 28301  01A818  3335               	rrcf	(??___fltol+1)& (0+255),f,b
 28302  01A81A  3334               	rrcf	??___fltol& (0+255),f,b
 28303  01A81C                     u21640:
 28304  01A81C  2EE8               	decfsz	wreg,f,c
 28305  01A81E  D7F9               	goto	u21645
 28306  01A820  5134               	movf	??___fltol& (0+255),w,b
 28307  01A822  6F38               	movwf	___fltol@sign1& (0+255),b
 28308                           
 28309                           ; BSR set to: 2
 28310  01A824  8F32               	bsf	(___fltol@f1+2)& (0+255),7,b
 28311                           
 28312                           ; BSR set to: 2
 28313  01A826  0EFF               	movlw	255
 28314  01A828  1730               	andwf	___fltol@f1& (0+255),f,b
 28315  01A82A  0EFF               	movlw	255
 28316  01A82C  1731               	andwf	(___fltol@f1+1)& (0+255),f,b
 28317  01A82E  0EFF               	movlw	255
 28318  01A830  1732               	andwf	(___fltol@f1+2)& (0+255),f,b
 28319  01A832  0E00               	movlw	0
 28320  01A834  1733               	andwf	(___fltol@f1+3)& (0+255),f,b
 28321                           
 28322                           ; BSR set to: 2
 28323  01A836  0E96               	movlw	150
 28324  01A838  5F39               	subwf	___fltol@exp1& (0+255),f,b
 28325                           
 28326                           ; BSR set to: 2
 28327  01A83A  AF39               	btfss	___fltol@exp1& (0+255),7,b
 28328  01A83C  D00D               	goto	l17826
 28329                           
 28330                           ; BSR set to: 2
 28331  01A83E  5139               	movf	___fltol@exp1& (0+255),w,b
 28332  01A840  0A80               	xorlw	128
 28333  01A842  0F97               	addlw	151
 28334  01A844  A0D8               	btfss	status,0,c
 28335  01A846  D7D2               	goto	u21630
 28336  01A848                     l17822:
 28337                           
 28338                           ; BSR set to: 2
 28339  01A848  90D8               	bcf	status,0,c
 28340  01A84A  3333               	rrcf	(___fltol@f1+3)& (0+255),f,b
 28341  01A84C  3332               	rrcf	(___fltol@f1+2)& (0+255),f,b
 28342  01A84E  3331               	rrcf	(___fltol@f1+1)& (0+255),f,b
 28343  01A850  3330               	rrcf	___fltol@f1& (0+255),f,b
 28344                           
 28345                           ; BSR set to: 2
 28346  01A852  3F39               	incfsz	___fltol@exp1& (0+255),f,b
 28347  01A854  D7F9               	goto	l17822
 28348  01A856  D00D               	goto	u21680
 28349  01A858                     l17826:
 28350                           
 28351                           ; BSR set to: 2
 28352  01A858  0E1F               	movlw	31
 28353  01A85A  6539               	cpfsgt	___fltol@exp1& (0+255),b
 28354  01A85C  D007               	goto	l17834
 28355  01A85E  D7C6               	goto	u21630
 28356  01A860                     l17832:
 28357                           
 28358                           ; BSR set to: 2
 28359  01A860  90D8               	bcf	status,0,c
 28360  01A862  3730               	rlcf	___fltol@f1& (0+255),f,b
 28361  01A864  3731               	rlcf	(___fltol@f1+1)& (0+255),f,b
 28362  01A866  3732               	rlcf	(___fltol@f1+2)& (0+255),f,b
 28363  01A868  3733               	rlcf	(___fltol@f1+3)& (0+255),f,b
 28364  01A86A  0739               	decf	___fltol@exp1& (0+255),f,b
 28365  01A86C                     l17834:
 28366                           
 28367                           ; BSR set to: 2
 28368  01A86C  5139               	movf	___fltol@exp1& (0+255),w,b
 28369  01A86E  A4D8               	btfss	status,2,c
 28370  01A870  D7F7               	goto	l17832
 28371  01A872                     u21680:
 28372                           
 28373                           ; BSR set to: 2
 28374  01A872  5138               	movf	___fltol@sign1& (0+255),w,b
 28375  01A874  B4D8               	btfsc	status,2,c
 28376  01A876  D008               	goto	l17840
 28377                           
 28378                           ; BSR set to: 2
 28379  01A878  1F33               	comf	(___fltol@f1+3)& (0+255),f,b
 28380  01A87A  1F32               	comf	(___fltol@f1+2)& (0+255),f,b
 28381  01A87C  1F31               	comf	(___fltol@f1+1)& (0+255),f,b
 28382  01A87E  6D30               	negf	___fltol@f1& (0+255),b
 28383  01A880  0E00               	movlw	0
 28384  01A882  2331               	addwfc	(___fltol@f1+1)& (0+255),f,b
 28385  01A884  2332               	addwfc	(___fltol@f1+2)& (0+255),f,b
 28386  01A886  2333               	addwfc	(___fltol@f1+3)& (0+255),f,b
 28387  01A888                     l17840:
 28388                           
 28389                           ; BSR set to: 2
 28390  01A888  C230  F230         	movff	___fltol@f1,?___fltol
 28391  01A88C  C231  F231         	movff	___fltol@f1+1,?___fltol+1
 28392  01A890  C232  F232         	movff	___fltol@f1+2,?___fltol+2
 28393  01A894  C233  F233         	movff	___fltol@f1+3,?___fltol+3
 28394                           
 28395                           ; BSR set to: 2
 28396  01A898  0012               	return		;funcret
 28397  01A89A                     __end_of___fltol:
 28398                           	opt callstack 0
 28399                           
 28400 ;; *************** function ___flsub *****************
 28401 ;; Defined at:
 28402 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 28403 ;; Parameters:    Size  Location     Type
 28404 ;;  b               4   76[BANK2 ] long 
 28405 ;;  a               4   80[BANK2 ] long 
 28406 ;; Auto vars:     Size  Location     Type
 28407 ;;		None
 28408 ;; Return value:  Size  Location     Type
 28409 ;;                  4   76[BANK2 ] long 
 28410 ;; Registers used:
 28411 ;;		wreg, status,2, status,0, cstack
 28412 ;; Tracked objects:
 28413 ;;		On entry : 0/0
 28414 ;;		On exit  : 0/0
 28415 ;;		Unchanged: 0/0
 28416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28417 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28420 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28421 ;;Total ram usage:        8 bytes
 28422 ;; Hardware stack levels used:    1
 28423 ;; Hardware stack levels required when called:   12
 28424 ;; This function calls:
 28425 ;;		___fladd
 28426 ;; This function is called by:
 28427 ;;		__doprnt
 28428 ;;		_ftoa
 28429 ;; This function uses a non-reentrant model
 28430 ;;
 28431                           
 28432                           	psect	text95
 28433  01BA5C                     __ptext95:
 28434                           	opt callstack 0
 28435  01BA5C                     ___flsub:
 28436                           	opt callstack 13
 28437                           
 28438                           ; BSR set to: 2
 28439                           ;incstack = 0
 28440  01BA5C  0E00               	movlw	0
 28441  01BA5E  0102               	movlb	2	; () banked
 28442  01BA60  1B50               	xorwf	___flsub@a& (0+255),f,b
 28443  01BA62  0E00               	movlw	0
 28444  01BA64  1B51               	xorwf	(___flsub@a+1)& (0+255),f,b
 28445  01BA66  0E00               	movlw	0
 28446  01BA68  1B52               	xorwf	(___flsub@a+2)& (0+255),f,b
 28447  01BA6A  0E80               	movlw	128
 28448  01BA6C  1B53               	xorwf	(___flsub@a+3)& (0+255),f,b
 28449                           
 28450                           ; BSR set to: 2
 28451  01BA6E  C24C  F234         	movff	___flsub@b,___fladd@b
 28452  01BA72  C24D  F235         	movff	___flsub@b+1,___fladd@b+1
 28453  01BA76  C24E  F236         	movff	___flsub@b+2,___fladd@b+2
 28454  01BA7A  C24F  F237         	movff	___flsub@b+3,___fladd@b+3
 28455  01BA7E  C250  F238         	movff	___flsub@a,___fladd@a
 28456  01BA82  C251  F239         	movff	___flsub@a+1,___fladd@a+1
 28457  01BA86  C252  F23A         	movff	___flsub@a+2,___fladd@a+2
 28458  01BA8A  C253  F23B         	movff	___flsub@a+3,___fladd@a+3
 28459  01BA8E  EC45  F0B8         	call	___fladd	;wreg free
 28460  01BA92  C234  F24C         	movff	?___fladd,?___flsub
 28461  01BA96  C235  F24D         	movff	?___fladd+1,?___flsub+1
 28462  01BA9A  C236  F24E         	movff	?___fladd+2,?___flsub+2
 28463  01BA9E  C237  F24F         	movff	?___fladd+3,?___flsub+3
 28464  01BAA2  0012               	return		;funcret
 28465  01BAA4                     __end_of___flsub:
 28466                           	opt callstack 0
 28467                           
 28468 ;; *************** function ___fladd *****************
 28469 ;; Defined at:
 28470 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 28471 ;; Parameters:    Size  Location     Type
 28472 ;;  b               4   52[BANK2 ] long 
 28473 ;;  a               4   56[BANK2 ] long 
 28474 ;; Auto vars:     Size  Location     Type
 28475 ;;  grs             1   67[BANK2 ] unsigned char 
 28476 ;;  bexp            1   66[BANK2 ] unsigned char 
 28477 ;;  aexp            1   65[BANK2 ] unsigned char 
 28478 ;;  signs           1   64[BANK2 ] unsigned char 
 28479 ;; Return value:  Size  Location     Type
 28480 ;;                  4   52[BANK2 ] unsigned char 
 28481 ;; Registers used:
 28482 ;;		wreg, status,2, status,0
 28483 ;; Tracked objects:
 28484 ;;		On entry : 0/0
 28485 ;;		On exit  : 0/0
 28486 ;;		Unchanged: 0/0
 28487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28488 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28489 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28490 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28491 ;;      Totals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28492 ;;Total ram usage:       16 bytes
 28493 ;; Hardware stack levels used:    1
 28494 ;; Hardware stack levels required when called:   11
 28495 ;; This function calls:
 28496 ;;		Nothing
 28497 ;; This function is called by:
 28498 ;;		__doprnt
 28499 ;;		___flsub
 28500 ;; This function uses a non-reentrant model
 28501 ;;
 28502                           
 28503                           	psect	text96
 28504  01708A                     __ptext96:
 28505                           	opt callstack 0
 28506  01708A                     ___fladd:
 28507                           	opt callstack 13
 28508                           
 28509                           ;incstack = 0
 28510  01708A  0102               	movlb	2	; () banked
 28511  01708C  5137               	movf	(___fladd@b+3)& (0+255),w,b
 28512  01708E  0B80               	andlw	128
 28513  017090  6F40               	movwf	___fladd@signs& (0+255),b
 28514  017092  5137               	movf	(___fladd@b+3)& (0+255),w,b
 28515  017094  2537               	addwf	(___fladd@b+3)& (0+255),w,b
 28516  017096  6F42               	movwf	___fladd@bexp& (0+255),b
 28517                           
 28518                           ; BSR set to: 2
 28519  017098  BF36               	btfsc	(___fladd@b+2)& (0+255),7,b
 28520                           
 28521                           ; BSR set to: 2
 28522  01709A  8142               	bsf	___fladd@bexp& (0+255),0,b
 28523                           
 28524                           ; BSR set to: 2
 28525  01709C  5142               	movf	___fladd@bexp& (0+255),w,b
 28526  01709E  B4D8               	btfsc	status,2,c
 28527  0170A0  D00D               	goto	l17096
 28528                           
 28529                           ; BSR set to: 2
 28530  0170A2  2942               	incf	___fladd@bexp& (0+255),w,b
 28531  0170A4  A4D8               	btfss	status,2,c
 28532  0170A6  D008               	goto	l17092
 28533                           
 28534                           ; BSR set to: 2
 28535  0170A8  0E00               	movlw	0
 28536  0170AA  6F34               	movwf	___fladd@b& (0+255),b
 28537  0170AC  0E00               	movlw	0
 28538  0170AE  6F35               	movwf	(___fladd@b+1)& (0+255),b
 28539  0170B0  0E00               	movlw	0
 28540  0170B2  6F36               	movwf	(___fladd@b+2)& (0+255),b
 28541  0170B4  0E00               	movlw	0
 28542  0170B6  6F37               	movwf	(___fladd@b+3)& (0+255),b
 28543  0170B8                     l17092:
 28544                           
 28545                           ; BSR set to: 2
 28546  0170B8  8F36               	bsf	(___fladd@b+2)& (0+255),7,b
 28547  0170BA  D006               	goto	L17
 28548  0170BC                     l17096:
 28549                           
 28550                           ; BSR set to: 2
 28551  0170BC  0E00               	movlw	0
 28552  0170BE  6F34               	movwf	___fladd@b& (0+255),b
 28553  0170C0  0E00               	movlw	0
 28554  0170C2  6F35               	movwf	(___fladd@b+1)& (0+255),b
 28555  0170C4  0E00               	movlw	0
 28556  0170C6  6F36               	movwf	(___fladd@b+2)& (0+255),b
 28557  0170C8                     L17:
 28558  0170C8  0E00               	movlw	0
 28559  0170CA  6F37               	movwf	(___fladd@b+3)& (0+255),b
 28560                           
 28561                           ; BSR set to: 2
 28562  0170CC  513B               	movf	(___fladd@a+3)& (0+255),w,b
 28563  0170CE  0B80               	andlw	128
 28564  0170D0  6F41               	movwf	___fladd@aexp& (0+255),b
 28565                           
 28566                           ; BSR set to: 2
 28567  0170D2  5140               	movf	___fladd@signs& (0+255),w,b
 28568  0170D4  1941               	xorwf	___fladd@aexp& (0+255),w,b
 28569  0170D6  A4D8               	btfss	status,2,c
 28570                           
 28571                           ; BSR set to: 2
 28572  0170D8  8D40               	bsf	___fladd@signs& (0+255),6,b
 28573                           
 28574                           ; BSR set to: 2
 28575  0170DA  513B               	movf	(___fladd@a+3)& (0+255),w,b
 28576  0170DC  253B               	addwf	(___fladd@a+3)& (0+255),w,b
 28577  0170DE  6F41               	movwf	___fladd@aexp& (0+255),b
 28578                           
 28579                           ; BSR set to: 2
 28580  0170E0  BF3A               	btfsc	(___fladd@a+2)& (0+255),7,b
 28581                           
 28582                           ; BSR set to: 2
 28583  0170E2  8141               	bsf	___fladd@aexp& (0+255),0,b
 28584                           
 28585                           ; BSR set to: 2
 28586  0170E4  5141               	movf	___fladd@aexp& (0+255),w,b
 28587  0170E6  B4D8               	btfsc	status,2,c
 28588  0170E8  D00D               	goto	l17120
 28589                           
 28590                           ; BSR set to: 2
 28591  0170EA  2941               	incf	___fladd@aexp& (0+255),w,b
 28592  0170EC  A4D8               	btfss	status,2,c
 28593  0170EE  D008               	goto	l17116
 28594                           
 28595                           ; BSR set to: 2
 28596  0170F0  0E00               	movlw	0
 28597  0170F2  6F38               	movwf	___fladd@a& (0+255),b
 28598  0170F4  0E00               	movlw	0
 28599  0170F6  6F39               	movwf	(___fladd@a+1)& (0+255),b
 28600  0170F8  0E00               	movlw	0
 28601  0170FA  6F3A               	movwf	(___fladd@a+2)& (0+255),b
 28602  0170FC  0E00               	movlw	0
 28603  0170FE  6F3B               	movwf	(___fladd@a+3)& (0+255),b
 28604  017100                     l17116:
 28605                           
 28606                           ; BSR set to: 2
 28607  017100  8F3A               	bsf	(___fladd@a+2)& (0+255),7,b
 28608  017102  D006               	goto	L18
 28609  017104                     l17120:
 28610                           
 28611                           ; BSR set to: 2
 28612  017104  0E00               	movlw	0
 28613  017106  6F38               	movwf	___fladd@a& (0+255),b
 28614  017108  0E00               	movlw	0
 28615  01710A  6F39               	movwf	(___fladd@a+1)& (0+255),b
 28616  01710C  0E00               	movlw	0
 28617  01710E  6F3A               	movwf	(___fladd@a+2)& (0+255),b
 28618  017110                     L18:
 28619  017110  0E00               	movlw	0
 28620  017112  6F3B               	movwf	(___fladd@a+3)& (0+255),b
 28621                           
 28622                           ; BSR set to: 2
 28623  017114  5142               	movf	___fladd@bexp& (0+255),w,b
 28624  017116  5D41               	subwf	___fladd@aexp& (0+255),w,b
 28625  017118  B0D8               	btfsc	status,0,c
 28626  01711A  D022               	goto	l17158
 28627                           
 28628                           ; BSR set to: 2
 28629  01711C  AD40               	btfss	___fladd@signs& (0+255),6,b
 28630  01711E  D002               	goto	l17128
 28631                           
 28632                           ; BSR set to: 2
 28633  017120  0E80               	movlw	128
 28634  017122  1B40               	xorwf	___fladd@signs& (0+255),f,b
 28635  017124                     l17128:
 28636                           
 28637                           ; BSR set to: 2
 28638  017124  C242  F243         	movff	___fladd@bexp,___fladd@grs
 28639                           
 28640                           ; BSR set to: 2
 28641  017128  C241  F242         	movff	___fladd@aexp,___fladd@bexp
 28642                           
 28643                           ; BSR set to: 2
 28644  01712C  C243  F241         	movff	___fladd@grs,___fladd@aexp
 28645                           
 28646                           ; BSR set to: 2
 28647  017130  C234  F243         	movff	___fladd@b,___fladd@grs
 28648                           
 28649                           ; BSR set to: 2
 28650  017134  C238  F234         	movff	___fladd@a,___fladd@b
 28651                           
 28652                           ; BSR set to: 2
 28653  017138  C243  F238         	movff	___fladd@grs,___fladd@a
 28654                           
 28655                           ; BSR set to: 2
 28656  01713C  C235  F243         	movff	___fladd@b+1,___fladd@grs
 28657                           
 28658                           ; BSR set to: 2
 28659  017140  C239  F235         	movff	___fladd@a+1,___fladd@b+1
 28660                           
 28661                           ; BSR set to: 2
 28662  017144  C243  F239         	movff	___fladd@grs,___fladd@a+1
 28663                           
 28664                           ; BSR set to: 2
 28665  017148  C236  F243         	movff	___fladd@b+2,___fladd@grs
 28666                           
 28667                           ; BSR set to: 2
 28668  01714C  C23A  F236         	movff	___fladd@a+2,___fladd@b+2
 28669                           
 28670                           ; BSR set to: 2
 28671  017150  C243  F23A         	movff	___fladd@grs,___fladd@a+2
 28672                           
 28673                           ; BSR set to: 2
 28674  017154  C237  F243         	movff	___fladd@b+3,___fladd@grs
 28675                           
 28676                           ; BSR set to: 2
 28677  017158  C23B  F237         	movff	___fladd@a+3,___fladd@b+3
 28678                           
 28679                           ; BSR set to: 2
 28680  01715C  C243  F23B         	movff	___fladd@grs,___fladd@a+3
 28681  017160                     l17158:
 28682                           
 28683                           ; BSR set to: 2
 28684  017160  0E00               	movlw	0
 28685  017162  6F43               	movwf	___fladd@grs& (0+255),b
 28686                           
 28687                           ; BSR set to: 2
 28688  017164  5142               	movf	___fladd@bexp& (0+255),w,b
 28689  017166  C241  F23C         	movff	___fladd@aexp,??___fladd
 28690  01716A  6B3D               	clrf	(??___fladd+1)& (0+255),b
 28691  01716C  5F3C               	subwf	??___fladd& (0+255),f,b
 28692  01716E  0E00               	movlw	0
 28693  017170  5B3D               	subwfb	(??___fladd+1)& (0+255),f,b
 28694  017172  BF3D               	btfsc	(??___fladd+1)& (0+255),7,b
 28695  017174  D02C               	goto	l3226
 28696  017176  513D               	movf	(??___fladd+1)& (0+255),w,b
 28697  017178  E104               	bnz	u20580
 28698  01717A  0E1A               	movlw	26
 28699  01717C  5D3C               	subwf	??___fladd& (0+255),w,b
 28700  01717E  A0D8               	btfss	status,0,c
 28701  017180  D026               	goto	l3226
 28702  017182                     u20580:
 28703                           
 28704                           ; BSR set to: 2
 28705  017182  5134               	movf	___fladd@b& (0+255),w,b
 28706  017184  1135               	iorwf	(___fladd@b+1)& (0+255),w,b
 28707  017186  1136               	iorwf	(___fladd@b+2)& (0+255),w,b
 28708  017188  1137               	iorwf	(___fladd@b+3)& (0+255),w,b
 28709  01718A  B4D8               	btfsc	status,2,c
 28710  01718C  D002               	goto	u20590
 28711  01718E  0E01               	movlw	1
 28712  017190  D001               	goto	u20600
 28713  017192                     u20590:
 28714  017192  0E00               	movlw	0
 28715  017194                     u20600:
 28716  017194  6F43               	movwf	___fladd@grs& (0+255),b
 28717                           
 28718                           ; BSR set to: 2
 28719  017196  0E00               	movlw	0
 28720  017198  6F34               	movwf	___fladd@b& (0+255),b
 28721  01719A  0E00               	movlw	0
 28722  01719C  6F35               	movwf	(___fladd@b+1)& (0+255),b
 28723  01719E  0E00               	movlw	0
 28724  0171A0  6F36               	movwf	(___fladd@b+2)& (0+255),b
 28725  0171A2  0E00               	movlw	0
 28726  0171A4  6F37               	movwf	(___fladd@b+3)& (0+255),b
 28727                           
 28728                           ; BSR set to: 2
 28729  0171A6  C241  F242         	movff	___fladd@aexp,___fladd@bexp
 28730  0171AA  D015               	goto	u20630
 28731  0171AC                     l3227:
 28732                           
 28733                           ; BSR set to: 2
 28734  0171AC  A143               	btfss	___fladd@grs& (0+255),0,b
 28735  0171AE  D005               	goto	l17170
 28736                           
 28737                           ; BSR set to: 2
 28738  0171B0  90D8               	bcf	status,0,c
 28739  0171B2  3143               	rrcf	___fladd@grs& (0+255),w,b
 28740  0171B4  0901               	iorlw	1
 28741  0171B6  6F43               	movwf	___fladd@grs& (0+255),b
 28742  0171B8  D002               	goto	l17172
 28743  0171BA                     l17170:
 28744                           
 28745                           ; BSR set to: 2
 28746  0171BA  90D8               	bcf	status,0,c
 28747  0171BC  3343               	rrcf	___fladd@grs& (0+255),f,b
 28748  0171BE                     l17172:
 28749                           
 28750                           ; BSR set to: 2
 28751  0171BE  B134               	btfsc	___fladd@b& (0+255),0,b
 28752                           
 28753                           ; BSR set to: 2
 28754  0171C0  8F43               	bsf	___fladd@grs& (0+255),7,b
 28755                           
 28756                           ; BSR set to: 2
 28757  0171C2  3537               	rlcf	(___fladd@b+3)& (0+255),w,b
 28758  0171C4  3337               	rrcf	(___fladd@b+3)& (0+255),f,b
 28759  0171C6  3336               	rrcf	(___fladd@b+2)& (0+255),f,b
 28760  0171C8  3335               	rrcf	(___fladd@b+1)& (0+255),f,b
 28761  0171CA  3334               	rrcf	___fladd@b& (0+255),f,b
 28762                           
 28763                           ; BSR set to: 2
 28764  0171CC  2B42               	incf	___fladd@bexp& (0+255),f,b
 28765  0171CE                     l3226:
 28766                           
 28767                           ; BSR set to: 2
 28768  0171CE  5141               	movf	___fladd@aexp& (0+255),w,b
 28769  0171D0  5D42               	subwf	___fladd@bexp& (0+255),w,b
 28770  0171D2  A0D8               	btfss	status,0,c
 28771  0171D4  D7EB               	goto	l3227
 28772  0171D6                     u20630:
 28773                           
 28774                           ; BSR set to: 2
 28775  0171D6  BD40               	btfsc	___fladd@signs& (0+255),6,b
 28776  0171D8  D028               	goto	l17204
 28777                           
 28778                           ; BSR set to: 2
 28779  0171DA  5142               	movf	___fladd@bexp& (0+255),w,b
 28780  0171DC  A4D8               	btfss	status,2,c
 28781  0171DE  D009               	goto	l17186
 28782                           
 28783                           ; BSR set to: 2
 28784  0171E0  0E00               	movlw	0
 28785  0171E2  6F34               	movwf	?___fladd& (0+255),b
 28786  0171E4  0E00               	movlw	0
 28787  0171E6  6F35               	movwf	(?___fladd+1)& (0+255),b
 28788  0171E8  0E00               	movlw	0
 28789  0171EA  6F36               	movwf	(?___fladd+2)& (0+255),b
 28790  0171EC  0E00               	movlw	0
 28791  0171EE  6F37               	movwf	(?___fladd+3)& (0+255),b
 28792  0171F0  0012               	return	
 28793  0171F2                     l17186:
 28794                           
 28795                           ; BSR set to: 2
 28796  0171F2  5138               	movf	___fladd@a& (0+255),w,b
 28797  0171F4  2734               	addwf	___fladd@b& (0+255),f,b
 28798  0171F6  5139               	movf	(___fladd@a+1)& (0+255),w,b
 28799  0171F8  2335               	addwfc	(___fladd@b+1)& (0+255),f,b
 28800  0171FA  513A               	movf	(___fladd@a+2)& (0+255),w,b
 28801  0171FC  2336               	addwfc	(___fladd@b+2)& (0+255),f,b
 28802  0171FE  513B               	movf	(___fladd@a+3)& (0+255),w,b
 28803  017200  2337               	addwfc	(___fladd@b+3)& (0+255),f,b
 28804                           
 28805                           ; BSR set to: 2
 28806  017202  A137               	btfss	(___fladd@b+3)& (0+255),0,b
 28807  017204  D071               	goto	u20760
 28808                           
 28809                           ; BSR set to: 2
 28810  017206  A143               	btfss	___fladd@grs& (0+255),0,b
 28811  017208  D005               	goto	l17194
 28812                           
 28813                           ; BSR set to: 2
 28814  01720A  90D8               	bcf	status,0,c
 28815  01720C  3143               	rrcf	___fladd@grs& (0+255),w,b
 28816  01720E  0901               	iorlw	1
 28817  017210  6F43               	movwf	___fladd@grs& (0+255),b
 28818  017212  D002               	goto	l17196
 28819  017214                     l17194:
 28820                           
 28821                           ; BSR set to: 2
 28822  017214  90D8               	bcf	status,0,c
 28823  017216  3343               	rrcf	___fladd@grs& (0+255),f,b
 28824  017218                     l17196:
 28825                           
 28826                           ; BSR set to: 2
 28827  017218  B134               	btfsc	___fladd@b& (0+255),0,b
 28828                           
 28829                           ; BSR set to: 2
 28830  01721A  8F43               	bsf	___fladd@grs& (0+255),7,b
 28831                           
 28832                           ; BSR set to: 2
 28833  01721C  3537               	rlcf	(___fladd@b+3)& (0+255),w,b
 28834  01721E  3337               	rrcf	(___fladd@b+3)& (0+255),f,b
 28835  017220  3336               	rrcf	(___fladd@b+2)& (0+255),f,b
 28836  017222  3335               	rrcf	(___fladd@b+1)& (0+255),f,b
 28837  017224  3334               	rrcf	___fladd@b& (0+255),f,b
 28838                           
 28839                           ; BSR set to: 2
 28840  017226  2B42               	incf	___fladd@bexp& (0+255),f,b
 28841  017228  D05F               	goto	u20760
 28842  01722A                     l17204:
 28843                           
 28844                           ; BSR set to: 2
 28845  01722A  5138               	movf	___fladd@a& (0+255),w,b
 28846  01722C  5D34               	subwf	___fladd@b& (0+255),w,b
 28847  01722E  5139               	movf	(___fladd@a+1)& (0+255),w,b
 28848  017230  5935               	subwfb	(___fladd@b+1)& (0+255),w,b
 28849  017232  513A               	movf	(___fladd@a+2)& (0+255),w,b
 28850  017234  5936               	subwfb	(___fladd@b+2)& (0+255),w,b
 28851  017236  5137               	movf	(___fladd@b+3)& (0+255),w,b
 28852  017238  0A80               	xorlw	128
 28853  01723A  6F3C               	movwf	??___fladd& (0+255),b
 28854  01723C  513B               	movf	(___fladd@a+3)& (0+255),w,b
 28855  01723E  0A80               	xorlw	128
 28856  017240  593C               	subwfb	??___fladd& (0+255),w,b
 28857  017242  B0D8               	btfsc	status,0,c
 28858  017244  D025               	goto	l17214
 28859                           
 28860                           ; BSR set to: 2
 28861  017246  5134               	movf	___fladd@b& (0+255),w,b
 28862  017248  5D38               	subwf	___fladd@a& (0+255),w,b
 28863  01724A  6F3C               	movwf	??___fladd& (0+255),b
 28864  01724C  5135               	movf	(___fladd@b+1)& (0+255),w,b
 28865  01724E  5939               	subwfb	(___fladd@a+1)& (0+255),w,b
 28866  017250  6F3D               	movwf	(??___fladd+1)& (0+255),b
 28867  017252  5136               	movf	(___fladd@b+2)& (0+255),w,b
 28868  017254  593A               	subwfb	(___fladd@a+2)& (0+255),w,b
 28869  017256  6F3E               	movwf	(??___fladd+2)& (0+255),b
 28870  017258  5137               	movf	(___fladd@b+3)& (0+255),w,b
 28871  01725A  593B               	subwfb	(___fladd@a+3)& (0+255),w,b
 28872  01725C  6F3F               	movwf	(??___fladd+3)& (0+255),b
 28873  01725E  0EFF               	movlw	255
 28874  017260  253C               	addwf	??___fladd& (0+255),w,b
 28875  017262  6F34               	movwf	___fladd@b& (0+255),b
 28876  017264  0EFF               	movlw	255
 28877  017266  213D               	addwfc	(??___fladd+1)& (0+255),w,b
 28878  017268  6F35               	movwf	(___fladd@b+1)& (0+255),b
 28879  01726A  0EFF               	movlw	255
 28880  01726C  213E               	addwfc	(??___fladd+2)& (0+255),w,b
 28881  01726E  6F36               	movwf	(___fladd@b+2)& (0+255),b
 28882  017270  0EFF               	movlw	255
 28883  017272  213F               	addwfc	(??___fladd+3)& (0+255),w,b
 28884  017274  6F37               	movwf	(___fladd@b+3)& (0+255),b
 28885  017276  0E80               	movlw	128
 28886  017278  1B40               	xorwf	___fladd@signs& (0+255),f,b
 28887                           
 28888                           ; BSR set to: 2
 28889  01727A  6D43               	negf	___fladd@grs& (0+255),b
 28890                           
 28891                           ; BSR set to: 2
 28892  01727C  5143               	movf	___fladd@grs& (0+255),w,b
 28893  01727E  A4D8               	btfss	status,2,c
 28894  017280  D00F               	goto	l3242
 28895                           
 28896                           ; BSR set to: 2
 28897  017282  0E01               	movlw	1
 28898  017284  2734               	addwf	___fladd@b& (0+255),f,b
 28899  017286  0E00               	movlw	0
 28900  017288  2335               	addwfc	(___fladd@b+1)& (0+255),f,b
 28901  01728A  2336               	addwfc	(___fladd@b+2)& (0+255),f,b
 28902  01728C  2337               	addwfc	(___fladd@b+3)& (0+255),f,b
 28903  01728E  D008               	goto	l3242
 28904  017290                     l17214:
 28905                           
 28906                           ; BSR set to: 2
 28907  017290  5138               	movf	___fladd@a& (0+255),w,b
 28908  017292  5F34               	subwf	___fladd@b& (0+255),f,b
 28909  017294  5139               	movf	(___fladd@a+1)& (0+255),w,b
 28910  017296  5B35               	subwfb	(___fladd@b+1)& (0+255),f,b
 28911  017298  513A               	movf	(___fladd@a+2)& (0+255),w,b
 28912  01729A  5B36               	subwfb	(___fladd@b+2)& (0+255),f,b
 28913  01729C  513B               	movf	(___fladd@a+3)& (0+255),w,b
 28914  01729E  5B37               	subwfb	(___fladd@b+3)& (0+255),f,b
 28915  0172A0                     l3242:
 28916                           
 28917                           ; BSR set to: 2
 28918  0172A0  5134               	movf	___fladd@b& (0+255),w,b
 28919  0172A2  1135               	iorwf	(___fladd@b+1)& (0+255),w,b
 28920  0172A4  1136               	iorwf	(___fladd@b+2)& (0+255),w,b
 28921  0172A6  1137               	iorwf	(___fladd@b+3)& (0+255),w,b
 28922  0172A8  A4D8               	btfss	status,2,c
 28923  0172AA  D01C               	goto	l17238
 28924                           
 28925                           ; BSR set to: 2
 28926  0172AC  5143               	movf	___fladd@grs& (0+255),w,b
 28927  0172AE  A4D8               	btfss	status,2,c
 28928  0172B0  D019               	goto	l17238
 28929                           
 28930                           ; BSR set to: 2
 28931  0172B2  0E00               	movlw	0
 28932  0172B4  6F34               	movwf	?___fladd& (0+255),b
 28933  0172B6  0E00               	movlw	0
 28934  0172B8  6F35               	movwf	(?___fladd+1)& (0+255),b
 28935  0172BA  0E00               	movlw	0
 28936  0172BC  6F36               	movwf	(?___fladd+2)& (0+255),b
 28937  0172BE  0E00               	movlw	0
 28938  0172C0  6F37               	movwf	(?___fladd+3)& (0+255),b
 28939  0172C2  0012               	return	
 28940  0172C4                     l17222:
 28941                           
 28942                           ; BSR set to: 2
 28943  0172C4  90D8               	bcf	status,0,c
 28944  0172C6  3734               	rlcf	___fladd@b& (0+255),f,b
 28945  0172C8  3735               	rlcf	(___fladd@b+1)& (0+255),f,b
 28946  0172CA  3736               	rlcf	(___fladd@b+2)& (0+255),f,b
 28947  0172CC  3737               	rlcf	(___fladd@b+3)& (0+255),f,b
 28948                           
 28949                           ; BSR set to: 2
 28950  0172CE  BF43               	btfsc	___fladd@grs& (0+255),7,b
 28951                           
 28952                           ; BSR set to: 2
 28953  0172D0  8134               	bsf	___fladd@b& (0+255),0,b
 28954                           
 28955                           ; BSR set to: 2
 28956  0172D2  A143               	btfss	___fladd@grs& (0+255),0,b
 28957  0172D4  D002               	goto	l17232
 28958                           
 28959                           ; BSR set to: 2
 28960  0172D6  80D8               	bsf	status,0,c
 28961  0172D8  D001               	goto	L19
 28962  0172DA                     l17232:
 28963                           
 28964                           ; BSR set to: 2
 28965  0172DA  90D8               	bcf	status,0,c
 28966  0172DC                     L19:
 28967  0172DC  3743               	rlcf	___fladd@grs& (0+255),f,b
 28968                           
 28969                           ; BSR set to: 2
 28970  0172DE  5142               	movf	___fladd@bexp& (0+255),w,b
 28971  0172E0  A4D8               	btfss	status,2,c
 28972                           
 28973                           ; BSR set to: 2
 28974  0172E2  0742               	decf	___fladd@bexp& (0+255),f,b
 28975  0172E4                     l17238:
 28976                           
 28977                           ; BSR set to: 2
 28978  0172E4  AF36               	btfss	(___fladd@b+2)& (0+255),7,b
 28979  0172E6  D7EE               	goto	l17222
 28980  0172E8                     u20760:
 28981                           
 28982                           ; BSR set to: 2
 28983  0172E8  0E00               	movlw	0
 28984  0172EA  6F41               	movwf	___fladd@aexp& (0+255),b
 28985                           
 28986                           ; BSR set to: 2
 28987  0172EC  AF43               	btfss	___fladd@grs& (0+255),7,b
 28988  0172EE  D00B               	goto	l3251
 28989                           
 28990                           ; BSR set to: 2
 28991  0172F0  C243  F23C         	movff	___fladd@grs,??___fladd
 28992  0172F4  0E7F               	movlw	127
 28993  0172F6  173C               	andwf	??___fladd& (0+255),f,b
 28994  0172F8  B4D8               	btfsc	status,2,c
 28995  0172FA  D003               	goto	l3252
 28996  0172FC                     u20780:
 28997                           
 28998                           ; BSR set to: 2
 28999  0172FC  0E01               	movlw	1
 29000  0172FE  6F41               	movwf	___fladd@aexp& (0+255),b
 29001  017300  D002               	goto	l3251
 29002  017302                     l3252:
 29003                           
 29004                           ; BSR set to: 2
 29005  017302  B134               	btfsc	___fladd@b& (0+255),0,b
 29006  017304  D7FB               	goto	u20780
 29007  017306                     l3251:
 29008                           
 29009                           ; BSR set to: 2
 29010  017306  5141               	movf	___fladd@aexp& (0+255),w,b
 29011  017308  B4D8               	btfsc	status,2,c
 29012  01730A  D020               	goto	l17258
 29013                           
 29014                           ; BSR set to: 2
 29015  01730C  0E01               	movlw	1
 29016  01730E  2734               	addwf	___fladd@b& (0+255),f,b
 29017  017310  0E00               	movlw	0
 29018  017312  2335               	addwfc	(___fladd@b+1)& (0+255),f,b
 29019  017314  2336               	addwfc	(___fladd@b+2)& (0+255),f,b
 29020  017316  2337               	addwfc	(___fladd@b+3)& (0+255),f,b
 29021                           
 29022                           ; BSR set to: 2
 29023  017318  A137               	btfss	(___fladd@b+3)& (0+255),0,b
 29024  01731A  D018               	goto	l17258
 29025                           
 29026                           ; BSR set to: 2
 29027  01731C  C234  F23C         	movff	___fladd@b,??___fladd
 29028  017320  C235  F23D         	movff	___fladd@b+1,??___fladd+1
 29029  017324  C236  F23E         	movff	___fladd@b+2,??___fladd+2
 29030  017328  C237  F23F         	movff	___fladd@b+3,??___fladd+3
 29031  01732C  353F               	rlcf	(??___fladd+3)& (0+255),w,b
 29032  01732E  333F               	rrcf	(??___fladd+3)& (0+255),f,b
 29033  017330  333E               	rrcf	(??___fladd+2)& (0+255),f,b
 29034  017332  333D               	rrcf	(??___fladd+1)& (0+255),f,b
 29035  017334  333C               	rrcf	??___fladd& (0+255),f,b
 29036  017336  C23C  F234         	movff	??___fladd,___fladd@b
 29037  01733A  C23D  F235         	movff	??___fladd+1,___fladd@b+1
 29038  01733E  C23E  F236         	movff	??___fladd+2,___fladd@b+2
 29039  017342  C23F  F237         	movff	??___fladd+3,___fladd@b+3
 29040  017346  2942               	incf	___fladd@bexp& (0+255),w,b
 29041  017348  A4D8               	btfss	status,2,c
 29042                           
 29043                           ; BSR set to: 2
 29044  01734A  2B42               	incf	___fladd@bexp& (0+255),f,b
 29045  01734C                     l17258:
 29046                           
 29047                           ; BSR set to: 2
 29048  01734C  2942               	incf	___fladd@bexp& (0+255),w,b
 29049  01734E  B4D8               	btfsc	status,2,c
 29050  017350  D003               	goto	u20840
 29051                           
 29052                           ; BSR set to: 2
 29053  017352  5142               	movf	___fladd@bexp& (0+255),w,b
 29054  017354  A4D8               	btfss	status,2,c
 29055  017356  D00D               	goto	l17266
 29056  017358                     u20840:
 29057                           
 29058                           ; BSR set to: 2
 29059  017358  0E00               	movlw	0
 29060  01735A  6F34               	movwf	___fladd@b& (0+255),b
 29061  01735C  0E00               	movlw	0
 29062  01735E  6F35               	movwf	(___fladd@b+1)& (0+255),b
 29063  017360  0E00               	movlw	0
 29064  017362  6F36               	movwf	(___fladd@b+2)& (0+255),b
 29065  017364  0E00               	movlw	0
 29066  017366  6F37               	movwf	(___fladd@b+3)& (0+255),b
 29067  017368  5142               	movf	___fladd@bexp& (0+255),w,b
 29068  01736A  A4D8               	btfss	status,2,c
 29069  01736C  D002               	goto	l17266
 29070                           
 29071                           ; BSR set to: 2
 29072  01736E  0E00               	movlw	0
 29073  017370  6F40               	movwf	___fladd@signs& (0+255),b
 29074  017372                     l17266:
 29075                           
 29076                           ; BSR set to: 2
 29077  017372  A142               	btfss	___fladd@bexp& (0+255),0,b
 29078  017374  D002               	goto	l17270
 29079                           
 29080                           ; BSR set to: 2
 29081  017376  8F36               	bsf	(___fladd@b+2)& (0+255),7,b
 29082  017378  D001               	goto	l17272
 29083  01737A                     l17270:
 29084                           
 29085                           ; BSR set to: 2
 29086  01737A  9F36               	bcf	(___fladd@b+2)& (0+255),7,b
 29087  01737C                     l17272:
 29088                           
 29089                           ; BSR set to: 2
 29090  01737C  90D8               	bcf	status,0,c
 29091  01737E  3142               	rrcf	___fladd@bexp& (0+255),w,b
 29092  017380  6F37               	movwf	(___fladd@b+3)& (0+255),b
 29093                           
 29094                           ; BSR set to: 2
 29095  017382  BF40               	btfsc	___fladd@signs& (0+255),7,b
 29096                           
 29097                           ; BSR set to: 2
 29098  017384  8F37               	bsf	(___fladd@b+3)& (0+255),7,b
 29099                           
 29100                           ; BSR set to: 2
 29101  017386  C234  F234         	movff	___fladd@b,?___fladd
 29102  01738A  C235  F235         	movff	___fladd@b+1,?___fladd+1
 29103  01738E  C236  F236         	movff	___fladd@b+2,?___fladd+2
 29104  017392  C237  F237         	movff	___fladd@b+3,?___fladd+3
 29105                           
 29106                           ; BSR set to: 2
 29107  017396  0012               	return		;funcret
 29108  017398                     __end_of___fladd:
 29109                           	opt callstack 0
 29110                           
 29111 ;; *************** function ___flneg *****************
 29112 ;; Defined at:
 29113 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
 29114 ;; Parameters:    Size  Location     Type
 29115 ;;  f1              4    0[BANK2 ] unsigned char 
 29116 ;; Auto vars:     Size  Location     Type
 29117 ;;		None
 29118 ;; Return value:  Size  Location     Type
 29119 ;;                  4    0[BANK2 ] unsigned char 
 29120 ;; Registers used:
 29121 ;;		wreg, status,2, status,0
 29122 ;; Tracked objects:
 29123 ;;		On entry : 0/0
 29124 ;;		On exit  : 0/0
 29125 ;;		Unchanged: 0/0
 29126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29127 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29130 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29131 ;;Total ram usage:        4 bytes
 29132 ;; Hardware stack levels used:    1
 29133 ;; Hardware stack levels required when called:   11
 29134 ;; This function calls:
 29135 ;;		Nothing
 29136 ;; This function is called by:
 29137 ;;		__doprnt
 29138 ;;		_ftoa
 29139 ;; This function uses a non-reentrant model
 29140 ;;
 29141                           
 29142                           	psect	text97
 29143  01C100                     __ptext97:
 29144                           	opt callstack 0
 29145  01C100                     ___flneg:
 29146                           	opt callstack 14
 29147                           
 29148                           ; BSR set to: 2
 29149                           ;incstack = 0
 29150  01C100  0102               	movlb	2	; () banked
 29151  01C102  5100               	movf	___flneg@f1& (0+255),w,b
 29152  01C104  1101               	iorwf	(___flneg@f1+1)& (0+255),w,b
 29153  01C106  1102               	iorwf	(___flneg@f1+2)& (0+255),w,b
 29154  01C108  1103               	iorwf	(___flneg@f1+3)& (0+255),w,b
 29155  01C10A  B4D8               	btfsc	status,2,c
 29156  01C10C  D008               	goto	l17796
 29157                           
 29158                           ; BSR set to: 2
 29159  01C10E  0E00               	movlw	0
 29160  01C110  1B00               	xorwf	___flneg@f1& (0+255),f,b
 29161  01C112  0E00               	movlw	0
 29162  01C114  1B01               	xorwf	(___flneg@f1+1)& (0+255),f,b
 29163  01C116  0E00               	movlw	0
 29164  01C118  1B02               	xorwf	(___flneg@f1+2)& (0+255),f,b
 29165  01C11A  0E80               	movlw	128
 29166  01C11C  1B03               	xorwf	(___flneg@f1+3)& (0+255),f,b
 29167  01C11E                     l17796:
 29168                           
 29169                           ; BSR set to: 2
 29170  01C11E  C200  F200         	movff	___flneg@f1,?___flneg
 29171  01C122  C201  F201         	movff	___flneg@f1+1,?___flneg+1
 29172  01C126  C202  F202         	movff	___flneg@f1+2,?___flneg+2
 29173  01C12A  C203  F203         	movff	___flneg@f1+3,?___flneg+3
 29174                           
 29175                           ; BSR set to: 2
 29176  01C12E  0012               	return		;funcret
 29177  01C130                     __end_of___flneg:
 29178                           	opt callstack 0
 29179                           
 29180 ;; *************** function ___flge *****************
 29181 ;; Defined at:
 29182 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
 29183 ;; Parameters:    Size  Location     Type
 29184 ;;  ff1             4    0[BANK2 ] unsigned char 
 29185 ;;  ff2             4    4[BANK2 ] unsigned char 
 29186 ;; Auto vars:     Size  Location     Type
 29187 ;;		None
 29188 ;; Return value:  Size  Location     Type
 29189 ;;		None               void
 29190 ;; Registers used:
 29191 ;;		wreg, status,2, status,0
 29192 ;; Tracked objects:
 29193 ;;		On entry : 0/0
 29194 ;;		On exit  : 0/0
 29195 ;;		Unchanged: 0/0
 29196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29197 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29199 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29200 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29201 ;;Total ram usage:       12 bytes
 29202 ;; Hardware stack levels used:    1
 29203 ;; Hardware stack levels required when called:   11
 29204 ;; This function calls:
 29205 ;;		Nothing
 29206 ;; This function is called by:
 29207 ;;		_floatToEngineeringFormat
 29208 ;;		__doprnt
 29209 ;; This function uses a non-reentrant model
 29210 ;;
 29211                           
 29212                           	psect	text98
 29213  01A4AE                     __ptext98:
 29214                           	opt callstack 0
 29215  01A4AE                     ___flge:
 29216                           	opt callstack 14
 29217                           
 29218                           ; BSR set to: 2
 29219                           ;incstack = 0
 29220  01A4AE  0E00               	movlw	0
 29221  01A4B0  0102               	movlb	2	; () banked
 29222  01A4B2  1500               	andwf	___flge@ff1& (0+255),w,b
 29223  01A4B4  6F08               	movwf	??___flge& (0+255),b
 29224  01A4B6  0E00               	movlw	0
 29225  01A4B8  1501               	andwf	(___flge@ff1+1)& (0+255),w,b
 29226  01A4BA  6F09               	movwf	(??___flge+1)& (0+255),b
 29227  01A4BC  0E80               	movlw	128
 29228  01A4BE  1502               	andwf	(___flge@ff1+2)& (0+255),w,b
 29229  01A4C0  6F0A               	movwf	(??___flge+2)& (0+255),b
 29230  01A4C2  0E7F               	movlw	127
 29231  01A4C4  1503               	andwf	(___flge@ff1+3)& (0+255),w,b
 29232  01A4C6  6F0B               	movwf	(??___flge+3)& (0+255),b
 29233  01A4C8  5108               	movf	??___flge& (0+255),w,b
 29234  01A4CA  1109               	iorwf	(??___flge+1)& (0+255),w,b
 29235  01A4CC  110A               	iorwf	(??___flge+2)& (0+255),w,b
 29236  01A4CE  110B               	iorwf	(??___flge+3)& (0+255),w,b
 29237  01A4D0  A4D8               	btfss	status,2,c
 29238  01A4D2  D008               	goto	l17774
 29239                           
 29240                           ; BSR set to: 2
 29241  01A4D4  0E00               	movlw	0
 29242  01A4D6  6F00               	movwf	___flge@ff1& (0+255),b
 29243  01A4D8  0E00               	movlw	0
 29244  01A4DA  6F01               	movwf	(___flge@ff1+1)& (0+255),b
 29245  01A4DC  0E00               	movlw	0
 29246  01A4DE  6F02               	movwf	(___flge@ff1+2)& (0+255),b
 29247  01A4E0  0E00               	movlw	0
 29248  01A4E2  6F03               	movwf	(___flge@ff1+3)& (0+255),b
 29249  01A4E4                     l17774:
 29250                           
 29251                           ; BSR set to: 2
 29252  01A4E4  0E00               	movlw	0
 29253  01A4E6  1504               	andwf	___flge@ff2& (0+255),w,b
 29254  01A4E8  6F08               	movwf	??___flge& (0+255),b
 29255  01A4EA  0E00               	movlw	0
 29256  01A4EC  1505               	andwf	(___flge@ff2+1)& (0+255),w,b
 29257  01A4EE  6F09               	movwf	(??___flge+1)& (0+255),b
 29258  01A4F0  0E80               	movlw	128
 29259  01A4F2  1506               	andwf	(___flge@ff2+2)& (0+255),w,b
 29260  01A4F4  6F0A               	movwf	(??___flge+2)& (0+255),b
 29261  01A4F6  0E7F               	movlw	127
 29262  01A4F8  1507               	andwf	(___flge@ff2+3)& (0+255),w,b
 29263  01A4FA  6F0B               	movwf	(??___flge+3)& (0+255),b
 29264  01A4FC  5108               	movf	??___flge& (0+255),w,b
 29265  01A4FE  1109               	iorwf	(??___flge+1)& (0+255),w,b
 29266  01A500  110A               	iorwf	(??___flge+2)& (0+255),w,b
 29267  01A502  110B               	iorwf	(??___flge+3)& (0+255),w,b
 29268  01A504  A4D8               	btfss	status,2,c
 29269  01A506  D008               	goto	l17778
 29270                           
 29271                           ; BSR set to: 2
 29272  01A508  0E00               	movlw	0
 29273  01A50A  6F04               	movwf	___flge@ff2& (0+255),b
 29274  01A50C  0E00               	movlw	0
 29275  01A50E  6F05               	movwf	(___flge@ff2+1)& (0+255),b
 29276  01A510  0E00               	movlw	0
 29277  01A512  6F06               	movwf	(___flge@ff2+2)& (0+255),b
 29278  01A514  0E00               	movlw	0
 29279  01A516  6F07               	movwf	(___flge@ff2+3)& (0+255),b
 29280  01A518                     l17778:
 29281                           
 29282                           ; BSR set to: 2
 29283  01A518  AF03               	btfss	(___flge@ff1+3)& (0+255),7,b
 29284  01A51A  D009               	goto	l17782
 29285                           
 29286                           ; BSR set to: 2
 29287  01A51C  6D00               	negf	___flge@ff1& (0+255),b
 29288  01A51E  1F01               	comf	(___flge@ff1+1)& (0+255),f,b
 29289  01A520  B0D8               	btfsc	status,0,c
 29290  01A522  2B01               	incf	(___flge@ff1+1)& (0+255),f,b
 29291  01A524  1F02               	comf	(___flge@ff1+2)& (0+255),f,b
 29292  01A526  B0D8               	btfsc	status,0,c
 29293  01A528  2B02               	incf	(___flge@ff1+2)& (0+255),f,b
 29294  01A52A  0E80               	movlw	128
 29295  01A52C  5703               	subfwb	(___flge@ff1+3)& (0+255),f,b
 29296  01A52E                     l17782:
 29297                           
 29298                           ; BSR set to: 2
 29299  01A52E  AF07               	btfss	(___flge@ff2+3)& (0+255),7,b
 29300  01A530  D009               	goto	l2953
 29301                           
 29302                           ; BSR set to: 2
 29303  01A532  6D04               	negf	___flge@ff2& (0+255),b
 29304  01A534  1F05               	comf	(___flge@ff2+1)& (0+255),f,b
 29305  01A536  B0D8               	btfsc	status,0,c
 29306  01A538  2B05               	incf	(___flge@ff2+1)& (0+255),f,b
 29307  01A53A  1F06               	comf	(___flge@ff2+2)& (0+255),f,b
 29308  01A53C  B0D8               	btfsc	status,0,c
 29309  01A53E  2B06               	incf	(___flge@ff2+2)& (0+255),f,b
 29310  01A540  0E80               	movlw	128
 29311  01A542  5707               	subfwb	(___flge@ff2+3)& (0+255),f,b
 29312  01A544                     l2953:
 29313                           
 29314                           ; BSR set to: 2
 29315  01A544  0E00               	movlw	0
 29316  01A546  1B00               	xorwf	___flge@ff1& (0+255),f,b
 29317  01A548  0E00               	movlw	0
 29318  01A54A  1B01               	xorwf	(___flge@ff1+1)& (0+255),f,b
 29319  01A54C  0E00               	movlw	0
 29320  01A54E  1B02               	xorwf	(___flge@ff1+2)& (0+255),f,b
 29321  01A550  0E80               	movlw	128
 29322  01A552  1B03               	xorwf	(___flge@ff1+3)& (0+255),f,b
 29323  01A554  0E00               	movlw	0
 29324  01A556  1B04               	xorwf	___flge@ff2& (0+255),f,b
 29325  01A558  0E00               	movlw	0
 29326  01A55A  1B05               	xorwf	(___flge@ff2+1)& (0+255),f,b
 29327  01A55C  0E00               	movlw	0
 29328  01A55E  1B06               	xorwf	(___flge@ff2+2)& (0+255),f,b
 29329  01A560  0E80               	movlw	128
 29330  01A562  1B07               	xorwf	(___flge@ff2+3)& (0+255),f,b
 29331  01A564  5104               	movf	___flge@ff2& (0+255),w,b
 29332  01A566  5D00               	subwf	___flge@ff1& (0+255),w,b
 29333  01A568  5105               	movf	(___flge@ff2+1)& (0+255),w,b
 29334  01A56A  5901               	subwfb	(___flge@ff1+1)& (0+255),w,b
 29335  01A56C  5106               	movf	(___flge@ff2+2)& (0+255),w,b
 29336  01A56E  5902               	subwfb	(___flge@ff1+2)& (0+255),w,b
 29337  01A570  5107               	movf	(___flge@ff2+3)& (0+255),w,b
 29338  01A572  5903               	subwfb	(___flge@ff1+3)& (0+255),w,b
 29339  01A574  B0D8               	btfsc	status,0,c
 29340  01A576  D002               	goto	l17788
 29341                           
 29342                           ; BSR set to: 2
 29343  01A578  90D8               	bcf	status,0,c
 29344  01A57A  0012               	return	
 29345  01A57C                     l17788:
 29346                           
 29347                           ; BSR set to: 2
 29348  01A57C  80D8               	bsf	status,0,c
 29349                           
 29350                           ; BSR set to: 2
 29351  01A57E  0012               	return		;funcret
 29352  01A580                     __end_of___flge:
 29353                           	opt callstack 0
 29354                           
 29355 ;; *************** function ___fleq *****************
 29356 ;; Defined at:
 29357 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
 29358 ;; Parameters:    Size  Location     Type
 29359 ;;  ff1             4    0[BANK2 ] unsigned char 
 29360 ;;  ff2             4    4[BANK2 ] unsigned char 
 29361 ;; Auto vars:     Size  Location     Type
 29362 ;;		None
 29363 ;; Return value:  Size  Location     Type
 29364 ;;		None               void
 29365 ;; Registers used:
 29366 ;;		wreg, status,2, status,0
 29367 ;; Tracked objects:
 29368 ;;		On entry : 0/0
 29369 ;;		On exit  : 0/0
 29370 ;;		Unchanged: 0/0
 29371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29372 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29374 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29375 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29376 ;;Total ram usage:       12 bytes
 29377 ;; Hardware stack levels used:    1
 29378 ;; Hardware stack levels required when called:   11
 29379 ;; This function calls:
 29380 ;;		Nothing
 29381 ;; This function is called by:
 29382 ;;		_floatToEngineeringFormat
 29383 ;;		__doprnt
 29384 ;; This function uses a non-reentrant model
 29385 ;;
 29386                           
 29387                           	psect	text99
 29388  01AE5E                     __ptext99:
 29389                           	opt callstack 0
 29390  01AE5E                     ___fleq:
 29391                           	opt callstack 14
 29392                           
 29393                           ; BSR set to: 2
 29394                           ;incstack = 0
 29395  01AE5E  0E00               	movlw	0
 29396  01AE60  0102               	movlb	2	; () banked
 29397  01AE62  1500               	andwf	___fleq@ff1& (0+255),w,b
 29398  01AE64  6F08               	movwf	??___fleq& (0+255),b
 29399  01AE66  0E00               	movlw	0
 29400  01AE68  1501               	andwf	(___fleq@ff1+1)& (0+255),w,b
 29401  01AE6A  6F09               	movwf	(??___fleq+1)& (0+255),b
 29402  01AE6C  0E80               	movlw	128
 29403  01AE6E  1502               	andwf	(___fleq@ff1+2)& (0+255),w,b
 29404  01AE70  6F0A               	movwf	(??___fleq+2)& (0+255),b
 29405  01AE72  0E7F               	movlw	127
 29406  01AE74  1503               	andwf	(___fleq@ff1+3)& (0+255),w,b
 29407  01AE76  6F0B               	movwf	(??___fleq+3)& (0+255),b
 29408  01AE78  5108               	movf	??___fleq& (0+255),w,b
 29409  01AE7A  1109               	iorwf	(??___fleq+1)& (0+255),w,b
 29410  01AE7C  110A               	iorwf	(??___fleq+2)& (0+255),w,b
 29411  01AE7E  110B               	iorwf	(??___fleq+3)& (0+255),w,b
 29412  01AE80  A4D8               	btfss	status,2,c
 29413  01AE82  D008               	goto	l17758
 29414                           
 29415                           ; BSR set to: 2
 29416  01AE84  0E00               	movlw	0
 29417  01AE86  6F00               	movwf	___fleq@ff1& (0+255),b
 29418  01AE88  0E00               	movlw	0
 29419  01AE8A  6F01               	movwf	(___fleq@ff1+1)& (0+255),b
 29420  01AE8C  0E00               	movlw	0
 29421  01AE8E  6F02               	movwf	(___fleq@ff1+2)& (0+255),b
 29422  01AE90  0E00               	movlw	0
 29423  01AE92  6F03               	movwf	(___fleq@ff1+3)& (0+255),b
 29424  01AE94                     l17758:
 29425                           
 29426                           ; BSR set to: 2
 29427  01AE94  0E00               	movlw	0
 29428  01AE96  1504               	andwf	___fleq@ff2& (0+255),w,b
 29429  01AE98  6F08               	movwf	??___fleq& (0+255),b
 29430  01AE9A  0E00               	movlw	0
 29431  01AE9C  1505               	andwf	(___fleq@ff2+1)& (0+255),w,b
 29432  01AE9E  6F09               	movwf	(??___fleq+1)& (0+255),b
 29433  01AEA0  0E80               	movlw	128
 29434  01AEA2  1506               	andwf	(___fleq@ff2+2)& (0+255),w,b
 29435  01AEA4  6F0A               	movwf	(??___fleq+2)& (0+255),b
 29436  01AEA6  0E7F               	movlw	127
 29437  01AEA8  1507               	andwf	(___fleq@ff2+3)& (0+255),w,b
 29438  01AEAA  6F0B               	movwf	(??___fleq+3)& (0+255),b
 29439  01AEAC  5108               	movf	??___fleq& (0+255),w,b
 29440  01AEAE  1109               	iorwf	(??___fleq+1)& (0+255),w,b
 29441  01AEB0  110A               	iorwf	(??___fleq+2)& (0+255),w,b
 29442  01AEB2  110B               	iorwf	(??___fleq+3)& (0+255),w,b
 29443  01AEB4  A4D8               	btfss	status,2,c
 29444  01AEB6  D008               	goto	l17762
 29445                           
 29446                           ; BSR set to: 2
 29447  01AEB8  0E00               	movlw	0
 29448  01AEBA  6F04               	movwf	___fleq@ff2& (0+255),b
 29449  01AEBC  0E00               	movlw	0
 29450  01AEBE  6F05               	movwf	(___fleq@ff2+1)& (0+255),b
 29451  01AEC0  0E00               	movlw	0
 29452  01AEC2  6F06               	movwf	(___fleq@ff2+2)& (0+255),b
 29453  01AEC4  0E00               	movlw	0
 29454  01AEC6  6F07               	movwf	(___fleq@ff2+3)& (0+255),b
 29455  01AEC8                     l17762:
 29456                           
 29457                           ; BSR set to: 2
 29458  01AEC8  5104               	movf	___fleq@ff2& (0+255),w,b
 29459  01AECA  1900               	xorwf	___fleq@ff1& (0+255),w,b
 29460  01AECC  E10A               	bnz	u21560
 29461  01AECE  5105               	movf	(___fleq@ff2+1)& (0+255),w,b
 29462  01AED0  1901               	xorwf	(___fleq@ff1+1)& (0+255),w,b
 29463  01AED2  E107               	bnz	u21560
 29464  01AED4  5106               	movf	(___fleq@ff2+2)& (0+255),w,b
 29465  01AED6  1902               	xorwf	(___fleq@ff1+2)& (0+255),w,b
 29466  01AED8  E104               	bnz	u21560
 29467  01AEDA  5107               	movf	(___fleq@ff2+3)& (0+255),w,b
 29468  01AEDC  1903               	xorwf	(___fleq@ff1+3)& (0+255),w,b
 29469  01AEDE  B4D8               	btfsc	status,2,c
 29470  01AEE0  D002               	goto	l17766
 29471  01AEE2                     u21560:
 29472                           
 29473                           ; BSR set to: 2
 29474  01AEE2  90D8               	bcf	status,0,c
 29475  01AEE4  0012               	return	
 29476  01AEE6                     l17766:
 29477                           
 29478                           ; BSR set to: 2
 29479  01AEE6  80D8               	bsf	status,0,c
 29480                           
 29481                           ; BSR set to: 2
 29482  01AEE8  0012               	return		;funcret
 29483  01AEEA                     __end_of___fleq:
 29484                           	opt callstack 0
 29485                           
 29486 ;; *************** function _abs *****************
 29487 ;; Defined at:
 29488 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\abs.c"
 29489 ;; Parameters:    Size  Location     Type
 29490 ;;  a               2   58[BANK2 ] int 
 29491 ;; Auto vars:     Size  Location     Type
 29492 ;;		None
 29493 ;; Return value:  Size  Location     Type
 29494 ;;                  2   58[BANK2 ] int 
 29495 ;; Registers used:
 29496 ;;		wreg, status,2, status,0
 29497 ;; Tracked objects:
 29498 ;;		On entry : 0/0
 29499 ;;		On exit  : 0/0
 29500 ;;		Unchanged: 0/0
 29501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29502 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29504 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29505 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29506 ;;Total ram usage:        4 bytes
 29507 ;; Hardware stack levels used:    1
 29508 ;; Hardware stack levels required when called:   11
 29509 ;; This function calls:
 29510 ;;		Nothing
 29511 ;; This function is called by:
 29512 ;;		_floatToEngineeringFormat
 29513 ;; This function uses a non-reentrant model
 29514 ;;
 29515                           
 29516                           	psect	text100
 29517  01C1B6                     __ptext100:
 29518                           	opt callstack 0
 29519  01C1B6                     _abs:
 29520                           	opt callstack 15
 29521                           
 29522                           ; BSR set to: 2
 29523                           ;incstack = 0
 29524  01C1B6  0102               	movlb	2	; () banked
 29525  01C1B8  AF3B               	btfss	(abs@a+1)& (0+255),7,b
 29526  01C1BA  D00D               	goto	l3371
 29527                           
 29528                           ; BSR set to: 2
 29529  01C1BC  C23A  F23C         	movff	abs@a,??_abs
 29530  01C1C0  C23B  F23D         	movff	abs@a+1,??_abs+1
 29531  01C1C4  1F3C               	comf	??_abs& (0+255),f,b
 29532  01C1C6  1F3D               	comf	(??_abs+1)& (0+255),f,b
 29533  01C1C8  4B3C               	infsnz	??_abs& (0+255),f,b
 29534  01C1CA  2B3D               	incf	(??_abs+1)& (0+255),f,b
 29535  01C1CC  C23C  F23A         	movff	??_abs,?_abs
 29536  01C1D0  C23D  F23B         	movff	??_abs+1,?_abs+1
 29537  01C1D4  0012               	return	
 29538  01C1D6                     l3371:
 29539                           
 29540                           ; BSR set to: 2
 29541  01C1D6  C23A  F23A         	movff	abs@a,?_abs
 29542  01C1DA  C23B  F23B         	movff	abs@a+1,?_abs+1
 29543                           
 29544                           ; BSR set to: 2
 29545  01C1DE  0012               	return		;funcret
 29546  01C1E0                     __end_of_abs:
 29547                           	opt callstack 0
 29548                           
 29549 ;; *************** function ___fldiv *****************
 29550 ;; Defined at:
 29551 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
 29552 ;; Parameters:    Size  Location     Type
 29553 ;;  b               4    0[BANK2 ] int 
 29554 ;;  a               4    4[BANK2 ] int 
 29555 ;; Auto vars:     Size  Location     Type
 29556 ;;  grs             4   19[BANK2 ] unsigned long 
 29557 ;;  rem             4   12[BANK2 ] unsigned long 
 29558 ;;  new_exp         2   17[BANK2 ] int 
 29559 ;;  aexp            1   24[BANK2 ] unsigned char 
 29560 ;;  bexp            1   23[BANK2 ] unsigned char 
 29561 ;;  sign            1   16[BANK2 ] unsigned char 
 29562 ;; Return value:  Size  Location     Type
 29563 ;;                  4    0[BANK2 ] unsigned char 
 29564 ;; Registers used:
 29565 ;;		wreg, status,2, status,0
 29566 ;; Tracked objects:
 29567 ;;		On entry : 0/0
 29568 ;;		On exit  : 0/0
 29569 ;;		Unchanged: 0/0
 29570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29571 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29572 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29573 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29574 ;;      Totals:         0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29575 ;;Total ram usage:       25 bytes
 29576 ;; Hardware stack levels used:    1
 29577 ;; Hardware stack levels required when called:   11
 29578 ;; This function calls:
 29579 ;;		Nothing
 29580 ;; This function is called by:
 29581 ;;		_printCurrentMeasurements
 29582 ;;		_floatToEngineeringFormat
 29583 ;; This function uses a non-reentrant model
 29584 ;;
 29585                           
 29586                           	psect	text101
 29587  0181F6                     __ptext101:
 29588                           	opt callstack 0
 29589  0181F6                     ___fldiv:
 29590                           	opt callstack 15
 29591                           
 29592                           ; BSR set to: 2
 29593                           ;incstack = 0
 29594  0181F6  0102               	movlb	2	; () banked
 29595  0181F8  5103               	movf	(___fldiv@b+3)& (0+255),w,b
 29596  0181FA  0B80               	andlw	128
 29597  0181FC  6F10               	movwf	___fldiv@sign& (0+255),b
 29598  0181FE  5103               	movf	(___fldiv@b+3)& (0+255),w,b
 29599  018200  2503               	addwf	(___fldiv@b+3)& (0+255),w,b
 29600  018202  6F17               	movwf	___fldiv@bexp& (0+255),b
 29601                           
 29602                           ; BSR set to: 2
 29603  018204  BF02               	btfsc	(___fldiv@b+2)& (0+255),7,b
 29604                           
 29605                           ; BSR set to: 2
 29606  018206  8117               	bsf	___fldiv@bexp& (0+255),0,b
 29607                           
 29608                           ; BSR set to: 2
 29609  018208  5117               	movf	___fldiv@bexp& (0+255),w,b
 29610  01820A  B4D8               	btfsc	status,2,c
 29611  01820C  D00D               	goto	l18638
 29612                           
 29613                           ; BSR set to: 2
 29614  01820E  2917               	incf	___fldiv@bexp& (0+255),w,b
 29615  018210  A4D8               	btfss	status,2,c
 29616  018212  D008               	goto	l18634
 29617                           
 29618                           ; BSR set to: 2
 29619  018214  0E00               	movlw	0
 29620  018216  6F00               	movwf	___fldiv@b& (0+255),b
 29621  018218  0E00               	movlw	0
 29622  01821A  6F01               	movwf	(___fldiv@b+1)& (0+255),b
 29623  01821C  0E00               	movlw	0
 29624  01821E  6F02               	movwf	(___fldiv@b+2)& (0+255),b
 29625  018220  0E00               	movlw	0
 29626  018222  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 29627  018224                     l18634:
 29628                           
 29629                           ; BSR set to: 2
 29630  018224  8F02               	bsf	(___fldiv@b+2)& (0+255),7,b
 29631  018226  D006               	goto	L20
 29632  018228                     l18638:
 29633                           
 29634                           ; BSR set to: 2
 29635  018228  0E00               	movlw	0
 29636  01822A  6F00               	movwf	___fldiv@b& (0+255),b
 29637  01822C  0E00               	movlw	0
 29638  01822E  6F01               	movwf	(___fldiv@b+1)& (0+255),b
 29639  018230  0E00               	movlw	0
 29640  018232  6F02               	movwf	(___fldiv@b+2)& (0+255),b
 29641  018234                     L20:
 29642  018234  0E00               	movlw	0
 29643  018236  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 29644                           
 29645                           ; BSR set to: 2
 29646  018238  5107               	movf	(___fldiv@a+3)& (0+255),w,b
 29647  01823A  0B80               	andlw	128
 29648  01823C  1B10               	xorwf	___fldiv@sign& (0+255),f,b
 29649                           
 29650                           ; BSR set to: 2
 29651  01823E  5107               	movf	(___fldiv@a+3)& (0+255),w,b
 29652  018240  2507               	addwf	(___fldiv@a+3)& (0+255),w,b
 29653  018242  6F18               	movwf	___fldiv@aexp& (0+255),b
 29654                           
 29655                           ; BSR set to: 2
 29656  018244  BF06               	btfsc	(___fldiv@a+2)& (0+255),7,b
 29657                           
 29658                           ; BSR set to: 2
 29659  018246  8118               	bsf	___fldiv@aexp& (0+255),0,b
 29660                           
 29661                           ; BSR set to: 2
 29662  018248  5118               	movf	___fldiv@aexp& (0+255),w,b
 29663  01824A  B4D8               	btfsc	status,2,c
 29664  01824C  D00D               	goto	l18658
 29665                           
 29666                           ; BSR set to: 2
 29667  01824E  2918               	incf	___fldiv@aexp& (0+255),w,b
 29668  018250  A4D8               	btfss	status,2,c
 29669  018252  D008               	goto	l18654
 29670                           
 29671                           ; BSR set to: 2
 29672  018254  0E00               	movlw	0
 29673  018256  6F04               	movwf	___fldiv@a& (0+255),b
 29674  018258  0E00               	movlw	0
 29675  01825A  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 29676  01825C  0E00               	movlw	0
 29677  01825E  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 29678  018260  0E00               	movlw	0
 29679  018262  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 29680  018264                     l18654:
 29681                           
 29682                           ; BSR set to: 2
 29683  018264  8F06               	bsf	(___fldiv@a+2)& (0+255),7,b
 29684  018266  D006               	goto	L21
 29685  018268                     l18658:
 29686                           
 29687                           ; BSR set to: 2
 29688  018268  0E00               	movlw	0
 29689  01826A  6F04               	movwf	___fldiv@a& (0+255),b
 29690  01826C  0E00               	movlw	0
 29691  01826E  6F05               	movwf	(___fldiv@a+1)& (0+255),b
 29692  018270  0E00               	movlw	0
 29693  018272  6F06               	movwf	(___fldiv@a+2)& (0+255),b
 29694  018274                     L21:
 29695  018274  0E00               	movlw	0
 29696  018276  6F07               	movwf	(___fldiv@a+3)& (0+255),b
 29697                           
 29698                           ; BSR set to: 2
 29699  018278  5104               	movf	___fldiv@a& (0+255),w,b
 29700  01827A  1105               	iorwf	(___fldiv@a+1)& (0+255),w,b
 29701  01827C  1106               	iorwf	(___fldiv@a+2)& (0+255),w,b
 29702  01827E  1107               	iorwf	(___fldiv@a+3)& (0+255),w,b
 29703  018280  A4D8               	btfss	status,2,c
 29704  018282  D017               	goto	l18672
 29705                           
 29706                           ; BSR set to: 2
 29707  018284  0E00               	movlw	0
 29708  018286  6F00               	movwf	___fldiv@b& (0+255),b
 29709  018288  0E00               	movlw	0
 29710  01828A  6F01               	movwf	(___fldiv@b+1)& (0+255),b
 29711  01828C  0E00               	movlw	0
 29712  01828E  6F02               	movwf	(___fldiv@b+2)& (0+255),b
 29713  018290  0E00               	movlw	0
 29714  018292  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 29715                           
 29716                           ; BSR set to: 2
 29717  018294  0E80               	movlw	128
 29718  018296  1302               	iorwf	(___fldiv@b+2)& (0+255),f,b
 29719  018298  0E7F               	movlw	127
 29720  01829A  1303               	iorwf	(___fldiv@b+3)& (0+255),f,b
 29721  01829C                     l18666:
 29722                           
 29723                           ; BSR set to: 2
 29724  01829C  5110               	movf	___fldiv@sign& (0+255),w,b
 29725  01829E  1303               	iorwf	(___fldiv@b+3)& (0+255),f,b
 29726                           
 29727                           ; BSR set to: 2
 29728  0182A0  C200  F200         	movff	___fldiv@b,?___fldiv
 29729  0182A4  C201  F201         	movff	___fldiv@b+1,?___fldiv+1
 29730  0182A8  C202  F202         	movff	___fldiv@b+2,?___fldiv+2
 29731  0182AC  C203  F203         	movff	___fldiv@b+3,?___fldiv+3
 29732  0182B0  0012               	return	
 29733  0182B2                     l18672:
 29734                           
 29735                           ; BSR set to: 2
 29736  0182B2  5117               	movf	___fldiv@bexp& (0+255),w,b
 29737  0182B4  A4D8               	btfss	status,2,c
 29738  0182B6  D009               	goto	l18680
 29739                           
 29740                           ; BSR set to: 2
 29741                           
 29742                           ; BSR set to: 2
 29743  0182B8  0E00               	movlw	0
 29744  0182BA  6F00               	movwf	?___fldiv& (0+255),b
 29745  0182BC  0E00               	movlw	0
 29746  0182BE  6F01               	movwf	(?___fldiv+1)& (0+255),b
 29747  0182C0  0E00               	movlw	0
 29748  0182C2  6F02               	movwf	(?___fldiv+2)& (0+255),b
 29749  0182C4  0E00               	movlw	0
 29750  0182C6  6F03               	movwf	(?___fldiv+3)& (0+255),b
 29751  0182C8  0012               	return	
 29752  0182CA                     l18680:
 29753                           
 29754                           ; BSR set to: 2
 29755  0182CA  5118               	movf	___fldiv@aexp& (0+255),w,b
 29756  0182CC  C217  F208         	movff	___fldiv@bexp,??___fldiv
 29757  0182D0  6B09               	clrf	(??___fldiv+1)& (0+255),b
 29758  0182D2  5F08               	subwf	??___fldiv& (0+255),f,b
 29759  0182D4  0E00               	movlw	0
 29760  0182D6  5B09               	subwfb	(??___fldiv+1)& (0+255),f,b
 29761  0182D8  0E7F               	movlw	127
 29762  0182DA  2508               	addwf	??___fldiv& (0+255),w,b
 29763  0182DC  6F11               	movwf	___fldiv@new_exp& (0+255),b
 29764  0182DE  0E00               	movlw	0
 29765  0182E0  2109               	addwfc	(??___fldiv+1)& (0+255),w,b
 29766  0182E2  6F12               	movwf	(___fldiv@new_exp+1)& (0+255),b
 29767                           
 29768                           ; BSR set to: 2
 29769  0182E4  C200  F20C         	movff	___fldiv@b,___fldiv@rem
 29770  0182E8  C201  F20D         	movff	___fldiv@b+1,___fldiv@rem+1
 29771  0182EC  C202  F20E         	movff	___fldiv@b+2,___fldiv@rem+2
 29772  0182F0  C203  F20F         	movff	___fldiv@b+3,___fldiv@rem+3
 29773                           
 29774                           ; BSR set to: 2
 29775  0182F4  0E00               	movlw	0
 29776  0182F6  6F00               	movwf	___fldiv@b& (0+255),b
 29777  0182F8  0E00               	movlw	0
 29778  0182FA  6F01               	movwf	(___fldiv@b+1)& (0+255),b
 29779  0182FC  0E00               	movlw	0
 29780  0182FE  6F02               	movwf	(___fldiv@b+2)& (0+255),b
 29781  018300  0E00               	movlw	0
 29782  018302  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 29783                           
 29784                           ; BSR set to: 2
 29785  018304  0E00               	movlw	0
 29786  018306  6F13               	movwf	___fldiv@grs& (0+255),b
 29787  018308  0E00               	movlw	0
 29788  01830A  6F14               	movwf	(___fldiv@grs+1)& (0+255),b
 29789  01830C  0E00               	movlw	0
 29790  01830E  6F15               	movwf	(___fldiv@grs+2)& (0+255),b
 29791  018310  0E00               	movlw	0
 29792  018312  6F16               	movwf	(___fldiv@grs+3)& (0+255),b
 29793                           
 29794                           ; BSR set to: 2
 29795  018314  0E00               	movlw	0
 29796  018316  6F18               	movwf	___fldiv@aexp& (0+255),b
 29797  018318  D028               	goto	l3281
 29798  01831A                     l18690:
 29799                           
 29800                           ; BSR set to: 2
 29801  01831A  5118               	movf	___fldiv@aexp& (0+255),w,b
 29802  01831C  B4D8               	btfsc	status,2,c
 29803  01831E  D011               	goto	l18698
 29804                           
 29805                           ; BSR set to: 2
 29806  018320  90D8               	bcf	status,0,c
 29807  018322  370C               	rlcf	___fldiv@rem& (0+255),f,b
 29808  018324  370D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 29809  018326  370E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 29810  018328  370F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 29811  01832A  90D8               	bcf	status,0,c
 29812  01832C  3700               	rlcf	___fldiv@b& (0+255),f,b
 29813  01832E  3701               	rlcf	(___fldiv@b+1)& (0+255),f,b
 29814  018330  3702               	rlcf	(___fldiv@b+2)& (0+255),f,b
 29815  018332  3703               	rlcf	(___fldiv@b+3)& (0+255),f,b
 29816                           
 29817                           ; BSR set to: 2
 29818  018334  BF16               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 29819                           
 29820                           ; BSR set to: 2
 29821  018336  8100               	bsf	___fldiv@b& (0+255),0,b
 29822                           
 29823                           ; BSR set to: 2
 29824  018338  90D8               	bcf	status,0,c
 29825  01833A  3713               	rlcf	___fldiv@grs& (0+255),f,b
 29826  01833C  3714               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 29827  01833E  3715               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 29828  018340  3716               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 29829  018342                     l18698:
 29830                           
 29831                           ; BSR set to: 2
 29832  018342  5104               	movf	___fldiv@a& (0+255),w,b
 29833  018344  5D0C               	subwf	___fldiv@rem& (0+255),w,b
 29834  018346  5105               	movf	(___fldiv@a+1)& (0+255),w,b
 29835  018348  590D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 29836  01834A  5106               	movf	(___fldiv@a+2)& (0+255),w,b
 29837  01834C  590E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 29838  01834E  5107               	movf	(___fldiv@a+3)& (0+255),w,b
 29839  018350  590F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 29840  018352  A0D8               	btfss	status,0,c
 29841  018354  D009               	goto	l18704
 29842                           
 29843                           ; BSR set to: 2
 29844  018356  8D16               	bsf	(___fldiv@grs+3)& (0+255),6,b
 29845                           
 29846                           ; BSR set to: 2
 29847  018358  5104               	movf	___fldiv@a& (0+255),w,b
 29848  01835A  5F0C               	subwf	___fldiv@rem& (0+255),f,b
 29849  01835C  5105               	movf	(___fldiv@a+1)& (0+255),w,b
 29850  01835E  5B0D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 29851  018360  5106               	movf	(___fldiv@a+2)& (0+255),w,b
 29852  018362  5B0E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 29853  018364  5107               	movf	(___fldiv@a+3)& (0+255),w,b
 29854  018366  5B0F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 29855  018368                     l18704:
 29856                           
 29857                           ; BSR set to: 2
 29858  018368  2B18               	incf	___fldiv@aexp& (0+255),f,b
 29859  01836A                     l3281:
 29860                           
 29861                           ; BSR set to: 2
 29862  01836A  0E19               	movlw	25
 29863  01836C  6518               	cpfsgt	___fldiv@aexp& (0+255),b
 29864  01836E  D7D5               	goto	l18690
 29865                           
 29866                           ; BSR set to: 2
 29867  018370  510C               	movf	___fldiv@rem& (0+255),w,b
 29868  018372  110D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 29869  018374  110E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 29870  018376  110F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 29871  018378  B4D8               	btfsc	status,2,c
 29872  01837A  D011               	goto	l18716
 29873                           
 29874                           ; BSR set to: 2
 29875  01837C  8113               	bsf	___fldiv@grs& (0+255),0,b
 29876  01837E  D00F               	goto	l18716
 29877  018380                     l18710:
 29878                           
 29879                           ; BSR set to: 2
 29880  018380  90D8               	bcf	status,0,c
 29881  018382  3700               	rlcf	___fldiv@b& (0+255),f,b
 29882  018384  3701               	rlcf	(___fldiv@b+1)& (0+255),f,b
 29883  018386  3702               	rlcf	(___fldiv@b+2)& (0+255),f,b
 29884  018388  3703               	rlcf	(___fldiv@b+3)& (0+255),f,b
 29885                           
 29886                           ; BSR set to: 2
 29887  01838A  BF16               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 29888                           
 29889                           ; BSR set to: 2
 29890  01838C  8100               	bsf	___fldiv@b& (0+255),0,b
 29891                           
 29892                           ; BSR set to: 2
 29893  01838E  90D8               	bcf	status,0,c
 29894  018390  3713               	rlcf	___fldiv@grs& (0+255),f,b
 29895  018392  3714               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 29896  018394  3715               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 29897  018396  3716               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 29898  018398  0711               	decf	___fldiv@new_exp& (0+255),f,b
 29899  01839A  A0D8               	btfss	status,0,c
 29900  01839C  0712               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 29901  01839E                     l18716:
 29902                           
 29903                           ; BSR set to: 2
 29904  01839E  AF02               	btfss	(___fldiv@b+2)& (0+255),7,b
 29905  0183A0  D7EF               	goto	l18710
 29906                           
 29907                           ; BSR set to: 2
 29908  0183A2  0E00               	movlw	0
 29909  0183A4  6F18               	movwf	___fldiv@aexp& (0+255),b
 29910                           
 29911                           ; BSR set to: 2
 29912  0183A6  AF16               	btfss	(___fldiv@grs+3)& (0+255),7,b
 29913  0183A8  D017               	goto	l3292
 29914                           
 29915                           ; BSR set to: 2
 29916  0183AA  0EFF               	movlw	255
 29917  0183AC  1513               	andwf	___fldiv@grs& (0+255),w,b
 29918  0183AE  6F08               	movwf	??___fldiv& (0+255),b
 29919  0183B0  0EFF               	movlw	255
 29920  0183B2  1514               	andwf	(___fldiv@grs+1)& (0+255),w,b
 29921  0183B4  6F09               	movwf	(??___fldiv+1)& (0+255),b
 29922  0183B6  0EFF               	movlw	255
 29923  0183B8  1515               	andwf	(___fldiv@grs+2)& (0+255),w,b
 29924  0183BA  6F0A               	movwf	(??___fldiv+2)& (0+255),b
 29925  0183BC  0E7F               	movlw	127
 29926  0183BE  1516               	andwf	(___fldiv@grs+3)& (0+255),w,b
 29927  0183C0  6F0B               	movwf	(??___fldiv+3)& (0+255),b
 29928  0183C2  5108               	movf	??___fldiv& (0+255),w,b
 29929  0183C4  1109               	iorwf	(??___fldiv+1)& (0+255),w,b
 29930  0183C6  110A               	iorwf	(??___fldiv+2)& (0+255),w,b
 29931  0183C8  110B               	iorwf	(??___fldiv+3)& (0+255),w,b
 29932  0183CA  B4D8               	btfsc	status,2,c
 29933  0183CC  D003               	goto	l3293
 29934  0183CE                     u23570:
 29935                           
 29936                           ; BSR set to: 2
 29937  0183CE  0E01               	movlw	1
 29938  0183D0  6F18               	movwf	___fldiv@aexp& (0+255),b
 29939  0183D2  D002               	goto	l3292
 29940  0183D4                     l3293:
 29941                           
 29942                           ; BSR set to: 2
 29943  0183D4  B100               	btfsc	___fldiv@b& (0+255),0,b
 29944  0183D6  D7FB               	goto	u23570
 29945  0183D8                     l3292:
 29946                           
 29947                           ; BSR set to: 2
 29948  0183D8  5118               	movf	___fldiv@aexp& (0+255),w,b
 29949  0183DA  B4D8               	btfsc	status,2,c
 29950  0183DC  D01F               	goto	l18736
 29951                           
 29952                           ; BSR set to: 2
 29953  0183DE  0E01               	movlw	1
 29954  0183E0  2700               	addwf	___fldiv@b& (0+255),f,b
 29955  0183E2  0E00               	movlw	0
 29956  0183E4  2301               	addwfc	(___fldiv@b+1)& (0+255),f,b
 29957  0183E6  2302               	addwfc	(___fldiv@b+2)& (0+255),f,b
 29958  0183E8  2303               	addwfc	(___fldiv@b+3)& (0+255),f,b
 29959                           
 29960                           ; BSR set to: 2
 29961  0183EA  A103               	btfss	(___fldiv@b+3)& (0+255),0,b
 29962  0183EC  D017               	goto	l18736
 29963                           
 29964                           ; BSR set to: 2
 29965  0183EE  C200  F208         	movff	___fldiv@b,??___fldiv
 29966  0183F2  C201  F209         	movff	___fldiv@b+1,??___fldiv+1
 29967  0183F6  C202  F20A         	movff	___fldiv@b+2,??___fldiv+2
 29968  0183FA  C203  F20B         	movff	___fldiv@b+3,??___fldiv+3
 29969  0183FE  350B               	rlcf	(??___fldiv+3)& (0+255),w,b
 29970  018400  330B               	rrcf	(??___fldiv+3)& (0+255),f,b
 29971  018402  330A               	rrcf	(??___fldiv+2)& (0+255),f,b
 29972  018404  3309               	rrcf	(??___fldiv+1)& (0+255),f,b
 29973  018406  3308               	rrcf	??___fldiv& (0+255),f,b
 29974  018408  C208  F200         	movff	??___fldiv,___fldiv@b
 29975  01840C  C209  F201         	movff	??___fldiv+1,___fldiv@b+1
 29976  018410  C20A  F202         	movff	??___fldiv+2,___fldiv@b+2
 29977  018414  C20B  F203         	movff	??___fldiv+3,___fldiv@b+3
 29978                           
 29979                           ; BSR set to: 2
 29980  018418  4B11               	infsnz	___fldiv@new_exp& (0+255),f,b
 29981  01841A  2B12               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 29982  01841C                     l18736:
 29983                           
 29984                           ; BSR set to: 2
 29985  01841C  BF12               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 29986  01841E  D010               	goto	l18740
 29987  018420  5112               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 29988  018422  E103               	bnz	u23610
 29989  018424  2911               	incf	___fldiv@new_exp& (0+255),w,b
 29990  018426  A0D8               	btfss	status,0,c
 29991  018428  D00B               	goto	l18740
 29992  01842A                     u23610:
 29993                           
 29994                           ; BSR set to: 2
 29995  01842A  0E00               	movlw	0
 29996  01842C  6F12               	movwf	(___fldiv@new_exp+1)& (0+255),b
 29997  01842E  6911               	setf	___fldiv@new_exp& (0+255),b
 29998  018430  0E00               	movlw	0
 29999  018432  6F00               	movwf	___fldiv@b& (0+255),b
 30000  018434  0E00               	movlw	0
 30001  018436  6F01               	movwf	(___fldiv@b+1)& (0+255),b
 30002  018438  0E00               	movlw	0
 30003  01843A  6F02               	movwf	(___fldiv@b+2)& (0+255),b
 30004  01843C  0E00               	movlw	0
 30005  01843E  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 30006  018440                     l18740:
 30007                           
 30008                           ; BSR set to: 2
 30009  018440  BF12               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 30010  018442  D005               	goto	u23620
 30011  018444  5112               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 30012  018446  E111               	bnz	l18744
 30013  018448  0511               	decf	___fldiv@new_exp& (0+255),w,b
 30014  01844A  B0D8               	btfsc	status,0,c
 30015  01844C  D00E               	goto	l18744
 30016  01844E                     u23620:
 30017                           
 30018                           ; BSR set to: 2
 30019  01844E  0E00               	movlw	0
 30020  018450  6F12               	movwf	(___fldiv@new_exp+1)& (0+255),b
 30021  018452  0E00               	movlw	0
 30022  018454  6F11               	movwf	___fldiv@new_exp& (0+255),b
 30023  018456  0E00               	movlw	0
 30024  018458  6F00               	movwf	___fldiv@b& (0+255),b
 30025  01845A  0E00               	movlw	0
 30026  01845C  6F01               	movwf	(___fldiv@b+1)& (0+255),b
 30027  01845E  0E00               	movlw	0
 30028  018460  6F02               	movwf	(___fldiv@b+2)& (0+255),b
 30029  018462  0E00               	movlw	0
 30030  018464  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 30031  018466  0E00               	movlw	0
 30032  018468  6F10               	movwf	___fldiv@sign& (0+255),b
 30033  01846A                     l18744:
 30034                           
 30035                           ; BSR set to: 2
 30036  01846A  C211  F217         	movff	___fldiv@new_exp,___fldiv@bexp
 30037                           
 30038                           ; BSR set to: 2
 30039  01846E  A117               	btfss	___fldiv@bexp& (0+255),0,b
 30040  018470  D002               	goto	l18750
 30041                           
 30042                           ; BSR set to: 2
 30043  018472  8F02               	bsf	(___fldiv@b+2)& (0+255),7,b
 30044  018474  D001               	goto	l18752
 30045  018476                     l18750:
 30046                           
 30047                           ; BSR set to: 2
 30048  018476  9F02               	bcf	(___fldiv@b+2)& (0+255),7,b
 30049  018478                     l18752:
 30050                           
 30051                           ; BSR set to: 2
 30052  018478  90D8               	bcf	status,0,c
 30053  01847A  3117               	rrcf	___fldiv@bexp& (0+255),w,b
 30054  01847C  6F03               	movwf	(___fldiv@b+3)& (0+255),b
 30055  01847E  D70E               	goto	l18666
 30056  018480                     __end_of___fldiv:
 30057                           	opt callstack 0
 30058                           
 30059 ;; *************** function _OLED_UpdateFromRAMBuffer *****************
 30060 ;; Defined at:
 30061 ;;		line 294 in file "oled.c"
 30062 ;; Parameters:    Size  Location     Type
 30063 ;;		None
 30064 ;; Auto vars:     Size  Location     Type
 30065 ;;  char_index      1   38[BANK2 ] unsigned char 
 30066 ;;  char_index      1   37[BANK2 ] unsigned char 
 30067 ;;  char_index      1   36[BANK2 ] unsigned char 
 30068 ;;  char_index      1   35[BANK2 ] unsigned char 
 30069 ;; Return value:  Size  Location     Type
 30070 ;;                  1    wreg      void 
 30071 ;; Registers used:
 30072 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30073 ;; Tracked objects:
 30074 ;;		On entry : 0/0
 30075 ;;		On exit  : 0/0
 30076 ;;		Unchanged: 0/0
 30077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30079 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30081 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30082 ;;Total ram usage:        4 bytes
 30083 ;; Hardware stack levels used:    1
 30084 ;; Hardware stack levels required when called:   16
 30085 ;; This function calls:
 30086 ;;		_OLED_WriteString
 30087 ;;		_OLED_YX
 30088 ;;		_strlen
 30089 ;; This function is called by:
 30090 ;;		_OLED_updateHandler
 30091 ;; This function uses a non-reentrant model
 30092 ;;
 30093                           
 30094                           	psect	text102
 30095  019CD8                     __ptext102:
 30096                           	opt callstack 0
 30097  019CD8                     _OLED_UpdateFromRAMBuffer:
 30098                           	opt callstack 13
 30099                           
 30100                           ;oled.c: 298: for (uint8_t char_index = strlen(OLED_RAM_Buffer.line0); char_index < size
      +                          of(OLED_RAM_Buffer.line0) - 1; char_index++) {
 30101                           
 30102                           ; BSR set to: 2
 30103                           ;incstack = 0
 30104  019CD8  0E00               	movlw	low _OLED_RAM_Buffer
 30105  019CDA  0102               	movlb	2	; () banked
 30106  019CDC  6F00               	movwf	strlen@s& (0+255),b
 30107  019CDE  0E03               	movlw	high _OLED_RAM_Buffer
 30108  019CE0  6F01               	movwf	(strlen@s+1)& (0+255),b
 30109  019CE2  EC98  F0E0         	call	_strlen	;wreg free
 30110  019CE6  0102               	movlb	2	; () banked
 30111  019CE8  5100               	movf	?_strlen& (0+255),w,b
 30112  019CEA  6F23               	movwf	OLED_UpdateFromRAMBuffer@char_index& (0+255),b
 30113  019CEC                     l21224:
 30114                           
 30115                           ; BSR set to: 2
 30116  019CEC  0E0F               	movlw	15
 30117  019CEE  6523               	cpfsgt	OLED_UpdateFromRAMBuffer@char_index& (0+255),b
 30118  019CF0  D001               	goto	l21228
 30119  019CF2  D00A               	goto	l21234
 30120  019CF4                     l21228:
 30121                           
 30122                           ; BSR set to: 2
 30123                           ;oled.c: 299: OLED_RAM_Buffer.line0[char_index] = ' ';
 30124  019CF4  0E00               	movlw	low _OLED_RAM_Buffer
 30125  019CF6  2523               	addwf	OLED_UpdateFromRAMBuffer@char_index& (0+255),w,b
 30126  019CF8  6ED9               	movwf	fsr2l,c
 30127  019CFA  6ADA               	clrf	fsr2h,c
 30128  019CFC  0E03               	movlw	high _OLED_RAM_Buffer
 30129  019CFE  22DA               	addwfc	fsr2h,f,c
 30130  019D00  0E20               	movlw	32
 30131  019D02  6EDF               	movwf	indf2,c
 30132                           
 30133                           ; BSR set to: 2
 30134  019D04  2B23               	incf	OLED_UpdateFromRAMBuffer@char_index& (0+255),f,b
 30135  019D06  D7F2               	goto	l21224
 30136  019D08                     l21234:
 30137                           
 30138                           ; BSR set to: 2
 30139                           ;oled.c: 300: };oled.c: 301: for (uint8_t char_index = strlen(OLED_RAM_Buffer.line1); ch
      +                          ar_index < sizeof(OLED_RAM_Buffer.line1) - 1; char_index++) {
 30140  019D08  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 30141  019D0A  6F00               	movwf	strlen@s& (0+255),b
 30142  019D0C  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 30143  019D0E  6F01               	movwf	(strlen@s+1)& (0+255),b
 30144  019D10  EC98  F0E0         	call	_strlen	;wreg free
 30145  019D14  0102               	movlb	2	; () banked
 30146  019D16  5100               	movf	?_strlen& (0+255),w,b
 30147  019D18  6F24               	movwf	OLED_UpdateFromRAMBuffer@char_index_4304& (0+255),b
 30148  019D1A                     l21236:
 30149                           
 30150                           ; BSR set to: 2
 30151  019D1A  0E0F               	movlw	15
 30152  019D1C  6524               	cpfsgt	OLED_UpdateFromRAMBuffer@char_index_4304& (0+255),b
 30153  019D1E  D001               	goto	l21240
 30154  019D20  D00A               	goto	l21246
 30155  019D22                     l21240:
 30156                           
 30157                           ; BSR set to: 2
 30158                           ;oled.c: 302: OLED_RAM_Buffer.line1[char_index] = ' ';
 30159  019D22  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 30160  019D24  2524               	addwf	OLED_UpdateFromRAMBuffer@char_index_4304& (0+255),w,b
 30161  019D26  6ED9               	movwf	fsr2l,c
 30162  019D28  6ADA               	clrf	fsr2h,c
 30163  019D2A  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 30164  019D2C  22DA               	addwfc	fsr2h,f,c
 30165  019D2E  0E20               	movlw	32
 30166  019D30  6EDF               	movwf	indf2,c
 30167                           
 30168                           ; BSR set to: 2
 30169  019D32  2B24               	incf	OLED_UpdateFromRAMBuffer@char_index_4304& (0+255),f,b
 30170  019D34  D7F2               	goto	l21236
 30171  019D36                     l21246:
 30172                           
 30173                           ; BSR set to: 2
 30174                           ;oled.c: 303: };oled.c: 304: for (uint8_t char_index = strlen(OLED_RAM_Buffer.line2); ch
      +                          ar_index < sizeof(OLED_RAM_Buffer.line2) - 1; char_index++) {
 30175  019D36  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 30176  019D38  6F00               	movwf	strlen@s& (0+255),b
 30177  019D3A  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 30178  019D3C  6F01               	movwf	(strlen@s+1)& (0+255),b
 30179  019D3E  EC98  F0E0         	call	_strlen	;wreg free
 30180  019D42  0102               	movlb	2	; () banked
 30181  019D44  5100               	movf	?_strlen& (0+255),w,b
 30182  019D46  6F25               	movwf	OLED_UpdateFromRAMBuffer@char_index_4305& (0+255),b
 30183  019D48                     l21248:
 30184                           
 30185                           ; BSR set to: 2
 30186  019D48  0E0F               	movlw	15
 30187  019D4A  6525               	cpfsgt	OLED_UpdateFromRAMBuffer@char_index_4305& (0+255),b
 30188  019D4C  D001               	goto	l21252
 30189  019D4E  D00A               	goto	l21258
 30190  019D50                     l21252:
 30191                           
 30192                           ; BSR set to: 2
 30193                           ;oled.c: 305: OLED_RAM_Buffer.line2[char_index] = ' ';
 30194  019D50  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 30195  019D52  2525               	addwf	OLED_UpdateFromRAMBuffer@char_index_4305& (0+255),w,b
 30196  019D54  6ED9               	movwf	fsr2l,c
 30197  019D56  6ADA               	clrf	fsr2h,c
 30198  019D58  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 30199  019D5A  22DA               	addwfc	fsr2h,f,c
 30200  019D5C  0E20               	movlw	32
 30201  019D5E  6EDF               	movwf	indf2,c
 30202                           
 30203                           ; BSR set to: 2
 30204  019D60  2B25               	incf	OLED_UpdateFromRAMBuffer@char_index_4305& (0+255),f,b
 30205  019D62  D7F2               	goto	l21248
 30206  019D64                     l21258:
 30207                           
 30208                           ; BSR set to: 2
 30209                           ;oled.c: 306: };oled.c: 307: for (uint8_t char_index = strlen(OLED_RAM_Buffer.line3); ch
      +                          ar_index < sizeof(OLED_RAM_Buffer.line3) - 1; char_index++) {
 30210  019D64  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 30211  019D66  6F00               	movwf	strlen@s& (0+255),b
 30212  019D68  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 30213  019D6A  6F01               	movwf	(strlen@s+1)& (0+255),b
 30214  019D6C  EC98  F0E0         	call	_strlen	;wreg free
 30215  019D70  0102               	movlb	2	; () banked
 30216  019D72  5100               	movf	?_strlen& (0+255),w,b
 30217  019D74  6F26               	movwf	OLED_UpdateFromRAMBuffer@char_index_4306& (0+255),b
 30218  019D76                     l21260:
 30219                           
 30220                           ; BSR set to: 2
 30221  019D76  0E0F               	movlw	15
 30222  019D78  6526               	cpfsgt	OLED_UpdateFromRAMBuffer@char_index_4306& (0+255),b
 30223  019D7A  D001               	goto	l21264
 30224  019D7C  D00A               	goto	l21270
 30225  019D7E                     l21264:
 30226                           
 30227                           ; BSR set to: 2
 30228                           ;oled.c: 308: OLED_RAM_Buffer.line3[char_index] = ' ';
 30229  019D7E  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 30230  019D80  2526               	addwf	OLED_UpdateFromRAMBuffer@char_index_4306& (0+255),w,b
 30231  019D82  6ED9               	movwf	fsr2l,c
 30232  019D84  6ADA               	clrf	fsr2h,c
 30233  019D86  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 30234  019D88  22DA               	addwfc	fsr2h,f,c
 30235  019D8A  0E20               	movlw	32
 30236  019D8C  6EDF               	movwf	indf2,c
 30237                           
 30238                           ; BSR set to: 2
 30239  019D8E  2B26               	incf	OLED_UpdateFromRAMBuffer@char_index_4306& (0+255),f,b
 30240  019D90  D7F2               	goto	l21260
 30241  019D92                     l21270:
 30242                           
 30243                           ; BSR set to: 2
 30244                           ;oled.c: 309: };oled.c: 311: OLED_YX(0,0);
 30245  019D92  0E00               	movlw	0
 30246  019D94  6F14               	movwf	OLED_YX@Column& (0+255),b
 30247  019D96  0E00               	movlw	0
 30248  019D98  EC01  F0DE         	call	_OLED_YX
 30249                           
 30250                           ;oled.c: 312: OLED_WriteString(OLED_RAM_Buffer.line0);
 30251  019D9C  0E00               	movlw	low _OLED_RAM_Buffer
 30252  019D9E  0102               	movlb	2	; () banked
 30253  019DA0  6F21               	movwf	OLED_WriteString@s& (0+255),b
 30254  019DA2  0E03               	movlw	high _OLED_RAM_Buffer
 30255  019DA4  6F22               	movwf	(OLED_WriteString@s+1)& (0+255),b
 30256  019DA6  EC21  F0DB         	call	_OLED_WriteString	;wreg free
 30257                           
 30258                           ;oled.c: 313: OLED_YX(1,0);
 30259  019DAA  0E00               	movlw	0
 30260  019DAC  0102               	movlb	2	; () banked
 30261  019DAE  6F14               	movwf	OLED_YX@Column& (0+255),b
 30262  019DB0  0E01               	movlw	1
 30263  019DB2  EC01  F0DE         	call	_OLED_YX
 30264                           
 30265                           ;oled.c: 314: OLED_WriteString(OLED_RAM_Buffer.line1);
 30266  019DB6  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 30267  019DB8  0102               	movlb	2	; () banked
 30268  019DBA  6F21               	movwf	OLED_WriteString@s& (0+255),b
 30269  019DBC  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 30270  019DBE  6F22               	movwf	(OLED_WriteString@s+1)& (0+255),b
 30271  019DC0  EC21  F0DB         	call	_OLED_WriteString	;wreg free
 30272                           
 30273                           ;oled.c: 315: OLED_YX(2,0);
 30274  019DC4  0E00               	movlw	0
 30275  019DC6  0102               	movlb	2	; () banked
 30276  019DC8  6F14               	movwf	OLED_YX@Column& (0+255),b
 30277  019DCA  0E02               	movlw	2
 30278  019DCC  EC01  F0DE         	call	_OLED_YX
 30279                           
 30280                           ;oled.c: 316: OLED_WriteString(OLED_RAM_Buffer.line2);
 30281  019DD0  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 30282  019DD2  0102               	movlb	2	; () banked
 30283  019DD4  6F21               	movwf	OLED_WriteString@s& (0+255),b
 30284  019DD6  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 30285  019DD8  6F22               	movwf	(OLED_WriteString@s+1)& (0+255),b
 30286  019DDA  EC21  F0DB         	call	_OLED_WriteString	;wreg free
 30287                           
 30288                           ;oled.c: 317: OLED_YX(3,0);
 30289  019DDE  0E00               	movlw	0
 30290  019DE0  0102               	movlb	2	; () banked
 30291  019DE2  6F14               	movwf	OLED_YX@Column& (0+255),b
 30292  019DE4  0E03               	movlw	3
 30293  019DE6  EC01  F0DE         	call	_OLED_YX
 30294                           
 30295                           ;oled.c: 318: OLED_WriteString(OLED_RAM_Buffer.line3);
 30296  019DEA  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 30297  019DEC  0102               	movlb	2	; () banked
 30298  019DEE  6F21               	movwf	OLED_WriteString@s& (0+255),b
 30299  019DF0  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 30300  019DF2  6F22               	movwf	(OLED_WriteString@s+1)& (0+255),b
 30301  019DF4  EC21  F0DB         	call	_OLED_WriteString	;wreg free
 30302  019DF8  0012               	return		;funcret
 30303  019DFA                     __end_of_OLED_UpdateFromRAMBuffer:
 30304                           	opt callstack 0
 30305                           
 30306 ;; *************** function _strlen *****************
 30307 ;; Defined at:
 30308 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strlen.c"
 30309 ;; Parameters:    Size  Location     Type
 30310 ;;  s               2    0[BANK2 ] PTR const unsigned char 
 30311 ;;		 -> line(64), OLED_RAM_Buffer.line3(17), OLED_RAM_Buffer.line2(17), OLED_RAM_Buffer.line1(17), 
 30312 ;;		 -> OLED_RAM_Buffer.line0(17), OLED_RAM_Buffer(68), getStringSecondsAsTime@return_string(40), 
 30313 ;; Auto vars:     Size  Location     Type
 30314 ;;  cp              2    2[BANK2 ] PTR const unsigned char 
 30315 ;;		 -> line(64), OLED_RAM_Buffer.line3(17), OLED_RAM_Buffer.line2(17), OLED_RAM_Buffer.line1(17), 
 30316 ;;		 -> OLED_RAM_Buffer.line0(17), OLED_RAM_Buffer(68), getStringSecondsAsTime@return_string(40), 
 30317 ;; Return value:  Size  Location     Type
 30318 ;;                  2    0[BANK2 ] unsigned int 
 30319 ;; Registers used:
 30320 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30321 ;; Tracked objects:
 30322 ;;		On entry : 0/0
 30323 ;;		On exit  : 0/0
 30324 ;;		Unchanged: 0/0
 30325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30326 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30327 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30329 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30330 ;;Total ram usage:        4 bytes
 30331 ;; Hardware stack levels used:    1
 30332 ;; Hardware stack levels required when called:   11
 30333 ;; This function calls:
 30334 ;;		Nothing
 30335 ;; This function is called by:
 30336 ;;		_getStringSecondsAsTime
 30337 ;;		_OLED_UpdateFromRAMBuffer
 30338 ;;		_ringBufferLUT
 30339 ;;		_terminal_ringBufferPull
 30340 ;; This function uses a non-reentrant model
 30341 ;;
 30342                           
 30343                           	psect	text103
 30344  01C130                     __ptext103:
 30345                           	opt callstack 0
 30346  01C130                     _strlen:
 30347                           	opt callstack 18
 30348                           
 30349                           ;incstack = 0
 30350  01C130  C200  F202         	movff	strlen@s,strlen@cp
 30351  01C134  C201  F203         	movff	strlen@s+1,strlen@cp+1
 30352  01C138  D003               	goto	l18558
 30353  01C13A                     l18556:
 30354  01C13A  0102               	movlb	2	; () banked
 30355  01C13C  4B02               	infsnz	strlen@cp& (0+255),f,b
 30356  01C13E  2B03               	incf	(strlen@cp+1)& (0+255),f,b
 30357  01C140                     l18558:
 30358  01C140  C202  FFD9         	movff	strlen@cp,fsr2l
 30359  01C144  C203  FFDA         	movff	strlen@cp+1,fsr2h
 30360  01C148  50DF               	movf	indf2,w,c
 30361  01C14A  A4D8               	btfss	status,2,c
 30362  01C14C  D7F6               	goto	l18556
 30363  01C14E  0102               	movlb	2	; () banked
 30364  01C150  5100               	movf	strlen@s& (0+255),w,b
 30365  01C152  5D02               	subwf	strlen@cp& (0+255),w,b
 30366  01C154  6F00               	movwf	?_strlen& (0+255),b
 30367  01C156  5101               	movf	(strlen@s+1)& (0+255),w,b
 30368  01C158  5903               	subwfb	(strlen@cp+1)& (0+255),w,b
 30369  01C15A  6F01               	movwf	(?_strlen+1)& (0+255),b
 30370                           
 30371                           ; BSR set to: 2
 30372  01C15C  0012               	return		;funcret
 30373  01C15E                     __end_of_strlen:
 30374                           	opt callstack 0
 30375                           
 30376 ;; *************** function _OLED_YX *****************
 30377 ;; Defined at:
 30378 ;;		line 204 in file "oled.c"
 30379 ;; Parameters:    Size  Location     Type
 30380 ;;  Row             1    wreg     unsigned char 
 30381 ;;  Column          1   20[BANK2 ] unsigned char 
 30382 ;; Auto vars:     Size  Location     Type
 30383 ;;  Row             1   24[BANK2 ] unsigned char 
 30384 ;; Return value:  Size  Location     Type
 30385 ;;                  1    wreg      void 
 30386 ;; Registers used:
 30387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30388 ;; Tracked objects:
 30389 ;;		On entry : 0/0
 30390 ;;		On exit  : 0/0
 30391 ;;		Unchanged: 0/0
 30392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30393 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30394 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30395 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30396 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30397 ;;Total ram usage:        5 bytes
 30398 ;; Hardware stack levels used:    1
 30399 ;; Hardware stack levels required when called:   15
 30400 ;; This function calls:
 30401 ;;		_OLED_Command
 30402 ;; This function is called by:
 30403 ;;		_OLED_UpdateFromRAMBuffer
 30404 ;; This function uses a non-reentrant model
 30405 ;;
 30406                           
 30407                           	psect	text104
 30408  01BC02                     __ptext104:
 30409                           	opt callstack 0
 30410  01BC02                     _OLED_YX:
 30411                           	opt callstack 13
 30412                           
 30413                           ; BSR set to: 2
 30414                           ;incstack = 0
 30415                           ;OLED_YX@Row stored from wreg
 30416  01BC02  0102               	movlb	2	; () banked
 30417  01BC04  6F18               	movwf	OLED_YX@Row& (0+255),b
 30418                           
 30419                           ;oled.c: 206: OLED_Command(0xB0 + Row);
 30420  01BC06  0102               	movlb	2	; () banked
 30421  01BC08  5118               	movf	OLED_YX@Row& (0+255),w,b
 30422  01BC0A  0FB0               	addlw	176
 30423  01BC0C  ECD3  F0D9         	call	_OLED_Command
 30424                           
 30425                           ;oled.c: 207: OLED_Command(0x00 + (8 * Column & 0x0F));
 30426  01BC10  0102               	movlb	2	; () banked
 30427  01BC12  5114               	movf	OLED_YX@Column& (0+255),w,b
 30428  01BC14  0D08               	mullw	8
 30429  01BC16  50F3               	movf	prodl,w,c
 30430  01BC18  0B0F               	andlw	15
 30431  01BC1A  ECD3  F0D9         	call	_OLED_Command
 30432                           
 30433                           ;oled.c: 208: OLED_Command(0x10 + ((8* Column >> 4) & 0x0F));
 30434  01BC1E  0102               	movlb	2	; () banked
 30435  01BC20  5114               	movf	OLED_YX@Column& (0+255),w,b
 30436  01BC22  0D08               	mullw	8
 30437  01BC24  CFF3 F215          	movff	prodl,??_OLED_YX
 30438  01BC28  CFF4 F216          	movff	prodh,??_OLED_YX+1
 30439  01BC2C  0E04               	movlw	4
 30440  01BC2E  6F17               	movwf	(??_OLED_YX+2)& (0+255),b
 30441  01BC30                     u25435:
 30442  01BC30  3516               	rlcf	(??_OLED_YX+1)& (0+255),w,b
 30443  01BC32  3316               	rrcf	(??_OLED_YX+1)& (0+255),f,b
 30444  01BC34  3315               	rrcf	??_OLED_YX& (0+255),f,b
 30445  01BC36  2F17               	decfsz	(??_OLED_YX+2)& (0+255),f,b
 30446  01BC38  D7FB               	goto	u25435
 30447  01BC3A  5115               	movf	??_OLED_YX& (0+255),w,b
 30448  01BC3C  0B0F               	andlw	15
 30449  01BC3E  0F10               	addlw	16
 30450  01BC40  ECD3  F0D9         	call	_OLED_Command
 30451  01BC44  0012               	return		;funcret
 30452  01BC46                     __end_of_OLED_YX:
 30453                           	opt callstack 0
 30454                           
 30455 ;; *************** function _OLED_WriteString *****************
 30456 ;; Defined at:
 30457 ;;		line 262 in file "oled.c"
 30458 ;; Parameters:    Size  Location     Type
 30459 ;;  s               2   33[BANK2 ] PTR unsigned char 
 30460 ;;		 -> ftoa@buf(17), OLED_RAM_Buffer(68), STR_61(1), STR_60(1), 
 30461 ;;		 -> OLED_WriteInteger@s(20), 
 30462 ;; Auto vars:     Size  Location     Type
 30463 ;;		None
 30464 ;; Return value:  Size  Location     Type
 30465 ;;                  1    wreg      void 
 30466 ;; Registers used:
 30467 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30468 ;; Tracked objects:
 30469 ;;		On entry : 0/0
 30470 ;;		On exit  : 0/0
 30471 ;;		Unchanged: 0/0
 30472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30473 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30476 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30477 ;;Total ram usage:        2 bytes
 30478 ;; Hardware stack levels used:    1
 30479 ;; Hardware stack levels required when called:   15
 30480 ;; This function calls:
 30481 ;;		_OLED_PutChar
 30482 ;; This function is called by:
 30483 ;;		_OLED_UpdateFromRAMBuffer
 30484 ;;		_OLED_WriteInteger
 30485 ;;		_OLED_WriteFloat
 30486 ;; This function uses a non-reentrant model
 30487 ;;
 30488                           
 30489                           	psect	text105
 30490  01B642                     __ptext105:
 30491                           	opt callstack 0
 30492  01B642                     _OLED_WriteString:
 30493                           	opt callstack 13
 30494                           
 30495                           ;oled.c: 264: while(*s) {
 30496                           
 30497                           ;incstack = 0
 30498  01B642  D016               	goto	l20076
 30499  01B644                     l20072:
 30500                           
 30501                           ;oled.c: 266: OLED_PutChar(*s++);
 30502  01B644  C221  FFF6         	movff	OLED_WriteString@s,tblptrl
 30503  01B648  C222  FFF7         	movff	OLED_WriteString@s+1,tblptrh
 30504  01B64C  0E00               	movlw	low (__mediumconst shr (0+16))
 30505  01B64E  6EF8               	movwf	tblptru,c
 30506  01B650  0E0E               	movlw	(high __ramtop+-1)
 30507  01B652  64F7               	cpfsgt	tblptrh,c
 30508  01B654  D003               	bra	u25447
 30509  01B656  0008               	tblrd		*
 30510  01B658  50F5               	movf	tablat,w,c
 30511  01B65A  D005               	bra	u25440
 30512  01B65C                     u25447:
 30513  01B65C  CFF6 FFE9          	movff	tblptrl,fsr0l
 30514  01B660  CFF7 FFEA          	movff	tblptrh,fsr0h
 30515  01B664  50EF               	movf	indf0,w,c
 30516  01B666                     u25440:
 30517  01B666  EC8D  F0D3         	call	_OLED_PutChar
 30518  01B66A  0102               	movlb	2	; () banked
 30519  01B66C  4B21               	infsnz	OLED_WriteString@s& (0+255),f,b
 30520  01B66E  2B22               	incf	(OLED_WriteString@s+1)& (0+255),f,b
 30521  01B670                     l20076:
 30522  01B670  C221  FFF6         	movff	OLED_WriteString@s,tblptrl
 30523  01B674  C222  FFF7         	movff	OLED_WriteString@s+1,tblptrh
 30524  01B678  0E00               	movlw	low (__mediumconst shr (0+16))
 30525  01B67A  6EF8               	movwf	tblptru,c
 30526  01B67C  0E0E               	movlw	(high __ramtop+-1)
 30527  01B67E  64F7               	cpfsgt	tblptrh,c
 30528  01B680  D003               	bra	u25457
 30529  01B682  0008               	tblrd		*
 30530  01B684  50F5               	movf	tablat,w,c
 30531  01B686  D005               	bra	u25450
 30532  01B688                     u25457:
 30533  01B688  CFF6 FFE9          	movff	tblptrl,fsr0l
 30534  01B68C  CFF7 FFEA          	movff	tblptrh,fsr0h
 30535  01B690  50EF               	movf	indf0,w,c
 30536  01B692                     u25450:
 30537  01B692  0900               	iorlw	0
 30538  01B694  B4D8               	btfsc	status,2,c
 30539  01B696  0012               	return	
 30540  01B698  D7D5               	goto	l20072
 30541  01B69A                     __end_of_OLED_WriteString:
 30542                           	opt callstack 0
 30543                           
 30544 ;; *************** function _OLED_Init *****************
 30545 ;; Defined at:
 30546 ;;		line 174 in file "oled.c"
 30547 ;; Parameters:    Size  Location     Type
 30548 ;;		None
 30549 ;; Auto vars:     Size  Location     Type
 30550 ;;		None
 30551 ;; Return value:  Size  Location     Type
 30552 ;;                  1    wreg      void 
 30553 ;; Registers used:
 30554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30555 ;; Tracked objects:
 30556 ;;		On entry : 0/0
 30557 ;;		On exit  : 0/0
 30558 ;;		Unchanged: 0/0
 30559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30564 ;;Total ram usage:        0 bytes
 30565 ;; Hardware stack levels used:    1
 30566 ;; Hardware stack levels required when called:   15
 30567 ;; This function calls:
 30568 ;;		_OLED_Command
 30569 ;; This function is called by:
 30570 ;;		_main
 30571 ;; This function uses a non-reentrant model
 30572 ;;
 30573                           
 30574                           	psect	text106
 30575  01AD36                     __ptext106:
 30576                           	opt callstack 0
 30577  01AD36                     _OLED_Init:
 30578                           	opt callstack 15
 30579                           
 30580                           ;oled.c: 176: OLED_Command(0xAE);
 30581                           
 30582                           ;incstack = 0
 30583  01AD36  0EAE               	movlw	174
 30584  01AD38  ECD3  F0D9         	call	_OLED_Command
 30585                           
 30586                           ;oled.c: 177: OLED_Command(0xD5);
 30587  01AD3C  0ED5               	movlw	213
 30588  01AD3E  ECD3  F0D9         	call	_OLED_Command
 30589                           
 30590                           ;oled.c: 178: OLED_Command(0x80);
 30591  01AD42  0E80               	movlw	128
 30592  01AD44  ECD3  F0D9         	call	_OLED_Command
 30593                           
 30594                           ;oled.c: 179: OLED_Command(0xA8);
 30595  01AD48  0EA8               	movlw	168
 30596  01AD4A  ECD3  F0D9         	call	_OLED_Command
 30597                           
 30598                           ;oled.c: 180: OLED_Command(0x1F);
 30599  01AD4E  0E1F               	movlw	31
 30600  01AD50  ECD3  F0D9         	call	_OLED_Command
 30601                           
 30602                           ;oled.c: 181: OLED_Command(0xD3);
 30603  01AD54  0ED3               	movlw	211
 30604  01AD56  ECD3  F0D9         	call	_OLED_Command
 30605                           
 30606                           ;oled.c: 182: OLED_Command(0x0);
 30607  01AD5A  0E00               	movlw	0
 30608  01AD5C  ECD3  F0D9         	call	_OLED_Command
 30609                           
 30610                           ;oled.c: 183: OLED_Command(0x40 | 0x0);
 30611  01AD60  0E40               	movlw	64
 30612  01AD62  ECD3  F0D9         	call	_OLED_Command
 30613                           
 30614                           ;oled.c: 184: OLED_Command(0x8D);
 30615  01AD66  0E8D               	movlw	141
 30616  01AD68  ECD3  F0D9         	call	_OLED_Command
 30617                           
 30618                           ;oled.c: 185: OLED_Command(0xAF);
 30619  01AD6C  0EAF               	movlw	175
 30620  01AD6E  ECD3  F0D9         	call	_OLED_Command
 30621                           
 30622                           ;oled.c: 186: OLED_Command(0x20);
 30623  01AD72  0E20               	movlw	32
 30624  01AD74  ECD3  F0D9         	call	_OLED_Command
 30625                           
 30626                           ;oled.c: 187: OLED_Command(0x00);
 30627  01AD78  0E00               	movlw	0
 30628  01AD7A  ECD3  F0D9         	call	_OLED_Command
 30629                           
 30630                           ;oled.c: 188: OLED_Command(0xA0 | 0x1);
 30631  01AD7E  0EA1               	movlw	161
 30632  01AD80  ECD3  F0D9         	call	_OLED_Command
 30633                           
 30634                           ;oled.c: 189: OLED_Command(0xC8);
 30635  01AD84  0EC8               	movlw	200
 30636  01AD86  ECD3  F0D9         	call	_OLED_Command
 30637                           
 30638                           ;oled.c: 190: OLED_Command(0xDA);
 30639  01AD8A  0EDA               	movlw	218
 30640  01AD8C  ECD3  F0D9         	call	_OLED_Command
 30641                           
 30642                           ;oled.c: 191: OLED_Command(0x02);
 30643  01AD90  0E02               	movlw	2
 30644  01AD92  ECD3  F0D9         	call	_OLED_Command
 30645                           
 30646                           ;oled.c: 192: OLED_Command(0x81);
 30647  01AD96  0E81               	movlw	129
 30648  01AD98  ECD3  F0D9         	call	_OLED_Command
 30649                           
 30650                           ;oled.c: 193: OLED_Command(0x8F);
 30651  01AD9C  0E8F               	movlw	143
 30652  01AD9E  ECD3  F0D9         	call	_OLED_Command
 30653                           
 30654                           ;oled.c: 194: OLED_Command(0xD9);
 30655  01ADA2  0ED9               	movlw	217
 30656  01ADA4  ECD3  F0D9         	call	_OLED_Command
 30657                           
 30658                           ;oled.c: 195: OLED_Command(0xF1);
 30659  01ADA8  0EF1               	movlw	241
 30660  01ADAA  ECD3  F0D9         	call	_OLED_Command
 30661                           
 30662                           ;oled.c: 196: OLED_Command(0xDB);
 30663  01ADAE  0EDB               	movlw	219
 30664  01ADB0  ECD3  F0D9         	call	_OLED_Command
 30665                           
 30666                           ;oled.c: 197: OLED_Command(0x40);
 30667  01ADB4  0E40               	movlw	64
 30668  01ADB6  ECD3  F0D9         	call	_OLED_Command
 30669                           
 30670                           ;oled.c: 198: OLED_Command(0xA4);
 30671  01ADBA  0EA4               	movlw	164
 30672  01ADBC  ECD3  F0D9         	call	_OLED_Command
 30673                           
 30674                           ;oled.c: 199: OLED_Command(0xA6);
 30675  01ADC0  0EA6               	movlw	166
 30676  01ADC2  ECD3  F0D9         	call	_OLED_Command
 30677                           
 30678                           ;oled.c: 200: OLED_Command(0xAF);
 30679  01ADC6  0EAF               	movlw	175
 30680  01ADC8  ECD3  F0D9         	call	_OLED_Command
 30681  01ADCC  0012               	return		;funcret
 30682  01ADCE                     __end_of_OLED_Init:
 30683                           	opt callstack 0
 30684                           
 30685 ;; *************** function _OLED_Command *****************
 30686 ;; Defined at:
 30687 ;;		line 122 in file "oled.c"
 30688 ;; Parameters:    Size  Location     Type
 30689 ;;  temp            1    wreg     unsigned char 
 30690 ;; Auto vars:     Size  Location     Type
 30691 ;;  temp            1   16[BANK2 ] unsigned char 
 30692 ;;  data_array      2   18[BANK2 ] unsigned char [2]
 30693 ;;  length          1    0        unsigned char 
 30694 ;; Return value:  Size  Location     Type
 30695 ;;                  1    wreg      void 
 30696 ;; Registers used:
 30697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30698 ;; Tracked objects:
 30699 ;;		On entry : 0/0
 30700 ;;		On exit  : 0/0
 30701 ;;		Unchanged: 0/0
 30702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30704 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30706 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30707 ;;Total ram usage:        4 bytes
 30708 ;; Hardware stack levels used:    1
 30709 ;; Hardware stack levels required when called:   14
 30710 ;; This function calls:
 30711 ;;		_I2C2_MasterWrite
 30712 ;; This function is called by:
 30713 ;;		_OLED_Init
 30714 ;;		_OLED_YX
 30715 ;; This function uses a non-reentrant model
 30716 ;;
 30717                           
 30718                           	psect	text107
 30719  01B3A6                     __ptext107:
 30720                           	opt callstack 0
 30721  01B3A6                     _OLED_Command:
 30722                           	opt callstack 13
 30723                           
 30724                           ;incstack = 0
 30725                           ;OLED_Command@temp stored from wreg
 30726  01B3A6  0102               	movlb	2	; () banked
 30727  01B3A8  6F10               	movwf	OLED_Command@temp& (0+255),b
 30728                           
 30729                           ;oled.c: 124: uint8_t length;;oled.c: 126: uint8_t data_array[2];;oled.c: 127: data_arra
      +                          y[0] = 0x00;
 30730  01B3AA  0E00               	movlw	0
 30731  01B3AC  0102               	movlb	2	; () banked
 30732  01B3AE  6F12               	movwf	OLED_Command@data_array& (0+255),b
 30733                           
 30734                           ; BSR set to: 2
 30735                           ;oled.c: 128: data_array[1] = temp;
 30736  01B3B0  C210  F213         	movff	OLED_Command@temp,OLED_Command@data_array+1
 30737                           
 30738                           ; BSR set to: 2
 30739                           ;oled.c: 133: I2C2_MasterWrite(data_array, length, (uint16_t) 0x3C, &I2C_STATUS);
 30740                           
 30741                           ; BSR set to: 2
 30742  01B3B4  0E12               	movlw	low OLED_Command@data_array
 30743  01B3B6  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 30744  01B3B8  0E02               	movlw	high OLED_Command@data_array
 30745  01B3BA  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 30746  01B3BC  0E02               	movlw	2
 30747  01B3BE  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 30748  01B3C0  0E00               	movlw	0
 30749  01B3C2  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 30750  01B3C4  0E3C               	movlw	60
 30751  01B3C6  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 30752  01B3C8  0EA8               	movlw	low _I2C_STATUS
 30753  01B3CA  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 30754  01B3CC  0E01               	movlw	high _I2C_STATUS
 30755  01B3CE  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 30756  01B3D0  EC96  F0DC         	call	_I2C2_MasterWrite	;wreg free
 30757  01B3D4                     l19440:
 30758  01B3D4  0E02               	movlw	2
 30759  01B3D6  0101               	movlb	1	; () banked
 30760  01B3D8  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 30761  01B3DA  B4D8               	btfsc	status,2,c
 30762  01B3DC  D7FB               	goto	l19440
 30763                           
 30764                           ; BSR set to: 1
 30765                           ;oled.c: 137: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;oled.c: 138: I2C_STATUS == I2C2_ST
      +                          UCK_START ||;oled.c: 139: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;oled.c: 140: I2C_
      +                          STATUS == I2C2_DATA_NO_ACK ||;oled.c: 141: I2C_STATUS == I2C2_LOST_STATE ) {
 30766  01B3DE  05A8               	decf	_I2C_STATUS& (0+255),w,b
 30767  01B3E0  B4D8               	btfsc	status,2,c
 30768  01B3E2  D010               	goto	u24600
 30769                           
 30770                           ; BSR set to: 1
 30771  01B3E4  0E03               	movlw	3
 30772  01B3E6  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 30773  01B3E8  B4D8               	btfsc	status,2,c
 30774  01B3EA  D00C               	goto	u24600
 30775                           
 30776                           ; BSR set to: 1
 30777  01B3EC  0E04               	movlw	4
 30778  01B3EE  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 30779  01B3F0  B4D8               	btfsc	status,2,c
 30780  01B3F2  D008               	goto	u24600
 30781                           
 30782                           ; BSR set to: 1
 30783  01B3F4  0E05               	movlw	5
 30784  01B3F6  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 30785  01B3F8  B4D8               	btfsc	status,2,c
 30786  01B3FA  D004               	goto	u24600
 30787                           
 30788                           ; BSR set to: 1
 30789  01B3FC  0E06               	movlw	6
 30790  01B3FE  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 30791  01B400  A4D8               	btfss	status,2,c
 30792  01B402  0012               	return	
 30793  01B404                     u24600:
 30794                           
 30795                           ; BSR set to: 1
 30796                           ;oled.c: 142: error_handler.I2C_OLED_error_flag = 1;
 30797  01B404  0E01               	movlw	1
 30798  01B406  0100               	movlb	0	; () banked
 30799  01B408  6FBC               	movwf	(_error_handler+3)& (0+255),b
 30800  01B40A  0012               	return		;funcret
 30801  01B40C                     __end_of_OLED_Command:
 30802                           	opt callstack 0
 30803                           
 30804 ;; *************** function _OLED_Clear *****************
 30805 ;; Defined at:
 30806 ;;		line 247 in file "oled.c"
 30807 ;; Parameters:    Size  Location     Type
 30808 ;;		None
 30809 ;; Auto vars:     Size  Location     Type
 30810 ;;  col             2   35[BANK2 ] unsigned int 
 30811 ;;  row             2   33[BANK2 ] unsigned int 
 30812 ;; Return value:  Size  Location     Type
 30813 ;;                  1    wreg      void 
 30814 ;; Registers used:
 30815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30816 ;; Tracked objects:
 30817 ;;		On entry : 0/0
 30818 ;;		On exit  : 0/0
 30819 ;;		Unchanged: 0/0
 30820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30822 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30824 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30825 ;;Total ram usage:        4 bytes
 30826 ;; Hardware stack levels used:    1
 30827 ;; Hardware stack levels required when called:   15
 30828 ;; This function calls:
 30829 ;;		_OLED_PutChar
 30830 ;; This function is called by:
 30831 ;;		_main
 30832 ;; This function uses a non-reentrant model
 30833 ;;
 30834                           
 30835                           	psect	text108
 30836  01BDCA                     __ptext108:
 30837                           	opt callstack 0
 30838  01BDCA                     _OLED_Clear:
 30839                           	opt callstack 15
 30840                           
 30841                           ;oled.c: 249: for(uint16_t row = 0; row < 8; row++) {
 30842                           
 30843                           ;incstack = 0
 30844  01BDCA  0E00               	movlw	0
 30845  01BDCC  0102               	movlb	2	; () banked
 30846  01BDCE  6F22               	movwf	(OLED_Clear@row+1)& (0+255),b
 30847  01BDD0  0E00               	movlw	0
 30848  01BDD2  6F21               	movwf	OLED_Clear@row& (0+255),b
 30849  01BDD4                     l21678:
 30850                           
 30851                           ; BSR set to: 2
 30852                           ;oled.c: 251: for(uint16_t col = 0; col < 16; col++) {
 30853  01BDD4  0E00               	movlw	0
 30854  01BDD6  6F24               	movwf	(OLED_Clear@col+1)& (0+255),b
 30855  01BDD8  0E00               	movlw	0
 30856  01BDDA  6F23               	movwf	OLED_Clear@col& (0+255),b
 30857  01BDDC                     l21684:
 30858                           
 30859                           ; BSR set to: 2
 30860                           ;oled.c: 253: OLED_PutChar('\0');
 30861  01BDDC  0E00               	movlw	0
 30862  01BDDE  EC8D  F0D3         	call	_OLED_PutChar
 30863  01BDE2  0102               	movlb	2	; () banked
 30864  01BDE4  4B23               	infsnz	OLED_Clear@col& (0+255),f,b
 30865  01BDE6  2B24               	incf	(OLED_Clear@col+1)& (0+255),f,b
 30866                           
 30867                           ; BSR set to: 2
 30868  01BDE8  5124               	movf	(OLED_Clear@col+1)& (0+255),w,b
 30869  01BDEA  E104               	bnz	u27760
 30870  01BDEC  0E10               	movlw	16
 30871  01BDEE  5D23               	subwf	OLED_Clear@col& (0+255),w,b
 30872  01BDF0  A0D8               	btfss	status,0,c
 30873  01BDF2  D7F4               	goto	l21684
 30874  01BDF4                     u27760:
 30875                           
 30876                           ; BSR set to: 2
 30877  01BDF4  4B21               	infsnz	OLED_Clear@row& (0+255),f,b
 30878  01BDF6  2B22               	incf	(OLED_Clear@row+1)& (0+255),f,b
 30879                           
 30880                           ; BSR set to: 2
 30881  01BDF8  5122               	movf	(OLED_Clear@row+1)& (0+255),w,b
 30882  01BDFA  E105               	bnz	u27770
 30883  01BDFC  0E08               	movlw	8
 30884  01BDFE  5D21               	subwf	OLED_Clear@row& (0+255),w,b
 30885  01BE00  B0D8               	btfsc	status,0,c
 30886  01BE02  0012               	return	
 30887  01BE04  D7E7               	goto	l21678
 30888  01BE06                     u27770:
 30889                           
 30890                           ; BSR set to: 2
 30891  01BE06  0012               	return		;funcret
 30892  01BE08                     __end_of_OLED_Clear:
 30893                           	opt callstack 0
 30894                           
 30895 ;; *************** function _OLED_PutChar *****************
 30896 ;; Defined at:
 30897 ;;		line 212 in file "oled.c"
 30898 ;; Parameters:    Size  Location     Type
 30899 ;;  ch              1    wreg     unsigned char 
 30900 ;; Auto vars:     Size  Location     Type
 30901 ;;  ch              1   32[BANK2 ] unsigned char 
 30902 ;;  data_array      9   20[BANK2 ] unsigned char [9]
 30903 ;;  input_base      2   29[BANK2 ] PTR const unsigned char 
 30904 ;;		 -> OledFont(768), 
 30905 ;;  length          1    0        unsigned char 
 30906 ;; Return value:  Size  Location     Type
 30907 ;;                  1    wreg      void 
 30908 ;; Registers used:
 30909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30910 ;; Tracked objects:
 30911 ;;		On entry : 0/0
 30912 ;;		On exit  : 0/0
 30913 ;;		Unchanged: 0/0
 30914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30916 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30917 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30918 ;;      Totals:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30919 ;;Total ram usage:       17 bytes
 30920 ;; Hardware stack levels used:    1
 30921 ;; Hardware stack levels required when called:   14
 30922 ;; This function calls:
 30923 ;;		_I2C2_MasterWrite
 30924 ;;		_memmove
 30925 ;; This function is called by:
 30926 ;;		_OLED_Clear
 30927 ;;		_OLED_WriteString
 30928 ;; This function uses a non-reentrant model
 30929 ;;
 30930                           
 30931                           	psect	text109
 30932  01A71A                     __ptext109:
 30933                           	opt callstack 0
 30934  01A71A                     _OLED_PutChar:
 30935                           	opt callstack 13
 30936                           
 30937                           ; BSR set to: 2
 30938                           ;incstack = 0
 30939                           ;OLED_PutChar@ch stored from wreg
 30940  01A71A  0102               	movlb	2	; () banked
 30941  01A71C  6F20               	movwf	OLED_PutChar@ch& (0+255),b
 30942                           
 30943                           ;oled.c: 214: if((ch < 32) || (ch > 127)) {
 30944  01A71E  0E1F               	movlw	31
 30945  01A720  0102               	movlb	2	; () banked
 30946  01A722  6520               	cpfsgt	OLED_PutChar@ch& (0+255),b
 30947  01A724  D003               	goto	u24620
 30948                           
 30949                           ; BSR set to: 2
 30950  01A726  0E7F               	movlw	127
 30951  01A728  6520               	cpfsgt	OLED_PutChar@ch& (0+255),b
 30952  01A72A  D002               	goto	l1972
 30953  01A72C                     u24620:
 30954                           
 30955                           ; BSR set to: 2
 30956                           ;oled.c: 216: ch = ' ';
 30957  01A72C  0E20               	movlw	32
 30958  01A72E  6F20               	movwf	OLED_PutChar@ch& (0+255),b
 30959  01A730                     l1972:
 30960                           
 30961                           ; BSR set to: 2
 30962                           ;oled.c: 218: };oled.c: 220: uint8_t length;;oled.c: 222: uint8_t data_array[9];;oled.c:
      +                           224: data_array[0] = 0x40;
 30963  01A730  0E40               	movlw	64
 30964  01A732  6F14               	movwf	OLED_PutChar@data_array& (0+255),b
 30965                           
 30966                           ; BSR set to: 2
 30967                           ;oled.c: 226: const uint8_t *input_base = &OledFont[ch - 32][0];
 30968  01A734  0E00               	movlw	0
 30969  01A736  6F10               	movwf	??_OLED_PutChar& (0+255),b
 30970  01A738  0EFF               	movlw	255
 30971  01A73A  6F11               	movwf	(??_OLED_PutChar+1)& (0+255),b
 30972  01A73C  5120               	movf	OLED_PutChar@ch& (0+255),w,b
 30973  01A73E  6F12               	movwf	(??_OLED_PutChar+2)& (0+255),b
 30974  01A740  6B13               	clrf	(??_OLED_PutChar+3)& (0+255),b
 30975  01A742  90D8               	bcf	status,0,c
 30976  01A744  3712               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 30977  01A746  3713               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 30978  01A748  90D8               	bcf	status,0,c
 30979  01A74A  3712               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 30980  01A74C  3713               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 30981  01A74E  90D8               	bcf	status,0,c
 30982  01A750  3712               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 30983  01A752  3713               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 30984  01A754  5110               	movf	??_OLED_PutChar& (0+255),w,b
 30985  01A756  2712               	addwf	(??_OLED_PutChar+2)& (0+255),f,b
 30986  01A758  5111               	movf	(??_OLED_PutChar+1)& (0+255),w,b
 30987  01A75A  2313               	addwfc	(??_OLED_PutChar+3)& (0+255),f,b
 30988  01A75C  0E47               	movlw	low _OledFont
 30989  01A75E  2512               	addwf	(??_OLED_PutChar+2)& (0+255),w,b
 30990  01A760  6F1D               	movwf	OLED_PutChar@input_base& (0+255),b
 30991  01A762  0EE5               	movlw	high _OledFont
 30992  01A764  2113               	addwfc	(??_OLED_PutChar+3)& (0+255),w,b
 30993  01A766  6F1E               	movwf	(OLED_PutChar@input_base+1)& (0+255),b
 30994                           
 30995                           ; BSR set to: 2
 30996                           ;oled.c: 228: memmove(data_array + 1, input_base, 8);
 30997  01A768  0E15               	movlw	low (OLED_PutChar@data_array+1)
 30998  01A76A  6F00               	movwf	memmove@d1& (0+255),b
 30999  01A76C  0E02               	movlw	high (OLED_PutChar@data_array+1)
 31000  01A76E  6F01               	movwf	(memmove@d1+1)& (0+255),b
 31001  01A770  C21D  F202         	movff	OLED_PutChar@input_base,memmove@s1
 31002  01A774  C21E  F203         	movff	OLED_PutChar@input_base+1,memmove@s1+1
 31003  01A778  0E00               	movlw	0
 31004  01A77A  6F05               	movwf	(memmove@n+1)& (0+255),b
 31005  01A77C  0E08               	movlw	8
 31006  01A77E  6F04               	movwf	memmove@n& (0+255),b
 31007  01A780  EC05  F0D5         	call	_memmove	;wreg free
 31008                           
 31009                           ;oled.c: 233: I2C2_MasterWrite(data_array, length, (uint16_t) 0x3C, &I2C_STATUS);
 31010  01A784  0E14               	movlw	low OLED_PutChar@data_array
 31011  01A786  0102               	movlb	2	; () banked
 31012  01A788  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31013  01A78A  0E02               	movlw	high OLED_PutChar@data_array
 31014  01A78C  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31015  01A78E  0E09               	movlw	9
 31016  01A790  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31017  01A792  0E00               	movlw	0
 31018  01A794  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31019  01A796  0E3C               	movlw	60
 31020  01A798  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31021  01A79A  0EA8               	movlw	low _I2C_STATUS
 31022  01A79C  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31023  01A79E  0E01               	movlw	high _I2C_STATUS
 31024  01A7A0  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31025  01A7A2  EC96  F0DC         	call	_I2C2_MasterWrite	;wreg free
 31026  01A7A6                     l19468:
 31027  01A7A6  0E02               	movlw	2
 31028  01A7A8  0101               	movlb	1	; () banked
 31029  01A7AA  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31030  01A7AC  B4D8               	btfsc	status,2,c
 31031  01A7AE  D7FB               	goto	l19468
 31032                           
 31033                           ; BSR set to: 1
 31034                           ;oled.c: 237: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;oled.c: 238: I2C_STATUS == I2C2_ST
      +                          UCK_START ||;oled.c: 239: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;oled.c: 240: I2C_
      +                          STATUS == I2C2_DATA_NO_ACK ||;oled.c: 241: I2C_STATUS == I2C2_LOST_STATE ) {
 31035  01A7B0  05A8               	decf	_I2C_STATUS& (0+255),w,b
 31036  01A7B2  B4D8               	btfsc	status,2,c
 31037  01A7B4  D010               	goto	u24680
 31038                           
 31039                           ; BSR set to: 1
 31040  01A7B6  0E03               	movlw	3
 31041  01A7B8  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31042  01A7BA  B4D8               	btfsc	status,2,c
 31043  01A7BC  D00C               	goto	u24680
 31044                           
 31045                           ; BSR set to: 1
 31046  01A7BE  0E04               	movlw	4
 31047  01A7C0  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31048  01A7C2  B4D8               	btfsc	status,2,c
 31049  01A7C4  D008               	goto	u24680
 31050                           
 31051                           ; BSR set to: 1
 31052  01A7C6  0E05               	movlw	5
 31053  01A7C8  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31054  01A7CA  B4D8               	btfsc	status,2,c
 31055  01A7CC  D004               	goto	u24680
 31056                           
 31057                           ; BSR set to: 1
 31058  01A7CE  0E06               	movlw	6
 31059  01A7D0  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31060  01A7D2  A4D8               	btfss	status,2,c
 31061  01A7D4  0012               	return	
 31062  01A7D6                     u24680:
 31063                           
 31064                           ; BSR set to: 1
 31065                           ;oled.c: 242: error_handler.I2C_OLED_error_flag = 1;
 31066  01A7D6  0E01               	movlw	1
 31067  01A7D8  0100               	movlb	0	; () banked
 31068  01A7DA  6FBC               	movwf	(_error_handler+3)& (0+255),b
 31069  01A7DC  0012               	return		;funcret
 31070  01A7DE                     __end_of_OLED_PutChar:
 31071                           	opt callstack 0
 31072                           
 31073 ;; *************** function _memmove *****************
 31074 ;; Defined at:
 31075 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memmove.c"
 31076 ;; Parameters:    Size  Location     Type
 31077 ;;  d1              2    0[BANK2 ] PTR void 
 31078 ;;		 -> OLED_PutChar@data_array(9), 
 31079 ;;  s1              2    2[BANK2 ] PTR const void 
 31080 ;;		 -> OledFont(768), 
 31081 ;;  n               2    4[BANK2 ] unsigned int 
 31082 ;; Auto vars:     Size  Location     Type
 31083 ;;  s               2   10[BANK2 ] PTR const unsigned char 
 31084 ;;		 -> OledFont(768), 
 31085 ;;  d               2    8[BANK2 ] PTR unsigned char 
 31086 ;;		 -> OLED_PutChar@data_array(9), 
 31087 ;; Return value:  Size  Location     Type
 31088 ;;                  2    0[BANK2 ] PTR void 
 31089 ;; Registers used:
 31090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 31091 ;; Tracked objects:
 31092 ;;		On entry : 0/0
 31093 ;;		On exit  : 0/0
 31094 ;;		Unchanged: 0/0
 31095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31096 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31097 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31098 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31099 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31100 ;;Total ram usage:       12 bytes
 31101 ;; Hardware stack levels used:    1
 31102 ;; Hardware stack levels required when called:   11
 31103 ;; This function calls:
 31104 ;;		Nothing
 31105 ;; This function is called by:
 31106 ;;		_OLED_PutChar
 31107 ;; This function uses a non-reentrant model
 31108 ;;
 31109                           
 31110                           	psect	text110
 31111  01AA0A                     __ptext110:
 31112                           	opt callstack 0
 31113  01AA0A                     _memmove:
 31114                           	opt callstack 15
 31115                           
 31116                           ;incstack = 0
 31117  01AA0A  C202  F20A         	movff	memmove@s1,memmove@s
 31118  01AA0E  C203  F20B         	movff	memmove@s1+1,memmove@s+1
 31119  01AA12  C200  F208         	movff	memmove@d1,memmove@d
 31120  01AA16  C201  F209         	movff	memmove@d1+1,memmove@d+1
 31121  01AA1A  0102               	movlb	2	; () banked
 31122  01AA1C  5108               	movf	memmove@d& (0+255),w,b
 31123  01AA1E  5D0A               	subwf	memmove@s& (0+255),w,b
 31124  01AA20  5109               	movf	(memmove@d+1)& (0+255),w,b
 31125  01AA22  590B               	subwfb	(memmove@s+1)& (0+255),w,b
 31126  01AA24  B0D8               	btfsc	status,0,c
 31127  01AA26  D02F               	goto	l18592
 31128                           
 31129                           ; BSR set to: 2
 31130  01AA28  5104               	movf	memmove@n& (0+255),w,b
 31131  01AA2A  250A               	addwf	memmove@s& (0+255),w,b
 31132  01AA2C  6F06               	movwf	??_memmove& (0+255),b
 31133  01AA2E  5105               	movf	(memmove@n+1)& (0+255),w,b
 31134  01AA30  210B               	addwfc	(memmove@s+1)& (0+255),w,b
 31135  01AA32  6F07               	movwf	(??_memmove+1)& (0+255),b
 31136  01AA34  5106               	movf	??_memmove& (0+255),w,b
 31137  01AA36  5D08               	subwf	memmove@d& (0+255),w,b
 31138  01AA38  5107               	movf	(??_memmove+1)& (0+255),w,b
 31139  01AA3A  5909               	subwfb	(memmove@d+1)& (0+255),w,b
 31140  01AA3C  B0D8               	btfsc	status,0,c
 31141  01AA3E  D023               	goto	l18592
 31142                           
 31143                           ; BSR set to: 2
 31144  01AA40  5104               	movf	memmove@n& (0+255),w,b
 31145  01AA42  270A               	addwf	memmove@s& (0+255),f,b
 31146  01AA44  5105               	movf	(memmove@n+1)& (0+255),w,b
 31147  01AA46  230B               	addwfc	(memmove@s+1)& (0+255),f,b
 31148  01AA48  5104               	movf	memmove@n& (0+255),w,b
 31149  01AA4A  2708               	addwf	memmove@d& (0+255),f,b
 31150  01AA4C  5105               	movf	(memmove@n+1)& (0+255),w,b
 31151  01AA4E  2309               	addwfc	(memmove@d+1)& (0+255),f,b
 31152  01AA50                     l18588:
 31153                           
 31154                           ; BSR set to: 2
 31155  01AA50  070A               	decf	memmove@s& (0+255),f,b
 31156  01AA52  A0D8               	btfss	status,0,c
 31157  01AA54  070B               	decf	(memmove@s+1)& (0+255),f,b
 31158  01AA56  C20A  FFF6         	movff	memmove@s,tblptrl
 31159  01AA5A  C20B  FFF7         	movff	memmove@s+1,tblptrh
 31160  01AA5E                     	if	0	;tblptru may be non-zero
 31161  01AA5E                     	endif
 31162  01AA5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 31163  01AA5E  0E00               	movlw	low (__mediumconst shr (0+16))
 31164  01AA60  6EF8               	movwf	tblptru,c
 31165  01AA62                     	endif
 31166  01AA62  0708               	decf	memmove@d& (0+255),f,b
 31167  01AA64  A0D8               	btfss	status,0,c
 31168  01AA66  0709               	decf	(memmove@d+1)& (0+255),f,b
 31169  01AA68  C208  FFD9         	movff	memmove@d,fsr2l
 31170  01AA6C  C209  FFDA         	movff	memmove@d+1,fsr2h
 31171  01AA70  0008               	tblrd		*
 31172  01AA72  CFF5 FFDF          	movff	tablat,indf2
 31173                           
 31174                           ; BSR set to: 2
 31175  01AA76  0704               	decf	memmove@n& (0+255),f,b
 31176  01AA78  A0D8               	btfss	status,0,c
 31177  01AA7A  0705               	decf	(memmove@n+1)& (0+255),f,b
 31178  01AA7C  5104               	movf	memmove@n& (0+255),w,b
 31179  01AA7E  1105               	iorwf	(memmove@n+1)& (0+255),w,b
 31180  01AA80  B4D8               	btfsc	status,2,c
 31181  01AA82  0012               	return	
 31182  01AA84  D7E5               	goto	l18588
 31183  01AA86                     l18592:
 31184                           
 31185                           ; BSR set to: 2
 31186  01AA86  5104               	movf	memmove@n& (0+255),w,b
 31187  01AA88  1105               	iorwf	(memmove@n+1)& (0+255),w,b
 31188  01AA8A  B4D8               	btfsc	status,2,c
 31189  01AA8C  0012               	return	
 31190                           
 31191                           ; BSR set to: 2
 31192  01AA8E  C20A  FFF6         	movff	memmove@s,tblptrl
 31193  01AA92  C20B  FFF7         	movff	memmove@s+1,tblptrh
 31194  01AA96                     	if	0	;tblptru may be non-zero
 31195  01AA96                     	endif
 31196  01AA96                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 31197  01AA96  0E00               	movlw	low (__mediumconst shr (0+16))
 31198  01AA98  6EF8               	movwf	tblptru,c
 31199  01AA9A                     	endif
 31200  01AA9A  C208  FFD9         	movff	memmove@d,fsr2l
 31201  01AA9E  C209  FFDA         	movff	memmove@d+1,fsr2h
 31202  01AAA2  0008               	tblrd		*
 31203  01AAA4  CFF5 FFDF          	movff	tablat,indf2
 31204                           
 31205                           ; BSR set to: 2
 31206  01AAA8  4B0A               	infsnz	memmove@s& (0+255),f,b
 31207  01AAAA  2B0B               	incf	(memmove@s+1)& (0+255),f,b
 31208                           
 31209                           ; BSR set to: 2
 31210  01AAAC  4B08               	infsnz	memmove@d& (0+255),f,b
 31211  01AAAE  2B09               	incf	(memmove@d+1)& (0+255),f,b
 31212                           
 31213                           ; BSR set to: 2
 31214  01AAB0  0704               	decf	memmove@n& (0+255),f,b
 31215  01AAB2  A0D8               	btfss	status,0,c
 31216  01AAB4  0705               	decf	(memmove@n+1)& (0+255),f,b
 31217  01AAB6  D7E7               	goto	l18592
 31218  01AAB8                     __end_of_memmove:
 31219                           	opt callstack 0
 31220                           
 31221 ;; *************** function _LM73TempSensorInitialize *****************
 31222 ;; Defined at:
 31223 ;;		line 13 in file "LM73_I2C.c"
 31224 ;; Parameters:    Size  Location     Type
 31225 ;;		None
 31226 ;; Auto vars:     Size  Location     Type
 31227 ;;  output_data_    2   16[BANK2 ] unsigned char [2]
 31228 ;;  length          1    0        unsigned char 
 31229 ;; Return value:  Size  Location     Type
 31230 ;;                  1    wreg      void 
 31231 ;; Registers used:
 31232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31233 ;; Tracked objects:
 31234 ;;		On entry : 0/0
 31235 ;;		On exit  : 0/0
 31236 ;;		Unchanged: 0/0
 31237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31239 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31241 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31242 ;;Total ram usage:        3 bytes
 31243 ;; Hardware stack levels used:    1
 31244 ;; Hardware stack levels required when called:   14
 31245 ;; This function calls:
 31246 ;;		_I2C2_MasterWrite
 31247 ;; This function is called by:
 31248 ;;		_main
 31249 ;; This function uses a non-reentrant model
 31250 ;;
 31251                           
 31252                           	psect	text111
 31253  018E8C                     __ptext111:
 31254                           	opt callstack 0
 31255  018E8C                     _LM73TempSensorInitialize:
 31256                           	opt callstack 16
 31257                           
 31258                           ;LM73_I2C.c: 16: PIE0bits.INT1IE = 0;
 31259                           
 31260                           ; BSR set to: 2
 31261                           ;incstack = 0
 31262  018E8C  010E               	movlb	14	; () banked
 31263  018E8E  93C2               	bcf	194,1,b	;volatile
 31264                           
 31265                           ;LM73_I2C.c: 17: PIE0bits.INT2IE = 0;
 31266  018E90  95C2               	bcf	194,2,b	;volatile
 31267  018E92                     l22190:
 31268  018E92  0E02               	movlw	2
 31269  018E94  0101               	movlb	1	; () banked
 31270  018E96  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31271  018E98  B4D8               	btfsc	status,2,c
 31272  018E9A  D7FB               	goto	l22190
 31273                           
 31274                           ; BSR set to: 1
 31275                           ;LM73_I2C.c: 22: uint8_t length;;LM73_I2C.c: 23: uint8_t output_data_array[2];;LM73_I2C.
      +                          c: 24: output_data_array[0] = 0x01;
 31276  018E9C  0E01               	movlw	1
 31277  018E9E  0102               	movlb	2	; () banked
 31278  018EA0  6F10               	movwf	LM73TempSensorInitialize@output_data_array& (0+255),b
 31279                           
 31280                           ;LM73_I2C.c: 25: output_data_array[1] = 0b01000000;
 31281  018EA2  0E40               	movlw	64
 31282  018EA4  6F11               	movwf	(LM73TempSensorInitialize@output_data_array+1)& (0+255),b
 31283                           
 31284                           ; BSR set to: 2
 31285                           ;LM73_I2C.c: 27: I2C2_MasterWrite(output_data_array, length, 0x4D, &I2C_STATUS);
 31286  018EA6  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 31287  018EA8  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31288  018EAA  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 31289  018EAC  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31290  018EAE  0E02               	movlw	2
 31291  018EB0  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31292  018EB2  0E00               	movlw	0
 31293  018EB4  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31294  018EB6  0E4D               	movlw	77
 31295  018EB8  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31296  018EBA  0EA8               	movlw	low _I2C_STATUS
 31297  018EBC  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31298  018EBE  0E01               	movlw	high _I2C_STATUS
 31299  018EC0  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31300  018EC2  EC96  F0DC         	call	_I2C2_MasterWrite	;wreg free
 31301  018EC6                     l22196:
 31302  018EC6  0E02               	movlw	2
 31303  018EC8  0101               	movlb	1	; () banked
 31304  018ECA  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31305  018ECC  B4D8               	btfsc	status,2,c
 31306  018ECE  D7FB               	goto	l22196
 31307                           
 31308                           ; BSR set to: 1
 31309                           ;LM73_I2C.c: 29: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 30: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 31: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 32: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 33: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 31310  018ED0  05A8               	decf	_I2C_STATUS& (0+255),w,b
 31311  018ED2  B4D8               	btfsc	status,2,c
 31312  018ED4  D010               	goto	u28000
 31313                           
 31314                           ; BSR set to: 1
 31315  018ED6  0E03               	movlw	3
 31316  018ED8  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31317  018EDA  B4D8               	btfsc	status,2,c
 31318  018EDC  D00C               	goto	u28000
 31319                           
 31320                           ; BSR set to: 1
 31321  018EDE  0E04               	movlw	4
 31322  018EE0  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31323  018EE2  B4D8               	btfsc	status,2,c
 31324  018EE4  D008               	goto	u28000
 31325                           
 31326                           ; BSR set to: 1
 31327  018EE6  0E05               	movlw	5
 31328  018EE8  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31329  018EEA  B4D8               	btfsc	status,2,c
 31330  018EEC  D004               	goto	u28000
 31331                           
 31332                           ; BSR set to: 1
 31333  018EEE  0E06               	movlw	6
 31334  018EF0  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31335  018EF2  A4D8               	btfss	status,2,c
 31336  018EF4  D003               	goto	l22210
 31337  018EF6                     u28000:
 31338                           
 31339                           ; BSR set to: 1
 31340                           ;LM73_I2C.c: 34: error_handler.I2C_QI_Temp_Sense_error_flag = 1;
 31341  018EF6  0E01               	movlw	1
 31342  018EF8  0100               	movlb	0	; () banked
 31343  018EFA  6FBD               	movwf	(_error_handler+4)& (0+255),b
 31344  018EFC                     l22210:
 31345                           
 31346                           ;LM73_I2C.c: 35: };LM73_I2C.c: 38: I2C2_MasterWrite(output_data_array, length, 0x4C, &I2
      +                          C_STATUS);
 31347  018EFC  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 31348  018EFE  0102               	movlb	2	; () banked
 31349  018F00  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31350  018F02  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 31351  018F04  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31352  018F06  0E02               	movlw	2
 31353  018F08  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31354  018F0A  0E00               	movlw	0
 31355  018F0C  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31356  018F0E  0E4C               	movlw	76
 31357  018F10  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31358  018F12  0EA8               	movlw	low _I2C_STATUS
 31359  018F14  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31360  018F16  0E01               	movlw	high _I2C_STATUS
 31361  018F18  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31362  018F1A  EC96  F0DC         	call	_I2C2_MasterWrite	;wreg free
 31363  018F1E                     l22212:
 31364  018F1E  0E02               	movlw	2
 31365  018F20  0101               	movlb	1	; () banked
 31366  018F22  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31367  018F24  B4D8               	btfsc	status,2,c
 31368  018F26  D7FB               	goto	l22212
 31369                           
 31370                           ; BSR set to: 1
 31371                           ;LM73_I2C.c: 40: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 41: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 42: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 43: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 44: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 31372  018F28  05A8               	decf	_I2C_STATUS& (0+255),w,b
 31373  018F2A  B4D8               	btfsc	status,2,c
 31374  018F2C  D010               	goto	u28060
 31375                           
 31376                           ; BSR set to: 1
 31377  018F2E  0E03               	movlw	3
 31378  018F30  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31379  018F32  B4D8               	btfsc	status,2,c
 31380  018F34  D00C               	goto	u28060
 31381                           
 31382                           ; BSR set to: 1
 31383  018F36  0E04               	movlw	4
 31384  018F38  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31385  018F3A  B4D8               	btfsc	status,2,c
 31386  018F3C  D008               	goto	u28060
 31387                           
 31388                           ; BSR set to: 1
 31389  018F3E  0E05               	movlw	5
 31390  018F40  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31391  018F42  B4D8               	btfsc	status,2,c
 31392  018F44  D004               	goto	u28060
 31393                           
 31394                           ; BSR set to: 1
 31395  018F46  0E06               	movlw	6
 31396  018F48  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31397  018F4A  A4D8               	btfss	status,2,c
 31398  018F4C  D003               	goto	l22226
 31399  018F4E                     u28060:
 31400                           
 31401                           ; BSR set to: 1
 31402                           ;LM73_I2C.c: 45: error_handler.I2C_POS5_Temp_Sense_error_flag = 1;
 31403  018F4E  0E01               	movlw	1
 31404  018F50  0100               	movlb	0	; () banked
 31405  018F52  6FBE               	movwf	(_error_handler+5)& (0+255),b
 31406  018F54                     l22226:
 31407                           
 31408                           ;LM73_I2C.c: 46: };LM73_I2C.c: 49: I2C2_MasterWrite(output_data_array, length, 0x4E, &I2
      +                          C_STATUS);
 31409  018F54  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 31410  018F56  0102               	movlb	2	; () banked
 31411  018F58  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31412  018F5A  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 31413  018F5C  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31414  018F5E  0E02               	movlw	2
 31415  018F60  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31416  018F62  0E00               	movlw	0
 31417  018F64  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31418  018F66  0E4E               	movlw	78
 31419  018F68  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31420  018F6A  0EA8               	movlw	low _I2C_STATUS
 31421  018F6C  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31422  018F6E  0E01               	movlw	high _I2C_STATUS
 31423  018F70  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31424  018F72  EC96  F0DC         	call	_I2C2_MasterWrite	;wreg free
 31425  018F76                     l22228:
 31426  018F76  0E02               	movlw	2
 31427  018F78  0101               	movlb	1	; () banked
 31428  018F7A  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31429  018F7C  B4D8               	btfsc	status,2,c
 31430  018F7E  D7FB               	goto	l22228
 31431                           
 31432                           ; BSR set to: 1
 31433                           ;LM73_I2C.c: 51: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 52: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 53: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 54: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 55: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 31434  018F80  05A8               	decf	_I2C_STATUS& (0+255),w,b
 31435  018F82  B4D8               	btfsc	status,2,c
 31436  018F84  D010               	goto	u28120
 31437                           
 31438                           ; BSR set to: 1
 31439  018F86  0E03               	movlw	3
 31440  018F88  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31441  018F8A  B4D8               	btfsc	status,2,c
 31442  018F8C  D00C               	goto	u28120
 31443                           
 31444                           ; BSR set to: 1
 31445  018F8E  0E04               	movlw	4
 31446  018F90  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31447  018F92  B4D8               	btfsc	status,2,c
 31448  018F94  D008               	goto	u28120
 31449                           
 31450                           ; BSR set to: 1
 31451  018F96  0E05               	movlw	5
 31452  018F98  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31453  018F9A  B4D8               	btfsc	status,2,c
 31454  018F9C  D004               	goto	u28120
 31455                           
 31456                           ; BSR set to: 1
 31457  018F9E  0E06               	movlw	6
 31458  018FA0  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31459  018FA2  A4D8               	btfss	status,2,c
 31460  018FA4  D003               	goto	l1392
 31461  018FA6                     u28120:
 31462                           
 31463                           ; BSR set to: 1
 31464                           ;LM73_I2C.c: 56: error_handler.I2C_Ambient_Temp_Sense_error_flag = 1;
 31465  018FA6  0E01               	movlw	1
 31466  018FA8  0100               	movlb	0	; () banked
 31467  018FAA  6FBF               	movwf	(_error_handler+6)& (0+255),b
 31468  018FAC                     l1392:
 31469                           
 31470                           ;LM73_I2C.c: 57: };LM73_I2C.c: 60: output_data_array[0] = 0x04;
 31471  018FAC  0E04               	movlw	4
 31472  018FAE  0102               	movlb	2	; () banked
 31473  018FB0  6F10               	movwf	LM73TempSensorInitialize@output_data_array& (0+255),b
 31474                           
 31475                           ;LM73_I2C.c: 61: output_data_array[1] = 0b11100000;
 31476  018FB2  0EE0               	movlw	224
 31477  018FB4  6F11               	movwf	(LM73TempSensorInitialize@output_data_array+1)& (0+255),b
 31478                           
 31479                           ; BSR set to: 2
 31480                           ;LM73_I2C.c: 63: I2C2_MasterWrite(output_data_array, length, 0x4D, &I2C_STATUS);
 31481  018FB6  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 31482  018FB8  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31483  018FBA  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 31484  018FBC  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31485  018FBE  0E02               	movlw	2
 31486  018FC0  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31487  018FC2  0E00               	movlw	0
 31488  018FC4  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31489  018FC6  0E4D               	movlw	77
 31490  018FC8  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31491  018FCA  0EA8               	movlw	low _I2C_STATUS
 31492  018FCC  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31493  018FCE  0E01               	movlw	high _I2C_STATUS
 31494  018FD0  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31495  018FD2  EC96  F0DC         	call	_I2C2_MasterWrite	;wreg free
 31496  018FD6                     l22244:
 31497  018FD6  0E02               	movlw	2
 31498  018FD8  0101               	movlb	1	; () banked
 31499  018FDA  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31500  018FDC  B4D8               	btfsc	status,2,c
 31501  018FDE  D7FB               	goto	l22244
 31502                           
 31503                           ; BSR set to: 1
 31504                           ;LM73_I2C.c: 65: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 66: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 67: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 68: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 69: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 31505  018FE0  05A8               	decf	_I2C_STATUS& (0+255),w,b
 31506  018FE2  B4D8               	btfsc	status,2,c
 31507  018FE4  D010               	goto	u28180
 31508                           
 31509                           ; BSR set to: 1
 31510  018FE6  0E03               	movlw	3
 31511  018FE8  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31512  018FEA  B4D8               	btfsc	status,2,c
 31513  018FEC  D00C               	goto	u28180
 31514                           
 31515                           ; BSR set to: 1
 31516  018FEE  0E04               	movlw	4
 31517  018FF0  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31518  018FF2  B4D8               	btfsc	status,2,c
 31519  018FF4  D008               	goto	u28180
 31520                           
 31521                           ; BSR set to: 1
 31522  018FF6  0E05               	movlw	5
 31523  018FF8  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31524  018FFA  B4D8               	btfsc	status,2,c
 31525  018FFC  D004               	goto	u28180
 31526                           
 31527                           ; BSR set to: 1
 31528  018FFE  0E06               	movlw	6
 31529  019000  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31530  019002  A4D8               	btfss	status,2,c
 31531  019004  D003               	goto	l22258
 31532  019006                     u28180:
 31533                           
 31534                           ; BSR set to: 1
 31535                           ;LM73_I2C.c: 70: error_handler.I2C_QI_Temp_Sense_error_flag = 1;
 31536  019006  0E01               	movlw	1
 31537  019008  0100               	movlb	0	; () banked
 31538  01900A  6FBD               	movwf	(_error_handler+4)& (0+255),b
 31539  01900C                     l22258:
 31540                           
 31541                           ;LM73_I2C.c: 71: };LM73_I2C.c: 74: I2C2_MasterWrite(output_data_array, length, 0x4C, &I2
      +                          C_STATUS);
 31542  01900C  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 31543  01900E  0102               	movlb	2	; () banked
 31544  019010  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31545  019012  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 31546  019014  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31547  019016  0E02               	movlw	2
 31548  019018  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31549  01901A  0E00               	movlw	0
 31550  01901C  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31551  01901E  0E4C               	movlw	76
 31552  019020  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31553  019022  0EA8               	movlw	low _I2C_STATUS
 31554  019024  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31555  019026  0E01               	movlw	high _I2C_STATUS
 31556  019028  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31557  01902A  EC96  F0DC         	call	_I2C2_MasterWrite	;wreg free
 31558  01902E                     l22260:
 31559  01902E  0E02               	movlw	2
 31560  019030  0101               	movlb	1	; () banked
 31561  019032  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31562  019034  B4D8               	btfsc	status,2,c
 31563  019036  D7FB               	goto	l22260
 31564                           
 31565                           ; BSR set to: 1
 31566                           ;LM73_I2C.c: 76: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 77: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 78: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 79: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 80: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 31567  019038  05A8               	decf	_I2C_STATUS& (0+255),w,b
 31568  01903A  B4D8               	btfsc	status,2,c
 31569  01903C  D010               	goto	u28240
 31570                           
 31571                           ; BSR set to: 1
 31572  01903E  0E03               	movlw	3
 31573  019040  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31574  019042  B4D8               	btfsc	status,2,c
 31575  019044  D00C               	goto	u28240
 31576                           
 31577                           ; BSR set to: 1
 31578  019046  0E04               	movlw	4
 31579  019048  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31580  01904A  B4D8               	btfsc	status,2,c
 31581  01904C  D008               	goto	u28240
 31582                           
 31583                           ; BSR set to: 1
 31584  01904E  0E05               	movlw	5
 31585  019050  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31586  019052  B4D8               	btfsc	status,2,c
 31587  019054  D004               	goto	u28240
 31588                           
 31589                           ; BSR set to: 1
 31590  019056  0E06               	movlw	6
 31591  019058  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31592  01905A  A4D8               	btfss	status,2,c
 31593  01905C  D003               	goto	l22274
 31594  01905E                     u28240:
 31595                           
 31596                           ; BSR set to: 1
 31597                           ;LM73_I2C.c: 81: error_handler.I2C_POS5_Temp_Sense_error_flag = 1;
 31598  01905E  0E01               	movlw	1
 31599  019060  0100               	movlb	0	; () banked
 31600  019062  6FBE               	movwf	(_error_handler+5)& (0+255),b
 31601  019064                     l22274:
 31602                           
 31603                           ;LM73_I2C.c: 82: };LM73_I2C.c: 85: I2C2_MasterWrite(output_data_array, length, 0x4E, &I2
      +                          C_STATUS);
 31604  019064  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 31605  019066  0102               	movlb	2	; () banked
 31606  019068  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31607  01906A  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 31608  01906C  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31609  01906E  0E02               	movlw	2
 31610  019070  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31611  019072  0E00               	movlw	0
 31612  019074  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31613  019076  0E4E               	movlw	78
 31614  019078  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31615  01907A  0EA8               	movlw	low _I2C_STATUS
 31616  01907C  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31617  01907E  0E01               	movlw	high _I2C_STATUS
 31618  019080  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31619  019082  EC96  F0DC         	call	_I2C2_MasterWrite	;wreg free
 31620  019086                     l22276:
 31621  019086  0E02               	movlw	2
 31622  019088  0101               	movlb	1	; () banked
 31623  01908A  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31624  01908C  B4D8               	btfsc	status,2,c
 31625  01908E  D7FB               	goto	l22276
 31626                           
 31627                           ; BSR set to: 1
 31628                           ;LM73_I2C.c: 87: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 88: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 89: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 90: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 91: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 31629  019090  05A8               	decf	_I2C_STATUS& (0+255),w,b
 31630  019092  B4D8               	btfsc	status,2,c
 31631  019094  D010               	goto	u28300
 31632                           
 31633                           ; BSR set to: 1
 31634  019096  0E03               	movlw	3
 31635  019098  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31636  01909A  B4D8               	btfsc	status,2,c
 31637  01909C  D00C               	goto	u28300
 31638                           
 31639                           ; BSR set to: 1
 31640  01909E  0E04               	movlw	4
 31641  0190A0  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31642  0190A2  B4D8               	btfsc	status,2,c
 31643  0190A4  D008               	goto	u28300
 31644                           
 31645                           ; BSR set to: 1
 31646  0190A6  0E05               	movlw	5
 31647  0190A8  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31648  0190AA  B4D8               	btfsc	status,2,c
 31649  0190AC  D004               	goto	u28300
 31650                           
 31651                           ; BSR set to: 1
 31652  0190AE  0E06               	movlw	6
 31653  0190B0  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31654  0190B2  A4D8               	btfss	status,2,c
 31655  0190B4  D003               	goto	l22290
 31656  0190B6                     u28300:
 31657                           
 31658                           ; BSR set to: 1
 31659                           ;LM73_I2C.c: 92: error_handler.I2C_Ambient_Temp_Sense_error_flag = 1;
 31660  0190B6  0E01               	movlw	1
 31661  0190B8  0100               	movlb	0	; () banked
 31662  0190BA  6FBF               	movwf	(_error_handler+6)& (0+255),b
 31663  0190BC                     l22290:
 31664                           
 31665                           ;LM73_I2C.c: 93: };LM73_I2C.c: 96: PIE0bits.INT1IE = 1;
 31666  0190BC  010E               	movlb	14	; () banked
 31667  0190BE  83C2               	bsf	194,1,b	;volatile
 31668                           
 31669                           ; BSR set to: 14
 31670                           ;LM73_I2C.c: 97: PIE0bits.INT2IE = 1;
 31671  0190C0  85C2               	bsf	194,2,b	;volatile
 31672                           
 31673                           ; BSR set to: 14
 31674  0190C2  0012               	return		;funcret
 31675  0190C4                     __end_of_LM73TempSensorInitialize:
 31676                           	opt callstack 0
 31677                           
 31678 ;; *************** function _LM73AcquisitionHandler *****************
 31679 ;; Defined at:
 31680 ;;		line 102 in file "LM73_I2C.c"
 31681 ;; Parameters:    Size  Location     Type
 31682 ;;		None
 31683 ;; Auto vars:     Size  Location     Type
 31684 ;;		None
 31685 ;; Return value:  Size  Location     Type
 31686 ;;                  1    wreg      void 
 31687 ;; Registers used:
 31688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31689 ;; Tracked objects:
 31690 ;;		On entry : 0/0
 31691 ;;		On exit  : 0/0
 31692 ;;		Unchanged: 0/0
 31693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31698 ;;Total ram usage:        0 bytes
 31699 ;; Hardware stack levels used:    1
 31700 ;; Hardware stack levels required when called:   14
 31701 ;; This function calls:
 31702 ;;		_I2C2_MasterRead
 31703 ;;		_I2C2_MasterWrite
 31704 ;;		_LM73Convert
 31705 ;; This function is called by:
 31706 ;;		_main
 31707 ;; This function uses a non-reentrant model
 31708 ;;
 31709                           
 31710                           	psect	text112
 31711  0190C4                     __ptext112:
 31712                           	opt callstack 0
 31713  0190C4                     _LM73AcquisitionHandler:
 31714                           	opt callstack 16
 31715                           
 31716                           ;LM73_I2C.c: 105: PIE0bits.INT1IE = 0;
 31717                           
 31718                           ; BSR set to: 14
 31719                           ;incstack = 0
 31720  0190C4  010E               	movlb	14	; () banked
 31721  0190C6  93C2               	bcf	194,1,b	;volatile
 31722                           
 31723                           ;LM73_I2C.c: 106: PIE0bits.INT2IE = 0;
 31724  0190C8  95C2               	bcf	194,2,b	;volatile
 31725  0190CA                     l22324:
 31726  0190CA  0E02               	movlw	2
 31727  0190CC  0101               	movlb	1	; () banked
 31728  0190CE  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31729  0190D0  B4D8               	btfsc	status,2,c
 31730  0190D2  D7FB               	goto	l22324
 31731                           
 31732                           ; BSR set to: 1
 31733                           ;LM73_I2C.c: 112: I2C2_MasterWrite(0x00, 1, 0x4D, &I2C_STATUS);
 31734  0190D4  0E00               	movlw	0
 31735  0190D6  0102               	movlb	2	; () banked
 31736  0190D8  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31737  0190DA  0E00               	movlw	0
 31738  0190DC  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31739  0190DE  0E01               	movlw	1
 31740  0190E0  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31741  0190E2  0E00               	movlw	0
 31742  0190E4  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31743  0190E6  0E4D               	movlw	77
 31744  0190E8  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31745  0190EA  0EA8               	movlw	low _I2C_STATUS
 31746  0190EC  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31747  0190EE  0E01               	movlw	high _I2C_STATUS
 31748  0190F0  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31749  0190F2  EC96  F0DC         	call	_I2C2_MasterWrite	;wreg free
 31750  0190F6                     l22328:
 31751  0190F6  0E02               	movlw	2
 31752  0190F8  0101               	movlb	1	; () banked
 31753  0190FA  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31754  0190FC  B4D8               	btfsc	status,2,c
 31755  0190FE  D7FB               	goto	l22328
 31756                           
 31757                           ; BSR set to: 1
 31758                           ;LM73_I2C.c: 114: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 115: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 116: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 117: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 118: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 31759  019100  05A8               	decf	_I2C_STATUS& (0+255),w,b
 31760  019102  B4D8               	btfsc	status,2,c
 31761  019104  D010               	goto	u28410
 31762                           
 31763                           ; BSR set to: 1
 31764  019106  0E03               	movlw	3
 31765  019108  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31766  01910A  B4D8               	btfsc	status,2,c
 31767  01910C  D00C               	goto	u28410
 31768                           
 31769                           ; BSR set to: 1
 31770  01910E  0E04               	movlw	4
 31771  019110  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31772  019112  B4D8               	btfsc	status,2,c
 31773  019114  D008               	goto	u28410
 31774                           
 31775                           ; BSR set to: 1
 31776  019116  0E05               	movlw	5
 31777  019118  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31778  01911A  B4D8               	btfsc	status,2,c
 31779  01911C  D004               	goto	u28410
 31780                           
 31781                           ; BSR set to: 1
 31782  01911E  0E06               	movlw	6
 31783  019120  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31784  019122  A4D8               	btfss	status,2,c
 31785  019124  D003               	goto	l22342
 31786  019126                     u28410:
 31787                           
 31788                           ; BSR set to: 1
 31789                           ;LM73_I2C.c: 119: error_handler.I2C_QI_Temp_Sense_error_flag = 1;
 31790  019126  0E01               	movlw	1
 31791  019128  0100               	movlb	0	; () banked
 31792  01912A  6FBD               	movwf	(_error_handler+4)& (0+255),b
 31793  01912C                     l22342:
 31794                           
 31795                           ;LM73_I2C.c: 120: };LM73_I2C.c: 122: I2C2_MasterRead(LM73_temp_results.QI_data_raw, 2, 0
      +                          x4D, &I2C_STATUS);
 31796  01912C  0EE7               	movlw	low (_LM73_temp_results+12)
 31797  01912E  0102               	movlb	2	; () banked
 31798  019130  6F09               	movwf	I2C2_MasterRead@pdata& (0+255),b
 31799  019132  0E02               	movlw	high (_LM73_temp_results+12)
 31800  019134  6F0A               	movwf	(I2C2_MasterRead@pdata+1)& (0+255),b
 31801  019136  0E02               	movlw	2
 31802  019138  6F0B               	movwf	I2C2_MasterRead@length& (0+255),b
 31803  01913A  0E00               	movlw	0
 31804  01913C  6F0D               	movwf	(I2C2_MasterRead@address+1)& (0+255),b
 31805  01913E  0E4D               	movlw	77
 31806  019140  6F0C               	movwf	I2C2_MasterRead@address& (0+255),b
 31807  019142  0EA8               	movlw	low _I2C_STATUS
 31808  019144  6F0E               	movwf	I2C2_MasterRead@pflag& (0+255),b
 31809  019146  0E01               	movlw	high _I2C_STATUS
 31810  019148  6F0F               	movwf	(I2C2_MasterRead@pflag+1)& (0+255),b
 31811  01914A  ECBE  F0DC         	call	_I2C2_MasterRead	;wreg free
 31812  01914E                     l22344:
 31813  01914E  0E02               	movlw	2
 31814  019150  0101               	movlb	1	; () banked
 31815  019152  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31816  019154  B4D8               	btfsc	status,2,c
 31817  019156  D7FB               	goto	l22344
 31818                           
 31819                           ; BSR set to: 1
 31820                           ;LM73_I2C.c: 124: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 125: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 126: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 127: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 128: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 31821  019158  05A8               	decf	_I2C_STATUS& (0+255),w,b
 31822  01915A  B4D8               	btfsc	status,2,c
 31823  01915C  D010               	goto	u28470
 31824                           
 31825                           ; BSR set to: 1
 31826  01915E  0E03               	movlw	3
 31827  019160  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31828  019162  B4D8               	btfsc	status,2,c
 31829  019164  D00C               	goto	u28470
 31830                           
 31831                           ; BSR set to: 1
 31832  019166  0E04               	movlw	4
 31833  019168  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31834  01916A  B4D8               	btfsc	status,2,c
 31835  01916C  D008               	goto	u28470
 31836                           
 31837                           ; BSR set to: 1
 31838  01916E  0E05               	movlw	5
 31839  019170  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31840  019172  B4D8               	btfsc	status,2,c
 31841  019174  D004               	goto	u28470
 31842                           
 31843                           ; BSR set to: 1
 31844  019176  0E06               	movlw	6
 31845  019178  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31846  01917A  A4D8               	btfss	status,2,c
 31847  01917C  D003               	goto	l22358
 31848  01917E                     u28470:
 31849                           
 31850                           ; BSR set to: 1
 31851                           ;LM73_I2C.c: 129: error_handler.I2C_QI_Temp_Sense_error_flag = 1;
 31852  01917E  0E01               	movlw	1
 31853  019180  0100               	movlb	0	; () banked
 31854  019182  6FBD               	movwf	(_error_handler+4)& (0+255),b
 31855  019184                     l22358:
 31856                           
 31857                           ;LM73_I2C.c: 130: };LM73_I2C.c: 134: I2C2_MasterWrite(0x00, 1, 0x4C, &I2C_STATUS);
 31858  019184  0E00               	movlw	0
 31859  019186  0102               	movlb	2	; () banked
 31860  019188  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31861  01918A  0E00               	movlw	0
 31862  01918C  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31863  01918E  0E01               	movlw	1
 31864  019190  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31865  019192  0E00               	movlw	0
 31866  019194  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31867  019196  0E4C               	movlw	76
 31868  019198  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31869  01919A  0EA8               	movlw	low _I2C_STATUS
 31870  01919C  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31871  01919E  0E01               	movlw	high _I2C_STATUS
 31872  0191A0  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31873  0191A2  EC96  F0DC         	call	_I2C2_MasterWrite	;wreg free
 31874  0191A6                     l22360:
 31875  0191A6  0E02               	movlw	2
 31876  0191A8  0101               	movlb	1	; () banked
 31877  0191AA  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31878  0191AC  B4D8               	btfsc	status,2,c
 31879  0191AE  D7FB               	goto	l22360
 31880                           
 31881                           ; BSR set to: 1
 31882                           ;LM73_I2C.c: 136: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 137: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 138: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 139: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 140: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 31883  0191B0  05A8               	decf	_I2C_STATUS& (0+255),w,b
 31884  0191B2  B4D8               	btfsc	status,2,c
 31885  0191B4  D010               	goto	u28530
 31886                           
 31887                           ; BSR set to: 1
 31888  0191B6  0E03               	movlw	3
 31889  0191B8  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31890  0191BA  B4D8               	btfsc	status,2,c
 31891  0191BC  D00C               	goto	u28530
 31892                           
 31893                           ; BSR set to: 1
 31894  0191BE  0E04               	movlw	4
 31895  0191C0  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31896  0191C2  B4D8               	btfsc	status,2,c
 31897  0191C4  D008               	goto	u28530
 31898                           
 31899                           ; BSR set to: 1
 31900  0191C6  0E05               	movlw	5
 31901  0191C8  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31902  0191CA  B4D8               	btfsc	status,2,c
 31903  0191CC  D004               	goto	u28530
 31904                           
 31905                           ; BSR set to: 1
 31906  0191CE  0E06               	movlw	6
 31907  0191D0  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31908  0191D2  A4D8               	btfss	status,2,c
 31909  0191D4  D003               	goto	l22374
 31910  0191D6                     u28530:
 31911                           
 31912                           ; BSR set to: 1
 31913                           ;LM73_I2C.c: 141: error_handler.I2C_POS5_Temp_Sense_error_flag = 1;
 31914  0191D6  0E01               	movlw	1
 31915  0191D8  0100               	movlb	0	; () banked
 31916  0191DA  6FBE               	movwf	(_error_handler+5)& (0+255),b
 31917  0191DC                     l22374:
 31918                           
 31919                           ;LM73_I2C.c: 142: };LM73_I2C.c: 144: I2C2_MasterRead(LM73_temp_results.POS5_data_raw, 2,
      +                           0x4C, &I2C_STATUS);
 31920  0191DC  0EE9               	movlw	low (_LM73_temp_results+14)
 31921  0191DE  0102               	movlb	2	; () banked
 31922  0191E0  6F09               	movwf	I2C2_MasterRead@pdata& (0+255),b
 31923  0191E2  0E02               	movlw	high (_LM73_temp_results+14)
 31924  0191E4  6F0A               	movwf	(I2C2_MasterRead@pdata+1)& (0+255),b
 31925  0191E6  0E02               	movlw	2
 31926  0191E8  6F0B               	movwf	I2C2_MasterRead@length& (0+255),b
 31927  0191EA  0E00               	movlw	0
 31928  0191EC  6F0D               	movwf	(I2C2_MasterRead@address+1)& (0+255),b
 31929  0191EE  0E4C               	movlw	76
 31930  0191F0  6F0C               	movwf	I2C2_MasterRead@address& (0+255),b
 31931  0191F2  0EA8               	movlw	low _I2C_STATUS
 31932  0191F4  6F0E               	movwf	I2C2_MasterRead@pflag& (0+255),b
 31933  0191F6  0E01               	movlw	high _I2C_STATUS
 31934  0191F8  6F0F               	movwf	(I2C2_MasterRead@pflag+1)& (0+255),b
 31935  0191FA  ECBE  F0DC         	call	_I2C2_MasterRead	;wreg free
 31936  0191FE                     l22376:
 31937  0191FE  0E02               	movlw	2
 31938  019200  0101               	movlb	1	; () banked
 31939  019202  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31940  019204  B4D8               	btfsc	status,2,c
 31941  019206  D7FB               	goto	l22376
 31942                           
 31943                           ; BSR set to: 1
 31944                           ;LM73_I2C.c: 146: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 147: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 148: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 149: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 150: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 31945  019208  05A8               	decf	_I2C_STATUS& (0+255),w,b
 31946  01920A  B4D8               	btfsc	status,2,c
 31947  01920C  D010               	goto	u28590
 31948                           
 31949                           ; BSR set to: 1
 31950  01920E  0E03               	movlw	3
 31951  019210  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31952  019212  B4D8               	btfsc	status,2,c
 31953  019214  D00C               	goto	u28590
 31954                           
 31955                           ; BSR set to: 1
 31956  019216  0E04               	movlw	4
 31957  019218  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31958  01921A  B4D8               	btfsc	status,2,c
 31959  01921C  D008               	goto	u28590
 31960                           
 31961                           ; BSR set to: 1
 31962  01921E  0E05               	movlw	5
 31963  019220  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31964  019222  B4D8               	btfsc	status,2,c
 31965  019224  D004               	goto	u28590
 31966                           
 31967                           ; BSR set to: 1
 31968  019226  0E06               	movlw	6
 31969  019228  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 31970  01922A  A4D8               	btfss	status,2,c
 31971  01922C  D003               	goto	l22390
 31972  01922E                     u28590:
 31973                           
 31974                           ; BSR set to: 1
 31975                           ;LM73_I2C.c: 151: error_handler.I2C_POS5_Temp_Sense_error_flag = 1;
 31976  01922E  0E01               	movlw	1
 31977  019230  0100               	movlb	0	; () banked
 31978  019232  6FBE               	movwf	(_error_handler+5)& (0+255),b
 31979  019234                     l22390:
 31980                           
 31981                           ;LM73_I2C.c: 152: };LM73_I2C.c: 156: I2C2_MasterWrite(0x00, 1, 0x4E, &I2C_STATUS);
 31982  019234  0E00               	movlw	0
 31983  019236  0102               	movlb	2	; () banked
 31984  019238  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31985  01923A  0E00               	movlw	0
 31986  01923C  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31987  01923E  0E01               	movlw	1
 31988  019240  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31989  019242  0E00               	movlw	0
 31990  019244  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31991  019246  0E4E               	movlw	78
 31992  019248  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31993  01924A  0EA8               	movlw	low _I2C_STATUS
 31994  01924C  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31995  01924E  0E01               	movlw	high _I2C_STATUS
 31996  019250  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31997  019252  EC96  F0DC         	call	_I2C2_MasterWrite	;wreg free
 31998  019256                     l22392:
 31999  019256  0E02               	movlw	2
 32000  019258  0101               	movlb	1	; () banked
 32001  01925A  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32002  01925C  B4D8               	btfsc	status,2,c
 32003  01925E  D7FB               	goto	l22392
 32004                           
 32005                           ; BSR set to: 1
 32006                           ;LM73_I2C.c: 158: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 159: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 160: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 161: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 162: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 32007  019260  05A8               	decf	_I2C_STATUS& (0+255),w,b
 32008  019262  B4D8               	btfsc	status,2,c
 32009  019264  D010               	goto	u28650
 32010                           
 32011                           ; BSR set to: 1
 32012  019266  0E03               	movlw	3
 32013  019268  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32014  01926A  B4D8               	btfsc	status,2,c
 32015  01926C  D00C               	goto	u28650
 32016                           
 32017                           ; BSR set to: 1
 32018  01926E  0E04               	movlw	4
 32019  019270  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32020  019272  B4D8               	btfsc	status,2,c
 32021  019274  D008               	goto	u28650
 32022                           
 32023                           ; BSR set to: 1
 32024  019276  0E05               	movlw	5
 32025  019278  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32026  01927A  B4D8               	btfsc	status,2,c
 32027  01927C  D004               	goto	u28650
 32028                           
 32029                           ; BSR set to: 1
 32030  01927E  0E06               	movlw	6
 32031  019280  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32032  019282  A4D8               	btfss	status,2,c
 32033  019284  D003               	goto	l22406
 32034  019286                     u28650:
 32035                           
 32036                           ; BSR set to: 1
 32037                           ;LM73_I2C.c: 163: error_handler.I2C_Ambient_Temp_Sense_error_flag = 1;
 32038  019286  0E01               	movlw	1
 32039  019288  0100               	movlb	0	; () banked
 32040  01928A  6FBF               	movwf	(_error_handler+6)& (0+255),b
 32041  01928C                     l22406:
 32042                           
 32043                           ;LM73_I2C.c: 164: };LM73_I2C.c: 166: I2C2_MasterRead(LM73_temp_results.Ambient_data_raw,
      +                           2, 0x4E, &I2C_STATUS);
 32044  01928C  0EEB               	movlw	low (_LM73_temp_results+16)
 32045  01928E  0102               	movlb	2	; () banked
 32046  019290  6F09               	movwf	I2C2_MasterRead@pdata& (0+255),b
 32047  019292  0E02               	movlw	high (_LM73_temp_results+16)
 32048  019294  6F0A               	movwf	(I2C2_MasterRead@pdata+1)& (0+255),b
 32049  019296  0E02               	movlw	2
 32050  019298  6F0B               	movwf	I2C2_MasterRead@length& (0+255),b
 32051  01929A  0E00               	movlw	0
 32052  01929C  6F0D               	movwf	(I2C2_MasterRead@address+1)& (0+255),b
 32053  01929E  0E4E               	movlw	78
 32054  0192A0  6F0C               	movwf	I2C2_MasterRead@address& (0+255),b
 32055  0192A2  0EA8               	movlw	low _I2C_STATUS
 32056  0192A4  6F0E               	movwf	I2C2_MasterRead@pflag& (0+255),b
 32057  0192A6  0E01               	movlw	high _I2C_STATUS
 32058  0192A8  6F0F               	movwf	(I2C2_MasterRead@pflag+1)& (0+255),b
 32059  0192AA  ECBE  F0DC         	call	_I2C2_MasterRead	;wreg free
 32060  0192AE                     l22408:
 32061  0192AE  0E02               	movlw	2
 32062  0192B0  0101               	movlb	1	; () banked
 32063  0192B2  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32064  0192B4  B4D8               	btfsc	status,2,c
 32065  0192B6  D7FB               	goto	l22408
 32066                           
 32067                           ; BSR set to: 1
 32068                           ;LM73_I2C.c: 168: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 169: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 170: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 171: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 172: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 32069  0192B8  05A8               	decf	_I2C_STATUS& (0+255),w,b
 32070  0192BA  B4D8               	btfsc	status,2,c
 32071  0192BC  D010               	goto	u28710
 32072                           
 32073                           ; BSR set to: 1
 32074  0192BE  0E03               	movlw	3
 32075  0192C0  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32076  0192C2  B4D8               	btfsc	status,2,c
 32077  0192C4  D00C               	goto	u28710
 32078                           
 32079                           ; BSR set to: 1
 32080  0192C6  0E04               	movlw	4
 32081  0192C8  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32082  0192CA  B4D8               	btfsc	status,2,c
 32083  0192CC  D008               	goto	u28710
 32084                           
 32085                           ; BSR set to: 1
 32086  0192CE  0E05               	movlw	5
 32087  0192D0  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32088  0192D2  B4D8               	btfsc	status,2,c
 32089  0192D4  D004               	goto	u28710
 32090                           
 32091                           ; BSR set to: 1
 32092  0192D6  0E06               	movlw	6
 32093  0192D8  19A8               	xorwf	_I2C_STATUS& (0+255),w,b
 32094  0192DA  A4D8               	btfss	status,2,c
 32095  0192DC  D003               	goto	l22422
 32096  0192DE                     u28710:
 32097                           
 32098                           ; BSR set to: 1
 32099                           ;LM73_I2C.c: 173: error_handler.I2C_Ambient_Temp_Sense_error_flag = 1;
 32100  0192DE  0E01               	movlw	1
 32101  0192E0  0100               	movlb	0	; () banked
 32102  0192E2  6FBF               	movwf	(_error_handler+6)& (0+255),b
 32103  0192E4                     l22422:
 32104                           
 32105                           ;LM73_I2C.c: 174: };LM73_I2C.c: 177: LM73Convert();
 32106  0192E4  ECC9  F0C4         	call	_LM73Convert	;wreg free
 32107                           
 32108                           ;LM73_I2C.c: 179: LM73_start_flag = 0;
 32109  0192E8  0E00               	movlw	0
 32110  0192EA  0102               	movlb	2	; () banked
 32111  0192EC  6FD8               	movwf	_LM73_start_flag& (0+255),b
 32112                           
 32113                           ; BSR set to: 2
 32114  0192EE  0012               	return		;funcret
 32115  0192F0                     __end_of_LM73AcquisitionHandler:
 32116                           	opt callstack 0
 32117                           
 32118 ;; *************** function _LM73Convert *****************
 32119 ;; Defined at:
 32120 ;;		line 184 in file "LM73_I2C.c"
 32121 ;; Parameters:    Size  Location     Type
 32122 ;;		None
 32123 ;; Auto vars:     Size  Location     Type
 32124 ;;  Ambient_Conv    2   83[BANK2 ] unsigned int 
 32125 ;;  POS5_Conv       2   81[BANK2 ] unsigned int 
 32126 ;;  QI_Conv         2   79[BANK2 ] unsigned int 
 32127 ;; Return value:  Size  Location     Type
 32128 ;;                  1    wreg      void 
 32129 ;; Registers used:
 32130 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 32131 ;; Tracked objects:
 32132 ;;		On entry : 0/0
 32133 ;;		On exit  : 0/0
 32134 ;;		Unchanged: 0/0
 32135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32137 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32138 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32139 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32140 ;;Total ram usage:        9 bytes
 32141 ;; Hardware stack levels used:    1
 32142 ;; Hardware stack levels required when called:   12
 32143 ;; This function calls:
 32144 ;;		___flmul
 32145 ;;		___xxtofl
 32146 ;; This function is called by:
 32147 ;;		_LM73AcquisitionHandler
 32148 ;; This function uses a non-reentrant model
 32149 ;;
 32150                           
 32151                           	psect	text113
 32152  018992                     __ptext113:
 32153                           	opt callstack 0
 32154  018992                     _LM73Convert:
 32155                           	opt callstack 17
 32156                           
 32157                           ;LM73_I2C.c: 186: uint16_t QI_Conv, POS5_Conv, Ambient_Conv;;LM73_I2C.c: 189: QI_Conv = 
      +                          LM73_temp_results.QI_data_raw[0] << 6 | LM73_temp_results.QI_data_raw[1] >> 2;
 32158                           
 32159                           ; BSR set to: 2
 32160                           ;incstack = 0
 32161  018992  0102               	movlb	2	; () banked
 32162  018994  51E7               	movf	(_LM73_temp_results+12)& (0+255),w,b
 32163  018996  6F4C               	movwf	??_LM73Convert& (0+255),b
 32164  018998  6B4D               	clrf	(??_LM73Convert+1)& (0+255),b
 32165  01899A  0E06               	movlw	6
 32166  01899C                     u26985:
 32167  01899C  90D8               	bcf	status,0,c
 32168  01899E  374C               	rlcf	??_LM73Convert& (0+255),f,b
 32169  0189A0  374D               	rlcf	(??_LM73Convert+1)& (0+255),f,b
 32170  0189A2  2EE8               	decfsz	wreg,f,c
 32171  0189A4  D7FB               	goto	u26985
 32172  0189A6  C2E8  F24E         	movff	_LM73_temp_results+13,??_LM73Convert+2
 32173  0189AA  90D8               	bcf	status,0,c
 32174  0189AC  334E               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 32175  0189AE  90D8               	bcf	status,0,c
 32176  0189B0  334E               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 32177  0189B2  514E               	movf	(??_LM73Convert+2)& (0+255),w,b
 32178  0189B4  114C               	iorwf	??_LM73Convert& (0+255),w,b
 32179  0189B6  6F4F               	movwf	LM73Convert@QI_Conv& (0+255),b
 32180  0189B8  514D               	movf	(??_LM73Convert+1)& (0+255),w,b
 32181  0189BA  6F50               	movwf	(LM73Convert@QI_Conv+1)& (0+255),b
 32182                           
 32183                           ;LM73_I2C.c: 193: if ((LM73_temp_results.QI_data_raw[0] >> 6) == 1) {
 32184  0189BC  45E7               	rlncf	(_LM73_temp_results+12)& (0+255),w,b
 32185  0189BE  46E8               	rlncf	wreg,f,c
 32186  0189C0  0B03               	andlw	3
 32187  0189C2  06E8               	decf	wreg,f,c
 32188  0189C4  A4D8               	btfss	status,2,c
 32189  0189C6  D025               	goto	l20946
 32190                           
 32191                           ; BSR set to: 2
 32192                           ;LM73_I2C.c: 194: QI_Conv = ~(QI_Conv);
 32193  0189C8  1F4F               	comf	LM73Convert@QI_Conv& (0+255),f,b
 32194  0189CA  1F50               	comf	(LM73Convert@QI_Conv+1)& (0+255),f,b
 32195                           
 32196                           ; BSR set to: 2
 32197                           ;LM73_I2C.c: 196: QI_Conv = QI_Conv & 0x1FFF;
 32198  0189CC  0EFF               	movlw	255
 32199  0189CE  154F               	andwf	LM73Convert@QI_Conv& (0+255),w,b
 32200  0189D0  6F4F               	movwf	LM73Convert@QI_Conv& (0+255),b
 32201  0189D2  0E1F               	movlw	31
 32202  0189D4  1550               	andwf	(LM73Convert@QI_Conv+1)& (0+255),w,b
 32203  0189D6  6F50               	movwf	(LM73Convert@QI_Conv+1)& (0+255),b
 32204                           
 32205                           ; BSR set to: 2
 32206                           ;LM73_I2C.c: 197: LM73_temp_results.QI_temp_result = -0.03125 * QI_Conv;
 32207  0189D8  C24F  F23E         	movff	LM73Convert@QI_Conv,___xxtofl@val
 32208  0189DC  C250  F23F         	movff	LM73Convert@QI_Conv+1,___xxtofl@val+1
 32209  0189E0  6B40               	clrf	(___xxtofl@val+2)& (0+255),b
 32210  0189E2  6B41               	clrf	(___xxtofl@val+3)& (0+255),b
 32211  0189E4  0E00               	movlw	0
 32212  0189E6  EC88  F0CC         	call	___xxtofl
 32213  0189EA  C23E  F20E         	movff	?___xxtofl,___flmul@b
 32214  0189EE  C23F  F20F         	movff	?___xxtofl+1,___flmul@b+1
 32215  0189F2  C240  F210         	movff	?___xxtofl+2,___flmul@b+2
 32216  0189F6  C241  F211         	movff	?___xxtofl+3,___flmul@b+3
 32217  0189FA  0E00               	movlw	0
 32218  0189FC  0102               	movlb	2	; () banked
 32219  0189FE  6F12               	movwf	___flmul@a& (0+255),b
 32220  018A00  0E00               	movlw	0
 32221  018A02  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32222  018A04  0E00               	movlw	0
 32223  018A06  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32224  018A08  0EBD               	movlw	189
 32225  018A0A  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32226  018A0C  EC48  F0B3         	call	___flmul	;wreg free
 32227  018A10  D022               	goto	L22
 32228  018A12                     l20946:
 32229                           
 32230                           ; BSR set to: 2
 32231                           ;LM73_I2C.c: 200: else {;LM73_I2C.c: 202: QI_Conv = QI_Conv & 0x1FFF;
 32232  018A12  0EFF               	movlw	255
 32233  018A14  154F               	andwf	LM73Convert@QI_Conv& (0+255),w,b
 32234  018A16  6F4F               	movwf	LM73Convert@QI_Conv& (0+255),b
 32235  018A18  0E1F               	movlw	31
 32236  018A1A  1550               	andwf	(LM73Convert@QI_Conv+1)& (0+255),w,b
 32237  018A1C  6F50               	movwf	(LM73Convert@QI_Conv+1)& (0+255),b
 32238                           
 32239                           ; BSR set to: 2
 32240                           ;LM73_I2C.c: 203: LM73_temp_results.QI_temp_result = 0.03125 * QI_Conv;
 32241  018A1E  C24F  F23E         	movff	LM73Convert@QI_Conv,___xxtofl@val
 32242  018A22  C250  F23F         	movff	LM73Convert@QI_Conv+1,___xxtofl@val+1
 32243  018A26  6B40               	clrf	(___xxtofl@val+2)& (0+255),b
 32244  018A28  6B41               	clrf	(___xxtofl@val+3)& (0+255),b
 32245  018A2A  0E00               	movlw	0
 32246  018A2C  EC88  F0CC         	call	___xxtofl
 32247  018A30  C23E  F20E         	movff	?___xxtofl,___flmul@b
 32248  018A34  C23F  F20F         	movff	?___xxtofl+1,___flmul@b+1
 32249  018A38  C240  F210         	movff	?___xxtofl+2,___flmul@b+2
 32250  018A3C  C241  F211         	movff	?___xxtofl+3,___flmul@b+3
 32251  018A40  0E00               	movlw	0
 32252  018A42  0102               	movlb	2	; () banked
 32253  018A44  6F12               	movwf	___flmul@a& (0+255),b
 32254  018A46  0E00               	movlw	0
 32255  018A48  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32256  018A4A  0E00               	movlw	0
 32257  018A4C  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32258  018A4E  0E3D               	movlw	61
 32259  018A50  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32260  018A52  EC48  F0B3         	call	___flmul	;wreg free
 32261  018A56                     L22:
 32262  018A56  C20E  F2DB         	movff	?___flmul,_LM73_temp_results
 32263  018A5A  C20F  F2DC         	movff	?___flmul+1,_LM73_temp_results+1
 32264  018A5E  C210  F2DD         	movff	?___flmul+2,_LM73_temp_results+2
 32265  018A62  C211  F2DE         	movff	?___flmul+3,_LM73_temp_results+3
 32266                           
 32267                           ;LM73_I2C.c: 204: };LM73_I2C.c: 207: POS5_Conv = LM73_temp_results.POS5_data_raw[0] << 6
      +                           | LM73_temp_results.POS5_data_raw[1] >> 2;
 32268  018A66  0102               	movlb	2	; () banked
 32269  018A68  51E9               	movf	(_LM73_temp_results+14)& (0+255),w,b
 32270  018A6A  6F4C               	movwf	??_LM73Convert& (0+255),b
 32271  018A6C  6B4D               	clrf	(??_LM73Convert+1)& (0+255),b
 32272  018A6E  0E06               	movlw	6
 32273  018A70                     u27005:
 32274  018A70  90D8               	bcf	status,0,c
 32275  018A72  374C               	rlcf	??_LM73Convert& (0+255),f,b
 32276  018A74  374D               	rlcf	(??_LM73Convert+1)& (0+255),f,b
 32277  018A76  2EE8               	decfsz	wreg,f,c
 32278  018A78  D7FB               	goto	u27005
 32279  018A7A  C2EA  F24E         	movff	_LM73_temp_results+15,??_LM73Convert+2
 32280  018A7E  90D8               	bcf	status,0,c
 32281  018A80  334E               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 32282  018A82  90D8               	bcf	status,0,c
 32283  018A84  334E               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 32284  018A86  514E               	movf	(??_LM73Convert+2)& (0+255),w,b
 32285  018A88  114C               	iorwf	??_LM73Convert& (0+255),w,b
 32286  018A8A  6F51               	movwf	LM73Convert@POS5_Conv& (0+255),b
 32287  018A8C  514D               	movf	(??_LM73Convert+1)& (0+255),w,b
 32288  018A8E  6F52               	movwf	(LM73Convert@POS5_Conv+1)& (0+255),b
 32289                           
 32290                           ; BSR set to: 2
 32291                           ;LM73_I2C.c: 211: if ((LM73_temp_results.POS5_data_raw[0] >> 6) == 1) {
 32292  018A90  45E9               	rlncf	(_LM73_temp_results+14)& (0+255),w,b
 32293  018A92  46E8               	rlncf	wreg,f,c
 32294  018A94  0B03               	andlw	3
 32295  018A96  06E8               	decf	wreg,f,c
 32296  018A98  A4D8               	btfss	status,2,c
 32297  018A9A  D025               	goto	l20960
 32298                           
 32299                           ; BSR set to: 2
 32300                           ;LM73_I2C.c: 212: POS5_Conv = ~(POS5_Conv);
 32301  018A9C  1F51               	comf	LM73Convert@POS5_Conv& (0+255),f,b
 32302  018A9E  1F52               	comf	(LM73Convert@POS5_Conv+1)& (0+255),f,b
 32303                           
 32304                           ; BSR set to: 2
 32305                           ;LM73_I2C.c: 214: POS5_Conv = POS5_Conv & 0x1FFF;
 32306  018AA0  0EFF               	movlw	255
 32307  018AA2  1551               	andwf	LM73Convert@POS5_Conv& (0+255),w,b
 32308  018AA4  6F51               	movwf	LM73Convert@POS5_Conv& (0+255),b
 32309  018AA6  0E1F               	movlw	31
 32310  018AA8  1552               	andwf	(LM73Convert@POS5_Conv+1)& (0+255),w,b
 32311  018AAA  6F52               	movwf	(LM73Convert@POS5_Conv+1)& (0+255),b
 32312                           
 32313                           ; BSR set to: 2
 32314                           ;LM73_I2C.c: 215: LM73_temp_results.POS5_temp_result = -0.03125 * POS5_Conv;
 32315  018AAC  C251  F23E         	movff	LM73Convert@POS5_Conv,___xxtofl@val
 32316  018AB0  C252  F23F         	movff	LM73Convert@POS5_Conv+1,___xxtofl@val+1
 32317  018AB4  6B40               	clrf	(___xxtofl@val+2)& (0+255),b
 32318  018AB6  6B41               	clrf	(___xxtofl@val+3)& (0+255),b
 32319  018AB8  0E00               	movlw	0
 32320  018ABA  EC88  F0CC         	call	___xxtofl
 32321  018ABE  C23E  F20E         	movff	?___xxtofl,___flmul@b
 32322  018AC2  C23F  F20F         	movff	?___xxtofl+1,___flmul@b+1
 32323  018AC6  C240  F210         	movff	?___xxtofl+2,___flmul@b+2
 32324  018ACA  C241  F211         	movff	?___xxtofl+3,___flmul@b+3
 32325  018ACE  0E00               	movlw	0
 32326  018AD0  0102               	movlb	2	; () banked
 32327  018AD2  6F12               	movwf	___flmul@a& (0+255),b
 32328  018AD4  0E00               	movlw	0
 32329  018AD6  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32330  018AD8  0E00               	movlw	0
 32331  018ADA  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32332  018ADC  0EBD               	movlw	189
 32333  018ADE  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32334  018AE0  EC48  F0B3         	call	___flmul	;wreg free
 32335  018AE4  D022               	goto	L23
 32336  018AE6                     l20960:
 32337                           
 32338                           ; BSR set to: 2
 32339                           ;LM73_I2C.c: 218: else {;LM73_I2C.c: 220: POS5_Conv = POS5_Conv & 0x1FFF;
 32340  018AE6  0EFF               	movlw	255
 32341  018AE8  1551               	andwf	LM73Convert@POS5_Conv& (0+255),w,b
 32342  018AEA  6F51               	movwf	LM73Convert@POS5_Conv& (0+255),b
 32343  018AEC  0E1F               	movlw	31
 32344  018AEE  1552               	andwf	(LM73Convert@POS5_Conv+1)& (0+255),w,b
 32345  018AF0  6F52               	movwf	(LM73Convert@POS5_Conv+1)& (0+255),b
 32346                           
 32347                           ; BSR set to: 2
 32348                           ;LM73_I2C.c: 221: LM73_temp_results.POS5_temp_result = 0.03125 * POS5_Conv;
 32349  018AF2  C251  F23E         	movff	LM73Convert@POS5_Conv,___xxtofl@val
 32350  018AF6  C252  F23F         	movff	LM73Convert@POS5_Conv+1,___xxtofl@val+1
 32351  018AFA  6B40               	clrf	(___xxtofl@val+2)& (0+255),b
 32352  018AFC  6B41               	clrf	(___xxtofl@val+3)& (0+255),b
 32353  018AFE  0E00               	movlw	0
 32354  018B00  EC88  F0CC         	call	___xxtofl
 32355  018B04  C23E  F20E         	movff	?___xxtofl,___flmul@b
 32356  018B08  C23F  F20F         	movff	?___xxtofl+1,___flmul@b+1
 32357  018B0C  C240  F210         	movff	?___xxtofl+2,___flmul@b+2
 32358  018B10  C241  F211         	movff	?___xxtofl+3,___flmul@b+3
 32359  018B14  0E00               	movlw	0
 32360  018B16  0102               	movlb	2	; () banked
 32361  018B18  6F12               	movwf	___flmul@a& (0+255),b
 32362  018B1A  0E00               	movlw	0
 32363  018B1C  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32364  018B1E  0E00               	movlw	0
 32365  018B20  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32366  018B22  0E3D               	movlw	61
 32367  018B24  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32368  018B26  EC48  F0B3         	call	___flmul	;wreg free
 32369  018B2A                     L23:
 32370  018B2A  C20E  F2DF         	movff	?___flmul,_LM73_temp_results+4
 32371  018B2E  C20F  F2E0         	movff	?___flmul+1,_LM73_temp_results+5
 32372  018B32  C210  F2E1         	movff	?___flmul+2,_LM73_temp_results+6
 32373  018B36  C211  F2E2         	movff	?___flmul+3,_LM73_temp_results+7
 32374                           
 32375                           ;LM73_I2C.c: 222: };LM73_I2C.c: 225: Ambient_Conv = LM73_temp_results.Ambient_data_raw[0
      +                          ] << 6 | LM73_temp_results.Ambient_data_raw[1] >> 2;
 32376  018B3A  0102               	movlb	2	; () banked
 32377  018B3C  51EB               	movf	(_LM73_temp_results+16)& (0+255),w,b
 32378  018B3E  6F4C               	movwf	??_LM73Convert& (0+255),b
 32379  018B40  6B4D               	clrf	(??_LM73Convert+1)& (0+255),b
 32380  018B42  0E06               	movlw	6
 32381  018B44                     u27025:
 32382  018B44  90D8               	bcf	status,0,c
 32383  018B46  374C               	rlcf	??_LM73Convert& (0+255),f,b
 32384  018B48  374D               	rlcf	(??_LM73Convert+1)& (0+255),f,b
 32385  018B4A  2EE8               	decfsz	wreg,f,c
 32386  018B4C  D7FB               	goto	u27025
 32387  018B4E  C2EC  F24E         	movff	_LM73_temp_results+17,??_LM73Convert+2
 32388  018B52  90D8               	bcf	status,0,c
 32389  018B54  334E               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 32390  018B56  90D8               	bcf	status,0,c
 32391  018B58  334E               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 32392  018B5A  514E               	movf	(??_LM73Convert+2)& (0+255),w,b
 32393  018B5C  114C               	iorwf	??_LM73Convert& (0+255),w,b
 32394  018B5E  6F53               	movwf	LM73Convert@Ambient_Conv& (0+255),b
 32395  018B60  514D               	movf	(??_LM73Convert+1)& (0+255),w,b
 32396  018B62  6F54               	movwf	(LM73Convert@Ambient_Conv+1)& (0+255),b
 32397                           
 32398                           ; BSR set to: 2
 32399                           ;LM73_I2C.c: 229: if ((LM73_temp_results.Ambient_data_raw[0] >> 6) == 1) {
 32400  018B64  45EB               	rlncf	(_LM73_temp_results+16)& (0+255),w,b
 32401  018B66  46E8               	rlncf	wreg,f,c
 32402  018B68  0B03               	andlw	3
 32403  018B6A  06E8               	decf	wreg,f,c
 32404  018B6C  A4D8               	btfss	status,2,c
 32405  018B6E  D025               	goto	l20974
 32406                           
 32407                           ; BSR set to: 2
 32408                           ;LM73_I2C.c: 230: Ambient_Conv = ~(Ambient_Conv);
 32409  018B70  1F53               	comf	LM73Convert@Ambient_Conv& (0+255),f,b
 32410  018B72  1F54               	comf	(LM73Convert@Ambient_Conv+1)& (0+255),f,b
 32411                           
 32412                           ; BSR set to: 2
 32413                           ;LM73_I2C.c: 232: Ambient_Conv = Ambient_Conv & 0x1FFF;
 32414  018B74  0EFF               	movlw	255
 32415  018B76  1553               	andwf	LM73Convert@Ambient_Conv& (0+255),w,b
 32416  018B78  6F53               	movwf	LM73Convert@Ambient_Conv& (0+255),b
 32417  018B7A  0E1F               	movlw	31
 32418  018B7C  1554               	andwf	(LM73Convert@Ambient_Conv+1)& (0+255),w,b
 32419  018B7E  6F54               	movwf	(LM73Convert@Ambient_Conv+1)& (0+255),b
 32420                           
 32421                           ; BSR set to: 2
 32422                           ;LM73_I2C.c: 233: LM73_temp_results.Ambient_temp_result = -0.03125 * Ambient_Conv;
 32423  018B80  C253  F23E         	movff	LM73Convert@Ambient_Conv,___xxtofl@val
 32424  018B84  C254  F23F         	movff	LM73Convert@Ambient_Conv+1,___xxtofl@val+1
 32425  018B88  6B40               	clrf	(___xxtofl@val+2)& (0+255),b
 32426  018B8A  6B41               	clrf	(___xxtofl@val+3)& (0+255),b
 32427  018B8C  0E00               	movlw	0
 32428  018B8E  EC88  F0CC         	call	___xxtofl
 32429  018B92  C23E  F20E         	movff	?___xxtofl,___flmul@b
 32430  018B96  C23F  F20F         	movff	?___xxtofl+1,___flmul@b+1
 32431  018B9A  C240  F210         	movff	?___xxtofl+2,___flmul@b+2
 32432  018B9E  C241  F211         	movff	?___xxtofl+3,___flmul@b+3
 32433  018BA2  0E00               	movlw	0
 32434  018BA4  0102               	movlb	2	; () banked
 32435  018BA6  6F12               	movwf	___flmul@a& (0+255),b
 32436  018BA8  0E00               	movlw	0
 32437  018BAA  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32438  018BAC  0E00               	movlw	0
 32439  018BAE  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32440  018BB0  0EBD               	movlw	189
 32441  018BB2  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32442  018BB4  EC48  F0B3         	call	___flmul	;wreg free
 32443  018BB8  D022               	goto	L24
 32444  018BBA                     l20974:
 32445                           
 32446                           ; BSR set to: 2
 32447                           ;LM73_I2C.c: 236: else {;LM73_I2C.c: 238: Ambient_Conv = Ambient_Conv & 0x1FFF;
 32448  018BBA  0EFF               	movlw	255
 32449  018BBC  1553               	andwf	LM73Convert@Ambient_Conv& (0+255),w,b
 32450  018BBE  6F53               	movwf	LM73Convert@Ambient_Conv& (0+255),b
 32451  018BC0  0E1F               	movlw	31
 32452  018BC2  1554               	andwf	(LM73Convert@Ambient_Conv+1)& (0+255),w,b
 32453  018BC4  6F54               	movwf	(LM73Convert@Ambient_Conv+1)& (0+255),b
 32454                           
 32455                           ; BSR set to: 2
 32456                           ;LM73_I2C.c: 239: LM73_temp_results.Ambient_temp_result = 0.03125 * Ambient_Conv;
 32457  018BC6  C253  F23E         	movff	LM73Convert@Ambient_Conv,___xxtofl@val
 32458  018BCA  C254  F23F         	movff	LM73Convert@Ambient_Conv+1,___xxtofl@val+1
 32459  018BCE  6B40               	clrf	(___xxtofl@val+2)& (0+255),b
 32460  018BD0  6B41               	clrf	(___xxtofl@val+3)& (0+255),b
 32461  018BD2  0E00               	movlw	0
 32462  018BD4  EC88  F0CC         	call	___xxtofl
 32463  018BD8  C23E  F20E         	movff	?___xxtofl,___flmul@b
 32464  018BDC  C23F  F20F         	movff	?___xxtofl+1,___flmul@b+1
 32465  018BE0  C240  F210         	movff	?___xxtofl+2,___flmul@b+2
 32466  018BE4  C241  F211         	movff	?___xxtofl+3,___flmul@b+3
 32467  018BE8  0E00               	movlw	0
 32468  018BEA  0102               	movlb	2	; () banked
 32469  018BEC  6F12               	movwf	___flmul@a& (0+255),b
 32470  018BEE  0E00               	movlw	0
 32471  018BF0  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32472  018BF2  0E00               	movlw	0
 32473  018BF4  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32474  018BF6  0E3D               	movlw	61
 32475  018BF8  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32476  018BFA  EC48  F0B3         	call	___flmul	;wreg free
 32477  018BFE                     L24:
 32478  018BFE  C20E  F2E3         	movff	?___flmul,_LM73_temp_results+8
 32479  018C02  C20F  F2E4         	movff	?___flmul+1,_LM73_temp_results+9
 32480  018C06  C210  F2E5         	movff	?___flmul+2,_LM73_temp_results+10
 32481  018C0A  C211  F2E6         	movff	?___flmul+3,_LM73_temp_results+11
 32482                           
 32483                           ;LM73_I2C.c: 240: };LM73_I2C.c: 243: PIE0bits.INT1IE = 1;
 32484  018C0E  010E               	movlb	14	; () banked
 32485  018C10  83C2               	bsf	194,1,b	;volatile
 32486                           
 32487                           ; BSR set to: 14
 32488                           ;LM73_I2C.c: 244: PIE0bits.INT2IE = 1;
 32489  018C12  85C2               	bsf	194,2,b	;volatile
 32490                           
 32491                           ; BSR set to: 14
 32492  018C14  0012               	return		;funcret
 32493  018C16                     __end_of_LM73Convert:
 32494                           	opt callstack 0
 32495                           
 32496 ;; *************** function ___xxtofl *****************
 32497 ;; Defined at:
 32498 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
 32499 ;; Parameters:    Size  Location     Type
 32500 ;;  sign            1    wreg     unsigned char 
 32501 ;;  val             4   62[BANK2 ] long 
 32502 ;; Auto vars:     Size  Location     Type
 32503 ;;  sign            1   70[BANK2 ] unsigned char 
 32504 ;;  arg             4   72[BANK2 ] unsigned long 
 32505 ;;  exp             1   71[BANK2 ] unsigned char 
 32506 ;; Return value:  Size  Location     Type
 32507 ;;                  4   62[BANK2 ] unsigned char 
 32508 ;; Registers used:
 32509 ;;		wreg, status,2, status,0
 32510 ;; Tracked objects:
 32511 ;;		On entry : 0/0
 32512 ;;		On exit  : 0/0
 32513 ;;		Unchanged: 0/0
 32514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32515 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32516 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32517 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32518 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32519 ;;Total ram usage:       14 bytes
 32520 ;; Hardware stack levels used:    1
 32521 ;; Hardware stack levels required when called:   11
 32522 ;; This function calls:
 32523 ;;		Nothing
 32524 ;; This function is called by:
 32525 ;;		_LM73Convert
 32526 ;;		_floatToEngineeringFormat
 32527 ;;		__doprnt
 32528 ;;		_ftoa
 32529 ;; This function uses a non-reentrant model
 32530 ;;
 32531                           
 32532                           	psect	text114
 32533  019910                     __ptext114:
 32534                           	opt callstack 0
 32535  019910                     ___xxtofl:
 32536                           	opt callstack 14
 32537                           
 32538                           ; BSR set to: 14
 32539                           ;incstack = 0
 32540                           ;___xxtofl@sign stored from wreg
 32541  019910  0102               	movlb	2	; () banked
 32542  019912  6F46               	movwf	___xxtofl@sign& (0+255),b
 32543  019914  0102               	movlb	2	; () banked
 32544  019916  5146               	movf	___xxtofl@sign& (0+255),w,b
 32545  019918  A4D8               	btfss	status,2,c
 32546                           
 32547                           ; BSR set to: 2
 32548  01991A  AF41               	btfss	(___xxtofl@val+3)& (0+255),7,b
 32549  01991C  D01A               	goto	l3352
 32550                           
 32551                           ; BSR set to: 2
 32552  01991E  C23E  F242         	movff	___xxtofl@val,??___xxtofl
 32553  019922  C23F  F243         	movff	___xxtofl@val+1,??___xxtofl+1
 32554  019926  C240  F244         	movff	___xxtofl@val+2,??___xxtofl+2
 32555  01992A  C241  F245         	movff	___xxtofl@val+3,??___xxtofl+3
 32556  01992E  1F42               	comf	??___xxtofl& (0+255),f,b
 32557  019930  1F43               	comf	(??___xxtofl+1)& (0+255),f,b
 32558  019932  1F44               	comf	(??___xxtofl+2)& (0+255),f,b
 32559  019934  1F45               	comf	(??___xxtofl+3)& (0+255),f,b
 32560  019936  2B42               	incf	??___xxtofl& (0+255),f,b
 32561  019938  0E00               	movlw	0
 32562  01993A  2343               	addwfc	(??___xxtofl+1)& (0+255),f,b
 32563  01993C  2344               	addwfc	(??___xxtofl+2)& (0+255),f,b
 32564  01993E  2345               	addwfc	(??___xxtofl+3)& (0+255),f,b
 32565  019940  C242  F248         	movff	??___xxtofl,___xxtofl@arg
 32566  019944  C243  F249         	movff	??___xxtofl+1,___xxtofl@arg+1
 32567  019948  C244  F24A         	movff	??___xxtofl+2,___xxtofl@arg+2
 32568  01994C  C245  F24B         	movff	??___xxtofl+3,___xxtofl@arg+3
 32569  019950  D008               	goto	l17866
 32570  019952                     l3352:
 32571                           
 32572                           ; BSR set to: 2
 32573  019952  C23E  F248         	movff	___xxtofl@val,___xxtofl@arg
 32574  019956  C23F  F249         	movff	___xxtofl@val+1,___xxtofl@arg+1
 32575  01995A  C240  F24A         	movff	___xxtofl@val+2,___xxtofl@arg+2
 32576  01995E  C241  F24B         	movff	___xxtofl@val+3,___xxtofl@arg+3
 32577  019962                     l17866:
 32578                           
 32579                           ; BSR set to: 2
 32580  019962  513E               	movf	___xxtofl@val& (0+255),w,b
 32581  019964  113F               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 32582  019966  1140               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 32583  019968  1141               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 32584  01996A  A4D8               	btfss	status,2,c
 32585  01996C  D009               	goto	l17872
 32586                           
 32587                           ; BSR set to: 2
 32588  01996E  0E00               	movlw	0
 32589  019970  6F3E               	movwf	?___xxtofl& (0+255),b
 32590  019972  0E00               	movlw	0
 32591  019974  6F3F               	movwf	(?___xxtofl+1)& (0+255),b
 32592  019976  0E00               	movlw	0
 32593  019978  6F40               	movwf	(?___xxtofl+2)& (0+255),b
 32594  01997A  0E00               	movlw	0
 32595  01997C  6F41               	movwf	(?___xxtofl+3)& (0+255),b
 32596  01997E  0012               	return	
 32597  019980                     l17872:
 32598                           
 32599                           ; BSR set to: 2
 32600  019980  0E96               	movlw	150
 32601  019982  6F47               	movwf	___xxtofl@exp& (0+255),b
 32602  019984  D006               	goto	l17876
 32603  019986                     l17874:
 32604                           
 32605                           ; BSR set to: 2
 32606  019986  2B47               	incf	___xxtofl@exp& (0+255),f,b
 32607  019988  90D8               	bcf	status,0,c
 32608  01998A  334B               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 32609  01998C  334A               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 32610  01998E  3349               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 32611  019990  3348               	rrcf	___xxtofl@arg& (0+255),f,b
 32612  019992                     l17876:
 32613                           
 32614                           ; BSR set to: 2
 32615  019992  0E00               	movlw	0
 32616  019994  1548               	andwf	___xxtofl@arg& (0+255),w,b
 32617  019996  6F42               	movwf	??___xxtofl& (0+255),b
 32618  019998  0E00               	movlw	0
 32619  01999A  1549               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 32620  01999C  6F43               	movwf	(??___xxtofl+1)& (0+255),b
 32621  01999E  0E00               	movlw	0
 32622  0199A0  154A               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 32623  0199A2  6F44               	movwf	(??___xxtofl+2)& (0+255),b
 32624  0199A4  0EFE               	movlw	254
 32625  0199A6  154B               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 32626  0199A8  6F45               	movwf	(??___xxtofl+3)& (0+255),b
 32627  0199AA  5142               	movf	??___xxtofl& (0+255),w,b
 32628  0199AC  1143               	iorwf	(??___xxtofl+1)& (0+255),w,b
 32629  0199AE  1144               	iorwf	(??___xxtofl+2)& (0+255),w,b
 32630  0199B0  1145               	iorwf	(??___xxtofl+3)& (0+255),w,b
 32631  0199B2  B4D8               	btfsc	status,2,c
 32632  0199B4  D00D               	goto	l3359
 32633  0199B6  D7E7               	goto	l17874
 32634  0199B8                     l17878:
 32635                           
 32636                           ; BSR set to: 2
 32637  0199B8  2B47               	incf	___xxtofl@exp& (0+255),f,b
 32638                           
 32639                           ; BSR set to: 2
 32640  0199BA  0E01               	movlw	1
 32641  0199BC  2748               	addwf	___xxtofl@arg& (0+255),f,b
 32642  0199BE  0E00               	movlw	0
 32643  0199C0  2349               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 32644  0199C2  234A               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 32645  0199C4  234B               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 32646                           
 32647                           ; BSR set to: 2
 32648  0199C6  90D8               	bcf	status,0,c
 32649  0199C8  334B               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 32650  0199CA  334A               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 32651  0199CC  3349               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 32652  0199CE  3348               	rrcf	___xxtofl@arg& (0+255),f,b
 32653  0199D0                     l3359:
 32654                           
 32655                           ; BSR set to: 2
 32656  0199D0  0E00               	movlw	0
 32657  0199D2  1548               	andwf	___xxtofl@arg& (0+255),w,b
 32658  0199D4  6F42               	movwf	??___xxtofl& (0+255),b
 32659  0199D6  0E00               	movlw	0
 32660  0199D8  1549               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 32661  0199DA  6F43               	movwf	(??___xxtofl+1)& (0+255),b
 32662  0199DC  0E00               	movlw	0
 32663  0199DE  154A               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 32664  0199E0  6F44               	movwf	(??___xxtofl+2)& (0+255),b
 32665  0199E2  0EFF               	movlw	255
 32666  0199E4  154B               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 32667  0199E6  6F45               	movwf	(??___xxtofl+3)& (0+255),b
 32668  0199E8  5142               	movf	??___xxtofl& (0+255),w,b
 32669  0199EA  1143               	iorwf	(??___xxtofl+1)& (0+255),w,b
 32670  0199EC  1144               	iorwf	(??___xxtofl+2)& (0+255),w,b
 32671  0199EE  1145               	iorwf	(??___xxtofl+3)& (0+255),w,b
 32672  0199F0  B4D8               	btfsc	status,2,c
 32673  0199F2  D007               	goto	l17886
 32674  0199F4  D7E1               	goto	l17878
 32675  0199F6                     l17884:
 32676                           
 32677                           ; BSR set to: 2
 32678  0199F6  0747               	decf	___xxtofl@exp& (0+255),f,b
 32679  0199F8  90D8               	bcf	status,0,c
 32680  0199FA  3748               	rlcf	___xxtofl@arg& (0+255),f,b
 32681  0199FC  3749               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 32682  0199FE  374A               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 32683  019A00  374B               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 32684  019A02                     l17886:
 32685                           
 32686                           ; BSR set to: 2
 32687  019A02  BF4A               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 32688  019A04  D003               	goto	u21790
 32689                           
 32690                           ; BSR set to: 2
 32691  019A06  0E02               	movlw	2
 32692  019A08  6147               	cpfslt	___xxtofl@exp& (0+255),b
 32693  019A0A  D7F5               	goto	l17884
 32694  019A0C                     u21790:
 32695                           
 32696                           ; BSR set to: 2
 32697  019A0C  A147               	btfss	___xxtofl@exp& (0+255),0,b
 32698                           
 32699                           ; BSR set to: 2
 32700  019A0E  9F4A               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 32701                           
 32702                           ; BSR set to: 2
 32703  019A10  90D8               	bcf	status,0,c
 32704  019A12  3347               	rrcf	___xxtofl@exp& (0+255),f,b
 32705                           
 32706                           ; BSR set to: 2
 32707  019A14  C247  F242         	movff	___xxtofl@exp,??___xxtofl
 32708  019A18  6B43               	clrf	(??___xxtofl+1)& (0+255),b
 32709  019A1A  6B44               	clrf	(??___xxtofl+2)& (0+255),b
 32710  019A1C  6B45               	clrf	(??___xxtofl+3)& (0+255),b
 32711  019A1E  C242  F245         	movff	??___xxtofl,??___xxtofl+3
 32712  019A22  6B44               	clrf	(??___xxtofl+2)& (0+255),b
 32713  019A24  6B43               	clrf	(??___xxtofl+1)& (0+255),b
 32714  019A26  6B42               	clrf	??___xxtofl& (0+255),b
 32715  019A28  5142               	movf	??___xxtofl& (0+255),w,b
 32716  019A2A  1348               	iorwf	___xxtofl@arg& (0+255),f,b
 32717  019A2C  5143               	movf	(??___xxtofl+1)& (0+255),w,b
 32718  019A2E  1349               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 32719  019A30  5144               	movf	(??___xxtofl+2)& (0+255),w,b
 32720  019A32  134A               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 32721  019A34  5145               	movf	(??___xxtofl+3)& (0+255),w,b
 32722  019A36  134B               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 32723                           
 32724                           ; BSR set to: 2
 32725  019A38  5146               	movf	___xxtofl@sign& (0+255),w,b
 32726  019A3A  A4D8               	btfss	status,2,c
 32727                           
 32728                           ; BSR set to: 2
 32729  019A3C  AF41               	btfss	(___xxtofl@val+3)& (0+255),7,b
 32730  019A3E  D001               	goto	l17902
 32731                           
 32732                           ; BSR set to: 2
 32733  019A40  8F4B               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 32734  019A42                     l17902:
 32735                           
 32736                           ; BSR set to: 2
 32737  019A42  C248  F23E         	movff	___xxtofl@arg,?___xxtofl
 32738  019A46  C249  F23F         	movff	___xxtofl@arg+1,?___xxtofl+1
 32739  019A4A  C24A  F240         	movff	___xxtofl@arg+2,?___xxtofl+2
 32740  019A4E  C24B  F241         	movff	___xxtofl@arg+3,?___xxtofl+3
 32741                           
 32742                           ; BSR set to: 2
 32743  019A52  0012               	return		;funcret
 32744  019A54                     __end_of___xxtofl:
 32745                           	opt callstack 0
 32746                           
 32747 ;; *************** function ___flmul *****************
 32748 ;; Defined at:
 32749 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
 32750 ;; Parameters:    Size  Location     Type
 32751 ;;  b               4   14[BANK2 ] unsigned char 
 32752 ;;  a               4   18[BANK2 ] unsigned char 
 32753 ;; Auto vars:     Size  Location     Type
 32754 ;;  prod            4   33[BANK2 ] struct .
 32755 ;;  grs             4   28[BANK2 ] unsigned long 
 32756 ;;  temp            2   37[BANK2 ] struct .
 32757 ;;  bexp            1   32[BANK2 ] unsigned char 
 32758 ;;  aexp            1   27[BANK2 ] unsigned char 
 32759 ;;  sign            1   26[BANK2 ] unsigned char 
 32760 ;; Return value:  Size  Location     Type
 32761 ;;                  4   14[BANK2 ] unsigned char 
 32762 ;; Registers used:
 32763 ;;		wreg, status,2, status,0, prodl, prodh
 32764 ;; Tracked objects:
 32765 ;;		On entry : 0/0
 32766 ;;		On exit  : 0/0
 32767 ;;		Unchanged: 0/0
 32768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32769 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32770 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32771 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32772 ;;      Totals:         0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32773 ;;Total ram usage:       25 bytes
 32774 ;; Hardware stack levels used:    1
 32775 ;; Hardware stack levels required when called:   11
 32776 ;; This function calls:
 32777 ;;		Nothing
 32778 ;; This function is called by:
 32779 ;;		_LM73Convert
 32780 ;;		_fround
 32781 ;;		_scale
 32782 ;;		__doprnt
 32783 ;;		_ftoa
 32784 ;; This function uses a non-reentrant model
 32785 ;;
 32786                           
 32787                           	psect	text115
 32788  016690                     __ptext115:
 32789                           	opt callstack 0
 32790  016690                     ___flmul:
 32791                           	opt callstack 13
 32792                           
 32793                           ; BSR set to: 2
 32794                           ;incstack = 0
 32795  016690  0102               	movlb	2	; () banked
 32796  016692  5111               	movf	(___flmul@b+3)& (0+255),w,b
 32797  016694  0B80               	andlw	128
 32798  016696  6F1A               	movwf	___flmul@sign& (0+255),b
 32799  016698  5111               	movf	(___flmul@b+3)& (0+255),w,b
 32800  01669A  2511               	addwf	(___flmul@b+3)& (0+255),w,b
 32801  01669C  6F20               	movwf	___flmul@bexp& (0+255),b
 32802                           
 32803                           ; BSR set to: 2
 32804  01669E  BF10               	btfsc	(___flmul@b+2)& (0+255),7,b
 32805                           
 32806                           ; BSR set to: 2
 32807  0166A0  8120               	bsf	___flmul@bexp& (0+255),0,b
 32808                           
 32809                           ; BSR set to: 2
 32810  0166A2  5120               	movf	___flmul@bexp& (0+255),w,b
 32811  0166A4  B4D8               	btfsc	status,2,c
 32812  0166A6  D00D               	goto	l17296
 32813                           
 32814                           ; BSR set to: 2
 32815  0166A8  2920               	incf	___flmul@bexp& (0+255),w,b
 32816  0166AA  A4D8               	btfss	status,2,c
 32817  0166AC  D008               	goto	l17294
 32818                           
 32819                           ; BSR set to: 2
 32820  0166AE  0E00               	movlw	0
 32821  0166B0  6F0E               	movwf	___flmul@b& (0+255),b
 32822  0166B2  0E00               	movlw	0
 32823  0166B4  6F0F               	movwf	(___flmul@b+1)& (0+255),b
 32824  0166B6  0E00               	movlw	0
 32825  0166B8  6F10               	movwf	(___flmul@b+2)& (0+255),b
 32826  0166BA  0E00               	movlw	0
 32827  0166BC  6F11               	movwf	(___flmul@b+3)& (0+255),b
 32828  0166BE                     l17294:
 32829                           
 32830                           ; BSR set to: 2
 32831  0166BE  8F10               	bsf	(___flmul@b+2)& (0+255),7,b
 32832  0166C0  D008               	goto	l17298
 32833  0166C2                     l17296:
 32834                           
 32835                           ; BSR set to: 2
 32836  0166C2  0E00               	movlw	0
 32837  0166C4  6F0E               	movwf	___flmul@b& (0+255),b
 32838  0166C6  0E00               	movlw	0
 32839  0166C8  6F0F               	movwf	(___flmul@b+1)& (0+255),b
 32840  0166CA  0E00               	movlw	0
 32841  0166CC  6F10               	movwf	(___flmul@b+2)& (0+255),b
 32842  0166CE  0E00               	movlw	0
 32843  0166D0  6F11               	movwf	(___flmul@b+3)& (0+255),b
 32844  0166D2                     l17298:
 32845                           
 32846                           ; BSR set to: 2
 32847  0166D2  5115               	movf	(___flmul@a+3)& (0+255),w,b
 32848  0166D4  0B80               	andlw	128
 32849  0166D6  1B1A               	xorwf	___flmul@sign& (0+255),f,b
 32850                           
 32851                           ; BSR set to: 2
 32852  0166D8  5115               	movf	(___flmul@a+3)& (0+255),w,b
 32853  0166DA  2515               	addwf	(___flmul@a+3)& (0+255),w,b
 32854  0166DC  6F1B               	movwf	___flmul@aexp& (0+255),b
 32855                           
 32856                           ; BSR set to: 2
 32857  0166DE  BF14               	btfsc	(___flmul@a+2)& (0+255),7,b
 32858                           
 32859                           ; BSR set to: 2
 32860  0166E0  811B               	bsf	___flmul@aexp& (0+255),0,b
 32861                           
 32862                           ; BSR set to: 2
 32863  0166E2  511B               	movf	___flmul@aexp& (0+255),w,b
 32864  0166E4  B4D8               	btfsc	status,2,c
 32865  0166E6  D00D               	goto	l17314
 32866                           
 32867                           ; BSR set to: 2
 32868  0166E8  291B               	incf	___flmul@aexp& (0+255),w,b
 32869  0166EA  A4D8               	btfss	status,2,c
 32870  0166EC  D008               	goto	l17312
 32871                           
 32872                           ; BSR set to: 2
 32873  0166EE  0E00               	movlw	0
 32874  0166F0  6F12               	movwf	___flmul@a& (0+255),b
 32875  0166F2  0E00               	movlw	0
 32876  0166F4  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32877  0166F6  0E00               	movlw	0
 32878  0166F8  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32879  0166FA  0E00               	movlw	0
 32880  0166FC  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32881  0166FE                     l17312:
 32882                           
 32883                           ; BSR set to: 2
 32884  0166FE  8F14               	bsf	(___flmul@a+2)& (0+255),7,b
 32885  016700  D008               	goto	l3311
 32886  016702                     l17314:
 32887                           
 32888                           ; BSR set to: 2
 32889  016702  0E00               	movlw	0
 32890  016704  6F12               	movwf	___flmul@a& (0+255),b
 32891  016706  0E00               	movlw	0
 32892  016708  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32893  01670A  0E00               	movlw	0
 32894  01670C  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32895  01670E  0E00               	movlw	0
 32896  016710  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32897  016712                     l3311:
 32898                           
 32899                           ; BSR set to: 2
 32900  016712  511B               	movf	___flmul@aexp& (0+255),w,b
 32901  016714  B4D8               	btfsc	status,2,c
 32902  016716  D003               	goto	u20950
 32903                           
 32904                           ; BSR set to: 2
 32905  016718  5120               	movf	___flmul@bexp& (0+255),w,b
 32906  01671A  A4D8               	btfss	status,2,c
 32907  01671C  D009               	goto	l17322
 32908  01671E                     u20950:
 32909                           
 32910                           ; BSR set to: 2
 32911  01671E  0E00               	movlw	0
 32912  016720  6F0E               	movwf	?___flmul& (0+255),b
 32913  016722  0E00               	movlw	0
 32914  016724  6F0F               	movwf	(?___flmul+1)& (0+255),b
 32915  016726  0E00               	movlw	0
 32916  016728  6F10               	movwf	(?___flmul+2)& (0+255),b
 32917  01672A  0E00               	movlw	0
 32918  01672C  6F11               	movwf	(?___flmul+3)& (0+255),b
 32919  01672E  0012               	return	
 32920  016730                     l17322:
 32921                           
 32922                           ; BSR set to: 2
 32923  016730  5114               	movf	(___flmul@a+2)& (0+255),w,b
 32924  016732  030E               	mulwf	___flmul@b& (0+255),b
 32925  016734  CFF3 F225          	movff	prodl,___flmul@temp
 32926  016738  CFF4 F226          	movff	prodh,___flmul@temp+1
 32927                           
 32928                           ; BSR set to: 2
 32929  01673C  5125               	movf	___flmul@temp& (0+255),w,b
 32930  01673E  6F1C               	movwf	___flmul@grs& (0+255),b
 32931  016740  6B1D               	clrf	(___flmul@grs+1)& (0+255),b
 32932  016742  6B1E               	clrf	(___flmul@grs+2)& (0+255),b
 32933  016744  6B1F               	clrf	(___flmul@grs+3)& (0+255),b
 32934                           
 32935                           ; BSR set to: 2
 32936  016746  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 32937  016748  6F21               	movwf	___flmul@prod& (0+255),b
 32938  01674A  6B22               	clrf	(___flmul@prod+1)& (0+255),b
 32939  01674C  6B23               	clrf	(___flmul@prod+2)& (0+255),b
 32940  01674E  6B24               	clrf	(___flmul@prod+3)& (0+255),b
 32941  016750  5113               	movf	(___flmul@a+1)& (0+255),w,b
 32942  016752  030F               	mulwf	(___flmul@b+1)& (0+255),b
 32943  016754  CFF3 F225          	movff	prodl,___flmul@temp
 32944  016758  CFF4 F226          	movff	prodh,___flmul@temp+1
 32945                           
 32946                           ; BSR set to: 2
 32947  01675C  5125               	movf	___flmul@temp& (0+255),w,b
 32948  01675E  271C               	addwf	___flmul@grs& (0+255),f,b
 32949  016760  0E00               	movlw	0
 32950  016762  231D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32951  016764  231E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32952  016766  231F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32953                           
 32954                           ; BSR set to: 2
 32955  016768  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 32956  01676A  2721               	addwf	___flmul@prod& (0+255),f,b
 32957  01676C  0E00               	movlw	0
 32958  01676E  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32959  016770  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32960  016772  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32961  016774  5112               	movf	___flmul@a& (0+255),w,b
 32962  016776  0310               	mulwf	(___flmul@b+2)& (0+255),b
 32963  016778  CFF3 F225          	movff	prodl,___flmul@temp
 32964  01677C  CFF4 F226          	movff	prodh,___flmul@temp+1
 32965                           
 32966                           ; BSR set to: 2
 32967  016780  5125               	movf	___flmul@temp& (0+255),w,b
 32968  016782  271C               	addwf	___flmul@grs& (0+255),f,b
 32969  016784  0E00               	movlw	0
 32970  016786  231D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32971  016788  231E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32972  01678A  231F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32973                           
 32974                           ; BSR set to: 2
 32975  01678C  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 32976  01678E  2721               	addwf	___flmul@prod& (0+255),f,b
 32977  016790  0E00               	movlw	0
 32978  016792  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32979  016794  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32980  016796  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32981                           
 32982                           ; BSR set to: 2
 32983  016798  C21E  F21F         	movff	___flmul@grs+2,___flmul@grs+3
 32984  01679C  C21D  F21E         	movff	___flmul@grs+1,___flmul@grs+2
 32985  0167A0  C21C  F21D         	movff	___flmul@grs,___flmul@grs+1
 32986  0167A4  6B1C               	clrf	___flmul@grs& (0+255),b
 32987                           
 32988                           ; BSR set to: 2
 32989  0167A6  5112               	movf	___flmul@a& (0+255),w,b
 32990  0167A8  030F               	mulwf	(___flmul@b+1)& (0+255),b
 32991  0167AA  CFF3 F225          	movff	prodl,___flmul@temp
 32992  0167AE  CFF4 F226          	movff	prodh,___flmul@temp+1
 32993                           
 32994                           ; BSR set to: 2
 32995  0167B2  5125               	movf	___flmul@temp& (0+255),w,b
 32996  0167B4  271C               	addwf	___flmul@grs& (0+255),f,b
 32997  0167B6  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 32998  0167B8  231D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32999  0167BA  0E00               	movlw	0
 33000  0167BC  231E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 33001  0167BE  0E00               	movlw	0
 33002  0167C0  231F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 33003                           
 33004                           ; BSR set to: 2
 33005  0167C2  5113               	movf	(___flmul@a+1)& (0+255),w,b
 33006  0167C4  030E               	mulwf	___flmul@b& (0+255),b
 33007  0167C6  CFF3 F225          	movff	prodl,___flmul@temp
 33008  0167CA  CFF4 F226          	movff	prodh,___flmul@temp+1
 33009                           
 33010                           ; BSR set to: 2
 33011  0167CE  5125               	movf	___flmul@temp& (0+255),w,b
 33012  0167D0  271C               	addwf	___flmul@grs& (0+255),f,b
 33013  0167D2  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33014  0167D4  231D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 33015  0167D6  0E00               	movlw	0
 33016  0167D8  231E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 33017  0167DA  0E00               	movlw	0
 33018  0167DC  231F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 33019                           
 33020                           ; BSR set to: 2
 33021  0167DE  C21E  F21F         	movff	___flmul@grs+2,___flmul@grs+3
 33022  0167E2  C21D  F21E         	movff	___flmul@grs+1,___flmul@grs+2
 33023  0167E6  C21C  F21D         	movff	___flmul@grs,___flmul@grs+1
 33024  0167EA  6B1C               	clrf	___flmul@grs& (0+255),b
 33025  0167EC  5112               	movf	___flmul@a& (0+255),w,b
 33026  0167EE  030E               	mulwf	___flmul@b& (0+255),b
 33027  0167F0  CFF3 F225          	movff	prodl,___flmul@temp
 33028  0167F4  CFF4 F226          	movff	prodh,___flmul@temp+1
 33029                           
 33030                           ; BSR set to: 2
 33031  0167F8  5125               	movf	___flmul@temp& (0+255),w,b
 33032  0167FA  271C               	addwf	___flmul@grs& (0+255),f,b
 33033  0167FC  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33034  0167FE  231D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 33035  016800  0E00               	movlw	0
 33036  016802  231E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 33037  016804  0E00               	movlw	0
 33038  016806  231F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 33039                           
 33040                           ; BSR set to: 2
 33041  016808  5114               	movf	(___flmul@a+2)& (0+255),w,b
 33042  01680A  030F               	mulwf	(___flmul@b+1)& (0+255),b
 33043  01680C  CFF3 F225          	movff	prodl,___flmul@temp
 33044  016810  CFF4 F226          	movff	prodh,___flmul@temp+1
 33045  016814  5125               	movf	___flmul@temp& (0+255),w,b
 33046  016816  2721               	addwf	___flmul@prod& (0+255),f,b
 33047  016818  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33048  01681A  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 33049  01681C  0E00               	movlw	0
 33050  01681E  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 33051  016820  0E00               	movlw	0
 33052  016822  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 33053                           
 33054                           ; BSR set to: 2
 33055  016824  5113               	movf	(___flmul@a+1)& (0+255),w,b
 33056  016826  0310               	mulwf	(___flmul@b+2)& (0+255),b
 33057  016828  CFF3 F225          	movff	prodl,___flmul@temp
 33058  01682C  CFF4 F226          	movff	prodh,___flmul@temp+1
 33059                           
 33060                           ; BSR set to: 2
 33061  016830  5125               	movf	___flmul@temp& (0+255),w,b
 33062  016832  2721               	addwf	___flmul@prod& (0+255),f,b
 33063  016834  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33064  016836  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 33065  016838  0E00               	movlw	0
 33066  01683A  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 33067  01683C  0E00               	movlw	0
 33068  01683E  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 33069  016840  5114               	movf	(___flmul@a+2)& (0+255),w,b
 33070  016842  0310               	mulwf	(___flmul@b+2)& (0+255),b
 33071  016844  CFF3 F225          	movff	prodl,___flmul@temp
 33072  016848  CFF4 F226          	movff	prodh,___flmul@temp+1
 33073                           
 33074                           ; BSR set to: 2
 33075  01684C  5125               	movf	___flmul@temp& (0+255),w,b
 33076  01684E  6F16               	movwf	??___flmul& (0+255),b
 33077  016850  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33078  016852  6F17               	movwf	(??___flmul+1)& (0+255),b
 33079  016854  6B18               	clrf	(??___flmul+2)& (0+255),b
 33080  016856  6B19               	clrf	(??___flmul+3)& (0+255),b
 33081  016858  C218  F219         	movff	??___flmul+2,??___flmul+3
 33082  01685C  C217  F218         	movff	??___flmul+1,??___flmul+2
 33083  016860  C216  F217         	movff	??___flmul,??___flmul+1
 33084  016864  6B16               	clrf	??___flmul& (0+255),b
 33085  016866  5116               	movf	??___flmul& (0+255),w,b
 33086  016868  2721               	addwf	___flmul@prod& (0+255),f,b
 33087  01686A  5117               	movf	(??___flmul+1)& (0+255),w,b
 33088  01686C  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 33089  01686E  5118               	movf	(??___flmul+2)& (0+255),w,b
 33090  016870  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 33091  016872  5119               	movf	(??___flmul+3)& (0+255),w,b
 33092  016874  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 33093                           
 33094                           ; BSR set to: 2
 33095  016876  C21C  F216         	movff	___flmul@grs,??___flmul
 33096  01687A  C21D  F217         	movff	___flmul@grs+1,??___flmul+1
 33097  01687E  C21E  F218         	movff	___flmul@grs+2,??___flmul+2
 33098  016882  C21F  F219         	movff	___flmul@grs+3,??___flmul+3
 33099  016886  0E19               	movlw	25
 33100  016888  D005               	goto	u20960
 33101  01688A                     u20965:
 33102  01688A  90D8               	bcf	status,0,c
 33103  01688C  3319               	rrcf	(??___flmul+3)& (0+255),f,b
 33104  01688E  3318               	rrcf	(??___flmul+2)& (0+255),f,b
 33105  016890  3317               	rrcf	(??___flmul+1)& (0+255),f,b
 33106  016892  3316               	rrcf	??___flmul& (0+255),f,b
 33107  016894                     u20960:
 33108  016894  2EE8               	decfsz	wreg,f,c
 33109  016896  D7F9               	goto	u20965
 33110  016898  5116               	movf	??___flmul& (0+255),w,b
 33111  01689A  2721               	addwf	___flmul@prod& (0+255),f,b
 33112  01689C  5117               	movf	(??___flmul+1)& (0+255),w,b
 33113  01689E  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 33114  0168A0  5118               	movf	(??___flmul+2)& (0+255),w,b
 33115  0168A2  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 33116  0168A4  5119               	movf	(??___flmul+3)& (0+255),w,b
 33117  0168A6  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 33118                           
 33119                           ; BSR set to: 2
 33120  0168A8  C21E  F21F         	movff	___flmul@grs+2,___flmul@grs+3
 33121  0168AC  C21D  F21E         	movff	___flmul@grs+1,___flmul@grs+2
 33122  0168B0  C21C  F21D         	movff	___flmul@grs,___flmul@grs+1
 33123  0168B4  6B1C               	clrf	___flmul@grs& (0+255),b
 33124                           
 33125                           ; BSR set to: 2
 33126  0168B6  511B               	movf	___flmul@aexp& (0+255),w,b
 33127  0168B8  C220  F216         	movff	___flmul@bexp,??___flmul
 33128  0168BC  6B17               	clrf	(??___flmul+1)& (0+255),b
 33129  0168BE  2716               	addwf	??___flmul& (0+255),f,b
 33130  0168C0  0E00               	movlw	0
 33131  0168C2  2317               	addwfc	(??___flmul+1)& (0+255),f,b
 33132  0168C4  0E82               	movlw	130
 33133  0168C6  2516               	addwf	??___flmul& (0+255),w,b
 33134  0168C8  6F25               	movwf	___flmul@temp& (0+255),b
 33135  0168CA  0EFF               	movlw	255
 33136  0168CC  2117               	addwfc	(??___flmul+1)& (0+255),w,b
 33137  0168CE  6F26               	movwf	(___flmul@temp+1)& (0+255),b
 33138  0168D0  D00F               	goto	l17370
 33139  0168D2                     l17364:
 33140                           
 33141                           ; BSR set to: 2
 33142  0168D2  90D8               	bcf	status,0,c
 33143  0168D4  3721               	rlcf	___flmul@prod& (0+255),f,b
 33144  0168D6  3722               	rlcf	(___flmul@prod+1)& (0+255),f,b
 33145  0168D8  3723               	rlcf	(___flmul@prod+2)& (0+255),f,b
 33146  0168DA  3724               	rlcf	(___flmul@prod+3)& (0+255),f,b
 33147                           
 33148                           ; BSR set to: 2
 33149  0168DC  BF1F               	btfsc	(___flmul@grs+3)& (0+255),7,b
 33150                           
 33151                           ; BSR set to: 2
 33152  0168DE  8121               	bsf	___flmul@prod& (0+255),0,b
 33153                           
 33154                           ; BSR set to: 2
 33155  0168E0  90D8               	bcf	status,0,c
 33156  0168E2  371C               	rlcf	___flmul@grs& (0+255),f,b
 33157  0168E4  371D               	rlcf	(___flmul@grs+1)& (0+255),f,b
 33158  0168E6  371E               	rlcf	(___flmul@grs+2)& (0+255),f,b
 33159  0168E8  371F               	rlcf	(___flmul@grs+3)& (0+255),f,b
 33160  0168EA  0725               	decf	___flmul@temp& (0+255),f,b
 33161  0168EC  A0D8               	btfss	status,0,c
 33162  0168EE  0726               	decf	(___flmul@temp+1)& (0+255),f,b
 33163  0168F0                     l17370:
 33164                           
 33165                           ; BSR set to: 2
 33166  0168F0  AF23               	btfss	(___flmul@prod+2)& (0+255),7,b
 33167  0168F2  D7EF               	goto	l17364
 33168                           
 33169                           ; BSR set to: 2
 33170  0168F4  0E00               	movlw	0
 33171  0168F6  6F1B               	movwf	___flmul@aexp& (0+255),b
 33172                           
 33173                           ; BSR set to: 2
 33174  0168F8  AF1F               	btfss	(___flmul@grs+3)& (0+255),7,b
 33175  0168FA  D017               	goto	l3320
 33176                           
 33177                           ; BSR set to: 2
 33178  0168FC  0EFF               	movlw	255
 33179  0168FE  151C               	andwf	___flmul@grs& (0+255),w,b
 33180  016900  6F16               	movwf	??___flmul& (0+255),b
 33181  016902  0EFF               	movlw	255
 33182  016904  151D               	andwf	(___flmul@grs+1)& (0+255),w,b
 33183  016906  6F17               	movwf	(??___flmul+1)& (0+255),b
 33184  016908  0EFF               	movlw	255
 33185  01690A  151E               	andwf	(___flmul@grs+2)& (0+255),w,b
 33186  01690C  6F18               	movwf	(??___flmul+2)& (0+255),b
 33187  01690E  0E7F               	movlw	127
 33188  016910  151F               	andwf	(___flmul@grs+3)& (0+255),w,b
 33189  016912  6F19               	movwf	(??___flmul+3)& (0+255),b
 33190  016914  5116               	movf	??___flmul& (0+255),w,b
 33191  016916  1117               	iorwf	(??___flmul+1)& (0+255),w,b
 33192  016918  1118               	iorwf	(??___flmul+2)& (0+255),w,b
 33193  01691A  1119               	iorwf	(??___flmul+3)& (0+255),w,b
 33194  01691C  B4D8               	btfsc	status,2,c
 33195  01691E  D003               	goto	l3321
 33196  016920                     u21000:
 33197                           
 33198                           ; BSR set to: 2
 33199  016920  0E01               	movlw	1
 33200  016922  6F1B               	movwf	___flmul@aexp& (0+255),b
 33201  016924  D002               	goto	l3320
 33202  016926                     l3321:
 33203                           
 33204                           ; BSR set to: 2
 33205  016926  B121               	btfsc	___flmul@prod& (0+255),0,b
 33206  016928  D7FB               	goto	u21000
 33207  01692A                     l3320:
 33208                           
 33209                           ; BSR set to: 2
 33210  01692A  511B               	movf	___flmul@aexp& (0+255),w,b
 33211  01692C  B4D8               	btfsc	status,2,c
 33212  01692E  D01F               	goto	l17390
 33213                           
 33214                           ; BSR set to: 2
 33215  016930  0E01               	movlw	1
 33216  016932  2721               	addwf	___flmul@prod& (0+255),f,b
 33217  016934  0E00               	movlw	0
 33218  016936  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 33219  016938  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 33220  01693A  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 33221                           
 33222                           ; BSR set to: 2
 33223  01693C  A124               	btfss	(___flmul@prod+3)& (0+255),0,b
 33224  01693E  D017               	goto	l17390
 33225                           
 33226                           ; BSR set to: 2
 33227  016940  C221  F216         	movff	___flmul@prod,??___flmul
 33228  016944  C222  F217         	movff	___flmul@prod+1,??___flmul+1
 33229  016948  C223  F218         	movff	___flmul@prod+2,??___flmul+2
 33230  01694C  C224  F219         	movff	___flmul@prod+3,??___flmul+3
 33231  016950  3519               	rlcf	(??___flmul+3)& (0+255),w,b
 33232  016952  3319               	rrcf	(??___flmul+3)& (0+255),f,b
 33233  016954  3318               	rrcf	(??___flmul+2)& (0+255),f,b
 33234  016956  3317               	rrcf	(??___flmul+1)& (0+255),f,b
 33235  016958  3316               	rrcf	??___flmul& (0+255),f,b
 33236  01695A  C216  F221         	movff	??___flmul,___flmul@prod
 33237  01695E  C217  F222         	movff	??___flmul+1,___flmul@prod+1
 33238  016962  C218  F223         	movff	??___flmul+2,___flmul@prod+2
 33239  016966  C219  F224         	movff	??___flmul+3,___flmul@prod+3
 33240                           
 33241                           ; BSR set to: 2
 33242  01696A  4B25               	infsnz	___flmul@temp& (0+255),f,b
 33243  01696C  2B26               	incf	(___flmul@temp+1)& (0+255),f,b
 33244  01696E                     l17390:
 33245                           
 33246                           ; BSR set to: 2
 33247  01696E  BF26               	btfsc	(___flmul@temp+1)& (0+255),7,b
 33248  016970  D00D               	goto	l17394
 33249  016972  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33250  016974  E103               	bnz	u21040
 33251  016976  2925               	incf	___flmul@temp& (0+255),w,b
 33252  016978  A0D8               	btfss	status,0,c
 33253  01697A  D008               	goto	l17394
 33254  01697C                     u21040:
 33255                           
 33256                           ; BSR set to: 2
 33257  01697C  0E00               	movlw	0
 33258  01697E  6F21               	movwf	___flmul@prod& (0+255),b
 33259  016980  0E00               	movlw	0
 33260  016982  6F22               	movwf	(___flmul@prod+1)& (0+255),b
 33261  016984  0E80               	movlw	128
 33262  016986  6F23               	movwf	(___flmul@prod+2)& (0+255),b
 33263  016988  0E7F               	movlw	127
 33264  01698A  D020               	goto	L25
 33265  01698C                     l17394:
 33266                           
 33267                           ; BSR set to: 2
 33268  01698C  BF26               	btfsc	(___flmul@temp+1)& (0+255),7,b
 33269  01698E  D005               	goto	u21050
 33270  016990  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33271  016992  E10E               	bnz	l3328
 33272  016994  0525               	decf	___flmul@temp& (0+255),w,b
 33273  016996  B0D8               	btfsc	status,0,c
 33274  016998  D00B               	goto	l3328
 33275  01699A                     u21050:
 33276                           
 33277                           ; BSR set to: 2
 33278  01699A  0E00               	movlw	0
 33279  01699C  6F21               	movwf	___flmul@prod& (0+255),b
 33280  01699E  0E00               	movlw	0
 33281  0169A0  6F22               	movwf	(___flmul@prod+1)& (0+255),b
 33282  0169A2  0E00               	movlw	0
 33283  0169A4  6F23               	movwf	(___flmul@prod+2)& (0+255),b
 33284  0169A6  0E00               	movlw	0
 33285  0169A8  6F24               	movwf	(___flmul@prod+3)& (0+255),b
 33286  0169AA  0E00               	movlw	0
 33287  0169AC  6F1A               	movwf	___flmul@sign& (0+255),b
 33288  0169AE  D00F               	goto	l17406
 33289  0169B0                     l3328:
 33290                           
 33291                           ; BSR set to: 2
 33292  0169B0  C225  F220         	movff	___flmul@temp,___flmul@bexp
 33293                           
 33294                           ; BSR set to: 2
 33295  0169B4  0EFF               	movlw	255
 33296  0169B6  1721               	andwf	___flmul@prod& (0+255),f,b
 33297  0169B8  0EFF               	movlw	255
 33298  0169BA  1722               	andwf	(___flmul@prod+1)& (0+255),f,b
 33299  0169BC  0E7F               	movlw	127
 33300  0169BE  1723               	andwf	(___flmul@prod+2)& (0+255),f,b
 33301  0169C0  0E00               	movlw	0
 33302  0169C2  1724               	andwf	(___flmul@prod+3)& (0+255),f,b
 33303                           
 33304                           ; BSR set to: 2
 33305  0169C4  B120               	btfsc	___flmul@bexp& (0+255),0,b
 33306                           
 33307                           ; BSR set to: 2
 33308  0169C6  8F23               	bsf	(___flmul@prod+2)& (0+255),7,b
 33309                           
 33310                           ; BSR set to: 2
 33311  0169C8  90D8               	bcf	status,0,c
 33312  0169CA  3120               	rrcf	___flmul@bexp& (0+255),w,b
 33313  0169CC                     L25:
 33314  0169CC  6F24               	movwf	(___flmul@prod+3)& (0+255),b
 33315  0169CE                     l17406:
 33316                           
 33317                           ; BSR set to: 2
 33318  0169CE  511A               	movf	___flmul@sign& (0+255),w,b
 33319  0169D0  1324               	iorwf	(___flmul@prod+3)& (0+255),f,b
 33320                           
 33321                           ; BSR set to: 2
 33322  0169D2  C221  F20E         	movff	___flmul@prod,?___flmul
 33323  0169D6  C222  F20F         	movff	___flmul@prod+1,?___flmul+1
 33324  0169DA  C223  F210         	movff	___flmul@prod+2,?___flmul+2
 33325  0169DE  C224  F211         	movff	___flmul@prod+3,?___flmul+3
 33326                           
 33327                           ; BSR set to: 2
 33328  0169E2  0012               	return		;funcret
 33329  0169E4                     __end_of___flmul:
 33330                           	opt callstack 0
 33331                           
 33332 ;; *************** function _I2C2_MasterWrite *****************
 33333 ;; Defined at:
 33334 ;;		line 601 in file "mcc_generated_files/i2c2.c"
 33335 ;; Parameters:    Size  Location     Type
 33336 ;;  pdata           2    9[BANK2 ] PTR unsigned char 
 33337 ;;		 -> OLED_PutChar@data_array(9), OLED_Data@data_array(2), OLED_Command@data_array(2), LM73TempSensorInitialize@output
      +_data_array(2), 
 33338 ;;		 -> NULL(0), 
 33339 ;;  length          1   11[BANK2 ] unsigned char 
 33340 ;;  address         2   12[BANK2 ] unsigned int 
 33341 ;;  pflag           2   14[BANK2 ] PTR enum E9433
 33342 ;;		 -> I2C_STATUS(1), 
 33343 ;; Auto vars:     Size  Location     Type
 33344 ;;		None
 33345 ;; Return value:  Size  Location     Type
 33346 ;;                  1    wreg      void 
 33347 ;; Registers used:
 33348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33349 ;; Tracked objects:
 33350 ;;		On entry : 0/0
 33351 ;;		On exit  : 0/0
 33352 ;;		Unchanged: 0/0
 33353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33354 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33357 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33358 ;;Total ram usage:        7 bytes
 33359 ;; Hardware stack levels used:    1
 33360 ;; Hardware stack levels required when called:   13
 33361 ;; This function calls:
 33362 ;;		_I2C2_MasterTRBInsert
 33363 ;;		_I2C2_MasterWriteTRBBuild
 33364 ;; This function is called by:
 33365 ;;		_LM73TempSensorInitialize
 33366 ;;		_LM73AcquisitionHandler
 33367 ;;		_OLED_Command
 33368 ;;		_OLED_PutChar
 33369 ;;		_OLED_Data
 33370 ;; This function uses a non-reentrant model
 33371 ;;
 33372                           
 33373                           	psect	text116
 33374  01B92C                     __ptext116:
 33375                           	opt callstack 0
 33376  01B92C                     _I2C2_MasterWrite:
 33377                           	opt callstack 13
 33378                           
 33379                           ;i2c2.c: 607: static I2C2_TRANSACTION_REQUEST_BLOCK trBlock;;i2c2.c: 610: if (i2c2_objec
      +                          t.trStatus.s.full != 1)
 33380                           
 33381                           ; BSR set to: 2
 33382                           ;incstack = 0
 33383  01B92C  0101               	movlb	1	; () banked
 33384  01B92E  B165               	btfsc	(_i2c2_object+4)& (0+255),0,b
 33385  01B930  D01E               	goto	l18514
 33386                           
 33387                           ; BSR set to: 1
 33388                           ;i2c2.c: 611: {;i2c2.c: 612: I2C2_MasterWriteTRBBuild(&trBlock, pdata, length, address);
 33389  01B932  0E9E               	movlw	low I2C2_MasterWrite@trBlock
 33390  01B934  0102               	movlb	2	; () banked
 33391  01B936  6F00               	movwf	I2C2_MasterWriteTRBBuild@ptrb& (0+255),b
 33392  01B938  0E01               	movlw	high I2C2_MasterWrite@trBlock
 33393  01B93A  6F01               	movwf	(I2C2_MasterWriteTRBBuild@ptrb+1)& (0+255),b
 33394  01B93C  C209  F202         	movff	I2C2_MasterWrite@pdata,I2C2_MasterWriteTRBBuild@pdata
 33395  01B940  C20A  F203         	movff	I2C2_MasterWrite@pdata+1,I2C2_MasterWriteTRBBuild@pdata+1
 33396  01B944  C20B  F204         	movff	I2C2_MasterWrite@length,I2C2_MasterWriteTRBBuild@length
 33397  01B948  C20C  F205         	movff	I2C2_MasterWrite@address,I2C2_MasterWriteTRBBuild@address
 33398  01B94C  C20D  F206         	movff	I2C2_MasterWrite@address+1,I2C2_MasterWriteTRBBuild@address+1
 33399  01B950  EC99  F0DD         	call	_I2C2_MasterWriteTRBBuild	;wreg free
 33400                           
 33401                           ;i2c2.c: 613: I2C2_MasterTRBInsert(1, &trBlock, pflag);
 33402  01B954  0E9E               	movlw	low I2C2_MasterWrite@trBlock
 33403  01B956  0102               	movlb	2	; () banked
 33404  01B958  6F00               	movwf	I2C2_MasterTRBInsert@ptrb_list& (0+255),b
 33405  01B95A  0E01               	movlw	high I2C2_MasterWrite@trBlock
 33406  01B95C  6F01               	movwf	(I2C2_MasterTRBInsert@ptrb_list+1)& (0+255),b
 33407  01B95E  C20E  F202         	movff	I2C2_MasterWrite@pflag,I2C2_MasterTRBInsert@pflag
 33408  01B962  C20F  F203         	movff	I2C2_MasterWrite@pflag+1,I2C2_MasterTRBInsert@pflag+1
 33409  01B966  0E01               	movlw	1
 33410  01B968  ECAE  F0D5         	call	_I2C2_MasterTRBInsert
 33411                           
 33412                           ;i2c2.c: 614: }
 33413  01B96C  0012               	return	
 33414  01B96E                     l18514:
 33415                           
 33416                           ; BSR set to: 1
 33417                           ;i2c2.c: 615: else;i2c2.c: 616: {;i2c2.c: 617: *pflag = I2C2_MESSAGE_FAIL;
 33418  01B96E  C20E  FFD9         	movff	I2C2_MasterWrite@pflag,fsr2l
 33419  01B972  C20F  FFDA         	movff	I2C2_MasterWrite@pflag+1,fsr2h
 33420  01B976  0E01               	movlw	1
 33421  01B978  6EDF               	movwf	indf2,c
 33422  01B97A  0012               	return		;funcret
 33423  01B97C                     __end_of_I2C2_MasterWrite:
 33424                           	opt callstack 0
 33425                           
 33426 ;; *************** function _I2C2_MasterWriteTRBBuild *****************
 33427 ;; Defined at:
 33428 ;;		line 722 in file "mcc_generated_files/i2c2.c"
 33429 ;; Parameters:    Size  Location     Type
 33430 ;;  ptrb            2    0[BANK2 ] PTR struct .
 33431 ;;		 -> I2C2_MasterWrite@trBlock(5), 
 33432 ;;  pdata           2    2[BANK2 ] PTR unsigned char 
 33433 ;;		 -> OLED_PutChar@data_array(9), OLED_Data@data_array(2), OLED_Command@data_array(2), LM73TempSensorInitialize@output
      +_data_array(2), 
 33434 ;;		 -> NULL(0), 
 33435 ;;  length          1    4[BANK2 ] unsigned char 
 33436 ;;  address         2    5[BANK2 ] unsigned int 
 33437 ;; Auto vars:     Size  Location     Type
 33438 ;;		None
 33439 ;; Return value:  Size  Location     Type
 33440 ;;                  1    wreg      void 
 33441 ;; Registers used:
 33442 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33443 ;; Tracked objects:
 33444 ;;		On entry : 0/0
 33445 ;;		On exit  : 0/0
 33446 ;;		Unchanged: 0/0
 33447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33448 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33450 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33451 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33452 ;;Total ram usage:        9 bytes
 33453 ;; Hardware stack levels used:    1
 33454 ;; Hardware stack levels required when called:   11
 33455 ;; This function calls:
 33456 ;;		Nothing
 33457 ;; This function is called by:
 33458 ;;		_I2C2_MasterWrite
 33459 ;; This function uses a non-reentrant model
 33460 ;;
 33461                           
 33462                           	psect	text117
 33463  01BB32                     __ptext117:
 33464                           	opt callstack 0
 33465  01BB32                     _I2C2_MasterWriteTRBBuild:
 33466                           	opt callstack 14
 33467                           
 33468                           ;i2c2.c: 728: ptrb->address = address << 1;
 33469                           
 33470                           ;incstack = 0
 33471  01BB32  C205  F207         	movff	I2C2_MasterWriteTRBBuild@address,??_I2C2_MasterWriteTRBBuild
 33472  01BB36  C206  F208         	movff	I2C2_MasterWriteTRBBuild@address+1,??_I2C2_MasterWriteTRBBuild+1
 33473  01BB3A  90D8               	bcf	status,0,c
 33474  01BB3C  0102               	movlb	2	; () banked
 33475  01BB3E  3707               	rlcf	??_I2C2_MasterWriteTRBBuild& (0+255),f,b
 33476  01BB40  3708               	rlcf	(??_I2C2_MasterWriteTRBBuild+1)& (0+255),f,b
 33477  01BB42  C200  FFD9         	movff	I2C2_MasterWriteTRBBuild@ptrb,fsr2l
 33478  01BB46  C201  FFDA         	movff	I2C2_MasterWriteTRBBuild@ptrb+1,fsr2h
 33479  01BB4A  C207  FFDE         	movff	??_I2C2_MasterWriteTRBBuild,postinc2
 33480  01BB4E  C208  FFDD         	movff	??_I2C2_MasterWriteTRBBuild+1,postdec2
 33481                           
 33482                           ; BSR set to: 2
 33483                           ;i2c2.c: 729: ptrb->length = length;
 33484  01BB52  EE20 F002          	lfsr	2,2
 33485  01BB56  5100               	movf	I2C2_MasterWriteTRBBuild@ptrb& (0+255),w,b
 33486  01BB58  26D9               	addwf	fsr2l,f,c
 33487  01BB5A  5101               	movf	(I2C2_MasterWriteTRBBuild@ptrb+1)& (0+255),w,b
 33488  01BB5C  22DA               	addwfc	fsr2h,f,c
 33489  01BB5E  C204  FFDF         	movff	I2C2_MasterWriteTRBBuild@length,indf2
 33490                           
 33491                           ; BSR set to: 2
 33492                           ;i2c2.c: 730: ptrb->pbuffer = pdata;
 33493  01BB62  EE20 F003          	lfsr	2,3
 33494  01BB66  5100               	movf	I2C2_MasterWriteTRBBuild@ptrb& (0+255),w,b
 33495  01BB68  26D9               	addwf	fsr2l,f,c
 33496  01BB6A  5101               	movf	(I2C2_MasterWriteTRBBuild@ptrb+1)& (0+255),w,b
 33497  01BB6C  22DA               	addwfc	fsr2h,f,c
 33498  01BB6E  C202  FFDE         	movff	I2C2_MasterWriteTRBBuild@pdata,postinc2
 33499  01BB72  C203  FFDD         	movff	I2C2_MasterWriteTRBBuild@pdata+1,postdec2
 33500                           
 33501                           ; BSR set to: 2
 33502  01BB76  0012               	return		;funcret
 33503  01BB78                     __end_of_I2C2_MasterWriteTRBBuild:
 33504                           	opt callstack 0
 33505                           
 33506 ;; *************** function _I2C2_MasterRead *****************
 33507 ;; Defined at:
 33508 ;;		line 622 in file "mcc_generated_files/i2c2.c"
 33509 ;; Parameters:    Size  Location     Type
 33510 ;;  pdata           2    9[BANK2 ] PTR unsigned char 
 33511 ;;		 -> LM73_temp_results(18), 
 33512 ;;  length          1   11[BANK2 ] unsigned char 
 33513 ;;  address         2   12[BANK2 ] unsigned int 
 33514 ;;  pflag           2   14[BANK2 ] PTR enum E9433
 33515 ;;		 -> I2C_STATUS(1), 
 33516 ;; Auto vars:     Size  Location     Type
 33517 ;;		None
 33518 ;; Return value:  Size  Location     Type
 33519 ;;                  1    wreg      void 
 33520 ;; Registers used:
 33521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33522 ;; Tracked objects:
 33523 ;;		On entry : 0/0
 33524 ;;		On exit  : 0/0
 33525 ;;		Unchanged: 0/0
 33526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33527 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33530 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33531 ;;Total ram usage:        7 bytes
 33532 ;; Hardware stack levels used:    1
 33533 ;; Hardware stack levels required when called:   13
 33534 ;; This function calls:
 33535 ;;		_I2C2_MasterReadTRBBuild
 33536 ;;		_I2C2_MasterTRBInsert
 33537 ;; This function is called by:
 33538 ;;		_LM73AcquisitionHandler
 33539 ;; This function uses a non-reentrant model
 33540 ;;
 33541                           
 33542                           	psect	text118
 33543  01B97C                     __ptext118:
 33544                           	opt callstack 0
 33545  01B97C                     _I2C2_MasterRead:
 33546                           	opt callstack 16
 33547                           
 33548                           ;i2c2.c: 628: static I2C2_TRANSACTION_REQUEST_BLOCK trBlock;;i2c2.c: 632: if (i2c2_objec
      +                          t.trStatus.s.full != 1)
 33549                           
 33550                           ; BSR set to: 2
 33551                           ;incstack = 0
 33552  01B97C  0101               	movlb	1	; () banked
 33553  01B97E  B165               	btfsc	(_i2c2_object+4)& (0+255),0,b
 33554  01B980  D01E               	goto	l20922
 33555                           
 33556                           ; BSR set to: 1
 33557                           ;i2c2.c: 633: {;i2c2.c: 634: I2C2_MasterReadTRBBuild(&trBlock, pdata, length, address);
 33558  01B982  0E99               	movlw	low I2C2_MasterRead@trBlock
 33559  01B984  0102               	movlb	2	; () banked
 33560  01B986  6F00               	movwf	I2C2_MasterReadTRBBuild@ptrb& (0+255),b
 33561  01B988  0E01               	movlw	high I2C2_MasterRead@trBlock
 33562  01B98A  6F01               	movwf	(I2C2_MasterReadTRBBuild@ptrb+1)& (0+255),b
 33563  01B98C  C209  F202         	movff	I2C2_MasterRead@pdata,I2C2_MasterReadTRBBuild@pdata
 33564  01B990  C20A  F203         	movff	I2C2_MasterRead@pdata+1,I2C2_MasterReadTRBBuild@pdata+1
 33565  01B994  C20B  F204         	movff	I2C2_MasterRead@length,I2C2_MasterReadTRBBuild@length
 33566  01B998  C20C  F205         	movff	I2C2_MasterRead@address,I2C2_MasterReadTRBBuild@address
 33567  01B99C  C20D  F206         	movff	I2C2_MasterRead@address+1,I2C2_MasterReadTRBBuild@address+1
 33568  01B9A0  ECCC  F0DB         	call	_I2C2_MasterReadTRBBuild	;wreg free
 33569                           
 33570                           ;i2c2.c: 635: I2C2_MasterTRBInsert(1, &trBlock, pflag);
 33571  01B9A4  0E99               	movlw	low I2C2_MasterRead@trBlock
 33572  01B9A6  0102               	movlb	2	; () banked
 33573  01B9A8  6F00               	movwf	I2C2_MasterTRBInsert@ptrb_list& (0+255),b
 33574  01B9AA  0E01               	movlw	high I2C2_MasterRead@trBlock
 33575  01B9AC  6F01               	movwf	(I2C2_MasterTRBInsert@ptrb_list+1)& (0+255),b
 33576  01B9AE  C20E  F202         	movff	I2C2_MasterRead@pflag,I2C2_MasterTRBInsert@pflag
 33577  01B9B2  C20F  F203         	movff	I2C2_MasterRead@pflag+1,I2C2_MasterTRBInsert@pflag+1
 33578  01B9B6  0E01               	movlw	1
 33579  01B9B8  ECAE  F0D5         	call	_I2C2_MasterTRBInsert
 33580                           
 33581                           ;i2c2.c: 636: }
 33582  01B9BC  0012               	return	
 33583  01B9BE                     l20922:
 33584                           
 33585                           ; BSR set to: 1
 33586                           ;i2c2.c: 637: else;i2c2.c: 638: {;i2c2.c: 639: *pflag = I2C2_MESSAGE_FAIL;
 33587  01B9BE  C20E  FFD9         	movff	I2C2_MasterRead@pflag,fsr2l
 33588  01B9C2  C20F  FFDA         	movff	I2C2_MasterRead@pflag+1,fsr2h
 33589  01B9C6  0E01               	movlw	1
 33590  01B9C8  6EDF               	movwf	indf2,c
 33591  01B9CA  0012               	return		;funcret
 33592  01B9CC                     __end_of_I2C2_MasterRead:
 33593                           	opt callstack 0
 33594                           
 33595 ;; *************** function _I2C2_MasterTRBInsert *****************
 33596 ;; Defined at:
 33597 ;;		line 655 in file "mcc_generated_files/i2c2.c"
 33598 ;; Parameters:    Size  Location     Type
 33599 ;;  count           1    wreg     unsigned char 
 33600 ;;  ptrb_list       2    0[BANK2 ] PTR struct .
 33601 ;;		 -> I2C2_MasterRead@trBlock(5), I2C2_MasterWrite@trBlock(5), 
 33602 ;;  pflag           2    2[BANK2 ] PTR enum E9433
 33603 ;;		 -> I2C_STATUS(1), 
 33604 ;; Auto vars:     Size  Location     Type
 33605 ;;  count           1    5[BANK2 ] unsigned char 
 33606 ;; Return value:  Size  Location     Type
 33607 ;;                  1    wreg      void 
 33608 ;; Registers used:
 33609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33610 ;; Tracked objects:
 33611 ;;		On entry : 0/0
 33612 ;;		On exit  : 0/0
 33613 ;;		Unchanged: 0/0
 33614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33615 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33616 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33617 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33618 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33619 ;;Total ram usage:        6 bytes
 33620 ;; Hardware stack levels used:    1
 33621 ;; Hardware stack levels required when called:   12
 33622 ;; This function calls:
 33623 ;;		_I2C2_WaitForLastPacketToComplete
 33624 ;; This function is called by:
 33625 ;;		_I2C2_MasterWrite
 33626 ;;		_I2C2_MasterRead
 33627 ;; This function uses a non-reentrant model
 33628 ;;
 33629                           
 33630                           	psect	text119
 33631  01AB5C                     __ptext119:
 33632                           	opt callstack 0
 33633  01AB5C                     _I2C2_MasterTRBInsert:
 33634                           	opt callstack 13
 33635                           
 33636                           ;incstack = 0
 33637                           ;I2C2_MasterTRBInsert@count stored from wreg
 33638  01AB5C  0102               	movlb	2	; () banked
 33639  01AB5E  6F05               	movwf	I2C2_MasterTRBInsert@count& (0+255),b
 33640                           
 33641                           ;i2c2.c: 662: if (i2c2_object.trStatus.s.full != 1)
 33642  01AB60  0101               	movlb	1	; () banked
 33643  01AB62  B165               	btfsc	(_i2c2_object+4)& (0+255),0,b
 33644  01AB64  D039               	goto	l17932
 33645                           
 33646                           ; BSR set to: 1
 33647                           ;i2c2.c: 663: {;i2c2.c: 664: *pflag = I2C2_MESSAGE_PENDING;
 33648  01AB66  C202  FFD9         	movff	I2C2_MasterTRBInsert@pflag,fsr2l
 33649  01AB6A  C203  FFDA         	movff	I2C2_MasterTRBInsert@pflag+1,fsr2h
 33650  01AB6E  0E02               	movlw	2
 33651  01AB70  6EDF               	movwf	indf2,c
 33652                           
 33653                           ; BSR set to: 1
 33654                           ;i2c2.c: 666: i2c2_object.pTrTail->ptrb_list = ptrb_list;
 33655  01AB72  EE20 F001          	lfsr	2,1
 33656  01AB76  5161               	movf	_i2c2_object& (0+255),w,b
 33657  01AB78  26D9               	addwf	fsr2l,f,c
 33658  01AB7A  5162               	movf	(_i2c2_object+1)& (0+255),w,b
 33659  01AB7C  22DA               	addwfc	fsr2h,f,c
 33660  01AB7E  C200  FFDE         	movff	I2C2_MasterTRBInsert@ptrb_list,postinc2
 33661  01AB82  C201  FFDD         	movff	I2C2_MasterTRBInsert@ptrb_list+1,postdec2
 33662                           
 33663                           ; BSR set to: 1
 33664                           ;i2c2.c: 667: i2c2_object.pTrTail->count = count;
 33665  01AB86  C161  FFD9         	movff	_i2c2_object,fsr2l
 33666  01AB8A  C162  FFDA         	movff	_i2c2_object+1,fsr2h
 33667  01AB8E  C205  FFDF         	movff	I2C2_MasterTRBInsert@count,indf2
 33668                           
 33669                           ; BSR set to: 1
 33670                           ;i2c2.c: 668: i2c2_object.pTrTail->pTrFlag = pflag;
 33671  01AB92  EE20 F003          	lfsr	2,3
 33672  01AB96  5161               	movf	_i2c2_object& (0+255),w,b
 33673  01AB98  26D9               	addwf	fsr2l,f,c
 33674  01AB9A  5162               	movf	(_i2c2_object+1)& (0+255),w,b
 33675  01AB9C  22DA               	addwfc	fsr2h,f,c
 33676  01AB9E  C202  FFDE         	movff	I2C2_MasterTRBInsert@pflag,postinc2
 33677  01ABA2  C203  FFDD         	movff	I2C2_MasterTRBInsert@pflag+1,postdec2
 33678                           
 33679                           ; BSR set to: 1
 33680                           ;i2c2.c: 669: i2c2_object.pTrTail++;
 33681  01ABA6  0E05               	movlw	5
 33682  01ABA8  2761               	addwf	_i2c2_object& (0+255),f,b
 33683  01ABAA  0E00               	movlw	0
 33684  01ABAC  2362               	addwfc	(_i2c2_object+1)& (0+255),f,b
 33685                           
 33686                           ; BSR set to: 1
 33687                           ;i2c2.c: 672: if (i2c2_object.pTrTail == (i2c2_tr_queue + 1))
 33688  01ABAE  0EA8               	movlw	low (_i2c2_tr_queue+5)
 33689  01ABB0  1961               	xorwf	_i2c2_object& (0+255),w,b
 33690  01ABB2  E108               	bnz	l17928
 33691  01ABB4  0E01               	movlw	high (_i2c2_tr_queue+5)
 33692  01ABB6  1962               	xorwf	(_i2c2_object+1)& (0+255),w,b
 33693  01ABB8  A4D8               	btfss	status,2,c
 33694  01ABBA  D004               	goto	l17928
 33695                           
 33696                           ; BSR set to: 1
 33697                           ;i2c2.c: 673: {;i2c2.c: 675: i2c2_object.pTrTail = i2c2_tr_queue;
 33698  01ABBC  0EA3               	movlw	low _i2c2_tr_queue
 33699  01ABBE  6F61               	movwf	_i2c2_object& (0+255),b
 33700  01ABC0  0E01               	movlw	high _i2c2_tr_queue
 33701  01ABC2  6F62               	movwf	(_i2c2_object+1)& (0+255),b
 33702  01ABC4                     l17928:
 33703                           
 33704                           ; BSR set to: 1
 33705                           ;i2c2.c: 676: };i2c2.c: 680: i2c2_object.trStatus.s.empty = 0;
 33706  01ABC4  9365               	bcf	(_i2c2_object+4)& (0+255),1,b
 33707                           
 33708                           ;i2c2.c: 683: if (i2c2_object.pTrHead == i2c2_object.pTrTail)
 33709  01ABC6  5161               	movf	_i2c2_object& (0+255),w,b
 33710  01ABC8  1963               	xorwf	(_i2c2_object+2)& (0+255),w,b
 33711  01ABCA  E10C               	bnz	l17934
 33712  01ABCC  5162               	movf	(_i2c2_object+1)& (0+255),w,b
 33713  01ABCE  1964               	xorwf	(_i2c2_object+3)& (0+255),w,b
 33714  01ABD0  A4D8               	btfss	status,2,c
 33715  01ABD2  D008               	goto	l17934
 33716                           
 33717                           ; BSR set to: 1
 33718                           ;i2c2.c: 684: {;i2c2.c: 686: i2c2_object.trStatus.s.full = 1;
 33719  01ABD4  8165               	bsf	(_i2c2_object+4)& (0+255),0,b
 33720  01ABD6  D006               	goto	l17934
 33721  01ABD8                     l17932:
 33722                           
 33723                           ; BSR set to: 1
 33724                           ;i2c2.c: 690: else;i2c2.c: 691: {;i2c2.c: 692: *pflag = I2C2_MESSAGE_FAIL;
 33725  01ABD8  C202  FFD9         	movff	I2C2_MasterTRBInsert@pflag,fsr2l
 33726  01ABDC  C203  FFDA         	movff	I2C2_MasterTRBInsert@pflag+1,fsr2h
 33727  01ABE0  0E01               	movlw	1
 33728  01ABE2  6EDF               	movwf	indf2,c
 33729  01ABE4                     l17934:
 33730                           
 33731                           ; BSR set to: 1
 33732                           ;i2c2.c: 693: };i2c2.c: 696: if (*pflag == I2C2_MESSAGE_PENDING)
 33733  01ABE4  C202  FFD9         	movff	I2C2_MasterTRBInsert@pflag,fsr2l
 33734  01ABE8  C203  FFDA         	movff	I2C2_MasterTRBInsert@pflag+1,fsr2h
 33735  01ABEC  0E02               	movlw	2
 33736  01ABEE  18DE               	xorwf	postinc2,w,c
 33737  01ABF0  A4D8               	btfss	status,2,c
 33738  01ABF2  0012               	return	
 33739                           
 33740                           ; BSR set to: 1
 33741                           ;i2c2.c: 697: {;i2c2.c: 698: I2C2_WaitForLastPacketToComplete();
 33742  01ABF4  EC13  F0E4         	call	_I2C2_WaitForLastPacketToComplete	;wreg free
 33743                           
 33744                           ;i2c2.c: 703: PIR3bits.SSP2IF = 1;
 33745  01ABF8  010E               	movlb	14	; () banked
 33746  01ABFA  85CD               	bsf	205,2,b	;volatile
 33747  01ABFC  0012               	return		;funcret
 33748  01ABFE                     __end_of_I2C2_MasterTRBInsert:
 33749                           	opt callstack 0
 33750                           
 33751 ;; *************** function _I2C2_WaitForLastPacketToComplete *****************
 33752 ;; Defined at:
 33753 ;;		line 645 in file "mcc_generated_files/i2c2.c"
 33754 ;; Parameters:    Size  Location     Type
 33755 ;;		None
 33756 ;; Auto vars:     Size  Location     Type
 33757 ;;		None
 33758 ;; Return value:  Size  Location     Type
 33759 ;;                  1    wreg      void 
 33760 ;; Registers used:
 33761 ;;		wreg, status,2
 33762 ;; Tracked objects:
 33763 ;;		On entry : 0/0
 33764 ;;		On exit  : 0/0
 33765 ;;		Unchanged: 0/0
 33766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33771 ;;Total ram usage:        0 bytes
 33772 ;; Hardware stack levels used:    1
 33773 ;; Hardware stack levels required when called:   11
 33774 ;; This function calls:
 33775 ;;		Nothing
 33776 ;; This function is called by:
 33777 ;;		_I2C2_MasterTRBInsert
 33778 ;; This function uses a non-reentrant model
 33779 ;;
 33780                           
 33781                           	psect	text120
 33782  01C826                     __ptext120:
 33783                           	opt callstack 0
 33784  01C826                     _I2C2_WaitForLastPacketToComplete:
 33785                           	opt callstack 13
 33786                           
 33787                           ;i2c2.c: 647: while(i2c2_state != S_MASTER_IDLE)
 33788                           
 33789                           ;incstack = 0
 33790  01C826  0100               	movlb	0	; () banked
 33791  01C828  51DB               	movf	_i2c2_state& (0+255),w,b
 33792  01C82A  B4D8               	btfsc	status,2,c
 33793  01C82C  0012               	return	
 33794  01C82E  D7FB               	goto	_I2C2_WaitForLastPacketToComplete
 33795  01C830                     __end_of_I2C2_WaitForLastPacketToComplete:
 33796                           	opt callstack 0
 33797                           
 33798 ;; *************** function _I2C2_MasterReadTRBBuild *****************
 33799 ;; Defined at:
 33800 ;;		line 709 in file "mcc_generated_files/i2c2.c"
 33801 ;; Parameters:    Size  Location     Type
 33802 ;;  ptrb            2    0[BANK2 ] PTR struct .
 33803 ;;		 -> I2C2_MasterRead@trBlock(5), 
 33804 ;;  pdata           2    2[BANK2 ] PTR unsigned char 
 33805 ;;		 -> LM73_temp_results(18), 
 33806 ;;  length          1    4[BANK2 ] unsigned char 
 33807 ;;  address         2    5[BANK2 ] unsigned int 
 33808 ;; Auto vars:     Size  Location     Type
 33809 ;;		None
 33810 ;; Return value:  Size  Location     Type
 33811 ;;                  1    wreg      void 
 33812 ;; Registers used:
 33813 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33814 ;; Tracked objects:
 33815 ;;		On entry : 0/0
 33816 ;;		On exit  : 0/0
 33817 ;;		Unchanged: 0/0
 33818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33819 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33821 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33822 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33823 ;;Total ram usage:        9 bytes
 33824 ;; Hardware stack levels used:    1
 33825 ;; Hardware stack levels required when called:   11
 33826 ;; This function calls:
 33827 ;;		Nothing
 33828 ;; This function is called by:
 33829 ;;		_I2C2_MasterRead
 33830 ;; This function uses a non-reentrant model
 33831 ;;
 33832                           
 33833                           	psect	text121
 33834  01B798                     __ptext121:
 33835                           	opt callstack 0
 33836  01B798                     _I2C2_MasterReadTRBBuild:
 33837                           	opt callstack 17
 33838                           
 33839                           ;i2c2.c: 715: ptrb->address = address << 1;
 33840                           
 33841                           ; BSR set to: 0
 33842                           ;incstack = 0
 33843  01B798  C205  F207         	movff	I2C2_MasterReadTRBBuild@address,??_I2C2_MasterReadTRBBuild
 33844  01B79C  C206  F208         	movff	I2C2_MasterReadTRBBuild@address+1,??_I2C2_MasterReadTRBBuild+1
 33845  01B7A0  90D8               	bcf	status,0,c
 33846  01B7A2  0102               	movlb	2	; () banked
 33847  01B7A4  3707               	rlcf	??_I2C2_MasterReadTRBBuild& (0+255),f,b
 33848  01B7A6  3708               	rlcf	(??_I2C2_MasterReadTRBBuild+1)& (0+255),f,b
 33849  01B7A8  C200  FFD9         	movff	I2C2_MasterReadTRBBuild@ptrb,fsr2l
 33850  01B7AC  C201  FFDA         	movff	I2C2_MasterReadTRBBuild@ptrb+1,fsr2h
 33851  01B7B0  C207  FFDE         	movff	??_I2C2_MasterReadTRBBuild,postinc2
 33852  01B7B4  C208  FFDD         	movff	??_I2C2_MasterReadTRBBuild+1,postdec2
 33853                           
 33854                           ; BSR set to: 2
 33855                           ;i2c2.c: 717: ptrb->address |= 0x01;
 33856  01B7B8  C200  FFD9         	movff	I2C2_MasterReadTRBBuild@ptrb,fsr2l
 33857  01B7BC  C201  FFDA         	movff	I2C2_MasterReadTRBBuild@ptrb+1,fsr2h
 33858  01B7C0  0E00               	movlw	0
 33859  01B7C2  80DB               	bsf	plusw2,0,c
 33860                           
 33861                           ; BSR set to: 2
 33862                           ;i2c2.c: 718: ptrb->length = length;
 33863  01B7C4  EE20 F002          	lfsr	2,2
 33864  01B7C8  5100               	movf	I2C2_MasterReadTRBBuild@ptrb& (0+255),w,b
 33865  01B7CA  26D9               	addwf	fsr2l,f,c
 33866  01B7CC  5101               	movf	(I2C2_MasterReadTRBBuild@ptrb+1)& (0+255),w,b
 33867  01B7CE  22DA               	addwfc	fsr2h,f,c
 33868  01B7D0  C204  FFDF         	movff	I2C2_MasterReadTRBBuild@length,indf2
 33869                           
 33870                           ; BSR set to: 2
 33871                           ;i2c2.c: 719: ptrb->pbuffer = pdata;
 33872  01B7D4  EE20 F003          	lfsr	2,3
 33873  01B7D8  5100               	movf	I2C2_MasterReadTRBBuild@ptrb& (0+255),w,b
 33874  01B7DA  26D9               	addwf	fsr2l,f,c
 33875  01B7DC  5101               	movf	(I2C2_MasterReadTRBBuild@ptrb+1)& (0+255),w,b
 33876  01B7DE  22DA               	addwfc	fsr2h,f,c
 33877  01B7E0  C202  FFDE         	movff	I2C2_MasterReadTRBBuild@pdata,postinc2
 33878  01B7E4  C203  FFDD         	movff	I2C2_MasterReadTRBBuild@pdata+1,postdec2
 33879                           
 33880                           ; BSR set to: 2
 33881  01B7E8  0012               	return		;funcret
 33882  01B7EA                     __end_of_I2C2_MasterReadTRBBuild:
 33883                           	opt callstack 0
 33884                           
 33885 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 33886 ;; Defined at:
 33887 ;;		line 142 in file "mcc_generated_files/interrupt_manager.c"
 33888 ;; Parameters:    Size  Location     Type
 33889 ;;		None
 33890 ;; Auto vars:     Size  Location     Type
 33891 ;;		None
 33892 ;; Return value:  Size  Location     Type
 33893 ;;                  1    wreg      void 
 33894 ;; Registers used:
 33895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33896 ;; Tracked objects:
 33897 ;;		On entry : 0/0
 33898 ;;		On exit  : 0/0
 33899 ;;		Unchanged: 0/0
 33900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33903 ;;      Temps:          0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33904 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33905 ;;Total ram usage:        9 bytes
 33906 ;; Hardware stack levels used:    1
 33907 ;; Hardware stack levels required when called:   10
 33908 ;; This function calls:
 33909 ;;		_CCP2_CaptureISR
 33910 ;;		_I2C2_BusCollisionISR
 33911 ;;		_I2C2_ISR
 33912 ;;		_TMR2_ISR
 33913 ;;		_TMR3_ISR
 33914 ;; This function is called by:
 33915 ;;		Interrupt level 1
 33916 ;; This function uses a non-reentrant model
 33917 ;;
 33918                           
 33919                           	psect	intcodelo
 33920  000018                     __pintcodelo:
 33921                           	opt callstack 0
 33922  000018                     _INTERRUPT_InterruptManagerLow:
 33923                           	opt callstack 12
 33924                           
 33925                           ; BSR set to: 2
 33926                           ;incstack = 0
 33927  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 33928  00001A  CFD8 F158          	movff	status,??_INTERRUPT_InterruptManagerLow
 33929  00001E  CFE8 F159          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 33930  000022  CFE0 F15A          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 33931  000026  CFFA F15B          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 33932  00002A  CFFB F15C          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 33933  00002E  CFD9 F15D          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+5
 33934  000032  CFDA F15E          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+6
 33935  000036  CFF3 F15F          	movff	prodl,??_INTERRUPT_InterruptManagerLow+7
 33936  00003A  CFF4 F160          	movff	prodh,??_INTERRUPT_InterruptManagerLow+8
 33937                           
 33938                           ;interrupt_manager.c: 145: if(PIE4bits.TMR2IE == 1 && PIR4bits.TMR2IF == 1)
 33939  00003E  010E               	movlb	14	; () banked
 33940  000040  B3C6               	btfsc	198,1,b	;volatile
 33941                           
 33942                           ; BSR set to: 14
 33943  000042  A3CE               	btfss	206,1,b	;volatile
 33944  000044  D003               	goto	i1l245
 33945                           
 33946                           ; BSR set to: 14
 33947                           ;interrupt_manager.c: 146: {;interrupt_manager.c: 147: TMR2_ISR();
 33948  000046  EC42  F0E1         	call	_TMR2_ISR	;wreg free
 33949                           
 33950                           ;interrupt_manager.c: 148: }
 33951  00004A  D017               	goto	i1l250
 33952  00004C                     i1l245:
 33953                           
 33954                           ; BSR set to: 14
 33955                           ;interrupt_manager.c: 149: else if(PIE3bits.BCL2IE == 1 && PIR3bits.BCL2IF == 1)
 33956  00004C  B7C5               	btfsc	197,3,b	;volatile
 33957                           
 33958                           ; BSR set to: 14
 33959  00004E  A7CD               	btfss	205,3,b	;volatile
 33960  000050  D003               	goto	i1l247
 33961                           
 33962                           ; BSR set to: 14
 33963                           ;interrupt_manager.c: 150: {;interrupt_manager.c: 151: I2C2_BusCollisionISR();
 33964  000052  EC02  F0E4         	call	_I2C2_BusCollisionISR	;wreg free
 33965                           
 33966                           ;interrupt_manager.c: 152: }
 33967  000056  D011               	goto	i1l250
 33968  000058                     i1l247:
 33969                           
 33970                           ; BSR set to: 14
 33971                           ;interrupt_manager.c: 153: else if(PIE3bits.SSP2IE == 1 && PIR3bits.SSP2IF == 1)
 33972  000058  B5C5               	btfsc	197,2,b	;volatile
 33973                           
 33974                           ; BSR set to: 14
 33975  00005A  A5CD               	btfss	205,2,b	;volatile
 33976  00005C  D003               	goto	i1l249
 33977                           
 33978                           ; BSR set to: 14
 33979                           ;interrupt_manager.c: 154: {;interrupt_manager.c: 155: I2C2_ISR();
 33980  00005E  EC0B  F0C6         	call	_I2C2_ISR	;wreg free
 33981                           
 33982                           ;interrupt_manager.c: 156: }
 33983  000062  D00B               	goto	i1l250
 33984  000064                     i1l249:
 33985                           
 33986                           ; BSR set to: 14
 33987                           ;interrupt_manager.c: 157: else if(PIE4bits.TMR3IE == 1 && PIR4bits.TMR3IF == 1)
 33988  000064  B5C6               	btfsc	198,2,b	;volatile
 33989                           
 33990                           ; BSR set to: 14
 33991  000066  A5CE               	btfss	206,2,b	;volatile
 33992  000068  D003               	goto	i1l251
 33993                           
 33994                           ; BSR set to: 14
 33995                           ;interrupt_manager.c: 158: {;interrupt_manager.c: 159: TMR3_ISR();
 33996  00006A  ECEB  F0DF         	call	_TMR3_ISR	;wreg free
 33997                           
 33998                           ;interrupt_manager.c: 160: }
 33999  00006E  D005               	goto	i1l250
 34000  000070                     i1l251:
 34001                           
 34002                           ; BSR set to: 14
 34003                           ;interrupt_manager.c: 161: else if(PIE6bits.CCP2IE == 1 && PIR6bits.CCP2IF == 1)
 34004  000070  B3C8               	btfsc	200,1,b	;volatile
 34005                           
 34006                           ; BSR set to: 14
 34007  000072  A3D0               	btfss	208,1,b	;volatile
 34008  000074  D002               	goto	i1l250
 34009                           
 34010                           ; BSR set to: 14
 34011                           ;interrupt_manager.c: 162: {;interrupt_manager.c: 163: CCP2_CaptureISR();
 34012  000076  ECD6  F0E2         	call	_CCP2_CaptureISR	;wreg free
 34013  00007A                     i1l250:
 34014                           
 34015                           ; BSR set to: 14
 34016  00007A  C160  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+8,prodh
 34017  00007E  C15F  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+7,prodl
 34018  000082  C15E  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr2h
 34019  000086  C15D  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr2l
 34020  00008A  C15C  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 34021  00008E  C15B  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 34022  000092  C15A  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 34023  000096  C159  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 34024  00009A  C158  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 34025  00009E  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 34026  0000A0  0010               	retfie	
 34027  0000A2                     __end_of_INTERRUPT_InterruptManagerLow:
 34028                           	opt callstack 0
 34029                           
 34030 ;; *************** function _TMR3_ISR *****************
 34031 ;; Defined at:
 34032 ;;		line 164 in file "mcc_generated_files/tmr3.c"
 34033 ;; Parameters:    Size  Location     Type
 34034 ;;		None
 34035 ;; Auto vars:     Size  Location     Type
 34036 ;;		None
 34037 ;; Return value:  Size  Location     Type
 34038 ;;                  1    wreg      void 
 34039 ;; Registers used:
 34040 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 34041 ;; Tracked objects:
 34042 ;;		On entry : 0/0
 34043 ;;		On exit  : 0/0
 34044 ;;		Unchanged: 0/0
 34045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34050 ;;Total ram usage:        0 bytes
 34051 ;; Hardware stack levels used:    1
 34052 ;; Hardware stack levels required when called:    9
 34053 ;; This function calls:
 34054 ;;		Absolute function
 34055 ;;		_QIIdleChargedTimerHandler
 34056 ;;		_TMR3_DefaultInterruptHandler
 34057 ;;		i1_TMR3_WriteTimer
 34058 ;; This function is called by:
 34059 ;;		_INTERRUPT_InterruptManagerLow
 34060 ;; This function uses a non-reentrant model
 34061 ;;
 34062                           
 34063                           	psect	text123
 34064  01BFD6                     __ptext123:
 34065                           	opt callstack 0
 34066  01BFD6                     _TMR3_ISR:
 34067                           	opt callstack 12
 34068                           
 34069                           ;tmr3.c: 168: PIR4bits.TMR3IF = 0;
 34070                           
 34071                           ;incstack = 0
 34072  01BFD6  010E               	movlb	14	; () banked
 34073  01BFD8  95CE               	bcf	206,2,b	;volatile
 34074                           
 34075                           ; BSR set to: 14
 34076                           ;tmr3.c: 169: TMR3_WriteTimer(timer3ReloadVal);
 34077  01BFDA  C18D  F100         	movff	_timer3ReloadVal,i1TMR3_WriteTimer@timerVal	;volatile
 34078  01BFDE  C18E  F101         	movff	_timer3ReloadVal+1,i1TMR3_WriteTimer@timerVal+1	;volatile
 34079  01BFE2  EC4A  F0E2         	call	i1_TMR3_WriteTimer	;wreg free
 34080                           
 34081                           ;tmr3.c: 171: if(TMR3_InterruptHandler)
 34082  01BFE6  0101               	movlb	1	; () banked
 34083  01BFE8  5171               	movf	_TMR3_InterruptHandler& (0+255),w,b
 34084  01BFEA  1172               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 34085  01BFEC  1173               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 34086  01BFEE  B4D8               	btfsc	status,2,c
 34087  01BFF0  0012               	return	
 34088                           
 34089                           ; BSR set to: 1
 34090                           ;tmr3.c: 172: {;tmr3.c: 173: TMR3_InterruptHandler();
 34091  01BFF2  D801               	call	i1u1894_28
 34092  01BFF4  0012               	return	
 34093  01BFF6                     i1u1894_28:
 34094  01BFF6  0005               	push	
 34095  01BFF8  6EFA               	movwf	pclath,c
 34096  01BFFA  5171               	movf	_TMR3_InterruptHandler& (0+255),w,b
 34097  01BFFC  6EFD               	movwf	tosl,c
 34098  01BFFE  5172               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 34099  01C000  6EFE               	movwf	tosh,c
 34100  01C002  5173               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 34101  01C004  6EFF               	movwf	tosu,c
 34102  01C006  50FA               	movf	pclath,w,c
 34103  01C008  0012               	return		;indir
 34104  01C00A                     __end_of_TMR3_ISR:
 34105                           	opt callstack 0
 34106                           
 34107 ;; *************** function _QIIdleChargedTimerHandler *****************
 34108 ;; Defined at:
 34109 ;;		line 98 in file "NXQ_charge_state.c"
 34110 ;; Parameters:    Size  Location     Type
 34111 ;;		None
 34112 ;; Auto vars:     Size  Location     Type
 34113 ;;		None
 34114 ;; Return value:  Size  Location     Type
 34115 ;;                  1    wreg      void 
 34116 ;; Registers used:
 34117 ;;		wreg, status,2, cstack
 34118 ;; Tracked objects:
 34119 ;;		On entry : 0/0
 34120 ;;		On exit  : 0/0
 34121 ;;		Unchanged: 0/0
 34122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34127 ;;Total ram usage:        0 bytes
 34128 ;; Hardware stack levels used:    1
 34129 ;; Hardware stack levels required when called:    8
 34130 ;; This function calls:
 34131 ;;		i1_TMR3_Reload
 34132 ;;		i1_TMR3_StopTimer
 34133 ;; This function is called by:
 34134 ;;		_main
 34135 ;;		_TMR3_ISR
 34136 ;; This function uses a non-reentrant model
 34137 ;;
 34138                           
 34139                           	psect	text124
 34140  01C474                     __ptext124:
 34141                           	opt callstack 0
 34142  01C474                     _QIIdleChargedTimerHandler:
 34143                           	opt callstack 12
 34144                           
 34145                           ;NXQ_charge_state.c: 100: if (PORTBbits.RB2 == 0 && PORTBbits.RB3 == 0) {
 34146                           
 34147                           ;incstack = 0
 34148  01C474  A48E               	btfss	3982,2,c	;volatile
 34149  01C476  B68E               	btfsc	3982,3,c	;volatile
 34150  01C478  D002               	goto	i1l1515
 34151                           
 34152                           ;NXQ_charge_state.c: 102: nxq_charge_state = QI_Idle;
 34153  01C47A  0E00               	movlw	0
 34154  01C47C  D004               	goto	L26
 34155  01C47E                     i1l1515:
 34156                           
 34157                           ;NXQ_charge_state.c: 106: else if (PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1) {
 34158  01C47E  B48E               	btfsc	3982,2,c	;volatile
 34159  01C480  A68E               	btfss	3982,3,c	;volatile
 34160  01C482  D003               	goto	i1l15242
 34161                           
 34162                           ;NXQ_charge_state.c: 108: nxq_charge_state = QI_Fully_Charged;
 34163  01C484  0E02               	movlw	2
 34164  01C486                     L26:
 34165  01C486  0101               	movlb	1	; () banked
 34166  01C488  6F95               	movwf	_nxq_charge_state& (0+255),b
 34167  01C48A                     i1l15242:
 34168                           
 34169                           ;NXQ_charge_state.c: 110: };NXQ_charge_state.c: 112: TMR3_StopTimer();
 34170  01C48A  EC3D  F0E4         	call	i1_TMR3_StopTimer	;wreg free
 34171                           
 34172                           ;NXQ_charge_state.c: 113: TMR3_Reload();
 34173  01C48E  ECDA  F0E3         	call	i1_TMR3_Reload	;wreg free
 34174  01C492  0012               	return		;funcret
 34175  01C494                     __end_of_QIIdleChargedTimerHandler:
 34176                           	opt callstack 0
 34177                           
 34178 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 34179 ;; Defined at:
 34180 ;;		line 182 in file "mcc_generated_files/tmr3.c"
 34181 ;; Parameters:    Size  Location     Type
 34182 ;;		None
 34183 ;; Auto vars:     Size  Location     Type
 34184 ;;		None
 34185 ;; Return value:  Size  Location     Type
 34186 ;;                  1    wreg      void 
 34187 ;; Registers used:
 34188 ;;		None
 34189 ;; Tracked objects:
 34190 ;;		On entry : 0/0
 34191 ;;		On exit  : 0/0
 34192 ;;		Unchanged: 0/0
 34193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34198 ;;Total ram usage:        0 bytes
 34199 ;; Hardware stack levels used:    1
 34200 ;; Hardware stack levels required when called:    6
 34201 ;; This function calls:
 34202 ;;		Nothing
 34203 ;; This function is called by:
 34204 ;;		_TMR3_Initialize
 34205 ;;		_TMR3_ISR
 34206 ;; This function uses a non-reentrant model
 34207 ;;
 34208                           
 34209                           	psect	text125
 34210  01C89C                     __ptext125:
 34211                           	opt callstack 0
 34212  01C89C                     _TMR3_DefaultInterruptHandler:
 34213                           	opt callstack 14
 34214                           
 34215                           ;incstack = 0
 34216  01C89C  0012               	return		;funcret
 34217  01C89E                     __end_of_TMR3_DefaultInterruptHandler:
 34218                           	opt callstack 0
 34219                           
 34220 ;; *************** function i1_TMR3_StopTimer *****************
 34221 ;; Defined at:
 34222 ;;		line 105 in file "mcc_generated_files/tmr3.c"
 34223 ;; Parameters:    Size  Location     Type
 34224 ;;		None
 34225 ;; Auto vars:     Size  Location     Type
 34226 ;;		None
 34227 ;; Return value:  Size  Location     Type
 34228 ;;                  1    wreg      void 
 34229 ;; Registers used:
 34230 ;;		None
 34231 ;; Tracked objects:
 34232 ;;		On entry : 0/0
 34233 ;;		On exit  : 0/0
 34234 ;;		Unchanged: 0/0
 34235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34240 ;;Total ram usage:        0 bytes
 34241 ;; Hardware stack levels used:    1
 34242 ;; Hardware stack levels required when called:    6
 34243 ;; This function calls:
 34244 ;;		Nothing
 34245 ;; This function is called by:
 34246 ;;		_QIIdleChargedTimerHandler
 34247 ;; This function uses a non-reentrant model
 34248 ;;
 34249                           
 34250                           	psect	text126
 34251  01C87A                     __ptext126:
 34252                           	opt callstack 0
 34253  01C87A                     i1_TMR3_StopTimer:
 34254                           	opt callstack 13
 34255                           
 34256                           ;tmr3.c: 108: T3CONbits.TMR3ON = 0;
 34257                           
 34258                           ;incstack = 0
 34259  01C87A  90C9               	bcf	4041,0,c	;volatile
 34260  01C87C  0012               	return		;funcret
 34261  01C87E                     __end_ofi1_TMR3_StopTimer:
 34262                           	opt callstack 0
 34263                           
 34264 ;; *************** function i1_TMR3_Reload *****************
 34265 ;; Defined at:
 34266 ;;		line 149 in file "mcc_generated_files/tmr3.c"
 34267 ;; Parameters:    Size  Location     Type
 34268 ;;		None
 34269 ;; Auto vars:     Size  Location     Type
 34270 ;;		None
 34271 ;; Return value:  Size  Location     Type
 34272 ;;                  1    wreg      void 
 34273 ;; Registers used:
 34274 ;;		wreg, status,2, cstack
 34275 ;; Tracked objects:
 34276 ;;		On entry : 0/0
 34277 ;;		On exit  : 0/0
 34278 ;;		Unchanged: 0/0
 34279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34284 ;;Total ram usage:        0 bytes
 34285 ;; Hardware stack levels used:    1
 34286 ;; Hardware stack levels required when called:    7
 34287 ;; This function calls:
 34288 ;;		i1_TMR3_WriteTimer
 34289 ;; This function is called by:
 34290 ;;		_QIIdleChargedTimerHandler
 34291 ;; This function uses a non-reentrant model
 34292 ;;
 34293                           
 34294                           	psect	text127
 34295  01C7B4                     __ptext127:
 34296                           	opt callstack 0
 34297  01C7B4                     i1_TMR3_Reload:
 34298                           	opt callstack 12
 34299                           
 34300                           ;tmr3.c: 151: TMR3_WriteTimer(timer3ReloadVal);
 34301                           
 34302                           ;incstack = 0
 34303  01C7B4  C18D  F100         	movff	_timer3ReloadVal,i1TMR3_WriteTimer@timerVal	;volatile
 34304  01C7B8  C18E  F101         	movff	_timer3ReloadVal+1,i1TMR3_WriteTimer@timerVal+1	;volatile
 34305  01C7BC  EC4A  F0E2         	call	i1_TMR3_WriteTimer	;wreg free
 34306  01C7C0  0012               	return		;funcret
 34307  01C7C2                     __end_ofi1_TMR3_Reload:
 34308                           	opt callstack 0
 34309                           
 34310 ;; *************** function i1_TMR3_WriteTimer *****************
 34311 ;; Defined at:
 34312 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 34313 ;; Parameters:    Size  Location     Type
 34314 ;;  timerVal        2    0[BANK1 ] unsigned int 
 34315 ;; Auto vars:     Size  Location     Type
 34316 ;;		None
 34317 ;; Return value:  Size  Location     Type
 34318 ;;                  1    wreg      void 
 34319 ;; Registers used:
 34320 ;;		wreg, status,2
 34321 ;; Tracked objects:
 34322 ;;		On entry : 0/0
 34323 ;;		On exit  : 0/0
 34324 ;;		Unchanged: 0/0
 34325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34326 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34329 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34330 ;;Total ram usage:        2 bytes
 34331 ;; Hardware stack levels used:    1
 34332 ;; Hardware stack levels required when called:    6
 34333 ;; This function calls:
 34334 ;;		Nothing
 34335 ;; This function is called by:
 34336 ;;		_TMR3_ISR
 34337 ;;		i1_TMR3_Reload
 34338 ;; This function uses a non-reentrant model
 34339 ;;
 34340                           
 34341                           	psect	text128
 34342  01C494                     __ptext128:
 34343                           	opt callstack 0
 34344  01C494                     i1_TMR3_WriteTimer:
 34345                           	opt callstack 14
 34346                           
 34347                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 34348                           
 34349                           ;incstack = 0
 34350  01C494  A4C9               	btfss	4041,2,c	;volatile
 34351  01C496  D008               	goto	i1l12966
 34352                           
 34353                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 34354  01C498  90C9               	bcf	4041,0,c	;volatile
 34355                           
 34356                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 34357  01C49A  0101               	movlb	1	; () banked
 34358  01C49C  5101               	movf	(i1TMR3_WriteTimer@timerVal+1)& (0+255),w,b
 34359  01C49E  6EC8               	movwf	4040,c	;volatile
 34360                           
 34361                           ; BSR set to: 1
 34362                           ;tmr3.c: 136: TMR3L = timerVal;
 34363  01C4A0  C100  FFC7         	movff	i1TMR3_WriteTimer@timerVal,4039	;volatile
 34364                           
 34365                           ; BSR set to: 1
 34366                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 34367  01C4A4  80C9               	bsf	4041,0,c	;volatile
 34368                           
 34369                           ;tmr3.c: 140: }
 34370  01C4A6  0012               	return	
 34371  01C4A8                     i1l12966:
 34372                           
 34373                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 34374  01C4A8  0101               	movlb	1	; () banked
 34375  01C4AA  5101               	movf	(i1TMR3_WriteTimer@timerVal+1)& (0+255),w,b
 34376  01C4AC  6EC8               	movwf	4040,c	;volatile
 34377                           
 34378                           ; BSR set to: 1
 34379                           ;tmr3.c: 145: TMR3L = timerVal;
 34380  01C4AE  C100  FFC7         	movff	i1TMR3_WriteTimer@timerVal,4039	;volatile
 34381                           
 34382                           ; BSR set to: 1
 34383  01C4B2  0012               	return		;funcret
 34384  01C4B4                     __end_ofi1_TMR3_WriteTimer:
 34385                           	opt callstack 0
 34386                           
 34387 ;; *************** function _TMR2_ISR *****************
 34388 ;; Defined at:
 34389 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 34390 ;; Parameters:    Size  Location     Type
 34391 ;;		None
 34392 ;; Auto vars:     Size  Location     Type
 34393 ;;		None
 34394 ;; Return value:  Size  Location     Type
 34395 ;;                  1    wreg      void 
 34396 ;; Registers used:
 34397 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 34398 ;; Tracked objects:
 34399 ;;		On entry : 0/0
 34400 ;;		On exit  : 0/0
 34401 ;;		Unchanged: 0/0
 34402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34407 ;;Total ram usage:        0 bytes
 34408 ;; Hardware stack levels used:    1
 34409 ;; Hardware stack levels required when called:    9
 34410 ;; This function calls:
 34411 ;;		Absolute function
 34412 ;;		_ADC_acquisitionTimerHandler
 34413 ;;		_TMR2_DefaultInterruptHandler
 34414 ;; This function is called by:
 34415 ;;		_INTERRUPT_InterruptManagerLow
 34416 ;; This function uses a non-reentrant model
 34417 ;;
 34418                           
 34419                           	psect	text129
 34420  01C284                     __ptext129:
 34421                           	opt callstack 0
 34422  01C284                     _TMR2_ISR:
 34423                           	opt callstack 12
 34424                           
 34425                           ;tmr2.c: 169: PIR4bits.TMR2IF = 0;
 34426                           
 34427                           ; BSR set to: 1
 34428                           ;incstack = 0
 34429  01C284  010E               	movlb	14	; () banked
 34430  01C286  93CE               	bcf	206,1,b	;volatile
 34431                           
 34432                           ; BSR set to: 14
 34433                           ;tmr2.c: 171: if(TMR2_InterruptHandler)
 34434  01C288  0101               	movlb	1	; () banked
 34435  01C28A  5174               	movf	_TMR2_InterruptHandler& (0+255),w,b
 34436  01C28C  1175               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 34437  01C28E  1176               	iorwf	(_TMR2_InterruptHandler+2)& (0+255),w,b
 34438  01C290  B4D8               	btfsc	status,2,c
 34439  01C292  0012               	return	
 34440                           
 34441                           ; BSR set to: 1
 34442                           ;tmr2.c: 172: {;tmr2.c: 173: TMR2_InterruptHandler();
 34443  01C294  D801               	call	i1u1879_28
 34444  01C296  0012               	return	
 34445  01C298                     i1u1879_28:
 34446  01C298  0005               	push	
 34447  01C29A  6EFA               	movwf	pclath,c
 34448  01C29C  5174               	movf	_TMR2_InterruptHandler& (0+255),w,b
 34449  01C29E  6EFD               	movwf	tosl,c
 34450  01C2A0  5175               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 34451  01C2A2  6EFE               	movwf	tosh,c
 34452  01C2A4  5176               	movf	(_TMR2_InterruptHandler+2)& (0+255),w,b
 34453  01C2A6  6EFF               	movwf	tosu,c
 34454  01C2A8  50FA               	movf	pclath,w,c
 34455  01C2AA  0012               	return		;indir
 34456  01C2AC                     __end_of_TMR2_ISR:
 34457                           	opt callstack 0
 34458                           
 34459 ;; *************** function _ADC_acquisitionTimerHandler *****************
 34460 ;; Defined at:
 34461 ;;		line 135 in file "adc_postprocessing.c"
 34462 ;; Parameters:    Size  Location     Type
 34463 ;;		None
 34464 ;; Auto vars:     Size  Location     Type
 34465 ;;		None
 34466 ;; Return value:  Size  Location     Type
 34467 ;;                  1    wreg      void 
 34468 ;; Registers used:
 34469 ;;		wreg, status,2, cstack
 34470 ;; Tracked objects:
 34471 ;;		On entry : 0/0
 34472 ;;		On exit  : 0/0
 34473 ;;		Unchanged: 0/0
 34474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34479 ;;Total ram usage:        0 bytes
 34480 ;; Hardware stack levels used:    1
 34481 ;; Hardware stack levels required when called:    8
 34482 ;; This function calls:
 34483 ;;		_ADCC_ClearAccumulator
 34484 ;;		_ADCC_DischargeSampleCapacitor
 34485 ;;		_ADCC_StartConversion
 34486 ;;		_TMR2_StopTimer
 34487 ;; This function is called by:
 34488 ;;		_main
 34489 ;;		_TMR2_ISR
 34490 ;; This function uses a non-reentrant model
 34491 ;;
 34492                           
 34493                           	psect	text130
 34494  01C578                     __ptext130:
 34495                           	opt callstack 0
 34496  01C578                     _ADC_acquisitionTimerHandler:
 34497                           	opt callstack 12
 34498                           
 34499                           ;adc_postprocessing.c: 139: TMR2_StopTimer();
 34500                           
 34501                           ;incstack = 0
 34502  01C578  EC2E  F0E4         	call	_TMR2_StopTimer	;wreg free
 34503                           
 34504                           ;adc_postprocessing.c: 140: TMR2 = 0;
 34505  01C57C  0E00               	movlw	0
 34506  01C57E  6EBB               	movwf	4027,c	;volatile
 34507                           
 34508                           ;adc_postprocessing.c: 143: ADCC_DischargeSampleCapacitor();
 34509  01C580  EC27  F0E4         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 34510                           
 34511                           ;adc_postprocessing.c: 146: ADCC_ClearAccumulator();
 34512  01C584  EC31  F0E4         	call	_ADCC_ClearAccumulator	;wreg free
 34513                           
 34514                           ;adc_postprocessing.c: 149: ADCC_StartConversion(next_adc_channel);
 34515  01C588  0100               	movlb	0	; () banked
 34516  01C58A  51FC               	movf	_next_adc_channel& (0+255),w,b
 34517  01C58C  ECE1  F0E3         	call	_ADCC_StartConversion
 34518  01C590  0012               	return		;funcret
 34519  01C592                     __end_of_ADC_acquisitionTimerHandler:
 34520                           	opt callstack 0
 34521                           
 34522 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 34523 ;; Defined at:
 34524 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 34525 ;; Parameters:    Size  Location     Type
 34526 ;;		None
 34527 ;; Auto vars:     Size  Location     Type
 34528 ;;		None
 34529 ;; Return value:  Size  Location     Type
 34530 ;;                  1    wreg      void 
 34531 ;; Registers used:
 34532 ;;		None
 34533 ;; Tracked objects:
 34534 ;;		On entry : 0/0
 34535 ;;		On exit  : 0/0
 34536 ;;		Unchanged: 0/0
 34537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34542 ;;Total ram usage:        0 bytes
 34543 ;; Hardware stack levels used:    1
 34544 ;; Hardware stack levels required when called:    6
 34545 ;; This function calls:
 34546 ;;		Nothing
 34547 ;; This function is called by:
 34548 ;;		_TMR2_Initialize
 34549 ;;		_TMR2_ISR
 34550 ;; This function uses a non-reentrant model
 34551 ;;
 34552                           
 34553                           	psect	text131
 34554  01C89E                     __ptext131:
 34555                           	opt callstack 0
 34556  01C89E                     _TMR2_DefaultInterruptHandler:
 34557                           	opt callstack 14
 34558                           
 34559                           ;incstack = 0
 34560  01C89E  0012               	return		;funcret
 34561  01C8A0                     __end_of_TMR2_DefaultInterruptHandler:
 34562                           	opt callstack 0
 34563                           
 34564 ;; *************** function _TMR2_StopTimer *****************
 34565 ;; Defined at:
 34566 ;;		line 125 in file "mcc_generated_files/tmr2.c"
 34567 ;; Parameters:    Size  Location     Type
 34568 ;;		None
 34569 ;; Auto vars:     Size  Location     Type
 34570 ;;		None
 34571 ;; Return value:  Size  Location     Type
 34572 ;;                  1    wreg      void 
 34573 ;; Registers used:
 34574 ;;		cstack
 34575 ;; Tracked objects:
 34576 ;;		On entry : 0/0
 34577 ;;		On exit  : 0/0
 34578 ;;		Unchanged: 0/0
 34579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34584 ;;Total ram usage:        0 bytes
 34585 ;; Hardware stack levels used:    1
 34586 ;; Hardware stack levels required when called:    7
 34587 ;; This function calls:
 34588 ;;		_TMR2_Stop
 34589 ;; This function is called by:
 34590 ;;		_ADC_acquisitionTimerHandler
 34591 ;; This function uses a non-reentrant model
 34592 ;;
 34593                           
 34594                           	psect	text132
 34595  01C85C                     __ptext132:
 34596                           	opt callstack 0
 34597  01C85C                     _TMR2_StopTimer:
 34598                           	opt callstack 12
 34599                           
 34600                           ;tmr2.c: 127: TMR2_Stop();
 34601                           
 34602                           ;incstack = 0
 34603  01C85C  EC3F  F0E4         	call	_TMR2_Stop	;wreg free
 34604  01C860  0012               	return		;funcret
 34605  01C862                     __end_of_TMR2_StopTimer:
 34606                           	opt callstack 0
 34607                           
 34608 ;; *************** function _TMR2_Stop *****************
 34609 ;; Defined at:
 34610 ;;		line 119 in file "mcc_generated_files/tmr2.c"
 34611 ;; Parameters:    Size  Location     Type
 34612 ;;		None
 34613 ;; Auto vars:     Size  Location     Type
 34614 ;;		None
 34615 ;; Return value:  Size  Location     Type
 34616 ;;                  1    wreg      void 
 34617 ;; Registers used:
 34618 ;;		None
 34619 ;; Tracked objects:
 34620 ;;		On entry : 0/0
 34621 ;;		On exit  : 0/0
 34622 ;;		Unchanged: 0/0
 34623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34628 ;;Total ram usage:        0 bytes
 34629 ;; Hardware stack levels used:    1
 34630 ;; Hardware stack levels required when called:    6
 34631 ;; This function calls:
 34632 ;;		Nothing
 34633 ;; This function is called by:
 34634 ;;		_TMR2_StopTimer
 34635 ;; This function uses a non-reentrant model
 34636 ;;
 34637                           
 34638                           	psect	text133
 34639  01C87E                     __ptext133:
 34640                           	opt callstack 0
 34641  01C87E                     _TMR2_Stop:
 34642                           	opt callstack 12
 34643                           
 34644                           ;tmr2.c: 122: T2CONbits.TMR2ON = 0;
 34645                           
 34646                           ;incstack = 0
 34647  01C87E  9EBD               	bcf	4029,7,c	;volatile
 34648  01C880  0012               	return		;funcret
 34649  01C882                     __end_of_TMR2_Stop:
 34650                           	opt callstack 0
 34651                           
 34652 ;; *************** function _ADCC_StartConversion *****************
 34653 ;; Defined at:
 34654 ;;		line 112 in file "mcc_generated_files/adcc.c"
 34655 ;; Parameters:    Size  Location     Type
 34656 ;;  channel         1    wreg     enum E9432
 34657 ;; Auto vars:     Size  Location     Type
 34658 ;;  channel         1    0[BANK1 ] enum E9432
 34659 ;; Return value:  Size  Location     Type
 34660 ;;                  1    wreg      void 
 34661 ;; Registers used:
 34662 ;;		wreg
 34663 ;; Tracked objects:
 34664 ;;		On entry : 0/0
 34665 ;;		On exit  : 0/0
 34666 ;;		Unchanged: 0/0
 34667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34669 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34671 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34672 ;;Total ram usage:        1 bytes
 34673 ;; Hardware stack levels used:    1
 34674 ;; Hardware stack levels required when called:    6
 34675 ;; This function calls:
 34676 ;;		Nothing
 34677 ;; This function is called by:
 34678 ;;		_ADC_acquisitionTimerHandler
 34679 ;; This function uses a non-reentrant model
 34680 ;;
 34681                           
 34682                           	psect	text134
 34683  01C7C2                     __ptext134:
 34684                           	opt callstack 0
 34685  01C7C2                     _ADCC_StartConversion:
 34686                           	opt callstack 13
 34687                           
 34688                           ;incstack = 0
 34689                           ;ADCC_StartConversion@channel stored from wreg
 34690  01C7C2  0101               	movlb	1	; () banked
 34691  01C7C4  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 34692                           
 34693                           ;adcc.c: 115: ADPCH = channel;
 34694  01C7C6  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 34695                           
 34696                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 34697  01C7CA  8E60               	bsf	3936,7,c	;volatile
 34698                           
 34699                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 34700  01C7CC  8060               	bsf	3936,0,c	;volatile
 34701  01C7CE  0012               	return		;funcret
 34702  01C7D0                     __end_of_ADCC_StartConversion:
 34703                           	opt callstack 0
 34704                           
 34705 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 34706 ;; Defined at:
 34707 ;;		line 174 in file "mcc_generated_files/adcc.c"
 34708 ;; Parameters:    Size  Location     Type
 34709 ;;		None
 34710 ;; Auto vars:     Size  Location     Type
 34711 ;;		None
 34712 ;; Return value:  Size  Location     Type
 34713 ;;                  1    wreg      void 
 34714 ;; Registers used:
 34715 ;;		wreg, status,2
 34716 ;; Tracked objects:
 34717 ;;		On entry : 0/0
 34718 ;;		On exit  : 0/0
 34719 ;;		Unchanged: 0/0
 34720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34725 ;;Total ram usage:        0 bytes
 34726 ;; Hardware stack levels used:    1
 34727 ;; Hardware stack levels required when called:    6
 34728 ;; This function calls:
 34729 ;;		Nothing
 34730 ;; This function is called by:
 34731 ;;		_ADC_acquisitionTimerHandler
 34732 ;; This function uses a non-reentrant model
 34733 ;;
 34734                           
 34735                           	psect	text135
 34736  01C84E                     __ptext135:
 34737                           	opt callstack 0
 34738  01C84E                     _ADCC_DischargeSampleCapacitor:
 34739                           	opt callstack 13
 34740                           
 34741                           ;adcc.c: 177: ADPCH = 0x3c;
 34742                           
 34743                           ;incstack = 0
 34744  01C84E  0E3C               	movlw	60
 34745  01C850  010F               	movlb	15	; () banked
 34746  01C852  6F5F               	movwf	95,b	;volatile
 34747                           
 34748                           ; BSR set to: 15
 34749  01C854  0012               	return		;funcret
 34750  01C856                     __end_of_ADCC_DischargeSampleCapacitor:
 34751                           	opt callstack 0
 34752                           
 34753 ;; *************** function _ADCC_ClearAccumulator *****************
 34754 ;; Defined at:
 34755 ;;		line 204 in file "mcc_generated_files/adcc.c"
 34756 ;; Parameters:    Size  Location     Type
 34757 ;;		None
 34758 ;; Auto vars:     Size  Location     Type
 34759 ;;		None
 34760 ;; Return value:  Size  Location     Type
 34761 ;;                  1    wreg      void 
 34762 ;; Registers used:
 34763 ;;		None
 34764 ;; Tracked objects:
 34765 ;;		On entry : 0/0
 34766 ;;		On exit  : 0/0
 34767 ;;		Unchanged: 0/0
 34768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34773 ;;Total ram usage:        0 bytes
 34774 ;; Hardware stack levels used:    1
 34775 ;; Hardware stack levels required when called:    6
 34776 ;; This function calls:
 34777 ;;		Nothing
 34778 ;; This function is called by:
 34779 ;;		_ADC_acquisitionTimerHandler
 34780 ;; This function uses a non-reentrant model
 34781 ;;
 34782                           
 34783                           	psect	text136
 34784  01C862                     __ptext136:
 34785                           	opt callstack 0
 34786  01C862                     _ADCC_ClearAccumulator:
 34787                           	opt callstack 13
 34788                           
 34789                           ;adcc.c: 207: ADCON2bits.ADACLR = 1;
 34790                           
 34791                           ; BSR set to: 15
 34792                           ;incstack = 0
 34793  01C862  010F               	movlb	15	; () banked
 34794  01C864  875A               	bsf	90,3,b	;volatile
 34795                           
 34796                           ; BSR set to: 15
 34797  01C866  0012               	return		;funcret
 34798  01C868                     __end_of_ADCC_ClearAccumulator:
 34799                           	opt callstack 0
 34800                           
 34801 ;; *************** function _I2C2_ISR *****************
 34802 ;; Defined at:
 34803 ;;		line 236 in file "mcc_generated_files/i2c2.c"
 34804 ;; Parameters:    Size  Location     Type
 34805 ;;		None
 34806 ;; Auto vars:     Size  Location     Type
 34807 ;;		None
 34808 ;; Return value:  Size  Location     Type
 34809 ;;                  1    wreg      void 
 34810 ;; Registers used:
 34811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34812 ;; Tracked objects:
 34813 ;;		On entry : 0/0
 34814 ;;		On exit  : 0/0
 34815 ;;		Unchanged: 0/0
 34816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34819 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34820 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34821 ;;Total ram usage:        2 bytes
 34822 ;; Hardware stack levels used:    1
 34823 ;; Hardware stack levels required when called:    7
 34824 ;; This function calls:
 34825 ;;		_I2C2_FunctionComplete
 34826 ;;		_I2C2_Stop
 34827 ;; This function is called by:
 34828 ;;		_INTERRUPT_InterruptManagerLow
 34829 ;; This function uses a non-reentrant model
 34830 ;;
 34831                           
 34832                           	psect	text137
 34833  018C16                     __ptext137:
 34834                           	opt callstack 0
 34835  018C16                     _I2C2_ISR:
 34836                           	opt callstack 14
 34837                           
 34838                           ;i2c2.c: 239: static uint8_t *pi2c_buf_ptr;;i2c2.c: 240: static uint16_t i2c_address = 0
      +                          ;;i2c2.c: 241: static uint8_t i2c_bytes_left = 0;;i2c2.c: 242: static uint8_t i2c_10bit_
      +                          address_restart = 0;;i2c2.c: 244: PIR3bits.SSP2IF = 0;
 34839                           
 34840                           ; BSR set to: 15
 34841                           ;incstack = 0
 34842  018C16  010E               	movlb	14	; () banked
 34843  018C18  95CD               	bcf	205,2,b	;volatile
 34844                           
 34845                           ;i2c2.c: 248: if(SSP2CON1bits.WCOL)
 34846  018C1A  AF96               	btfss	150,7,b	;volatile
 34847  018C1C  D113               	goto	i1l21572
 34848                           
 34849                           ; BSR set to: 14
 34850                           ;i2c2.c: 249: {;i2c2.c: 251: SSP2CON1bits.WCOL = 0;
 34851  018C1E  9F96               	bcf	150,7,b	;volatile
 34852                           
 34853                           ; BSR set to: 14
 34854                           ;i2c2.c: 252: i2c2_state = S_MASTER_IDLE;
 34855  018C20  0E00               	movlw	0
 34856  018C22  0100               	movlb	0	; () banked
 34857  018C24  6FDB               	movwf	_i2c2_state& (0+255),b
 34858                           
 34859                           ; BSR set to: 0
 34860                           ;i2c2.c: 253: *(p_i2c2_current->pTrFlag) = I2C2_MESSAGE_FAIL;
 34861  018C26  EE20 F003          	lfsr	2,3
 34862  018C2A  51D1               	movf	_p_i2c2_current& (0+255),w,b
 34863  018C2C  26D9               	addwf	fsr2l,f,c
 34864  018C2E  51D2               	movf	(_p_i2c2_current+1)& (0+255),w,b
 34865  018C30  22DA               	addwfc	fsr2h,f,c
 34866  018C32  CFDE F103          	movff	postinc2,??_I2C2_ISR
 34867  018C36  CFDD F104          	movff	postdec2,??_I2C2_ISR+1
 34868  018C3A  C103  FFD9         	movff	??_I2C2_ISR,fsr2l
 34869  018C3E  C104  FFDA         	movff	??_I2C2_ISR+1,fsr2h
 34870  018C42  0E01               	movlw	1
 34871  018C44  6EDF               	movwf	indf2,c
 34872                           
 34873                           ; BSR set to: 0
 34874                           ;i2c2.c: 256: p_i2c2_current = (0);
 34875  018C46  0E00               	movlw	0
 34876  018C48  6FD1               	movwf	_p_i2c2_current& (0+255),b
 34877  018C4A  0E00               	movlw	0
 34878  018C4C  6FD2               	movwf	(_p_i2c2_current+1)& (0+255),b
 34879  018C4E  0012               	return	
 34880  018C50                     i1l937:
 34881                           
 34882                           ; BSR set to: 0
 34883                           ;i2c2.c: 266: if(i2c2_object.trStatus.s.empty != 1)
 34884  018C50  0101               	movlb	1	; () banked
 34885  018C52  B365               	btfsc	(_i2c2_object+4)& (0+255),1,b
 34886  018C54  0012               	return	
 34887                           
 34888                           ; BSR set to: 1
 34889                           ;i2c2.c: 267: {;i2c2.c: 269: p_i2c2_current = i2c2_object.pTrHead;
 34890  018C56  C163  F0D1         	movff	_i2c2_object+2,_p_i2c2_current
 34891  018C5A  C164  F0D2         	movff	_i2c2_object+3,_p_i2c2_current+1
 34892                           
 34893                           ; BSR set to: 1
 34894                           ;i2c2.c: 270: i2c2_trb_count = i2c2_object.pTrHead->count;
 34895  018C5E  C163  FFD9         	movff	_i2c2_object+2,fsr2l
 34896  018C62  C164  FFDA         	movff	_i2c2_object+3,fsr2h
 34897  018C66  50DF               	movf	indf2,w,c
 34898  018C68  0100               	movlb	0	; () banked
 34899  018C6A  6FDA               	movwf	_i2c2_trb_count& (0+255),b
 34900                           
 34901                           ; BSR set to: 0
 34902                           ;i2c2.c: 271: p_i2c2_trb_current = i2c2_object.pTrHead->ptrb_list;
 34903  018C6C  0101               	movlb	1	; () banked
 34904  018C6E  EE20 F001          	lfsr	2,1
 34905  018C72  5163               	movf	(_i2c2_object+2)& (0+255),w,b
 34906  018C74  26D9               	addwf	fsr2l,f,c
 34907  018C76  5164               	movf	(_i2c2_object+3)& (0+255),w,b
 34908  018C78  22DA               	addwfc	fsr2h,f,c
 34909  018C7A  CFDE F0D3          	movff	postinc2,_p_i2c2_trb_current
 34910  018C7E  CFDD F0D4          	movff	postdec2,_p_i2c2_trb_current+1
 34911                           
 34912                           ; BSR set to: 1
 34913                           ;i2c2.c: 273: i2c2_object.pTrHead++;
 34914  018C82  0E05               	movlw	5
 34915  018C84  2763               	addwf	(_i2c2_object+2)& (0+255),f,b
 34916  018C86  0E00               	movlw	0
 34917  018C88  2364               	addwfc	(_i2c2_object+3)& (0+255),f,b
 34918                           
 34919                           ; BSR set to: 1
 34920                           ;i2c2.c: 276: if(i2c2_object.pTrHead == (i2c2_tr_queue + 1))
 34921  018C8A  0EA8               	movlw	low (_i2c2_tr_queue+5)
 34922  018C8C  1963               	xorwf	(_i2c2_object+2)& (0+255),w,b
 34923  018C8E  E108               	bnz	i1l21464
 34924  018C90  0E01               	movlw	high (_i2c2_tr_queue+5)
 34925  018C92  1964               	xorwf	(_i2c2_object+3)& (0+255),w,b
 34926  018C94  A4D8               	btfss	status,2,c
 34927  018C96  D004               	goto	i1l21464
 34928                           
 34929                           ; BSR set to: 1
 34930                           ;i2c2.c: 277: {;i2c2.c: 279: i2c2_object.pTrHead = i2c2_tr_queue;
 34931  018C98  0EA3               	movlw	low _i2c2_tr_queue
 34932  018C9A  6F63               	movwf	(_i2c2_object+2)& (0+255),b
 34933  018C9C  0E01               	movlw	high _i2c2_tr_queue
 34934  018C9E  6F64               	movwf	(_i2c2_object+3)& (0+255),b
 34935  018CA0                     i1l21464:
 34936                           
 34937                           ; BSR set to: 1
 34938                           ;i2c2.c: 280: };i2c2.c: 284: i2c2_object.trStatus.s.full = 0;
 34939  018CA0  9165               	bcf	(_i2c2_object+4)& (0+255),0,b
 34940                           
 34941                           ;i2c2.c: 287: if(i2c2_object.pTrHead == i2c2_object.pTrTail)
 34942  018CA2  5161               	movf	_i2c2_object& (0+255),w,b
 34943  018CA4  1963               	xorwf	(_i2c2_object+2)& (0+255),w,b
 34944  018CA6  E104               	bnz	i1l940
 34945  018CA8  5162               	movf	(_i2c2_object+1)& (0+255),w,b
 34946  018CAA  1964               	xorwf	(_i2c2_object+3)& (0+255),w,b
 34947  018CAC  B4D8               	btfsc	status,2,c
 34948                           
 34949                           ; BSR set to: 1
 34950                           ;i2c2.c: 288: {;i2c2.c: 290: i2c2_object.trStatus.s.empty = 1;
 34951  018CAE  8365               	bsf	(_i2c2_object+4)& (0+255),1,b
 34952  018CB0                     i1l940:
 34953                           
 34954                           ; BSR set to: 1
 34955                           ;i2c2.c: 291: };i2c2.c: 294: SSP2CON2bits.SEN = 1;
 34956  018CB0  010E               	movlb	14	; () banked
 34957  018CB2  8197               	bsf	151,0,b	;volatile
 34958  018CB4                     i1l21468:
 34959                           
 34960                           ;i2c2.c: 297: i2c2_state = S_MASTER_SEND_ADDR;
 34961  018CB4  0E02               	movlw	2
 34962  018CB6  0100               	movlb	0	; () banked
 34963  018CB8  6FDB               	movwf	_i2c2_state& (0+255),b
 34964  018CBA  0012               	return	
 34965  018CBC                     i1l943:
 34966                           
 34967                           ; BSR set to: 0
 34968                           ;i2c2.c: 316: if(SSP2CON2bits.ACKSTAT)
 34969  018CBC  010E               	movlb	14	; () banked
 34970  018CBE  AD97               	btfss	151,6,b	;volatile
 34971  018CC0  D006               	goto	i1l21476
 34972                           
 34973                           ; BSR set to: 14
 34974                           ;i2c2.c: 317: {;i2c2.c: 318: i2c2_object.i2cErrors++;
 34975  018CC2  0101               	movlb	1	; () banked
 34976  018CC4  2B67               	incf	(_i2c2_object+6)& (0+255),f,b
 34977                           
 34978                           ; BSR set to: 1
 34979                           ;i2c2.c: 319: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
 34980  018CC6  0E04               	movlw	4
 34981  018CC8  EC23  F0DE         	call	_I2C2_Stop
 34982                           
 34983                           ;i2c2.c: 320: }
 34984  018CCC  0012               	return	
 34985  018CCE                     i1l21476:
 34986                           
 34987                           ; BSR set to: 14
 34988                           ;i2c2.c: 321: else;i2c2.c: 322: {;i2c2.c: 324: SSP2BUF = (i2c_address >> 1) & 0x00FF;
 34989  018CCE  90D8               	bcf	status,0,c
 34990  018CD0  0100               	movlb	0	; () banked
 34991  018CD2  31FA               	rrcf	(I2C2_ISR@i2c_address+1)& (0+255),w,b
 34992  018CD4  0101               	movlb	1	; () banked
 34993  018CD6  6F04               	movwf	(??_I2C2_ISR+1)& (0+255),b
 34994  018CD8  0100               	movlb	0	; () banked
 34995  018CDA  31F9               	rrcf	I2C2_ISR@i2c_address& (0+255),w,b
 34996  018CDC  0101               	movlb	1	; () banked
 34997  018CDE  6F03               	movwf	??_I2C2_ISR& (0+255),b
 34998  018CE0  5103               	movf	??_I2C2_ISR& (0+255),w,b
 34999  018CE2  010E               	movlb	14	; () banked
 35000  018CE4  6F92               	movwf	146,b	;volatile
 35001                           
 35002                           ; BSR set to: 14
 35003                           ;i2c2.c: 327: if(i2c_address & 0x01)
 35004  018CE6  0100               	movlb	0	; () banked
 35005  018CE8  A1F9               	btfss	I2C2_ISR@i2c_address& (0+255),0,b
 35006  018CEA  D003               	goto	i1l21482
 35007                           
 35008                           ; BSR set to: 0
 35009                           ;i2c2.c: 328: {;i2c2.c: 331: i2c2_state = S_MASTER_10BIT_RESTART;
 35010  018CEC  0E0B               	movlw	11
 35011  018CEE  6FDB               	movwf	_i2c2_state& (0+255),b
 35012                           
 35013                           ;i2c2.c: 332: }
 35014  018CF0  0012               	return	
 35015  018CF2                     i1l21482:
 35016                           
 35017                           ; BSR set to: 0
 35018                           ;i2c2.c: 333: else;i2c2.c: 334: {;i2c2.c: 336: i2c2_state = S_MASTER_SEND_DATA;
 35019  018CF2  0E03               	movlw	3
 35020  018CF4  6FDB               	movwf	_i2c2_state& (0+255),b
 35021  018CF6  0012               	return	
 35022  018CF8                     i1l948:
 35023                           
 35024                           ; BSR set to: 0
 35025                           ;i2c2.c: 344: if(SSP2CON2bits.ACKSTAT)
 35026  018CF8  010E               	movlb	14	; () banked
 35027  018CFA  AD97               	btfss	151,6,b	;volatile
 35028  018CFC  D006               	goto	i1l949
 35029                           
 35030                           ; BSR set to: 14
 35031                           ;i2c2.c: 345: {;i2c2.c: 346: i2c2_object.i2cErrors++;
 35032  018CFE  0101               	movlb	1	; () banked
 35033  018D00  2B67               	incf	(_i2c2_object+6)& (0+255),f,b
 35034                           
 35035                           ; BSR set to: 1
 35036                           ;i2c2.c: 347: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
 35037  018D02  0E04               	movlw	4
 35038  018D04  EC23  F0DE         	call	_I2C2_Stop
 35039                           
 35040                           ;i2c2.c: 348: }
 35041  018D08  0012               	return	
 35042  018D0A                     i1l949:
 35043                           
 35044                           ; BSR set to: 14
 35045                           ;i2c2.c: 349: else;i2c2.c: 350: {;i2c2.c: 353: SSP2CON2bits.RSEN = 1;
 35046  018D0A  8397               	bsf	151,1,b	;volatile
 35047                           
 35048                           ; BSR set to: 14
 35049                           ;i2c2.c: 357: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 35050  018D0C  C0F9  F103         	movff	I2C2_ISR@i2c_address,??_I2C2_ISR
 35051  018D10  C0FA  F104         	movff	I2C2_ISR@i2c_address+1,??_I2C2_ISR+1
 35052  018D14  C104  F103         	movff	??_I2C2_ISR+1,??_I2C2_ISR
 35053  018D18  0101               	movlb	1	; () banked
 35054  018D1A  6B04               	clrf	(??_I2C2_ISR+1)& (0+255),b
 35055  018D1C  0E06               	movlw	6
 35056  018D1E  1703               	andwf	??_I2C2_ISR& (0+255),f,b
 35057  018D20  0E00               	movlw	0
 35058  018D22  1704               	andwf	(??_I2C2_ISR+1)& (0+255),f,b
 35059  018D24  0EF0               	movlw	240
 35060  018D26  1103               	iorwf	??_I2C2_ISR& (0+255),w,b
 35061  018D28  0100               	movlb	0	; () banked
 35062  018D2A  6FF9               	movwf	I2C2_ISR@i2c_address& (0+255),b
 35063  018D2C  0101               	movlb	1	; () banked
 35064  018D2E  5104               	movf	(??_I2C2_ISR+1)& (0+255),w,b
 35065  018D30  0100               	movlb	0	; () banked
 35066  018D32  6FFA               	movwf	(I2C2_ISR@i2c_address+1)& (0+255),b
 35067                           
 35068                           ; BSR set to: 0
 35069                           ;i2c2.c: 360: i2c_address |= 0x0001;
 35070  018D34  81F9               	bsf	I2C2_ISR@i2c_address& (0+255),0,b
 35071                           
 35072                           ; BSR set to: 0
 35073                           ;i2c2.c: 363: i2c_10bit_address_restart = 1;
 35074  018D36  0E01               	movlw	1
 35075  018D38  6FD8               	movwf	I2C2_ISR@i2c_10bit_address_restart& (0+255),b
 35076  018D3A  D7BC               	goto	i1l21468
 35077  018D3C                     i1l21496:
 35078                           
 35079                           ; BSR set to: 0
 35080                           ;i2c2.c: 384: if(i2c_10bit_address_restart != 1)
 35081  018D3C  05D8               	decf	I2C2_ISR@i2c_10bit_address_restart& (0+255),w,b
 35082  018D3E  B4D8               	btfsc	status,2,c
 35083  018D40  D01A               	goto	i1l953
 35084                           
 35085                           ; BSR set to: 0
 35086                           ;i2c2.c: 385: {;i2c2.c: 387: i2c_address = p_i2c2_trb_current->address;
 35087  018D42  C0D3  FFD9         	movff	_p_i2c2_trb_current,fsr2l
 35088  018D46  C0D4  FFDA         	movff	_p_i2c2_trb_current+1,fsr2h
 35089  018D4A  CFDE F0F9          	movff	postinc2,I2C2_ISR@i2c_address
 35090  018D4E  CFDD F0FA          	movff	postdec2,I2C2_ISR@i2c_address+1
 35091                           
 35092                           ; BSR set to: 0
 35093                           ;i2c2.c: 388: pi2c_buf_ptr = p_i2c2_trb_current->pbuffer;
 35094  018D52  EE20 F003          	lfsr	2,3
 35095  018D56  51D3               	movf	_p_i2c2_trb_current& (0+255),w,b
 35096  018D58  26D9               	addwf	fsr2l,f,c
 35097  018D5A  51D4               	movf	(_p_i2c2_trb_current+1)& (0+255),w,b
 35098  018D5C  22DA               	addwfc	fsr2h,f,c
 35099  018D5E  CFDE F0CF          	movff	postinc2,I2C2_ISR@pi2c_buf_ptr
 35100  018D62  CFDD F0D0          	movff	postdec2,I2C2_ISR@pi2c_buf_ptr+1
 35101                           
 35102                           ; BSR set to: 0
 35103                           ;i2c2.c: 389: i2c_bytes_left = p_i2c2_trb_current->length;
 35104  018D66  EE20 F002          	lfsr	2,2
 35105  018D6A  51D3               	movf	_p_i2c2_trb_current& (0+255),w,b
 35106  018D6C  26D9               	addwf	fsr2l,f,c
 35107  018D6E  51D4               	movf	(_p_i2c2_trb_current+1)& (0+255),w,b
 35108  018D70  22DA               	addwfc	fsr2h,f,c
 35109  018D72  50DF               	movf	indf2,w,c
 35110  018D74  6FD9               	movwf	I2C2_ISR@i2c_bytes_left& (0+255),b
 35111  018D76                     i1l953:
 35112                           
 35113                           ; BSR set to: 0
 35114                           ;i2c2.c: 412: else;i2c2.c: 413: {;i2c2.c: 415: SSP2BUF = i2c_address;
 35115  018D76  C0F9  FE92         	movff	I2C2_ISR@i2c_address,3730	;volatile
 35116                           
 35117                           ;i2c2.c: 416: if(i2c_address & 0x01)
 35118  018D7A  A1F9               	btfss	I2C2_ISR@i2c_address& (0+255),0,b
 35119  018D7C  D7BA               	goto	i1l21482
 35120                           
 35121                           ; BSR set to: 0
 35122                           ;i2c2.c: 417: {;i2c2.c: 419: i2c2_state = S_MASTER_ACK_ADDR;
 35123  018D7E  0E05               	movlw	5
 35124  018D80  6FDB               	movwf	_i2c2_state& (0+255),b
 35125                           
 35126                           ;i2c2.c: 420: }
 35127  018D82  0012               	return	
 35128  018D84                     i1l959:
 35129                           
 35130                           ; BSR set to: 0
 35131                           ;i2c2.c: 432: if(SSP2CON2bits.ACKSTAT)
 35132  018D84  010E               	movlb	14	; () banked
 35133  018D86  AD97               	btfss	151,6,b	;volatile
 35134  018D88  D008               	goto	i1l21524
 35135                           
 35136                           ; BSR set to: 14
 35137                           ;i2c2.c: 433: {;i2c2.c: 435: i2c2_object.i2cErrors++;
 35138  018D8A  0101               	movlb	1	; () banked
 35139  018D8C  2B67               	incf	(_i2c2_object+6)& (0+255),f,b
 35140                           
 35141                           ; BSR set to: 1
 35142                           ;i2c2.c: 438: SSP2CON2bits.ACKSTAT = 0;
 35143  018D8E  010E               	movlb	14	; () banked
 35144  018D90  9D97               	bcf	151,6,b	;volatile
 35145                           
 35146                           ; BSR set to: 14
 35147                           ;i2c2.c: 441: I2C2_Stop(I2C2_DATA_NO_ACK);
 35148  018D92  0E05               	movlw	5
 35149  018D94  EC23  F0DE         	call	_I2C2_Stop
 35150                           
 35151                           ;i2c2.c: 443: }
 35152  018D98  0012               	return	
 35153  018D9A                     i1l21524:
 35154                           
 35155                           ; BSR set to: 14
 35156                           ;i2c2.c: 444: else;i2c2.c: 445: {;i2c2.c: 447: if(i2c_bytes_left-- == 0U)
 35157  018D9A  0100               	movlb	0	; () banked
 35158  018D9C  07D9               	decf	I2C2_ISR@i2c_bytes_left& (0+255),f,b
 35159  018D9E  29D9               	incf	I2C2_ISR@i2c_bytes_left& (0+255),w,b
 35160  018DA0  A4D8               	btfss	status,2,c
 35161  018DA2  D00D               	goto	i1l21534
 35162                           
 35163                           ; BSR set to: 0
 35164                           ;i2c2.c: 448: {;i2c2.c: 452: p_i2c2_trb_current++;
 35165  018DA4  0E05               	movlw	5
 35166  018DA6  27D3               	addwf	_p_i2c2_trb_current& (0+255),f,b
 35167  018DA8  0E00               	movlw	0
 35168  018DAA  23D4               	addwfc	(_p_i2c2_trb_current+1)& (0+255),f,b
 35169                           
 35170                           ; BSR set to: 0
 35171                           ;i2c2.c: 455: if(--i2c2_trb_count == 0)
 35172  018DAC  2FDA               	decfsz	_i2c2_trb_count& (0+255),f,b
 35173  018DAE  D004               	goto	i1l963
 35174                           
 35175                           ; BSR set to: 0
 35176                           ;i2c2.c: 456: {;i2c2.c: 457: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
 35177  018DB0  0E00               	movlw	0
 35178  018DB2  EC23  F0DE         	call	_I2C2_Stop
 35179                           
 35180                           ;i2c2.c: 458: }
 35181  018DB6  0012               	return	
 35182  018DB8                     i1l963:
 35183                           
 35184                           ; BSR set to: 0
 35185                           ;i2c2.c: 459: else;i2c2.c: 460: {;i2c2.c: 467: SSP2CON2bits.RSEN = 1;
 35186  018DB8  010E               	movlb	14	; () banked
 35187  018DBA  8397               	bsf	151,1,b	;volatile
 35188  018DBC  D77B               	goto	i1l21468
 35189  018DBE                     i1l21534:
 35190                           
 35191                           ; BSR set to: 0
 35192                           ;i2c2.c: 474: else;i2c2.c: 475: {;i2c2.c: 477: SSP2BUF = *pi2c_buf_ptr++;
 35193  018DBE  C0CF  FFD9         	movff	I2C2_ISR@pi2c_buf_ptr,fsr2l
 35194  018DC2  C0D0  FFDA         	movff	I2C2_ISR@pi2c_buf_ptr+1,fsr2h
 35195  018DC6  50DF               	movf	indf2,w,c
 35196  018DC8  010E               	movlb	14	; () banked
 35197  018DCA  6F92               	movwf	146,b	;volatile
 35198                           
 35199                           ; BSR set to: 14
 35200  018DCC  0100               	movlb	0	; () banked
 35201  018DCE  4BCF               	infsnz	I2C2_ISR@pi2c_buf_ptr& (0+255),f,b
 35202  018DD0  2BD0               	incf	(I2C2_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 35203  018DD2  0012               	return	
 35204  018DD4                     i1l966:
 35205                           
 35206                           ; BSR set to: 0
 35207                           ;i2c2.c: 485: if(SSP2CON2bits.ACKSTAT)
 35208  018DD4  010E               	movlb	14	; () banked
 35209  018DD6  AD97               	btfss	151,6,b	;volatile
 35210  018DD8  D008               	goto	i1l967
 35211                           
 35212                           ; BSR set to: 14
 35213                           ;i2c2.c: 486: {;i2c2.c: 489: i2c2_object.i2cErrors++;
 35214  018DDA  0101               	movlb	1	; () banked
 35215  018DDC  2B67               	incf	(_i2c2_object+6)& (0+255),f,b
 35216                           
 35217                           ; BSR set to: 1
 35218                           ;i2c2.c: 492: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
 35219  018DDE  0E04               	movlw	4
 35220  018DE0  EC23  F0DE         	call	_I2C2_Stop
 35221                           
 35222                           ;i2c2.c: 495: SSP2CON2bits.ACKSTAT = 0;
 35223  018DE4  010E               	movlb	14	; () banked
 35224  018DE6  9D97               	bcf	151,6,b	;volatile
 35225                           
 35226                           ;i2c2.c: 496: }
 35227  018DE8  0012               	return	
 35228  018DEA                     i1l967:
 35229                           
 35230                           ; BSR set to: 14
 35231                           ;i2c2.c: 497: else;i2c2.c: 498: {;i2c2.c: 499: SSP2CON2bits.RCEN = 1;
 35232  018DEA  8797               	bsf	151,3,b	;volatile
 35233                           
 35234                           ; BSR set to: 14
 35235                           ;i2c2.c: 500: i2c2_state = S_MASTER_ACK_RCV_DATA;
 35236  018DEC  0E08               	movlw	8
 35237  018DEE  0100               	movlb	0	; () banked
 35238  018DF0  6FDB               	movwf	_i2c2_state& (0+255),b
 35239  018DF2  0012               	return	
 35240  018DF4                     i1l21546:
 35241                           
 35242                           ; BSR set to: 0
 35243                           ;i2c2.c: 509: i2c2_state = S_MASTER_ACK_RCV_DATA;
 35244  018DF4  0E08               	movlw	8
 35245  018DF6  6FDB               	movwf	_i2c2_state& (0+255),b
 35246                           
 35247                           ; BSR set to: 0
 35248                           ;i2c2.c: 512: SSP2CON2bits.RCEN = 1;
 35249  018DF8  010E               	movlb	14	; () banked
 35250  018DFA  8797               	bsf	151,3,b	;volatile
 35251                           
 35252                           ;i2c2.c: 514: break;
 35253  018DFC  0012               	return	
 35254  018DFE                     i1l21550:
 35255                           
 35256                           ; BSR set to: 0
 35257                           ;i2c2.c: 519: *pi2c_buf_ptr++ = SSP2BUF;
 35258  018DFE  C0CF  FFD9         	movff	I2C2_ISR@pi2c_buf_ptr,fsr2l
 35259  018E02  C0D0  FFDA         	movff	I2C2_ISR@pi2c_buf_ptr+1,fsr2h
 35260  018E06  CE92 FFDF          	movff	3730,indf2	;volatile
 35261                           
 35262                           ; BSR set to: 0
 35263  018E0A  4BCF               	infsnz	I2C2_ISR@pi2c_buf_ptr& (0+255),f,b
 35264  018E0C  2BD0               	incf	(I2C2_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 35265                           
 35266                           ; BSR set to: 0
 35267                           ;i2c2.c: 522: if(--i2c_bytes_left)
 35268  018E0E  0E01               	movlw	1
 35269  018E10  5FD9               	subwf	I2C2_ISR@i2c_bytes_left& (0+255),f,b
 35270  018E12  B4D8               	btfsc	status,2,c
 35271  018E14  D006               	goto	i1l971
 35272                           
 35273                           ; BSR set to: 0
 35274                           ;i2c2.c: 523: {;i2c2.c: 529: SSP2CON2bits.ACKDT = 0;
 35275  018E16  010E               	movlb	14	; () banked
 35276  018E18  9B97               	bcf	151,5,b	;volatile
 35277                           
 35278                           ; BSR set to: 14
 35279                           ;i2c2.c: 532: i2c2_state = S_MASTER_RCV_DATA;
 35280  018E1A  0E06               	movlw	6
 35281  018E1C  0100               	movlb	0	; () banked
 35282  018E1E  6FDB               	movwf	_i2c2_state& (0+255),b
 35283                           
 35284                           ;i2c2.c: 533: }
 35285  018E20  D004               	goto	i1l21562
 35286  018E22                     i1l971:
 35287                           
 35288                           ; BSR set to: 0
 35289                           ;i2c2.c: 534: else;i2c2.c: 535: {;i2c2.c: 539: SSP2CON2bits.ACKDT = 1;
 35290  018E22  010E               	movlb	14	; () banked
 35291  018E24  8B97               	bsf	151,5,b	;volatile
 35292                           
 35293                           ; BSR set to: 14
 35294                           ;i2c2.c: 541: I2C2_FunctionComplete();
 35295  018E26  ECC9  F0E2         	call	_I2C2_FunctionComplete	;wreg free
 35296  018E2A                     i1l21562:
 35297                           
 35298                           ;i2c2.c: 542: };i2c2.c: 545: SSP2CON2bits.ACKEN = 1;
 35299  018E2A  010E               	movlb	14	; () banked
 35300  018E2C  8997               	bsf	151,4,b	;volatile
 35301                           
 35302                           ;i2c2.c: 546: break;
 35303  018E2E  0012               	return	
 35304  018E30                     i1l21564:
 35305                           
 35306                           ; BSR set to: 0
 35307                           ;i2c2.c: 549: case S_MASTER_SEND_STOP:;i2c2.c: 552: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
 35308  018E30  0E00               	movlw	0
 35309  018E32  EC23  F0DE         	call	_I2C2_Stop
 35310                           
 35311                           ;i2c2.c: 553: break;
 35312  018E36  0012               	return	
 35313  018E38                     i1l21566:
 35314                           
 35315                           ; BSR set to: 0
 35316                           ;i2c2.c: 559: i2c2_object.i2cErrors++;
 35317  018E38  0101               	movlb	1	; () banked
 35318  018E3A  2B67               	incf	(_i2c2_object+6)& (0+255),f,b
 35319                           
 35320                           ; BSR set to: 1
 35321                           ;i2c2.c: 560: I2C2_Stop(I2C2_LOST_STATE);
 35322  018E3C  0E06               	movlw	6
 35323  018E3E  EC23  F0DE         	call	_I2C2_Stop
 35324                           
 35325                           ;i2c2.c: 561: break;
 35326  018E42  0012               	return	
 35327  018E44                     i1l21572:
 35328                           
 35329                           ; BSR set to: 14
 35330  018E44  0100               	movlb	0	; () banked
 35331  018E46  51DB               	movf	_i2c2_state& (0+255),w,b
 35332                           
 35333                           ; Switch size 1, requested type "simple"
 35334                           ; Number of cases is 11, Range of values is 0 to 11
 35335                           ; switch strategies available:
 35336                           ; Name         Instructions Cycles
 35337                           ; simple_byte           34    18 (average)
 35338                           ;	Chosen strategy is simple_byte
 35339  018E48  0A00               	xorlw	0	; case 0
 35340  018E4A  B4D8               	btfsc	status,2,c
 35341  018E4C  D701               	goto	i1l937
 35342  018E4E  0A01               	xorlw	1	; case 1
 35343  018E50  B4D8               	btfsc	status,2,c
 35344  018E52  D7B2               	goto	i1l963
 35345  018E54  0A03               	xorlw	3	; case 2
 35346  018E56  B4D8               	btfsc	status,2,c
 35347  018E58  D771               	goto	i1l21496
 35348  018E5A  0A01               	xorlw	1	; case 3
 35349  018E5C  B4D8               	btfsc	status,2,c
 35350  018E5E  D792               	goto	i1l959
 35351  018E60  0A07               	xorlw	7	; case 4
 35352  018E62  B4D8               	btfsc	status,2,c
 35353  018E64  D7E5               	goto	i1l21564
 35354  018E66  0A01               	xorlw	1	; case 5
 35355  018E68  B4D8               	btfsc	status,2,c
 35356  018E6A  D7B4               	goto	i1l966
 35357  018E6C  0A03               	xorlw	3	; case 6
 35358  018E6E  B4D8               	btfsc	status,2,c
 35359  018E70  D7C1               	goto	i1l21546
 35360  018E72  0A01               	xorlw	1	; case 7
 35361  018E74  B4D8               	btfsc	status,2,c
 35362  018E76  D7DC               	goto	i1l21564
 35363  018E78  0A0F               	xorlw	15	; case 8
 35364  018E7A  B4D8               	btfsc	status,2,c
 35365  018E7C  D7C0               	goto	i1l21550
 35366  018E7E  0A02               	xorlw	2	; case 10
 35367  018E80  B4D8               	btfsc	status,2,c
 35368  018E82  D71C               	goto	i1l943
 35369  018E84  0A01               	xorlw	1	; case 11
 35370  018E86  B4D8               	btfsc	status,2,c
 35371  018E88  D737               	goto	i1l948
 35372  018E8A  D7D6               	goto	i1l21566
 35373  018E8C                     __end_of_I2C2_ISR:
 35374                           	opt callstack 0
 35375                           
 35376 ;; *************** function _I2C2_Stop *****************
 35377 ;; Defined at:
 35378 ;;		line 584 in file "mcc_generated_files/i2c2.c"
 35379 ;; Parameters:    Size  Location     Type
 35380 ;;  completion_c    1    wreg     enum E9433
 35381 ;; Auto vars:     Size  Location     Type
 35382 ;;  completion_c    1    2[BANK1 ] enum E9433
 35383 ;; Return value:  Size  Location     Type
 35384 ;;                  1    wreg      void 
 35385 ;; Registers used:
 35386 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35387 ;; Tracked objects:
 35388 ;;		On entry : 0/0
 35389 ;;		On exit  : 0/0
 35390 ;;		Unchanged: 0/0
 35391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35393 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35394 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35395 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35396 ;;Total ram usage:        3 bytes
 35397 ;; Hardware stack levels used:    1
 35398 ;; Hardware stack levels required when called:    6
 35399 ;; This function calls:
 35400 ;;		Nothing
 35401 ;; This function is called by:
 35402 ;;		_I2C2_ISR
 35403 ;; This function uses a non-reentrant model
 35404 ;;
 35405                           
 35406                           	psect	text138
 35407  01BC46                     __ptext138:
 35408                           	opt callstack 0
 35409  01BC46                     _I2C2_Stop:
 35410                           	opt callstack 14
 35411                           
 35412                           ;incstack = 0
 35413                           ;I2C2_Stop@completion_code stored from wreg
 35414  01BC46  0101               	movlb	1	; () banked
 35415  01BC48  6F02               	movwf	I2C2_Stop@completion_code& (0+255),b
 35416                           
 35417                           ;i2c2.c: 587: SSP2CON2bits.PEN = 1;
 35418  01BC4A  010E               	movlb	14	; () banked
 35419  01BC4C  8597               	bsf	151,2,b	;volatile
 35420                           
 35421                           ; BSR set to: 14
 35422                           ;i2c2.c: 590: if (p_i2c2_current->pTrFlag != (0))
 35423  01BC4E  0100               	movlb	0	; () banked
 35424  01BC50  EE20 F003          	lfsr	2,3
 35425  01BC54  51D1               	movf	_p_i2c2_current& (0+255),w,b
 35426  01BC56  26D9               	addwf	fsr2l,f,c
 35427  01BC58  51D2               	movf	(_p_i2c2_current+1)& (0+255),w,b
 35428  01BC5A  22DA               	addwfc	fsr2h,f,c
 35429  01BC5C  50DE               	movf	postinc2,w,c
 35430  01BC5E  10DE               	iorwf	postinc2,w,c
 35431  01BC60  B4D8               	btfsc	status,2,c
 35432  01BC62  D010               	goto	i1l20908
 35433                           
 35434                           ; BSR set to: 0
 35435                           ;i2c2.c: 591: {;i2c2.c: 593: *(p_i2c2_current->pTrFlag) = completion_code;
 35436  01BC64  EE20 F003          	lfsr	2,3
 35437  01BC68  51D1               	movf	_p_i2c2_current& (0+255),w,b
 35438  01BC6A  26D9               	addwf	fsr2l,f,c
 35439  01BC6C  51D2               	movf	(_p_i2c2_current+1)& (0+255),w,b
 35440  01BC6E  22DA               	addwfc	fsr2h,f,c
 35441  01BC70  CFDE F100          	movff	postinc2,??_I2C2_Stop
 35442  01BC74  CFDD F101          	movff	postdec2,??_I2C2_Stop+1
 35443  01BC78  C100  FFD9         	movff	??_I2C2_Stop,fsr2l
 35444  01BC7C  C101  FFDA         	movff	??_I2C2_Stop+1,fsr2h
 35445  01BC80  C102  FFDF         	movff	I2C2_Stop@completion_code,indf2
 35446  01BC84                     i1l20908:
 35447                           
 35448                           ; BSR set to: 0
 35449                           ;i2c2.c: 594: };i2c2.c: 597: i2c2_state = S_MASTER_IDLE;
 35450  01BC84  0E00               	movlw	0
 35451  01BC86  6FDB               	movwf	_i2c2_state& (0+255),b
 35452                           
 35453                           ; BSR set to: 0
 35454  01BC88  0012               	return		;funcret
 35455  01BC8A                     __end_of_I2C2_Stop:
 35456                           	opt callstack 0
 35457                           
 35458 ;; *************** function _I2C2_FunctionComplete *****************
 35459 ;; Defined at:
 35460 ;;		line 566 in file "mcc_generated_files/i2c2.c"
 35461 ;; Parameters:    Size  Location     Type
 35462 ;;		None
 35463 ;; Auto vars:     Size  Location     Type
 35464 ;;		None
 35465 ;; Return value:  Size  Location     Type
 35466 ;;                  1    wreg      void 
 35467 ;; Registers used:
 35468 ;;		wreg, status,2, status,0
 35469 ;; Tracked objects:
 35470 ;;		On entry : 0/0
 35471 ;;		On exit  : 0/0
 35472 ;;		Unchanged: 0/0
 35473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35478 ;;Total ram usage:        0 bytes
 35479 ;; Hardware stack levels used:    1
 35480 ;; Hardware stack levels required when called:    6
 35481 ;; This function calls:
 35482 ;;		Nothing
 35483 ;; This function is called by:
 35484 ;;		_I2C2_ISR
 35485 ;; This function uses a non-reentrant model
 35486 ;;
 35487                           
 35488                           	psect	text139
 35489  01C592                     __ptext139:
 35490                           	opt callstack 0
 35491  01C592                     _I2C2_FunctionComplete:
 35492                           	opt callstack 14
 35493                           
 35494                           ;i2c2.c: 570: p_i2c2_trb_current++;
 35495                           
 35496                           ; BSR set to: 0
 35497                           ;incstack = 0
 35498  01C592  0E05               	movlw	5
 35499  01C594  0100               	movlb	0	; () banked
 35500  01C596  27D3               	addwf	_p_i2c2_trb_current& (0+255),f,b
 35501  01C598  0E00               	movlw	0
 35502  01C59A  23D4               	addwfc	(_p_i2c2_trb_current+1)& (0+255),f,b
 35503                           
 35504                           ; BSR set to: 0
 35505                           ;i2c2.c: 573: if(--i2c2_trb_count == 0)
 35506  01C59C  2FDA               	decfsz	_i2c2_trb_count& (0+255),f,b
 35507  01C59E  D003               	goto	i1l20916
 35508                           
 35509                           ; BSR set to: 0
 35510                           ;i2c2.c: 574: {;i2c2.c: 575: i2c2_state = S_MASTER_SEND_STOP;
 35511  01C5A0  0E04               	movlw	4
 35512  01C5A2  6FDB               	movwf	_i2c2_state& (0+255),b
 35513                           
 35514                           ;i2c2.c: 576: }
 35515  01C5A4  0012               	return	
 35516  01C5A6                     i1l20916:
 35517                           
 35518                           ; BSR set to: 0
 35519                           ;i2c2.c: 577: else;i2c2.c: 578: {;i2c2.c: 579: i2c2_state = S_MASTER_RESTART;
 35520  01C5A6  0E01               	movlw	1
 35521  01C5A8  6FDB               	movwf	_i2c2_state& (0+255),b
 35522                           
 35523                           ; BSR set to: 0
 35524  01C5AA  0012               	return		;funcret
 35525  01C5AC                     __end_of_I2C2_FunctionComplete:
 35526                           	opt callstack 0
 35527                           
 35528 ;; *************** function _I2C2_BusCollisionISR *****************
 35529 ;; Defined at:
 35530 ;;		line 743 in file "mcc_generated_files/i2c2.c"
 35531 ;; Parameters:    Size  Location     Type
 35532 ;;		None
 35533 ;; Auto vars:     Size  Location     Type
 35534 ;;		None
 35535 ;; Return value:  Size  Location     Type
 35536 ;;                  1    wreg      void 
 35537 ;; Registers used:
 35538 ;;		wreg, status,2
 35539 ;; Tracked objects:
 35540 ;;		On entry : 0/0
 35541 ;;		On exit  : 0/0
 35542 ;;		Unchanged: 0/0
 35543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35548 ;;Total ram usage:        0 bytes
 35549 ;; Hardware stack levels used:    1
 35550 ;; Hardware stack levels required when called:    6
 35551 ;; This function calls:
 35552 ;;		Nothing
 35553 ;; This function is called by:
 35554 ;;		_INTERRUPT_InterruptManagerLow
 35555 ;; This function uses a non-reentrant model
 35556 ;;
 35557                           
 35558                           	psect	text140
 35559  01C804                     __ptext140:
 35560                           	opt callstack 0
 35561  01C804                     _I2C2_BusCollisionISR:
 35562                           	opt callstack 15
 35563                           
 35564                           ;i2c2.c: 746: PIR3bits.BCL2IF = 0;
 35565                           
 35566                           ; BSR set to: 0
 35567                           ;incstack = 0
 35568  01C804  010E               	movlb	14	; () banked
 35569  01C806  97CD               	bcf	205,3,b	;volatile
 35570                           
 35571                           ; BSR set to: 14
 35572                           ;i2c2.c: 747: error_handler.I2C_General_error_flag = 1;
 35573  01C808  0E01               	movlw	1
 35574  01C80A  0100               	movlb	0	; () banked
 35575  01C80C  6FBB               	movwf	(_error_handler+2)& (0+255),b
 35576                           
 35577                           ; BSR set to: 0
 35578  01C80E  0012               	return		;funcret
 35579  01C810                     __end_of_I2C2_BusCollisionISR:
 35580                           	opt callstack 0
 35581                           
 35582 ;; *************** function _CCP2_CaptureISR *****************
 35583 ;; Defined at:
 35584 ;;		line 89 in file "mcc_generated_files/ccp2.c"
 35585 ;; Parameters:    Size  Location     Type
 35586 ;;		None
 35587 ;; Auto vars:     Size  Location     Type
 35588 ;;  module          2   86[BANK1 ] struct CCPR2Reg_tag
 35589 ;; Return value:  Size  Location     Type
 35590 ;;                  1    wreg      void 
 35591 ;; Registers used:
 35592 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 35593 ;; Tracked objects:
 35594 ;;		On entry : 0/0
 35595 ;;		On exit  : 0/0
 35596 ;;		Unchanged: 0/0
 35597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35599 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35601 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35602 ;;Total ram usage:        2 bytes
 35603 ;; Hardware stack levels used:    1
 35604 ;; Hardware stack levels required when called:    9
 35605 ;; This function calls:
 35606 ;;		_CCP2_CallBack
 35607 ;; This function is called by:
 35608 ;;		_INTERRUPT_InterruptManagerLow
 35609 ;; This function uses a non-reentrant model
 35610 ;;
 35611                           
 35612                           	psect	text141
 35613  01C5AC                     __ptext141:
 35614                           	opt callstack 0
 35615  01C5AC                     _CCP2_CaptureISR:
 35616                           	opt callstack 12
 35617                           
 35618                           ;ccp2.c: 92: CCP2_PERIOD_REG_T module;;ccp2.c: 95: PIR6bits.CCP2IF = 0;
 35619                           
 35620                           ; BSR set to: 0
 35621                           ;incstack = 0
 35622  01C5AC  010E               	movlb	14	; () banked
 35623  01C5AE  93D0               	bcf	208,1,b	;volatile
 35624                           
 35625                           ;ccp2.c: 98: module.ccpr2l = CCPR2L;
 35626  01C5B0  CFA6 F156          	movff	4006,CCP2_CaptureISR@module	;volatile
 35627                           
 35628                           ;ccp2.c: 99: module.ccpr2h = CCPR2H;
 35629  01C5B4  CFA7 F157          	movff	4007,CCP2_CaptureISR@module+1	;volatile
 35630                           
 35631                           ; BSR set to: 14
 35632                           ;ccp2.c: 102: CCP2_CallBack(module.ccpr2_16Bit);
 35633  01C5B8  C156  F154         	movff	CCP2_CaptureISR@module,CCP2_CallBack@capturedValue
 35634  01C5BC  C157  F155         	movff	CCP2_CaptureISR@module+1,CCP2_CallBack@capturedValue+1
 35635  01C5C0  EC87  F0DE         	call	_CCP2_CallBack	;wreg free
 35636  01C5C4  0012               	return		;funcret
 35637  01C5C6                     __end_of_CCP2_CaptureISR:
 35638                           	opt callstack 0
 35639                           
 35640 ;; *************** function _CCP2_CallBack *****************
 35641 ;; Defined at:
 35642 ;;		line 105 in file "mcc_generated_files/ccp2.c"
 35643 ;; Parameters:    Size  Location     Type
 35644 ;;  capturedValu    2   84[BANK1 ] unsigned int 
 35645 ;; Auto vars:     Size  Location     Type
 35646 ;;		None
 35647 ;; Return value:  Size  Location     Type
 35648 ;;                  1    wreg      void 
 35649 ;; Registers used:
 35650 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 35651 ;; Tracked objects:
 35652 ;;		On entry : 0/0
 35653 ;;		On exit  : 0/0
 35654 ;;		Unchanged: 0/0
 35655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35656 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35659 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35660 ;;Total ram usage:        2 bytes
 35661 ;; Hardware stack levels used:    1
 35662 ;; Hardware stack levels required when called:    8
 35663 ;; This function calls:
 35664 ;;		_freqMeasConvert
 35665 ;; This function is called by:
 35666 ;;		_CCP2_CaptureISR
 35667 ;; This function uses a non-reentrant model
 35668 ;;
 35669                           
 35670                           	psect	text142
 35671  01BD0E                     __ptext142:
 35672                           	opt callstack 0
 35673  01BD0E                     _CCP2_CallBack:
 35674                           	opt callstack 12
 35675                           
 35676                           ;ccp2.c: 108: switch (QI_current_edge) {
 35677                           
 35678                           ;incstack = 0
 35679  01BD0E  D016               	goto	i1l15136
 35680  01BD10                     i1l15126:
 35681                           
 35682                           ; BSR set to: 1
 35683                           ;ccp2.c: 113: TMR5H = 0;
 35684  01BD10  0E00               	movlw	0
 35685  01BD12  6EC2               	movwf	4034,c	;volatile
 35686                           
 35687                           ;ccp2.c: 114: TMR5L = 0;
 35688  01BD14  0E00               	movlw	0
 35689  01BD16  6EC1               	movwf	4033,c	;volatile
 35690                           
 35691                           ; BSR set to: 1
 35692                           ;ccp2.c: 115: T5CONbits.ON = 1;
 35693  01BD18  80C3               	bsf	4035,0,c	;volatile
 35694                           
 35695                           ;ccp2.c: 118: QI_current_edge = qi_period_rising_2;
 35696  01BD1A  0E01               	movlw	1
 35697  01BD1C  6F96               	movwf	_QI_current_edge& (0+255),b
 35698                           
 35699                           ;ccp2.c: 120: break;
 35700  01BD1E  0012               	return	
 35701  01BD20                     i1l1069:
 35702                           
 35703                           ; BSR set to: 1
 35704                           ;ccp2.c: 125: T5CONbits.ON = 0;
 35705  01BD20  90C3               	bcf	4035,0,c	;volatile
 35706                           
 35707                           ;ccp2.c: 128: freq_meas_results.QI_Freq_Meas_Raw = capturedValue;
 35708  01BD22  C154  F16C         	movff	CCP2_CallBack@capturedValue,_freq_meas_results+4
 35709  01BD26  C155  F16D         	movff	CCP2_CallBack@capturedValue+1,_freq_meas_results+5
 35710                           
 35711                           ; BSR set to: 1
 35712                           ;ccp2.c: 131: TMR5H = 0;
 35713  01BD2A  0E00               	movlw	0
 35714  01BD2C  6EC2               	movwf	4034,c	;volatile
 35715                           
 35716                           ;ccp2.c: 132: TMR5L = 0;
 35717  01BD2E  0E00               	movlw	0
 35718  01BD30  6EC1               	movwf	4033,c	;volatile
 35719                           
 35720                           ;ccp2.c: 134: QI_current_edge = qi_period_rising_1;
 35721  01BD32  0E00               	movlw	0
 35722  01BD34  6F96               	movwf	_QI_current_edge& (0+255),b
 35723                           
 35724                           ; BSR set to: 1
 35725                           ;ccp2.c: 137: freqMeasConvert();
 35726  01BD36  EC28  F0D3         	call	_freqMeasConvert	;wreg free
 35727                           
 35728                           ;ccp2.c: 139: break;
 35729  01BD3A  0012               	return	
 35730  01BD3C                     i1l15136:
 35731  01BD3C  0101               	movlb	1	; () banked
 35732  01BD3E  5196               	movf	_QI_current_edge& (0+255),w,b
 35733                           
 35734                           ; Switch size 1, requested type "simple"
 35735                           ; Number of cases is 2, Range of values is 0 to 1
 35736                           ; switch strategies available:
 35737                           ; Name         Instructions Cycles
 35738                           ; simple_byte            7     4 (average)
 35739                           ;	Chosen strategy is simple_byte
 35740  01BD40  0A00               	xorlw	0	; case 0
 35741  01BD42  B4D8               	btfsc	status,2,c
 35742  01BD44  D7E5               	goto	i1l15126
 35743  01BD46  0A01               	xorlw	1	; case 1
 35744  01BD48  A4D8               	btfss	status,2,c
 35745  01BD4A  0012               	return	
 35746  01BD4C  D7E9               	goto	i1l1069
 35747  01BD4E                     __end_of_CCP2_CallBack:
 35748                           	opt callstack 0
 35749                           
 35750 ;; *************** function _freqMeasConvert *****************
 35751 ;; Defined at:
 35752 ;;		line 16 in file "freq_meas.c"
 35753 ;; Parameters:    Size  Location     Type
 35754 ;;		None
 35755 ;; Auto vars:     Size  Location     Type
 35756 ;;  qi_period       4   80[BANK1 ] void 
 35757 ;; Return value:  Size  Location     Type
 35758 ;;                  1    wreg      void 
 35759 ;; Registers used:
 35760 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 35761 ;; Tracked objects:
 35762 ;;		On entry : 0/0
 35763 ;;		On exit  : 0/0
 35764 ;;		Unchanged: 0/0
 35765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35767 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35769 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35770 ;;Total ram usage:        4 bytes
 35771 ;; Hardware stack levels used:    1
 35772 ;; Hardware stack levels required when called:    7
 35773 ;; This function calls:
 35774 ;;		i1___fladd
 35775 ;;		i1___fldiv
 35776 ;;		i1___flmul
 35777 ;;		i1___xxtofl
 35778 ;; This function is called by:
 35779 ;;		_CCP2_CallBack
 35780 ;; This function uses a non-reentrant model
 35781 ;;
 35782                           
 35783                           	psect	text143
 35784  01A650                     __ptext143:
 35785                           	opt callstack 0
 35786  01A650                     _freqMeasConvert:
 35787                           	opt callstack 12
 35788                           
 35789                           ;freq_meas.c: 19: double qi_period = ((((float) freq_meas_results.QI_Freq_Meas_Raw + 1) 
      +                          / 16.0) * 0.00000063);
 35790                           
 35791                           ;incstack = 0
 35792  01A650  0E00               	movlw	0
 35793  01A652  0101               	movlb	1	; () banked
 35794  01A654  6F22               	movwf	i1___fldiv@a& (0+255),b
 35795  01A656  0E00               	movlw	0
 35796  01A658  6F23               	movwf	(i1___fldiv@a+1)& (0+255),b
 35797  01A65A  0E80               	movlw	128
 35798  01A65C  6F24               	movwf	(i1___fldiv@a+2)& (0+255),b
 35799  01A65E  0E41               	movlw	65
 35800  01A660  6F25               	movwf	(i1___fldiv@a+3)& (0+255),b
 35801  01A662  0E00               	movlw	0
 35802  01A664  6F12               	movwf	i1___fladd@a& (0+255),b
 35803  01A666  0E00               	movlw	0
 35804  01A668  6F13               	movwf	(i1___fladd@a+1)& (0+255),b
 35805  01A66A  0E80               	movlw	128
 35806  01A66C  6F14               	movwf	(i1___fladd@a+2)& (0+255),b
 35807  01A66E  0E3F               	movlw	63
 35808  01A670  6F15               	movwf	(i1___fladd@a+3)& (0+255),b
 35809  01A672  C16C  F100         	movff	_freq_meas_results+4,i1___xxtofl@val
 35810  01A676  C16D  F101         	movff	_freq_meas_results+5,i1___xxtofl@val+1
 35811  01A67A  6B02               	clrf	(i1___xxtofl@val+2)& (0+255),b
 35812  01A67C  6B03               	clrf	(i1___xxtofl@val+3)& (0+255),b
 35813  01A67E  0E00               	movlw	0
 35814  01A680  EC2A  F0CD         	call	i1___xxtofl
 35815  01A684  C100  F10E         	movff	?i1___xxtofl,i1___fladd@b
 35816  01A688  C101  F10F         	movff	?i1___xxtofl+1,i1___fladd@b+1
 35817  01A68C  C102  F110         	movff	?i1___xxtofl+2,i1___fladd@b+2
 35818  01A690  C103  F111         	movff	?i1___xxtofl+3,i1___fladd@b+3
 35819  01A694  ECCC  F0B9         	call	i1___fladd	;wreg free
 35820  01A698  C10E  F11E         	movff	?i1___fladd,i1___fldiv@b
 35821  01A69C  C10F  F11F         	movff	?i1___fladd+1,i1___fldiv@b+1
 35822  01A6A0  C110  F120         	movff	?i1___fladd+2,i1___fldiv@b+2
 35823  01A6A4  C111  F121         	movff	?i1___fladd+3,i1___fldiv@b+3
 35824  01A6A8  EC40  F0C2         	call	i1___fldiv	;wreg free
 35825  01A6AC  C11E  F137         	movff	?i1___fldiv,i1___flmul@b
 35826  01A6B0  C11F  F138         	movff	?i1___fldiv+1,i1___flmul@b+1
 35827  01A6B4  C120  F139         	movff	?i1___fldiv+2,i1___flmul@b+2
 35828  01A6B8  C121  F13A         	movff	?i1___fldiv+3,i1___flmul@b+3
 35829  01A6BC  0E45               	movlw	69
 35830  01A6BE  0101               	movlb	1	; () banked
 35831  01A6C0  6F3B               	movwf	i1___flmul@a& (0+255),b
 35832  01A6C2  0E1D               	movlw	29
 35833  01A6C4  6F3C               	movwf	(i1___flmul@a+1)& (0+255),b
 35834  01A6C6  0E29               	movlw	41
 35835  01A6C8  6F3D               	movwf	(i1___flmul@a+2)& (0+255),b
 35836  01A6CA  0E35               	movlw	53
 35837  01A6CC  6F3E               	movwf	(i1___flmul@a+3)& (0+255),b
 35838  01A6CE  ECF2  F0B4         	call	i1___flmul	;wreg free
 35839  01A6D2  C137  F150         	movff	?i1___flmul,freqMeasConvert@qi_period
 35840  01A6D6  C138  F151         	movff	?i1___flmul+1,freqMeasConvert@qi_period+1
 35841  01A6DA  C139  F152         	movff	?i1___flmul+2,freqMeasConvert@qi_period+2
 35842  01A6DE  C13A  F153         	movff	?i1___flmul+3,freqMeasConvert@qi_period+3
 35843                           
 35844                           ;freq_meas.c: 20: freq_meas_results.QI_Freq_Meas = 1.0 / qi_period;
 35845  01A6E2  0E00               	movlw	0
 35846  01A6E4  0101               	movlb	1	; () banked
 35847  01A6E6  6F1E               	movwf	i1___fldiv@b& (0+255),b
 35848  01A6E8  0E00               	movlw	0
 35849  01A6EA  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 35850  01A6EC  0E80               	movlw	128
 35851  01A6EE  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 35852  01A6F0  0E3F               	movlw	63
 35853  01A6F2  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 35854  01A6F4  C150  F122         	movff	freqMeasConvert@qi_period,i1___fldiv@a
 35855  01A6F8  C151  F123         	movff	freqMeasConvert@qi_period+1,i1___fldiv@a+1
 35856  01A6FC  C152  F124         	movff	freqMeasConvert@qi_period+2,i1___fldiv@a+2
 35857  01A700  C153  F125         	movff	freqMeasConvert@qi_period+3,i1___fldiv@a+3
 35858  01A704  EC40  F0C2         	call	i1___fldiv	;wreg free
 35859  01A708  C11E  F168         	movff	?i1___fldiv,_freq_meas_results
 35860  01A70C  C11F  F169         	movff	?i1___fldiv+1,_freq_meas_results+1
 35861  01A710  C120  F16A         	movff	?i1___fldiv+2,_freq_meas_results+2
 35862  01A714  C121  F16B         	movff	?i1___fldiv+3,_freq_meas_results+3
 35863  01A718  0012               	return		;funcret
 35864  01A71A                     __end_of_freqMeasConvert:
 35865                           	opt callstack 0
 35866                           
 35867 ;; *************** function i1___xxtofl *****************
 35868 ;; Defined at:
 35869 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
 35870 ;; Parameters:    Size  Location     Type
 35871 ;;  sign            1    wreg     unsigned char 
 35872 ;;  val             4    0[BANK1 ] long 
 35873 ;; Auto vars:     Size  Location     Type
 35874 ;;  sign            1    8[BANK1 ] unsigned char 
 35875 ;;  __xxtofl        4   10[BANK1 ] unsigned long 
 35876 ;;  __xxtofl        1    9[BANK1 ] unsigned char 
 35877 ;; Return value:  Size  Location     Type
 35878 ;;                  4    0[BANK1 ] unsigned char 
 35879 ;; Registers used:
 35880 ;;		wreg, status,2, status,0
 35881 ;; Tracked objects:
 35882 ;;		On entry : 0/0
 35883 ;;		On exit  : 0/0
 35884 ;;		Unchanged: 0/0
 35885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35886 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35887 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35888 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35889 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35890 ;;Total ram usage:       14 bytes
 35891 ;; Hardware stack levels used:    1
 35892 ;; Hardware stack levels required when called:    6
 35893 ;; This function calls:
 35894 ;;		Nothing
 35895 ;; This function is called by:
 35896 ;;		_freqMeasConvert
 35897 ;; This function uses a non-reentrant model
 35898 ;;
 35899                           
 35900                           	psect	text144
 35901  019A54                     __ptext144:
 35902                           	opt callstack 0
 35903  019A54                     i1___xxtofl:
 35904                           	opt callstack 12
 35905                           
 35906                           ;incstack = 0
 35907                           ;i1___xxtofl@sign stored from wreg
 35908  019A54  0101               	movlb	1	; () banked
 35909  019A56  6F08               	movwf	i1___xxtofl@sign& (0+255),b
 35910  019A58  0101               	movlb	1	; () banked
 35911  019A5A  5108               	movf	i1___xxtofl@sign& (0+255),w,b
 35912  019A5C  A4D8               	btfss	status,2,c
 35913                           
 35914                           ; BSR set to: 1
 35915  019A5E  AF03               	btfss	(i1___xxtofl@val+3)& (0+255),7,b
 35916  019A60  D01A               	goto	i1l3352
 35917                           
 35918                           ; BSR set to: 1
 35919  019A62  C100  F104         	movff	i1___xxtofl@val,??i1___xxtofl
 35920  019A66  C101  F105         	movff	i1___xxtofl@val+1,??i1___xxtofl+1
 35921  019A6A  C102  F106         	movff	i1___xxtofl@val+2,??i1___xxtofl+2
 35922  019A6E  C103  F107         	movff	i1___xxtofl@val+3,??i1___xxtofl+3
 35923  019A72  1F04               	comf	??i1___xxtofl& (0+255),f,b
 35924  019A74  1F05               	comf	(??i1___xxtofl+1)& (0+255),f,b
 35925  019A76  1F06               	comf	(??i1___xxtofl+2)& (0+255),f,b
 35926  019A78  1F07               	comf	(??i1___xxtofl+3)& (0+255),f,b
 35927  019A7A  2B04               	incf	??i1___xxtofl& (0+255),f,b
 35928  019A7C  0E00               	movlw	0
 35929  019A7E  2305               	addwfc	(??i1___xxtofl+1)& (0+255),f,b
 35930  019A80  2306               	addwfc	(??i1___xxtofl+2)& (0+255),f,b
 35931  019A82  2307               	addwfc	(??i1___xxtofl+3)& (0+255),f,b
 35932  019A84  C104  F10A         	movff	??i1___xxtofl,i1___xxtofl@arg
 35933  019A88  C105  F10B         	movff	??i1___xxtofl+1,i1___xxtofl@arg+1
 35934  019A8C  C106  F10C         	movff	??i1___xxtofl+2,i1___xxtofl@arg+2
 35935  019A90  C107  F10D         	movff	??i1___xxtofl+3,i1___xxtofl@arg+3
 35936  019A94  D008               	goto	i1l13762
 35937  019A96                     i1l3352:
 35938                           
 35939                           ; BSR set to: 1
 35940  019A96  C100  F10A         	movff	i1___xxtofl@val,i1___xxtofl@arg
 35941  019A9A  C101  F10B         	movff	i1___xxtofl@val+1,i1___xxtofl@arg+1
 35942  019A9E  C102  F10C         	movff	i1___xxtofl@val+2,i1___xxtofl@arg+2
 35943  019AA2  C103  F10D         	movff	i1___xxtofl@val+3,i1___xxtofl@arg+3
 35944  019AA6                     i1l13762:
 35945                           
 35946                           ; BSR set to: 1
 35947  019AA6  5100               	movf	i1___xxtofl@val& (0+255),w,b
 35948  019AA8  1101               	iorwf	(i1___xxtofl@val+1)& (0+255),w,b
 35949  019AAA  1102               	iorwf	(i1___xxtofl@val+2)& (0+255),w,b
 35950  019AAC  1103               	iorwf	(i1___xxtofl@val+3)& (0+255),w,b
 35951  019AAE  A4D8               	btfss	status,2,c
 35952  019AB0  D009               	goto	i1l13768
 35953                           
 35954                           ; BSR set to: 1
 35955  019AB2  0E00               	movlw	0
 35956  019AB4  6F00               	movwf	?i1___xxtofl& (0+255),b
 35957  019AB6  0E00               	movlw	0
 35958  019AB8  6F01               	movwf	(?i1___xxtofl+1)& (0+255),b
 35959  019ABA  0E00               	movlw	0
 35960  019ABC  6F02               	movwf	(?i1___xxtofl+2)& (0+255),b
 35961  019ABE  0E00               	movlw	0
 35962  019AC0  6F03               	movwf	(?i1___xxtofl+3)& (0+255),b
 35963  019AC2  0012               	return	
 35964  019AC4                     i1l13768:
 35965                           
 35966                           ; BSR set to: 1
 35967  019AC4  0E96               	movlw	150
 35968  019AC6  6F09               	movwf	i1___xxtofl@exp& (0+255),b
 35969  019AC8  D006               	goto	i1l13772
 35970  019ACA                     i1l13770:
 35971                           
 35972                           ; BSR set to: 1
 35973  019ACA  2B09               	incf	i1___xxtofl@exp& (0+255),f,b
 35974  019ACC  90D8               	bcf	status,0,c
 35975  019ACE  330D               	rrcf	(i1___xxtofl@arg+3)& (0+255),f,b
 35976  019AD0  330C               	rrcf	(i1___xxtofl@arg+2)& (0+255),f,b
 35977  019AD2  330B               	rrcf	(i1___xxtofl@arg+1)& (0+255),f,b
 35978  019AD4  330A               	rrcf	i1___xxtofl@arg& (0+255),f,b
 35979  019AD6                     i1l13772:
 35980                           
 35981                           ; BSR set to: 1
 35982  019AD6  0E00               	movlw	0
 35983  019AD8  150A               	andwf	i1___xxtofl@arg& (0+255),w,b
 35984  019ADA  6F04               	movwf	??i1___xxtofl& (0+255),b
 35985  019ADC  0E00               	movlw	0
 35986  019ADE  150B               	andwf	(i1___xxtofl@arg+1)& (0+255),w,b
 35987  019AE0  6F05               	movwf	(??i1___xxtofl+1)& (0+255),b
 35988  019AE2  0E00               	movlw	0
 35989  019AE4  150C               	andwf	(i1___xxtofl@arg+2)& (0+255),w,b
 35990  019AE6  6F06               	movwf	(??i1___xxtofl+2)& (0+255),b
 35991  019AE8  0EFE               	movlw	254
 35992  019AEA  150D               	andwf	(i1___xxtofl@arg+3)& (0+255),w,b
 35993  019AEC  6F07               	movwf	(??i1___xxtofl+3)& (0+255),b
 35994  019AEE  5104               	movf	??i1___xxtofl& (0+255),w,b
 35995  019AF0  1105               	iorwf	(??i1___xxtofl+1)& (0+255),w,b
 35996  019AF2  1106               	iorwf	(??i1___xxtofl+2)& (0+255),w,b
 35997  019AF4  1107               	iorwf	(??i1___xxtofl+3)& (0+255),w,b
 35998  019AF6  B4D8               	btfsc	status,2,c
 35999  019AF8  D00D               	goto	i1l3359
 36000  019AFA  D7E7               	goto	i1l13770
 36001  019AFC                     i1l13774:
 36002                           
 36003                           ; BSR set to: 1
 36004  019AFC  2B09               	incf	i1___xxtofl@exp& (0+255),f,b
 36005                           
 36006                           ; BSR set to: 1
 36007  019AFE  0E01               	movlw	1
 36008  019B00  270A               	addwf	i1___xxtofl@arg& (0+255),f,b
 36009  019B02  0E00               	movlw	0
 36010  019B04  230B               	addwfc	(i1___xxtofl@arg+1)& (0+255),f,b
 36011  019B06  230C               	addwfc	(i1___xxtofl@arg+2)& (0+255),f,b
 36012  019B08  230D               	addwfc	(i1___xxtofl@arg+3)& (0+255),f,b
 36013                           
 36014                           ; BSR set to: 1
 36015  019B0A  90D8               	bcf	status,0,c
 36016  019B0C  330D               	rrcf	(i1___xxtofl@arg+3)& (0+255),f,b
 36017  019B0E  330C               	rrcf	(i1___xxtofl@arg+2)& (0+255),f,b
 36018  019B10  330B               	rrcf	(i1___xxtofl@arg+1)& (0+255),f,b
 36019  019B12  330A               	rrcf	i1___xxtofl@arg& (0+255),f,b
 36020  019B14                     i1l3359:
 36021                           
 36022                           ; BSR set to: 1
 36023  019B14  0E00               	movlw	0
 36024  019B16  150A               	andwf	i1___xxtofl@arg& (0+255),w,b
 36025  019B18  6F04               	movwf	??i1___xxtofl& (0+255),b
 36026  019B1A  0E00               	movlw	0
 36027  019B1C  150B               	andwf	(i1___xxtofl@arg+1)& (0+255),w,b
 36028  019B1E  6F05               	movwf	(??i1___xxtofl+1)& (0+255),b
 36029  019B20  0E00               	movlw	0
 36030  019B22  150C               	andwf	(i1___xxtofl@arg+2)& (0+255),w,b
 36031  019B24  6F06               	movwf	(??i1___xxtofl+2)& (0+255),b
 36032  019B26  0EFF               	movlw	255
 36033  019B28  150D               	andwf	(i1___xxtofl@arg+3)& (0+255),w,b
 36034  019B2A  6F07               	movwf	(??i1___xxtofl+3)& (0+255),b
 36035  019B2C  5104               	movf	??i1___xxtofl& (0+255),w,b
 36036  019B2E  1105               	iorwf	(??i1___xxtofl+1)& (0+255),w,b
 36037  019B30  1106               	iorwf	(??i1___xxtofl+2)& (0+255),w,b
 36038  019B32  1107               	iorwf	(??i1___xxtofl+3)& (0+255),w,b
 36039  019B34  B4D8               	btfsc	status,2,c
 36040  019B36  D007               	goto	i1l13782
 36041  019B38  D7E1               	goto	i1l13774
 36042  019B3A                     i1l13780:
 36043                           
 36044                           ; BSR set to: 1
 36045  019B3A  0709               	decf	i1___xxtofl@exp& (0+255),f,b
 36046  019B3C  90D8               	bcf	status,0,c
 36047  019B3E  370A               	rlcf	i1___xxtofl@arg& (0+255),f,b
 36048  019B40  370B               	rlcf	(i1___xxtofl@arg+1)& (0+255),f,b
 36049  019B42  370C               	rlcf	(i1___xxtofl@arg+2)& (0+255),f,b
 36050  019B44  370D               	rlcf	(i1___xxtofl@arg+3)& (0+255),f,b
 36051  019B46                     i1l13782:
 36052                           
 36053                           ; BSR set to: 1
 36054  019B46  BF0C               	btfsc	(i1___xxtofl@arg+2)& (0+255),7,b
 36055  019B48  D003               	goto	i1u1592_20
 36056                           
 36057                           ; BSR set to: 1
 36058  019B4A  0E02               	movlw	2
 36059  019B4C  6109               	cpfslt	i1___xxtofl@exp& (0+255),b
 36060  019B4E  D7F5               	goto	i1l13780
 36061  019B50                     i1u1592_20:
 36062                           
 36063                           ; BSR set to: 1
 36064  019B50  A109               	btfss	i1___xxtofl@exp& (0+255),0,b
 36065                           
 36066                           ; BSR set to: 1
 36067  019B52  9F0C               	bcf	(i1___xxtofl@arg+2)& (0+255),7,b
 36068                           
 36069                           ; BSR set to: 1
 36070  019B54  90D8               	bcf	status,0,c
 36071  019B56  3309               	rrcf	i1___xxtofl@exp& (0+255),f,b
 36072                           
 36073                           ; BSR set to: 1
 36074  019B58  C109  F104         	movff	i1___xxtofl@exp,??i1___xxtofl
 36075  019B5C  6B05               	clrf	(??i1___xxtofl+1)& (0+255),b
 36076  019B5E  6B06               	clrf	(??i1___xxtofl+2)& (0+255),b
 36077  019B60  6B07               	clrf	(??i1___xxtofl+3)& (0+255),b
 36078  019B62  C104  F107         	movff	??i1___xxtofl,??i1___xxtofl+3
 36079  019B66  6B06               	clrf	(??i1___xxtofl+2)& (0+255),b
 36080  019B68  6B05               	clrf	(??i1___xxtofl+1)& (0+255),b
 36081  019B6A  6B04               	clrf	??i1___xxtofl& (0+255),b
 36082  019B6C  5104               	movf	??i1___xxtofl& (0+255),w,b
 36083  019B6E  130A               	iorwf	i1___xxtofl@arg& (0+255),f,b
 36084  019B70  5105               	movf	(??i1___xxtofl+1)& (0+255),w,b
 36085  019B72  130B               	iorwf	(i1___xxtofl@arg+1)& (0+255),f,b
 36086  019B74  5106               	movf	(??i1___xxtofl+2)& (0+255),w,b
 36087  019B76  130C               	iorwf	(i1___xxtofl@arg+2)& (0+255),f,b
 36088  019B78  5107               	movf	(??i1___xxtofl+3)& (0+255),w,b
 36089  019B7A  130D               	iorwf	(i1___xxtofl@arg+3)& (0+255),f,b
 36090                           
 36091                           ; BSR set to: 1
 36092  019B7C  5108               	movf	i1___xxtofl@sign& (0+255),w,b
 36093  019B7E  A4D8               	btfss	status,2,c
 36094                           
 36095                           ; BSR set to: 1
 36096  019B80  AF03               	btfss	(i1___xxtofl@val+3)& (0+255),7,b
 36097  019B82  D001               	goto	i1l13798
 36098                           
 36099                           ; BSR set to: 1
 36100  019B84  8F0D               	bsf	(i1___xxtofl@arg+3)& (0+255),7,b
 36101  019B86                     i1l13798:
 36102                           
 36103                           ; BSR set to: 1
 36104  019B86  C10A  F100         	movff	i1___xxtofl@arg,?i1___xxtofl
 36105  019B8A  C10B  F101         	movff	i1___xxtofl@arg+1,?i1___xxtofl+1
 36106  019B8E  C10C  F102         	movff	i1___xxtofl@arg+2,?i1___xxtofl+2
 36107  019B92  C10D  F103         	movff	i1___xxtofl@arg+3,?i1___xxtofl+3
 36108                           
 36109                           ; BSR set to: 1
 36110  019B96  0012               	return		;funcret
 36111  019B98                     __end_ofi1___xxtofl:
 36112                           	opt callstack 0
 36113                           
 36114 ;; *************** function i1___flmul *****************
 36115 ;; Defined at:
 36116 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
 36117 ;; Parameters:    Size  Location     Type
 36118 ;;  b               4   55[BANK1 ] unsigned char 
 36119 ;;  a               4   59[BANK1 ] unsigned char 
 36120 ;; Auto vars:     Size  Location     Type
 36121 ;;  __flmul         4   74[BANK1 ] struct .
 36122 ;;  __flmul         4   68[BANK1 ] unsigned long 
 36123 ;;  __flmul         2   78[BANK1 ] struct .
 36124 ;;  __flmul         1   73[BANK1 ] unsigned char 
 36125 ;;  __flmul         1   72[BANK1 ] unsigned char 
 36126 ;;  __flmul         1   67[BANK1 ] unsigned char 
 36127 ;; Return value:  Size  Location     Type
 36128 ;;                  4   55[BANK1 ] unsigned char 
 36129 ;; Registers used:
 36130 ;;		wreg, status,2, status,0, prodl, prodh
 36131 ;; Tracked objects:
 36132 ;;		On entry : 0/0
 36133 ;;		On exit  : 0/0
 36134 ;;		Unchanged: 0/0
 36135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36136 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36137 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36138 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36139 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36140 ;;Total ram usage:       25 bytes
 36141 ;; Hardware stack levels used:    1
 36142 ;; Hardware stack levels required when called:    6
 36143 ;; This function calls:
 36144 ;;		Nothing
 36145 ;; This function is called by:
 36146 ;;		_freqMeasConvert
 36147 ;; This function uses a non-reentrant model
 36148 ;;
 36149                           
 36150                           	psect	text145
 36151  0169E4                     __ptext145:
 36152                           	opt callstack 0
 36153  0169E4                     i1___flmul:
 36154                           	opt callstack 12
 36155                           
 36156                           ; BSR set to: 1
 36157                           ;incstack = 0
 36158  0169E4  0101               	movlb	1	; () banked
 36159  0169E6  513A               	movf	(i1___flmul@b+3)& (0+255),w,b
 36160  0169E8  0B80               	andlw	128
 36161  0169EA  6F43               	movwf	i1___flmul@sign& (0+255),b
 36162  0169EC  513A               	movf	(i1___flmul@b+3)& (0+255),w,b
 36163  0169EE  253A               	addwf	(i1___flmul@b+3)& (0+255),w,b
 36164  0169F0  6F49               	movwf	i1___flmul@bexp& (0+255),b
 36165                           
 36166                           ; BSR set to: 1
 36167  0169F2  BF39               	btfsc	(i1___flmul@b+2)& (0+255),7,b
 36168                           
 36169                           ; BSR set to: 1
 36170  0169F4  8149               	bsf	i1___flmul@bexp& (0+255),0,b
 36171                           
 36172                           ; BSR set to: 1
 36173  0169F6  5149               	movf	i1___flmul@bexp& (0+255),w,b
 36174  0169F8  B4D8               	btfsc	status,2,c
 36175  0169FA  D00D               	goto	i1l13640
 36176                           
 36177                           ; BSR set to: 1
 36178  0169FC  2949               	incf	i1___flmul@bexp& (0+255),w,b
 36179  0169FE  A4D8               	btfss	status,2,c
 36180  016A00  D008               	goto	i1l13638
 36181                           
 36182                           ; BSR set to: 1
 36183  016A02  0E00               	movlw	0
 36184  016A04  6F37               	movwf	i1___flmul@b& (0+255),b
 36185  016A06  0E00               	movlw	0
 36186  016A08  6F38               	movwf	(i1___flmul@b+1)& (0+255),b
 36187  016A0A  0E00               	movlw	0
 36188  016A0C  6F39               	movwf	(i1___flmul@b+2)& (0+255),b
 36189  016A0E  0E00               	movlw	0
 36190  016A10  6F3A               	movwf	(i1___flmul@b+3)& (0+255),b
 36191  016A12                     i1l13638:
 36192                           
 36193                           ; BSR set to: 1
 36194  016A12  8F39               	bsf	(i1___flmul@b+2)& (0+255),7,b
 36195  016A14  D008               	goto	i1l13642
 36196  016A16                     i1l13640:
 36197                           
 36198                           ; BSR set to: 1
 36199  016A16  0E00               	movlw	0
 36200  016A18  6F37               	movwf	i1___flmul@b& (0+255),b
 36201  016A1A  0E00               	movlw	0
 36202  016A1C  6F38               	movwf	(i1___flmul@b+1)& (0+255),b
 36203  016A1E  0E00               	movlw	0
 36204  016A20  6F39               	movwf	(i1___flmul@b+2)& (0+255),b
 36205  016A22  0E00               	movlw	0
 36206  016A24  6F3A               	movwf	(i1___flmul@b+3)& (0+255),b
 36207  016A26                     i1l13642:
 36208                           
 36209                           ; BSR set to: 1
 36210  016A26  513E               	movf	(i1___flmul@a+3)& (0+255),w,b
 36211  016A28  0B80               	andlw	128
 36212  016A2A  1B43               	xorwf	i1___flmul@sign& (0+255),f,b
 36213                           
 36214                           ; BSR set to: 1
 36215  016A2C  513E               	movf	(i1___flmul@a+3)& (0+255),w,b
 36216  016A2E  253E               	addwf	(i1___flmul@a+3)& (0+255),w,b
 36217  016A30  6F48               	movwf	i1___flmul@aexp& (0+255),b
 36218                           
 36219                           ; BSR set to: 1
 36220  016A32  BF3D               	btfsc	(i1___flmul@a+2)& (0+255),7,b
 36221                           
 36222                           ; BSR set to: 1
 36223  016A34  8148               	bsf	i1___flmul@aexp& (0+255),0,b
 36224                           
 36225                           ; BSR set to: 1
 36226  016A36  5148               	movf	i1___flmul@aexp& (0+255),w,b
 36227  016A38  B4D8               	btfsc	status,2,c
 36228  016A3A  D00D               	goto	i1l13658
 36229                           
 36230                           ; BSR set to: 1
 36231  016A3C  2948               	incf	i1___flmul@aexp& (0+255),w,b
 36232  016A3E  A4D8               	btfss	status,2,c
 36233  016A40  D008               	goto	i1l13656
 36234                           
 36235                           ; BSR set to: 1
 36236  016A42  0E00               	movlw	0
 36237  016A44  6F3B               	movwf	i1___flmul@a& (0+255),b
 36238  016A46  0E00               	movlw	0
 36239  016A48  6F3C               	movwf	(i1___flmul@a+1)& (0+255),b
 36240  016A4A  0E00               	movlw	0
 36241  016A4C  6F3D               	movwf	(i1___flmul@a+2)& (0+255),b
 36242  016A4E  0E00               	movlw	0
 36243  016A50  6F3E               	movwf	(i1___flmul@a+3)& (0+255),b
 36244  016A52                     i1l13656:
 36245                           
 36246                           ; BSR set to: 1
 36247  016A52  8F3D               	bsf	(i1___flmul@a+2)& (0+255),7,b
 36248  016A54  D008               	goto	i1l3311
 36249  016A56                     i1l13658:
 36250                           
 36251                           ; BSR set to: 1
 36252  016A56  0E00               	movlw	0
 36253  016A58  6F3B               	movwf	i1___flmul@a& (0+255),b
 36254  016A5A  0E00               	movlw	0
 36255  016A5C  6F3C               	movwf	(i1___flmul@a+1)& (0+255),b
 36256  016A5E  0E00               	movlw	0
 36257  016A60  6F3D               	movwf	(i1___flmul@a+2)& (0+255),b
 36258  016A62  0E00               	movlw	0
 36259  016A64  6F3E               	movwf	(i1___flmul@a+3)& (0+255),b
 36260  016A66                     i1l3311:
 36261                           
 36262                           ; BSR set to: 1
 36263  016A66  5148               	movf	i1___flmul@aexp& (0+255),w,b
 36264  016A68  B4D8               	btfsc	status,2,c
 36265  016A6A  D003               	goto	i1u1574_20
 36266                           
 36267                           ; BSR set to: 1
 36268  016A6C  5149               	movf	i1___flmul@bexp& (0+255),w,b
 36269  016A6E  A4D8               	btfss	status,2,c
 36270  016A70  D009               	goto	i1l13666
 36271  016A72                     i1u1574_20:
 36272                           
 36273                           ; BSR set to: 1
 36274  016A72  0E00               	movlw	0
 36275  016A74  6F37               	movwf	?i1___flmul& (0+255),b
 36276  016A76  0E00               	movlw	0
 36277  016A78  6F38               	movwf	(?i1___flmul+1)& (0+255),b
 36278  016A7A  0E00               	movlw	0
 36279  016A7C  6F39               	movwf	(?i1___flmul+2)& (0+255),b
 36280  016A7E  0E00               	movlw	0
 36281  016A80  6F3A               	movwf	(?i1___flmul+3)& (0+255),b
 36282  016A82  0012               	return	
 36283  016A84                     i1l13666:
 36284                           
 36285                           ; BSR set to: 1
 36286  016A84  513D               	movf	(i1___flmul@a+2)& (0+255),w,b
 36287  016A86  0337               	mulwf	i1___flmul@b& (0+255),b
 36288  016A88  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36289  016A8C  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36290                           
 36291                           ; BSR set to: 1
 36292  016A90  514E               	movf	i1___flmul@temp& (0+255),w,b
 36293  016A92  6F44               	movwf	i1___flmul@grs& (0+255),b
 36294  016A94  6B45               	clrf	(i1___flmul@grs+1)& (0+255),b
 36295  016A96  6B46               	clrf	(i1___flmul@grs+2)& (0+255),b
 36296  016A98  6B47               	clrf	(i1___flmul@grs+3)& (0+255),b
 36297                           
 36298                           ; BSR set to: 1
 36299  016A9A  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36300  016A9C  6F4A               	movwf	i1___flmul@prod& (0+255),b
 36301  016A9E  6B4B               	clrf	(i1___flmul@prod+1)& (0+255),b
 36302  016AA0  6B4C               	clrf	(i1___flmul@prod+2)& (0+255),b
 36303  016AA2  6B4D               	clrf	(i1___flmul@prod+3)& (0+255),b
 36304  016AA4  513C               	movf	(i1___flmul@a+1)& (0+255),w,b
 36305  016AA6  0338               	mulwf	(i1___flmul@b+1)& (0+255),b
 36306  016AA8  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36307  016AAC  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36308                           
 36309                           ; BSR set to: 1
 36310  016AB0  514E               	movf	i1___flmul@temp& (0+255),w,b
 36311  016AB2  2744               	addwf	i1___flmul@grs& (0+255),f,b
 36312  016AB4  0E00               	movlw	0
 36313  016AB6  2345               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 36314  016AB8  2346               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 36315  016ABA  2347               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 36316                           
 36317                           ; BSR set to: 1
 36318  016ABC  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36319  016ABE  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36320  016AC0  0E00               	movlw	0
 36321  016AC2  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36322  016AC4  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36323  016AC6  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36324  016AC8  513B               	movf	i1___flmul@a& (0+255),w,b
 36325  016ACA  0339               	mulwf	(i1___flmul@b+2)& (0+255),b
 36326  016ACC  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36327  016AD0  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36328                           
 36329                           ; BSR set to: 1
 36330  016AD4  514E               	movf	i1___flmul@temp& (0+255),w,b
 36331  016AD6  2744               	addwf	i1___flmul@grs& (0+255),f,b
 36332  016AD8  0E00               	movlw	0
 36333  016ADA  2345               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 36334  016ADC  2346               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 36335  016ADE  2347               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 36336                           
 36337                           ; BSR set to: 1
 36338  016AE0  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36339  016AE2  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36340  016AE4  0E00               	movlw	0
 36341  016AE6  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36342  016AE8  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36343  016AEA  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36344                           
 36345                           ; BSR set to: 1
 36346  016AEC  C146  F147         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 36347  016AF0  C145  F146         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 36348  016AF4  C144  F145         	movff	i1___flmul@grs,i1___flmul@grs+1
 36349  016AF8  6B44               	clrf	i1___flmul@grs& (0+255),b
 36350                           
 36351                           ; BSR set to: 1
 36352  016AFA  513B               	movf	i1___flmul@a& (0+255),w,b
 36353  016AFC  0338               	mulwf	(i1___flmul@b+1)& (0+255),b
 36354  016AFE  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36355  016B02  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36356                           
 36357                           ; BSR set to: 1
 36358  016B06  514E               	movf	i1___flmul@temp& (0+255),w,b
 36359  016B08  2744               	addwf	i1___flmul@grs& (0+255),f,b
 36360  016B0A  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36361  016B0C  2345               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 36362  016B0E  0E00               	movlw	0
 36363  016B10  2346               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 36364  016B12  0E00               	movlw	0
 36365  016B14  2347               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 36366                           
 36367                           ; BSR set to: 1
 36368  016B16  513C               	movf	(i1___flmul@a+1)& (0+255),w,b
 36369  016B18  0337               	mulwf	i1___flmul@b& (0+255),b
 36370  016B1A  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36371  016B1E  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36372                           
 36373                           ; BSR set to: 1
 36374  016B22  514E               	movf	i1___flmul@temp& (0+255),w,b
 36375  016B24  2744               	addwf	i1___flmul@grs& (0+255),f,b
 36376  016B26  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36377  016B28  2345               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 36378  016B2A  0E00               	movlw	0
 36379  016B2C  2346               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 36380  016B2E  0E00               	movlw	0
 36381  016B30  2347               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 36382                           
 36383                           ; BSR set to: 1
 36384  016B32  C146  F147         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 36385  016B36  C145  F146         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 36386  016B3A  C144  F145         	movff	i1___flmul@grs,i1___flmul@grs+1
 36387  016B3E  6B44               	clrf	i1___flmul@grs& (0+255),b
 36388  016B40  513B               	movf	i1___flmul@a& (0+255),w,b
 36389  016B42  0337               	mulwf	i1___flmul@b& (0+255),b
 36390  016B44  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36391  016B48  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36392                           
 36393                           ; BSR set to: 1
 36394  016B4C  514E               	movf	i1___flmul@temp& (0+255),w,b
 36395  016B4E  2744               	addwf	i1___flmul@grs& (0+255),f,b
 36396  016B50  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36397  016B52  2345               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 36398  016B54  0E00               	movlw	0
 36399  016B56  2346               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 36400  016B58  0E00               	movlw	0
 36401  016B5A  2347               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 36402                           
 36403                           ; BSR set to: 1
 36404  016B5C  513D               	movf	(i1___flmul@a+2)& (0+255),w,b
 36405  016B5E  0338               	mulwf	(i1___flmul@b+1)& (0+255),b
 36406  016B60  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36407  016B64  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36408  016B68  514E               	movf	i1___flmul@temp& (0+255),w,b
 36409  016B6A  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36410  016B6C  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36411  016B6E  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36412  016B70  0E00               	movlw	0
 36413  016B72  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36414  016B74  0E00               	movlw	0
 36415  016B76  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36416                           
 36417                           ; BSR set to: 1
 36418  016B78  513C               	movf	(i1___flmul@a+1)& (0+255),w,b
 36419  016B7A  0339               	mulwf	(i1___flmul@b+2)& (0+255),b
 36420  016B7C  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36421  016B80  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36422                           
 36423                           ; BSR set to: 1
 36424  016B84  514E               	movf	i1___flmul@temp& (0+255),w,b
 36425  016B86  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36426  016B88  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36427  016B8A  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36428  016B8C  0E00               	movlw	0
 36429  016B8E  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36430  016B90  0E00               	movlw	0
 36431  016B92  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36432  016B94  513D               	movf	(i1___flmul@a+2)& (0+255),w,b
 36433  016B96  0339               	mulwf	(i1___flmul@b+2)& (0+255),b
 36434  016B98  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36435  016B9C  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36436                           
 36437                           ; BSR set to: 1
 36438  016BA0  514E               	movf	i1___flmul@temp& (0+255),w,b
 36439  016BA2  6F3F               	movwf	??i1___flmul& (0+255),b
 36440  016BA4  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36441  016BA6  6F40               	movwf	(??i1___flmul+1)& (0+255),b
 36442  016BA8  6B41               	clrf	(??i1___flmul+2)& (0+255),b
 36443  016BAA  6B42               	clrf	(??i1___flmul+3)& (0+255),b
 36444  016BAC  C141  F142         	movff	??i1___flmul+2,??i1___flmul+3
 36445  016BB0  C140  F141         	movff	??i1___flmul+1,??i1___flmul+2
 36446  016BB4  C13F  F140         	movff	??i1___flmul,??i1___flmul+1
 36447  016BB8  6B3F               	clrf	??i1___flmul& (0+255),b
 36448  016BBA  513F               	movf	??i1___flmul& (0+255),w,b
 36449  016BBC  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36450  016BBE  5140               	movf	(??i1___flmul+1)& (0+255),w,b
 36451  016BC0  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36452  016BC2  5141               	movf	(??i1___flmul+2)& (0+255),w,b
 36453  016BC4  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36454  016BC6  5142               	movf	(??i1___flmul+3)& (0+255),w,b
 36455  016BC8  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36456                           
 36457                           ; BSR set to: 1
 36458  016BCA  C144  F13F         	movff	i1___flmul@grs,??i1___flmul
 36459  016BCE  C145  F140         	movff	i1___flmul@grs+1,??i1___flmul+1
 36460  016BD2  C146  F141         	movff	i1___flmul@grs+2,??i1___flmul+2
 36461  016BD6  C147  F142         	movff	i1___flmul@grs+3,??i1___flmul+3
 36462  016BDA  0E19               	movlw	25
 36463  016BDC  D005               	goto	i1u1575_20
 36464  016BDE                     i1u1575_25:
 36465  016BDE  90D8               	bcf	status,0,c
 36466  016BE0  3342               	rrcf	(??i1___flmul+3)& (0+255),f,b
 36467  016BE2  3341               	rrcf	(??i1___flmul+2)& (0+255),f,b
 36468  016BE4  3340               	rrcf	(??i1___flmul+1)& (0+255),f,b
 36469  016BE6  333F               	rrcf	??i1___flmul& (0+255),f,b
 36470  016BE8                     i1u1575_20:
 36471  016BE8  2EE8               	decfsz	wreg,f,c
 36472  016BEA  D7F9               	goto	i1u1575_25
 36473  016BEC  513F               	movf	??i1___flmul& (0+255),w,b
 36474  016BEE  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36475  016BF0  5140               	movf	(??i1___flmul+1)& (0+255),w,b
 36476  016BF2  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36477  016BF4  5141               	movf	(??i1___flmul+2)& (0+255),w,b
 36478  016BF6  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36479  016BF8  5142               	movf	(??i1___flmul+3)& (0+255),w,b
 36480  016BFA  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36481                           
 36482                           ; BSR set to: 1
 36483  016BFC  C146  F147         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 36484  016C00  C145  F146         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 36485  016C04  C144  F145         	movff	i1___flmul@grs,i1___flmul@grs+1
 36486  016C08  6B44               	clrf	i1___flmul@grs& (0+255),b
 36487                           
 36488                           ; BSR set to: 1
 36489  016C0A  5148               	movf	i1___flmul@aexp& (0+255),w,b
 36490  016C0C  C149  F13F         	movff	i1___flmul@bexp,??i1___flmul
 36491  016C10  6B40               	clrf	(??i1___flmul+1)& (0+255),b
 36492  016C12  273F               	addwf	??i1___flmul& (0+255),f,b
 36493  016C14  0E00               	movlw	0
 36494  016C16  2340               	addwfc	(??i1___flmul+1)& (0+255),f,b
 36495  016C18  0E82               	movlw	130
 36496  016C1A  253F               	addwf	??i1___flmul& (0+255),w,b
 36497  016C1C  6F4E               	movwf	i1___flmul@temp& (0+255),b
 36498  016C1E  0EFF               	movlw	255
 36499  016C20  2140               	addwfc	(??i1___flmul+1)& (0+255),w,b
 36500  016C22  6F4F               	movwf	(i1___flmul@temp+1)& (0+255),b
 36501  016C24  D00F               	goto	i1l13714
 36502  016C26                     i1l13708:
 36503                           
 36504                           ; BSR set to: 1
 36505  016C26  90D8               	bcf	status,0,c
 36506  016C28  374A               	rlcf	i1___flmul@prod& (0+255),f,b
 36507  016C2A  374B               	rlcf	(i1___flmul@prod+1)& (0+255),f,b
 36508  016C2C  374C               	rlcf	(i1___flmul@prod+2)& (0+255),f,b
 36509  016C2E  374D               	rlcf	(i1___flmul@prod+3)& (0+255),f,b
 36510                           
 36511                           ; BSR set to: 1
 36512  016C30  BF47               	btfsc	(i1___flmul@grs+3)& (0+255),7,b
 36513                           
 36514                           ; BSR set to: 1
 36515  016C32  814A               	bsf	i1___flmul@prod& (0+255),0,b
 36516                           
 36517                           ; BSR set to: 1
 36518  016C34  90D8               	bcf	status,0,c
 36519  016C36  3744               	rlcf	i1___flmul@grs& (0+255),f,b
 36520  016C38  3745               	rlcf	(i1___flmul@grs+1)& (0+255),f,b
 36521  016C3A  3746               	rlcf	(i1___flmul@grs+2)& (0+255),f,b
 36522  016C3C  3747               	rlcf	(i1___flmul@grs+3)& (0+255),f,b
 36523  016C3E  074E               	decf	i1___flmul@temp& (0+255),f,b
 36524  016C40  A0D8               	btfss	status,0,c
 36525  016C42  074F               	decf	(i1___flmul@temp+1)& (0+255),f,b
 36526  016C44                     i1l13714:
 36527                           
 36528                           ; BSR set to: 1
 36529  016C44  AF4C               	btfss	(i1___flmul@prod+2)& (0+255),7,b
 36530  016C46  D7EF               	goto	i1l13708
 36531                           
 36532                           ; BSR set to: 1
 36533  016C48  0E00               	movlw	0
 36534  016C4A  6F48               	movwf	i1___flmul@aexp& (0+255),b
 36535                           
 36536                           ; BSR set to: 1
 36537  016C4C  AF47               	btfss	(i1___flmul@grs+3)& (0+255),7,b
 36538  016C4E  D017               	goto	i1l3320
 36539                           
 36540                           ; BSR set to: 1
 36541  016C50  0EFF               	movlw	255
 36542  016C52  1544               	andwf	i1___flmul@grs& (0+255),w,b
 36543  016C54  6F3F               	movwf	??i1___flmul& (0+255),b
 36544  016C56  0EFF               	movlw	255
 36545  016C58  1545               	andwf	(i1___flmul@grs+1)& (0+255),w,b
 36546  016C5A  6F40               	movwf	(??i1___flmul+1)& (0+255),b
 36547  016C5C  0EFF               	movlw	255
 36548  016C5E  1546               	andwf	(i1___flmul@grs+2)& (0+255),w,b
 36549  016C60  6F41               	movwf	(??i1___flmul+2)& (0+255),b
 36550  016C62  0E7F               	movlw	127
 36551  016C64  1547               	andwf	(i1___flmul@grs+3)& (0+255),w,b
 36552  016C66  6F42               	movwf	(??i1___flmul+3)& (0+255),b
 36553  016C68  513F               	movf	??i1___flmul& (0+255),w,b
 36554  016C6A  1140               	iorwf	(??i1___flmul+1)& (0+255),w,b
 36555  016C6C  1141               	iorwf	(??i1___flmul+2)& (0+255),w,b
 36556  016C6E  1142               	iorwf	(??i1___flmul+3)& (0+255),w,b
 36557  016C70  B4D8               	btfsc	status,2,c
 36558  016C72  D003               	goto	i1l3321
 36559  016C74                     i1u1579_20:
 36560                           
 36561                           ; BSR set to: 1
 36562  016C74  0E01               	movlw	1
 36563  016C76  6F48               	movwf	i1___flmul@aexp& (0+255),b
 36564  016C78  D002               	goto	i1l3320
 36565  016C7A                     i1l3321:
 36566                           
 36567                           ; BSR set to: 1
 36568  016C7A  B14A               	btfsc	i1___flmul@prod& (0+255),0,b
 36569  016C7C  D7FB               	goto	i1u1579_20
 36570  016C7E                     i1l3320:
 36571                           
 36572                           ; BSR set to: 1
 36573  016C7E  5148               	movf	i1___flmul@aexp& (0+255),w,b
 36574  016C80  B4D8               	btfsc	status,2,c
 36575  016C82  D01F               	goto	i1l13734
 36576                           
 36577                           ; BSR set to: 1
 36578  016C84  0E01               	movlw	1
 36579  016C86  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36580  016C88  0E00               	movlw	0
 36581  016C8A  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36582  016C8C  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36583  016C8E  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36584                           
 36585                           ; BSR set to: 1
 36586  016C90  A14D               	btfss	(i1___flmul@prod+3)& (0+255),0,b
 36587  016C92  D017               	goto	i1l13734
 36588                           
 36589                           ; BSR set to: 1
 36590  016C94  C14A  F13F         	movff	i1___flmul@prod,??i1___flmul
 36591  016C98  C14B  F140         	movff	i1___flmul@prod+1,??i1___flmul+1
 36592  016C9C  C14C  F141         	movff	i1___flmul@prod+2,??i1___flmul+2
 36593  016CA0  C14D  F142         	movff	i1___flmul@prod+3,??i1___flmul+3
 36594  016CA4  3542               	rlcf	(??i1___flmul+3)& (0+255),w,b
 36595  016CA6  3342               	rrcf	(??i1___flmul+3)& (0+255),f,b
 36596  016CA8  3341               	rrcf	(??i1___flmul+2)& (0+255),f,b
 36597  016CAA  3340               	rrcf	(??i1___flmul+1)& (0+255),f,b
 36598  016CAC  333F               	rrcf	??i1___flmul& (0+255),f,b
 36599  016CAE  C13F  F14A         	movff	??i1___flmul,i1___flmul@prod
 36600  016CB2  C140  F14B         	movff	??i1___flmul+1,i1___flmul@prod+1
 36601  016CB6  C141  F14C         	movff	??i1___flmul+2,i1___flmul@prod+2
 36602  016CBA  C142  F14D         	movff	??i1___flmul+3,i1___flmul@prod+3
 36603                           
 36604                           ; BSR set to: 1
 36605  016CBE  4B4E               	infsnz	i1___flmul@temp& (0+255),f,b
 36606  016CC0  2B4F               	incf	(i1___flmul@temp+1)& (0+255),f,b
 36607  016CC2                     i1l13734:
 36608                           
 36609                           ; BSR set to: 1
 36610  016CC2  BF4F               	btfsc	(i1___flmul@temp+1)& (0+255),7,b
 36611  016CC4  D00D               	goto	i1l13738
 36612  016CC6  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36613  016CC8  E103               	bnz	i1u1583_20
 36614  016CCA  294E               	incf	i1___flmul@temp& (0+255),w,b
 36615  016CCC  A0D8               	btfss	status,0,c
 36616  016CCE  D008               	goto	i1l13738
 36617  016CD0                     i1u1583_20:
 36618                           
 36619                           ; BSR set to: 1
 36620  016CD0  0E00               	movlw	0
 36621  016CD2  6F4A               	movwf	i1___flmul@prod& (0+255),b
 36622  016CD4  0E00               	movlw	0
 36623  016CD6  6F4B               	movwf	(i1___flmul@prod+1)& (0+255),b
 36624  016CD8  0E80               	movlw	128
 36625  016CDA  6F4C               	movwf	(i1___flmul@prod+2)& (0+255),b
 36626  016CDC  0E7F               	movlw	127
 36627  016CDE  D020               	goto	L27
 36628  016CE0                     i1l13738:
 36629                           
 36630                           ; BSR set to: 1
 36631  016CE0  BF4F               	btfsc	(i1___flmul@temp+1)& (0+255),7,b
 36632  016CE2  D005               	goto	i1u1584_20
 36633  016CE4  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36634  016CE6  E10E               	bnz	i1l3328
 36635  016CE8  054E               	decf	i1___flmul@temp& (0+255),w,b
 36636  016CEA  B0D8               	btfsc	status,0,c
 36637  016CEC  D00B               	goto	i1l3328
 36638  016CEE                     i1u1584_20:
 36639                           
 36640                           ; BSR set to: 1
 36641  016CEE  0E00               	movlw	0
 36642  016CF0  6F4A               	movwf	i1___flmul@prod& (0+255),b
 36643  016CF2  0E00               	movlw	0
 36644  016CF4  6F4B               	movwf	(i1___flmul@prod+1)& (0+255),b
 36645  016CF6  0E00               	movlw	0
 36646  016CF8  6F4C               	movwf	(i1___flmul@prod+2)& (0+255),b
 36647  016CFA  0E00               	movlw	0
 36648  016CFC  6F4D               	movwf	(i1___flmul@prod+3)& (0+255),b
 36649  016CFE  0E00               	movlw	0
 36650  016D00  6F43               	movwf	i1___flmul@sign& (0+255),b
 36651  016D02  D00F               	goto	i1l13750
 36652  016D04                     i1l3328:
 36653                           
 36654                           ; BSR set to: 1
 36655  016D04  C14E  F149         	movff	i1___flmul@temp,i1___flmul@bexp
 36656                           
 36657                           ; BSR set to: 1
 36658  016D08  0EFF               	movlw	255
 36659  016D0A  174A               	andwf	i1___flmul@prod& (0+255),f,b
 36660  016D0C  0EFF               	movlw	255
 36661  016D0E  174B               	andwf	(i1___flmul@prod+1)& (0+255),f,b
 36662  016D10  0E7F               	movlw	127
 36663  016D12  174C               	andwf	(i1___flmul@prod+2)& (0+255),f,b
 36664  016D14  0E00               	movlw	0
 36665  016D16  174D               	andwf	(i1___flmul@prod+3)& (0+255),f,b
 36666                           
 36667                           ; BSR set to: 1
 36668  016D18  B149               	btfsc	i1___flmul@bexp& (0+255),0,b
 36669                           
 36670                           ; BSR set to: 1
 36671  016D1A  8F4C               	bsf	(i1___flmul@prod+2)& (0+255),7,b
 36672                           
 36673                           ; BSR set to: 1
 36674  016D1C  90D8               	bcf	status,0,c
 36675  016D1E  3149               	rrcf	i1___flmul@bexp& (0+255),w,b
 36676  016D20                     L27:
 36677  016D20  6F4D               	movwf	(i1___flmul@prod+3)& (0+255),b
 36678  016D22                     i1l13750:
 36679                           
 36680                           ; BSR set to: 1
 36681  016D22  5143               	movf	i1___flmul@sign& (0+255),w,b
 36682  016D24  134D               	iorwf	(i1___flmul@prod+3)& (0+255),f,b
 36683                           
 36684                           ; BSR set to: 1
 36685  016D26  C14A  F137         	movff	i1___flmul@prod,?i1___flmul
 36686  016D2A  C14B  F138         	movff	i1___flmul@prod+1,?i1___flmul+1
 36687  016D2E  C14C  F139         	movff	i1___flmul@prod+2,?i1___flmul+2
 36688  016D32  C14D  F13A         	movff	i1___flmul@prod+3,?i1___flmul+3
 36689                           
 36690                           ; BSR set to: 1
 36691  016D36  0012               	return		;funcret
 36692  016D38                     __end_ofi1___flmul:
 36693                           	opt callstack 0
 36694                           
 36695 ;; *************** function i1___fldiv *****************
 36696 ;; Defined at:
 36697 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
 36698 ;; Parameters:    Size  Location     Type
 36699 ;;  b               4   30[BANK1 ] unsigned char 
 36700 ;;  a               4   34[BANK1 ] unsigned char 
 36701 ;; Auto vars:     Size  Location     Type
 36702 ;;  __fldiv         4   49[BANK1 ] unsigned long 
 36703 ;;  __fldiv         4   42[BANK1 ] unsigned long 
 36704 ;;  __fldiv         2   47[BANK1 ] int 
 36705 ;;  __fldiv         1   54[BANK1 ] unsigned char 
 36706 ;;  __fldiv         1   53[BANK1 ] unsigned char 
 36707 ;;  __fldiv         1   46[BANK1 ] unsigned char 
 36708 ;; Return value:  Size  Location     Type
 36709 ;;                  4   30[BANK1 ] unsigned char 
 36710 ;; Registers used:
 36711 ;;		wreg, status,2, status,0
 36712 ;; Tracked objects:
 36713 ;;		On entry : 0/0
 36714 ;;		On exit  : 0/0
 36715 ;;		Unchanged: 0/0
 36716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36717 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36718 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36719 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36720 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36721 ;;Total ram usage:       25 bytes
 36722 ;; Hardware stack levels used:    1
 36723 ;; Hardware stack levels required when called:    6
 36724 ;; This function calls:
 36725 ;;		Nothing
 36726 ;; This function is called by:
 36727 ;;		_freqMeasConvert
 36728 ;; This function uses a non-reentrant model
 36729 ;;
 36730                           
 36731                           	psect	text146
 36732  018480                     __ptext146:
 36733                           	opt callstack 0
 36734  018480                     i1___fldiv:
 36735                           	opt callstack 12
 36736                           
 36737                           ; BSR set to: 1
 36738                           ;incstack = 0
 36739  018480  0101               	movlb	1	; () banked
 36740  018482  5121               	movf	(i1___fldiv@b+3)& (0+255),w,b
 36741  018484  0B80               	andlw	128
 36742  018486  6F2E               	movwf	i1___fldiv@sign& (0+255),b
 36743  018488  5121               	movf	(i1___fldiv@b+3)& (0+255),w,b
 36744  01848A  2521               	addwf	(i1___fldiv@b+3)& (0+255),w,b
 36745  01848C  6F35               	movwf	i1___fldiv@bexp& (0+255),b
 36746                           
 36747                           ; BSR set to: 1
 36748  01848E  BF20               	btfsc	(i1___fldiv@b+2)& (0+255),7,b
 36749                           
 36750                           ; BSR set to: 1
 36751  018490  8135               	bsf	i1___fldiv@bexp& (0+255),0,b
 36752                           
 36753                           ; BSR set to: 1
 36754  018492  5135               	movf	i1___fldiv@bexp& (0+255),w,b
 36755  018494  B4D8               	btfsc	status,2,c
 36756  018496  D00D               	goto	i1l13504
 36757                           
 36758                           ; BSR set to: 1
 36759  018498  2935               	incf	i1___fldiv@bexp& (0+255),w,b
 36760  01849A  A4D8               	btfss	status,2,c
 36761  01849C  D008               	goto	i1l13500
 36762                           
 36763                           ; BSR set to: 1
 36764  01849E  0E00               	movlw	0
 36765  0184A0  6F1E               	movwf	i1___fldiv@b& (0+255),b
 36766  0184A2  0E00               	movlw	0
 36767  0184A4  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 36768  0184A6  0E00               	movlw	0
 36769  0184A8  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 36770  0184AA  0E00               	movlw	0
 36771  0184AC  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 36772  0184AE                     i1l13500:
 36773                           
 36774                           ; BSR set to: 1
 36775  0184AE  8F20               	bsf	(i1___fldiv@b+2)& (0+255),7,b
 36776  0184B0  D006               	goto	L28
 36777  0184B2                     i1l13504:
 36778                           
 36779                           ; BSR set to: 1
 36780  0184B2  0E00               	movlw	0
 36781  0184B4  6F1E               	movwf	i1___fldiv@b& (0+255),b
 36782  0184B6  0E00               	movlw	0
 36783  0184B8  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 36784  0184BA  0E00               	movlw	0
 36785  0184BC  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 36786  0184BE                     L28:
 36787  0184BE  0E00               	movlw	0
 36788  0184C0  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 36789                           
 36790                           ; BSR set to: 1
 36791  0184C2  5125               	movf	(i1___fldiv@a+3)& (0+255),w,b
 36792  0184C4  0B80               	andlw	128
 36793  0184C6  1B2E               	xorwf	i1___fldiv@sign& (0+255),f,b
 36794                           
 36795                           ; BSR set to: 1
 36796  0184C8  5125               	movf	(i1___fldiv@a+3)& (0+255),w,b
 36797  0184CA  2525               	addwf	(i1___fldiv@a+3)& (0+255),w,b
 36798  0184CC  6F36               	movwf	i1___fldiv@aexp& (0+255),b
 36799                           
 36800                           ; BSR set to: 1
 36801  0184CE  BF24               	btfsc	(i1___fldiv@a+2)& (0+255),7,b
 36802                           
 36803                           ; BSR set to: 1
 36804  0184D0  8136               	bsf	i1___fldiv@aexp& (0+255),0,b
 36805                           
 36806                           ; BSR set to: 1
 36807  0184D2  5136               	movf	i1___fldiv@aexp& (0+255),w,b
 36808  0184D4  B4D8               	btfsc	status,2,c
 36809  0184D6  D00D               	goto	i1l13524
 36810                           
 36811                           ; BSR set to: 1
 36812  0184D8  2936               	incf	i1___fldiv@aexp& (0+255),w,b
 36813  0184DA  A4D8               	btfss	status,2,c
 36814  0184DC  D008               	goto	i1l13520
 36815                           
 36816                           ; BSR set to: 1
 36817  0184DE  0E00               	movlw	0
 36818  0184E0  6F22               	movwf	i1___fldiv@a& (0+255),b
 36819  0184E2  0E00               	movlw	0
 36820  0184E4  6F23               	movwf	(i1___fldiv@a+1)& (0+255),b
 36821  0184E6  0E00               	movlw	0
 36822  0184E8  6F24               	movwf	(i1___fldiv@a+2)& (0+255),b
 36823  0184EA  0E00               	movlw	0
 36824  0184EC  6F25               	movwf	(i1___fldiv@a+3)& (0+255),b
 36825  0184EE                     i1l13520:
 36826                           
 36827                           ; BSR set to: 1
 36828  0184EE  8F24               	bsf	(i1___fldiv@a+2)& (0+255),7,b
 36829  0184F0  D006               	goto	L29
 36830  0184F2                     i1l13524:
 36831                           
 36832                           ; BSR set to: 1
 36833  0184F2  0E00               	movlw	0
 36834  0184F4  6F22               	movwf	i1___fldiv@a& (0+255),b
 36835  0184F6  0E00               	movlw	0
 36836  0184F8  6F23               	movwf	(i1___fldiv@a+1)& (0+255),b
 36837  0184FA  0E00               	movlw	0
 36838  0184FC  6F24               	movwf	(i1___fldiv@a+2)& (0+255),b
 36839  0184FE                     L29:
 36840  0184FE  0E00               	movlw	0
 36841  018500  6F25               	movwf	(i1___fldiv@a+3)& (0+255),b
 36842                           
 36843                           ; BSR set to: 1
 36844  018502  5122               	movf	i1___fldiv@a& (0+255),w,b
 36845  018504  1123               	iorwf	(i1___fldiv@a+1)& (0+255),w,b
 36846  018506  1124               	iorwf	(i1___fldiv@a+2)& (0+255),w,b
 36847  018508  1125               	iorwf	(i1___fldiv@a+3)& (0+255),w,b
 36848  01850A  A4D8               	btfss	status,2,c
 36849  01850C  D017               	goto	i1l13538
 36850                           
 36851                           ; BSR set to: 1
 36852  01850E  0E00               	movlw	0
 36853  018510  6F1E               	movwf	i1___fldiv@b& (0+255),b
 36854  018512  0E00               	movlw	0
 36855  018514  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 36856  018516  0E00               	movlw	0
 36857  018518  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 36858  01851A  0E00               	movlw	0
 36859  01851C  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 36860                           
 36861                           ; BSR set to: 1
 36862  01851E  0E80               	movlw	128
 36863  018520  1320               	iorwf	(i1___fldiv@b+2)& (0+255),f,b
 36864  018522  0E7F               	movlw	127
 36865  018524  1321               	iorwf	(i1___fldiv@b+3)& (0+255),f,b
 36866  018526                     i1l13532:
 36867                           
 36868                           ; BSR set to: 1
 36869  018526  512E               	movf	i1___fldiv@sign& (0+255),w,b
 36870  018528  1321               	iorwf	(i1___fldiv@b+3)& (0+255),f,b
 36871                           
 36872                           ; BSR set to: 1
 36873  01852A  C11E  F11E         	movff	i1___fldiv@b,?i1___fldiv
 36874  01852E  C11F  F11F         	movff	i1___fldiv@b+1,?i1___fldiv+1
 36875  018532  C120  F120         	movff	i1___fldiv@b+2,?i1___fldiv+2
 36876  018536  C121  F121         	movff	i1___fldiv@b+3,?i1___fldiv+3
 36877  01853A  0012               	return	
 36878  01853C                     i1l13538:
 36879                           
 36880                           ; BSR set to: 1
 36881  01853C  5135               	movf	i1___fldiv@bexp& (0+255),w,b
 36882  01853E  A4D8               	btfss	status,2,c
 36883  018540  D009               	goto	i1l13546
 36884                           
 36885                           ; BSR set to: 1
 36886                           
 36887                           ; BSR set to: 1
 36888  018542  0E00               	movlw	0
 36889  018544  6F1E               	movwf	?i1___fldiv& (0+255),b
 36890  018546  0E00               	movlw	0
 36891  018548  6F1F               	movwf	(?i1___fldiv+1)& (0+255),b
 36892  01854A  0E00               	movlw	0
 36893  01854C  6F20               	movwf	(?i1___fldiv+2)& (0+255),b
 36894  01854E  0E00               	movlw	0
 36895  018550  6F21               	movwf	(?i1___fldiv+3)& (0+255),b
 36896  018552  0012               	return	
 36897  018554                     i1l13546:
 36898                           
 36899                           ; BSR set to: 1
 36900  018554  5136               	movf	i1___fldiv@aexp& (0+255),w,b
 36901  018556  C135  F126         	movff	i1___fldiv@bexp,??i1___fldiv
 36902  01855A  6B27               	clrf	(??i1___fldiv+1)& (0+255),b
 36903  01855C  5F26               	subwf	??i1___fldiv& (0+255),f,b
 36904  01855E  0E00               	movlw	0
 36905  018560  5B27               	subwfb	(??i1___fldiv+1)& (0+255),f,b
 36906  018562  0E7F               	movlw	127
 36907  018564  2526               	addwf	??i1___fldiv& (0+255),w,b
 36908  018566  6F2F               	movwf	i1___fldiv@new_exp& (0+255),b
 36909  018568  0E00               	movlw	0
 36910  01856A  2127               	addwfc	(??i1___fldiv+1)& (0+255),w,b
 36911  01856C  6F30               	movwf	(i1___fldiv@new_exp+1)& (0+255),b
 36912                           
 36913                           ; BSR set to: 1
 36914  01856E  C11E  F12A         	movff	i1___fldiv@b,i1___fldiv@rem
 36915  018572  C11F  F12B         	movff	i1___fldiv@b+1,i1___fldiv@rem+1
 36916  018576  C120  F12C         	movff	i1___fldiv@b+2,i1___fldiv@rem+2
 36917  01857A  C121  F12D         	movff	i1___fldiv@b+3,i1___fldiv@rem+3
 36918                           
 36919                           ; BSR set to: 1
 36920  01857E  0E00               	movlw	0
 36921  018580  6F1E               	movwf	i1___fldiv@b& (0+255),b
 36922  018582  0E00               	movlw	0
 36923  018584  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 36924  018586  0E00               	movlw	0
 36925  018588  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 36926  01858A  0E00               	movlw	0
 36927  01858C  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 36928                           
 36929                           ; BSR set to: 1
 36930  01858E  0E00               	movlw	0
 36931  018590  6F31               	movwf	i1___fldiv@grs& (0+255),b
 36932  018592  0E00               	movlw	0
 36933  018594  6F32               	movwf	(i1___fldiv@grs+1)& (0+255),b
 36934  018596  0E00               	movlw	0
 36935  018598  6F33               	movwf	(i1___fldiv@grs+2)& (0+255),b
 36936  01859A  0E00               	movlw	0
 36937  01859C  6F34               	movwf	(i1___fldiv@grs+3)& (0+255),b
 36938                           
 36939                           ; BSR set to: 1
 36940  01859E  0E00               	movlw	0
 36941  0185A0  6F36               	movwf	i1___fldiv@aexp& (0+255),b
 36942  0185A2  D028               	goto	i1l3281
 36943  0185A4                     i1l13556:
 36944                           
 36945                           ; BSR set to: 1
 36946  0185A4  5136               	movf	i1___fldiv@aexp& (0+255),w,b
 36947  0185A6  B4D8               	btfsc	status,2,c
 36948  0185A8  D011               	goto	i1l13564
 36949                           
 36950                           ; BSR set to: 1
 36951  0185AA  90D8               	bcf	status,0,c
 36952  0185AC  372A               	rlcf	i1___fldiv@rem& (0+255),f,b
 36953  0185AE  372B               	rlcf	(i1___fldiv@rem+1)& (0+255),f,b
 36954  0185B0  372C               	rlcf	(i1___fldiv@rem+2)& (0+255),f,b
 36955  0185B2  372D               	rlcf	(i1___fldiv@rem+3)& (0+255),f,b
 36956  0185B4  90D8               	bcf	status,0,c
 36957  0185B6  371E               	rlcf	i1___fldiv@b& (0+255),f,b
 36958  0185B8  371F               	rlcf	(i1___fldiv@b+1)& (0+255),f,b
 36959  0185BA  3720               	rlcf	(i1___fldiv@b+2)& (0+255),f,b
 36960  0185BC  3721               	rlcf	(i1___fldiv@b+3)& (0+255),f,b
 36961                           
 36962                           ; BSR set to: 1
 36963  0185BE  BF34               	btfsc	(i1___fldiv@grs+3)& (0+255),7,b
 36964                           
 36965                           ; BSR set to: 1
 36966  0185C0  811E               	bsf	i1___fldiv@b& (0+255),0,b
 36967                           
 36968                           ; BSR set to: 1
 36969  0185C2  90D8               	bcf	status,0,c
 36970  0185C4  3731               	rlcf	i1___fldiv@grs& (0+255),f,b
 36971  0185C6  3732               	rlcf	(i1___fldiv@grs+1)& (0+255),f,b
 36972  0185C8  3733               	rlcf	(i1___fldiv@grs+2)& (0+255),f,b
 36973  0185CA  3734               	rlcf	(i1___fldiv@grs+3)& (0+255),f,b
 36974  0185CC                     i1l13564:
 36975                           
 36976                           ; BSR set to: 1
 36977  0185CC  5122               	movf	i1___fldiv@a& (0+255),w,b
 36978  0185CE  5D2A               	subwf	i1___fldiv@rem& (0+255),w,b
 36979  0185D0  5123               	movf	(i1___fldiv@a+1)& (0+255),w,b
 36980  0185D2  592B               	subwfb	(i1___fldiv@rem+1)& (0+255),w,b
 36981  0185D4  5124               	movf	(i1___fldiv@a+2)& (0+255),w,b
 36982  0185D6  592C               	subwfb	(i1___fldiv@rem+2)& (0+255),w,b
 36983  0185D8  5125               	movf	(i1___fldiv@a+3)& (0+255),w,b
 36984  0185DA  592D               	subwfb	(i1___fldiv@rem+3)& (0+255),w,b
 36985  0185DC  A0D8               	btfss	status,0,c
 36986  0185DE  D009               	goto	i1l13570
 36987                           
 36988                           ; BSR set to: 1
 36989  0185E0  8D34               	bsf	(i1___fldiv@grs+3)& (0+255),6,b
 36990                           
 36991                           ; BSR set to: 1
 36992  0185E2  5122               	movf	i1___fldiv@a& (0+255),w,b
 36993  0185E4  5F2A               	subwf	i1___fldiv@rem& (0+255),f,b
 36994  0185E6  5123               	movf	(i1___fldiv@a+1)& (0+255),w,b
 36995  0185E8  5B2B               	subwfb	(i1___fldiv@rem+1)& (0+255),f,b
 36996  0185EA  5124               	movf	(i1___fldiv@a+2)& (0+255),w,b
 36997  0185EC  5B2C               	subwfb	(i1___fldiv@rem+2)& (0+255),f,b
 36998  0185EE  5125               	movf	(i1___fldiv@a+3)& (0+255),w,b
 36999  0185F0  5B2D               	subwfb	(i1___fldiv@rem+3)& (0+255),f,b
 37000  0185F2                     i1l13570:
 37001                           
 37002                           ; BSR set to: 1
 37003  0185F2  2B36               	incf	i1___fldiv@aexp& (0+255),f,b
 37004  0185F4                     i1l3281:
 37005                           
 37006                           ; BSR set to: 1
 37007  0185F4  0E19               	movlw	25
 37008  0185F6  6536               	cpfsgt	i1___fldiv@aexp& (0+255),b
 37009  0185F8  D7D5               	goto	i1l13556
 37010                           
 37011                           ; BSR set to: 1
 37012  0185FA  512A               	movf	i1___fldiv@rem& (0+255),w,b
 37013  0185FC  112B               	iorwf	(i1___fldiv@rem+1)& (0+255),w,b
 37014  0185FE  112C               	iorwf	(i1___fldiv@rem+2)& (0+255),w,b
 37015  018600  112D               	iorwf	(i1___fldiv@rem+3)& (0+255),w,b
 37016  018602  B4D8               	btfsc	status,2,c
 37017  018604  D011               	goto	i1l13582
 37018                           
 37019                           ; BSR set to: 1
 37020  018606  8131               	bsf	i1___fldiv@grs& (0+255),0,b
 37021  018608  D00F               	goto	i1l13582
 37022  01860A                     i1l13576:
 37023                           
 37024                           ; BSR set to: 1
 37025  01860A  90D8               	bcf	status,0,c
 37026  01860C  371E               	rlcf	i1___fldiv@b& (0+255),f,b
 37027  01860E  371F               	rlcf	(i1___fldiv@b+1)& (0+255),f,b
 37028  018610  3720               	rlcf	(i1___fldiv@b+2)& (0+255),f,b
 37029  018612  3721               	rlcf	(i1___fldiv@b+3)& (0+255),f,b
 37030                           
 37031                           ; BSR set to: 1
 37032  018614  BF34               	btfsc	(i1___fldiv@grs+3)& (0+255),7,b
 37033                           
 37034                           ; BSR set to: 1
 37035  018616  811E               	bsf	i1___fldiv@b& (0+255),0,b
 37036                           
 37037                           ; BSR set to: 1
 37038  018618  90D8               	bcf	status,0,c
 37039  01861A  3731               	rlcf	i1___fldiv@grs& (0+255),f,b
 37040  01861C  3732               	rlcf	(i1___fldiv@grs+1)& (0+255),f,b
 37041  01861E  3733               	rlcf	(i1___fldiv@grs+2)& (0+255),f,b
 37042  018620  3734               	rlcf	(i1___fldiv@grs+3)& (0+255),f,b
 37043  018622  072F               	decf	i1___fldiv@new_exp& (0+255),f,b
 37044  018624  A0D8               	btfss	status,0,c
 37045  018626  0730               	decf	(i1___fldiv@new_exp+1)& (0+255),f,b
 37046  018628                     i1l13582:
 37047                           
 37048                           ; BSR set to: 1
 37049  018628  AF20               	btfss	(i1___fldiv@b+2)& (0+255),7,b
 37050  01862A  D7EF               	goto	i1l13576
 37051                           
 37052                           ; BSR set to: 1
 37053  01862C  0E00               	movlw	0
 37054  01862E  6F36               	movwf	i1___fldiv@aexp& (0+255),b
 37055                           
 37056                           ; BSR set to: 1
 37057  018630  AF34               	btfss	(i1___fldiv@grs+3)& (0+255),7,b
 37058  018632  D017               	goto	i1l3292
 37059                           
 37060                           ; BSR set to: 1
 37061  018634  0EFF               	movlw	255
 37062  018636  1531               	andwf	i1___fldiv@grs& (0+255),w,b
 37063  018638  6F26               	movwf	??i1___fldiv& (0+255),b
 37064  01863A  0EFF               	movlw	255
 37065  01863C  1532               	andwf	(i1___fldiv@grs+1)& (0+255),w,b
 37066  01863E  6F27               	movwf	(??i1___fldiv+1)& (0+255),b
 37067  018640  0EFF               	movlw	255
 37068  018642  1533               	andwf	(i1___fldiv@grs+2)& (0+255),w,b
 37069  018644  6F28               	movwf	(??i1___fldiv+2)& (0+255),b
 37070  018646  0E7F               	movlw	127
 37071  018648  1534               	andwf	(i1___fldiv@grs+3)& (0+255),w,b
 37072  01864A  6F29               	movwf	(??i1___fldiv+3)& (0+255),b
 37073  01864C  5126               	movf	??i1___fldiv& (0+255),w,b
 37074  01864E  1127               	iorwf	(??i1___fldiv+1)& (0+255),w,b
 37075  018650  1128               	iorwf	(??i1___fldiv+2)& (0+255),w,b
 37076  018652  1129               	iorwf	(??i1___fldiv+3)& (0+255),w,b
 37077  018654  B4D8               	btfsc	status,2,c
 37078  018656  D003               	goto	i1l3293
 37079  018658                     i1u1560_20:
 37080                           
 37081                           ; BSR set to: 1
 37082  018658  0E01               	movlw	1
 37083  01865A  6F36               	movwf	i1___fldiv@aexp& (0+255),b
 37084  01865C  D002               	goto	i1l3292
 37085  01865E                     i1l3293:
 37086                           
 37087                           ; BSR set to: 1
 37088  01865E  B11E               	btfsc	i1___fldiv@b& (0+255),0,b
 37089  018660  D7FB               	goto	i1u1560_20
 37090  018662                     i1l3292:
 37091                           
 37092                           ; BSR set to: 1
 37093  018662  5136               	movf	i1___fldiv@aexp& (0+255),w,b
 37094  018664  B4D8               	btfsc	status,2,c
 37095  018666  D01F               	goto	i1l13602
 37096                           
 37097                           ; BSR set to: 1
 37098  018668  0E01               	movlw	1
 37099  01866A  271E               	addwf	i1___fldiv@b& (0+255),f,b
 37100  01866C  0E00               	movlw	0
 37101  01866E  231F               	addwfc	(i1___fldiv@b+1)& (0+255),f,b
 37102  018670  2320               	addwfc	(i1___fldiv@b+2)& (0+255),f,b
 37103  018672  2321               	addwfc	(i1___fldiv@b+3)& (0+255),f,b
 37104                           
 37105                           ; BSR set to: 1
 37106  018674  A121               	btfss	(i1___fldiv@b+3)& (0+255),0,b
 37107  018676  D017               	goto	i1l13602
 37108                           
 37109                           ; BSR set to: 1
 37110  018678  C11E  F126         	movff	i1___fldiv@b,??i1___fldiv
 37111  01867C  C11F  F127         	movff	i1___fldiv@b+1,??i1___fldiv+1
 37112  018680  C120  F128         	movff	i1___fldiv@b+2,??i1___fldiv+2
 37113  018684  C121  F129         	movff	i1___fldiv@b+3,??i1___fldiv+3
 37114  018688  3529               	rlcf	(??i1___fldiv+3)& (0+255),w,b
 37115  01868A  3329               	rrcf	(??i1___fldiv+3)& (0+255),f,b
 37116  01868C  3328               	rrcf	(??i1___fldiv+2)& (0+255),f,b
 37117  01868E  3327               	rrcf	(??i1___fldiv+1)& (0+255),f,b
 37118  018690  3326               	rrcf	??i1___fldiv& (0+255),f,b
 37119  018692  C126  F11E         	movff	??i1___fldiv,i1___fldiv@b
 37120  018696  C127  F11F         	movff	??i1___fldiv+1,i1___fldiv@b+1
 37121  01869A  C128  F120         	movff	??i1___fldiv+2,i1___fldiv@b+2
 37122  01869E  C129  F121         	movff	??i1___fldiv+3,i1___fldiv@b+3
 37123                           
 37124                           ; BSR set to: 1
 37125  0186A2  4B2F               	infsnz	i1___fldiv@new_exp& (0+255),f,b
 37126  0186A4  2B30               	incf	(i1___fldiv@new_exp+1)& (0+255),f,b
 37127  0186A6                     i1l13602:
 37128                           
 37129                           ; BSR set to: 1
 37130  0186A6  BF30               	btfsc	(i1___fldiv@new_exp+1)& (0+255),7,b
 37131  0186A8  D010               	goto	i1l13606
 37132  0186AA  5130               	movf	(i1___fldiv@new_exp+1)& (0+255),w,b
 37133  0186AC  E103               	bnz	i1u1564_20
 37134  0186AE  292F               	incf	i1___fldiv@new_exp& (0+255),w,b
 37135  0186B0  A0D8               	btfss	status,0,c
 37136  0186B2  D00B               	goto	i1l13606
 37137  0186B4                     i1u1564_20:
 37138                           
 37139                           ; BSR set to: 1
 37140  0186B4  0E00               	movlw	0
 37141  0186B6  6F30               	movwf	(i1___fldiv@new_exp+1)& (0+255),b
 37142  0186B8  692F               	setf	i1___fldiv@new_exp& (0+255),b
 37143  0186BA  0E00               	movlw	0
 37144  0186BC  6F1E               	movwf	i1___fldiv@b& (0+255),b
 37145  0186BE  0E00               	movlw	0
 37146  0186C0  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 37147  0186C2  0E00               	movlw	0
 37148  0186C4  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 37149  0186C6  0E00               	movlw	0
 37150  0186C8  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 37151  0186CA                     i1l13606:
 37152                           
 37153                           ; BSR set to: 1
 37154  0186CA  BF30               	btfsc	(i1___fldiv@new_exp+1)& (0+255),7,b
 37155  0186CC  D005               	goto	i1u1565_20
 37156  0186CE  5130               	movf	(i1___fldiv@new_exp+1)& (0+255),w,b
 37157  0186D0  E111               	bnz	i1l13610
 37158  0186D2  052F               	decf	i1___fldiv@new_exp& (0+255),w,b
 37159  0186D4  B0D8               	btfsc	status,0,c
 37160  0186D6  D00E               	goto	i1l13610
 37161  0186D8                     i1u1565_20:
 37162                           
 37163                           ; BSR set to: 1
 37164  0186D8  0E00               	movlw	0
 37165  0186DA  6F30               	movwf	(i1___fldiv@new_exp+1)& (0+255),b
 37166  0186DC  0E00               	movlw	0
 37167  0186DE  6F2F               	movwf	i1___fldiv@new_exp& (0+255),b
 37168  0186E0  0E00               	movlw	0
 37169  0186E2  6F1E               	movwf	i1___fldiv@b& (0+255),b
 37170  0186E4  0E00               	movlw	0
 37171  0186E6  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 37172  0186E8  0E00               	movlw	0
 37173  0186EA  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 37174  0186EC  0E00               	movlw	0
 37175  0186EE  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 37176  0186F0  0E00               	movlw	0
 37177  0186F2  6F2E               	movwf	i1___fldiv@sign& (0+255),b
 37178  0186F4                     i1l13610:
 37179                           
 37180                           ; BSR set to: 1
 37181  0186F4  C12F  F135         	movff	i1___fldiv@new_exp,i1___fldiv@bexp
 37182                           
 37183                           ; BSR set to: 1
 37184  0186F8  A135               	btfss	i1___fldiv@bexp& (0+255),0,b
 37185  0186FA  D002               	goto	i1l13616
 37186                           
 37187                           ; BSR set to: 1
 37188  0186FC  8F20               	bsf	(i1___fldiv@b+2)& (0+255),7,b
 37189  0186FE  D001               	goto	i1l13618
 37190  018700                     i1l13616:
 37191                           
 37192                           ; BSR set to: 1
 37193  018700  9F20               	bcf	(i1___fldiv@b+2)& (0+255),7,b
 37194  018702                     i1l13618:
 37195                           
 37196                           ; BSR set to: 1
 37197  018702  90D8               	bcf	status,0,c
 37198  018704  3135               	rrcf	i1___fldiv@bexp& (0+255),w,b
 37199  018706  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 37200  018708  D70E               	goto	i1l13532
 37201  01870A                     __end_ofi1___fldiv:
 37202                           	opt callstack 0
 37203                           
 37204 ;; *************** function i1___fladd *****************
 37205 ;; Defined at:
 37206 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 37207 ;; Parameters:    Size  Location     Type
 37208 ;;  b               4   14[BANK1 ] unsigned char 
 37209 ;;  a               4   18[BANK1 ] unsigned char 
 37210 ;; Auto vars:     Size  Location     Type
 37211 ;;  __fladd         1   29[BANK1 ] unsigned char 
 37212 ;;  __fladd         1   28[BANK1 ] unsigned char 
 37213 ;;  __fladd         1   27[BANK1 ] unsigned char 
 37214 ;;  __fladd         1   26[BANK1 ] unsigned char 
 37215 ;; Return value:  Size  Location     Type
 37216 ;;                  4   14[BANK1 ] unsigned char 
 37217 ;; Registers used:
 37218 ;;		wreg, status,2, status,0
 37219 ;; Tracked objects:
 37220 ;;		On entry : 0/0
 37221 ;;		On exit  : 0/0
 37222 ;;		Unchanged: 0/0
 37223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37224 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37225 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37226 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37227 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37228 ;;Total ram usage:       16 bytes
 37229 ;; Hardware stack levels used:    1
 37230 ;; Hardware stack levels required when called:    6
 37231 ;; This function calls:
 37232 ;;		Nothing
 37233 ;; This function is called by:
 37234 ;;		_freqMeasConvert
 37235 ;; This function uses a non-reentrant model
 37236 ;;
 37237                           
 37238                           	psect	text147
 37239  017398                     __ptext147:
 37240                           	opt callstack 0
 37241  017398                     i1___fladd:
 37242                           	opt callstack 12
 37243                           
 37244                           ; BSR set to: 1
 37245                           ;incstack = 0
 37246  017398  0101               	movlb	1	; () banked
 37247  01739A  5111               	movf	(i1___fladd@b+3)& (0+255),w,b
 37248  01739C  0B80               	andlw	128
 37249  01739E  6F1A               	movwf	i1___fladd@signs& (0+255),b
 37250  0173A0  5111               	movf	(i1___fladd@b+3)& (0+255),w,b
 37251  0173A2  2511               	addwf	(i1___fladd@b+3)& (0+255),w,b
 37252  0173A4  6F1C               	movwf	i1___fladd@bexp& (0+255),b
 37253                           
 37254                           ; BSR set to: 1
 37255  0173A6  BF10               	btfsc	(i1___fladd@b+2)& (0+255),7,b
 37256                           
 37257                           ; BSR set to: 1
 37258  0173A8  811C               	bsf	i1___fladd@bexp& (0+255),0,b
 37259                           
 37260                           ; BSR set to: 1
 37261  0173AA  511C               	movf	i1___fladd@bexp& (0+255),w,b
 37262  0173AC  B4D8               	btfsc	status,2,c
 37263  0173AE  D00D               	goto	i1l13296
 37264                           
 37265                           ; BSR set to: 1
 37266  0173B0  291C               	incf	i1___fladd@bexp& (0+255),w,b
 37267  0173B2  A4D8               	btfss	status,2,c
 37268  0173B4  D008               	goto	i1l13292
 37269                           
 37270                           ; BSR set to: 1
 37271  0173B6  0E00               	movlw	0
 37272  0173B8  6F0E               	movwf	i1___fladd@b& (0+255),b
 37273  0173BA  0E00               	movlw	0
 37274  0173BC  6F0F               	movwf	(i1___fladd@b+1)& (0+255),b
 37275  0173BE  0E00               	movlw	0
 37276  0173C0  6F10               	movwf	(i1___fladd@b+2)& (0+255),b
 37277  0173C2  0E00               	movlw	0
 37278  0173C4  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 37279  0173C6                     i1l13292:
 37280                           
 37281                           ; BSR set to: 1
 37282  0173C6  8F10               	bsf	(i1___fladd@b+2)& (0+255),7,b
 37283  0173C8  D006               	goto	L30
 37284  0173CA                     i1l13296:
 37285                           
 37286                           ; BSR set to: 1
 37287  0173CA  0E00               	movlw	0
 37288  0173CC  6F0E               	movwf	i1___fladd@b& (0+255),b
 37289  0173CE  0E00               	movlw	0
 37290  0173D0  6F0F               	movwf	(i1___fladd@b+1)& (0+255),b
 37291  0173D2  0E00               	movlw	0
 37292  0173D4  6F10               	movwf	(i1___fladd@b+2)& (0+255),b
 37293  0173D6                     L30:
 37294  0173D6  0E00               	movlw	0
 37295  0173D8  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 37296                           
 37297                           ; BSR set to: 1
 37298  0173DA  5115               	movf	(i1___fladd@a+3)& (0+255),w,b
 37299  0173DC  0B80               	andlw	128
 37300  0173DE  6F1B               	movwf	i1___fladd@aexp& (0+255),b
 37301                           
 37302                           ; BSR set to: 1
 37303  0173E0  511A               	movf	i1___fladd@signs& (0+255),w,b
 37304  0173E2  191B               	xorwf	i1___fladd@aexp& (0+255),w,b
 37305  0173E4  A4D8               	btfss	status,2,c
 37306                           
 37307                           ; BSR set to: 1
 37308  0173E6  8D1A               	bsf	i1___fladd@signs& (0+255),6,b
 37309                           
 37310                           ; BSR set to: 1
 37311  0173E8  5115               	movf	(i1___fladd@a+3)& (0+255),w,b
 37312  0173EA  2515               	addwf	(i1___fladd@a+3)& (0+255),w,b
 37313  0173EC  6F1B               	movwf	i1___fladd@aexp& (0+255),b
 37314                           
 37315                           ; BSR set to: 1
 37316  0173EE  BF14               	btfsc	(i1___fladd@a+2)& (0+255),7,b
 37317                           
 37318                           ; BSR set to: 1
 37319  0173F0  811B               	bsf	i1___fladd@aexp& (0+255),0,b
 37320                           
 37321                           ; BSR set to: 1
 37322  0173F2  511B               	movf	i1___fladd@aexp& (0+255),w,b
 37323  0173F4  B4D8               	btfsc	status,2,c
 37324  0173F6  D00D               	goto	i1l13320
 37325                           
 37326                           ; BSR set to: 1
 37327  0173F8  291B               	incf	i1___fladd@aexp& (0+255),w,b
 37328  0173FA  A4D8               	btfss	status,2,c
 37329  0173FC  D008               	goto	i1l13316
 37330                           
 37331                           ; BSR set to: 1
 37332  0173FE  0E00               	movlw	0
 37333  017400  6F12               	movwf	i1___fladd@a& (0+255),b
 37334  017402  0E00               	movlw	0
 37335  017404  6F13               	movwf	(i1___fladd@a+1)& (0+255),b
 37336  017406  0E00               	movlw	0
 37337  017408  6F14               	movwf	(i1___fladd@a+2)& (0+255),b
 37338  01740A  0E00               	movlw	0
 37339  01740C  6F15               	movwf	(i1___fladd@a+3)& (0+255),b
 37340  01740E                     i1l13316:
 37341                           
 37342                           ; BSR set to: 1
 37343  01740E  8F14               	bsf	(i1___fladd@a+2)& (0+255),7,b
 37344  017410  D006               	goto	L31
 37345  017412                     i1l13320:
 37346                           
 37347                           ; BSR set to: 1
 37348  017412  0E00               	movlw	0
 37349  017414  6F12               	movwf	i1___fladd@a& (0+255),b
 37350  017416  0E00               	movlw	0
 37351  017418  6F13               	movwf	(i1___fladd@a+1)& (0+255),b
 37352  01741A  0E00               	movlw	0
 37353  01741C  6F14               	movwf	(i1___fladd@a+2)& (0+255),b
 37354  01741E                     L31:
 37355  01741E  0E00               	movlw	0
 37356  017420  6F15               	movwf	(i1___fladd@a+3)& (0+255),b
 37357                           
 37358                           ; BSR set to: 1
 37359  017422  511C               	movf	i1___fladd@bexp& (0+255),w,b
 37360  017424  5D1B               	subwf	i1___fladd@aexp& (0+255),w,b
 37361  017426  B0D8               	btfsc	status,0,c
 37362  017428  D022               	goto	i1l13358
 37363                           
 37364                           ; BSR set to: 1
 37365  01742A  AD1A               	btfss	i1___fladd@signs& (0+255),6,b
 37366  01742C  D002               	goto	i1l13328
 37367                           
 37368                           ; BSR set to: 1
 37369  01742E  0E80               	movlw	128
 37370  017430  1B1A               	xorwf	i1___fladd@signs& (0+255),f,b
 37371  017432                     i1l13328:
 37372                           
 37373                           ; BSR set to: 1
 37374  017432  C11C  F11D         	movff	i1___fladd@bexp,i1___fladd@grs
 37375                           
 37376                           ; BSR set to: 1
 37377  017436  C11B  F11C         	movff	i1___fladd@aexp,i1___fladd@bexp
 37378                           
 37379                           ; BSR set to: 1
 37380  01743A  C11D  F11B         	movff	i1___fladd@grs,i1___fladd@aexp
 37381                           
 37382                           ; BSR set to: 1
 37383  01743E  C10E  F11D         	movff	i1___fladd@b,i1___fladd@grs
 37384                           
 37385                           ; BSR set to: 1
 37386  017442  C112  F10E         	movff	i1___fladd@a,i1___fladd@b
 37387                           
 37388                           ; BSR set to: 1
 37389  017446  C11D  F112         	movff	i1___fladd@grs,i1___fladd@a
 37390                           
 37391                           ; BSR set to: 1
 37392  01744A  C10F  F11D         	movff	i1___fladd@b+1,i1___fladd@grs
 37393                           
 37394                           ; BSR set to: 1
 37395  01744E  C113  F10F         	movff	i1___fladd@a+1,i1___fladd@b+1
 37396                           
 37397                           ; BSR set to: 1
 37398  017452  C11D  F113         	movff	i1___fladd@grs,i1___fladd@a+1
 37399                           
 37400                           ; BSR set to: 1
 37401  017456  C110  F11D         	movff	i1___fladd@b+2,i1___fladd@grs
 37402                           
 37403                           ; BSR set to: 1
 37404  01745A  C114  F110         	movff	i1___fladd@a+2,i1___fladd@b+2
 37405                           
 37406                           ; BSR set to: 1
 37407  01745E  C11D  F114         	movff	i1___fladd@grs,i1___fladd@a+2
 37408                           
 37409                           ; BSR set to: 1
 37410  017462  C111  F11D         	movff	i1___fladd@b+3,i1___fladd@grs
 37411                           
 37412                           ; BSR set to: 1
 37413  017466  C115  F111         	movff	i1___fladd@a+3,i1___fladd@b+3
 37414                           
 37415                           ; BSR set to: 1
 37416  01746A  C11D  F115         	movff	i1___fladd@grs,i1___fladd@a+3
 37417  01746E                     i1l13358:
 37418                           
 37419                           ; BSR set to: 1
 37420  01746E  0E00               	movlw	0
 37421  017470  6F1D               	movwf	i1___fladd@grs& (0+255),b
 37422                           
 37423                           ; BSR set to: 1
 37424  017472  511C               	movf	i1___fladd@bexp& (0+255),w,b
 37425  017474  C11B  F116         	movff	i1___fladd@aexp,??i1___fladd
 37426  017478  6B17               	clrf	(??i1___fladd+1)& (0+255),b
 37427  01747A  5F16               	subwf	??i1___fladd& (0+255),f,b
 37428  01747C  0E00               	movlw	0
 37429  01747E  5B17               	subwfb	(??i1___fladd+1)& (0+255),f,b
 37430  017480  BF17               	btfsc	(??i1___fladd+1)& (0+255),7,b
 37431  017482  D02C               	goto	i1l3226
 37432  017484  5117               	movf	(??i1___fladd+1)& (0+255),w,b
 37433  017486  E104               	bnz	i1u1514_20
 37434  017488  0E1A               	movlw	26
 37435  01748A  5D16               	subwf	??i1___fladd& (0+255),w,b
 37436  01748C  A0D8               	btfss	status,0,c
 37437  01748E  D026               	goto	i1l3226
 37438  017490                     i1u1514_20:
 37439                           
 37440                           ; BSR set to: 1
 37441  017490  510E               	movf	i1___fladd@b& (0+255),w,b
 37442  017492  110F               	iorwf	(i1___fladd@b+1)& (0+255),w,b
 37443  017494  1110               	iorwf	(i1___fladd@b+2)& (0+255),w,b
 37444  017496  1111               	iorwf	(i1___fladd@b+3)& (0+255),w,b
 37445  017498  B4D8               	btfsc	status,2,c
 37446  01749A  D002               	goto	i1u1515_20
 37447  01749C  0E01               	movlw	1
 37448  01749E  D001               	goto	i1u1516_20
 37449  0174A0                     i1u1515_20:
 37450  0174A0  0E00               	movlw	0
 37451  0174A2                     i1u1516_20:
 37452  0174A2  6F1D               	movwf	i1___fladd@grs& (0+255),b
 37453                           
 37454                           ; BSR set to: 1
 37455  0174A4  0E00               	movlw	0
 37456  0174A6  6F0E               	movwf	i1___fladd@b& (0+255),b
 37457  0174A8  0E00               	movlw	0
 37458  0174AA  6F0F               	movwf	(i1___fladd@b+1)& (0+255),b
 37459  0174AC  0E00               	movlw	0
 37460  0174AE  6F10               	movwf	(i1___fladd@b+2)& (0+255),b
 37461  0174B0  0E00               	movlw	0
 37462  0174B2  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 37463                           
 37464                           ; BSR set to: 1
 37465  0174B4  C11B  F11C         	movff	i1___fladd@aexp,i1___fladd@bexp
 37466  0174B8  D015               	goto	i1u1519_20
 37467  0174BA                     i1l3227:
 37468                           
 37469                           ; BSR set to: 1
 37470  0174BA  A11D               	btfss	i1___fladd@grs& (0+255),0,b
 37471  0174BC  D005               	goto	i1l13370
 37472                           
 37473                           ; BSR set to: 1
 37474  0174BE  90D8               	bcf	status,0,c
 37475  0174C0  311D               	rrcf	i1___fladd@grs& (0+255),w,b
 37476  0174C2  0901               	iorlw	1
 37477  0174C4  6F1D               	movwf	i1___fladd@grs& (0+255),b
 37478  0174C6  D002               	goto	i1l13372
 37479  0174C8                     i1l13370:
 37480                           
 37481                           ; BSR set to: 1
 37482  0174C8  90D8               	bcf	status,0,c
 37483  0174CA  331D               	rrcf	i1___fladd@grs& (0+255),f,b
 37484  0174CC                     i1l13372:
 37485                           
 37486                           ; BSR set to: 1
 37487  0174CC  B10E               	btfsc	i1___fladd@b& (0+255),0,b
 37488                           
 37489                           ; BSR set to: 1
 37490  0174CE  8F1D               	bsf	i1___fladd@grs& (0+255),7,b
 37491                           
 37492                           ; BSR set to: 1
 37493  0174D0  3511               	rlcf	(i1___fladd@b+3)& (0+255),w,b
 37494  0174D2  3311               	rrcf	(i1___fladd@b+3)& (0+255),f,b
 37495  0174D4  3310               	rrcf	(i1___fladd@b+2)& (0+255),f,b
 37496  0174D6  330F               	rrcf	(i1___fladd@b+1)& (0+255),f,b
 37497  0174D8  330E               	rrcf	i1___fladd@b& (0+255),f,b
 37498                           
 37499                           ; BSR set to: 1
 37500  0174DA  2B1C               	incf	i1___fladd@bexp& (0+255),f,b
 37501  0174DC                     i1l3226:
 37502                           
 37503                           ; BSR set to: 1
 37504  0174DC  511B               	movf	i1___fladd@aexp& (0+255),w,b
 37505  0174DE  5D1C               	subwf	i1___fladd@bexp& (0+255),w,b
 37506  0174E0  A0D8               	btfss	status,0,c
 37507  0174E2  D7EB               	goto	i1l3227
 37508  0174E4                     i1u1519_20:
 37509                           
 37510                           ; BSR set to: 1
 37511  0174E4  BD1A               	btfsc	i1___fladd@signs& (0+255),6,b
 37512  0174E6  D028               	goto	i1l13404
 37513                           
 37514                           ; BSR set to: 1
 37515  0174E8  511C               	movf	i1___fladd@bexp& (0+255),w,b
 37516  0174EA  A4D8               	btfss	status,2,c
 37517  0174EC  D009               	goto	i1l13386
 37518                           
 37519                           ; BSR set to: 1
 37520  0174EE  0E00               	movlw	0
 37521  0174F0  6F0E               	movwf	?i1___fladd& (0+255),b
 37522  0174F2  0E00               	movlw	0
 37523  0174F4  6F0F               	movwf	(?i1___fladd+1)& (0+255),b
 37524  0174F6  0E00               	movlw	0
 37525  0174F8  6F10               	movwf	(?i1___fladd+2)& (0+255),b
 37526  0174FA  0E00               	movlw	0
 37527  0174FC  6F11               	movwf	(?i1___fladd+3)& (0+255),b
 37528  0174FE  0012               	return	
 37529  017500                     i1l13386:
 37530                           
 37531                           ; BSR set to: 1
 37532  017500  5112               	movf	i1___fladd@a& (0+255),w,b
 37533  017502  270E               	addwf	i1___fladd@b& (0+255),f,b
 37534  017504  5113               	movf	(i1___fladd@a+1)& (0+255),w,b
 37535  017506  230F               	addwfc	(i1___fladd@b+1)& (0+255),f,b
 37536  017508  5114               	movf	(i1___fladd@a+2)& (0+255),w,b
 37537  01750A  2310               	addwfc	(i1___fladd@b+2)& (0+255),f,b
 37538  01750C  5115               	movf	(i1___fladd@a+3)& (0+255),w,b
 37539  01750E  2311               	addwfc	(i1___fladd@b+3)& (0+255),f,b
 37540                           
 37541                           ; BSR set to: 1
 37542  017510  A111               	btfss	(i1___fladd@b+3)& (0+255),0,b
 37543  017512  D071               	goto	i1u1532_20
 37544                           
 37545                           ; BSR set to: 1
 37546  017514  A11D               	btfss	i1___fladd@grs& (0+255),0,b
 37547  017516  D005               	goto	i1l13394
 37548                           
 37549                           ; BSR set to: 1
 37550  017518  90D8               	bcf	status,0,c
 37551  01751A  311D               	rrcf	i1___fladd@grs& (0+255),w,b
 37552  01751C  0901               	iorlw	1
 37553  01751E  6F1D               	movwf	i1___fladd@grs& (0+255),b
 37554  017520  D002               	goto	i1l13396
 37555  017522                     i1l13394:
 37556                           
 37557                           ; BSR set to: 1
 37558  017522  90D8               	bcf	status,0,c
 37559  017524  331D               	rrcf	i1___fladd@grs& (0+255),f,b
 37560  017526                     i1l13396:
 37561                           
 37562                           ; BSR set to: 1
 37563  017526  B10E               	btfsc	i1___fladd@b& (0+255),0,b
 37564                           
 37565                           ; BSR set to: 1
 37566  017528  8F1D               	bsf	i1___fladd@grs& (0+255),7,b
 37567                           
 37568                           ; BSR set to: 1
 37569  01752A  3511               	rlcf	(i1___fladd@b+3)& (0+255),w,b
 37570  01752C  3311               	rrcf	(i1___fladd@b+3)& (0+255),f,b
 37571  01752E  3310               	rrcf	(i1___fladd@b+2)& (0+255),f,b
 37572  017530  330F               	rrcf	(i1___fladd@b+1)& (0+255),f,b
 37573  017532  330E               	rrcf	i1___fladd@b& (0+255),f,b
 37574                           
 37575                           ; BSR set to: 1
 37576  017534  2B1C               	incf	i1___fladd@bexp& (0+255),f,b
 37577  017536  D05F               	goto	i1u1532_20
 37578  017538                     i1l13404:
 37579                           
 37580                           ; BSR set to: 1
 37581  017538  5112               	movf	i1___fladd@a& (0+255),w,b
 37582  01753A  5D0E               	subwf	i1___fladd@b& (0+255),w,b
 37583  01753C  5113               	movf	(i1___fladd@a+1)& (0+255),w,b
 37584  01753E  590F               	subwfb	(i1___fladd@b+1)& (0+255),w,b
 37585  017540  5114               	movf	(i1___fladd@a+2)& (0+255),w,b
 37586  017542  5910               	subwfb	(i1___fladd@b+2)& (0+255),w,b
 37587  017544  5111               	movf	(i1___fladd@b+3)& (0+255),w,b
 37588  017546  0A80               	xorlw	128
 37589  017548  6F16               	movwf	??i1___fladd& (0+255),b
 37590  01754A  5115               	movf	(i1___fladd@a+3)& (0+255),w,b
 37591  01754C  0A80               	xorlw	128
 37592  01754E  5916               	subwfb	??i1___fladd& (0+255),w,b
 37593  017550  B0D8               	btfsc	status,0,c
 37594  017552  D025               	goto	i1l13414
 37595                           
 37596                           ; BSR set to: 1
 37597  017554  510E               	movf	i1___fladd@b& (0+255),w,b
 37598  017556  5D12               	subwf	i1___fladd@a& (0+255),w,b
 37599  017558  6F16               	movwf	??i1___fladd& (0+255),b
 37600  01755A  510F               	movf	(i1___fladd@b+1)& (0+255),w,b
 37601  01755C  5913               	subwfb	(i1___fladd@a+1)& (0+255),w,b
 37602  01755E  6F17               	movwf	(??i1___fladd+1)& (0+255),b
 37603  017560  5110               	movf	(i1___fladd@b+2)& (0+255),w,b
 37604  017562  5914               	subwfb	(i1___fladd@a+2)& (0+255),w,b
 37605  017564  6F18               	movwf	(??i1___fladd+2)& (0+255),b
 37606  017566  5111               	movf	(i1___fladd@b+3)& (0+255),w,b
 37607  017568  5915               	subwfb	(i1___fladd@a+3)& (0+255),w,b
 37608  01756A  6F19               	movwf	(??i1___fladd+3)& (0+255),b
 37609  01756C  0EFF               	movlw	255
 37610  01756E  2516               	addwf	??i1___fladd& (0+255),w,b
 37611  017570  6F0E               	movwf	i1___fladd@b& (0+255),b
 37612  017572  0EFF               	movlw	255
 37613  017574  2117               	addwfc	(??i1___fladd+1)& (0+255),w,b
 37614  017576  6F0F               	movwf	(i1___fladd@b+1)& (0+255),b
 37615  017578  0EFF               	movlw	255
 37616  01757A  2118               	addwfc	(??i1___fladd+2)& (0+255),w,b
 37617  01757C  6F10               	movwf	(i1___fladd@b+2)& (0+255),b
 37618  01757E  0EFF               	movlw	255
 37619  017580  2119               	addwfc	(??i1___fladd+3)& (0+255),w,b
 37620  017582  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 37621  017584  0E80               	movlw	128
 37622  017586  1B1A               	xorwf	i1___fladd@signs& (0+255),f,b
 37623                           
 37624                           ; BSR set to: 1
 37625  017588  6D1D               	negf	i1___fladd@grs& (0+255),b
 37626                           
 37627                           ; BSR set to: 1
 37628  01758A  511D               	movf	i1___fladd@grs& (0+255),w,b
 37629  01758C  A4D8               	btfss	status,2,c
 37630  01758E  D00F               	goto	i1l3242
 37631                           
 37632                           ; BSR set to: 1
 37633  017590  0E01               	movlw	1
 37634  017592  270E               	addwf	i1___fladd@b& (0+255),f,b
 37635  017594  0E00               	movlw	0
 37636  017596  230F               	addwfc	(i1___fladd@b+1)& (0+255),f,b
 37637  017598  2310               	addwfc	(i1___fladd@b+2)& (0+255),f,b
 37638  01759A  2311               	addwfc	(i1___fladd@b+3)& (0+255),f,b
 37639  01759C  D008               	goto	i1l3242
 37640  01759E                     i1l13414:
 37641                           
 37642                           ; BSR set to: 1
 37643  01759E  5112               	movf	i1___fladd@a& (0+255),w,b
 37644  0175A0  5F0E               	subwf	i1___fladd@b& (0+255),f,b
 37645  0175A2  5113               	movf	(i1___fladd@a+1)& (0+255),w,b
 37646  0175A4  5B0F               	subwfb	(i1___fladd@b+1)& (0+255),f,b
 37647  0175A6  5114               	movf	(i1___fladd@a+2)& (0+255),w,b
 37648  0175A8  5B10               	subwfb	(i1___fladd@b+2)& (0+255),f,b
 37649  0175AA  5115               	movf	(i1___fladd@a+3)& (0+255),w,b
 37650  0175AC  5B11               	subwfb	(i1___fladd@b+3)& (0+255),f,b
 37651  0175AE                     i1l3242:
 37652                           
 37653                           ; BSR set to: 1
 37654  0175AE  510E               	movf	i1___fladd@b& (0+255),w,b
 37655  0175B0  110F               	iorwf	(i1___fladd@b+1)& (0+255),w,b
 37656  0175B2  1110               	iorwf	(i1___fladd@b+2)& (0+255),w,b
 37657  0175B4  1111               	iorwf	(i1___fladd@b+3)& (0+255),w,b
 37658  0175B6  A4D8               	btfss	status,2,c
 37659  0175B8  D01C               	goto	i1l13438
 37660                           
 37661                           ; BSR set to: 1
 37662  0175BA  511D               	movf	i1___fladd@grs& (0+255),w,b
 37663  0175BC  A4D8               	btfss	status,2,c
 37664  0175BE  D019               	goto	i1l13438
 37665                           
 37666                           ; BSR set to: 1
 37667  0175C0  0E00               	movlw	0
 37668  0175C2  6F0E               	movwf	?i1___fladd& (0+255),b
 37669  0175C4  0E00               	movlw	0
 37670  0175C6  6F0F               	movwf	(?i1___fladd+1)& (0+255),b
 37671  0175C8  0E00               	movlw	0
 37672  0175CA  6F10               	movwf	(?i1___fladd+2)& (0+255),b
 37673  0175CC  0E00               	movlw	0
 37674  0175CE  6F11               	movwf	(?i1___fladd+3)& (0+255),b
 37675  0175D0  0012               	return	
 37676  0175D2                     i1l13422:
 37677                           
 37678                           ; BSR set to: 1
 37679  0175D2  90D8               	bcf	status,0,c
 37680  0175D4  370E               	rlcf	i1___fladd@b& (0+255),f,b
 37681  0175D6  370F               	rlcf	(i1___fladd@b+1)& (0+255),f,b
 37682  0175D8  3710               	rlcf	(i1___fladd@b+2)& (0+255),f,b
 37683  0175DA  3711               	rlcf	(i1___fladd@b+3)& (0+255),f,b
 37684                           
 37685                           ; BSR set to: 1
 37686  0175DC  BF1D               	btfsc	i1___fladd@grs& (0+255),7,b
 37687                           
 37688                           ; BSR set to: 1
 37689  0175DE  810E               	bsf	i1___fladd@b& (0+255),0,b
 37690                           
 37691                           ; BSR set to: 1
 37692  0175E0  A11D               	btfss	i1___fladd@grs& (0+255),0,b
 37693  0175E2  D002               	goto	i1l13432
 37694                           
 37695                           ; BSR set to: 1
 37696  0175E4  80D8               	bsf	status,0,c
 37697  0175E6  D001               	goto	L32
 37698  0175E8                     i1l13432:
 37699                           
 37700                           ; BSR set to: 1
 37701  0175E8  90D8               	bcf	status,0,c
 37702  0175EA                     L32:
 37703  0175EA  371D               	rlcf	i1___fladd@grs& (0+255),f,b
 37704                           
 37705                           ; BSR set to: 1
 37706  0175EC  511C               	movf	i1___fladd@bexp& (0+255),w,b
 37707  0175EE  A4D8               	btfss	status,2,c
 37708                           
 37709                           ; BSR set to: 1
 37710  0175F0  071C               	decf	i1___fladd@bexp& (0+255),f,b
 37711  0175F2                     i1l13438:
 37712                           
 37713                           ; BSR set to: 1
 37714  0175F2  AF10               	btfss	(i1___fladd@b+2)& (0+255),7,b
 37715  0175F4  D7EE               	goto	i1l13422
 37716  0175F6                     i1u1532_20:
 37717                           
 37718                           ; BSR set to: 1
 37719  0175F6  0E00               	movlw	0
 37720  0175F8  6F1B               	movwf	i1___fladd@aexp& (0+255),b
 37721                           
 37722                           ; BSR set to: 1
 37723  0175FA  AF1D               	btfss	i1___fladd@grs& (0+255),7,b
 37724  0175FC  D00B               	goto	i1l3251
 37725                           
 37726                           ; BSR set to: 1
 37727  0175FE  C11D  F116         	movff	i1___fladd@grs,??i1___fladd
 37728  017602  0E7F               	movlw	127
 37729  017604  1716               	andwf	??i1___fladd& (0+255),f,b
 37730  017606  B4D8               	btfsc	status,2,c
 37731  017608  D003               	goto	i1l3252
 37732  01760A                     i1u1534_20:
 37733                           
 37734                           ; BSR set to: 1
 37735  01760A  0E01               	movlw	1
 37736  01760C  6F1B               	movwf	i1___fladd@aexp& (0+255),b
 37737  01760E  D002               	goto	i1l3251
 37738  017610                     i1l3252:
 37739                           
 37740                           ; BSR set to: 1
 37741  017610  B10E               	btfsc	i1___fladd@b& (0+255),0,b
 37742  017612  D7FB               	goto	i1u1534_20
 37743  017614                     i1l3251:
 37744                           
 37745                           ; BSR set to: 1
 37746  017614  511B               	movf	i1___fladd@aexp& (0+255),w,b
 37747  017616  B4D8               	btfsc	status,2,c
 37748  017618  D020               	goto	i1l13458
 37749                           
 37750                           ; BSR set to: 1
 37751  01761A  0E01               	movlw	1
 37752  01761C  270E               	addwf	i1___fladd@b& (0+255),f,b
 37753  01761E  0E00               	movlw	0
 37754  017620  230F               	addwfc	(i1___fladd@b+1)& (0+255),f,b
 37755  017622  2310               	addwfc	(i1___fladd@b+2)& (0+255),f,b
 37756  017624  2311               	addwfc	(i1___fladd@b+3)& (0+255),f,b
 37757                           
 37758                           ; BSR set to: 1
 37759  017626  A111               	btfss	(i1___fladd@b+3)& (0+255),0,b
 37760  017628  D018               	goto	i1l13458
 37761                           
 37762                           ; BSR set to: 1
 37763  01762A  C10E  F116         	movff	i1___fladd@b,??i1___fladd
 37764  01762E  C10F  F117         	movff	i1___fladd@b+1,??i1___fladd+1
 37765  017632  C110  F118         	movff	i1___fladd@b+2,??i1___fladd+2
 37766  017636  C111  F119         	movff	i1___fladd@b+3,??i1___fladd+3
 37767  01763A  3519               	rlcf	(??i1___fladd+3)& (0+255),w,b
 37768  01763C  3319               	rrcf	(??i1___fladd+3)& (0+255),f,b
 37769  01763E  3318               	rrcf	(??i1___fladd+2)& (0+255),f,b
 37770  017640  3317               	rrcf	(??i1___fladd+1)& (0+255),f,b
 37771  017642  3316               	rrcf	??i1___fladd& (0+255),f,b
 37772  017644  C116  F10E         	movff	??i1___fladd,i1___fladd@b
 37773  017648  C117  F10F         	movff	??i1___fladd+1,i1___fladd@b+1
 37774  01764C  C118  F110         	movff	??i1___fladd+2,i1___fladd@b+2
 37775  017650  C119  F111         	movff	??i1___fladd+3,i1___fladd@b+3
 37776  017654  291C               	incf	i1___fladd@bexp& (0+255),w,b
 37777  017656  A4D8               	btfss	status,2,c
 37778                           
 37779                           ; BSR set to: 1
 37780  017658  2B1C               	incf	i1___fladd@bexp& (0+255),f,b
 37781  01765A                     i1l13458:
 37782                           
 37783                           ; BSR set to: 1
 37784  01765A  291C               	incf	i1___fladd@bexp& (0+255),w,b
 37785  01765C  B4D8               	btfsc	status,2,c
 37786  01765E  D003               	goto	i1u1540_20
 37787                           
 37788                           ; BSR set to: 1
 37789  017660  511C               	movf	i1___fladd@bexp& (0+255),w,b
 37790  017662  A4D8               	btfss	status,2,c
 37791  017664  D00D               	goto	i1l13466
 37792  017666                     i1u1540_20:
 37793                           
 37794                           ; BSR set to: 1
 37795  017666  0E00               	movlw	0
 37796  017668  6F0E               	movwf	i1___fladd@b& (0+255),b
 37797  01766A  0E00               	movlw	0
 37798  01766C  6F0F               	movwf	(i1___fladd@b+1)& (0+255),b
 37799  01766E  0E00               	movlw	0
 37800  017670  6F10               	movwf	(i1___fladd@b+2)& (0+255),b
 37801  017672  0E00               	movlw	0
 37802  017674  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 37803  017676  511C               	movf	i1___fladd@bexp& (0+255),w,b
 37804  017678  A4D8               	btfss	status,2,c
 37805  01767A  D002               	goto	i1l13466
 37806                           
 37807                           ; BSR set to: 1
 37808  01767C  0E00               	movlw	0
 37809  01767E  6F1A               	movwf	i1___fladd@signs& (0+255),b
 37810  017680                     i1l13466:
 37811                           
 37812                           ; BSR set to: 1
 37813  017680  A11C               	btfss	i1___fladd@bexp& (0+255),0,b
 37814  017682  D002               	goto	i1l13470
 37815                           
 37816                           ; BSR set to: 1
 37817  017684  8F10               	bsf	(i1___fladd@b+2)& (0+255),7,b
 37818  017686  D001               	goto	i1l13472
 37819  017688                     i1l13470:
 37820                           
 37821                           ; BSR set to: 1
 37822  017688  9F10               	bcf	(i1___fladd@b+2)& (0+255),7,b
 37823  01768A                     i1l13472:
 37824                           
 37825                           ; BSR set to: 1
 37826  01768A  90D8               	bcf	status,0,c
 37827  01768C  311C               	rrcf	i1___fladd@bexp& (0+255),w,b
 37828  01768E  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 37829                           
 37830                           ; BSR set to: 1
 37831  017690  BF1A               	btfsc	i1___fladd@signs& (0+255),7,b
 37832                           
 37833                           ; BSR set to: 1
 37834  017692  8F11               	bsf	(i1___fladd@b+3)& (0+255),7,b
 37835                           
 37836                           ; BSR set to: 1
 37837  017694  C10E  F10E         	movff	i1___fladd@b,?i1___fladd
 37838  017698  C10F  F10F         	movff	i1___fladd@b+1,?i1___fladd+1
 37839  01769C  C110  F110         	movff	i1___fladd@b+2,?i1___fladd+2
 37840  0176A0  C111  F111         	movff	i1___fladd@b+3,?i1___fladd+3
 37841                           
 37842                           ; BSR set to: 1
 37843  0176A4  0012               	return		;funcret
 37844  0176A6                     __end_ofi1___fladd:
 37845                           	opt callstack 0
 37846                           
 37847 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 37848 ;; Defined at:
 37849 ;;		line 101 in file "mcc_generated_files/interrupt_manager.c"
 37850 ;; Parameters:    Size  Location     Type
 37851 ;;		None
 37852 ;; Auto vars:     Size  Location     Type
 37853 ;;		None
 37854 ;; Return value:  Size  Location     Type
 37855 ;;                  1    wreg      void 
 37856 ;; Registers used:
 37857 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37858 ;; Tracked objects:
 37859 ;;		On entry : 0/0
 37860 ;;		On exit  : 0/0
 37861 ;;		Unchanged: 0/0
 37862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37865 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37866 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37867 ;;Total ram usage:       12 bytes
 37868 ;; Hardware stack levels used:    1
 37869 ;; Hardware stack levels required when called:    5
 37870 ;; This function calls:
 37871 ;;		Absolute function
 37872 ;;		_ADCC_ThresholdISR
 37873 ;;		_EUSART2_Receive_ISR
 37874 ;;		_EUSART2_Transmit_ISR
 37875 ;;		_INT1_ISR
 37876 ;;		_INT2_ISR
 37877 ;;		_PIN_MANAGER_IOC
 37878 ;;		_TMR0_ISR
 37879 ;;		_TMR1_ISR
 37880 ;; This function is called by:
 37881 ;;		Interrupt level 2
 37882 ;; This function uses a non-reentrant model
 37883 ;;
 37884                           
 37885                           	psect	intcode
 37886  000008                     __pintcode:
 37887                           	opt callstack 0
 37888  000008                     _INTERRUPT_InterruptManagerHigh:
 37889                           	opt callstack 12
 37890                           
 37891                           ; BSR set to: 1
 37892                           ;incstack = 0
 37893  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 37894  00000A  EFE3  F0D1         	goto	int_func
 37895                           
 37896                           	psect	intcode_body
 37897  01A3C6                     __pintcode_body:
 37898                           	opt callstack 12
 37899  01A3C6                     int_func:
 37900                           	opt callstack 12
 37901  01A3C6  CFFA F0AD          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 37902  01A3CA  CFFB F0AE          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 37903  01A3CE  CFE9 F0AF          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 37904  01A3D2  CFEA F0B0          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 37905  01A3D6  CFD9 F0B1          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+4
 37906  01A3DA  CFDA F0B2          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+5
 37907  01A3DE  CFF3 F0B3          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+6
 37908  01A3E2  CFF4 F0B4          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+7
 37909  01A3E6  CFF6 F0B5          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+8
 37910  01A3EA  CFF7 F0B6          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+9
 37911  01A3EE  CFF8 F0B7          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+10
 37912  01A3F2  CFF5 F0B8          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+11
 37913                           
 37914                           ;interrupt_manager.c: 104: if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 37915  01A3F6  010E               	movlb	14	; () banked
 37916  01A3F8  B1C6               	btfsc	198,0,b	;volatile
 37917                           
 37918                           ; BSR set to: 14
 37919  01A3FA  A1CE               	btfss	206,0,b	;volatile
 37920  01A3FC  D003               	goto	i2l224
 37921                           
 37922                           ; BSR set to: 14
 37923                           ;interrupt_manager.c: 105: {;interrupt_manager.c: 106: TMR1_ISR();
 37924  01A3FE  EC05  F0E0         	call	_TMR1_ISR	;wreg free
 37925                           
 37926                           ;interrupt_manager.c: 107: }
 37927  01A402  D03B               	goto	i2l235
 37928  01A404                     i2l224:
 37929                           
 37930                           ; BSR set to: 14
 37931                           ;interrupt_manager.c: 108: else if(PIE0bits.INT2IE == 1 && PIR0bits.INT2IF == 1)
 37932  01A404  B5C2               	btfsc	194,2,b	;volatile
 37933                           
 37934                           ; BSR set to: 14
 37935  01A406  A5CA               	btfss	202,2,b	;volatile
 37936  01A408  D003               	goto	i2l226
 37937                           
 37938                           ; BSR set to: 14
 37939                           ;interrupt_manager.c: 109: {;interrupt_manager.c: 110: INT2_ISR();
 37940  01A40A  EC18  F0E4         	call	_INT2_ISR	;wreg free
 37941                           
 37942                           ;interrupt_manager.c: 111: }
 37943  01A40E  D035               	goto	i2l235
 37944  01A410                     i2l226:
 37945                           
 37946                           ; BSR set to: 14
 37947                           ;interrupt_manager.c: 112: else if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 37948  01A410  BBC2               	btfsc	194,5,b	;volatile
 37949                           
 37950                           ; BSR set to: 14
 37951  01A412  ABCA               	btfss	202,5,b	;volatile
 37952  01A414  D003               	goto	i2l228
 37953                           
 37954                           ; BSR set to: 14
 37955                           ;interrupt_manager.c: 113: {;interrupt_manager.c: 114: TMR0_ISR();
 37956  01A416  EC56  F0E1         	call	_TMR0_ISR	;wreg free
 37957                           
 37958                           ;interrupt_manager.c: 115: }
 37959  01A41A  D02F               	goto	i2l235
 37960  01A41C                     i2l228:
 37961                           
 37962                           ; BSR set to: 14
 37963                           ;interrupt_manager.c: 116: else if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 37964  01A41C  BFC5               	btfsc	197,7,b	;volatile
 37965                           
 37966                           ; BSR set to: 14
 37967  01A41E  AFCD               	btfss	205,7,b	;volatile
 37968  01A420  D00B               	goto	i2l230
 37969                           
 37970                           ; BSR set to: 14
 37971                           ;interrupt_manager.c: 117: {;interrupt_manager.c: 118: EUSART2_RxDefaultInterruptHandler
      +                          ();
 37972  01A422  D801               	call	i2u2880_48
 37973  01A424  D02A               	goto	i2l235
 37974  01A426                     i2u2880_48:
 37975  01A426  0005               	push	
 37976  01A428  6EFA               	movwf	pclath,c
 37977  01A42A  0101               	movlb	1	; () banked
 37978  01A42C  517D               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 37979  01A42E  6EFD               	movwf	tosl,c
 37980  01A430  517E               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 37981  01A432  6EFE               	movwf	tosh,c
 37982  01A434  517F               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 37983  01A436  D019               	goto	L33
 37984  01A438                     i2l230:
 37985                           
 37986                           ; BSR set to: 14
 37987                           ;interrupt_manager.c: 120: else if(PIE1bits.ADTIE == 1 && PIR1bits.ADTIF == 1)
 37988  01A438  B3C3               	btfsc	195,1,b	;volatile
 37989                           
 37990                           ; BSR set to: 14
 37991  01A43A  A3CB               	btfss	203,1,b	;volatile
 37992  01A43C  D003               	goto	i2l232
 37993                           
 37994                           ; BSR set to: 14
 37995                           ;interrupt_manager.c: 121: {;interrupt_manager.c: 122: ADCC_ThresholdISR();
 37996  01A43E  EC6A  F0E1         	call	_ADCC_ThresholdISR	;wreg free
 37997                           
 37998                           ;interrupt_manager.c: 123: }
 37999  01A442  D01B               	goto	i2l235
 38000  01A444                     i2l232:
 38001                           
 38002                           ; BSR set to: 14
 38003                           ;interrupt_manager.c: 124: else if(PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1)
 38004  01A444  B9C2               	btfsc	194,4,b	;volatile
 38005                           
 38006                           ; BSR set to: 14
 38007  01A446  A9CA               	btfss	202,4,b	;volatile
 38008  01A448  D003               	goto	i2l234
 38009                           
 38010                           ; BSR set to: 14
 38011                           ;interrupt_manager.c: 125: {;interrupt_manager.c: 126: PIN_MANAGER_IOC();
 38012  01A44A  EC25  F0E3         	call	_PIN_MANAGER_IOC	;wreg free
 38013                           
 38014                           ;interrupt_manager.c: 127: }
 38015  01A44E  D015               	goto	i2l235
 38016  01A450                     i2l234:
 38017                           
 38018                           ; BSR set to: 14
 38019                           ;interrupt_manager.c: 128: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 38020  01A450  BDC5               	btfsc	197,6,b	;volatile
 38021                           
 38022                           ; BSR set to: 14
 38023  01A452  ADCD               	btfss	205,6,b	;volatile
 38024  01A454  D00D               	goto	i2l236
 38025                           
 38026                           ; BSR set to: 14
 38027                           ;interrupt_manager.c: 129: {;interrupt_manager.c: 130: EUSART2_TxDefaultInterruptHandler
      +                          ();
 38028  01A456  D801               	call	i2u2887_48
 38029  01A458  D010               	goto	i2l235
 38030  01A45A                     i2u2887_48:
 38031  01A45A  0005               	push	
 38032  01A45C  6EFA               	movwf	pclath,c
 38033  01A45E  0101               	movlb	1	; () banked
 38034  01A460  5180               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 38035  01A462  6EFD               	movwf	tosl,c
 38036  01A464  5181               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 38037  01A466  6EFE               	movwf	tosh,c
 38038  01A468  5182               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 38039  01A46A                     L33:
 38040  01A46A  6EFF               	movwf	tosu,c
 38041  01A46C  50FA               	movf	pclath,w,c
 38042  01A46E  0012               	return		;indir
 38043  01A470                     i2l236:
 38044                           
 38045                           ; BSR set to: 14
 38046                           ;interrupt_manager.c: 132: else if(PIE0bits.INT1IE == 1 && PIR0bits.INT1IF == 1)
 38047  01A470  B3C2               	btfsc	194,1,b	;volatile
 38048                           
 38049                           ; BSR set to: 14
 38050  01A472  A3CA               	btfss	202,1,b	;volatile
 38051  01A474  D002               	goto	i2l235
 38052                           
 38053                           ; BSR set to: 14
 38054                           ;interrupt_manager.c: 133: {;interrupt_manager.c: 134: INT1_ISR();
 38055  01A476  EC1D  F0E4         	call	_INT1_ISR	;wreg free
 38056  01A47A                     i2l235:
 38057                           
 38058                           ; BSR set to: 14
 38059  01A47A  C0B8  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+11,tablat
 38060  01A47E  C0B7  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptru
 38061  01A482  C0B6  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+9,tblptrh
 38062  01A486  C0B5  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+8,tblptrl
 38063  01A48A  C0B4  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+7,prodh
 38064  01A48E  C0B3  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+6,prodl
 38065  01A492  C0B2  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr2h
 38066  01A496  C0B1  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr2l
 38067  01A49A  C0B0  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 38068  01A49E  C0AF  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 38069  01A4A2  C0AE  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 38070  01A4A6  C0AD  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 38071  01A4AA  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 38072  01A4AC  0011               	retfie		f
 38073  01A4AE                     __end_of_INTERRUPT_InterruptManagerHigh:
 38074                           	opt callstack 0
 38075                           
 38076 ;; *************** function _TMR1_ISR *****************
 38077 ;; Defined at:
 38078 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 38079 ;; Parameters:    Size  Location     Type
 38080 ;;		None
 38081 ;; Auto vars:     Size  Location     Type
 38082 ;;		None
 38083 ;; Return value:  Size  Location     Type
 38084 ;;                  1    wreg      void 
 38085 ;; Registers used:
 38086 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 38087 ;; Tracked objects:
 38088 ;;		On entry : 0/0
 38089 ;;		On exit  : 0/0
 38090 ;;		Unchanged: 0/0
 38091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38096 ;;Total ram usage:        0 bytes
 38097 ;; Hardware stack levels used:    1
 38098 ;; Hardware stack levels required when called:    3
 38099 ;; This function calls:
 38100 ;;		Absolute function
 38101 ;;		_QIErrorTimerHandler
 38102 ;;		_TMR1_DefaultInterruptHandler
 38103 ;;		i2_TMR1_WriteTimer
 38104 ;; This function is called by:
 38105 ;;		_INTERRUPT_InterruptManagerHigh
 38106 ;; This function uses a non-reentrant model
 38107 ;;
 38108                           
 38109                           	psect	text149
 38110  01C00A                     __ptext149:
 38111                           	opt callstack 0
 38112  01C00A                     _TMR1_ISR:
 38113                           	opt callstack 13
 38114                           
 38115                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 38116                           
 38117                           ;incstack = 0
 38118  01C00A  010E               	movlb	14	; () banked
 38119  01C00C  91CE               	bcf	206,0,b	;volatile
 38120                           
 38121                           ; BSR set to: 14
 38122                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 38123  01C00E  C189  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
 38124  01C012  C18A  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
 38125  01C016  EC93  F0E2         	call	i2_TMR1_WriteTimer	;wreg free
 38126                           
 38127                           ;tmr1.c: 171: if(TMR1_InterruptHandler)
 38128  01C01A  0101               	movlb	1	; () banked
 38129  01C01C  516E               	movf	_TMR1_InterruptHandler& (0+255),w,b
 38130  01C01E  116F               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 38131  01C020  1170               	iorwf	(_TMR1_InterruptHandler+2)& (0+255),w,b
 38132  01C022  B4D8               	btfsc	status,2,c
 38133  01C024  0012               	return	
 38134                           
 38135                           ; BSR set to: 1
 38136                           ;tmr1.c: 172: {;tmr1.c: 173: TMR1_InterruptHandler();
 38137  01C026  D801               	call	i2u1871_48
 38138  01C028  0012               	return	
 38139  01C02A                     i2u1871_48:
 38140  01C02A  0005               	push	
 38141  01C02C  6EFA               	movwf	pclath,c
 38142  01C02E  516E               	movf	_TMR1_InterruptHandler& (0+255),w,b
 38143  01C030  6EFD               	movwf	tosl,c
 38144  01C032  516F               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 38145  01C034  6EFE               	movwf	tosh,c
 38146  01C036  5170               	movf	(_TMR1_InterruptHandler+2)& (0+255),w,b
 38147  01C038  6EFF               	movwf	tosu,c
 38148  01C03A  50FA               	movf	pclath,w,c
 38149  01C03C  0012               	return		;indir
 38150  01C03E                     __end_of_TMR1_ISR:
 38151                           	opt callstack 0
 38152                           
 38153 ;; *************** function _QIErrorTimerHandler *****************
 38154 ;; Defined at:
 38155 ;;		line 118 in file "NXQ_charge_state.c"
 38156 ;; Parameters:    Size  Location     Type
 38157 ;;		None
 38158 ;; Auto vars:     Size  Location     Type
 38159 ;;		None
 38160 ;; Return value:  Size  Location     Type
 38161 ;;                  1    wreg      void 
 38162 ;; Registers used:
 38163 ;;		wreg, status,2, cstack
 38164 ;; Tracked objects:
 38165 ;;		On entry : 0/0
 38166 ;;		On exit  : 0/0
 38167 ;;		Unchanged: 0/0
 38168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38173 ;;Total ram usage:        0 bytes
 38174 ;; Hardware stack levels used:    1
 38175 ;; Hardware stack levels required when called:    2
 38176 ;; This function calls:
 38177 ;;		i2_TMR1_Reload
 38178 ;;		i2_TMR1_StopTimer
 38179 ;; This function is called by:
 38180 ;;		_main
 38181 ;;		_TMR1_ISR
 38182 ;; This function uses a non-reentrant model
 38183 ;;
 38184                           
 38185                           	psect	text150
 38186  01C5F4                     __ptext150:
 38187                           	opt callstack 0
 38188  01C5F4                     _QIErrorTimerHandler:
 38189                           	opt callstack 13
 38190                           
 38191                           ;NXQ_charge_state.c: 120: if (PORTBbits.RB2 == 1 && PORTBbits.RB3 == 0) {
 38192                           
 38193                           ;incstack = 0
 38194  01C5F4  B48E               	btfsc	3982,2,c	;volatile
 38195  01C5F6  B68E               	btfsc	3982,3,c	;volatile
 38196  01C5F8  D003               	goto	i2l15250
 38197                           
 38198                           ;NXQ_charge_state.c: 122: nxq_charge_state = QI_Error;
 38199  01C5FA  0E03               	movlw	3
 38200  01C5FC  0101               	movlb	1	; () banked
 38201  01C5FE  6F95               	movwf	_nxq_charge_state& (0+255),b
 38202  01C600                     i2l15250:
 38203                           
 38204                           ;NXQ_charge_state.c: 124: };NXQ_charge_state.c: 126: TMR1_StopTimer();
 38205  01C600  EC41  F0E4         	call	i2_TMR1_StopTimer	;wreg free
 38206                           
 38207                           ;NXQ_charge_state.c: 127: TMR1_Reload();
 38208  01C604  ECE8  F0E3         	call	i2_TMR1_Reload	;wreg free
 38209  01C608  0012               	return		;funcret
 38210  01C60A                     __end_of_QIErrorTimerHandler:
 38211                           	opt callstack 0
 38212                           
 38213 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 38214 ;; Defined at:
 38215 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 38216 ;; Parameters:    Size  Location     Type
 38217 ;;		None
 38218 ;; Auto vars:     Size  Location     Type
 38219 ;;		None
 38220 ;; Return value:  Size  Location     Type
 38221 ;;                  1    wreg      void 
 38222 ;; Registers used:
 38223 ;;		None
 38224 ;; Tracked objects:
 38225 ;;		On entry : 0/0
 38226 ;;		On exit  : 0/0
 38227 ;;		Unchanged: 0/0
 38228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38233 ;;Total ram usage:        0 bytes
 38234 ;; Hardware stack levels used:    1
 38235 ;; This function calls:
 38236 ;;		Nothing
 38237 ;; This function is called by:
 38238 ;;		_TMR1_Initialize
 38239 ;;		_TMR1_ISR
 38240 ;; This function uses a non-reentrant model
 38241 ;;
 38242                           
 38243                           	psect	text151
 38244  01C8A0                     __ptext151:
 38245                           	opt callstack 0
 38246  01C8A0                     _TMR1_DefaultInterruptHandler:
 38247                           	opt callstack 15
 38248                           
 38249                           ;incstack = 0
 38250  01C8A0  0012               	return		;funcret
 38251  01C8A2                     __end_of_TMR1_DefaultInterruptHandler:
 38252                           	opt callstack 0
 38253                           
 38254 ;; *************** function i2_TMR1_StopTimer *****************
 38255 ;; Defined at:
 38256 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 38257 ;; Parameters:    Size  Location     Type
 38258 ;;		None
 38259 ;; Auto vars:     Size  Location     Type
 38260 ;;		None
 38261 ;; Return value:  Size  Location     Type
 38262 ;;                  1    wreg      void 
 38263 ;; Registers used:
 38264 ;;		None
 38265 ;; Tracked objects:
 38266 ;;		On entry : 0/0
 38267 ;;		On exit  : 0/0
 38268 ;;		Unchanged: 0/0
 38269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38274 ;;Total ram usage:        0 bytes
 38275 ;; Hardware stack levels used:    1
 38276 ;; This function calls:
 38277 ;;		Nothing
 38278 ;; This function is called by:
 38279 ;;		_QIErrorTimerHandler
 38280 ;; This function uses a non-reentrant model
 38281 ;;
 38282                           
 38283                           	psect	text152
 38284  01C882                     __ptext152:
 38285                           	opt callstack 0
 38286  01C882                     i2_TMR1_StopTimer:
 38287                           	opt callstack 14
 38288                           
 38289                           ;tmr1.c: 108: T1CONbits.TMR1ON = 0;
 38290                           
 38291                           ;incstack = 0
 38292  01C882  90CF               	bcf	4047,0,c	;volatile
 38293  01C884  0012               	return		;funcret
 38294  01C886                     __end_ofi2_TMR1_StopTimer:
 38295                           	opt callstack 0
 38296                           
 38297 ;; *************** function _TMR0_ISR *****************
 38298 ;; Defined at:
 38299 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 38300 ;; Parameters:    Size  Location     Type
 38301 ;;		None
 38302 ;; Auto vars:     Size  Location     Type
 38303 ;;		None
 38304 ;; Return value:  Size  Location     Type
 38305 ;;                  1    wreg      void 
 38306 ;; Registers used:
 38307 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 38308 ;; Tracked objects:
 38309 ;;		On entry : 0/0
 38310 ;;		On exit  : 0/0
 38311 ;;		Unchanged: 0/0
 38312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38317 ;;Total ram usage:        0 bytes
 38318 ;; Hardware stack levels used:    1
 38319 ;; Hardware stack levels required when called:    2
 38320 ;; This function calls:
 38321 ;;		Absolute function
 38322 ;;		_TMR0_DefaultInterruptHandler
 38323 ;;		_heartbeatTimerHandler
 38324 ;; This function is called by:
 38325 ;;		_INTERRUPT_InterruptManagerHigh
 38326 ;; This function uses a non-reentrant model
 38327 ;;
 38328                           
 38329                           	psect	text153
 38330  01C2AC                     __ptext153:
 38331                           	opt callstack 0
 38332  01C2AC                     _TMR0_ISR:
 38333                           	opt callstack 14
 38334                           
 38335                           ;tmr0.c: 124: PIR0bits.TMR0IF = 0;
 38336                           
 38337                           ;incstack = 0
 38338  01C2AC  010E               	movlb	14	; () banked
 38339  01C2AE  9BCA               	bcf	202,5,b	;volatile
 38340                           
 38341                           ; BSR set to: 14
 38342                           ;tmr0.c: 125: if(TMR0_InterruptHandler)
 38343  01C2B0  0100               	movlb	0	; () banked
 38344  01C2B2  51C9               	movf	_TMR0_InterruptHandler& (0+255),w,b
 38345  01C2B4  11CA               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 38346  01C2B6  11CB               	iorwf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 38347  01C2B8  B4D8               	btfsc	status,2,c
 38348  01C2BA  0012               	return	
 38349                           
 38350                           ; BSR set to: 0
 38351                           ;tmr0.c: 126: {;tmr0.c: 127: TMR0_InterruptHandler();
 38352  01C2BC  D801               	call	i2u2751_48
 38353  01C2BE  0012               	return	
 38354  01C2C0                     i2u2751_48:
 38355  01C2C0  0005               	push	
 38356  01C2C2  6EFA               	movwf	pclath,c
 38357  01C2C4  51C9               	movf	_TMR0_InterruptHandler& (0+255),w,b
 38358  01C2C6  6EFD               	movwf	tosl,c
 38359  01C2C8  51CA               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 38360  01C2CA  6EFE               	movwf	tosh,c
 38361  01C2CC  51CB               	movf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 38362  01C2CE  6EFF               	movwf	tosu,c
 38363  01C2D0  50FA               	movf	pclath,w,c
 38364  01C2D2  0012               	return		;indir
 38365  01C2D4                     __end_of_TMR0_ISR:
 38366                           	opt callstack 0
 38367                           
 38368 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 38369 ;; Defined at:
 38370 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 38371 ;; Parameters:    Size  Location     Type
 38372 ;;		None
 38373 ;; Auto vars:     Size  Location     Type
 38374 ;;		None
 38375 ;; Return value:  Size  Location     Type
 38376 ;;                  1    wreg      void 
 38377 ;; Registers used:
 38378 ;;		None
 38379 ;; Tracked objects:
 38380 ;;		On entry : 0/0
 38381 ;;		On exit  : 0/0
 38382 ;;		Unchanged: 0/0
 38383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38388 ;;Total ram usage:        0 bytes
 38389 ;; Hardware stack levels used:    1
 38390 ;; This function calls:
 38391 ;;		Nothing
 38392 ;; This function is called by:
 38393 ;;		_TMR0_Initialize
 38394 ;;		_TMR0_ISR
 38395 ;; This function uses a non-reentrant model
 38396 ;;
 38397                           
 38398                           	psect	text154
 38399  01C8A2                     __ptext154:
 38400                           	opt callstack 0
 38401  01C8A2                     _TMR0_DefaultInterruptHandler:
 38402                           	opt callstack 15
 38403                           
 38404                           ;incstack = 0
 38405  01C8A2  0012               	return		;funcret
 38406  01C8A4                     __end_of_TMR0_DefaultInterruptHandler:
 38407                           	opt callstack 0
 38408                           
 38409 ;; *************** function _heartbeatTimerHandler *****************
 38410 ;; Defined at:
 38411 ;;		line 23 in file "heartbeat_timer.c"
 38412 ;; Parameters:    Size  Location     Type
 38413 ;;		None
 38414 ;; Auto vars:     Size  Location     Type
 38415 ;;		None
 38416 ;; Return value:  Size  Location     Type
 38417 ;;                  1    wreg      void 
 38418 ;; Registers used:
 38419 ;;		wreg, status,2, status,0, cstack
 38420 ;; Tracked objects:
 38421 ;;		On entry : 0/0
 38422 ;;		On exit  : 0/0
 38423 ;;		Unchanged: 0/0
 38424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38427 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38428 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38429 ;;Total ram usage:        1 bytes
 38430 ;; Hardware stack levels used:    1
 38431 ;; Hardware stack levels required when called:    1
 38432 ;; This function calls:
 38433 ;;		i2___fladd
 38434 ;;		i2___llmod
 38435 ;; This function is called by:
 38436 ;;		_main
 38437 ;;		_TMR0_ISR
 38438 ;; This function uses a non-reentrant model
 38439 ;;
 38440                           
 38441                           	psect	text155
 38442  01965E                     __ptext155:
 38443                           	opt callstack 0
 38444  01965E                     _heartbeatTimerHandler:
 38445                           	opt callstack 14
 38446                           
 38447                           ;heartbeat_timer.c: 26: LATBbits.LATB6 = ~(LATBbits.LATB6);
 38448                           
 38449                           ;incstack = 0
 38450  01965E  AC84               	btfss	3972,6,c	;volatile
 38451  019660  D002               	goto	i2u2714_40
 38452  019662  0E01               	movlw	1
 38453  019664  D001               	goto	i2u2714_46
 38454  019666                     i2u2714_40:
 38455  019666  0E00               	movlw	0
 38456  019668                     i2u2714_46:
 38457  019668  0AFF               	xorlw	255
 38458  01966A  6E5E               	movwf	??_heartbeatTimerHandler& (0+255),c
 38459  01966C  3A5E               	swapf	??_heartbeatTimerHandler,f,c
 38460  01966E  465E               	rlncf	??_heartbeatTimerHandler,f,c
 38461  019670  465E               	rlncf	??_heartbeatTimerHandler,f,c
 38462  019672  5084               	movf	3972,w,c	;volatile
 38463  019674  185E               	xorwf	??_heartbeatTimerHandler,w,c
 38464  019676  0BBF               	andlw	-65
 38465  019678  185E               	xorwf	??_heartbeatTimerHandler,w,c
 38466  01967A  6E84               	movwf	3972,c	;volatile
 38467                           
 38468                           ;heartbeat_timer.c: 29: device_on_time++;
 38469  01967C  0E01               	movlw	1
 38470  01967E  0100               	movlb	0	; () banked
 38471  019680  27C5               	addwf	_device_on_time& (0+255),f,b
 38472  019682  0E00               	movlw	0
 38473  019684  23C6               	addwfc	(_device_on_time+1)& (0+255),f,b
 38474  019686  23C7               	addwfc	(_device_on_time+2)& (0+255),f,b
 38475  019688  23C8               	addwfc	(_device_on_time+3)& (0+255),f,b
 38476                           
 38477                           ;heartbeat_timer.c: 32: if (nxq_charge_state == QI_Charging || nxq_charge_state == QI_Fu
      +                          lly_Charged) QI_charge_time++;
 38478  01968A  0101               	movlb	1	; () banked
 38479  01968C  0595               	decf	_nxq_charge_state& (0+255),w,b
 38480  01968E  B4D8               	btfsc	status,2,c
 38481  019690  D004               	goto	i2u2716_40
 38482                           
 38483                           ; BSR set to: 1
 38484  019692  0E02               	movlw	2
 38485  019694  1995               	xorwf	_nxq_charge_state& (0+255),w,b
 38486  019696  A4D8               	btfss	status,2,c
 38487  019698  D008               	goto	i2l21146
 38488  01969A                     i2u2716_40:
 38489                           
 38490                           ; BSR set to: 1
 38491  01969A  0E01               	movlw	1
 38492  01969C  0102               	movlb	2	; () banked
 38493  01969E  27D2               	addwf	_QI_charge_time& (0+255),f,b
 38494  0196A0  0E00               	movlw	0
 38495  0196A2  23D3               	addwfc	(_QI_charge_time+1)& (0+255),f,b
 38496  0196A4  23D4               	addwfc	(_QI_charge_time+2)& (0+255),f,b
 38497  0196A6  23D5               	addwfc	(_QI_charge_time+3)& (0+255),f,b
 38498  0196A8  D009               	goto	i2l21148
 38499  0196AA                     i2l21146:
 38500                           
 38501                           ; BSR set to: 1
 38502                           ;heartbeat_timer.c: 33: else QI_charge_time = 0;
 38503  0196AA  0E00               	movlw	0
 38504  0196AC  0102               	movlb	2	; () banked
 38505  0196AE  6FD2               	movwf	_QI_charge_time& (0+255),b
 38506  0196B0  0E00               	movlw	0
 38507  0196B2  6FD3               	movwf	(_QI_charge_time+1)& (0+255),b
 38508  0196B4  0E00               	movlw	0
 38509  0196B6  6FD4               	movwf	(_QI_charge_time+2)& (0+255),b
 38510  0196B8  0E00               	movlw	0
 38511  0196BA  6FD5               	movwf	(_QI_charge_time+3)& (0+255),b
 38512  0196BC                     i2l21148:
 38513                           
 38514                           ; BSR set to: 2
 38515                           ;heartbeat_timer.c: 36: if (nxq_charge_state == QI_Charging || nxq_charge_state == QI_Fu
      +                          lly_Charged) adc_calculations.output_charge += adc_results.qi_isns_adc_result;
 38516  0196BC  0101               	movlb	1	; () banked
 38517  0196BE  0595               	decf	_nxq_charge_state& (0+255),w,b
 38518  0196C0  B4D8               	btfsc	status,2,c
 38519  0196C2  D004               	goto	i2u2718_40
 38520                           
 38521                           ; BSR set to: 1
 38522  0196C4  0E02               	movlw	2
 38523  0196C6  1995               	xorwf	_nxq_charge_state& (0+255),w,b
 38524  0196C8  A4D8               	btfss	status,2,c
 38525  0196CA  D01B               	goto	i2l21154
 38526  0196CC                     i2u2718_40:
 38527                           
 38528                           ; BSR set to: 1
 38529  0196CC  C2CA  F052         	movff	_adc_calculations+12,i2___fladd@b
 38530  0196D0  C2CB  F053         	movff	_adc_calculations+13,i2___fladd@b+1
 38531  0196D4  C2CC  F054         	movff	_adc_calculations+14,i2___fladd@b+2
 38532  0196D8  C2CD  F055         	movff	_adc_calculations+15,i2___fladd@b+3
 38533  0196DC  C0F1  F056         	movff	_adc_results+20,i2___fladd@a
 38534  0196E0  C0F2  F057         	movff	_adc_results+21,i2___fladd@a+1
 38535  0196E4  C0F3  F058         	movff	_adc_results+22,i2___fladd@a+2
 38536  0196E8  C0F4  F059         	movff	_adc_results+23,i2___fladd@a+3
 38537  0196EC  EC53  F0BB         	call	i2___fladd	;wreg free
 38538  0196F0  C052  F2CA         	movff	?i2___fladd,_adc_calculations+12
 38539  0196F4  C053  F2CB         	movff	?i2___fladd+1,_adc_calculations+13
 38540  0196F8  C054  F2CC         	movff	?i2___fladd+2,_adc_calculations+14
 38541  0196FC  C055  F2CD         	movff	?i2___fladd+3,_adc_calculations+15
 38542  019700  D009               	goto	i2l21156
 38543  019702                     i2l21154:
 38544                           
 38545                           ; BSR set to: 1
 38546                           ;heartbeat_timer.c: 37: else adc_calculations.output_charge = 0.0;
 38547  019702  0E00               	movlw	0
 38548  019704  0102               	movlb	2	; () banked
 38549  019706  6FCA               	movwf	(_adc_calculations+12)& (0+255),b
 38550  019708  0E00               	movlw	0
 38551  01970A  6FCB               	movwf	(_adc_calculations+13)& (0+255),b
 38552  01970C  0E00               	movlw	0
 38553  01970E  6FCC               	movwf	(_adc_calculations+14)& (0+255),b
 38554  019710  0E00               	movlw	0
 38555  019712  6FCD               	movwf	(_adc_calculations+15)& (0+255),b
 38556  019714                     i2l21156:
 38557                           
 38558                           ;heartbeat_timer.c: 40: if (nxq_charge_state == QI_Charging || nxq_charge_state == QI_Fu
      +                          lly_Charged) adc_calculations.output_energy += adc_calculations.output_power;
 38559  019714  0101               	movlb	1	; () banked
 38560  019716  0595               	decf	_nxq_charge_state& (0+255),w,b
 38561  019718  B4D8               	btfsc	status,2,c
 38562  01971A  D004               	goto	i2u2720_40
 38563                           
 38564                           ; BSR set to: 1
 38565  01971C  0E02               	movlw	2
 38566  01971E  1995               	xorwf	_nxq_charge_state& (0+255),w,b
 38567  019720  A4D8               	btfss	status,2,c
 38568  019722  D01B               	goto	i2l21162
 38569  019724                     i2u2720_40:
 38570                           
 38571                           ; BSR set to: 1
 38572  019724  C2CE  F052         	movff	_adc_calculations+16,i2___fladd@b
 38573  019728  C2CF  F053         	movff	_adc_calculations+17,i2___fladd@b+1
 38574  01972C  C2D0  F054         	movff	_adc_calculations+18,i2___fladd@b+2
 38575  019730  C2D1  F055         	movff	_adc_calculations+19,i2___fladd@b+3
 38576  019734  C2C2  F056         	movff	_adc_calculations+4,i2___fladd@a
 38577  019738  C2C3  F057         	movff	_adc_calculations+5,i2___fladd@a+1
 38578  01973C  C2C4  F058         	movff	_adc_calculations+6,i2___fladd@a+2
 38579  019740  C2C5  F059         	movff	_adc_calculations+7,i2___fladd@a+3
 38580  019744  EC53  F0BB         	call	i2___fladd	;wreg free
 38581  019748  C052  F2CE         	movff	?i2___fladd,_adc_calculations+16
 38582  01974C  C053  F2CF         	movff	?i2___fladd+1,_adc_calculations+17
 38583  019750  C054  F2D0         	movff	?i2___fladd+2,_adc_calculations+18
 38584  019754  C055  F2D1         	movff	?i2___fladd+3,_adc_calculations+19
 38585  019758  D009               	goto	i2l1808
 38586  01975A                     i2l21162:
 38587                           
 38588                           ; BSR set to: 1
 38589                           ;heartbeat_timer.c: 41: else adc_calculations.output_energy = 0.0;
 38590  01975A  0E00               	movlw	0
 38591  01975C  0102               	movlb	2	; () banked
 38592  01975E  6FCE               	movwf	(_adc_calculations+16)& (0+255),b
 38593  019760  0E00               	movlw	0
 38594  019762  6FCF               	movwf	(_adc_calculations+17)& (0+255),b
 38595  019764  0E00               	movlw	0
 38596  019766  6FD0               	movwf	(_adc_calculations+18)& (0+255),b
 38597  019768  0E00               	movlw	0
 38598  01976A  6FD1               	movwf	(_adc_calculations+19)& (0+255),b
 38599  01976C                     i2l1808:
 38600  01976C  0004               	clrwdt		;# 
 38601                           
 38602                           ;heartbeat_timer.c: 47: LM73_start_flag = 1;
 38603  01976E  0E01               	movlw	1
 38604  019770  0102               	movlb	2	; () banked
 38605  019772  6FD8               	movwf	_LM73_start_flag& (0+255),b
 38606                           
 38607                           ; BSR set to: 2
 38608                           ;heartbeat_timer.c: 50: if (device_on_time % OLED_update_time == 0) OLED_update_flag = 1
      +                          ;
 38609  019774  C0C5  F00E         	movff	_device_on_time,i2___llmod@dividend
 38610  019778  C0C6  F00F         	movff	_device_on_time+1,i2___llmod@dividend+1
 38611  01977C  C0C7  F010         	movff	_device_on_time+2,i2___llmod@dividend+2
 38612  019780  C0C8  F011         	movff	_device_on_time+3,i2___llmod@dividend+3
 38613  019784  0100               	movlb	0	; () banked
 38614  019786  51FB               	movf	_OLED_update_time& (0+255),w,b
 38615  019788  6E12               	movwf	i2___llmod@divisor,c
 38616  01978A  6A13               	clrf	i2___llmod@divisor+1,c
 38617  01978C  6A14               	clrf	i2___llmod@divisor+2,c
 38618  01978E  6A15               	clrf	i2___llmod@divisor+3,c
 38619  019790  EC06  F0DA         	call	i2___llmod	;wreg free
 38620  019794  500E               	movf	?i2___llmod,w,c
 38621  019796  100F               	iorwf	?i2___llmod+1,w,c
 38622  019798  1010               	iorwf	?i2___llmod+2,w,c
 38623  01979A  1011               	iorwf	?i2___llmod+3,w,c
 38624  01979C  A4D8               	btfss	status,2,c
 38625  01979E  D003               	goto	i2l1809
 38626  0197A0  0E01               	movlw	1
 38627  0197A2  0102               	movlb	2	; () banked
 38628  0197A4  6FD6               	movwf	_OLED_update_flag& (0+255),b
 38629  0197A6                     i2l1809:
 38630                           
 38631                           ;heartbeat_timer.c: 53: freq_meas_start_flag = 1;
 38632  0197A6  0E01               	movlw	1
 38633  0197A8  0102               	movlb	2	; () banked
 38634  0197AA  6FDA               	movwf	_freq_meas_start_flag& (0+255),b
 38635                           
 38636                           ;heartbeat_timer.c: 56: if (live_measurement_enable_flag && device_on_time % 2 == 0) liv
      +                          e_measurement_request_flag = 1;
 38637  0197AC  0100               	movlb	0	; () banked
 38638  0197AE  51D7               	movf	_live_measurement_enable_flag& (0+255),w,b
 38639  0197B0  B4D8               	btfsc	status,2,c
 38640  0197B2  0012               	return	
 38641                           
 38642                           ; BSR set to: 0
 38643  0197B4  B1C5               	btfsc	_device_on_time& (0+255),0,b
 38644  0197B6  0012               	return	
 38645                           
 38646                           ; BSR set to: 0
 38647  0197B8  0E01               	movlw	1
 38648  0197BA  0102               	movlb	2	; () banked
 38649  0197BC  6FD9               	movwf	_live_measurement_request_flag& (0+255),b
 38650  0197BE  0012               	return		;funcret
 38651  0197C0                     __end_of_heartbeatTimerHandler:
 38652                           	opt callstack 0
 38653                           
 38654 ;; *************** function _PIN_MANAGER_IOC *****************
 38655 ;; Defined at:
 38656 ;;		line 143 in file "mcc_generated_files/pin_manager.c"
 38657 ;; Parameters:    Size  Location     Type
 38658 ;;		None
 38659 ;; Auto vars:     Size  Location     Type
 38660 ;;		None
 38661 ;; Return value:  Size  Location     Type
 38662 ;;                  1    wreg      void 
 38663 ;; Registers used:
 38664 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 38665 ;; Tracked objects:
 38666 ;;		On entry : 0/0
 38667 ;;		On exit  : 0/0
 38668 ;;		Unchanged: 0/0
 38669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38674 ;;Total ram usage:        0 bytes
 38675 ;; Hardware stack levels used:    1
 38676 ;; Hardware stack levels required when called:    4
 38677 ;; This function calls:
 38678 ;;		_IOCBF2_ISR
 38679 ;;		_IOCBF3_ISR
 38680 ;; This function is called by:
 38681 ;;		_INTERRUPT_InterruptManagerHigh
 38682 ;; This function uses a non-reentrant model
 38683 ;;
 38684                           
 38685                           	psect	text156
 38686  01C64A                     __ptext156:
 38687                           	opt callstack 0
 38688  01C64A                     _PIN_MANAGER_IOC:
 38689                           	opt callstack 12
 38690                           
 38691                           ;pin_manager.c: 146: if(IOCBFbits.IOCBF2 == 1)
 38692                           
 38693                           ;incstack = 0
 38694  01C64A  010F               	movlb	15	; () banked
 38695  01C64C  B512               	btfsc	18,2,b	;volatile
 38696                           
 38697                           ; BSR set to: 15
 38698                           ;pin_manager.c: 147: {;pin_manager.c: 148: IOCBF2_ISR();
 38699  01C64E  EC05  F0E1         	call	_IOCBF2_ISR	;wreg free
 38700                           
 38701                           ;pin_manager.c: 149: };pin_manager.c: 151: if(IOCBFbits.IOCBF3 == 1)
 38702  01C652  010F               	movlb	15	; () banked
 38703  01C654  A712               	btfss	18,3,b	;volatile
 38704  01C656  0012               	return	
 38705                           
 38706                           ; BSR set to: 15
 38707                           ;pin_manager.c: 152: {;pin_manager.c: 153: IOCBF3_ISR();
 38708  01C658  ECF0  F0E0         	call	_IOCBF3_ISR	;wreg free
 38709  01C65C  0012               	return		;funcret
 38710  01C65E                     __end_of_PIN_MANAGER_IOC:
 38711                           	opt callstack 0
 38712                           
 38713 ;; *************** function _IOCBF3_ISR *****************
 38714 ;; Defined at:
 38715 ;;		line 190 in file "mcc_generated_files/pin_manager.c"
 38716 ;; Parameters:    Size  Location     Type
 38717 ;;		None
 38718 ;; Auto vars:     Size  Location     Type
 38719 ;;		None
 38720 ;; Return value:  Size  Location     Type
 38721 ;;                  1    wreg      void 
 38722 ;; Registers used:
 38723 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 38724 ;; Tracked objects:
 38725 ;;		On entry : 0/0
 38726 ;;		On exit  : 0/0
 38727 ;;		Unchanged: 0/0
 38728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38733 ;;Total ram usage:        0 bytes
 38734 ;; Hardware stack levels used:    1
 38735 ;; Hardware stack levels required when called:    3
 38736 ;; This function calls:
 38737 ;;		Absolute function
 38738 ;;		_IOCBF3_DefaultInterruptHandler
 38739 ;;		_QIChargeIOCHandler
 38740 ;; This function is called by:
 38741 ;;		_PIN_MANAGER_IOC
 38742 ;; This function uses a non-reentrant model
 38743 ;;
 38744                           
 38745                           	psect	text157
 38746  01C1E0                     __ptext157:
 38747                           	opt callstack 0
 38748  01C1E0                     _IOCBF3_ISR:
 38749                           	opt callstack 12
 38750                           
 38751                           ;pin_manager.c: 195: if(IOCBF3_InterruptHandler)
 38752                           
 38753                           ;incstack = 0
 38754  01C1E0  0101               	movlb	1	; () banked
 38755  01C1E2  5177               	movf	_IOCBF3_InterruptHandler& (0+255),w,b
 38756  01C1E4  1178               	iorwf	(_IOCBF3_InterruptHandler+1)& (0+255),w,b
 38757  01C1E6  1179               	iorwf	(_IOCBF3_InterruptHandler+2)& (0+255),w,b
 38758  01C1E8  B4D8               	btfsc	status,2,c
 38759  01C1EA  D00C               	goto	i2u1805_49
 38760                           
 38761                           ; BSR set to: 1
 38762                           ;pin_manager.c: 196: {;pin_manager.c: 197: IOCBF3_InterruptHandler();
 38763  01C1EC  D801               	call	i2u1805_48
 38764  01C1EE  D00A               	goto	i2u1805_49
 38765  01C1F0                     i2u1805_48:
 38766  01C1F0  0005               	push	
 38767  01C1F2  6EFA               	movwf	pclath,c
 38768  01C1F4  5177               	movf	_IOCBF3_InterruptHandler& (0+255),w,b
 38769  01C1F6  6EFD               	movwf	tosl,c
 38770  01C1F8  5178               	movf	(_IOCBF3_InterruptHandler+1)& (0+255),w,b
 38771  01C1FA  6EFE               	movwf	tosh,c
 38772  01C1FC  5179               	movf	(_IOCBF3_InterruptHandler+2)& (0+255),w,b
 38773  01C1FE  6EFF               	movwf	tosu,c
 38774  01C200  50FA               	movf	pclath,w,c
 38775  01C202  0012               	return		;indir
 38776  01C204                     i2u1805_49:
 38777                           
 38778                           ;pin_manager.c: 198: };pin_manager.c: 199: IOCBFbits.IOCBF3 = 0;
 38779  01C204  010F               	movlb	15	; () banked
 38780  01C206  9712               	bcf	18,3,b	;volatile
 38781                           
 38782                           ; BSR set to: 15
 38783  01C208  0012               	return		;funcret
 38784  01C20A                     __end_of_IOCBF3_ISR:
 38785                           	opt callstack 0
 38786                           
 38787 ;; *************** function _IOCBF3_DefaultInterruptHandler *****************
 38788 ;; Defined at:
 38789 ;;		line 212 in file "mcc_generated_files/pin_manager.c"
 38790 ;; Parameters:    Size  Location     Type
 38791 ;;		None
 38792 ;; Auto vars:     Size  Location     Type
 38793 ;;		None
 38794 ;; Return value:  Size  Location     Type
 38795 ;;                  1    wreg      void 
 38796 ;; Registers used:
 38797 ;;		None
 38798 ;; Tracked objects:
 38799 ;;		On entry : 0/0
 38800 ;;		On exit  : 0/0
 38801 ;;		Unchanged: 0/0
 38802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38807 ;;Total ram usage:        0 bytes
 38808 ;; Hardware stack levels used:    1
 38809 ;; This function calls:
 38810 ;;		Nothing
 38811 ;; This function is called by:
 38812 ;;		_PIN_MANAGER_Initialize
 38813 ;;		_IOCBF3_ISR
 38814 ;; This function uses a non-reentrant model
 38815 ;;
 38816                           
 38817                           	psect	text158
 38818  01C8A4                     __ptext158:
 38819                           	opt callstack 0
 38820  01C8A4                     _IOCBF3_DefaultInterruptHandler:
 38821                           	opt callstack 14
 38822                           
 38823                           ; BSR set to: 15
 38824                           ;incstack = 0
 38825  01C8A4  0012               	return		;funcret
 38826  01C8A6                     __end_of_IOCBF3_DefaultInterruptHandler:
 38827                           	opt callstack 0
 38828                           
 38829 ;; *************** function _QIChargeIOCHandler *****************
 38830 ;; Defined at:
 38831 ;;		line 82 in file "NXQ_charge_state.c"
 38832 ;; Parameters:    Size  Location     Type
 38833 ;;		None
 38834 ;; Auto vars:     Size  Location     Type
 38835 ;;		None
 38836 ;; Return value:  Size  Location     Type
 38837 ;;                  1    wreg      void 
 38838 ;; Registers used:
 38839 ;;		wreg, status,2, cstack
 38840 ;; Tracked objects:
 38841 ;;		On entry : 0/0
 38842 ;;		On exit  : 0/0
 38843 ;;		Unchanged: 0/0
 38844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38849 ;;Total ram usage:        0 bytes
 38850 ;; Hardware stack levels used:    1
 38851 ;; Hardware stack levels required when called:    2
 38852 ;; This function calls:
 38853 ;;		_TMR3_StartTimer
 38854 ;;		i2_TMR1_Reload
 38855 ;;		i2_TMR3_Reload
 38856 ;; This function is called by:
 38857 ;;		_main
 38858 ;;		_IOCBF3_ISR
 38859 ;; This function uses a non-reentrant model
 38860 ;;
 38861                           
 38862                           	psect	text159
 38863  01C50A                     __ptext159:
 38864                           	opt callstack 0
 38865  01C50A                     _QIChargeIOCHandler:
 38866                           	opt callstack 12
 38867                           
 38868                           ;NXQ_charge_state.c: 84: if (IOCBNbits.IOCBN3 && PORTBbits.RB2 == 1) {
 38869                           
 38870                           ;incstack = 0
 38871  01C50A  010F               	movlb	15	; () banked
 38872  01C50C  B713               	btfsc	19,3,b	;volatile
 38873                           
 38874                           ; BSR set to: 15
 38875  01C50E  A48E               	btfss	3982,2,c	;volatile
 38876  01C510  D003               	goto	i2l13982
 38877                           
 38878                           ; BSR set to: 15
 38879                           ;NXQ_charge_state.c: 86: nxq_charge_state = QI_Charging;
 38880  01C512  0E01               	movlw	1
 38881  01C514  0101               	movlb	1	; () banked
 38882  01C516  6F95               	movwf	_nxq_charge_state& (0+255),b
 38883  01C518                     i2l13982:
 38884                           
 38885                           ;NXQ_charge_state.c: 88: };NXQ_charge_state.c: 90: TMR3_Reload();
 38886  01C518  ECEF  F0E3         	call	i2_TMR3_Reload	;wreg free
 38887                           
 38888                           ;NXQ_charge_state.c: 91: TMR3_StartTimer();
 38889  01C51C  EC43  F0E4         	call	_TMR3_StartTimer	;wreg free
 38890                           
 38891                           ;NXQ_charge_state.c: 93: TMR1_Reload();
 38892  01C520  ECE8  F0E3         	call	i2_TMR1_Reload	;wreg free
 38893  01C524  0012               	return		;funcret
 38894  01C526                     __end_of_QIChargeIOCHandler:
 38895                           	opt callstack 0
 38896                           
 38897 ;; *************** function i2_TMR1_Reload *****************
 38898 ;; Defined at:
 38899 ;;		line 149 in file "mcc_generated_files/tmr1.c"
 38900 ;; Parameters:    Size  Location     Type
 38901 ;;		None
 38902 ;; Auto vars:     Size  Location     Type
 38903 ;;		None
 38904 ;; Return value:  Size  Location     Type
 38905 ;;                  1    wreg      void 
 38906 ;; Registers used:
 38907 ;;		wreg, status,2, cstack
 38908 ;; Tracked objects:
 38909 ;;		On entry : 0/0
 38910 ;;		On exit  : 0/0
 38911 ;;		Unchanged: 0/0
 38912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38917 ;;Total ram usage:        0 bytes
 38918 ;; Hardware stack levels used:    1
 38919 ;; Hardware stack levels required when called:    1
 38920 ;; This function calls:
 38921 ;;		i2_TMR1_WriteTimer
 38922 ;; This function is called by:
 38923 ;;		_QIChargeIOCHandler
 38924 ;;		_QIErrorTimerHandler
 38925 ;; This function uses a non-reentrant model
 38926 ;;
 38927                           
 38928                           	psect	text160
 38929  01C7D0                     __ptext160:
 38930                           	opt callstack 0
 38931  01C7D0                     i2_TMR1_Reload:
 38932                           	opt callstack 13
 38933                           
 38934                           ;tmr1.c: 151: TMR1_WriteTimer(timer1ReloadVal);
 38935                           
 38936                           ;incstack = 0
 38937  01C7D0  C189  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
 38938  01C7D4  C18A  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
 38939  01C7D8  EC93  F0E2         	call	i2_TMR1_WriteTimer	;wreg free
 38940  01C7DC  0012               	return		;funcret
 38941  01C7DE                     __end_ofi2_TMR1_Reload:
 38942                           	opt callstack 0
 38943                           
 38944 ;; *************** function i2_TMR1_WriteTimer *****************
 38945 ;; Defined at:
 38946 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 38947 ;; Parameters:    Size  Location     Type
 38948 ;;  timerVal        2    0[COMRAM] unsigned int 
 38949 ;; Auto vars:     Size  Location     Type
 38950 ;;		None
 38951 ;; Return value:  Size  Location     Type
 38952 ;;                  1    wreg      void 
 38953 ;; Registers used:
 38954 ;;		wreg, status,2
 38955 ;; Tracked objects:
 38956 ;;		On entry : 0/0
 38957 ;;		On exit  : 0/0
 38958 ;;		Unchanged: 0/0
 38959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38960 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38963 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38964 ;;Total ram usage:        2 bytes
 38965 ;; Hardware stack levels used:    1
 38966 ;; This function calls:
 38967 ;;		Nothing
 38968 ;; This function is called by:
 38969 ;;		_TMR1_ISR
 38970 ;;		i2_TMR1_Reload
 38971 ;; This function uses a non-reentrant model
 38972 ;;
 38973                           
 38974                           	psect	text161
 38975  01C526                     __ptext161:
 38976                           	opt callstack 0
 38977  01C526                     i2_TMR1_WriteTimer:
 38978                           	opt callstack 15
 38979                           
 38980                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 38981                           
 38982                           ;incstack = 0
 38983  01C526  A4CF               	btfss	4047,2,c	;volatile
 38984  01C528  D007               	goto	i2l12202
 38985                           
 38986                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 38987  01C52A  90CF               	bcf	4047,0,c	;volatile
 38988                           
 38989                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 38990  01C52C  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 38991  01C52E  6ECE               	movwf	4046,c	;volatile
 38992                           
 38993                           ;tmr1.c: 136: TMR1L = timerVal;
 38994  01C530  C001  FFCD         	movff	i2TMR1_WriteTimer@timerVal,4045	;volatile
 38995                           
 38996                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 38997  01C534  80CF               	bsf	4047,0,c	;volatile
 38998                           
 38999                           ;tmr1.c: 140: }
 39000  01C536  0012               	return	
 39001  01C538                     i2l12202:
 39002                           
 39003                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 39004  01C538  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 39005  01C53A  6ECE               	movwf	4046,c	;volatile
 39006                           
 39007                           ;tmr1.c: 145: TMR1L = timerVal;
 39008  01C53C  C001  FFCD         	movff	i2TMR1_WriteTimer@timerVal,4045	;volatile
 39009  01C540  0012               	return		;funcret
 39010  01C542                     __end_ofi2_TMR1_WriteTimer:
 39011                           	opt callstack 0
 39012                           
 39013 ;; *************** function _IOCBF2_ISR *****************
 39014 ;; Defined at:
 39015 ;;		line 160 in file "mcc_generated_files/pin_manager.c"
 39016 ;; Parameters:    Size  Location     Type
 39017 ;;		None
 39018 ;; Auto vars:     Size  Location     Type
 39019 ;;		None
 39020 ;; Return value:  Size  Location     Type
 39021 ;;                  1    wreg      void 
 39022 ;; Registers used:
 39023 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39024 ;; Tracked objects:
 39025 ;;		On entry : 0/0
 39026 ;;		On exit  : 0/0
 39027 ;;		Unchanged: 0/0
 39028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39033 ;;Total ram usage:        0 bytes
 39034 ;; Hardware stack levels used:    1
 39035 ;; Hardware stack levels required when called:    3
 39036 ;; This function calls:
 39037 ;;		Absolute function
 39038 ;;		_IOCBF2_DefaultInterruptHandler
 39039 ;;		_QIIdleIOCHandler
 39040 ;; This function is called by:
 39041 ;;		_PIN_MANAGER_IOC
 39042 ;; This function uses a non-reentrant model
 39043 ;;
 39044                           
 39045                           	psect	text162
 39046  01C20A                     __ptext162:
 39047                           	opt callstack 0
 39048  01C20A                     _IOCBF2_ISR:
 39049                           	opt callstack 12
 39050                           
 39051                           ;pin_manager.c: 165: if(IOCBF2_InterruptHandler)
 39052                           
 39053                           ;incstack = 0
 39054  01C20A  0101               	movlb	1	; () banked
 39055  01C20C  517A               	movf	_IOCBF2_InterruptHandler& (0+255),w,b
 39056  01C20E  117B               	iorwf	(_IOCBF2_InterruptHandler+1)& (0+255),w,b
 39057  01C210  117C               	iorwf	(_IOCBF2_InterruptHandler+2)& (0+255),w,b
 39058  01C212  B4D8               	btfsc	status,2,c
 39059  01C214  D00C               	goto	i2u1803_49
 39060                           
 39061                           ; BSR set to: 1
 39062                           ;pin_manager.c: 166: {;pin_manager.c: 167: IOCBF2_InterruptHandler();
 39063  01C216  D801               	call	i2u1803_48
 39064  01C218  D00A               	goto	i2u1803_49
 39065  01C21A                     i2u1803_48:
 39066  01C21A  0005               	push	
 39067  01C21C  6EFA               	movwf	pclath,c
 39068  01C21E  517A               	movf	_IOCBF2_InterruptHandler& (0+255),w,b
 39069  01C220  6EFD               	movwf	tosl,c
 39070  01C222  517B               	movf	(_IOCBF2_InterruptHandler+1)& (0+255),w,b
 39071  01C224  6EFE               	movwf	tosh,c
 39072  01C226  517C               	movf	(_IOCBF2_InterruptHandler+2)& (0+255),w,b
 39073  01C228  6EFF               	movwf	tosu,c
 39074  01C22A  50FA               	movf	pclath,w,c
 39075  01C22C  0012               	return		;indir
 39076  01C22E                     i2u1803_49:
 39077                           
 39078                           ;pin_manager.c: 168: };pin_manager.c: 169: IOCBFbits.IOCBF2 = 0;
 39079  01C22E  010F               	movlb	15	; () banked
 39080  01C230  9512               	bcf	18,2,b	;volatile
 39081                           
 39082                           ; BSR set to: 15
 39083  01C232  0012               	return		;funcret
 39084  01C234                     __end_of_IOCBF2_ISR:
 39085                           	opt callstack 0
 39086                           
 39087 ;; *************** function _IOCBF2_DefaultInterruptHandler *****************
 39088 ;; Defined at:
 39089 ;;		line 182 in file "mcc_generated_files/pin_manager.c"
 39090 ;; Parameters:    Size  Location     Type
 39091 ;;		None
 39092 ;; Auto vars:     Size  Location     Type
 39093 ;;		None
 39094 ;; Return value:  Size  Location     Type
 39095 ;;                  1    wreg      void 
 39096 ;; Registers used:
 39097 ;;		None
 39098 ;; Tracked objects:
 39099 ;;		On entry : 0/0
 39100 ;;		On exit  : 0/0
 39101 ;;		Unchanged: 0/0
 39102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39107 ;;Total ram usage:        0 bytes
 39108 ;; Hardware stack levels used:    1
 39109 ;; This function calls:
 39110 ;;		Nothing
 39111 ;; This function is called by:
 39112 ;;		_PIN_MANAGER_Initialize
 39113 ;;		_IOCBF2_ISR
 39114 ;; This function uses a non-reentrant model
 39115 ;;
 39116                           
 39117                           	psect	text163
 39118  01C8A6                     __ptext163:
 39119                           	opt callstack 0
 39120  01C8A6                     _IOCBF2_DefaultInterruptHandler:
 39121                           	opt callstack 14
 39122                           
 39123                           ; BSR set to: 15
 39124                           ;incstack = 0
 39125  01C8A6  0012               	return		;funcret
 39126  01C8A8                     __end_of_IOCBF2_DefaultInterruptHandler:
 39127                           	opt callstack 0
 39128                           
 39129 ;; *************** function _QIIdleIOCHandler *****************
 39130 ;; Defined at:
 39131 ;;		line 67 in file "NXQ_charge_state.c"
 39132 ;; Parameters:    Size  Location     Type
 39133 ;;		None
 39134 ;; Auto vars:     Size  Location     Type
 39135 ;;		None
 39136 ;; Return value:  Size  Location     Type
 39137 ;;                  1    wreg      void 
 39138 ;; Registers used:
 39139 ;;		wreg, status,2, cstack
 39140 ;; Tracked objects:
 39141 ;;		On entry : 0/0
 39142 ;;		On exit  : 0/0
 39143 ;;		Unchanged: 0/0
 39144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39149 ;;Total ram usage:        0 bytes
 39150 ;; Hardware stack levels used:    1
 39151 ;; Hardware stack levels required when called:    2
 39152 ;; This function calls:
 39153 ;;		_TMR1_StartTimer
 39154 ;;		_TMR3_StartTimer
 39155 ;;		i2_TMR3_Reload
 39156 ;; This function is called by:
 39157 ;;		_main
 39158 ;;		_IOCBF2_ISR
 39159 ;; This function uses a non-reentrant model
 39160 ;;
 39161                           
 39162                           	psect	text164
 39163  01C65E                     __ptext164:
 39164                           	opt callstack 0
 39165  01C65E                     _QIIdleIOCHandler:
 39166                           	opt callstack 12
 39167                           
 39168                           ;NXQ_charge_state.c: 69: if (IOCBNbits.IOCBN2 == 1) {
 39169                           
 39170                           ;incstack = 0
 39171  01C65E  010F               	movlb	15	; () banked
 39172  01C660  A513               	btfss	19,2,b	;volatile
 39173  01C662  0012               	return	
 39174                           
 39175                           ; BSR set to: 15
 39176                           ;NXQ_charge_state.c: 71: TMR3_Reload();
 39177  01C664  ECEF  F0E3         	call	i2_TMR3_Reload	;wreg free
 39178                           
 39179                           ;NXQ_charge_state.c: 72: TMR3_StartTimer();
 39180  01C668  EC43  F0E4         	call	_TMR3_StartTimer	;wreg free
 39181                           
 39182                           ;NXQ_charge_state.c: 75: TMR1_StartTimer();
 39183  01C66C  EC45  F0E4         	call	_TMR1_StartTimer	;wreg free
 39184  01C670  0012               	return		;funcret
 39185  01C672                     __end_of_QIIdleIOCHandler:
 39186                           	opt callstack 0
 39187                           
 39188 ;; *************** function i2_TMR3_Reload *****************
 39189 ;; Defined at:
 39190 ;;		line 149 in file "mcc_generated_files/tmr3.c"
 39191 ;; Parameters:    Size  Location     Type
 39192 ;;		None
 39193 ;; Auto vars:     Size  Location     Type
 39194 ;;		None
 39195 ;; Return value:  Size  Location     Type
 39196 ;;                  1    wreg      void 
 39197 ;; Registers used:
 39198 ;;		wreg, status,2, cstack
 39199 ;; Tracked objects:
 39200 ;;		On entry : 0/0
 39201 ;;		On exit  : 0/0
 39202 ;;		Unchanged: 0/0
 39203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39208 ;;Total ram usage:        0 bytes
 39209 ;; Hardware stack levels used:    1
 39210 ;; Hardware stack levels required when called:    1
 39211 ;; This function calls:
 39212 ;;		i2_TMR3_WriteTimer
 39213 ;; This function is called by:
 39214 ;;		_QIIdleIOCHandler
 39215 ;;		_QIChargeIOCHandler
 39216 ;; This function uses a non-reentrant model
 39217 ;;
 39218                           
 39219                           	psect	text165
 39220  01C7DE                     __ptext165:
 39221                           	opt callstack 0
 39222  01C7DE                     i2_TMR3_Reload:
 39223                           	opt callstack 12
 39224                           
 39225                           ;tmr3.c: 151: TMR3_WriteTimer(timer3ReloadVal);
 39226                           
 39227                           ;incstack = 0
 39228  01C7DE  C18D  F001         	movff	_timer3ReloadVal,i2TMR3_WriteTimer@timerVal	;volatile
 39229  01C7E2  C18E  F002         	movff	_timer3ReloadVal+1,i2TMR3_WriteTimer@timerVal+1	;volatile
 39230  01C7E6  ECA1  F0E2         	call	i2_TMR3_WriteTimer	;wreg free
 39231  01C7EA  0012               	return		;funcret
 39232  01C7EC                     __end_ofi2_TMR3_Reload:
 39233                           	opt callstack 0
 39234                           
 39235 ;; *************** function i2_TMR3_WriteTimer *****************
 39236 ;; Defined at:
 39237 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 39238 ;; Parameters:    Size  Location     Type
 39239 ;;  timerVal        2    0[COMRAM] unsigned int 
 39240 ;; Auto vars:     Size  Location     Type
 39241 ;;		None
 39242 ;; Return value:  Size  Location     Type
 39243 ;;                  1    wreg      void 
 39244 ;; Registers used:
 39245 ;;		wreg, status,2
 39246 ;; Tracked objects:
 39247 ;;		On entry : 0/0
 39248 ;;		On exit  : 0/0
 39249 ;;		Unchanged: 0/0
 39250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39251 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39254 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39255 ;;Total ram usage:        2 bytes
 39256 ;; Hardware stack levels used:    1
 39257 ;; This function calls:
 39258 ;;		Nothing
 39259 ;; This function is called by:
 39260 ;;		i2_TMR3_Reload
 39261 ;; This function uses a non-reentrant model
 39262 ;;
 39263                           
 39264                           	psect	text166
 39265  01C542                     __ptext166:
 39266                           	opt callstack 0
 39267  01C542                     i2_TMR3_WriteTimer:
 39268                           	opt callstack 12
 39269                           
 39270                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 39271                           
 39272                           ;incstack = 0
 39273  01C542  A4C9               	btfss	4041,2,c	;volatile
 39274  01C544  D007               	goto	i2l12188
 39275                           
 39276                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 39277  01C546  90C9               	bcf	4041,0,c	;volatile
 39278                           
 39279                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 39280  01C548  5002               	movf	i2TMR3_WriteTimer@timerVal+1,w,c
 39281  01C54A  6EC8               	movwf	4040,c	;volatile
 39282                           
 39283                           ;tmr3.c: 136: TMR3L = timerVal;
 39284  01C54C  C001  FFC7         	movff	i2TMR3_WriteTimer@timerVal,4039	;volatile
 39285                           
 39286                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 39287  01C550  80C9               	bsf	4041,0,c	;volatile
 39288                           
 39289                           ;tmr3.c: 140: }
 39290  01C552  0012               	return	
 39291  01C554                     i2l12188:
 39292                           
 39293                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 39294  01C554  5002               	movf	i2TMR3_WriteTimer@timerVal+1,w,c
 39295  01C556  6EC8               	movwf	4040,c	;volatile
 39296                           
 39297                           ;tmr3.c: 145: TMR3L = timerVal;
 39298  01C558  C001  FFC7         	movff	i2TMR3_WriteTimer@timerVal,4039	;volatile
 39299  01C55C  0012               	return		;funcret
 39300  01C55E                     __end_ofi2_TMR3_WriteTimer:
 39301                           	opt callstack 0
 39302                           
 39303 ;; *************** function _TMR3_StartTimer *****************
 39304 ;; Defined at:
 39305 ;;		line 99 in file "mcc_generated_files/tmr3.c"
 39306 ;; Parameters:    Size  Location     Type
 39307 ;;		None
 39308 ;; Auto vars:     Size  Location     Type
 39309 ;;		None
 39310 ;; Return value:  Size  Location     Type
 39311 ;;                  1    wreg      void 
 39312 ;; Registers used:
 39313 ;;		None
 39314 ;; Tracked objects:
 39315 ;;		On entry : 0/0
 39316 ;;		On exit  : 0/0
 39317 ;;		Unchanged: 0/0
 39318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39323 ;;Total ram usage:        0 bytes
 39324 ;; Hardware stack levels used:    1
 39325 ;; This function calls:
 39326 ;;		Nothing
 39327 ;; This function is called by:
 39328 ;;		_QIIdleIOCHandler
 39329 ;;		_QIChargeIOCHandler
 39330 ;; This function uses a non-reentrant model
 39331 ;;
 39332                           
 39333                           	psect	text167
 39334  01C886                     __ptext167:
 39335                           	opt callstack 0
 39336  01C886                     _TMR3_StartTimer:
 39337                           	opt callstack 13
 39338                           
 39339                           ;tmr3.c: 102: T3CONbits.TMR3ON = 1;
 39340                           
 39341                           ;incstack = 0
 39342  01C886  80C9               	bsf	4041,0,c	;volatile
 39343  01C888  0012               	return		;funcret
 39344  01C88A                     __end_of_TMR3_StartTimer:
 39345                           	opt callstack 0
 39346                           
 39347 ;; *************** function _TMR1_StartTimer *****************
 39348 ;; Defined at:
 39349 ;;		line 99 in file "mcc_generated_files/tmr1.c"
 39350 ;; Parameters:    Size  Location     Type
 39351 ;;		None
 39352 ;; Auto vars:     Size  Location     Type
 39353 ;;		None
 39354 ;; Return value:  Size  Location     Type
 39355 ;;                  1    wreg      void 
 39356 ;; Registers used:
 39357 ;;		None
 39358 ;; Tracked objects:
 39359 ;;		On entry : 0/0
 39360 ;;		On exit  : 0/0
 39361 ;;		Unchanged: 0/0
 39362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39367 ;;Total ram usage:        0 bytes
 39368 ;; Hardware stack levels used:    1
 39369 ;; This function calls:
 39370 ;;		Nothing
 39371 ;; This function is called by:
 39372 ;;		_QIIdleIOCHandler
 39373 ;; This function uses a non-reentrant model
 39374 ;;
 39375                           
 39376                           	psect	text168
 39377  01C88A                     __ptext168:
 39378                           	opt callstack 0
 39379  01C88A                     _TMR1_StartTimer:
 39380                           	opt callstack 13
 39381                           
 39382                           ;tmr1.c: 102: T1CONbits.TMR1ON = 1;
 39383                           
 39384                           ;incstack = 0
 39385  01C88A  80CF               	bsf	4047,0,c	;volatile
 39386  01C88C  0012               	return		;funcret
 39387  01C88E                     __end_of_TMR1_StartTimer:
 39388                           	opt callstack 0
 39389                           
 39390 ;; *************** function _INT2_ISR *****************
 39391 ;; Defined at:
 39392 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 39393 ;; Parameters:    Size  Location     Type
 39394 ;;		None
 39395 ;; Auto vars:     Size  Location     Type
 39396 ;;		None
 39397 ;; Return value:  Size  Location     Type
 39398 ;;                  1    wreg      void 
 39399 ;; Registers used:
 39400 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39401 ;; Tracked objects:
 39402 ;;		On entry : 0/0
 39403 ;;		On exit  : 0/0
 39404 ;;		Unchanged: 0/0
 39405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39410 ;;Total ram usage:        0 bytes
 39411 ;; Hardware stack levels used:    1
 39412 ;; Hardware stack levels required when called:    2
 39413 ;; This function calls:
 39414 ;;		_INT2_CallBack
 39415 ;; This function is called by:
 39416 ;;		_INTERRUPT_InterruptManagerHigh
 39417 ;; This function uses a non-reentrant model
 39418 ;;
 39419                           
 39420                           	psect	text169
 39421  01C830                     __ptext169:
 39422                           	opt callstack 0
 39423  01C830                     _INT2_ISR:
 39424                           	opt callstack 14
 39425                           
 39426                           ;ext_int.c: 61: (PIR0bits.INT2IF = 0);
 39427                           
 39428                           ;incstack = 0
 39429  01C830  010E               	movlb	14	; () banked
 39430  01C832  95CA               	bcf	202,2,b	;volatile
 39431                           
 39432                           ; BSR set to: 14
 39433                           ;ext_int.c: 64: INT2_CallBack();
 39434  01C834  ECA4  F0E1         	call	_INT2_CallBack	;wreg free
 39435  01C838  0012               	return		;funcret
 39436  01C83A                     __end_of_INT2_ISR:
 39437                           	opt callstack 0
 39438                           
 39439 ;; *************** function _INT2_CallBack *****************
 39440 ;; Defined at:
 39441 ;;		line 68 in file "mcc_generated_files/ext_int.c"
 39442 ;; Parameters:    Size  Location     Type
 39443 ;;		None
 39444 ;; Auto vars:     Size  Location     Type
 39445 ;;		None
 39446 ;; Return value:  Size  Location     Type
 39447 ;;                  1    wreg      void 
 39448 ;; Registers used:
 39449 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39450 ;; Tracked objects:
 39451 ;;		On entry : 0/0
 39452 ;;		On exit  : 0/0
 39453 ;;		Unchanged: 0/0
 39454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39459 ;;Total ram usage:        0 bytes
 39460 ;; Hardware stack levels used:    1
 39461 ;; Hardware stack levels required when called:    1
 39462 ;; This function calls:
 39463 ;;		Absolute function
 39464 ;;		_INT2_DefaultInterruptHandler
 39465 ;;		_rightCapTouchHandler
 39466 ;; This function is called by:
 39467 ;;		_INT2_ISR
 39468 ;; This function uses a non-reentrant model
 39469 ;;
 39470                           
 39471                           	psect	text170
 39472  01C348                     __ptext170:
 39473                           	opt callstack 0
 39474  01C348                     _INT2_CallBack:
 39475                           	opt callstack 14
 39476                           
 39477                           ;ext_int.c: 71: if(INT2_InterruptHandler)
 39478                           
 39479                           ;incstack = 0
 39480  01C348  0101               	movlb	1	; () banked
 39481  01C34A  5183               	movf	_INT2_InterruptHandler& (0+255),w,b
 39482  01C34C  1184               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 39483  01C34E  1185               	iorwf	(_INT2_InterruptHandler+2)& (0+255),w,b
 39484  01C350  B4D8               	btfsc	status,2,c
 39485  01C352  0012               	return	
 39486                           
 39487                           ; BSR set to: 1
 39488                           ;ext_int.c: 72: {;ext_int.c: 73: INT2_InterruptHandler();
 39489  01C354  D801               	call	i2u1799_48
 39490  01C356  0012               	return	
 39491  01C358                     i2u1799_48:
 39492  01C358  0005               	push	
 39493  01C35A  6EFA               	movwf	pclath,c
 39494  01C35C  5183               	movf	_INT2_InterruptHandler& (0+255),w,b
 39495  01C35E  6EFD               	movwf	tosl,c
 39496  01C360  5184               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 39497  01C362  6EFE               	movwf	tosh,c
 39498  01C364  5185               	movf	(_INT2_InterruptHandler+2)& (0+255),w,b
 39499  01C366  6EFF               	movwf	tosu,c
 39500  01C368  50FA               	movf	pclath,w,c
 39501  01C36A  0012               	return		;indir
 39502  01C36C                     __end_of_INT2_CallBack:
 39503                           	opt callstack 0
 39504                           
 39505 ;; *************** function _INT2_DefaultInterruptHandler *****************
 39506 ;; Defined at:
 39507 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 39508 ;; Parameters:    Size  Location     Type
 39509 ;;		None
 39510 ;; Auto vars:     Size  Location     Type
 39511 ;;		None
 39512 ;; Return value:  Size  Location     Type
 39513 ;;                  1    wreg      void 
 39514 ;; Registers used:
 39515 ;;		None
 39516 ;; Tracked objects:
 39517 ;;		On entry : 0/0
 39518 ;;		On exit  : 0/0
 39519 ;;		Unchanged: 0/0
 39520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39525 ;;Total ram usage:        0 bytes
 39526 ;; Hardware stack levels used:    1
 39527 ;; This function calls:
 39528 ;;		Nothing
 39529 ;; This function is called by:
 39530 ;;		_EXT_INT_Initialize
 39531 ;;		_INT2_CallBack
 39532 ;; This function uses a non-reentrant model
 39533 ;;
 39534                           
 39535                           	psect	text171
 39536  01C8A8                     __ptext171:
 39537                           	opt callstack 0
 39538  01C8A8                     _INT2_DefaultInterruptHandler:
 39539                           	opt callstack 14
 39540                           
 39541                           ;incstack = 0
 39542  01C8A8  0012               	return		;funcret
 39543  01C8AA                     __end_of_INT2_DefaultInterruptHandler:
 39544                           	opt callstack 0
 39545                           
 39546 ;; *************** function _rightCapTouchHandler *****************
 39547 ;; Defined at:
 39548 ;;		line 20 in file "cap_touch_int.c"
 39549 ;; Parameters:    Size  Location     Type
 39550 ;;		None
 39551 ;; Auto vars:     Size  Location     Type
 39552 ;;		None
 39553 ;; Return value:  Size  Location     Type
 39554 ;;                  1    wreg      void 
 39555 ;; Registers used:
 39556 ;;		wreg, status,2, status,0
 39557 ;; Tracked objects:
 39558 ;;		On entry : 0/0
 39559 ;;		On exit  : 0/0
 39560 ;;		Unchanged: 0/0
 39561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39566 ;;Total ram usage:        0 bytes
 39567 ;; Hardware stack levels used:    1
 39568 ;; This function calls:
 39569 ;;		Nothing
 39570 ;; This function is called by:
 39571 ;;		_main
 39572 ;;		_INT2_CallBack
 39573 ;; This function uses a non-reentrant model
 39574 ;;
 39575                           
 39576                           	psect	text172
 39577  01C60A                     __ptext172:
 39578                           	opt callstack 0
 39579  01C60A                     _rightCapTouchHandler:
 39580                           	opt callstack 14
 39581                           
 39582                           ;cap_touch_int.c: 22: OLED_Frame++;
 39583                           
 39584                           ;incstack = 0
 39585  01C60A  0102               	movlb	2	; () banked
 39586  01C60C  2BD7               	incf	_OLED_Frame& (0+255),f,b
 39587                           
 39588                           ; BSR set to: 2
 39589                           ;cap_touch_int.c: 23: if (OLED_Frame == 25 + 1) OLED_Frame = 4;
 39590  01C60E  0E1A               	movlw	26
 39591  01C610  19D7               	xorwf	_OLED_Frame& (0+255),w,b
 39592  01C612  A4D8               	btfss	status,2,c
 39593  01C614  D002               	goto	i2l1625
 39594                           
 39595                           ; BSR set to: 2
 39596  01C616  0E04               	movlw	4
 39597  01C618  6FD7               	movwf	_OLED_Frame& (0+255),b
 39598  01C61A                     i2l1625:
 39599                           
 39600                           ; BSR set to: 2
 39601                           ;cap_touch_int.c: 24: OLED_update_flag = 1;
 39602  01C61A  0E01               	movlw	1
 39603  01C61C  6FD6               	movwf	_OLED_update_flag& (0+255),b
 39604                           
 39605                           ; BSR set to: 2
 39606  01C61E  0012               	return		;funcret
 39607  01C620                     __end_of_rightCapTouchHandler:
 39608                           	opt callstack 0
 39609                           
 39610 ;; *************** function _INT1_ISR *****************
 39611 ;; Defined at:
 39612 ;;		line 33 in file "mcc_generated_files/ext_int.c"
 39613 ;; Parameters:    Size  Location     Type
 39614 ;;		None
 39615 ;; Auto vars:     Size  Location     Type
 39616 ;;		None
 39617 ;; Return value:  Size  Location     Type
 39618 ;;                  1    wreg      void 
 39619 ;; Registers used:
 39620 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39621 ;; Tracked objects:
 39622 ;;		On entry : 0/0
 39623 ;;		On exit  : 0/0
 39624 ;;		Unchanged: 0/0
 39625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39630 ;;Total ram usage:        0 bytes
 39631 ;; Hardware stack levels used:    1
 39632 ;; Hardware stack levels required when called:    2
 39633 ;; This function calls:
 39634 ;;		_INT1_CallBack
 39635 ;; This function is called by:
 39636 ;;		_INTERRUPT_InterruptManagerHigh
 39637 ;; This function uses a non-reentrant model
 39638 ;;
 39639                           
 39640                           	psect	text173
 39641  01C83A                     __ptext173:
 39642                           	opt callstack 0
 39643  01C83A                     _INT1_ISR:
 39644                           	opt callstack 14
 39645                           
 39646                           ;ext_int.c: 35: (PIR0bits.INT1IF = 0);
 39647                           
 39648                           ; BSR set to: 2
 39649                           ;incstack = 0
 39650  01C83A  010E               	movlb	14	; () banked
 39651  01C83C  93CA               	bcf	202,1,b	;volatile
 39652                           
 39653                           ; BSR set to: 14
 39654                           ;ext_int.c: 38: INT1_CallBack();
 39655  01C83E  ECB6  F0E1         	call	_INT1_CallBack	;wreg free
 39656  01C842  0012               	return		;funcret
 39657  01C844                     __end_of_INT1_ISR:
 39658                           	opt callstack 0
 39659                           
 39660 ;; *************** function _INT1_CallBack *****************
 39661 ;; Defined at:
 39662 ;;		line 42 in file "mcc_generated_files/ext_int.c"
 39663 ;; Parameters:    Size  Location     Type
 39664 ;;		None
 39665 ;; Auto vars:     Size  Location     Type
 39666 ;;		None
 39667 ;; Return value:  Size  Location     Type
 39668 ;;                  1    wreg      void 
 39669 ;; Registers used:
 39670 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39671 ;; Tracked objects:
 39672 ;;		On entry : 0/0
 39673 ;;		On exit  : 0/0
 39674 ;;		Unchanged: 0/0
 39675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39680 ;;Total ram usage:        0 bytes
 39681 ;; Hardware stack levels used:    1
 39682 ;; Hardware stack levels required when called:    1
 39683 ;; This function calls:
 39684 ;;		Absolute function
 39685 ;;		_INT1_DefaultInterruptHandler
 39686 ;;		_leftCapTouchHandler
 39687 ;; This function is called by:
 39688 ;;		_INT1_ISR
 39689 ;; This function uses a non-reentrant model
 39690 ;;
 39691                           
 39692                           	psect	text174
 39693  01C36C                     __ptext174:
 39694                           	opt callstack 0
 39695  01C36C                     _INT1_CallBack:
 39696                           	opt callstack 14
 39697                           
 39698                           ;ext_int.c: 45: if(INT1_InterruptHandler)
 39699                           
 39700                           ;incstack = 0
 39701  01C36C  0101               	movlb	1	; () banked
 39702  01C36E  5186               	movf	_INT1_InterruptHandler& (0+255),w,b
 39703  01C370  1187               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 39704  01C372  1188               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 39705  01C374  B4D8               	btfsc	status,2,c
 39706  01C376  0012               	return	
 39707                           
 39708                           ; BSR set to: 1
 39709                           ;ext_int.c: 46: {;ext_int.c: 47: INT1_InterruptHandler();
 39710  01C378  D801               	call	i2u1797_48
 39711  01C37A  0012               	return	
 39712  01C37C                     i2u1797_48:
 39713  01C37C  0005               	push	
 39714  01C37E  6EFA               	movwf	pclath,c
 39715  01C380  5186               	movf	_INT1_InterruptHandler& (0+255),w,b
 39716  01C382  6EFD               	movwf	tosl,c
 39717  01C384  5187               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 39718  01C386  6EFE               	movwf	tosh,c
 39719  01C388  5188               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 39720  01C38A  6EFF               	movwf	tosu,c
 39721  01C38C  50FA               	movf	pclath,w,c
 39722  01C38E  0012               	return		;indir
 39723  01C390                     __end_of_INT1_CallBack:
 39724                           	opt callstack 0
 39725                           
 39726 ;; *************** function _INT1_DefaultInterruptHandler *****************
 39727 ;; Defined at:
 39728 ;;		line 55 in file "mcc_generated_files/ext_int.c"
 39729 ;; Parameters:    Size  Location     Type
 39730 ;;		None
 39731 ;; Auto vars:     Size  Location     Type
 39732 ;;		None
 39733 ;; Return value:  Size  Location     Type
 39734 ;;                  1    wreg      void 
 39735 ;; Registers used:
 39736 ;;		None
 39737 ;; Tracked objects:
 39738 ;;		On entry : 0/0
 39739 ;;		On exit  : 0/0
 39740 ;;		Unchanged: 0/0
 39741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39746 ;;Total ram usage:        0 bytes
 39747 ;; Hardware stack levels used:    1
 39748 ;; This function calls:
 39749 ;;		Nothing
 39750 ;; This function is called by:
 39751 ;;		_EXT_INT_Initialize
 39752 ;;		_INT1_CallBack
 39753 ;; This function uses a non-reentrant model
 39754 ;;
 39755                           
 39756                           	psect	text175
 39757  01C8AA                     __ptext175:
 39758                           	opt callstack 0
 39759  01C8AA                     _INT1_DefaultInterruptHandler:
 39760                           	opt callstack 14
 39761                           
 39762                           ;incstack = 0
 39763  01C8AA  0012               	return		;funcret
 39764  01C8AC                     __end_of_INT1_DefaultInterruptHandler:
 39765                           	opt callstack 0
 39766                           
 39767 ;; *************** function _leftCapTouchHandler *****************
 39768 ;; Defined at:
 39769 ;;		line 11 in file "cap_touch_int.c"
 39770 ;; Parameters:    Size  Location     Type
 39771 ;;		None
 39772 ;; Auto vars:     Size  Location     Type
 39773 ;;		None
 39774 ;; Return value:  Size  Location     Type
 39775 ;;                  1    wreg      void 
 39776 ;; Registers used:
 39777 ;;		wreg, status,2, status,0
 39778 ;; Tracked objects:
 39779 ;;		On entry : 0/0
 39780 ;;		On exit  : 0/0
 39781 ;;		Unchanged: 0/0
 39782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39787 ;;Total ram usage:        0 bytes
 39788 ;; Hardware stack levels used:    1
 39789 ;; This function calls:
 39790 ;;		Nothing
 39791 ;; This function is called by:
 39792 ;;		_main
 39793 ;;		_INT1_CallBack
 39794 ;; This function uses a non-reentrant model
 39795 ;;
 39796                           
 39797                           	psect	text176
 39798  01C620                     __ptext176:
 39799                           	opt callstack 0
 39800  01C620                     _leftCapTouchHandler:
 39801                           	opt callstack 14
 39802                           
 39803                           ;cap_touch_int.c: 13: OLED_Frame--;
 39804                           
 39805                           ;incstack = 0
 39806  01C620  0102               	movlb	2	; () banked
 39807  01C622  07D7               	decf	_OLED_Frame& (0+255),f,b
 39808                           
 39809                           ; BSR set to: 2
 39810                           ;cap_touch_int.c: 14: if (OLED_Frame == 4 - 1) OLED_Frame = 25;
 39811  01C624  0E03               	movlw	3
 39812  01C626  19D7               	xorwf	_OLED_Frame& (0+255),w,b
 39813  01C628  A4D8               	btfss	status,2,c
 39814  01C62A  D002               	goto	i2l1621
 39815                           
 39816                           ; BSR set to: 2
 39817  01C62C  0E19               	movlw	25
 39818  01C62E  6FD7               	movwf	_OLED_Frame& (0+255),b
 39819  01C630                     i2l1621:
 39820                           
 39821                           ; BSR set to: 2
 39822                           ;cap_touch_int.c: 15: OLED_update_flag = 1;
 39823  01C630  0E01               	movlw	1
 39824  01C632  6FD6               	movwf	_OLED_update_flag& (0+255),b
 39825                           
 39826                           ; BSR set to: 2
 39827  01C634  0012               	return		;funcret
 39828  01C636                     __end_of_leftCapTouchHandler:
 39829                           	opt callstack 0
 39830                           
 39831 ;; *************** function _EUSART2_Transmit_ISR *****************
 39832 ;; Defined at:
 39833 ;;		line 187 in file "mcc_generated_files/eusart2.c"
 39834 ;; Parameters:    Size  Location     Type
 39835 ;;		None
 39836 ;; Auto vars:     Size  Location     Type
 39837 ;;		None
 39838 ;; Return value:  Size  Location     Type
 39839 ;;                  1    wreg      void 
 39840 ;; Registers used:
 39841 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39842 ;; Tracked objects:
 39843 ;;		On entry : 0/0
 39844 ;;		On exit  : 0/0
 39845 ;;		Unchanged: 0/0
 39846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39851 ;;Total ram usage:        0 bytes
 39852 ;; Hardware stack levels used:    1
 39853 ;; This function calls:
 39854 ;;		Nothing
 39855 ;; This function is called by:
 39856 ;;		_EUSART2_Initialize
 39857 ;;		_INTERRUPT_InterruptManagerHigh
 39858 ;; This function uses a non-reentrant model
 39859 ;;
 39860                           
 39861                           	psect	text177
 39862  01BB78                     __ptext177:
 39863                           	opt callstack 0
 39864  01BB78                     _EUSART2_Transmit_ISR:
 39865                           	opt callstack 16
 39866                           
 39867                           ;eusart2.c: 191: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 39868                           
 39869                           ; BSR set to: 2
 39870                           ;incstack = 0
 39871  01BB78  0E00               	movlw	0
 39872  01BB7A  0101               	movlb	1	; () banked
 39873  01BB7C  5D8F               	subwf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 39874  01BB7E  0E04               	movlw	4
 39875  01BB80  5990               	subwfb	(_eusart2TxBufferRemaining+1)& (0+255),w,b	;volatile
 39876  01BB82  B0D8               	btfsc	status,0,c
 39877  01BB84  D019               	goto	i2l136
 39878                           
 39879                           ; BSR set to: 1
 39880                           ;eusart2.c: 192: {;eusart2.c: 193: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 39881  01BB86  0EC8               	movlw	low _eusart2TxBuffer
 39882  01BB88  2591               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
 39883  01BB8A  6ED9               	movwf	fsr2l,c
 39884  01BB8C  0E04               	movlw	high _eusart2TxBuffer
 39885  01BB8E  2192               	addwfc	(_eusart2TxTail+1)& (0+255),w,b	;volatile
 39886  01BB90  6EDA               	movwf	fsr2h,c
 39887  01BB92  50DF               	movf	indf2,w,c
 39888  01BB94  010E               	movlb	14	; () banked
 39889  01BB96  6F9A               	movwf	154,b	;volatile
 39890                           
 39891                           ; BSR set to: 14
 39892  01BB98  0101               	movlb	1	; () banked
 39893  01BB9A  4B91               	infsnz	_eusart2TxTail& (0+255),f,b	;volatile
 39894  01BB9C  2B92               	incf	(_eusart2TxTail+1)& (0+255),f,b	;volatile
 39895                           
 39896                           ; BSR set to: 1
 39897                           ;eusart2.c: 194: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 39898  01BB9E  0E00               	movlw	0
 39899  01BBA0  5D91               	subwf	_eusart2TxTail& (0+255),w,b	;volatile
 39900  01BBA2  0E04               	movlw	4
 39901  01BBA4  5992               	subwfb	(_eusart2TxTail+1)& (0+255),w,b	;volatile
 39902  01BBA6  A0D8               	btfss	status,0,c
 39903  01BBA8  D004               	goto	i2l15650
 39904                           
 39905                           ; BSR set to: 1
 39906                           ;eusart2.c: 195: {;eusart2.c: 196: eusart2TxTail = 0;
 39907  01BBAA  0E00               	movlw	0
 39908  01BBAC  6F92               	movwf	(_eusart2TxTail+1)& (0+255),b	;volatile
 39909  01BBAE  0E00               	movlw	0
 39910  01BBB0  6F91               	movwf	_eusart2TxTail& (0+255),b	;volatile
 39911  01BBB2                     i2l15650:
 39912                           
 39913                           ; BSR set to: 1
 39914                           ;eusart2.c: 197: };eusart2.c: 198: eusart2TxBufferRemaining++;
 39915  01BBB2  4B8F               	infsnz	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 39916  01BBB4  2B90               	incf	(_eusart2TxBufferRemaining+1)& (0+255),f,b	;volatile
 39917                           
 39918                           ;eusart2.c: 199: }
 39919  01BBB6  0012               	return	
 39920  01BBB8                     i2l136:
 39921                           
 39922                           ; BSR set to: 1
 39923                           ;eusart2.c: 200: else;eusart2.c: 201: {;eusart2.c: 202: PIE3bits.TX2IE = 0;
 39924  01BBB8  010E               	movlb	14	; () banked
 39925  01BBBA  9DC5               	bcf	197,6,b	;volatile
 39926  01BBBC  0012               	return		;funcret
 39927  01BBBE                     __end_of_EUSART2_Transmit_ISR:
 39928                           	opt callstack 0
 39929                           
 39930 ;; *************** function _EUSART2_Receive_ISR *****************
 39931 ;; Defined at:
 39932 ;;		line 206 in file "mcc_generated_files/eusart2.c"
 39933 ;; Parameters:    Size  Location     Type
 39934 ;;		None
 39935 ;; Auto vars:     Size  Location     Type
 39936 ;;		None
 39937 ;; Return value:  Size  Location     Type
 39938 ;;                  1    wreg      void 
 39939 ;; Registers used:
 39940 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39941 ;; Tracked objects:
 39942 ;;		On entry : 0/0
 39943 ;;		On exit  : 0/0
 39944 ;;		Unchanged: 0/0
 39945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39950 ;;Total ram usage:        0 bytes
 39951 ;; Hardware stack levels used:    1
 39952 ;; Hardware stack levels required when called:    4
 39953 ;; This function calls:
 39954 ;;		i2_printf
 39955 ;; This function is called by:
 39956 ;;		_EUSART2_Initialize
 39957 ;;		_INTERRUPT_InterruptManagerHigh
 39958 ;; This function uses a non-reentrant model
 39959 ;;
 39960                           
 39961                           	psect	text178
 39962  01AAB8                     __ptext178:
 39963                           	opt callstack 0
 39964  01AAB8                     _EUSART2_Receive_ISR:
 39965                           	opt callstack 12
 39966                           
 39967                           ;eusart2.c: 209: if(1 == RC2STAbits.OERR)
 39968                           
 39969                           ;incstack = 0
 39970  01AAB8  010E               	movlb	14	; () banked
 39971  01AABA  A39D               	btfss	157,1,b	;volatile
 39972  01AABC  D005               	goto	i2l21396
 39973                           
 39974                           ; BSR set to: 14
 39975                           ;eusart2.c: 210: {;eusart2.c: 213: RC2STAbits.CREN = 0;
 39976  01AABE  999D               	bcf	157,4,b	;volatile
 39977                           
 39978                           ;eusart2.c: 214: RC2STAbits.CREN = 1;
 39979  01AAC0  899D               	bsf	157,4,b	;volatile
 39980                           
 39981                           ; BSR set to: 14
 39982                           ;eusart2.c: 215: error_handler.USB_UART_COMM_error_flag = 1;
 39983  01AAC2  0E01               	movlw	1
 39984  01AAC4  0100               	movlb	0	; () banked
 39985  01AAC6  6FC0               	movwf	(_error_handler+7)& (0+255),b
 39986  01AAC8                     i2l21396:
 39987                           
 39988                           ;eusart2.c: 216: };eusart2.c: 219: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 39989  01AAC8  0E80               	movlw	low _eusart2RxBuffer
 39990  01AACA  0100               	movlb	0	; () banked
 39991  01AACC  25DC               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
 39992  01AACE  6ED9               	movwf	fsr2l,c
 39993  01AAD0  6ADA               	clrf	fsr2h,c
 39994  01AAD2  0E04               	movlw	high _eusart2RxBuffer
 39995  01AAD4  22DA               	addwfc	fsr2h,f,c
 39996  01AAD6  CE99 FFDF          	movff	3737,indf2	;volatile
 39997                           
 39998                           ; BSR set to: 0
 39999  01AADA  2BDC               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 40000                           
 40001                           ; BSR set to: 0
 40002                           ;eusart2.c: 220: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 40003  01AADC  0E3F               	movlw	63
 40004  01AADE  65DC               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 40005  01AAE0  D002               	goto	i2l21404
 40006                           
 40007                           ; BSR set to: 0
 40008                           ;eusart2.c: 221: {;eusart2.c: 222: eusart2RxHead = 0;
 40009  01AAE2  0E00               	movlw	0
 40010  01AAE4  6FDC               	movwf	_eusart2RxHead& (0+255),b	;volatile
 40011  01AAE6                     i2l21404:
 40012                           
 40013                           ; BSR set to: 0
 40014                           ;eusart2.c: 223: };eusart2.c: 224: eusart2RxCount++;
 40015  01AAE6  0101               	movlb	1	; () banked
 40016  01AAE8  2B97               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 40017                           
 40018                           ; BSR set to: 1
 40019                           ;eusart2.c: 226: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 40020  01AAEA  0E0A               	movlw	10
 40021  01AAEC  010E               	movlb	14	; () banked
 40022  01AAEE  1999               	xorwf	153,w,b	;volatile
 40023  01AAF0  B4D8               	btfsc	status,2,c
 40024  01AAF2  D004               	goto	i2u2747_40
 40025                           
 40026                           ; BSR set to: 14
 40027  01AAF4  0E0D               	movlw	13
 40028  01AAF6  1999               	xorwf	153,w,b	;volatile
 40029  01AAF8  A4D8               	btfss	status,2,c
 40030  01AAFA  D006               	goto	i2l144
 40031  01AAFC                     i2u2747_40:
 40032                           
 40033                           ; BSR set to: 14
 40034                           ;eusart2.c: 228: eusart2RxStringReady = 1;
 40035  01AAFC  0100               	movlb	0	; () banked
 40036  01AAFE  81FD               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 40037                           
 40038                           ; BSR set to: 0
 40039                           ;eusart2.c: 231: RC2REG = 0;
 40040  01AB00  0E00               	movlw	0
 40041  01AB02  010E               	movlb	14	; () banked
 40042  01AB04  6F99               	movwf	153,b	;volatile
 40043                           
 40044                           ;eusart2.c: 233: }
 40045  01AB06  D002               	goto	i2l21412
 40046  01AB08                     i2l144:
 40047                           
 40048                           ; BSR set to: 14
 40049                           ;eusart2.c: 235: else {;eusart2.c: 237: eusart2RxStringReady = 0;
 40050  01AB08  0100               	movlb	0	; () banked
 40051  01AB0A  91FD               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 40052  01AB0C                     i2l21412:
 40053                           
 40054                           ;eusart2.c: 239: };eusart2.c: 242: if((RC2REG == (int) '\b')) {
 40055  01AB0C  0E08               	movlw	8
 40056  01AB0E  010E               	movlb	14	; () banked
 40057  01AB10  1999               	xorwf	153,w,b	;volatile
 40058  01AB12  A4D8               	btfss	status,2,c
 40059  01AB14  0012               	return	
 40060                           
 40061                           ; BSR set to: 14
 40062                           ;eusart2.c: 244: eusart2RxBuffer[eusart2RxHead] = '\0';
 40063  01AB16  0E80               	movlw	low _eusart2RxBuffer
 40064  01AB18  0100               	movlb	0	; () banked
 40065  01AB1A  25DC               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
 40066  01AB1C  6ED9               	movwf	fsr2l,c
 40067  01AB1E  6ADA               	clrf	fsr2h,c
 40068  01AB20  0E04               	movlw	high _eusart2RxBuffer
 40069  01AB22  22DA               	addwfc	fsr2h,f,c
 40070  01AB24  0E00               	movlw	0
 40071  01AB26  6EDF               	movwf	indf2,c
 40072                           
 40073                           ; BSR set to: 0
 40074                           ;eusart2.c: 245: eusart2RxHead--;
 40075  01AB28  07DC               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 40076                           
 40077                           ; BSR set to: 0
 40078                           ;eusart2.c: 248: printf("\033[K");
 40079  01AB2A  0EC7               	movlw	low STR_1
 40080  01AB2C  6FA4               	movwf	i2printf@f& (0+255),b
 40081  01AB2E  0EFF               	movlw	high STR_1
 40082  01AB30  6FA5               	movwf	(i2printf@f+1)& (0+255),b
 40083  01AB32  EC5E  F0DF         	call	i2_printf	;wreg free
 40084                           
 40085                           ;eusart2.c: 250: if(eusart2RxHead != eusart2RxTail) {
 40086  01AB36  0101               	movlb	1	; () banked
 40087  01AB38  5198               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 40088  01AB3A  0100               	movlb	0	; () banked
 40089  01AB3C  19DC               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 40090  01AB3E  B4D8               	btfsc	status,2,c
 40091  01AB40  D009               	goto	i2l21426
 40092                           
 40093                           ; BSR set to: 0
 40094                           ;eusart2.c: 252: eusart2RxBuffer[eusart2RxHead] = '\0';
 40095  01AB42  0E80               	movlw	low _eusart2RxBuffer
 40096  01AB44  25DC               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
 40097  01AB46  6ED9               	movwf	fsr2l,c
 40098  01AB48  6ADA               	clrf	fsr2h,c
 40099  01AB4A  0E04               	movlw	high _eusart2RxBuffer
 40100  01AB4C  22DA               	addwfc	fsr2h,f,c
 40101  01AB4E  0E00               	movlw	0
 40102  01AB50  6EDF               	movwf	indf2,c
 40103                           
 40104                           ; BSR set to: 0
 40105                           ;eusart2.c: 253: eusart2RxHead--;
 40106  01AB52  07DC               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 40107  01AB54                     i2l21426:
 40108                           
 40109                           ; BSR set to: 0
 40110                           ;eusart2.c: 255: };eusart2.c: 257: RC2REG = 0;
 40111  01AB54  0E00               	movlw	0
 40112  01AB56  010E               	movlb	14	; () banked
 40113  01AB58  6F99               	movwf	153,b	;volatile
 40114                           
 40115                           ; BSR set to: 14
 40116  01AB5A  0012               	return		;funcret
 40117  01AB5C                     __end_of_EUSART2_Receive_ISR:
 40118                           	opt callstack 0
 40119                           
 40120 ;; *************** function i2_printf *****************
 40121 ;; Defined at:
 40122 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\printf.c"
 40123 ;; Parameters:    Size  Location     Type
 40124 ;;  f               2   68[BANK0 ] PTR const unsigned char 
 40125 ;;		 -> STR_352(60), STR_351(24), STR_350(24), STR_349(24), 
 40126 ;;		 -> STR_348(27), STR_347(20), STR_346(35), STR_345(34), 
 40127 ;;		 -> STR_344(37), STR_343(34), STR_342(36), STR_341(35), 
 40128 ;;		 -> STR_340(33), STR_339(35), STR_338(20), STR_337(23), 
 40129 ;;		 -> STR_336(20), STR_335(22), STR_334(21), STR_333(19), 
 40130 ;;		 -> STR_332(21), STR_331(27), STR_330(18), STR_329(11), 
 40131 ;;		 -> terminalTextAttributes@print_string(16), STR_299(4), STR_298(4), STR_297(4), 
 40132 ;;		 -> STR_296(4), STR_295(5), STR_287(41), STR_286(96), 
 40133 ;;		 -> STR_285(62), STR_284(34), STR_283(52), STR_282(56), 
 40134 ;;		 -> STR_281(55), STR_280(27), STR_279(65), STR_278(40), 
 40135 ;;		 -> STR_277(64), STR_276(42), STR_275(36), STR_274(63), 
 40136 ;;		 -> STR_273(61), STR_272(47), STR_271(60), STR_270(59), 
 40137 ;;		 -> STR_269(20), STR_268(56), STR_267(52), STR_266(23), 
 40138 ;;		 -> STR_265(45), STR_264(44), STR_263(23), STR_262(48), 
 40139 ;;		 -> STR_261(52), STR_260(58), STR_259(35), STR_258(32), 
 40140 ;;		 -> STR_257(64), STR_256(30), STR_255(31), STR_254(63), 
 40141 ;;		 -> STR_253(33), STR_252(35), STR_251(37), STR_250(40), 
 40142 ;;		 -> STR_249(28), STR_248(46), STR_247(31), STR_246(52), 
 40143 ;;		 -> STR_245(14), STR_244(28), STR_243(50), STR_242(29), 
 40144 ;;		 -> STR_241(36), STR_240(45), STR_239(88), STR_238(37), 
 40145 ;;		 -> STR_237(3), STR_236(30), STR_235(46), STR_234(39), 
 40146 ;;		 -> STR_233(62), STR_232(57), STR_231(653), STR_230(22), 
 40147 ;;		 -> STR_229(3), STR_227(29), STR_225(3), STR_224(47), 
 40148 ;;		 -> STR_223(3), STR_220(24), STR_218(23), STR_216(23), 
 40149 ;;		 -> STR_214(3), STR_213(3), STR_212(54), STR_211(3), 
 40150 ;;		 -> STR_210(56), STR_209(3), STR_208(60), STR_207(61), 
 40151 ;;		 -> STR_206(3), STR_205(62), STR_204(3), STR_203(50), 
 40152 ;;		 -> STR_202(3), STR_201(45), STR_200(3), STR_198(54), 
 40153 ;;		 -> STR_196(4), STR_195(5), STR_193(4), STR_192(5), 
 40154 ;;		 -> STR_12(28), STR_11(23), STR_10(47), STR_9(30), 
 40155 ;;		 -> STR_8(46), STR_7(39), STR_6(62), STR_5(57), 
 40156 ;;		 -> STR_4(39), STR_3(44), STR_2(52), STR_1(4), 
 40157 ;; Auto vars:     Size  Location     Type
 40158 ;;  printf          5   72[BANK0 ] struct __prbuf
 40159 ;;  printf          2   70[BANK0 ] PTR void [1]
 40160 ;;		 -> ?i2_printf(2), ?_sprintf(2), ?_printf(2), 
 40161 ;; Return value:  Size  Location     Type
 40162 ;;                  2   68[BANK0 ] int 
 40163 ;; Registers used:
 40164 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40165 ;; Tracked objects:
 40166 ;;		On entry : 0/0
 40167 ;;		On exit  : 0/0
 40168 ;;		Unchanged: 0/0
 40169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40170 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40171 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40173 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40174 ;;Total ram usage:        9 bytes
 40175 ;; Hardware stack levels used:    1
 40176 ;; Hardware stack levels required when called:    3
 40177 ;; This function calls:
 40178 ;;		i2__doprnt
 40179 ;; This function is called by:
 40180 ;;		_EUSART2_Receive_ISR
 40181 ;; This function uses a non-reentrant model
 40182 ;;
 40183                           
 40184                           	psect	text179
 40185  01BEBC                     __ptext179:
 40186                           	opt callstack 0
 40187  01BEBC                     i2_printf:
 40188                           	opt callstack 12
 40189                           
 40190                           ; BSR set to: 14
 40191                           ;incstack = 0
 40192  01BEBC  0E00               	movlw	0
 40193  01BEBE  0100               	movlb	0	; () banked
 40194  01BEC0  6FA8               	movwf	i2printf@pb& (0+255),b
 40195  01BEC2  0E00               	movlw	0
 40196  01BEC4  6FA9               	movwf	(i2printf@pb+1)& (0+255),b
 40197  01BEC6  0E44               	movlw	low i2_putch
 40198  01BEC8  6FAA               	movwf	(i2printf@pb+2)& (0+255),b
 40199  01BECA  0EC8               	movlw	high i2_putch
 40200  01BECC  6FAB               	movwf	(i2printf@pb+3)& (0+255),b
 40201  01BECE  0E01               	movlw	low (i2_putch shr (0+16))
 40202  01BED0  6FAC               	movwf	(i2printf@pb+4)& (0+255),b
 40203  01BED2  0EA6               	movlw	low (?i2_printf+2)
 40204  01BED4  6FA6               	movwf	i2printf@ap& (0+255),b
 40205  01BED6  0E00               	movlw	high (?i2_printf+2)
 40206  01BED8  6FA7               	movwf	(i2printf@ap+1)& (0+255),b
 40207                           
 40208                           ; BSR set to: 0
 40209                           ;	Return value of i2_printf is never used
 40210  01BEDA  0EA8               	movlw	low i2printf@pb
 40211  01BEDC  6F6C               	movwf	i2__doprnt@pb& (0+255),b
 40212  01BEDE  0E00               	movlw	high i2printf@pb
 40213  01BEE0  6F6D               	movwf	(i2__doprnt@pb+1)& (0+255),b
 40214  01BEE2  C0A4  F06E         	movff	i2printf@f,i2__doprnt@f
 40215  01BEE6  C0A5  F06F         	movff	i2printf@f+1,i2__doprnt@f+1
 40216  01BEEA  0EA6               	movlw	low i2printf@ap
 40217  01BEEC  6F70               	movwf	i2__doprnt@ap& (0+255),b
 40218  01BEEE  0E00               	movlw	high i2printf@ap
 40219  01BEF0  6F71               	movwf	(i2__doprnt@ap+1)& (0+255),b
 40220  01BEF2  EC92  F08B         	call	i2__doprnt	;wreg free
 40221  01BEF6  0012               	return		;funcret
 40222  01BEF8                     __end_ofi2_printf:
 40223                           	opt callstack 0
 40224                           
 40225 ;; *************** function i2__doprnt *****************
 40226 ;; Defined at:
 40227 ;;		line 466 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 40228 ;; Parameters:    Size  Location     Type
 40229 ;;  pb              2   12[BANK0 ] PTR struct __prbuf
 40230 ;;		 -> i2printf@pb(5), sprintf@pb(5), printf@pb(5), 
 40231 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 40232 ;;		 -> STR_355(11), STR_352(60), STR_351(24), STR_350(24), 
 40233 ;;		 -> STR_349(24), STR_348(27), STR_347(20), STR_346(35), 
 40234 ;;		 -> STR_345(34), STR_344(37), STR_343(34), STR_342(36), 
 40235 ;;		 -> STR_341(35), STR_340(33), STR_339(35), STR_338(20), 
 40236 ;;		 -> STR_337(23), STR_336(20), STR_335(22), STR_334(21), 
 40237 ;;		 -> STR_333(19), STR_332(21), STR_331(27), STR_330(18), 
 40238 ;;		 -> STR_329(11), terminalTextAttributes@print_string(16), STR_299(4), STR_298(4), 
 40239 ;;		 -> STR_297(4), STR_296(4), STR_295(5), STR_294(5), 
 40240 ;;		 -> STR_293(9), STR_292(9), STR_291(9), STR_290(8), 
 40241 ;;		 -> STR_289(9), STR_288(9), STR_287(41), STR_286(96), 
 40242 ;;		 -> STR_285(62), STR_284(34), STR_283(52), STR_282(56), 
 40243 ;;		 -> STR_281(55), STR_280(27), STR_279(65), STR_278(40), 
 40244 ;;		 -> STR_277(64), STR_276(42), STR_275(36), STR_274(63), 
 40245 ;;		 -> STR_273(61), STR_272(47), STR_271(60), STR_270(59), 
 40246 ;;		 -> STR_269(20), STR_268(56), STR_267(52), STR_266(23), 
 40247 ;;		 -> STR_265(45), STR_264(44), STR_263(23), STR_262(48), 
 40248 ;;		 -> STR_261(52), STR_260(58), STR_259(35), STR_258(32), 
 40249 ;;		 -> STR_257(64), STR_256(30), STR_255(31), STR_254(63), 
 40250 ;;		 -> STR_253(33), STR_252(35), STR_251(37), STR_250(40), 
 40251 ;;		 -> STR_249(28), STR_248(46), STR_247(31), STR_246(52), 
 40252 ;;		 -> STR_245(14), STR_244(28), STR_243(50), STR_242(29), 
 40253 ;;		 -> STR_241(36), STR_240(45), STR_239(88), STR_238(37), 
 40254 ;;		 -> STR_237(3), STR_236(30), STR_235(46), STR_234(39), 
 40255 ;;		 -> STR_233(62), STR_232(57), STR_231(653), STR_230(22), 
 40256 ;;		 -> STR_229(3), STR_227(29), STR_225(3), STR_224(47), 
 40257 ;;		 -> STR_223(3), STR_220(24), STR_218(23), STR_216(23), 
 40258 ;;		 -> STR_214(3), STR_213(3), STR_212(54), STR_211(3), 
 40259 ;;		 -> STR_210(56), STR_209(3), STR_208(60), STR_207(61), 
 40260 ;;		 -> STR_206(3), STR_205(62), STR_204(3), STR_203(50), 
 40261 ;;		 -> STR_202(3), STR_201(45), STR_200(3), STR_198(54), 
 40262 ;;		 -> STR_196(4), STR_195(5), STR_193(4), STR_192(5), 
 40263 ;;		 -> STR_182(7), STR_180(5), STR_173(4), STR_168(4), 
 40264 ;;		 -> STR_163(11), STR_158(11), STR_157(11), STR_156(11), 
 40265 ;;		 -> STR_155(11), STR_154(9), STR_150(11), STR_148(11), 
 40266 ;;		 -> STR_147(11), STR_146(11), STR_145(11), STR_144(9), 
 40267 ;;		 -> STR_143(11), STR_142(9), STR_141(8), STR_140(9), 
 40268 ;;		 -> STR_139(8), STR_138(9), STR_134(5), STR_124(8), 
 40269 ;;		 -> STR_120(8), STR_116(8), STR_112(8), STR_108(9), 
 40270 ;;		 -> STR_103(8), STR_98(8), STR_94(8), STR_89(8), 
 40271 ;;		 -> STR_85(8), STR_81(8), STR_68(7), STR_66(5), 
 40272 ;;		 -> STR_59(11), STR_58(10), STR_57(13), STR_56(12), 
 40273 ;;		 -> STR_55(11), STR_54(10), STR_53(10), STR_52(9), 
 40274 ;;		 -> STR_51(11), STR_50(10), STR_12(28), STR_11(23), 
 40275 ;;		 -> STR_10(47), STR_9(30), STR_8(46), STR_7(39), 
 40276 ;;		 -> STR_6(62), STR_5(57), STR_4(39), STR_3(44), 
 40277 ;;		 -> STR_2(52), STR_1(4), 
 40278 ;;  ap              2   16[BANK0 ] PTR PTR void 
 40279 ;;		 -> i2printf@ap(2), sprintf@ap(2), printf@ap(2), 
 40280 ;; Auto vars:     Size  Location     Type
 40281 ;;  _doprnt         4   57[BANK0 ] unsigned long 
 40282 ;;  _doprnt         4   53[BANK0 ] unsigned long 
 40283 ;;  _doprnt         4   49[BANK0 ] struct .
 40284 ;;  _doprnt         2   65[BANK0 ] unsigned short 
 40285 ;;  _doprnt         2   63[BANK0 ] int 
 40286 ;;  _doprnt         2   61[BANK0 ] int 
 40287 ;;  _doprnt         2   47[BANK0 ] int 
 40288 ;;  _doprnt         2   45[BANK0 ] unsigned int 
 40289 ;;  _doprnt         2   43[BANK0 ] PTR const unsigned char 
 40290 ;;		 -> i2__doprnt@c(1), ?_sprintf(2), ?_printf(2), ftoa@buf(17), 
 40291 ;;		 -> STR_353(7), _doprnt@c(1), freqMeasConvert@qi_period(4), floatToEngineeringFormat@result(20), 
 40292 ;;		 -> OLED_updateHandler@rev_id_str(17), OLED_updateHandler@dev_id_str(17), OLED_RAM_Buffer(68), getStringSecondsAsTim
      +e@buff(20), 
 40293 ;;		 -> getStringSecondsAsTime@return_string(40), STR_49(10), STR_48(13), STR_47(13), 
 40294 ;;		 -> STR_46(12), STR_45(12), STR_44(13), STR_43(12), 
 40295 ;;		 -> STR_32(16), STR_31(22), STR_30(21), STR_29(27), 
 40296 ;;		 -> STR_28(41), STR_27(32), STR_26(19), STR_25(16), 
 40297 ;;		 -> STR_24(15), STR_23(16), STR_17(10), STR_16(6), 
 40298 ;;		 -> STR_15(14), STR_14(9), STR_13(5), LM73Convert@Ambient_Conv(2), 
 40299 ;;		 -> LM73Convert@POS5_Conv(2), LM73Convert@QI_Conv(2), NULL(0), 
 40300 ;;  _doprnt         1   67[BANK0 ] unsigned char 
 40301 ;;  _doprnt         1   26[BANK0 ] unsigned char 
 40302 ;;  _doprnt         1    0        unsigned char 
 40303 ;; Return value:  Size  Location     Type
 40304 ;;                  2   12[BANK0 ] int 
 40305 ;; Registers used:
 40306 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40307 ;; Tracked objects:
 40308 ;;		On entry : 0/0
 40309 ;;		On exit  : 0/0
 40310 ;;		Unchanged: 0/0
 40311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40312 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40313 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40314 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40315 ;;      Totals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40316 ;;Total ram usage:       56 bytes
 40317 ;; Hardware stack levels used:    1
 40318 ;; Hardware stack levels required when called:    2
 40319 ;; This function calls:
 40320 ;;		Absolute function
 40321 ;;		i2___awdiv
 40322 ;;		i2___fladd
 40323 ;;		i2___fleq
 40324 ;;		i2___flge
 40325 ;;		i2___flmul
 40326 ;;		i2___flneg
 40327 ;;		i2___flsub
 40328 ;;		i2___fltol
 40329 ;;		i2___lldiv
 40330 ;;		i2___llmod
 40331 ;;		i2___wmul
 40332 ;;		i2___xxtofl
 40333 ;;		i2__div_to_l_
 40334 ;;		i2__tdiv_to_l_
 40335 ;;		i2_fround
 40336 ;;		i2_isdigit
 40337 ;;		i2_putch
 40338 ;;		i2_scale
 40339 ;; This function is called by:
 40340 ;;		i2_printf
 40341 ;; This function uses a non-reentrant model
 40342 ;;
 40343                           
 40344                           	psect	text180
 40345  011724                     __ptext180:
 40346                           	opt callstack 0
 40347  011724                     i2__doprnt:
 40348                           	opt callstack 12
 40349                           
 40350                           ;doprnt.c: 507: char c;;doprnt.c: 509: int width;;doprnt.c: 512: int prec;;doprnt.c: 520
      +                          : unsigned short flag;;doprnt.c: 527: char d;;doprnt.c: 528: double fval;;doprnt.c: 529:
      +                           int eexp;;doprnt.c: 535: union {;doprnt.c: 536: unsigned long vd;;doprnt.c: 537: double
      +                           integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: unsigned long val;;doprnt.c: 541: unsign
      +                          ed len;;doprnt.c: 542: const char * cp;;doprnt.c: 548: while((c = *f++)) {
 40351                           
 40352                           ;incstack = 0
 40353  011724  EFFB  F096         	goto	i2u2689_40
 40354  011728                     i2l20138:
 40355                           
 40356                           ; BSR set to: 0
 40357                           ;doprnt.c: 550: if(c != '%')
 40358  011728  0E25               	movlw	37
 40359  01172A  19A3               	xorwf	i2__doprnt@c& (0+255),w,b
 40360  01172C  B4D8               	btfsc	status,2,c
 40361  01172E  D036               	goto	i2l20148
 40362                           
 40363                           ; BSR set to: 0
 40364  011730  EE20 F002          	lfsr	2,2
 40365  011734  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40366  011736  26D9               	addwf	fsr2l,f,c
 40367  011738  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40368  01173A  22DA               	addwfc	fsr2h,f,c
 40369  01173C  50DE               	movf	postinc2,w,c
 40370  01173E  10DE               	iorwf	postinc2,w,c
 40371  011740  10DE               	iorwf	postinc2,w,c
 40372  011742  B4D8               	btfsc	status,2,c
 40373  011744  D014               	goto	i2l20144
 40374                           
 40375                           ; BSR set to: 0
 40376  011746  EE20 F002          	lfsr	2,2
 40377  01174A  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40378  01174C  26D9               	addwf	fsr2l,f,c
 40379  01174E  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40380  011750  22DA               	addwfc	fsr2h,f,c
 40381  011752  D802               	call	i2u2561_48
 40382  011754  EFFB  F096         	goto	i2u2689_40
 40383  011758                     i2u2561_48:
 40384  011758  0005               	push	
 40385  01175A  6EFA               	movwf	pclath,c
 40386  01175C  50DE               	movf	postinc2,w,c
 40387  01175E  6EFD               	movwf	tosl,c
 40388  011760  50DE               	movf	postinc2,w,c
 40389  011762  6EFE               	movwf	tosh,c
 40390  011764  50DE               	movf	postinc2,w,c
 40391  011766  6EFF               	movwf	tosu,c
 40392  011768  50FA               	movf	pclath,w,c
 40393  01176A  51A3               	movf	i2__doprnt@c& (0+255),w,b
 40394  01176C  0012               	return		;indir
 40395  01176E                     i2l20144:
 40396                           
 40397                           ; BSR set to: 0
 40398  01176E  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40399  011772  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40400  011776  CFDE F072          	movff	postinc2,??i2__doprnt
 40401  01177A  CFDD F073          	movff	postdec2,??i2__doprnt+1
 40402  01177E  C072  FFD9         	movff	??i2__doprnt,fsr2l
 40403  011782  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 40404  011786  C0A3  FFDF         	movff	i2__doprnt@c,indf2
 40405                           
 40406                           ; BSR set to: 0
 40407  01178A  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40408  01178E  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40409  011792  2ADE               	incf	postinc2,f,c
 40410  011794  0E00               	movlw	0
 40411  011796  22DD               	addwfc	postdec2,f,c
 40412  011798  EFFB  F096         	goto	i2u2689_40
 40413  01179C                     i2l20148:
 40414                           
 40415                           ; BSR set to: 0
 40416                           ;doprnt.c: 555: };doprnt.c: 558: width = 0;
 40417  01179C  0E00               	movlw	0
 40418  01179E  6F9E               	movwf	(i2__doprnt@width+1)& (0+255),b
 40419  0117A0  0E00               	movlw	0
 40420  0117A2  6F9D               	movwf	i2__doprnt@width& (0+255),b
 40421                           
 40422                           ;doprnt.c: 560: flag = 0;
 40423  0117A4  0E00               	movlw	0
 40424  0117A6  6FA2               	movwf	(i2__doprnt@flag+1)& (0+255),b
 40425  0117A8  0E00               	movlw	0
 40426  0117AA  6FA1               	movwf	i2__doprnt@flag& (0+255),b
 40427  0117AC  D00A               	goto	i2l20158
 40428  0117AE                     i2l20150:
 40429                           
 40430                           ;doprnt.c: 573: flag |= 0x01;
 40431  0117AE  0100               	movlb	0	; () banked
 40432  0117B0  81A1               	bsf	i2__doprnt@flag& (0+255),0,b
 40433  0117B2  D005               	goto	L34
 40434  0117B4                     i2l20152:
 40435                           
 40436                           ;doprnt.c: 580: flag |= 0x02;
 40437  0117B4  0100               	movlb	0	; () banked
 40438  0117B6  83A1               	bsf	i2__doprnt@flag& (0+255),1,b
 40439  0117B8  D002               	goto	L34
 40440  0117BA                     i2l20154:
 40441                           
 40442                           ;doprnt.c: 592: flag |= 0x04;
 40443  0117BA  0100               	movlb	0	; () banked
 40444  0117BC  85A1               	bsf	i2__doprnt@flag& (0+255),2,b
 40445  0117BE                     L34:
 40446                           
 40447                           ;doprnt.c: 593: f++;
 40448  0117BE  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 40449  0117C0  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 40450  0117C2                     i2l20158:
 40451                           
 40452                           ; BSR set to: 0
 40453  0117C2  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 40454  0117C6  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 40455  0117CA  0E00               	movlw	low (__mediumconst shr (0+16))
 40456  0117CC  6EF8               	movwf	tblptru,c
 40457  0117CE  0E0E               	movlw	(high __ramtop+-1)
 40458  0117D0  64F7               	cpfsgt	tblptrh,c
 40459  0117D2  D003               	bra	i2u2562_47
 40460  0117D4  0008               	tblrd		*
 40461  0117D6  50F5               	movf	tablat,w,c
 40462  0117D8  D005               	bra	i2u2562_40
 40463  0117DA                     i2u2562_47:
 40464  0117DA  CFF6 FFE9          	movff	tblptrl,fsr0l
 40465  0117DE  CFF7 FFEA          	movff	tblptrh,fsr0h
 40466  0117E2  50EF               	movf	indf0,w,c
 40467  0117E4                     i2u2562_40:
 40468                           
 40469                           ; Switch size 1, requested type "simple"
 40470                           ; Number of cases is 3, Range of values is 32 to 48
 40471                           ; switch strategies available:
 40472                           ; Name         Instructions Cycles
 40473                           ; simple_byte           10     6 (average)
 40474                           ;	Chosen strategy is simple_byte
 40475  0117E4  0A20               	xorlw	32	; case 32
 40476  0117E6  B4D8               	btfsc	status,2,c
 40477  0117E8  D7E2               	goto	i2l20150
 40478  0117EA  0A0B               	xorlw	11	; case 43
 40479  0117EC  B4D8               	btfsc	status,2,c
 40480  0117EE  D7E2               	goto	i2l20152
 40481  0117F0  0A1B               	xorlw	27	; case 48
 40482  0117F2  B4D8               	btfsc	status,2,c
 40483  0117F4  D7E2               	goto	i2l20154
 40484                           
 40485                           ;doprnt.c: 601: if(flag & 0x02)
 40486  0117F6  0100               	movlb	0	; () banked
 40487  0117F8  B3A1               	btfsc	i2__doprnt@flag& (0+255),1,b
 40488                           
 40489                           ; BSR set to: 0
 40490                           ;doprnt.c: 602: flag &= ~0x01;
 40491  0117FA  91A1               	bcf	i2__doprnt@flag& (0+255),0,b
 40492                           
 40493                           ; BSR set to: 0
 40494                           ;doprnt.c: 609: if(isdigit((unsigned)*f)) {
 40495  0117FC  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 40496  011800  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 40497  011804  0E00               	movlw	low (__mediumconst shr (0+16))
 40498  011806  6EF8               	movwf	tblptru,c
 40499  011808  0E0E               	movlw	(high __ramtop+-1)
 40500  01180A  64F7               	cpfsgt	tblptrh,c
 40501  01180C  D003               	bra	i2u2564_47
 40502  01180E  0008               	tblrd		*
 40503  011810  50F5               	movf	tablat,w,c
 40504  011812  D005               	bra	i2u2564_40
 40505  011814                     i2u2564_47:
 40506  011814  CFF6 FFE9          	movff	tblptrl,fsr0l
 40507  011818  CFF7 FFEA          	movff	tblptrh,fsr0h
 40508  01181C  50EF               	movf	indf0,w,c
 40509  01181E                     i2u2564_40:
 40510  01181E  EC5A  F0E2         	call	i2_isdigit
 40511  011822  A0D8               	btfss	status,0,c
 40512  011824  D04B               	goto	i2u2568_40
 40513                           
 40514                           ;doprnt.c: 610: width = 0;
 40515  011826  0E00               	movlw	0
 40516  011828  0100               	movlb	0	; () banked
 40517  01182A  6F9E               	movwf	(i2__doprnt@width+1)& (0+255),b
 40518  01182C  0E00               	movlw	0
 40519  01182E  6F9D               	movwf	i2__doprnt@width& (0+255),b
 40520  011830                     i2l20166:
 40521                           
 40522                           ;doprnt.c: 612: width *= 10;
 40523  011830  C09D  F001         	movff	i2__doprnt@width,i2___wmul@multiplier
 40524  011834  C09E  F002         	movff	i2__doprnt@width+1,i2___wmul@multiplier+1
 40525  011838  0E00               	movlw	0
 40526  01183A  6E04               	movwf	i2___wmul@multiplicand+1,c
 40527  01183C  0E0A               	movlw	10
 40528  01183E  6E03               	movwf	i2___wmul@multiplicand,c
 40529  011840  EC91  F0E1         	call	i2___wmul	;wreg free
 40530  011844  C001  F09D         	movff	?i2___wmul,i2__doprnt@width
 40531  011848  C002  F09E         	movff	?i2___wmul+1,i2__doprnt@width+1
 40532                           
 40533                           ;doprnt.c: 613: width += *f++ - '0';
 40534  01184C  0ED0               	movlw	208
 40535  01184E  0100               	movlb	0	; () banked
 40536  011850  6F72               	movwf	??i2__doprnt& (0+255),b
 40537  011852  0EFF               	movlw	255
 40538  011854  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 40539  011856  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 40540  01185A  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 40541  01185E  0E00               	movlw	low (__mediumconst shr (0+16))
 40542  011860  6EF8               	movwf	tblptru,c
 40543  011862  0E0E               	movlw	(high __ramtop+-1)
 40544  011864  64F7               	cpfsgt	tblptrh,c
 40545  011866  D003               	bra	i2u2566_47
 40546  011868  0008               	tblrd		*
 40547  01186A  50F5               	movf	tablat,w,c
 40548  01186C  D005               	bra	i2u2566_40
 40549  01186E                     i2u2566_47:
 40550  01186E  CFF6 FFE9          	movff	tblptrl,fsr0l
 40551  011872  CFF7 FFEA          	movff	tblptrh,fsr0h
 40552  011876  50EF               	movf	indf0,w,c
 40553  011878                     i2u2566_40:
 40554  011878  0100               	movlb	0	; () banked
 40555  01187A  6F74               	movwf	(??i2__doprnt+2)& (0+255),b
 40556  01187C  6B75               	clrf	(??i2__doprnt+3)& (0+255),b
 40557  01187E  5172               	movf	??i2__doprnt& (0+255),w,b
 40558  011880  2774               	addwf	(??i2__doprnt+2)& (0+255),f,b
 40559  011882  5173               	movf	(??i2__doprnt+1)& (0+255),w,b
 40560  011884  2375               	addwfc	(??i2__doprnt+3)& (0+255),f,b
 40561  011886  5174               	movf	(??i2__doprnt+2)& (0+255),w,b
 40562  011888  279D               	addwf	i2__doprnt@width& (0+255),f,b
 40563  01188A  5175               	movf	(??i2__doprnt+3)& (0+255),w,b
 40564  01188C  239E               	addwfc	(i2__doprnt@width+1)& (0+255),f,b
 40565                           
 40566                           ; BSR set to: 0
 40567  01188E  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 40568  011890  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 40569                           
 40570                           ; BSR set to: 0
 40571                           ;doprnt.c: 614: } while(isdigit((unsigned)*f));
 40572  011892  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 40573  011896  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 40574  01189A  0E00               	movlw	low (__mediumconst shr (0+16))
 40575  01189C  6EF8               	movwf	tblptru,c
 40576  01189E  0E0E               	movlw	(high __ramtop+-1)
 40577  0118A0  64F7               	cpfsgt	tblptrh,c
 40578  0118A2  D003               	bra	i2u2567_47
 40579  0118A4  0008               	tblrd		*
 40580  0118A6  50F5               	movf	tablat,w,c
 40581  0118A8  D005               	bra	i2u2567_40
 40582  0118AA                     i2u2567_47:
 40583  0118AA  CFF6 FFE9          	movff	tblptrl,fsr0l
 40584  0118AE  CFF7 FFEA          	movff	tblptrh,fsr0h
 40585  0118B2  50EF               	movf	indf0,w,c
 40586  0118B4                     i2u2567_40:
 40587  0118B4  EC5A  F0E2         	call	i2_isdigit
 40588  0118B8  B0D8               	btfsc	status,0,c
 40589  0118BA  D7BA               	goto	i2l20166
 40590  0118BC                     i2u2568_40:
 40591                           
 40592                           ;doprnt.c: 620: };doprnt.c: 623: if(*f == '.') {
 40593  0118BC  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 40594  0118C0  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 40595  0118C4  0E00               	movlw	low (__mediumconst shr (0+16))
 40596  0118C6  6EF8               	movwf	tblptru,c
 40597  0118C8  0E0E               	movlw	(high __ramtop+-1)
 40598  0118CA  64F7               	cpfsgt	tblptrh,c
 40599  0118CC  D003               	bra	i2u2569_47
 40600  0118CE  0008               	tblrd		*
 40601  0118D0  50F5               	movf	tablat,w,c
 40602  0118D2  D005               	bra	i2u2569_40
 40603  0118D4                     i2u2569_47:
 40604  0118D4  CFF6 FFE9          	movff	tblptrl,fsr0l
 40605  0118D8  CFF7 FFEA          	movff	tblptrh,fsr0h
 40606  0118DC  50EF               	movf	indf0,w,c
 40607  0118DE                     i2u2569_40:
 40608  0118DE  0A2E               	xorlw	46
 40609  0118E0  A4D8               	btfss	status,2,c
 40610  0118E2  D048               	goto	i2l20186
 40611                           
 40612                           ;doprnt.c: 624: flag |= 0x4000;
 40613  0118E4  0100               	movlb	0	; () banked
 40614  0118E6  8DA2               	bsf	(i2__doprnt@flag+1)& (0+255),6,b
 40615                           
 40616                           ;doprnt.c: 625: f++;
 40617  0118E8  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 40618  0118EA  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 40619                           
 40620                           ; BSR set to: 0
 40621                           ;doprnt.c: 639: {;doprnt.c: 640: prec = 0;
 40622  0118EC  0E00               	movlw	0
 40623  0118EE  6FA0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 40624  0118F0  0E00               	movlw	0
 40625  0118F2  6F9F               	movwf	i2__doprnt@prec& (0+255),b
 40626                           
 40627                           ;doprnt.c: 641: while(isdigit((unsigned)*f))
 40628  0118F4  D029               	goto	i2l20184
 40629  0118F6                     i2l20180:
 40630                           
 40631                           ;doprnt.c: 642: prec = prec*10 + *f++ - '0';
 40632  0118F6  C09F  F001         	movff	i2__doprnt@prec,i2___wmul@multiplier
 40633  0118FA  C0A0  F002         	movff	i2__doprnt@prec+1,i2___wmul@multiplier+1
 40634  0118FE  0E00               	movlw	0
 40635  011900  6E04               	movwf	i2___wmul@multiplicand+1,c
 40636  011902  0E0A               	movlw	10
 40637  011904  6E03               	movwf	i2___wmul@multiplicand,c
 40638  011906  EC91  F0E1         	call	i2___wmul	;wreg free
 40639  01190A  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 40640  01190E  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 40641  011912  0E00               	movlw	low (__mediumconst shr (0+16))
 40642  011914  6EF8               	movwf	tblptru,c
 40643  011916  0E0E               	movlw	(high __ramtop+-1)
 40644  011918  64F7               	cpfsgt	tblptrh,c
 40645  01191A  D003               	bra	i2u2571_47
 40646  01191C  0008               	tblrd		*
 40647  01191E  50F5               	movf	tablat,w,c
 40648  011920  D005               	bra	i2u2571_40
 40649  011922                     i2u2571_47:
 40650  011922  CFF6 FFE9          	movff	tblptrl,fsr0l
 40651  011926  CFF7 FFEA          	movff	tblptrh,fsr0h
 40652  01192A  50EF               	movf	indf0,w,c
 40653  01192C                     i2u2571_40:
 40654  01192C  0100               	movlb	0	; () banked
 40655  01192E  6F72               	movwf	??i2__doprnt& (0+255),b
 40656  011930  5172               	movf	??i2__doprnt& (0+255),w,b
 40657  011932  2601               	addwf	?i2___wmul,f,c
 40658  011934  0E00               	movlw	0
 40659  011936  2202               	addwfc	?i2___wmul+1,f,c
 40660  011938  0ED0               	movlw	208
 40661  01193A  2401               	addwf	?i2___wmul,w,c
 40662  01193C  6F9F               	movwf	i2__doprnt@prec& (0+255),b
 40663  01193E  0EFF               	movlw	255
 40664  011940  2002               	addwfc	?i2___wmul+1,w,c
 40665  011942  6FA0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 40666                           
 40667                           ; BSR set to: 0
 40668  011944  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 40669  011946  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 40670  011948                     i2l20184:
 40671                           
 40672                           ; BSR set to: 0
 40673  011948  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 40674  01194C  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 40675  011950  0E00               	movlw	low (__mediumconst shr (0+16))
 40676  011952  6EF8               	movwf	tblptru,c
 40677  011954  0E0E               	movlw	(high __ramtop+-1)
 40678  011956  64F7               	cpfsgt	tblptrh,c
 40679  011958  D003               	bra	i2u2572_47
 40680  01195A  0008               	tblrd		*
 40681  01195C  50F5               	movf	tablat,w,c
 40682  01195E  D005               	bra	i2u2572_40
 40683  011960                     i2u2572_47:
 40684  011960  CFF6 FFE9          	movff	tblptrl,fsr0l
 40685  011964  CFF7 FFEA          	movff	tblptrh,fsr0h
 40686  011968  50EF               	movf	indf0,w,c
 40687  01196A                     i2u2572_40:
 40688  01196A  EC5A  F0E2         	call	i2_isdigit
 40689  01196E  A0D8               	btfss	status,0,c
 40690  011970  D12A               	goto	i2l20254
 40691  011972  D7C1               	goto	i2l20180
 40692  011974                     i2l20186:
 40693                           
 40694                           ;doprnt.c: 645: prec = 0;
 40695  011974  0E00               	movlw	0
 40696  011976  0100               	movlb	0	; () banked
 40697  011978  6FA0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 40698  01197A  0E00               	movlw	0
 40699  01197C  6F9F               	movwf	i2__doprnt@prec& (0+255),b
 40700                           
 40701                           ; BSR set to: 0
 40702                           ;doprnt.c: 647: flag |= 0x1000;
 40703  01197E  89A2               	bsf	(i2__doprnt@flag+1)& (0+255),4,b
 40704  011980  D122               	goto	i2l20254
 40705  011982                     i2l20190:
 40706                           
 40707                           ; BSR set to: 0
 40708                           ;doprnt.c: 662: flag |= 0x10;
 40709  011982  89A1               	bsf	i2__doprnt@flag& (0+255),4,b
 40710                           
 40711                           ;doprnt.c: 663: goto loop;
 40712  011984  D120               	goto	i2l20254
 40713  011986                     i2l20192:
 40714                           
 40715                           ; BSR set to: 0
 40716                           ;doprnt.c: 682: flag |= 0x400;
 40717  011986  85A2               	bsf	(i2__doprnt@flag+1)& (0+255),2,b
 40718                           
 40719                           ;doprnt.c: 683: break;
 40720  011988  D159               	goto	i2l20256
 40721  01198A                     i2l20194:
 40722                           
 40723                           ; BSR set to: 0
 40724                           ;doprnt.c: 737: case 'x':;doprnt.c: 740: flag |= 0x80;
 40725  01198A  8FA1               	bsf	i2__doprnt@flag& (0+255),7,b
 40726                           
 40727                           ;doprnt.c: 742: break;
 40728  01198C  D157               	goto	i2l20256
 40729  01198E                     i2l20196:
 40730                           
 40731                           ; BSR set to: 0
 40732                           ;doprnt.c: 753: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 40733  01198E  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 40734  011992  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 40735  011996  CFDF F072          	movff	indf2,??i2__doprnt
 40736  01199A  0E02               	movlw	2
 40737  01199C  26DE               	addwf	postinc2,f,c
 40738  01199E  CFDF F073          	movff	indf2,??i2__doprnt+1
 40739  0119A2  0E00               	movlw	0
 40740  0119A4  22DD               	addwfc	postdec2,f,c
 40741  0119A6  C072  FFD9         	movff	??i2__doprnt,fsr2l
 40742  0119AA  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 40743  0119AE  CFDE F08B          	movff	postinc2,i2__doprnt@cp
 40744  0119B2  CFDD F08C          	movff	postdec2,i2__doprnt@cp+1
 40745                           
 40746                           ; BSR set to: 0
 40747                           ;doprnt.c: 759: if(!cp)
 40748  0119B6  518B               	movf	i2__doprnt@cp& (0+255),w,b
 40749  0119B8  118C               	iorwf	(i2__doprnt@cp+1)& (0+255),w,b
 40750  0119BA  A4D8               	btfss	status,2,c
 40751  0119BC  D004               	goto	i2l20202
 40752                           
 40753                           ; BSR set to: 0
 40754                           ;doprnt.c: 760: cp = "(null)";
 40755  0119BE  0E6A               	movlw	low STR_353
 40756  0119C0  6F8B               	movwf	i2__doprnt@cp& (0+255),b
 40757  0119C2  0EFF               	movlw	high STR_353
 40758  0119C4  6F8C               	movwf	(i2__doprnt@cp+1)& (0+255),b
 40759  0119C6                     i2l20202:
 40760                           
 40761                           ; BSR set to: 0
 40762                           ;doprnt.c: 764: len = 0;
 40763  0119C6  0E00               	movlw	0
 40764  0119C8  6F8E               	movwf	(i2__doprnt@len+1)& (0+255),b
 40765  0119CA  0E00               	movlw	0
 40766  0119CC  6F8D               	movwf	i2__doprnt@len& (0+255),b
 40767                           
 40768                           ;doprnt.c: 765: while(cp[len])
 40769  0119CE  D003               	goto	i2l20206
 40770  0119D0                     i2l20204:
 40771                           
 40772                           ;doprnt.c: 766: len++;
 40773  0119D0  0100               	movlb	0	; () banked
 40774  0119D2  4B8D               	infsnz	i2__doprnt@len& (0+255),f,b
 40775  0119D4  2B8E               	incf	(i2__doprnt@len+1)& (0+255),f,b
 40776  0119D6                     i2l20206:
 40777                           
 40778                           ; BSR set to: 0
 40779  0119D6  518D               	movf	i2__doprnt@len& (0+255),w,b
 40780  0119D8  258B               	addwf	i2__doprnt@cp& (0+255),w,b
 40781  0119DA  6F72               	movwf	??i2__doprnt& (0+255),b
 40782  0119DC  518E               	movf	(i2__doprnt@len+1)& (0+255),w,b
 40783  0119DE  218C               	addwfc	(i2__doprnt@cp+1)& (0+255),w,b
 40784  0119E0  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 40785  0119E2  C072  FFF6         	movff	??i2__doprnt,tblptrl
 40786  0119E6  C073  FFF7         	movff	??i2__doprnt+1,tblptrh
 40787  0119EA  0E00               	movlw	low (__mediumconst shr (0+16))
 40788  0119EC  6EF8               	movwf	tblptru,c
 40789  0119EE  0E0E               	movlw	(high __ramtop+-1)
 40790  0119F0  64F7               	cpfsgt	tblptrh,c
 40791  0119F2  D003               	bra	i2u2575_47
 40792  0119F4  0008               	tblrd		*
 40793  0119F6  50F5               	movf	tablat,w,c
 40794  0119F8  D005               	bra	i2u2575_40
 40795  0119FA                     i2u2575_47:
 40796  0119FA  CFF6 FFE9          	movff	tblptrl,fsr0l
 40797  0119FE  CFF7 FFEA          	movff	tblptrh,fsr0h
 40798  011A02  50EF               	movf	indf0,w,c
 40799  011A04                     i2u2575_40:
 40800  011A04  0900               	iorlw	0
 40801  011A06  A4D8               	btfss	status,2,c
 40802  011A08  D7E3               	goto	i2l20204
 40803  011A0A                     i2u2576_40:
 40804                           
 40805                           ;doprnt.c: 772: if(prec && prec < len)
 40806  011A0A  0100               	movlb	0	; () banked
 40807  011A0C  519F               	movf	i2__doprnt@prec& (0+255),w,b
 40808  011A0E  11A0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 40809  011A10  B4D8               	btfsc	status,2,c
 40810  011A12  D00A               	goto	i2l20214
 40811                           
 40812                           ; BSR set to: 0
 40813  011A14  518D               	movf	i2__doprnt@len& (0+255),w,b
 40814  011A16  5D9F               	subwf	i2__doprnt@prec& (0+255),w,b
 40815  011A18  518E               	movf	(i2__doprnt@len+1)& (0+255),w,b
 40816  011A1A  59A0               	subwfb	(i2__doprnt@prec+1)& (0+255),w,b
 40817  011A1C  B0D8               	btfsc	status,0,c
 40818  011A1E  D004               	goto	i2l20214
 40819                           
 40820                           ; BSR set to: 0
 40821                           ;doprnt.c: 773: len = prec;
 40822  011A20  C09F  F08D         	movff	i2__doprnt@prec,i2__doprnt@len
 40823  011A24  C0A0  F08E         	movff	i2__doprnt@prec+1,i2__doprnt@len+1
 40824  011A28                     i2l20214:
 40825                           
 40826                           ; BSR set to: 0
 40827                           ;doprnt.c: 776: if(width > len)
 40828  011A28  519D               	movf	i2__doprnt@width& (0+255),w,b
 40829  011A2A  5D8D               	subwf	i2__doprnt@len& (0+255),w,b
 40830  011A2C  519E               	movf	(i2__doprnt@width+1)& (0+255),w,b
 40831  011A2E  598E               	subwfb	(i2__doprnt@len+1)& (0+255),w,b
 40832  011A30  B0D8               	btfsc	status,0,c
 40833  011A32  D005               	goto	i2l20218
 40834                           
 40835                           ; BSR set to: 0
 40836                           ;doprnt.c: 777: width -= len;
 40837  011A34  518D               	movf	i2__doprnt@len& (0+255),w,b
 40838  011A36  5F9D               	subwf	i2__doprnt@width& (0+255),f,b
 40839  011A38  518E               	movf	(i2__doprnt@len+1)& (0+255),w,b
 40840  011A3A  5B9E               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 40841  011A3C  D038               	goto	i2l20228
 40842  011A3E                     i2l20218:
 40843                           
 40844                           ; BSR set to: 0
 40845                           ;doprnt.c: 778: else;doprnt.c: 779: width = 0;
 40846  011A3E  0E00               	movlw	0
 40847  011A40  6F9E               	movwf	(i2__doprnt@width+1)& (0+255),b
 40848  011A42  0E00               	movlw	0
 40849  011A44  6F9D               	movwf	i2__doprnt@width& (0+255),b
 40850  011A46  D033               	goto	i2l20228
 40851  011A48                     i2l20220:
 40852                           
 40853                           ; BSR set to: 0
 40854  011A48  EE20 F002          	lfsr	2,2
 40855  011A4C  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40856  011A4E  26D9               	addwf	fsr2l,f,c
 40857  011A50  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40858  011A52  22DA               	addwfc	fsr2h,f,c
 40859  011A54  50DE               	movf	postinc2,w,c
 40860  011A56  10DE               	iorwf	postinc2,w,c
 40861  011A58  10DE               	iorwf	postinc2,w,c
 40862  011A5A  B4D8               	btfsc	status,2,c
 40863  011A5C  D013               	goto	i2l20224
 40864                           
 40865                           ; BSR set to: 0
 40866  011A5E  EE20 F002          	lfsr	2,2
 40867  011A62  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40868  011A64  26D9               	addwf	fsr2l,f,c
 40869  011A66  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40870  011A68  22DA               	addwfc	fsr2h,f,c
 40871  011A6A  D801               	call	i2u2581_48
 40872  011A6C  D020               	goto	i2l20228
 40873  011A6E                     i2u2581_48:
 40874  011A6E  0005               	push	
 40875  011A70  6EFA               	movwf	pclath,c
 40876  011A72  50DE               	movf	postinc2,w,c
 40877  011A74  6EFD               	movwf	tosl,c
 40878  011A76  50DE               	movf	postinc2,w,c
 40879  011A78  6EFE               	movwf	tosh,c
 40880  011A7A  50DE               	movf	postinc2,w,c
 40881  011A7C  6EFF               	movwf	tosu,c
 40882  011A7E  50FA               	movf	pclath,w,c
 40883  011A80  0E20               	movlw	32
 40884  011A82  0012               	return		;indir
 40885  011A84                     i2l20224:
 40886                           
 40887                           ; BSR set to: 0
 40888  011A84  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40889  011A88  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40890  011A8C  CFDE F072          	movff	postinc2,??i2__doprnt
 40891  011A90  CFDD F073          	movff	postdec2,??i2__doprnt+1
 40892  011A94  C072  FFD9         	movff	??i2__doprnt,fsr2l
 40893  011A98  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 40894  011A9C  0E20               	movlw	32
 40895  011A9E  6EDF               	movwf	indf2,c
 40896                           
 40897                           ; BSR set to: 0
 40898  011AA0  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40899  011AA4  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40900  011AA8  2ADE               	incf	postinc2,f,c
 40901  011AAA  0E00               	movlw	0
 40902  011AAC  22DD               	addwfc	postdec2,f,c
 40903  011AAE                     i2l20228:
 40904  011AAE  0100               	movlb	0	; () banked
 40905  011AB0  079D               	decf	i2__doprnt@width& (0+255),f,b
 40906  011AB2  A0D8               	btfss	status,0,c
 40907  011AB4  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 40908  011AB6  299D               	incf	i2__doprnt@width& (0+255),w,b
 40909  011AB8  E1C7               	bnz	i2l20220
 40910  011ABA  299E               	incf	(i2__doprnt@width+1)& (0+255),w,b
 40911  011ABC  B4D8               	btfsc	status,2,c
 40912  011ABE  D05B               	goto	i2l20242
 40913  011AC0  D7C3               	goto	i2l20220
 40914  011AC2                     i2l20230:
 40915                           
 40916                           ; BSR set to: 0
 40917  011AC2  EE20 F002          	lfsr	2,2
 40918  011AC6  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40919  011AC8  26D9               	addwf	fsr2l,f,c
 40920  011ACA  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40921  011ACC  22DA               	addwfc	fsr2h,f,c
 40922  011ACE  50DE               	movf	postinc2,w,c
 40923  011AD0  10DE               	iorwf	postinc2,w,c
 40924  011AD2  10DE               	iorwf	postinc2,w,c
 40925  011AD4  B4D8               	btfsc	status,2,c
 40926  011AD6  D027               	goto	i2l20236
 40927                           
 40928                           ; BSR set to: 0
 40929  011AD8  EE20 F002          	lfsr	2,2
 40930  011ADC  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40931  011ADE  26D9               	addwf	fsr2l,f,c
 40932  011AE0  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40933  011AE2  22DA               	addwfc	fsr2h,f,c
 40934  011AE4  D801               	call	i2u2584_48
 40935  011AE6  D01B               	goto	i2u2584_49
 40936  011AE8                     i2u2584_48:
 40937  011AE8  0005               	push	
 40938  011AEA  6EFA               	movwf	pclath,c
 40939  011AEC  50DE               	movf	postinc2,w,c
 40940  011AEE  6EFD               	movwf	tosl,c
 40941  011AF0  50DE               	movf	postinc2,w,c
 40942  011AF2  6EFE               	movwf	tosh,c
 40943  011AF4  50DE               	movf	postinc2,w,c
 40944  011AF6  6EFF               	movwf	tosu,c
 40945  011AF8  50FA               	movf	pclath,w,c
 40946  011AFA  C08B  FFF6         	movff	i2__doprnt@cp,tblptrl
 40947  011AFE  C08C  FFF7         	movff	i2__doprnt@cp+1,tblptrh
 40948  011B02  0E00               	movlw	low (__mediumconst shr (0+16))
 40949  011B04  6EF8               	movwf	tblptru,c
 40950  011B06  0E0E               	movlw	(high __ramtop+-1)
 40951  011B08  64F7               	cpfsgt	tblptrh,c
 40952  011B0A  D003               	bra	i2u2585_47
 40953  011B0C  0008               	tblrd		*
 40954  011B0E  50F5               	movf	tablat,w,c
 40955  011B10  D005               	bra	i2u2585_40
 40956  011B12                     i2u2585_47:
 40957  011B12  CFF6 FFE9          	movff	tblptrl,fsr0l
 40958  011B16  CFF7 FFEA          	movff	tblptrh,fsr0h
 40959  011B1A  50EF               	movf	indf0,w,c
 40960  011B1C                     i2u2585_40:
 40961  011B1C  0012               	return		;indir
 40962  011B1E                     i2u2584_49:
 40963  011B1E  0100               	movlb	0	; () banked
 40964  011B20  4B8B               	infsnz	i2__doprnt@cp& (0+255),f,b
 40965  011B22  2B8C               	incf	(i2__doprnt@cp+1)& (0+255),f,b
 40966  011B24  D028               	goto	i2l20242
 40967  011B26                     i2l20236:
 40968                           
 40969                           ; BSR set to: 0
 40970  011B26  C08B  FFF6         	movff	i2__doprnt@cp,tblptrl
 40971  011B2A  C08C  FFF7         	movff	i2__doprnt@cp+1,tblptrh
 40972  011B2E  0E00               	movlw	low (__mediumconst shr (0+16))
 40973  011B30  6EF8               	movwf	tblptru,c
 40974  011B32  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40975  011B36  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40976  011B3A  CFDE F072          	movff	postinc2,??i2__doprnt
 40977  011B3E  CFDD F073          	movff	postdec2,??i2__doprnt+1
 40978  011B42  C072  FFD9         	movff	??i2__doprnt,fsr2l
 40979  011B46  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 40980  011B4A  0E0E               	movlw	(high __ramtop+-1)
 40981  011B4C  64F7               	cpfsgt	tblptrh,c
 40982  011B4E  D003               	bra	i2u2586_47
 40983  011B50  0008               	tblrd		*
 40984  011B52  50F5               	movf	tablat,w,c
 40985  011B54  D005               	bra	i2u2586_40
 40986  011B56                     i2u2586_47:
 40987  011B56  CFF6 FFE9          	movff	tblptrl,fsr0l
 40988  011B5A  CFF7 FFEA          	movff	tblptrh,fsr0h
 40989  011B5E  50EF               	movf	indf0,w,c
 40990  011B60                     i2u2586_40:
 40991  011B60  6EDF               	movwf	indf2,c
 40992  011B62  0100               	movlb	0	; () banked
 40993  011B64  4B8B               	infsnz	i2__doprnt@cp& (0+255),f,b
 40994  011B66  2B8C               	incf	(i2__doprnt@cp+1)& (0+255),f,b
 40995                           
 40996                           ; BSR set to: 0
 40997  011B68  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40998  011B6C  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40999  011B70  2ADE               	incf	postinc2,f,c
 41000  011B72  0E00               	movlw	0
 41001  011B74  22DD               	addwfc	postdec2,f,c
 41002  011B76                     i2l20242:
 41003                           
 41004                           ; BSR set to: 0
 41005  011B76  078D               	decf	i2__doprnt@len& (0+255),f,b
 41006  011B78  A0D8               	btfss	status,0,c
 41007  011B7A  078E               	decf	(i2__doprnt@len+1)& (0+255),f,b
 41008  011B7C  298D               	incf	i2__doprnt@len& (0+255),w,b
 41009  011B7E  E1A1               	bnz	i2l20230
 41010  011B80  298E               	incf	(i2__doprnt@len+1)& (0+255),w,b
 41011  011B82  B4D8               	btfsc	status,2,c
 41012  011B84  EFFB  F096         	goto	i2u2689_40
 41013  011B88  D79C               	goto	i2l20230
 41014  011B8A                     i2l20244:
 41015                           
 41016                           ; BSR set to: 0
 41017                           ;doprnt.c: 818: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 41018  011B8A  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 41019  011B8E  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 41020  011B92  CFDF F072          	movff	indf2,??i2__doprnt
 41021  011B96  0E02               	movlw	2
 41022  011B98  26DE               	addwf	postinc2,f,c
 41023  011B9A  CFDF F073          	movff	indf2,??i2__doprnt+1
 41024  011B9E  0E00               	movlw	0
 41025  011BA0  22DD               	addwfc	postdec2,f,c
 41026  011BA2  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41027  011BA6  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41028  011BAA  50DF               	movf	indf2,w,c
 41029  011BAC  6FA3               	movwf	i2__doprnt@c& (0+255),b
 41030  011BAE                     i2l20246:
 41031                           
 41032                           ; BSR set to: 0
 41033                           ;doprnt.c: 824: cp = (char *)&c;
 41034  011BAE  0EA3               	movlw	low i2__doprnt@c
 41035  011BB0  6F8B               	movwf	i2__doprnt@cp& (0+255),b
 41036  011BB2  0E00               	movlw	high i2__doprnt@c
 41037  011BB4  6F8C               	movwf	(i2__doprnt@cp+1)& (0+255),b
 41038                           
 41039                           ; BSR set to: 0
 41040                           ;doprnt.c: 825: len = 1;
 41041  011BB6  0E00               	movlw	0
 41042  011BB8  6F8E               	movwf	(i2__doprnt@len+1)& (0+255),b
 41043  011BBA  0E01               	movlw	1
 41044  011BBC  6F8D               	movwf	i2__doprnt@len& (0+255),b
 41045                           
 41046                           ;doprnt.c: 826: goto dostring;
 41047  011BBE  D725               	goto	i2u2576_40
 41048  011BC0                     i2l20250:
 41049                           
 41050                           ; BSR set to: 0
 41051                           ;doprnt.c: 837: flag |= 0xC0;
 41052  011BC0  0EC0               	movlw	192
 41053  011BC2  13A1               	iorwf	i2__doprnt@flag& (0+255),f,b
 41054                           
 41055                           ;doprnt.c: 838: break;
 41056  011BC4  D03B               	goto	i2l20256
 41057  011BC6                     i2l20254:
 41058  011BC6  0100               	movlb	0	; () banked
 41059  011BC8  516E               	movf	i2__doprnt@f& (0+255),w,b
 41060  011BCA  6F72               	movwf	??i2__doprnt& (0+255),b
 41061  011BCC  516F               	movf	(i2__doprnt@f+1)& (0+255),w,b
 41062  011BCE  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 41063  011BD0  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 41064  011BD2  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 41065  011BD4  C072  FFF6         	movff	??i2__doprnt,tblptrl
 41066  011BD8  C073  FFF7         	movff	??i2__doprnt+1,tblptrh
 41067  011BDC  0E00               	movlw	low (__mediumconst shr (0+16))
 41068  011BDE  6EF8               	movwf	tblptru,c
 41069  011BE0  0E0E               	movlw	(high __ramtop+-1)
 41070  011BE2  64F7               	cpfsgt	tblptrh,c
 41071  011BE4  D003               	bra	i2u2588_47
 41072  011BE6  0008               	tblrd		*
 41073  011BE8  50F5               	movf	tablat,w,c
 41074  011BEA  D005               	bra	i2u2588_40
 41075  011BEC                     i2u2588_47:
 41076  011BEC  CFF6 FFE9          	movff	tblptrl,fsr0l
 41077  011BF0  CFF7 FFEA          	movff	tblptrh,fsr0h
 41078  011BF4  50EF               	movf	indf0,w,c
 41079  011BF6                     i2u2588_40:
 41080  011BF6  0100               	movlb	0	; () banked
 41081  011BF8  6FA3               	movwf	i2__doprnt@c& (0+255),b
 41082  011BFA  51A3               	movf	i2__doprnt@c& (0+255),w,b
 41083                           
 41084                           ; Switch size 1, requested type "simple"
 41085                           ; Number of cases is 10, Range of values is 0 to 120
 41086                           ; switch strategies available:
 41087                           ; Name         Instructions Cycles
 41088                           ; simple_byte           31    16 (average)
 41089                           ;	Chosen strategy is simple_byte
 41090  011BFC  0A00               	xorlw	0	; case 0
 41091  011BFE  B4D8               	btfsc	status,2,c
 41092  011C00  EF19  F097         	goto	i2u2691_40
 41093  011C04  0A58               	xorlw	88	; case 88
 41094  011C06  B4D8               	btfsc	status,2,c
 41095  011C08  D6C0               	goto	i2l20194
 41096  011C0A  0A3B               	xorlw	59	; case 99
 41097  011C0C  B4D8               	btfsc	status,2,c
 41098  011C0E  D7BD               	goto	i2l20244
 41099  011C10  0A07               	xorlw	7	; case 100
 41100  011C12  B4D8               	btfsc	status,2,c
 41101  011C14  D013               	goto	i2l20256
 41102  011C16  0A02               	xorlw	2	; case 102
 41103  011C18  B4D8               	btfsc	status,2,c
 41104  011C1A  D6B5               	goto	i2l20192
 41105  011C1C  0A0F               	xorlw	15	; case 105
 41106  011C1E  B4D8               	btfsc	status,2,c
 41107  011C20  D00D               	goto	i2l20256
 41108  011C22  0A05               	xorlw	5	; case 108
 41109  011C24  B4D8               	btfsc	status,2,c
 41110  011C26  D6AD               	goto	i2l20190
 41111  011C28  0A1F               	xorlw	31	; case 115
 41112  011C2A  B4D8               	btfsc	status,2,c
 41113  011C2C  D6B0               	goto	i2l20196
 41114  011C2E  0A06               	xorlw	6	; case 117
 41115  011C30  B4D8               	btfsc	status,2,c
 41116  011C32  D7C6               	goto	i2l20250
 41117  011C34  0A0D               	xorlw	13	; case 120
 41118  011C36  B4D8               	btfsc	status,2,c
 41119  011C38  D6A8               	goto	i2l20194
 41120  011C3A  D7B9               	goto	i2l20246
 41121  011C3C                     i2l20256:
 41122                           
 41123                           ; BSR set to: 0
 41124                           ;doprnt.c: 844: if(flag & (0x700)) {
 41125  011C3C  0E07               	movlw	7
 41126  011C3E  15A2               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 41127  011C40  B4D8               	btfsc	status,2,c
 41128  011C42  EF9C  F093         	goto	i2l20500
 41129                           
 41130                           ; BSR set to: 0
 41131                           ;doprnt.c: 846: if(flag & 0x1000)
 41132  011C46  A9A2               	btfss	(i2__doprnt@flag+1)& (0+255),4,b
 41133  011C48  D004               	goto	i2l20262
 41134                           
 41135                           ; BSR set to: 0
 41136                           ;doprnt.c: 848: prec = 6;
 41137  011C4A  0E00               	movlw	0
 41138  011C4C  6FA0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 41139  011C4E  0E06               	movlw	6
 41140  011C50  6F9F               	movwf	i2__doprnt@prec& (0+255),b
 41141  011C52                     i2l20262:
 41142                           
 41143                           ; BSR set to: 0
 41144                           ;doprnt.c: 849: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 41145  011C52  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 41146  011C56  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 41147  011C5A  CFDF F072          	movff	indf2,??i2__doprnt
 41148  011C5E  0E04               	movlw	4
 41149  011C60  26DE               	addwf	postinc2,f,c
 41150  011C62  CFDF F073          	movff	indf2,??i2__doprnt+1
 41151  011C66  0E00               	movlw	0
 41152  011C68  22DD               	addwfc	postdec2,f,c
 41153  011C6A  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41154  011C6E  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41155  011C72  CFDE F095          	movff	postinc2,i2__doprnt@fval
 41156  011C76  CFDE F096          	movff	postinc2,i2__doprnt@fval+1
 41157  011C7A  CFDE F097          	movff	postinc2,i2__doprnt@fval+2
 41158  011C7E  CFDE F098          	movff	postinc2,i2__doprnt@fval+3
 41159                           
 41160                           ; BSR set to: 0
 41161                           ;doprnt.c: 850: if(fval < 0.0) {
 41162  011C82  AF98               	btfss	(i2__doprnt@fval+3)& (0+255),7,b
 41163  011C84  D015               	goto	i2l20270
 41164                           
 41165                           ; BSR set to: 0
 41166                           ;doprnt.c: 851: fval = -fval;
 41167  011C86  C095  F001         	movff	i2__doprnt@fval,i2___flneg@f1
 41168  011C8A  C096  F002         	movff	i2__doprnt@fval+1,i2___flneg@f1+1
 41169  011C8E  C097  F003         	movff	i2__doprnt@fval+2,i2___flneg@f1+2
 41170  011C92  C098  F004         	movff	i2__doprnt@fval+3,i2___flneg@f1+3
 41171  011C96  ECAF  F0E0         	call	i2___flneg
 41172  011C9A  C001  F095         	movff	?i2___flneg,i2__doprnt@fval
 41173  011C9E  C002  F096         	movff	?i2___flneg+1,i2__doprnt@fval+1
 41174  011CA2  C003  F097         	movff	?i2___flneg+2,i2__doprnt@fval+2
 41175  011CA6  C004  F098         	movff	?i2___flneg+3,i2__doprnt@fval+3
 41176                           
 41177                           ;doprnt.c: 852: flag |= 0x03;
 41178  011CAA  0E03               	movlw	3
 41179  011CAC  0100               	movlb	0	; () banked
 41180  011CAE  13A1               	iorwf	i2__doprnt@flag& (0+255),f,b
 41181  011CB0                     i2l20270:
 41182                           
 41183                           ; BSR set to: 0
 41184                           ;doprnt.c: 853: };doprnt.c: 854: eexp = 0;
 41185  011CB0  0E00               	movlw	0
 41186  011CB2  6F90               	movwf	(i2__doprnt@eexp+1)& (0+255),b
 41187  011CB4  0E00               	movlw	0
 41188  011CB6  6F8F               	movwf	i2__doprnt@eexp& (0+255),b
 41189                           
 41190                           ; BSR set to: 0
 41191                           ;doprnt.c: 855: if( fval!=0) {
 41192  011CB8  C095  F001         	movff	i2__doprnt@fval,i2___fleq@ff1
 41193  011CBC  C096  F002         	movff	i2__doprnt@fval+1,i2___fleq@ff1+1
 41194  011CC0  C097  F003         	movff	i2__doprnt@fval+2,i2___fleq@ff1+2
 41195  011CC4  C098  F004         	movff	i2__doprnt@fval+3,i2___fleq@ff1+3
 41196  011CC8  0E00               	movlw	0
 41197  011CCA  6E05               	movwf	i2___fleq@ff2,c
 41198  011CCC  0E00               	movlw	0
 41199  011CCE  6E06               	movwf	i2___fleq@ff2+1,c
 41200  011CD0  0E00               	movlw	0
 41201  011CD2  6E07               	movwf	i2___fleq@ff2+2,c
 41202  011CD4  0E00               	movlw	0
 41203  011CD6  6E08               	movwf	i2___fleq@ff2+3,c
 41204  011CD8  EC75  F0D7         	call	i2___fleq	;wreg free
 41205  011CDC  B0D8               	btfsc	status,0,c
 41206  011CDE  D083               	goto	i2l20298
 41207                           
 41208                           ;doprnt.c: 856: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
 41209  011CE0  0100               	movlb	0	; () banked
 41210  011CE2  3597               	rlcf	(i2__doprnt@fval+2)& (0+255),w,b
 41211  011CE4  3598               	rlcf	(i2__doprnt@fval+3)& (0+255),w,b
 41212  011CE6  0F82               	addlw	130
 41213  011CE8  6F8F               	movwf	i2__doprnt@eexp& (0+255),b
 41214  011CEA  6B90               	clrf	(i2__doprnt@eexp+1)& (0+255),b
 41215  011CEC  0EFF               	movlw	255
 41216  011CEE  2390               	addwfc	(i2__doprnt@eexp+1)& (0+255),f,b
 41217                           
 41218                           ; BSR set to: 0
 41219                           ;doprnt.c: 857: eexp--;
 41220  011CF0  078F               	decf	i2__doprnt@eexp& (0+255),f,b
 41221  011CF2  A0D8               	btfss	status,0,c
 41222  011CF4  0790               	decf	(i2__doprnt@eexp+1)& (0+255),f,b
 41223                           
 41224                           ; BSR set to: 0
 41225                           ;doprnt.c: 858: eexp *= 3;
 41226  011CF6  C08F  F001         	movff	i2__doprnt@eexp,i2___wmul@multiplier
 41227  011CFA  C090  F002         	movff	i2__doprnt@eexp+1,i2___wmul@multiplier+1
 41228  011CFE  0E00               	movlw	0
 41229  011D00  6E04               	movwf	i2___wmul@multiplicand+1,c
 41230  011D02  0E03               	movlw	3
 41231  011D04  6E03               	movwf	i2___wmul@multiplicand,c
 41232  011D06  EC91  F0E1         	call	i2___wmul	;wreg free
 41233  011D0A  C001  F08F         	movff	?i2___wmul,i2__doprnt@eexp
 41234  011D0E  C002  F090         	movff	?i2___wmul+1,i2__doprnt@eexp+1
 41235                           
 41236                           ;doprnt.c: 859: eexp /= 10;
 41237  011D12  C08F  F007         	movff	i2__doprnt@eexp,i2___awdiv@dividend
 41238  011D16  C090  F008         	movff	i2__doprnt@eexp+1,i2___awdiv@dividend+1
 41239  011D1A  0E00               	movlw	0
 41240  011D1C  6E0A               	movwf	i2___awdiv@divisor+1,c
 41241  011D1E  0E0A               	movlw	10
 41242  011D20  6E09               	movwf	i2___awdiv@divisor,c
 41243  011D22  EC3F  F0D8         	call	i2___awdiv	;wreg free
 41244  011D26  C007  F08F         	movff	?i2___awdiv,i2__doprnt@eexp
 41245  011D2A  C008  F090         	movff	?i2___awdiv+1,i2__doprnt@eexp+1
 41246                           
 41247                           ;doprnt.c: 860: if(eexp < 0)
 41248  011D2E  0100               	movlb	0	; () banked
 41249  011D30  AF90               	btfss	(i2__doprnt@eexp+1)& (0+255),7,b
 41250  011D32  D003               	goto	i2l20286
 41251                           
 41252                           ; BSR set to: 0
 41253                           ;doprnt.c: 861: eexp--;
 41254  011D34  078F               	decf	i2__doprnt@eexp& (0+255),f,b
 41255  011D36  A0D8               	btfss	status,0,c
 41256  011D38  0790               	decf	(i2__doprnt@eexp+1)& (0+255),f,b
 41257  011D3A                     i2l20286:
 41258                           
 41259                           ; BSR set to: 0
 41260                           ;doprnt.c: 865: tmpval.integ = scale(-eexp);
 41261  011D3A  518F               	movf	i2__doprnt@eexp& (0+255),w,b
 41262  011D3C  0800               	sublw	0
 41263  011D3E  EC0A  F0AC         	call	i2_scale
 41264  011D42  C045  F091         	movff	?i2_scale,i2__doprnt@tmpval
 41265  011D46  C046  F092         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 41266  011D4A  C047  F093         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 41267  011D4E  C048  F094         	movff	?i2_scale+3,i2__doprnt@tmpval+3
 41268                           
 41269                           ;doprnt.c: 866: tmpval.integ *= fval;
 41270  011D52  C091  F02C         	movff	i2__doprnt@tmpval,i2___flmul@b
 41271  011D56  C092  F02D         	movff	i2__doprnt@tmpval+1,i2___flmul@b+1
 41272  011D5A  C093  F02E         	movff	i2__doprnt@tmpval+2,i2___flmul@b+2
 41273  011D5E  C094  F02F         	movff	i2__doprnt@tmpval+3,i2___flmul@b+3
 41274  011D62  C095  F030         	movff	i2__doprnt@fval,i2___flmul@a
 41275  011D66  C096  F031         	movff	i2__doprnt@fval+1,i2___flmul@a+1
 41276  011D6A  C097  F032         	movff	i2__doprnt@fval+2,i2___flmul@a+2
 41277  011D6E  C098  F033         	movff	i2__doprnt@fval+3,i2___flmul@a+3
 41278  011D72  EC9C  F0B6         	call	i2___flmul	;wreg free
 41279  011D76  C02C  F091         	movff	?i2___flmul,i2__doprnt@tmpval
 41280  011D7A  C02D  F092         	movff	?i2___flmul+1,i2__doprnt@tmpval+1
 41281  011D7E  C02E  F093         	movff	?i2___flmul+2,i2__doprnt@tmpval+2
 41282  011D82  C02F  F094         	movff	?i2___flmul+3,i2__doprnt@tmpval+3
 41283                           
 41284                           ;doprnt.c: 867: if(tmpval.integ < 1.0)
 41285  011D86  C091  F001         	movff	i2__doprnt@tmpval,i2___flge@ff1
 41286  011D8A  C092  F002         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 41287  011D8E  C093  F003         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 41288  011D92  C094  F004         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 41289  011D96  0E00               	movlw	0
 41290  011D98  6E05               	movwf	i2___flge@ff2,c
 41291  011D9A  0E00               	movlw	0
 41292  011D9C  6E06               	movwf	i2___flge@ff2+1,c
 41293  011D9E  0E80               	movlw	128
 41294  011DA0  6E07               	movwf	i2___flge@ff2+2,c
 41295  011DA2  0E3F               	movlw	63
 41296  011DA4  6E08               	movwf	i2___flge@ff2+3,c
 41297  011DA6  ECC0  F0D2         	call	i2___flge	;wreg free
 41298  011DAA  B0D8               	btfsc	status,0,c
 41299  011DAC  D005               	goto	i2l20294
 41300                           
 41301                           ;doprnt.c: 868: eexp--;
 41302  011DAE  0100               	movlb	0	; () banked
 41303  011DB0  078F               	decf	i2__doprnt@eexp& (0+255),f,b
 41304  011DB2  A0D8               	btfss	status,0,c
 41305  011DB4  0790               	decf	(i2__doprnt@eexp+1)& (0+255),f,b
 41306  011DB6  D017               	goto	i2l20298
 41307  011DB8                     i2l20294:
 41308                           
 41309                           ;doprnt.c: 869: else if(tmpval.integ >= 10.0)
 41310  011DB8  C091  F001         	movff	i2__doprnt@tmpval,i2___flge@ff1
 41311  011DBC  C092  F002         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 41312  011DC0  C093  F003         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 41313  011DC4  C094  F004         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 41314  011DC8  0E00               	movlw	0
 41315  011DCA  6E05               	movwf	i2___flge@ff2,c
 41316  011DCC  0E00               	movlw	0
 41317  011DCE  6E06               	movwf	i2___flge@ff2+1,c
 41318  011DD0  0E20               	movlw	32
 41319  011DD2  6E07               	movwf	i2___flge@ff2+2,c
 41320  011DD4  0E41               	movlw	65
 41321  011DD6  6E08               	movwf	i2___flge@ff2+3,c
 41322  011DD8  ECC0  F0D2         	call	i2___flge	;wreg free
 41323  011DDC  A0D8               	btfss	status,0,c
 41324  011DDE  D003               	goto	i2l20298
 41325                           
 41326                           ;doprnt.c: 870: eexp++;
 41327  011DE0  0100               	movlb	0	; () banked
 41328  011DE2  4B8F               	infsnz	i2__doprnt@eexp& (0+255),f,b
 41329  011DE4  2B90               	incf	(i2__doprnt@eexp+1)& (0+255),f,b
 41330  011DE6                     i2l20298:
 41331                           
 41332                           ;doprnt.c: 871: };doprnt.c: 1131: if(prec <= 12)
 41333  011DE6  0100               	movlb	0	; () banked
 41334  011DE8  BFA0               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 41335  011DEA  D006               	goto	i2u2596_40
 41336  011DEC  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 41337  011DEE  E121               	bnz	i2l20302
 41338  011DF0  0E0D               	movlw	13
 41339  011DF2  5D9F               	subwf	i2__doprnt@prec& (0+255),w,b
 41340  011DF4  B0D8               	btfsc	status,0,c
 41341  011DF6  D01D               	goto	i2l20302
 41342  011DF8                     i2u2596_40:
 41343                           
 41344                           ; BSR set to: 0
 41345                           ;doprnt.c: 1132: fval += fround((unsigned int)prec);
 41346  011DF8  C095  F052         	movff	i2__doprnt@fval,i2___fladd@b
 41347  011DFC  C096  F053         	movff	i2__doprnt@fval+1,i2___fladd@b+1
 41348  011E00  C097  F054         	movff	i2__doprnt@fval+2,i2___fladd@b+2
 41349  011E04  C098  F055         	movff	i2__doprnt@fval+3,i2___fladd@b+3
 41350  011E08  519F               	movf	i2__doprnt@prec& (0+255),w,b
 41351  011E0A  ECA4  F0BF         	call	i2_fround
 41352  011E0E  C045  F056         	movff	?i2_fround,i2___fladd@a
 41353  011E12  C046  F057         	movff	?i2_fround+1,i2___fladd@a+1
 41354  011E16  C047  F058         	movff	?i2_fround+2,i2___fladd@a+2
 41355  011E1A  C048  F059         	movff	?i2_fround+3,i2___fladd@a+3
 41356  011E1E  EC53  F0BB         	call	i2___fladd	;wreg free
 41357  011E22  C052  F095         	movff	?i2___fladd,i2__doprnt@fval
 41358  011E26  C053  F096         	movff	?i2___fladd+1,i2__doprnt@fval+1
 41359  011E2A  C054  F097         	movff	?i2___fladd+2,i2__doprnt@fval+2
 41360  011E2E  C055  F098         	movff	?i2___fladd+3,i2__doprnt@fval+3
 41361  011E32                     i2l20302:
 41362                           
 41363                           ;doprnt.c: 1135: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
 41364  011E32  0100               	movlb	0	; () banked
 41365  011E34  BF90               	btfsc	(i2__doprnt@eexp+1)& (0+255),7,b
 41366  011E36  D006               	goto	i2u2597_40
 41367  011E38  5190               	movf	(i2__doprnt@eexp+1)& (0+255),w,b
 41368  011E3A  E131               	bnz	i2l20310
 41369  011E3C  0E0A               	movlw	10
 41370  011E3E  5D8F               	subwf	i2__doprnt@eexp& (0+255),w,b
 41371  011E40  B0D8               	btfsc	status,0,c
 41372  011E42  D02D               	goto	i2u2600_40
 41373  011E44                     i2u2597_40:
 41374                           
 41375                           ; BSR set to: 0
 41376  011E44  C095  F001         	movff	i2__doprnt@fval,i2___fleq@ff1
 41377  011E48  C096  F002         	movff	i2__doprnt@fval+1,i2___fleq@ff1+1
 41378  011E4C  C097  F003         	movff	i2__doprnt@fval+2,i2___fleq@ff1+2
 41379  011E50  C098  F004         	movff	i2__doprnt@fval+3,i2___fleq@ff1+3
 41380  011E54  0E00               	movlw	0
 41381  011E56  6E05               	movwf	i2___fleq@ff2,c
 41382  011E58  0E00               	movlw	0
 41383  011E5A  6E06               	movwf	i2___fleq@ff2+1,c
 41384  011E5C  0E00               	movlw	0
 41385  011E5E  6E07               	movwf	i2___fleq@ff2+2,c
 41386  011E60  0E00               	movlw	0
 41387  011E62  6E08               	movwf	i2___fleq@ff2+3,c
 41388  011E64  EC75  F0D7         	call	i2___fleq	;wreg free
 41389  011E68  B0D8               	btfsc	status,0,c
 41390  011E6A  D064               	goto	i2l20324
 41391  011E6C  C095  F04E         	movff	i2__doprnt@fval,i2___fltol@f1
 41392  011E70  C096  F04F         	movff	i2__doprnt@fval+1,i2___fltol@f1+1
 41393  011E74  C097  F050         	movff	i2__doprnt@fval+2,i2___fltol@f1+2
 41394  011E78  C098  F051         	movff	i2__doprnt@fval+3,i2___fltol@f1+3
 41395  011E7C  EC4D  F0D4         	call	i2___fltol	;wreg free
 41396  011E80  504E               	movf	?i2___fltol,w,c
 41397  011E82  104F               	iorwf	?i2___fltol+1,w,c
 41398  011E84  1050               	iorwf	?i2___fltol+2,w,c
 41399  011E86  1051               	iorwf	?i2___fltol+3,w,c
 41400  011E88  A4D8               	btfss	status,2,c
 41401  011E8A  D054               	goto	i2l20324
 41402  011E8C  0100               	movlb	0	; () banked
 41403  011E8E  BF90               	btfsc	(i2__doprnt@eexp+1)& (0+255),7,b
 41404  011E90  D051               	goto	i2l20324
 41405  011E92  5190               	movf	(i2__doprnt@eexp+1)& (0+255),w,b
 41406  011E94  E104               	bnz	i2u2600_40
 41407  011E96  0E02               	movlw	2
 41408  011E98  5D8F               	subwf	i2__doprnt@eexp& (0+255),w,b
 41409  011E9A  A0D8               	btfss	status,0,c
 41410  011E9C  D04B               	goto	i2l20324
 41411  011E9E                     i2u2600_40:
 41412  011E9E                     i2l20310:
 41413                           
 41414                           ; BSR set to: 0
 41415                           ;doprnt.c: 1139: if(tmpval.integ < 4.294967296){
 41416  011E9E  C091  F001         	movff	i2__doprnt@tmpval,i2___flge@ff1
 41417  011EA2  C092  F002         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 41418  011EA6  C093  F003         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 41419  011EAA  C094  F004         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 41420  011EAE  0E5F               	movlw	95
 41421  011EB0  6E05               	movwf	i2___flge@ff2,c
 41422  011EB2  0E70               	movlw	112
 41423  011EB4  6E06               	movwf	i2___flge@ff2+1,c
 41424  011EB6  0E89               	movlw	137
 41425  011EB8  6E07               	movwf	i2___flge@ff2+2,c
 41426  011EBA  0E40               	movlw	64
 41427  011EBC  6E08               	movwf	i2___flge@ff2+3,c
 41428  011EBE  ECC0  F0D2         	call	i2___flge	;wreg free
 41429  011EC2  B0D8               	btfsc	status,0,c
 41430  011EC4  D003               	goto	i2l20314
 41431                           
 41432                           ;doprnt.c: 1140: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
 41433  011EC6  0100               	movlb	0	; () banked
 41434  011EC8  0EF7               	movlw	247
 41435  011ECA  D002               	goto	L35
 41436  011ECC                     i2l20314:
 41437                           
 41438                           ;doprnt.c: 1142: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
 41439  011ECC  0100               	movlb	0	; () banked
 41440  011ECE  0EF8               	movlw	248
 41441  011ED0                     L35:
 41442  011ED0  278F               	addwf	i2__doprnt@eexp& (0+255),f,b
 41443  011ED2  0EFF               	movlw	255
 41444  011ED4  2390               	addwfc	(i2__doprnt@eexp+1)& (0+255),f,b
 41445                           
 41446                           ; BSR set to: 0
 41447                           ;doprnt.c: 1145: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 41448  011ED6  518F               	movf	i2__doprnt@eexp& (0+255),w,b
 41449  011ED8  EC0A  F0AC         	call	i2_scale
 41450  011EDC  C045  F091         	movff	?i2_scale,i2__doprnt@tmpval
 41451  011EE0  C046  F092         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 41452  011EE4  C047  F093         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 41453  011EE8  C048  F094         	movff	?i2_scale+3,i2__doprnt@tmpval+3
 41454  011EEC  C095  F001         	movff	i2__doprnt@fval,i2__div_to_l_@f1
 41455  011EF0  C096  F002         	movff	i2__doprnt@fval+1,i2__div_to_l_@f1+1
 41456  011EF4  C097  F003         	movff	i2__doprnt@fval+2,i2__div_to_l_@f1+2
 41457  011EF8  C098  F004         	movff	i2__doprnt@fval+3,i2__div_to_l_@f1+3
 41458  011EFC  C091  F005         	movff	i2__doprnt@tmpval,i2__div_to_l_@f2
 41459  011F00  C092  F006         	movff	i2__doprnt@tmpval+1,i2__div_to_l_@f2+1
 41460  011F04  C093  F007         	movff	i2__doprnt@tmpval+2,i2__div_to_l_@f2+2
 41461  011F08  C094  F008         	movff	i2__doprnt@tmpval+3,i2__div_to_l_@f2+3
 41462  011F0C  ECF1  F0D0         	call	i2__div_to_l_	;wreg free
 41463  011F10  C001  F099         	movff	?i2__div_to_l_,i2__doprnt@val
 41464  011F14  C002  F09A         	movff	?i2__div_to_l_+1,i2__doprnt@val+1
 41465  011F18  C003  F09B         	movff	?i2__div_to_l_+2,i2__doprnt@val+2
 41466  011F1C  C004  F09C         	movff	?i2__div_to_l_+3,i2__doprnt@val+3
 41467                           
 41468                           ;doprnt.c: 1148: fval = 0.0;
 41469  011F20  0E00               	movlw	0
 41470  011F22  0100               	movlb	0	; () banked
 41471  011F24  6F95               	movwf	i2__doprnt@fval& (0+255),b
 41472  011F26  0E00               	movlw	0
 41473  011F28  6F96               	movwf	(i2__doprnt@fval+1)& (0+255),b
 41474  011F2A  0E00               	movlw	0
 41475  011F2C  6F97               	movwf	(i2__doprnt@fval+2)& (0+255),b
 41476  011F2E  0E00               	movlw	0
 41477  011F30  6F98               	movwf	(i2__doprnt@fval+3)& (0+255),b
 41478                           
 41479                           ;doprnt.c: 1149: } else {
 41480  011F32  D03C               	goto	i2l20328
 41481  011F34                     i2l20324:
 41482                           
 41483                           ;doprnt.c: 1150: val = (unsigned long)fval;
 41484  011F34  C095  F04E         	movff	i2__doprnt@fval,i2___fltol@f1
 41485  011F38  C096  F04F         	movff	i2__doprnt@fval+1,i2___fltol@f1+1
 41486  011F3C  C097  F050         	movff	i2__doprnt@fval+2,i2___fltol@f1+2
 41487  011F40  C098  F051         	movff	i2__doprnt@fval+3,i2___fltol@f1+3
 41488  011F44  EC4D  F0D4         	call	i2___fltol	;wreg free
 41489  011F48  C04E  F099         	movff	?i2___fltol,i2__doprnt@val
 41490  011F4C  C04F  F09A         	movff	?i2___fltol+1,i2__doprnt@val+1
 41491  011F50  C050  F09B         	movff	?i2___fltol+2,i2__doprnt@val+2
 41492  011F54  C051  F09C         	movff	?i2___fltol+3,i2__doprnt@val+3
 41493                           
 41494                           ;doprnt.c: 1151: fval -= (double)val;
 41495  011F58  C095  F064         	movff	i2__doprnt@fval,i2___flsub@b
 41496  011F5C  C096  F065         	movff	i2__doprnt@fval+1,i2___flsub@b+1
 41497  011F60  C097  F066         	movff	i2__doprnt@fval+2,i2___flsub@b+2
 41498  011F64  C098  F067         	movff	i2__doprnt@fval+3,i2___flsub@b+3
 41499  011F68  C099  F005         	movff	i2__doprnt@val,i2___xxtofl@val
 41500  011F6C  C09A  F006         	movff	i2__doprnt@val+1,i2___xxtofl@val+1
 41501  011F70  C09B  F007         	movff	i2__doprnt@val+2,i2___xxtofl@val+2
 41502  011F74  C09C  F008         	movff	i2__doprnt@val+3,i2___xxtofl@val+3
 41503  011F78  0E00               	movlw	0
 41504  011F7A  ECCC  F0CD         	call	i2___xxtofl
 41505  011F7E  C005  F068         	movff	?i2___xxtofl,i2___flsub@a
 41506  011F82  C006  F069         	movff	?i2___xxtofl+1,i2___flsub@a+1
 41507  011F86  C007  F06A         	movff	?i2___xxtofl+2,i2___flsub@a+2
 41508  011F8A  C008  F06B         	movff	?i2___xxtofl+3,i2___flsub@a+3
 41509  011F8E  EC52  F0DD         	call	i2___flsub	;wreg free
 41510  011F92  C064  F095         	movff	?i2___flsub,i2__doprnt@fval
 41511  011F96  C065  F096         	movff	?i2___flsub+1,i2__doprnt@fval+1
 41512  011F9A  C066  F097         	movff	?i2___flsub+2,i2__doprnt@fval+2
 41513  011F9E  C067  F098         	movff	?i2___flsub+3,i2__doprnt@fval+3
 41514                           
 41515                           ;doprnt.c: 1152: eexp = 0;
 41516  011FA2  0E00               	movlw	0
 41517  011FA4  0100               	movlb	0	; () banked
 41518  011FA6  6F90               	movwf	(i2__doprnt@eexp+1)& (0+255),b
 41519  011FA8  0E00               	movlw	0
 41520  011FAA  6F8F               	movwf	i2__doprnt@eexp& (0+255),b
 41521  011FAC                     i2l20328:
 41522                           
 41523                           ; BSR set to: 0
 41524                           ;doprnt.c: 1153: };doprnt.c: 1155: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
 41525  011FAC  0E01               	movlw	1
 41526  011FAE  6FA3               	movwf	i2__doprnt@c& (0+255),b
 41527  011FB0                     i2l20334:
 41528                           
 41529                           ; BSR set to: 0
 41530                           ;doprnt.c: 1156: if(val < dpowers[c])
 41531  011FB0  51A3               	movf	i2__doprnt@c& (0+255),w,b
 41532  011FB2  0D04               	mullw	4
 41533  011FB4  0E47               	movlw	low _dpowers
 41534  011FB6  24F3               	addwf	prodl,w,c
 41535  011FB8  6EF6               	movwf	tblptrl,c
 41536  011FBA  0EE8               	movlw	high _dpowers
 41537  011FBC  20F4               	addwfc	prodh,w,c
 41538  011FBE  6EF7               	movwf	tblptrh,c
 41539  011FC0                     	if	1	;There are 3 active tblptr bytes
 41540  011FC0  6AF8               	clrf	tblptru,c
 41541  011FC2  0E00               	movlw	low (__mediumconst shr (0+16))
 41542  011FC4  22F8               	addwfc	tblptru,f,c
 41543  011FC6                     	endif
 41544  011FC6  0009               	tblrd		*+
 41545  011FC8  50F5               	movf	tablat,w,c
 41546  011FCA  5D99               	subwf	i2__doprnt@val& (0+255),w,b
 41547  011FCC  0009               	tblrd		*+
 41548  011FCE  50F5               	movf	tablat,w,c
 41549  011FD0  599A               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 41550  011FD2  0009               	tblrd		*+
 41551  011FD4  50F5               	movf	tablat,w,c
 41552  011FD6  599B               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 41553  011FD8  0009               	tblrd		*+
 41554  011FDA  50F5               	movf	tablat,w,c
 41555  011FDC  599C               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 41556  011FDE  A0D8               	btfss	status,0,c
 41557  011FE0  D005               	goto	i2u2603_40
 41558                           
 41559                           ; BSR set to: 0
 41560  011FE2  2BA3               	incf	i2__doprnt@c& (0+255),f,b
 41561                           
 41562                           ; BSR set to: 0
 41563  011FE4  0E0A               	movlw	10
 41564  011FE6  19A3               	xorwf	i2__doprnt@c& (0+255),w,b
 41565  011FE8  A4D8               	btfss	status,2,c
 41566  011FEA  D7E2               	goto	i2l20334
 41567  011FEC                     i2u2603_40:
 41568                           
 41569                           ; BSR set to: 0
 41570                           ;doprnt.c: 1161: width -= prec + c + eexp;
 41571  011FEC  51A3               	movf	i2__doprnt@c& (0+255),w,b
 41572  011FEE  259F               	addwf	i2__doprnt@prec& (0+255),w,b
 41573  011FF0  6F72               	movwf	??i2__doprnt& (0+255),b
 41574  011FF2  0E00               	movlw	0
 41575  011FF4  21A0               	addwfc	(i2__doprnt@prec+1)& (0+255),w,b
 41576  011FF6  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 41577  011FF8  518F               	movf	i2__doprnt@eexp& (0+255),w,b
 41578  011FFA  2772               	addwf	??i2__doprnt& (0+255),f,b
 41579  011FFC  5190               	movf	(i2__doprnt@eexp+1)& (0+255),w,b
 41580  011FFE  2373               	addwfc	(??i2__doprnt+1)& (0+255),f,b
 41581  012000  5172               	movf	??i2__doprnt& (0+255),w,b
 41582  012002  5F9D               	subwf	i2__doprnt@width& (0+255),f,b
 41583  012004  5173               	movf	(??i2__doprnt+1)& (0+255),w,b
 41584  012006  5B9E               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 41585                           
 41586                           ;doprnt.c: 1162: if(;doprnt.c: 1166: prec)
 41587  012008  519F               	movf	i2__doprnt@prec& (0+255),w,b
 41588  01200A  11A0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 41589  01200C  B4D8               	btfsc	status,2,c
 41590  01200E  D003               	goto	i2l20346
 41591                           
 41592                           ; BSR set to: 0
 41593                           ;doprnt.c: 1167: width--;
 41594  012010  079D               	decf	i2__doprnt@width& (0+255),f,b
 41595  012012  A0D8               	btfss	status,0,c
 41596  012014  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 41597  012016                     i2l20346:
 41598                           
 41599                           ; BSR set to: 0
 41600                           ;doprnt.c: 1168: if(flag & 0x03)
 41601  012016  0E03               	movlw	3
 41602  012018  15A1               	andwf	i2__doprnt@flag& (0+255),w,b
 41603  01201A  6F72               	movwf	??i2__doprnt& (0+255),b
 41604  01201C  0E00               	movlw	0
 41605  01201E  15A2               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 41606  012020  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 41607  012022  5172               	movf	??i2__doprnt& (0+255),w,b
 41608  012024  1173               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 41609  012026  B4D8               	btfsc	status,2,c
 41610  012028  D003               	goto	i2l20350
 41611                           
 41612                           ; BSR set to: 0
 41613                           ;doprnt.c: 1169: width--;
 41614  01202A  079D               	decf	i2__doprnt@width& (0+255),f,b
 41615  01202C  A0D8               	btfss	status,0,c
 41616  01202E  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 41617  012030                     i2l20350:
 41618                           
 41619                           ; BSR set to: 0
 41620                           ;doprnt.c: 1172: if(flag & 0x04) {
 41621  012030  A5A1               	btfss	i2__doprnt@flag& (0+255),2,b
 41622  012032  D0F0               	goto	i2l20402
 41623                           
 41624                           ; BSR set to: 0
 41625                           ;doprnt.c: 1174: if(flag & 0x02)
 41626  012034  A3A1               	btfss	i2__doprnt@flag& (0+255),1,b
 41627  012036  D041               	goto	i2l2489
 41628                           
 41629                           ; BSR set to: 0
 41630  012038  EE20 F002          	lfsr	2,2
 41631  01203C  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41632  01203E  26D9               	addwf	fsr2l,f,c
 41633  012040  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41634  012042  22DA               	addwfc	fsr2h,f,c
 41635  012044  50DE               	movf	postinc2,w,c
 41636  012046  10DE               	iorwf	postinc2,w,c
 41637  012048  10DE               	iorwf	postinc2,w,c
 41638  01204A  B4D8               	btfsc	status,2,c
 41639  01204C  D01D               	goto	i2l2491
 41640                           
 41641                           ; BSR set to: 0
 41642  01204E  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 41643  012050  D004               	goto	i2l20360
 41644                           
 41645                           ; BSR set to: 0
 41646  012052  0E00               	movlw	0
 41647  012054  6F7C               	movwf	(i2__doprnt$4975+1)& (0+255),b
 41648  012056  0E2B               	movlw	43
 41649  012058  D003               	goto	L36
 41650  01205A                     i2l20360:
 41651                           
 41652                           ; BSR set to: 0
 41653  01205A  0E00               	movlw	0
 41654  01205C  6F7C               	movwf	(i2__doprnt$4975+1)& (0+255),b
 41655  01205E  0E2D               	movlw	45
 41656  012060                     L36:
 41657  012060  6F7B               	movwf	i2__doprnt$4975& (0+255),b
 41658                           
 41659                           ; BSR set to: 0
 41660  012062  EE20 F002          	lfsr	2,2
 41661  012066  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41662  012068  26D9               	addwf	fsr2l,f,c
 41663  01206A  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41664  01206C  22DA               	addwfc	fsr2h,f,c
 41665  01206E  D801               	call	i2u2610_48
 41666  012070  D091               	goto	i2l20390
 41667  012072                     i2u2610_48:
 41668  012072  0005               	push	
 41669  012074  6EFA               	movwf	pclath,c
 41670  012076  50DE               	movf	postinc2,w,c
 41671  012078  6EFD               	movwf	tosl,c
 41672  01207A  50DE               	movf	postinc2,w,c
 41673  01207C  6EFE               	movwf	tosh,c
 41674  01207E  50DE               	movf	postinc2,w,c
 41675  012080  6EFF               	movwf	tosu,c
 41676  012082  50FA               	movf	pclath,w,c
 41677  012084  517B               	movf	i2__doprnt$4975& (0+255),w,b
 41678  012086  0012               	return		;indir
 41679  012088                     i2l2491:
 41680                           
 41681                           ; BSR set to: 0
 41682  012088  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 41683  01208A  D004               	goto	i2l20366
 41684                           
 41685                           ; BSR set to: 0
 41686  01208C  0E00               	movlw	0
 41687  01208E  6F7E               	movwf	(i2__doprnt$4976+1)& (0+255),b
 41688  012090  0E2B               	movlw	43
 41689  012092  D003               	goto	L37
 41690  012094                     i2l20366:
 41691                           
 41692                           ; BSR set to: 0
 41693  012094  0E00               	movlw	0
 41694  012096  6F7E               	movwf	(i2__doprnt$4976+1)& (0+255),b
 41695  012098  0E2D               	movlw	45
 41696  01209A                     L37:
 41697  01209A  6F7D               	movwf	i2__doprnt$4976& (0+255),b
 41698                           
 41699                           ; BSR set to: 0
 41700  01209C  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41701  0120A0  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41702  0120A4  CFDE F072          	movff	postinc2,??i2__doprnt
 41703  0120A8  CFDD F073          	movff	postdec2,??i2__doprnt+1
 41704  0120AC  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41705  0120B0  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41706  0120B4  C07D  FFDF         	movff	i2__doprnt$4976,indf2
 41707  0120B8  D02E               	goto	i2l20378
 41708  0120BA                     i2l2489:
 41709                           
 41710                           ; BSR set to: 0
 41711                           ;doprnt.c: 1180: else;doprnt.c: 1183: if(flag & 0x01)
 41712  0120BA  A1A1               	btfss	i2__doprnt@flag& (0+255),0,b
 41713  0120BC  D06B               	goto	i2l20390
 41714                           
 41715                           ; BSR set to: 0
 41716  0120BE  EE20 F002          	lfsr	2,2
 41717  0120C2  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41718  0120C4  26D9               	addwf	fsr2l,f,c
 41719  0120C6  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41720  0120C8  22DA               	addwfc	fsr2h,f,c
 41721  0120CA  50DE               	movf	postinc2,w,c
 41722  0120CC  10DE               	iorwf	postinc2,w,c
 41723  0120CE  10DE               	iorwf	postinc2,w,c
 41724  0120D0  B4D8               	btfsc	status,2,c
 41725  0120D2  D013               	goto	i2l20376
 41726                           
 41727                           ; BSR set to: 0
 41728  0120D4  EE20 F002          	lfsr	2,2
 41729  0120D8  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41730  0120DA  26D9               	addwf	fsr2l,f,c
 41731  0120DC  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41732  0120DE  22DA               	addwfc	fsr2h,f,c
 41733  0120E0  D801               	call	i2u2614_48
 41734  0120E2  D058               	goto	i2l20390
 41735  0120E4                     i2u2614_48:
 41736  0120E4  0005               	push	
 41737  0120E6  6EFA               	movwf	pclath,c
 41738  0120E8  50DE               	movf	postinc2,w,c
 41739  0120EA  6EFD               	movwf	tosl,c
 41740  0120EC  50DE               	movf	postinc2,w,c
 41741  0120EE  6EFE               	movwf	tosh,c
 41742  0120F0  50DE               	movf	postinc2,w,c
 41743  0120F2  6EFF               	movwf	tosu,c
 41744  0120F4  50FA               	movf	pclath,w,c
 41745  0120F6  0E20               	movlw	32
 41746  0120F8  0012               	return		;indir
 41747  0120FA                     i2l20376:
 41748                           
 41749                           ; BSR set to: 0
 41750  0120FA  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41751  0120FE  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41752  012102  CFDE F072          	movff	postinc2,??i2__doprnt
 41753  012106  CFDD F073          	movff	postdec2,??i2__doprnt+1
 41754  01210A  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41755  01210E  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41756  012112  0E20               	movlw	32
 41757  012114  6EDF               	movwf	indf2,c
 41758  012116                     i2l20378:
 41759                           
 41760                           ; BSR set to: 0
 41761  012116  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41762  01211A  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41763  01211E  2ADE               	incf	postinc2,f,c
 41764  012120  0E00               	movlw	0
 41765  012122  22DD               	addwfc	postdec2,f,c
 41766  012124  D037               	goto	i2l20390
 41767  012126                     i2l20380:
 41768                           
 41769                           ; BSR set to: 0
 41770  012126  EE20 F002          	lfsr	2,2
 41771  01212A  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41772  01212C  26D9               	addwf	fsr2l,f,c
 41773  01212E  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41774  012130  22DA               	addwfc	fsr2h,f,c
 41775  012132  50DE               	movf	postinc2,w,c
 41776  012134  10DE               	iorwf	postinc2,w,c
 41777  012136  10DE               	iorwf	postinc2,w,c
 41778  012138  B4D8               	btfsc	status,2,c
 41779  01213A  D013               	goto	i2l20384
 41780                           
 41781                           ; BSR set to: 0
 41782  01213C  EE20 F002          	lfsr	2,2
 41783  012140  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41784  012142  26D9               	addwf	fsr2l,f,c
 41785  012144  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41786  012146  22DA               	addwfc	fsr2h,f,c
 41787  012148  D801               	call	i2u2616_48
 41788  01214A  D020               	goto	i2l20388
 41789  01214C                     i2u2616_48:
 41790  01214C  0005               	push	
 41791  01214E  6EFA               	movwf	pclath,c
 41792  012150  50DE               	movf	postinc2,w,c
 41793  012152  6EFD               	movwf	tosl,c
 41794  012154  50DE               	movf	postinc2,w,c
 41795  012156  6EFE               	movwf	tosh,c
 41796  012158  50DE               	movf	postinc2,w,c
 41797  01215A  6EFF               	movwf	tosu,c
 41798  01215C  50FA               	movf	pclath,w,c
 41799  01215E  0E30               	movlw	48
 41800  012160  0012               	return		;indir
 41801  012162                     i2l20384:
 41802                           
 41803                           ; BSR set to: 0
 41804  012162  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41805  012166  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41806  01216A  CFDE F072          	movff	postinc2,??i2__doprnt
 41807  01216E  CFDD F073          	movff	postdec2,??i2__doprnt+1
 41808  012172  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41809  012176  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41810  01217A  0E30               	movlw	48
 41811  01217C  6EDF               	movwf	indf2,c
 41812                           
 41813                           ; BSR set to: 0
 41814  01217E  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41815  012182  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41816  012186  2ADE               	incf	postinc2,f,c
 41817  012188  0E00               	movlw	0
 41818  01218A  22DD               	addwfc	postdec2,f,c
 41819  01218C                     i2l20388:
 41820                           
 41821                           ;doprnt.c: 1189: width--;
 41822  01218C  0100               	movlb	0	; () banked
 41823  01218E  079D               	decf	i2__doprnt@width& (0+255),f,b
 41824  012190  A0D8               	btfss	status,0,c
 41825  012192  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 41826  012194                     i2l20390:
 41827  012194  0100               	movlb	0	; () banked
 41828  012196  BF9E               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 41829  012198  D12E               	goto	i2l20440
 41830  01219A  519E               	movf	(i2__doprnt@width+1)& (0+255),w,b
 41831  01219C  E1C4               	bnz	i2l20380
 41832  01219E  059D               	decf	i2__doprnt@width& (0+255),w,b
 41833  0121A0  A0D8               	btfss	status,0,c
 41834  0121A2  D129               	goto	i2l20440
 41835  0121A4  D7C0               	goto	i2l20380
 41836  0121A6                     i2l20392:
 41837                           
 41838                           ; BSR set to: 0
 41839  0121A6  EE20 F002          	lfsr	2,2
 41840  0121AA  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41841  0121AC  26D9               	addwf	fsr2l,f,c
 41842  0121AE  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41843  0121B0  22DA               	addwfc	fsr2h,f,c
 41844  0121B2  50DE               	movf	postinc2,w,c
 41845  0121B4  10DE               	iorwf	postinc2,w,c
 41846  0121B6  10DE               	iorwf	postinc2,w,c
 41847  0121B8  B4D8               	btfsc	status,2,c
 41848  0121BA  D013               	goto	i2l20396
 41849                           
 41850                           ; BSR set to: 0
 41851  0121BC  EE20 F002          	lfsr	2,2
 41852  0121C0  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41853  0121C2  26D9               	addwf	fsr2l,f,c
 41854  0121C4  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41855  0121C6  22DA               	addwfc	fsr2h,f,c
 41856  0121C8  D801               	call	i2u2619_48
 41857  0121CA  D020               	goto	i2l20400
 41858  0121CC                     i2u2619_48:
 41859  0121CC  0005               	push	
 41860  0121CE  6EFA               	movwf	pclath,c
 41861  0121D0  50DE               	movf	postinc2,w,c
 41862  0121D2  6EFD               	movwf	tosl,c
 41863  0121D4  50DE               	movf	postinc2,w,c
 41864  0121D6  6EFE               	movwf	tosh,c
 41865  0121D8  50DE               	movf	postinc2,w,c
 41866  0121DA  6EFF               	movwf	tosu,c
 41867  0121DC  50FA               	movf	pclath,w,c
 41868  0121DE  0E20               	movlw	32
 41869  0121E0  0012               	return		;indir
 41870  0121E2                     i2l20396:
 41871                           
 41872                           ; BSR set to: 0
 41873  0121E2  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41874  0121E6  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41875  0121EA  CFDE F072          	movff	postinc2,??i2__doprnt
 41876  0121EE  CFDD F073          	movff	postdec2,??i2__doprnt+1
 41877  0121F2  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41878  0121F6  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41879  0121FA  0E20               	movlw	32
 41880  0121FC  6EDF               	movwf	indf2,c
 41881                           
 41882                           ; BSR set to: 0
 41883  0121FE  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41884  012202  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41885  012206  2ADE               	incf	postinc2,f,c
 41886  012208  0E00               	movlw	0
 41887  01220A  22DD               	addwfc	postdec2,f,c
 41888  01220C                     i2l20400:
 41889                           
 41890                           ;doprnt.c: 1201: width--;
 41891  01220C  0100               	movlb	0	; () banked
 41892  01220E  079D               	decf	i2__doprnt@width& (0+255),f,b
 41893  012210  A0D8               	btfss	status,0,c
 41894  012212  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 41895  012214                     i2l20402:
 41896                           
 41897                           ; BSR set to: 0
 41898  012214  BF9E               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 41899  012216  D005               	goto	i2u2620_40
 41900  012218  519E               	movf	(i2__doprnt@width+1)& (0+255),w,b
 41901  01221A  E1C5               	bnz	i2l20392
 41902  01221C  059D               	decf	i2__doprnt@width& (0+255),w,b
 41903  01221E  B0D8               	btfsc	status,0,c
 41904  012220  D7C2               	goto	i2l20392
 41905  012222                     i2u2620_40:
 41906                           
 41907                           ; BSR set to: 0
 41908                           ;doprnt.c: 1202: };doprnt.c: 1205: if(flag & 0x02)
 41909  012222  A3A1               	btfss	i2__doprnt@flag& (0+255),1,b
 41910  012224  D041               	goto	i2l2523
 41911                           
 41912                           ; BSR set to: 0
 41913  012226  EE20 F002          	lfsr	2,2
 41914  01222A  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41915  01222C  26D9               	addwf	fsr2l,f,c
 41916  01222E  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41917  012230  22DA               	addwfc	fsr2h,f,c
 41918  012232  50DE               	movf	postinc2,w,c
 41919  012234  10DE               	iorwf	postinc2,w,c
 41920  012236  10DE               	iorwf	postinc2,w,c
 41921  012238  B4D8               	btfsc	status,2,c
 41922  01223A  D01D               	goto	i2l2525
 41923                           
 41924                           ; BSR set to: 0
 41925  01223C  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 41926  01223E  D004               	goto	i2l20410
 41927                           
 41928                           ; BSR set to: 0
 41929  012240  0E00               	movlw	0
 41930  012242  6F80               	movwf	(i2__doprnt$4977+1)& (0+255),b
 41931  012244  0E2B               	movlw	43
 41932  012246  D003               	goto	L38
 41933  012248                     i2l20410:
 41934                           
 41935                           ; BSR set to: 0
 41936  012248  0E00               	movlw	0
 41937  01224A  6F80               	movwf	(i2__doprnt$4977+1)& (0+255),b
 41938  01224C  0E2D               	movlw	45
 41939  01224E                     L38:
 41940  01224E  6F7F               	movwf	i2__doprnt$4977& (0+255),b
 41941                           
 41942                           ; BSR set to: 0
 41943  012250  EE20 F002          	lfsr	2,2
 41944  012254  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41945  012256  26D9               	addwf	fsr2l,f,c
 41946  012258  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41947  01225A  22DA               	addwfc	fsr2h,f,c
 41948  01225C  D801               	call	i2u2624_48
 41949  01225E  D0CB               	goto	i2l20440
 41950  012260                     i2u2624_48:
 41951  012260  0005               	push	
 41952  012262  6EFA               	movwf	pclath,c
 41953  012264  50DE               	movf	postinc2,w,c
 41954  012266  6EFD               	movwf	tosl,c
 41955  012268  50DE               	movf	postinc2,w,c
 41956  01226A  6EFE               	movwf	tosh,c
 41957  01226C  50DE               	movf	postinc2,w,c
 41958  01226E  6EFF               	movwf	tosu,c
 41959  012270  50FA               	movf	pclath,w,c
 41960  012272  517F               	movf	i2__doprnt$4977& (0+255),w,b
 41961  012274  0012               	return		;indir
 41962  012276                     i2l2525:
 41963                           
 41964                           ; BSR set to: 0
 41965  012276  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 41966  012278  D004               	goto	i2l20416
 41967                           
 41968                           ; BSR set to: 0
 41969  01227A  0E00               	movlw	0
 41970  01227C  6F82               	movwf	(i2__doprnt$4978+1)& (0+255),b
 41971  01227E  0E2B               	movlw	43
 41972  012280  D003               	goto	L39
 41973  012282                     i2l20416:
 41974                           
 41975                           ; BSR set to: 0
 41976  012282  0E00               	movlw	0
 41977  012284  6F82               	movwf	(i2__doprnt$4978+1)& (0+255),b
 41978  012286  0E2D               	movlw	45
 41979  012288                     L39:
 41980  012288  6F81               	movwf	i2__doprnt$4978& (0+255),b
 41981                           
 41982                           ; BSR set to: 0
 41983  01228A  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41984  01228E  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41985  012292  CFDE F072          	movff	postinc2,??i2__doprnt
 41986  012296  CFDD F073          	movff	postdec2,??i2__doprnt+1
 41987  01229A  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41988  01229E  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41989  0122A2  C081  FFDF         	movff	i2__doprnt$4978,indf2
 41990  0122A6  D0A0               	goto	L40
 41991  0122A8                     i2l2523:
 41992                           
 41993                           ; BSR set to: 0
 41994                           ;doprnt.c: 1211: else if(flag & 0x01)
 41995  0122A8  A1A1               	btfss	i2__doprnt@flag& (0+255),0,b
 41996  0122AA  D0A5               	goto	i2l20440
 41997                           
 41998                           ; BSR set to: 0
 41999  0122AC  EE20 F002          	lfsr	2,2
 42000  0122B0  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42001  0122B2  26D9               	addwf	fsr2l,f,c
 42002  0122B4  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42003  0122B6  22DA               	addwfc	fsr2h,f,c
 42004  0122B8  50DE               	movf	postinc2,w,c
 42005  0122BA  10DE               	iorwf	postinc2,w,c
 42006  0122BC  10DE               	iorwf	postinc2,w,c
 42007  0122BE  B4D8               	btfsc	status,2,c
 42008  0122C0  D013               	goto	i2l20426
 42009                           
 42010                           ; BSR set to: 0
 42011  0122C2  EE20 F002          	lfsr	2,2
 42012  0122C6  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42013  0122C8  26D9               	addwf	fsr2l,f,c
 42014  0122CA  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42015  0122CC  22DA               	addwfc	fsr2h,f,c
 42016  0122CE  D801               	call	i2u2628_48
 42017  0122D0  D092               	goto	i2l20440
 42018  0122D2                     i2u2628_48:
 42019  0122D2  0005               	push	
 42020  0122D4  6EFA               	movwf	pclath,c
 42021  0122D6  50DE               	movf	postinc2,w,c
 42022  0122D8  6EFD               	movwf	tosl,c
 42023  0122DA  50DE               	movf	postinc2,w,c
 42024  0122DC  6EFE               	movwf	tosh,c
 42025  0122DE  50DE               	movf	postinc2,w,c
 42026  0122E0  6EFF               	movwf	tosu,c
 42027  0122E2  50FA               	movf	pclath,w,c
 42028  0122E4  0E20               	movlw	32
 42029  0122E6  0012               	return		;indir
 42030  0122E8                     i2l20426:
 42031                           
 42032                           ; BSR set to: 0
 42033  0122E8  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42034  0122EC  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42035  0122F0  CFDE F072          	movff	postinc2,??i2__doprnt
 42036  0122F4  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42037  0122F8  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42038  0122FC  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42039  012300  0E20               	movlw	32
 42040  012302  D071               	goto	L60
 42041  012304                     i2l20430:
 42042                           
 42043                           ; BSR set to: 0
 42044                           ;doprnt.c: 1219: {;doprnt.c: 1220: tmpval.vd = val/dpowers[c];
 42045  012304  C099  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 42046  012308  C09A  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 42047  01230C  C09B  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 42048  012310  C09C  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 42049  012314  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42050  012316  0D04               	mullw	4
 42051  012318  0E47               	movlw	low _dpowers
 42052  01231A  24F3               	addwf	prodl,w,c
 42053  01231C  6EF6               	movwf	tblptrl,c
 42054  01231E  0EE8               	movlw	high _dpowers
 42055  012320  20F4               	addwfc	prodh,w,c
 42056  012322  6EF7               	movwf	tblptrh,c
 42057  012324                     	if	1	;There are 3 active tblptr bytes
 42058  012324  6AF8               	clrf	tblptru,c
 42059  012326  0E00               	movlw	low (__mediumconst shr (0+16))
 42060  012328  22F8               	addwfc	tblptru,f,c
 42061  01232A                     	endif
 42062  01232A  0009               	tblrd		*+
 42063  01232C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 42064  012330  0009               	tblrd		*+
 42065  012332  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 42066  012336  0009               	tblrd		*+
 42067  012338  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 42068  01233C  000A               	tblrd		*-
 42069  01233E  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 42070  012342  EC81  F0D8         	call	i2___lldiv
 42071  012346  C001  F091         	movff	?i2___lldiv,i2__doprnt@tmpval
 42072  01234A  C002  F092         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 42073  01234E  C003  F093         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 42074  012352  C004  F094         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 42075                           
 42076                           ;doprnt.c: 1221: tmpval.vd %= 10;
 42077  012356  C091  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 42078  01235A  C092  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 42079  01235E  C093  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 42080  012362  C094  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 42081  012366  0E0A               	movlw	10
 42082  012368  6E12               	movwf	i2___llmod@divisor,c
 42083  01236A  0E00               	movlw	0
 42084  01236C  6E13               	movwf	i2___llmod@divisor+1,c
 42085  01236E  0E00               	movlw	0
 42086  012370  6E14               	movwf	i2___llmod@divisor+2,c
 42087  012372  0E00               	movlw	0
 42088  012374  6E15               	movwf	i2___llmod@divisor+3,c
 42089  012376  EC06  F0DA         	call	i2___llmod	;wreg free
 42090  01237A  C00E  F091         	movff	?i2___llmod,i2__doprnt@tmpval
 42091  01237E  C00F  F092         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 42092  012382  C010  F093         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 42093  012386  C011  F094         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 42094  01238A  0100               	movlb	0	; () banked
 42095  01238C  EE20 F002          	lfsr	2,2
 42096  012390  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42097  012392  26D9               	addwf	fsr2l,f,c
 42098  012394  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42099  012396  22DA               	addwfc	fsr2h,f,c
 42100  012398  50DE               	movf	postinc2,w,c
 42101  01239A  10DE               	iorwf	postinc2,w,c
 42102  01239C  10DE               	iorwf	postinc2,w,c
 42103  01239E  B4D8               	btfsc	status,2,c
 42104  0123A0  D014               	goto	i2l20438
 42105                           
 42106                           ; BSR set to: 0
 42107  0123A2  EE20 F002          	lfsr	2,2
 42108  0123A6  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42109  0123A8  26D9               	addwf	fsr2l,f,c
 42110  0123AA  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42111  0123AC  22DA               	addwfc	fsr2h,f,c
 42112  0123AE  D801               	call	i2u2630_48
 42113  0123B0  D022               	goto	i2l20440
 42114  0123B2                     i2u2630_48:
 42115  0123B2  0005               	push	
 42116  0123B4  6EFA               	movwf	pclath,c
 42117  0123B6  50DE               	movf	postinc2,w,c
 42118  0123B8  6EFD               	movwf	tosl,c
 42119  0123BA  50DE               	movf	postinc2,w,c
 42120  0123BC  6EFE               	movwf	tosh,c
 42121  0123BE  50DE               	movf	postinc2,w,c
 42122  0123C0  6EFF               	movwf	tosu,c
 42123  0123C2  50FA               	movf	pclath,w,c
 42124  0123C4  5191               	movf	i2__doprnt@tmpval& (0+255),w,b
 42125  0123C6  0F30               	addlw	48
 42126  0123C8  0012               	return		;indir
 42127  0123CA                     i2l20438:
 42128                           
 42129                           ; BSR set to: 0
 42130  0123CA  5191               	movf	i2__doprnt@tmpval& (0+255),w,b
 42131  0123CC  0F30               	addlw	48
 42132  0123CE  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42133  0123D2  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42134  0123D6  CFDE F072          	movff	postinc2,??i2__doprnt
 42135  0123DA  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42136  0123DE  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42137  0123E2  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42138  0123E6                     L60:
 42139  0123E6  6EDF               	movwf	indf2,c
 42140  0123E8                     L40:
 42141  0123E8  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42142  0123EC  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42143  0123F0  2ADE               	incf	postinc2,f,c
 42144  0123F2  0E00               	movlw	0
 42145  0123F4  22DD               	addwfc	postdec2,f,c
 42146  0123F6                     i2l20440:
 42147  0123F6  0100               	movlb	0	; () banked
 42148  0123F8  07A3               	decf	i2__doprnt@c& (0+255),f,b
 42149  0123FA  29A3               	incf	i2__doprnt@c& (0+255),w,b
 42150  0123FC  B4D8               	btfsc	status,2,c
 42151  0123FE  D038               	goto	i2l20452
 42152  012400  D781               	goto	i2l20430
 42153  012402                     i2l20442:
 42154                           
 42155                           ; BSR set to: 0
 42156  012402  EE20 F002          	lfsr	2,2
 42157  012406  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42158  012408  26D9               	addwf	fsr2l,f,c
 42159  01240A  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42160  01240C  22DA               	addwfc	fsr2h,f,c
 42161  01240E  50DE               	movf	postinc2,w,c
 42162  012410  10DE               	iorwf	postinc2,w,c
 42163  012412  10DE               	iorwf	postinc2,w,c
 42164  012414  B4D8               	btfsc	status,2,c
 42165  012416  D013               	goto	i2l20446
 42166                           
 42167                           ; BSR set to: 0
 42168  012418  EE20 F002          	lfsr	2,2
 42169  01241C  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42170  01241E  26D9               	addwf	fsr2l,f,c
 42171  012420  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42172  012422  22DA               	addwfc	fsr2h,f,c
 42173  012424  D801               	call	i2u2633_48
 42174  012426  D020               	goto	i2l20450
 42175  012428                     i2u2633_48:
 42176  012428  0005               	push	
 42177  01242A  6EFA               	movwf	pclath,c
 42178  01242C  50DE               	movf	postinc2,w,c
 42179  01242E  6EFD               	movwf	tosl,c
 42180  012430  50DE               	movf	postinc2,w,c
 42181  012432  6EFE               	movwf	tosh,c
 42182  012434  50DE               	movf	postinc2,w,c
 42183  012436  6EFF               	movwf	tosu,c
 42184  012438  50FA               	movf	pclath,w,c
 42185  01243A  0E30               	movlw	48
 42186  01243C  0012               	return		;indir
 42187  01243E                     i2l20446:
 42188                           
 42189                           ; BSR set to: 0
 42190  01243E  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42191  012442  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42192  012446  CFDE F072          	movff	postinc2,??i2__doprnt
 42193  01244A  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42194  01244E  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42195  012452  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42196  012456  0E30               	movlw	48
 42197  012458  6EDF               	movwf	indf2,c
 42198                           
 42199                           ; BSR set to: 0
 42200  01245A  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42201  01245E  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42202  012462  2ADE               	incf	postinc2,f,c
 42203  012464  0E00               	movlw	0
 42204  012466  22DD               	addwfc	postdec2,f,c
 42205  012468                     i2l20450:
 42206                           
 42207                           ;doprnt.c: 1228: eexp--;
 42208  012468  0100               	movlb	0	; () banked
 42209  01246A  078F               	decf	i2__doprnt@eexp& (0+255),f,b
 42210  01246C  A0D8               	btfss	status,0,c
 42211  01246E  0790               	decf	(i2__doprnt@eexp+1)& (0+255),f,b
 42212  012470                     i2l20452:
 42213                           
 42214                           ; BSR set to: 0
 42215  012470  BF90               	btfsc	(i2__doprnt@eexp+1)& (0+255),7,b
 42216  012472  D005               	goto	i2u2634_40
 42217  012474  5190               	movf	(i2__doprnt@eexp+1)& (0+255),w,b
 42218  012476  E1C5               	bnz	i2l20442
 42219  012478  058F               	decf	i2__doprnt@eexp& (0+255),w,b
 42220  01247A  B0D8               	btfsc	status,0,c
 42221  01247C  D7C2               	goto	i2l20442
 42222  01247E                     i2u2634_40:
 42223                           
 42224                           ; BSR set to: 0
 42225                           ;doprnt.c: 1229: };doprnt.c: 1230: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
 42226  01247E  BFA0               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 42227  012480  D009               	goto	i2l2556
 42228  012482  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 42229  012484  E104               	bnz	i2u2635_40
 42230  012486  0E09               	movlw	9
 42231  012488  5D9F               	subwf	i2__doprnt@prec& (0+255),w,b
 42232  01248A  A0D8               	btfss	status,0,c
 42233  01248C  D003               	goto	i2l2556
 42234  01248E                     i2u2635_40:
 42235                           
 42236                           ; BSR set to: 0
 42237                           ;doprnt.c: 1231: c = (sizeof dpowers/sizeof dpowers[0])-2;
 42238  01248E  0E08               	movlw	8
 42239  012490  6FA3               	movwf	i2__doprnt@c& (0+255),b
 42240  012492  D002               	goto	i2l20458
 42241  012494                     i2l2556:
 42242                           
 42243                           ; BSR set to: 0
 42244                           ;doprnt.c: 1232: else;doprnt.c: 1233: c = (char)prec;
 42245  012494  C09F  F0A3         	movff	i2__doprnt@prec,i2__doprnt@c
 42246  012498                     i2l20458:
 42247                           
 42248                           ; BSR set to: 0
 42249                           ;doprnt.c: 1234: prec -= (int)c;
 42250  012498  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42251  01249A  5F9F               	subwf	i2__doprnt@prec& (0+255),f,b
 42252  01249C  0E00               	movlw	0
 42253  01249E  5BA0               	subwfb	(i2__doprnt@prec+1)& (0+255),f,b
 42254                           
 42255                           ; BSR set to: 0
 42256                           ;doprnt.c: 1238: if(c)
 42257  0124A0  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42258  0124A2  B4D8               	btfsc	status,2,c
 42259  0124A4  D033               	goto	i2l20470
 42260                           
 42261                           ; BSR set to: 0
 42262  0124A6  EE20 F002          	lfsr	2,2
 42263  0124AA  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42264  0124AC  26D9               	addwf	fsr2l,f,c
 42265  0124AE  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42266  0124B0  22DA               	addwfc	fsr2h,f,c
 42267  0124B2  50DE               	movf	postinc2,w,c
 42268  0124B4  10DE               	iorwf	postinc2,w,c
 42269  0124B6  10DE               	iorwf	postinc2,w,c
 42270  0124B8  B4D8               	btfsc	status,2,c
 42271  0124BA  D013               	goto	i2l20466
 42272                           
 42273                           ; BSR set to: 0
 42274  0124BC  EE20 F002          	lfsr	2,2
 42275  0124C0  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42276  0124C2  26D9               	addwf	fsr2l,f,c
 42277  0124C4  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42278  0124C6  22DA               	addwfc	fsr2h,f,c
 42279  0124C8  D801               	call	i2u2638_48
 42280  0124CA  D020               	goto	i2l20470
 42281  0124CC                     i2u2638_48:
 42282  0124CC  0005               	push	
 42283  0124CE  6EFA               	movwf	pclath,c
 42284  0124D0  50DE               	movf	postinc2,w,c
 42285  0124D2  6EFD               	movwf	tosl,c
 42286  0124D4  50DE               	movf	postinc2,w,c
 42287  0124D6  6EFE               	movwf	tosh,c
 42288  0124D8  50DE               	movf	postinc2,w,c
 42289  0124DA  6EFF               	movwf	tosu,c
 42290  0124DC  50FA               	movf	pclath,w,c
 42291  0124DE  0E2E               	movlw	46
 42292  0124E0  0012               	return		;indir
 42293  0124E2                     i2l20466:
 42294                           
 42295                           ; BSR set to: 0
 42296  0124E2  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42297  0124E6  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42298  0124EA  CFDE F072          	movff	postinc2,??i2__doprnt
 42299  0124EE  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42300  0124F2  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42301  0124F6  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42302  0124FA  0E2E               	movlw	46
 42303  0124FC  6EDF               	movwf	indf2,c
 42304                           
 42305                           ; BSR set to: 0
 42306  0124FE  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42307  012502  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42308  012506  2ADE               	incf	postinc2,f,c
 42309  012508  0E00               	movlw	0
 42310  01250A  22DD               	addwfc	postdec2,f,c
 42311  01250C                     i2l20470:
 42312                           
 42313                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
 42314  01250C  0100               	movlb	0	; () banked
 42315  01250E  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42316  012510  EC0A  F0AC         	call	i2_scale
 42317  012514  C045  F076         	movff	?i2_scale,i2__doprnt$6419
 42318  012518  C046  F077         	movff	?i2_scale+1,i2__doprnt$6419+1
 42319  01251C  C047  F078         	movff	?i2_scale+2,i2__doprnt$6419+2
 42320  012520  C048  F079         	movff	?i2_scale+3,i2__doprnt$6419+3
 42321                           
 42322                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
 42323  012524  C095  F030         	movff	i2__doprnt@fval,i2___flmul@a
 42324  012528  C096  F031         	movff	i2__doprnt@fval+1,i2___flmul@a+1
 42325  01252C  C097  F032         	movff	i2__doprnt@fval+2,i2___flmul@a+2
 42326  012530  C098  F033         	movff	i2__doprnt@fval+3,i2___flmul@a+3
 42327  012534  C076  F02C         	movff	i2__doprnt$6419,i2___flmul@b
 42328  012538  C077  F02D         	movff	i2__doprnt$6419+1,i2___flmul@b+1
 42329  01253C  C078  F02E         	movff	i2__doprnt$6419+2,i2___flmul@b+2
 42330  012540  C079  F02F         	movff	i2__doprnt$6419+3,i2___flmul@b+3
 42331  012544  EC9C  F0B6         	call	i2___flmul	;wreg free
 42332  012548  C02C  F04E         	movff	?i2___flmul,i2___fltol@f1
 42333  01254C  C02D  F04F         	movff	?i2___flmul+1,i2___fltol@f1+1
 42334  012550  C02E  F050         	movff	?i2___flmul+2,i2___fltol@f1+2
 42335  012554  C02F  F051         	movff	?i2___flmul+3,i2___fltol@f1+3
 42336  012558  EC4D  F0D4         	call	i2___fltol	;wreg free
 42337  01255C  C04E  F099         	movff	?i2___fltol,i2__doprnt@val
 42338  012560  C04F  F09A         	movff	?i2___fltol+1,i2__doprnt@val+1
 42339  012564  C050  F09B         	movff	?i2___fltol+2,i2__doprnt@val+2
 42340  012568  C051  F09C         	movff	?i2___fltol+3,i2__doprnt@val+3
 42341                           
 42342                           ;doprnt.c: 1247: while(c--) {
 42343  01256C  D0A3               	goto	i2l20486
 42344  01256E                     i2l20474:
 42345                           
 42346                           ; BSR set to: 0
 42347                           ;doprnt.c: 1248: tmpval.vd = val/dpowers[c];
 42348  01256E  C099  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 42349  012572  C09A  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 42350  012576  C09B  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 42351  01257A  C09C  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 42352  01257E  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42353  012580  0D04               	mullw	4
 42354  012582  0E47               	movlw	low _dpowers
 42355  012584  24F3               	addwf	prodl,w,c
 42356  012586  6EF6               	movwf	tblptrl,c
 42357  012588  0EE8               	movlw	high _dpowers
 42358  01258A  20F4               	addwfc	prodh,w,c
 42359  01258C  6EF7               	movwf	tblptrh,c
 42360  01258E                     	if	1	;There are 3 active tblptr bytes
 42361  01258E  6AF8               	clrf	tblptru,c
 42362  012590  0E00               	movlw	low (__mediumconst shr (0+16))
 42363  012592  22F8               	addwfc	tblptru,f,c
 42364  012594                     	endif
 42365  012594  0009               	tblrd		*+
 42366  012596  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 42367  01259A  0009               	tblrd		*+
 42368  01259C  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 42369  0125A0  0009               	tblrd		*+
 42370  0125A2  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 42371  0125A6  000A               	tblrd		*-
 42372  0125A8  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 42373  0125AC  EC81  F0D8         	call	i2___lldiv	;wreg free
 42374  0125B0  C001  F091         	movff	?i2___lldiv,i2__doprnt@tmpval
 42375  0125B4  C002  F092         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 42376  0125B8  C003  F093         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 42377  0125BC  C004  F094         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 42378                           
 42379                           ;doprnt.c: 1249: tmpval.vd %= 10;
 42380  0125C0  C091  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 42381  0125C4  C092  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 42382  0125C8  C093  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 42383  0125CC  C094  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 42384  0125D0  0E0A               	movlw	10
 42385  0125D2  6E12               	movwf	i2___llmod@divisor,c
 42386  0125D4  0E00               	movlw	0
 42387  0125D6  6E13               	movwf	i2___llmod@divisor+1,c
 42388  0125D8  0E00               	movlw	0
 42389  0125DA  6E14               	movwf	i2___llmod@divisor+2,c
 42390  0125DC  0E00               	movlw	0
 42391  0125DE  6E15               	movwf	i2___llmod@divisor+3,c
 42392  0125E0  EC06  F0DA         	call	i2___llmod	;wreg free
 42393  0125E4  C00E  F091         	movff	?i2___llmod,i2__doprnt@tmpval
 42394  0125E8  C00F  F092         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 42395  0125EC  C010  F093         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 42396  0125F0  C011  F094         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 42397  0125F4  0100               	movlb	0	; () banked
 42398  0125F6  EE20 F002          	lfsr	2,2
 42399  0125FA  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42400  0125FC  26D9               	addwf	fsr2l,f,c
 42401  0125FE  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42402  012600  22DA               	addwfc	fsr2h,f,c
 42403  012602  50DE               	movf	postinc2,w,c
 42404  012604  10DE               	iorwf	postinc2,w,c
 42405  012606  10DE               	iorwf	postinc2,w,c
 42406  012608  B4D8               	btfsc	status,2,c
 42407  01260A  D014               	goto	i2l20482
 42408                           
 42409                           ; BSR set to: 0
 42410  01260C  EE20 F002          	lfsr	2,2
 42411  012610  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42412  012612  26D9               	addwf	fsr2l,f,c
 42413  012614  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42414  012616  22DA               	addwfc	fsr2h,f,c
 42415  012618  D801               	call	i2u2640_48
 42416  01261A  D022               	goto	i2l20484
 42417  01261C                     i2u2640_48:
 42418  01261C  0005               	push	
 42419  01261E  6EFA               	movwf	pclath,c
 42420  012620  50DE               	movf	postinc2,w,c
 42421  012622  6EFD               	movwf	tosl,c
 42422  012624  50DE               	movf	postinc2,w,c
 42423  012626  6EFE               	movwf	tosh,c
 42424  012628  50DE               	movf	postinc2,w,c
 42425  01262A  6EFF               	movwf	tosu,c
 42426  01262C  50FA               	movf	pclath,w,c
 42427  01262E  5191               	movf	i2__doprnt@tmpval& (0+255),w,b
 42428  012630  0F30               	addlw	48
 42429  012632  0012               	return		;indir
 42430  012634                     i2l20482:
 42431                           
 42432                           ; BSR set to: 0
 42433  012634  5191               	movf	i2__doprnt@tmpval& (0+255),w,b
 42434  012636  0F30               	addlw	48
 42435  012638  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42436  01263C  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42437  012640  CFDE F072          	movff	postinc2,??i2__doprnt
 42438  012644  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42439  012648  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42440  01264C  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42441  012650  6EDF               	movwf	indf2,c
 42442  012652  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42443  012656  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42444  01265A  2ADE               	incf	postinc2,f,c
 42445  01265C  0E00               	movlw	0
 42446  01265E  22DD               	addwfc	postdec2,f,c
 42447  012660                     i2l20484:
 42448                           
 42449                           ;doprnt.c: 1251: val %= dpowers[c];
 42450  012660  C099  F00E         	movff	i2__doprnt@val,i2___llmod@dividend
 42451  012664  C09A  F00F         	movff	i2__doprnt@val+1,i2___llmod@dividend+1
 42452  012668  C09B  F010         	movff	i2__doprnt@val+2,i2___llmod@dividend+2
 42453  01266C  C09C  F011         	movff	i2__doprnt@val+3,i2___llmod@dividend+3
 42454  012670  0100               	movlb	0	; () banked
 42455  012672  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42456  012674  0D04               	mullw	4
 42457  012676  0E47               	movlw	low _dpowers
 42458  012678  24F3               	addwf	prodl,w,c
 42459  01267A  6EF6               	movwf	tblptrl,c
 42460  01267C  0EE8               	movlw	high _dpowers
 42461  01267E  20F4               	addwfc	prodh,w,c
 42462  012680  6EF7               	movwf	tblptrh,c
 42463  012682                     	if	1	;There are 3 active tblptr bytes
 42464  012682  6AF8               	clrf	tblptru,c
 42465  012684  0E00               	movlw	low (__mediumconst shr (0+16))
 42466  012686  22F8               	addwfc	tblptru,f,c
 42467  012688                     	endif
 42468  012688  0009               	tblrd		*+
 42469  01268A  CFF5 F012          	movff	tablat,i2___llmod@divisor
 42470  01268E  0009               	tblrd		*+
 42471  012690  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 42472  012694  0009               	tblrd		*+
 42473  012696  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 42474  01269A  000A               	tblrd		*-
 42475  01269C  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 42476  0126A0  EC06  F0DA         	call	i2___llmod
 42477  0126A4  C00E  F099         	movff	?i2___llmod,i2__doprnt@val
 42478  0126A8  C00F  F09A         	movff	?i2___llmod+1,i2__doprnt@val+1
 42479  0126AC  C010  F09B         	movff	?i2___llmod+2,i2__doprnt@val+2
 42480  0126B0  C011  F09C         	movff	?i2___llmod+3,i2__doprnt@val+3
 42481  0126B4                     i2l20486:
 42482  0126B4  0100               	movlb	0	; () banked
 42483  0126B6  07A3               	decf	i2__doprnt@c& (0+255),f,b
 42484  0126B8  29A3               	incf	i2__doprnt@c& (0+255),w,b
 42485  0126BA  B4D8               	btfsc	status,2,c
 42486  0126BC  D038               	goto	i2l20498
 42487  0126BE  D757               	goto	i2l20474
 42488  0126C0                     i2l20488:
 42489                           
 42490                           ; BSR set to: 0
 42491  0126C0  EE20 F002          	lfsr	2,2
 42492  0126C4  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42493  0126C6  26D9               	addwf	fsr2l,f,c
 42494  0126C8  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42495  0126CA  22DA               	addwfc	fsr2h,f,c
 42496  0126CC  50DE               	movf	postinc2,w,c
 42497  0126CE  10DE               	iorwf	postinc2,w,c
 42498  0126D0  10DE               	iorwf	postinc2,w,c
 42499  0126D2  B4D8               	btfsc	status,2,c
 42500  0126D4  D013               	goto	i2l20492
 42501                           
 42502                           ; BSR set to: 0
 42503  0126D6  EE20 F002          	lfsr	2,2
 42504  0126DA  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42505  0126DC  26D9               	addwf	fsr2l,f,c
 42506  0126DE  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42507  0126E0  22DA               	addwfc	fsr2h,f,c
 42508  0126E2  D801               	call	i2u2643_48
 42509  0126E4  D020               	goto	i2l20496
 42510  0126E6                     i2u2643_48:
 42511  0126E6  0005               	push	
 42512  0126E8  6EFA               	movwf	pclath,c
 42513  0126EA  50DE               	movf	postinc2,w,c
 42514  0126EC  6EFD               	movwf	tosl,c
 42515  0126EE  50DE               	movf	postinc2,w,c
 42516  0126F0  6EFE               	movwf	tosh,c
 42517  0126F2  50DE               	movf	postinc2,w,c
 42518  0126F4  6EFF               	movwf	tosu,c
 42519  0126F6  50FA               	movf	pclath,w,c
 42520  0126F8  0E30               	movlw	48
 42521  0126FA  0012               	return		;indir
 42522  0126FC                     i2l20492:
 42523                           
 42524                           ; BSR set to: 0
 42525  0126FC  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42526  012700  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42527  012704  CFDE F072          	movff	postinc2,??i2__doprnt
 42528  012708  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42529  01270C  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42530  012710  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42531  012714  0E30               	movlw	48
 42532  012716  6EDF               	movwf	indf2,c
 42533                           
 42534                           ; BSR set to: 0
 42535  012718  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42536  01271C  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42537  012720  2ADE               	incf	postinc2,f,c
 42538  012722  0E00               	movlw	0
 42539  012724  22DD               	addwfc	postdec2,f,c
 42540  012726                     i2l20496:
 42541                           
 42542                           ;doprnt.c: 1256: prec--;
 42543  012726  0100               	movlb	0	; () banked
 42544  012728  079F               	decf	i2__doprnt@prec& (0+255),f,b
 42545  01272A  A0D8               	btfss	status,0,c
 42546  01272C  07A0               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 42547  01272E                     i2l20498:
 42548                           
 42549                           ; BSR set to: 0
 42550  01272E  519F               	movf	i2__doprnt@prec& (0+255),w,b
 42551  012730  11A0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 42552  012732  B4D8               	btfsc	status,2,c
 42553  012734  D360               	goto	i2u2689_40
 42554  012736  D7C4               	goto	i2l20488
 42555  012738                     i2l20500:
 42556                           
 42557                           ; BSR set to: 0
 42558                           ;doprnt.c: 1265: };doprnt.c: 1270: if((flag & (0xC0)) == 0x00)
 42559  012738  0EC0               	movlw	192
 42560  01273A  15A1               	andwf	i2__doprnt@flag& (0+255),w,b
 42561  01273C  6F72               	movwf	??i2__doprnt& (0+255),b
 42562  01273E  0E00               	movlw	0
 42563  012740  15A2               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 42564  012742  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 42565  012744  5172               	movf	??i2__doprnt& (0+255),w,b
 42566  012746  1173               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 42567  012748  A4D8               	btfss	status,2,c
 42568  01274A  D041               	goto	i2l2577
 42569                           
 42570                           ; BSR set to: 0
 42571                           ;doprnt.c: 1272: {;doprnt.c: 1274: if(flag & 0x10)
 42572  01274C  A9A1               	btfss	i2__doprnt@flag& (0+255),4,b
 42573  01274E  D019               	goto	i2l20506
 42574                           
 42575                           ; BSR set to: 0
 42576                           ;doprnt.c: 1275: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 42577  012750  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 42578  012754  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 42579  012758  CFDF F072          	movff	indf2,??i2__doprnt
 42580  01275C  0E04               	movlw	4
 42581  01275E  26DE               	addwf	postinc2,f,c
 42582  012760  CFDF F073          	movff	indf2,??i2__doprnt+1
 42583  012764  0E00               	movlw	0
 42584  012766  22DD               	addwfc	postdec2,f,c
 42585  012768  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42586  01276C  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42587  012770  CFDE F099          	movff	postinc2,i2__doprnt@val
 42588  012774  CFDE F09A          	movff	postinc2,i2__doprnt@val+1
 42589  012778  CFDE F09B          	movff	postinc2,i2__doprnt@val+2
 42590  01277C  CFDE F09C          	movff	postinc2,i2__doprnt@val+3
 42591  012780  D019               	goto	i2l20508
 42592  012782                     i2l20506:
 42593                           
 42594                           ; BSR set to: 0
 42595                           ;doprnt.c: 1276: else;doprnt.c: 1278: val = (long)(*(int *)__va_arg((*(int **)ap), (int)
      +                          0));
 42596  012782  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 42597  012786  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 42598  01278A  CFDF F072          	movff	indf2,??i2__doprnt
 42599  01278E  0E02               	movlw	2
 42600  012790  26DE               	addwf	postinc2,f,c
 42601  012792  CFDF F073          	movff	indf2,??i2__doprnt+1
 42602  012796  0E00               	movlw	0
 42603  012798  22DD               	addwfc	postdec2,f,c
 42604  01279A  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42605  01279E  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42606  0127A2  CFDE F099          	movff	postinc2,i2__doprnt@val
 42607  0127A6  CFDD F09A          	movff	postdec2,i2__doprnt@val+1
 42608  0127AA  0E00               	movlw	0
 42609  0127AC  BF9A               	btfsc	(i2__doprnt@val+1)& (0+255),7,b
 42610  0127AE  0EFF               	movlw	-1
 42611  0127B0  6F9B               	movwf	(i2__doprnt@val+2)& (0+255),b
 42612  0127B2  6F9C               	movwf	(i2__doprnt@val+3)& (0+255),b
 42613  0127B4                     i2l20508:
 42614                           
 42615                           ; BSR set to: 0
 42616                           ;doprnt.c: 1280: if((long)val < 0) {
 42617  0127B4  AF9C               	btfss	(i2__doprnt@val+3)& (0+255),7,b
 42618  0127B6  D040               	goto	i2l20518
 42619                           
 42620                           ; BSR set to: 0
 42621                           ;doprnt.c: 1281: flag |= 0x03;
 42622  0127B8  0E03               	movlw	3
 42623  0127BA  13A1               	iorwf	i2__doprnt@flag& (0+255),f,b
 42624                           
 42625                           ; BSR set to: 0
 42626                           ;doprnt.c: 1282: val = -val;
 42627  0127BC  1F9C               	comf	(i2__doprnt@val+3)& (0+255),f,b
 42628  0127BE  1F9B               	comf	(i2__doprnt@val+2)& (0+255),f,b
 42629  0127C0  1F9A               	comf	(i2__doprnt@val+1)& (0+255),f,b
 42630  0127C2  6D99               	negf	i2__doprnt@val& (0+255),b
 42631  0127C4  0E00               	movlw	0
 42632  0127C6  239A               	addwfc	(i2__doprnt@val+1)& (0+255),f,b
 42633  0127C8  239B               	addwfc	(i2__doprnt@val+2)& (0+255),f,b
 42634  0127CA  239C               	addwfc	(i2__doprnt@val+3)& (0+255),f,b
 42635  0127CC  D035               	goto	i2l20518
 42636  0127CE                     i2l2577:
 42637                           
 42638                           ; BSR set to: 0
 42639                           ;doprnt.c: 1287: else;doprnt.c: 1292: {;doprnt.c: 1300: if(flag & 0x10)
 42640  0127CE  A9A1               	btfss	i2__doprnt@flag& (0+255),4,b
 42641  0127D0  D019               	goto	i2l20516
 42642                           
 42643                           ; BSR set to: 0
 42644                           ;doprnt.c: 1301: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 42645  0127D2  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 42646  0127D6  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 42647  0127DA  CFDF F072          	movff	indf2,??i2__doprnt
 42648  0127DE  0E04               	movlw	4
 42649  0127E0  26DE               	addwf	postinc2,f,c
 42650  0127E2  CFDF F073          	movff	indf2,??i2__doprnt+1
 42651  0127E6  0E00               	movlw	0
 42652  0127E8  22DD               	addwfc	postdec2,f,c
 42653  0127EA  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42654  0127EE  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42655  0127F2  CFDE F099          	movff	postinc2,i2__doprnt@val
 42656  0127F6  CFDE F09A          	movff	postinc2,i2__doprnt@val+1
 42657  0127FA  CFDE F09B          	movff	postinc2,i2__doprnt@val+2
 42658  0127FE  CFDE F09C          	movff	postinc2,i2__doprnt@val+3
 42659  012802  D01A               	goto	i2l20518
 42660  012804                     i2l20516:
 42661                           
 42662                           ; BSR set to: 0
 42663                           ;doprnt.c: 1302: else;doprnt.c: 1305: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
 42664  012804  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 42665  012808  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 42666  01280C  CFDF F072          	movff	indf2,??i2__doprnt
 42667  012810  0E02               	movlw	2
 42668  012812  26DE               	addwf	postinc2,f,c
 42669  012814  CFDF F073          	movff	indf2,??i2__doprnt+1
 42670  012818  0E00               	movlw	0
 42671  01281A  22DD               	addwfc	postdec2,f,c
 42672  01281C  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42673  012820  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42674  012824  CFDE F074          	movff	postinc2,??i2__doprnt+2
 42675  012828  CFDD F075          	movff	postdec2,??i2__doprnt+3
 42676  01282C  C074  F099         	movff	??i2__doprnt+2,i2__doprnt@val
 42677  012830  C075  F09A         	movff	??i2__doprnt+3,i2__doprnt@val+1
 42678  012834  6B9B               	clrf	(i2__doprnt@val+2)& (0+255),b
 42679  012836  6B9C               	clrf	(i2__doprnt@val+3)& (0+255),b
 42680  012838                     i2l20518:
 42681                           
 42682                           ; BSR set to: 0
 42683                           ;doprnt.c: 1306: };doprnt.c: 1309: if(prec == 0 && val == 0)
 42684  012838  519F               	movf	i2__doprnt@prec& (0+255),w,b
 42685  01283A  11A0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 42686  01283C  A4D8               	btfss	status,2,c
 42687  01283E  D04B               	goto	i2l20554
 42688                           
 42689                           ; BSR set to: 0
 42690  012840  5199               	movf	i2__doprnt@val& (0+255),w,b
 42691  012842  119A               	iorwf	(i2__doprnt@val+1)& (0+255),w,b
 42692  012844  119B               	iorwf	(i2__doprnt@val+2)& (0+255),w,b
 42693  012846  119C               	iorwf	(i2__doprnt@val+3)& (0+255),w,b
 42694  012848  A4D8               	btfss	status,2,c
 42695  01284A  D045               	goto	i2l20554
 42696                           
 42697                           ; BSR set to: 0
 42698                           ;doprnt.c: 1310: prec++;
 42699  01284C  4B9F               	infsnz	i2__doprnt@prec& (0+255),f,b
 42700  01284E  2BA0               	incf	(i2__doprnt@prec+1)& (0+255),f,b
 42701  012850  D042               	goto	i2l20554
 42702  012852                     i2l20524:
 42703                           
 42704                           ; BSR set to: 0
 42705                           ;doprnt.c: 1321: case 0xC0:;doprnt.c: 1324: for(c = 1 ; c != sizeof dpowers/sizeof dpowe
      +                          rs[0] ; c++)
 42706  012852  0E01               	movlw	1
 42707  012854  6FA3               	movwf	i2__doprnt@c& (0+255),b
 42708  012856                     i2l20530:
 42709                           
 42710                           ; BSR set to: 0
 42711                           ;doprnt.c: 1325: if(val < dpowers[c])
 42712  012856  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42713  012858  0D04               	mullw	4
 42714  01285A  0E47               	movlw	low _dpowers
 42715  01285C  24F3               	addwf	prodl,w,c
 42716  01285E  6EF6               	movwf	tblptrl,c
 42717  012860  0EE8               	movlw	high _dpowers
 42718  012862  20F4               	addwfc	prodh,w,c
 42719  012864  6EF7               	movwf	tblptrh,c
 42720  012866                     	if	1	;There are 3 active tblptr bytes
 42721  012866  6AF8               	clrf	tblptru,c
 42722  012868  0E00               	movlw	low (__mediumconst shr (0+16))
 42723  01286A  22F8               	addwfc	tblptru,f,c
 42724  01286C                     	endif
 42725  01286C  0009               	tblrd		*+
 42726  01286E  50F5               	movf	tablat,w,c
 42727  012870  5D99               	subwf	i2__doprnt@val& (0+255),w,b
 42728  012872  0009               	tblrd		*+
 42729  012874  50F5               	movf	tablat,w,c
 42730  012876  599A               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 42731  012878  0009               	tblrd		*+
 42732  01287A  50F5               	movf	tablat,w,c
 42733  01287C  599B               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 42734  01287E  0009               	tblrd		*+
 42735  012880  50F5               	movf	tablat,w,c
 42736  012882  599C               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 42737  012884  A0D8               	btfss	status,0,c
 42738  012886  D032               	goto	i2l20556
 42739                           
 42740                           ; BSR set to: 0
 42741  012888  2BA3               	incf	i2__doprnt@c& (0+255),f,b
 42742                           
 42743                           ; BSR set to: 0
 42744  01288A  0E0A               	movlw	10
 42745  01288C  19A3               	xorwf	i2__doprnt@c& (0+255),w,b
 42746  01288E  B4D8               	btfsc	status,2,c
 42747  012890  D02D               	goto	i2l20556
 42748  012892  D7E1               	goto	i2l20530
 42749  012894                     i2l20538:
 42750                           
 42751                           ; BSR set to: 0
 42752                           ;doprnt.c: 1335: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 42753  012894  0E01               	movlw	1
 42754  012896  6FA3               	movwf	i2__doprnt@c& (0+255),b
 42755  012898                     i2l20544:
 42756                           
 42757                           ; BSR set to: 0
 42758                           ;doprnt.c: 1336: if(val < hexpowers[c])
 42759  012898  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42760  01289A  0D04               	mullw	4
 42761  01289C  0E27               	movlw	low _hexpowers
 42762  01289E  24F3               	addwf	prodl,w,c
 42763  0128A0  6EF6               	movwf	tblptrl,c
 42764  0128A2  0EE5               	movlw	high _hexpowers
 42765  0128A4  20F4               	addwfc	prodh,w,c
 42766  0128A6  6EF7               	movwf	tblptrh,c
 42767  0128A8                     	if	1	;There are 3 active tblptr bytes
 42768  0128A8  6AF8               	clrf	tblptru,c
 42769  0128AA  0E00               	movlw	low (__mediumconst shr (0+16))
 42770  0128AC  22F8               	addwfc	tblptru,f,c
 42771  0128AE                     	endif
 42772  0128AE  0009               	tblrd		*+
 42773  0128B0  50F5               	movf	tablat,w,c
 42774  0128B2  5D99               	subwf	i2__doprnt@val& (0+255),w,b
 42775  0128B4  0009               	tblrd		*+
 42776  0128B6  50F5               	movf	tablat,w,c
 42777  0128B8  599A               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 42778  0128BA  0009               	tblrd		*+
 42779  0128BC  50F5               	movf	tablat,w,c
 42780  0128BE  599B               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 42781  0128C0  0009               	tblrd		*+
 42782  0128C2  50F5               	movf	tablat,w,c
 42783  0128C4  599C               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 42784  0128C6  A0D8               	btfss	status,0,c
 42785  0128C8  D011               	goto	i2l20556
 42786                           
 42787                           ; BSR set to: 0
 42788  0128CA  2BA3               	incf	i2__doprnt@c& (0+255),f,b
 42789                           
 42790                           ; BSR set to: 0
 42791  0128CC  0E08               	movlw	8
 42792  0128CE  19A3               	xorwf	i2__doprnt@c& (0+255),w,b
 42793  0128D0  B4D8               	btfsc	status,2,c
 42794  0128D2  D00C               	goto	i2l20556
 42795  0128D4  D7E1               	goto	i2l20544
 42796  0128D6                     i2l20554:
 42797                           
 42798                           ; BSR set to: 0
 42799  0128D6  51A1               	movf	i2__doprnt@flag& (0+255),w,b
 42800  0128D8  0BC0               	andlw	192
 42801                           
 42802                           ; Switch size 1, requested type "simple"
 42803                           ; Number of cases is 3, Range of values is 0 to 192
 42804                           ; switch strategies available:
 42805                           ; Name         Instructions Cycles
 42806                           ; simple_byte           10     6 (average)
 42807                           ;	Chosen strategy is simple_byte
 42808  0128DA  0A00               	xorlw	0	; case 0
 42809  0128DC  B4D8               	btfsc	status,2,c
 42810  0128DE  D7B9               	goto	i2l20524
 42811  0128E0  0A80               	xorlw	128	; case 128
 42812  0128E2  B4D8               	btfsc	status,2,c
 42813  0128E4  D7D7               	goto	i2l20538
 42814  0128E6  0A40               	xorlw	64	; case 192
 42815  0128E8  B4D8               	btfsc	status,2,c
 42816  0128EA  D7B3               	goto	i2l20524
 42817  0128EC                     i2l20556:
 42818                           
 42819                           ; BSR set to: 0
 42820                           ;doprnt.c: 1358: if(c < prec)
 42821  0128EC  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42822  0128EE  6F72               	movwf	??i2__doprnt& (0+255),b
 42823  0128F0  6B73               	clrf	(??i2__doprnt+1)& (0+255),b
 42824  0128F2  519F               	movf	i2__doprnt@prec& (0+255),w,b
 42825  0128F4  5D72               	subwf	??i2__doprnt& (0+255),w,b
 42826  0128F6  5173               	movf	(??i2__doprnt+1)& (0+255),w,b
 42827  0128F8  0A80               	xorlw	128
 42828  0128FA  6F74               	movwf	(??i2__doprnt+2)& (0+255),b
 42829  0128FC  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 42830  0128FE  0A80               	xorlw	128
 42831  012900  5974               	subwfb	(??i2__doprnt+2)& (0+255),w,b
 42832  012902  B0D8               	btfsc	status,0,c
 42833  012904  D003               	goto	i2l20560
 42834                           
 42835                           ; BSR set to: 0
 42836                           ;doprnt.c: 1359: c = prec;
 42837  012906  C09F  F0A3         	movff	i2__doprnt@prec,i2__doprnt@c
 42838  01290A  D010               	goto	i2l20564
 42839  01290C                     i2l20560:
 42840                           
 42841                           ; BSR set to: 0
 42842                           ;doprnt.c: 1360: else if(prec < c)
 42843  01290C  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42844  01290E  6F72               	movwf	??i2__doprnt& (0+255),b
 42845  012910  6B73               	clrf	(??i2__doprnt+1)& (0+255),b
 42846  012912  5172               	movf	??i2__doprnt& (0+255),w,b
 42847  012914  5D9F               	subwf	i2__doprnt@prec& (0+255),w,b
 42848  012916  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 42849  012918  0A80               	xorlw	128
 42850  01291A  6F74               	movwf	(??i2__doprnt+2)& (0+255),b
 42851  01291C  5173               	movf	(??i2__doprnt+1)& (0+255),w,b
 42852  01291E  0A80               	xorlw	128
 42853  012920  5974               	subwfb	(??i2__doprnt+2)& (0+255),w,b
 42854  012922  B0D8               	btfsc	status,0,c
 42855  012924  D003               	goto	i2l20564
 42856                           
 42857                           ; BSR set to: 0
 42858                           ;doprnt.c: 1361: prec = c;
 42859  012926  C0A3  F09F         	movff	i2__doprnt@c,i2__doprnt@prec
 42860  01292A  6BA0               	clrf	(i2__doprnt@prec+1)& (0+255),b
 42861  01292C                     i2l20564:
 42862                           
 42863                           ; BSR set to: 0
 42864                           ;doprnt.c: 1364: if(width && flag & 0x03)
 42865  01292C  519D               	movf	i2__doprnt@width& (0+255),w,b
 42866  01292E  119E               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 42867  012930  B4D8               	btfsc	status,2,c
 42868  012932  D00D               	goto	i2l20570
 42869                           
 42870                           ; BSR set to: 0
 42871  012934  0E03               	movlw	3
 42872  012936  15A1               	andwf	i2__doprnt@flag& (0+255),w,b
 42873  012938  6F72               	movwf	??i2__doprnt& (0+255),b
 42874  01293A  0E00               	movlw	0
 42875  01293C  15A2               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 42876  01293E  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 42877  012940  5172               	movf	??i2__doprnt& (0+255),w,b
 42878  012942  1173               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 42879  012944  B4D8               	btfsc	status,2,c
 42880  012946  D003               	goto	i2l20570
 42881                           
 42882                           ; BSR set to: 0
 42883                           ;doprnt.c: 1365: width--;
 42884  012948  079D               	decf	i2__doprnt@width& (0+255),f,b
 42885  01294A  A0D8               	btfss	status,0,c
 42886  01294C  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 42887  01294E                     i2l20570:
 42888                           
 42889                           ; BSR set to: 0
 42890                           ;doprnt.c: 1367: if(flag & 0x4000) {
 42891  01294E  ADA2               	btfss	(i2__doprnt@flag+1)& (0+255),6,b
 42892  012950  D013               	goto	i2l20578
 42893                           
 42894                           ; BSR set to: 0
 42895                           ;doprnt.c: 1368: if(width > prec)
 42896  012952  519D               	movf	i2__doprnt@width& (0+255),w,b
 42897  012954  5D9F               	subwf	i2__doprnt@prec& (0+255),w,b
 42898  012956  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 42899  012958  0A80               	xorlw	128
 42900  01295A  6F72               	movwf	??i2__doprnt& (0+255),b
 42901  01295C  519E               	movf	(i2__doprnt@width+1)& (0+255),w,b
 42902  01295E  0A80               	xorlw	128
 42903  012960  5972               	subwfb	??i2__doprnt& (0+255),w,b
 42904  012962  B0D8               	btfsc	status,0,c
 42905  012964  D005               	goto	i2l20576
 42906                           
 42907                           ; BSR set to: 0
 42908                           ;doprnt.c: 1369: width -= prec;
 42909  012966  519F               	movf	i2__doprnt@prec& (0+255),w,b
 42910  012968  5F9D               	subwf	i2__doprnt@width& (0+255),f,b
 42911  01296A  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 42912  01296C  5B9E               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 42913  01296E  D004               	goto	i2l20578
 42914  012970                     i2l20576:
 42915                           
 42916                           ; BSR set to: 0
 42917                           ;doprnt.c: 1370: else;doprnt.c: 1371: width = 0;
 42918  012970  0E00               	movlw	0
 42919  012972  6F9E               	movwf	(i2__doprnt@width+1)& (0+255),b
 42920  012974  0E00               	movlw	0
 42921  012976  6F9D               	movwf	i2__doprnt@width& (0+255),b
 42922  012978                     i2l20578:
 42923                           
 42924                           ; BSR set to: 0
 42925                           ;doprnt.c: 1372: };doprnt.c: 1400: if(width > c)
 42926  012978  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42927  01297A  6F72               	movwf	??i2__doprnt& (0+255),b
 42928  01297C  6B73               	clrf	(??i2__doprnt+1)& (0+255),b
 42929  01297E  519D               	movf	i2__doprnt@width& (0+255),w,b
 42930  012980  5D72               	subwf	??i2__doprnt& (0+255),w,b
 42931  012982  5173               	movf	(??i2__doprnt+1)& (0+255),w,b
 42932  012984  0A80               	xorlw	128
 42933  012986  6F74               	movwf	(??i2__doprnt+2)& (0+255),b
 42934  012988  519E               	movf	(i2__doprnt@width+1)& (0+255),w,b
 42935  01298A  0A80               	xorlw	128
 42936  01298C  5974               	subwfb	(??i2__doprnt+2)& (0+255),w,b
 42937  01298E  B0D8               	btfsc	status,0,c
 42938  012990  D005               	goto	i2l20582
 42939                           
 42940                           ; BSR set to: 0
 42941                           ;doprnt.c: 1401: width -= c;
 42942  012992  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42943  012994  5F9D               	subwf	i2__doprnt@width& (0+255),f,b
 42944  012996  0E00               	movlw	0
 42945  012998  5B9E               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 42946  01299A  D004               	goto	i2l20584
 42947  01299C                     i2l20582:
 42948                           
 42949                           ; BSR set to: 0
 42950                           ;doprnt.c: 1402: else;doprnt.c: 1403: width = 0;
 42951  01299C  0E00               	movlw	0
 42952  01299E  6F9E               	movwf	(i2__doprnt@width+1)& (0+255),b
 42953  0129A0  0E00               	movlw	0
 42954  0129A2  6F9D               	movwf	i2__doprnt@width& (0+255),b
 42955  0129A4                     i2l20584:
 42956                           
 42957                           ; BSR set to: 0
 42958                           ;doprnt.c: 1406: if(flag & 0x04) {
 42959  0129A4  A5A1               	btfss	i2__doprnt@flag& (0+255),2,b
 42960  0129A6  D0B5               	goto	i2l20626
 42961                           
 42962                           ; BSR set to: 0
 42963                           ;doprnt.c: 1408: if(flag & 0x02)
 42964  0129A8  A3A1               	btfss	i2__doprnt@flag& (0+255),1,b
 42965  0129AA  D041               	goto	i2l2606
 42966                           
 42967                           ; BSR set to: 0
 42968  0129AC  EE20 F002          	lfsr	2,2
 42969  0129B0  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42970  0129B2  26D9               	addwf	fsr2l,f,c
 42971  0129B4  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42972  0129B6  22DA               	addwfc	fsr2h,f,c
 42973  0129B8  50DE               	movf	postinc2,w,c
 42974  0129BA  10DE               	iorwf	postinc2,w,c
 42975  0129BC  10DE               	iorwf	postinc2,w,c
 42976  0129BE  B4D8               	btfsc	status,2,c
 42977  0129C0  D01D               	goto	i2l2608
 42978                           
 42979                           ; BSR set to: 0
 42980  0129C2  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 42981  0129C4  D004               	goto	i2l20594
 42982                           
 42983                           ; BSR set to: 0
 42984  0129C6  0E00               	movlw	0
 42985  0129C8  6F84               	movwf	(i2__doprnt$4979+1)& (0+255),b
 42986  0129CA  0E2B               	movlw	43
 42987  0129CC  D003               	goto	L41
 42988  0129CE                     i2l20594:
 42989                           
 42990                           ; BSR set to: 0
 42991  0129CE  0E00               	movlw	0
 42992  0129D0  6F84               	movwf	(i2__doprnt$4979+1)& (0+255),b
 42993  0129D2  0E2D               	movlw	45
 42994  0129D4                     L41:
 42995  0129D4  6F83               	movwf	i2__doprnt$4979& (0+255),b
 42996                           
 42997                           ; BSR set to: 0
 42998  0129D6  EE20 F002          	lfsr	2,2
 42999  0129DA  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43000  0129DC  26D9               	addwf	fsr2l,f,c
 43001  0129DE  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43002  0129E0  22DA               	addwfc	fsr2h,f,c
 43003  0129E2  D801               	call	i2u2666_48
 43004  0129E4  D059               	goto	i2l20614
 43005  0129E6                     i2u2666_48:
 43006  0129E6  0005               	push	
 43007  0129E8  6EFA               	movwf	pclath,c
 43008  0129EA  50DE               	movf	postinc2,w,c
 43009  0129EC  6EFD               	movwf	tosl,c
 43010  0129EE  50DE               	movf	postinc2,w,c
 43011  0129F0  6EFE               	movwf	tosh,c
 43012  0129F2  50DE               	movf	postinc2,w,c
 43013  0129F4  6EFF               	movwf	tosu,c
 43014  0129F6  50FA               	movf	pclath,w,c
 43015  0129F8  5183               	movf	i2__doprnt$4979& (0+255),w,b
 43016  0129FA  0012               	return		;indir
 43017  0129FC                     i2l2608:
 43018                           
 43019                           ; BSR set to: 0
 43020  0129FC  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 43021  0129FE  D004               	goto	i2l20600
 43022                           
 43023                           ; BSR set to: 0
 43024  012A00  0E00               	movlw	0
 43025  012A02  6F86               	movwf	(i2__doprnt$4980+1)& (0+255),b
 43026  012A04  0E2B               	movlw	43
 43027  012A06  D003               	goto	L42
 43028  012A08                     i2l20600:
 43029                           
 43030                           ; BSR set to: 0
 43031  012A08  0E00               	movlw	0
 43032  012A0A  6F86               	movwf	(i2__doprnt$4980+1)& (0+255),b
 43033  012A0C  0E2D               	movlw	45
 43034  012A0E                     L42:
 43035  012A0E  6F85               	movwf	i2__doprnt$4980& (0+255),b
 43036                           
 43037                           ; BSR set to: 0
 43038  012A10  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43039  012A14  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43040  012A18  CFDE F072          	movff	postinc2,??i2__doprnt
 43041  012A1C  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43042  012A20  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43043  012A24  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43044  012A28  C085  FFDF         	movff	i2__doprnt$4980,indf2
 43045  012A2C  D02E               	goto	i2l20612
 43046  012A2E                     i2l2606:
 43047                           
 43048                           ; BSR set to: 0
 43049                           ;doprnt.c: 1415: else;doprnt.c: 1418: if(flag & 0x01)
 43050  012A2E  A1A1               	btfss	i2__doprnt@flag& (0+255),0,b
 43051  012A30  D033               	goto	i2l20614
 43052                           
 43053                           ; BSR set to: 0
 43054  012A32  EE20 F002          	lfsr	2,2
 43055  012A36  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43056  012A38  26D9               	addwf	fsr2l,f,c
 43057  012A3A  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43058  012A3C  22DA               	addwfc	fsr2h,f,c
 43059  012A3E  50DE               	movf	postinc2,w,c
 43060  012A40  10DE               	iorwf	postinc2,w,c
 43061  012A42  10DE               	iorwf	postinc2,w,c
 43062  012A44  B4D8               	btfsc	status,2,c
 43063  012A46  D013               	goto	i2l20610
 43064                           
 43065                           ; BSR set to: 0
 43066  012A48  EE20 F002          	lfsr	2,2
 43067  012A4C  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43068  012A4E  26D9               	addwf	fsr2l,f,c
 43069  012A50  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43070  012A52  22DA               	addwfc	fsr2h,f,c
 43071  012A54  D801               	call	i2u2670_48
 43072  012A56  D020               	goto	i2l20614
 43073  012A58                     i2u2670_48:
 43074  012A58  0005               	push	
 43075  012A5A  6EFA               	movwf	pclath,c
 43076  012A5C  50DE               	movf	postinc2,w,c
 43077  012A5E  6EFD               	movwf	tosl,c
 43078  012A60  50DE               	movf	postinc2,w,c
 43079  012A62  6EFE               	movwf	tosh,c
 43080  012A64  50DE               	movf	postinc2,w,c
 43081  012A66  6EFF               	movwf	tosu,c
 43082  012A68  50FA               	movf	pclath,w,c
 43083  012A6A  0E20               	movlw	32
 43084  012A6C  0012               	return		;indir
 43085  012A6E                     i2l20610:
 43086                           
 43087                           ; BSR set to: 0
 43088  012A6E  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43089  012A72  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43090  012A76  CFDE F072          	movff	postinc2,??i2__doprnt
 43091  012A7A  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43092  012A7E  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43093  012A82  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43094  012A86  0E20               	movlw	32
 43095  012A88  6EDF               	movwf	indf2,c
 43096  012A8A                     i2l20612:
 43097                           
 43098                           ; BSR set to: 0
 43099  012A8A  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43100  012A8E  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43101  012A92  2ADE               	incf	postinc2,f,c
 43102  012A94  0E00               	movlw	0
 43103  012A96  22DD               	addwfc	postdec2,f,c
 43104  012A98                     i2l20614:
 43105                           
 43106                           ;doprnt.c: 1434: if(width)
 43107  012A98  0100               	movlb	0	; () banked
 43108  012A9A  519D               	movf	i2__doprnt@width& (0+255),w,b
 43109  012A9C  119E               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 43110  012A9E  B4D8               	btfsc	status,2,c
 43111  012AA0  D1A1               	goto	i2l20682
 43112                           
 43113                           ; BSR set to: 0
 43114  012AA2  EE20 F002          	lfsr	2,2
 43115  012AA6  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43116  012AA8  26D9               	addwf	fsr2l,f,c
 43117  012AAA  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43118  012AAC  22DA               	addwfc	fsr2h,f,c
 43119  012AAE  50DE               	movf	postinc2,w,c
 43120  012AB0  10DE               	iorwf	postinc2,w,c
 43121  012AB2  10DE               	iorwf	postinc2,w,c
 43122  012AB4  B4D8               	btfsc	status,2,c
 43123  012AB6  D013               	goto	i2l20620
 43124                           
 43125                           ; BSR set to: 0
 43126  012AB8  EE20 F002          	lfsr	2,2
 43127  012ABC  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43128  012ABE  26D9               	addwf	fsr2l,f,c
 43129  012AC0  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43130  012AC2  22DA               	addwfc	fsr2h,f,c
 43131  012AC4  D801               	call	i2u2673_48
 43132  012AC6  D020               	goto	i2l20624
 43133  012AC8                     i2u2673_48:
 43134  012AC8  0005               	push	
 43135  012ACA  6EFA               	movwf	pclath,c
 43136  012ACC  50DE               	movf	postinc2,w,c
 43137  012ACE  6EFD               	movwf	tosl,c
 43138  012AD0  50DE               	movf	postinc2,w,c
 43139  012AD2  6EFE               	movwf	tosh,c
 43140  012AD4  50DE               	movf	postinc2,w,c
 43141  012AD6  6EFF               	movwf	tosu,c
 43142  012AD8  50FA               	movf	pclath,w,c
 43143  012ADA  0E30               	movlw	48
 43144  012ADC  0012               	return		;indir
 43145  012ADE                     i2l20620:
 43146                           
 43147                           ; BSR set to: 0
 43148  012ADE  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43149  012AE2  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43150  012AE6  CFDE F072          	movff	postinc2,??i2__doprnt
 43151  012AEA  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43152  012AEE  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43153  012AF2  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43154  012AF6  0E30               	movlw	48
 43155  012AF8  6EDF               	movwf	indf2,c
 43156                           
 43157                           ; BSR set to: 0
 43158  012AFA  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43159  012AFE  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43160  012B02  2ADE               	incf	postinc2,f,c
 43161  012B04  0E00               	movlw	0
 43162  012B06  22DD               	addwfc	postdec2,f,c
 43163  012B08                     i2l20624:
 43164                           
 43165                           ;doprnt.c: 1437: while(--width);
 43166  012B08  0100               	movlb	0	; () banked
 43167  012B0A  079D               	decf	i2__doprnt@width& (0+255),f,b
 43168  012B0C  A0D8               	btfss	status,0,c
 43169  012B0E  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 43170  012B10  D7C4               	goto	L59
 43171  012B12                     i2l20626:
 43172                           
 43173                           ; BSR set to: 0
 43174                           ;doprnt.c: 1441: {;doprnt.c: 1443: if(width;doprnt.c: 1447: )
 43175  012B12  519D               	movf	i2__doprnt@width& (0+255),w,b
 43176  012B14  119E               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 43177  012B16  B4D8               	btfsc	status,2,c
 43178  012B18  D03B               	goto	i2u2678_40
 43179  012B1A                     i2u2675_40:
 43180                           
 43181                           ; BSR set to: 0
 43182  012B1A  EE20 F002          	lfsr	2,2
 43183  012B1E  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43184  012B20  26D9               	addwf	fsr2l,f,c
 43185  012B22  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43186  012B24  22DA               	addwfc	fsr2h,f,c
 43187  012B26  50DE               	movf	postinc2,w,c
 43188  012B28  10DE               	iorwf	postinc2,w,c
 43189  012B2A  10DE               	iorwf	postinc2,w,c
 43190  012B2C  B4D8               	btfsc	status,2,c
 43191  012B2E  D013               	goto	i2l20632
 43192                           
 43193                           ; BSR set to: 0
 43194  012B30  EE20 F002          	lfsr	2,2
 43195  012B34  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43196  012B36  26D9               	addwf	fsr2l,f,c
 43197  012B38  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43198  012B3A  22DA               	addwfc	fsr2h,f,c
 43199  012B3C  D801               	call	i2u2677_48
 43200  012B3E  D020               	goto	i2l20636
 43201  012B40                     i2u2677_48:
 43202  012B40  0005               	push	
 43203  012B42  6EFA               	movwf	pclath,c
 43204  012B44  50DE               	movf	postinc2,w,c
 43205  012B46  6EFD               	movwf	tosl,c
 43206  012B48  50DE               	movf	postinc2,w,c
 43207  012B4A  6EFE               	movwf	tosh,c
 43208  012B4C  50DE               	movf	postinc2,w,c
 43209  012B4E  6EFF               	movwf	tosu,c
 43210  012B50  50FA               	movf	pclath,w,c
 43211  012B52  0E20               	movlw	32
 43212  012B54  0012               	return		;indir
 43213  012B56                     i2l20632:
 43214                           
 43215                           ; BSR set to: 0
 43216  012B56  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43217  012B5A  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43218  012B5E  CFDE F072          	movff	postinc2,??i2__doprnt
 43219  012B62  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43220  012B66  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43221  012B6A  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43222  012B6E  0E20               	movlw	32
 43223  012B70  6EDF               	movwf	indf2,c
 43224                           
 43225                           ; BSR set to: 0
 43226  012B72  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43227  012B76  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43228  012B7A  2ADE               	incf	postinc2,f,c
 43229  012B7C  0E00               	movlw	0
 43230  012B7E  22DD               	addwfc	postdec2,f,c
 43231  012B80                     i2l20636:
 43232                           
 43233                           ;doprnt.c: 1450: while(--width);
 43234  012B80  0100               	movlb	0	; () banked
 43235  012B82  079D               	decf	i2__doprnt@width& (0+255),f,b
 43236  012B84  A0D8               	btfss	status,0,c
 43237  012B86  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 43238  012B88  519D               	movf	i2__doprnt@width& (0+255),w,b
 43239  012B8A  119E               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 43240  012B8C  A4D8               	btfss	status,2,c
 43241  012B8E  D7C5               	goto	i2u2675_40
 43242  012B90                     i2u2678_40:
 43243                           
 43244                           ; BSR set to: 0
 43245                           ;doprnt.c: 1453: if(flag & 0x02)
 43246  012B90  A3A1               	btfss	i2__doprnt@flag& (0+255),1,b
 43247  012B92  D041               	goto	i2l2640
 43248                           
 43249                           ; BSR set to: 0
 43250  012B94  EE20 F002          	lfsr	2,2
 43251  012B98  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43252  012B9A  26D9               	addwf	fsr2l,f,c
 43253  012B9C  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43254  012B9E  22DA               	addwfc	fsr2h,f,c
 43255  012BA0  50DE               	movf	postinc2,w,c
 43256  012BA2  10DE               	iorwf	postinc2,w,c
 43257  012BA4  10DE               	iorwf	postinc2,w,c
 43258  012BA6  B4D8               	btfsc	status,2,c
 43259  012BA8  D01D               	goto	i2l2642
 43260                           
 43261                           ; BSR set to: 0
 43262  012BAA  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 43263  012BAC  D004               	goto	i2l20644
 43264                           
 43265                           ; BSR set to: 0
 43266  012BAE  0E00               	movlw	0
 43267  012BB0  6F88               	movwf	(i2__doprnt$4981+1)& (0+255),b
 43268  012BB2  0E2B               	movlw	43
 43269  012BB4  D003               	goto	L43
 43270  012BB6                     i2l20644:
 43271                           
 43272                           ; BSR set to: 0
 43273  012BB6  0E00               	movlw	0
 43274  012BB8  6F88               	movwf	(i2__doprnt$4981+1)& (0+255),b
 43275  012BBA  0E2D               	movlw	45
 43276  012BBC                     L43:
 43277  012BBC  6F87               	movwf	i2__doprnt$4981& (0+255),b
 43278                           
 43279                           ; BSR set to: 0
 43280  012BBE  EE20 F002          	lfsr	2,2
 43281  012BC2  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43282  012BC4  26D9               	addwf	fsr2l,f,c
 43283  012BC6  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43284  012BC8  22DA               	addwfc	fsr2h,f,c
 43285  012BCA  D801               	call	i2u2682_48
 43286  012BCC  D10B               	goto	i2l20682
 43287  012BCE                     i2u2682_48:
 43288  012BCE  0005               	push	
 43289  012BD0  6EFA               	movwf	pclath,c
 43290  012BD2  50DE               	movf	postinc2,w,c
 43291  012BD4  6EFD               	movwf	tosl,c
 43292  012BD6  50DE               	movf	postinc2,w,c
 43293  012BD8  6EFE               	movwf	tosh,c
 43294  012BDA  50DE               	movf	postinc2,w,c
 43295  012BDC  6EFF               	movwf	tosu,c
 43296  012BDE  50FA               	movf	pclath,w,c
 43297  012BE0  5187               	movf	i2__doprnt$4981& (0+255),w,b
 43298  012BE2  0012               	return		;indir
 43299  012BE4                     i2l2642:
 43300                           
 43301                           ; BSR set to: 0
 43302  012BE4  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 43303  012BE6  D004               	goto	i2l20650
 43304                           
 43305                           ; BSR set to: 0
 43306  012BE8  0E00               	movlw	0
 43307  012BEA  6F8A               	movwf	(i2__doprnt$4982+1)& (0+255),b
 43308  012BEC  0E2B               	movlw	43
 43309  012BEE  D003               	goto	L44
 43310  012BF0                     i2l20650:
 43311                           
 43312                           ; BSR set to: 0
 43313  012BF0  0E00               	movlw	0
 43314  012BF2  6F8A               	movwf	(i2__doprnt$4982+1)& (0+255),b
 43315  012BF4  0E2D               	movlw	45
 43316  012BF6                     L44:
 43317  012BF6  6F89               	movwf	i2__doprnt$4982& (0+255),b
 43318                           
 43319                           ; BSR set to: 0
 43320  012BF8  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43321  012BFC  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43322  012C00  CFDE F072          	movff	postinc2,??i2__doprnt
 43323  012C04  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43324  012C08  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43325  012C0C  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43326  012C10  C089  FFDF         	movff	i2__doprnt$4982,indf2
 43327  012C14  D0E0               	goto	i2l20680
 43328  012C16                     i2l2640:
 43329                           
 43330                           ; BSR set to: 0
 43331                           ;doprnt.c: 1462: else if(flag & 0x01)
 43332  012C16  A1A1               	btfss	i2__doprnt@flag& (0+255),0,b
 43333  012C18  D0E5               	goto	i2l20682
 43334                           
 43335                           ; BSR set to: 0
 43336  012C1A  EE20 F002          	lfsr	2,2
 43337  012C1E  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43338  012C20  26D9               	addwf	fsr2l,f,c
 43339  012C22  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43340  012C24  22DA               	addwfc	fsr2h,f,c
 43341  012C26  50DE               	movf	postinc2,w,c
 43342  012C28  10DE               	iorwf	postinc2,w,c
 43343  012C2A  10DE               	iorwf	postinc2,w,c
 43344  012C2C  B4D8               	btfsc	status,2,c
 43345  012C2E  D013               	goto	i2l20660
 43346                           
 43347                           ; BSR set to: 0
 43348  012C30  EE20 F002          	lfsr	2,2
 43349  012C34  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43350  012C36  26D9               	addwf	fsr2l,f,c
 43351  012C38  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43352  012C3A  22DA               	addwfc	fsr2h,f,c
 43353  012C3C  D801               	call	i2u2686_48
 43354  012C3E  D0D2               	goto	i2l20682
 43355  012C40                     i2u2686_48:
 43356  012C40  0005               	push	
 43357  012C42  6EFA               	movwf	pclath,c
 43358  012C44  50DE               	movf	postinc2,w,c
 43359  012C46  6EFD               	movwf	tosl,c
 43360  012C48  50DE               	movf	postinc2,w,c
 43361  012C4A  6EFE               	movwf	tosh,c
 43362  012C4C  50DE               	movf	postinc2,w,c
 43363  012C4E  6EFF               	movwf	tosu,c
 43364  012C50  50FA               	movf	pclath,w,c
 43365  012C52  0E20               	movlw	32
 43366  012C54  0012               	return		;indir
 43367  012C56                     i2l20660:
 43368                           
 43369                           ; BSR set to: 0
 43370  012C56  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43371  012C5A  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43372  012C5E  CFDE F072          	movff	postinc2,??i2__doprnt
 43373  012C62  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43374  012C66  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43375  012C6A  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43376  012C6E  0E20               	movlw	32
 43377  012C70  6EDF               	movwf	indf2,c
 43378  012C72  D0B1               	goto	i2l20680
 43379  012C74                     i2l20664:
 43380                           
 43381                           ; BSR set to: 0
 43382                           ;doprnt.c: 1505: case 0xC0:;doprnt.c: 1508: c = (val / dpowers[prec]) % 10 + '0';
 43383  012C74  C09F  F072         	movff	i2__doprnt@prec,??i2__doprnt
 43384  012C78  C0A0  F073         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 43385  012C7C  90D8               	bcf	status,0,c
 43386  012C7E  3772               	rlcf	??i2__doprnt& (0+255),f,b
 43387  012C80  3773               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 43388  012C82  90D8               	bcf	status,0,c
 43389  012C84  3772               	rlcf	??i2__doprnt& (0+255),f,b
 43390  012C86  3773               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 43391  012C88  0E47               	movlw	low _dpowers
 43392  012C8A  2572               	addwf	??i2__doprnt& (0+255),w,b
 43393  012C8C  6EF6               	movwf	tblptrl,c
 43394  012C8E  0EE8               	movlw	high _dpowers
 43395  012C90  2173               	addwfc	(??i2__doprnt+1)& (0+255),w,b
 43396  012C92  6EF7               	movwf	tblptrh,c
 43397  012C94                     	if	1	;There are 3 active tblptr bytes
 43398  012C94  6AF8               	clrf	tblptru,c
 43399  012C96  0E00               	movlw	low (__mediumconst shr (0+16))
 43400  012C98  22F8               	addwfc	tblptru,f,c
 43401  012C9A                     	endif
 43402  012C9A  0009               	tblrd		*+
 43403  012C9C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 43404  012CA0  0009               	tblrd		*+
 43405  012CA2  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 43406  012CA6  0009               	tblrd		*+
 43407  012CA8  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 43408  012CAC  000A               	tblrd		*-
 43409  012CAE  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 43410  012CB2  C099  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 43411  012CB6  C09A  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 43412  012CBA  C09B  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 43413  012CBE  C09C  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 43414  012CC2  EC81  F0D8         	call	i2___lldiv
 43415  012CC6  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 43416  012CCA  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 43417  012CCE  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 43418  012CD2  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 43419  012CD6  0E0A               	movlw	10
 43420  012CD8  6E12               	movwf	i2___llmod@divisor,c
 43421  012CDA  0E00               	movlw	0
 43422  012CDC  6E13               	movwf	i2___llmod@divisor+1,c
 43423  012CDE  0E00               	movlw	0
 43424  012CE0  6E14               	movwf	i2___llmod@divisor+2,c
 43425  012CE2  0E00               	movlw	0
 43426  012CE4  6E15               	movwf	i2___llmod@divisor+3,c
 43427  012CE6  EC06  F0DA         	call	i2___llmod	;wreg free
 43428  012CEA  500E               	movf	?i2___llmod,w,c
 43429  012CEC  0F30               	addlw	48
 43430  012CEE  0100               	movlb	0	; () banked
 43431  012CF0  6FA3               	movwf	i2__doprnt@c& (0+255),b
 43432                           
 43433                           ;doprnt.c: 1510: break;
 43434  012CF2  D045               	goto	i2l20674
 43435  012CF4                     i2l20666:
 43436                           
 43437                           ; BSR set to: 0
 43438                           ;doprnt.c: 1518: {;doprnt.c: 1519: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 43439  012CF4  C099  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 43440  012CF8  C09A  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 43441  012CFC  C09B  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 43442  012D00  C09C  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 43443  012D04  C09F  F072         	movff	i2__doprnt@prec,??i2__doprnt
 43444  012D08  C0A0  F073         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 43445  012D0C  90D8               	bcf	status,0,c
 43446  012D0E  3772               	rlcf	??i2__doprnt& (0+255),f,b
 43447  012D10  3773               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 43448  012D12  90D8               	bcf	status,0,c
 43449  012D14  3772               	rlcf	??i2__doprnt& (0+255),f,b
 43450  012D16  3773               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 43451  012D18  0E27               	movlw	low _hexpowers
 43452  012D1A  2572               	addwf	??i2__doprnt& (0+255),w,b
 43453  012D1C  6EF6               	movwf	tblptrl,c
 43454  012D1E  0EE5               	movlw	high _hexpowers
 43455  012D20  2173               	addwfc	(??i2__doprnt+1)& (0+255),w,b
 43456  012D22  6EF7               	movwf	tblptrh,c
 43457  012D24                     	if	1	;There are 3 active tblptr bytes
 43458  012D24  6AF8               	clrf	tblptru,c
 43459  012D26  0E00               	movlw	low (__mediumconst shr (0+16))
 43460  012D28  22F8               	addwfc	tblptru,f,c
 43461  012D2A                     	endif
 43462  012D2A  0009               	tblrd		*+
 43463  012D2C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 43464  012D30  0009               	tblrd		*+
 43465  012D32  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 43466  012D36  0009               	tblrd		*+
 43467  012D38  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 43468  012D3C  000A               	tblrd		*-
 43469  012D3E  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 43470  012D42  EC81  F0D8         	call	i2___lldiv	;wreg free
 43471  012D46  5001               	movf	?i2___lldiv,w,c
 43472  012D48  0B0F               	andlw	15
 43473  012D4A  0100               	movlb	0	; () banked
 43474  012D4C  6F7A               	movwf	i2__doprnt@idx& (0+255),b
 43475                           
 43476                           ; BSR set to: 0
 43477                           ;doprnt.c: 1523: c = "0123456789ABCDEF"[idx];
 43478  012D4E  0E1F               	movlw	low STR_354
 43479  012D50  257A               	addwf	i2__doprnt@idx& (0+255),w,b
 43480  012D52  6EF6               	movwf	tblptrl,c
 43481  012D54  6AF7               	clrf	tblptrh,c
 43482  012D56  0EFB               	movlw	high STR_354
 43483  012D58  22F7               	addwfc	tblptrh,f,c
 43484  012D5A                     	if	1	;There are 3 active tblptr bytes
 43485  012D5A  6AF8               	clrf	tblptru,c
 43486  012D5C  0E00               	movlw	low (__mediumconst shr (0+16))
 43487  012D5E  22F8               	addwfc	tblptru,f,c
 43488  012D60                     	endif
 43489  012D60  0008               	tblrd		*
 43490  012D62  CFF5 F0A3          	movff	tablat,i2__doprnt@c
 43491                           
 43492                           ;doprnt.c: 1527: };doprnt.c: 1529: break;
 43493  012D66  D00B               	goto	i2l20674
 43494  012D68                     i2l20672:
 43495                           
 43496                           ; BSR set to: 0
 43497  012D68  51A1               	movf	i2__doprnt@flag& (0+255),w,b
 43498  012D6A  0BC0               	andlw	192
 43499                           
 43500                           ; Switch size 1, requested type "simple"
 43501                           ; Number of cases is 3, Range of values is 0 to 192
 43502                           ; switch strategies available:
 43503                           ; Name         Instructions Cycles
 43504                           ; simple_byte           10     6 (average)
 43505                           ;	Chosen strategy is simple_byte
 43506  012D6C  0A00               	xorlw	0	; case 0
 43507  012D6E  B4D8               	btfsc	status,2,c
 43508  012D70  D781               	goto	i2l20664
 43509  012D72  0A80               	xorlw	128	; case 128
 43510  012D74  B4D8               	btfsc	status,2,c
 43511  012D76  D7BE               	goto	i2l20666
 43512  012D78  0A40               	xorlw	64	; case 192
 43513  012D7A  B4D8               	btfsc	status,2,c
 43514  012D7C  D77B               	goto	i2l20664
 43515  012D7E                     i2l20674:
 43516                           
 43517                           ; BSR set to: 0
 43518  012D7E  EE20 F002          	lfsr	2,2
 43519  012D82  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43520  012D84  26D9               	addwf	fsr2l,f,c
 43521  012D86  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43522  012D88  22DA               	addwfc	fsr2h,f,c
 43523  012D8A  50DE               	movf	postinc2,w,c
 43524  012D8C  10DE               	iorwf	postinc2,w,c
 43525  012D8E  10DE               	iorwf	postinc2,w,c
 43526  012D90  B4D8               	btfsc	status,2,c
 43527  012D92  D013               	goto	i2l20678
 43528                           
 43529                           ; BSR set to: 0
 43530  012D94  EE20 F002          	lfsr	2,2
 43531  012D98  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43532  012D9A  26D9               	addwf	fsr2l,f,c
 43533  012D9C  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43534  012D9E  22DA               	addwfc	fsr2h,f,c
 43535  012DA0  D801               	call	i2u2688_48
 43536  012DA2  D020               	goto	i2l20682
 43537  012DA4                     i2u2688_48:
 43538  012DA4  0005               	push	
 43539  012DA6  6EFA               	movwf	pclath,c
 43540  012DA8  50DE               	movf	postinc2,w,c
 43541  012DAA  6EFD               	movwf	tosl,c
 43542  012DAC  50DE               	movf	postinc2,w,c
 43543  012DAE  6EFE               	movwf	tosh,c
 43544  012DB0  50DE               	movf	postinc2,w,c
 43545  012DB2  6EFF               	movwf	tosu,c
 43546  012DB4  50FA               	movf	pclath,w,c
 43547  012DB6  51A3               	movf	i2__doprnt@c& (0+255),w,b
 43548  012DB8  0012               	return		;indir
 43549  012DBA                     i2l20678:
 43550                           
 43551                           ; BSR set to: 0
 43552  012DBA  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43553  012DBE  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43554  012DC2  CFDE F072          	movff	postinc2,??i2__doprnt
 43555  012DC6  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43556  012DCA  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43557  012DCE  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43558  012DD2  C0A3  FFDF         	movff	i2__doprnt@c,indf2
 43559  012DD6                     i2l20680:
 43560                           
 43561                           ; BSR set to: 0
 43562  012DD6  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43563  012DDA  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43564  012DDE  2ADE               	incf	postinc2,f,c
 43565  012DE0  0E00               	movlw	0
 43566  012DE2  22DD               	addwfc	postdec2,f,c
 43567  012DE4                     i2l20682:
 43568  012DE4  0100               	movlb	0	; () banked
 43569  012DE6  079F               	decf	i2__doprnt@prec& (0+255),f,b
 43570  012DE8  A0D8               	btfss	status,0,c
 43571  012DEA  07A0               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 43572  012DEC  299F               	incf	i2__doprnt@prec& (0+255),w,b
 43573  012DEE  E1BC               	bnz	i2l20672
 43574  012DF0  29A0               	incf	(i2__doprnt@prec+1)& (0+255),w,b
 43575  012DF2  A4D8               	btfss	status,2,c
 43576  012DF4  D7B9               	goto	i2l20672
 43577  012DF6                     i2u2689_40:
 43578  012DF6  0100               	movlb	0	; () banked
 43579  012DF8  516E               	movf	i2__doprnt@f& (0+255),w,b
 43580  012DFA  6F72               	movwf	??i2__doprnt& (0+255),b
 43581  012DFC  516F               	movf	(i2__doprnt@f+1)& (0+255),w,b
 43582  012DFE  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 43583  012E00  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 43584  012E02  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 43585  012E04  C072  FFF6         	movff	??i2__doprnt,tblptrl
 43586  012E08  C073  FFF7         	movff	??i2__doprnt+1,tblptrh
 43587  012E0C  0E00               	movlw	low (__mediumconst shr (0+16))
 43588  012E0E  6EF8               	movwf	tblptru,c
 43589  012E10  0E0E               	movlw	(high __ramtop+-1)
 43590  012E12  64F7               	cpfsgt	tblptrh,c
 43591  012E14  D003               	bra	i2u2690_47
 43592  012E16  0008               	tblrd		*
 43593  012E18  50F5               	movf	tablat,w,c
 43594  012E1A  D005               	bra	i2u2690_40
 43595  012E1C                     i2u2690_47:
 43596  012E1C  CFF6 FFE9          	movff	tblptrl,fsr0l
 43597  012E20  CFF7 FFEA          	movff	tblptrh,fsr0h
 43598  012E24  50EF               	movf	indf0,w,c
 43599  012E26                     i2u2690_40:
 43600  012E26  0100               	movlb	0	; () banked
 43601  012E28  6FA3               	movwf	i2__doprnt@c& (0+255),b
 43602  012E2A  51A3               	movf	i2__doprnt@c& (0+255),w,b
 43603  012E2C  A4D8               	btfss	status,2,c
 43604  012E2E  EF94  F08B         	goto	i2l20138
 43605  012E32                     i2u2691_40:
 43606                           
 43607                           ; BSR set to: 0
 43608                           ;doprnt.c: 1559: return 0;
 43609  012E32  0E00               	movlw	0
 43610  012E34  6F6D               	movwf	(?i2__doprnt+1)& (0+255),b
 43611  012E36  0E00               	movlw	0
 43612  012E38  6F6C               	movwf	?i2__doprnt& (0+255),b
 43613                           
 43614                           ; BSR set to: 0
 43615  012E3A  0012               	return		;funcret
 43616  012E3C                     __end_ofi2__doprnt:
 43617                           	opt callstack 0
 43618                           
 43619 ;; *************** function i2_scale *****************
 43620 ;; Defined at:
 43621 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 43622 ;; Parameters:    Size  Location     Type
 43623 ;;  scl             1    wreg     char 
 43624 ;; Auto vars:     Size  Location     Type
 43625 ;;  scl             1   76[COMRAM] char 
 43626 ;; Return value:  Size  Location     Type
 43627 ;;                  4   68[COMRAM] char 
 43628 ;; Registers used:
 43629 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43630 ;; Tracked objects:
 43631 ;;		On entry : 0/0
 43632 ;;		On exit  : 0/0
 43633 ;;		Unchanged: 0/0
 43634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43635 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43636 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43638 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43639 ;;Total ram usage:        9 bytes
 43640 ;; Hardware stack levels used:    1
 43641 ;; Hardware stack levels required when called:    1
 43642 ;; This function calls:
 43643 ;;		i2___awdiv
 43644 ;;		i2___awmod
 43645 ;;		i2___flmul
 43646 ;; This function is called by:
 43647 ;;		i2__doprnt
 43648 ;; This function uses a non-reentrant model
 43649 ;;
 43650                           
 43651                           	psect	text181
 43652  015814                     __ptext181:
 43653                           	opt callstack 0
 43654  015814                     i2_scale:
 43655                           	opt callstack 12
 43656                           
 43657                           ; BSR set to: 0
 43658                           ;incstack = 0
 43659                           ;i2scale@scl stored from wreg
 43660  015814  6E4D               	movwf	i2scale@scl,c
 43661                           
 43662                           ;doprnt.c: 436: if(scl < 0) {
 43663  015816  AE4D               	btfss	i2scale@scl,7,c
 43664  015818  D105               	goto	i2l19558
 43665                           
 43666                           ;doprnt.c: 437: scl = -scl;
 43667  01581A  6C4D               	negf	i2scale@scl,c
 43668                           
 43669                           ;doprnt.c: 438: if(scl>=110)
 43670  01581C  504D               	movf	i2scale@scl,w,c
 43671  01581E  0A80               	xorlw	128
 43672  015820  0F12               	addlw	-238
 43673  015822  A0D8               	btfss	status,0,c
 43674  015824  D091               	goto	i2l19548
 43675                           
 43676                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 43677  015826  0E00               	movlw	0
 43678  015828  6E0A               	movwf	i2___awdiv@divisor+1,c
 43679  01582A  0E0A               	movlw	10
 43680  01582C  6E09               	movwf	i2___awdiv@divisor,c
 43681  01582E  0E00               	movlw	0
 43682  015830  6E04               	movwf	i2___awmod@divisor+1,c
 43683  015832  0E64               	movlw	100
 43684  015834  6E03               	movwf	i2___awmod@divisor,c
 43685  015836  504D               	movf	i2scale@scl,w,c
 43686  015838  6E01               	movwf	i2___awmod@dividend,c
 43687  01583A  6A02               	clrf	i2___awmod@dividend+1,c
 43688  01583C  BE01               	btfsc	i2___awmod@dividend,7,c
 43689  01583E  0602               	decf	i2___awmod@dividend+1,f,c
 43690  015840  EC34  F0D9         	call	i2___awmod
 43691  015844  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 43692  015848  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 43693  01584C  EC3F  F0D8         	call	i2___awdiv	;wreg free
 43694  015850  0E09               	movlw	9
 43695  015852  2607               	addwf	?i2___awdiv,f,c
 43696  015854  5007               	movf	?i2___awdiv,w,c
 43697  015856  0D04               	mullw	4
 43698  015858  0EF3               	movlw	low __npowers_
 43699  01585A  24F3               	addwf	prodl,w,c
 43700  01585C  6EF6               	movwf	tblptrl,c
 43701  01585E  0EE4               	movlw	high __npowers_
 43702  015860  20F4               	addwfc	prodh,w,c
 43703  015862  6EF7               	movwf	tblptrh,c
 43704  015864                     	if	1	;There are 3 active tblptr bytes
 43705  015864  6AF8               	clrf	tblptru,c
 43706  015866  0E00               	movlw	low (__mediumconst shr (0+16))
 43707  015868  22F8               	addwfc	tblptru,f,c
 43708  01586A                     	endif
 43709  01586A  0009               	tblrd		*+
 43710  01586C  CFF5 F030          	movff	tablat,i2___flmul@a
 43711  015870  0009               	tblrd		*+
 43712  015872  CFF5 F031          	movff	tablat,i2___flmul@a+1
 43713  015876  0009               	tblrd		*+
 43714  015878  CFF5 F032          	movff	tablat,i2___flmul@a+2
 43715  01587C  000A               	tblrd		*-
 43716  01587E  CFF5 F033          	movff	tablat,i2___flmul@a+3
 43717  015882  0E00               	movlw	0
 43718  015884  6E0A               	movwf	i2___awdiv@divisor+1,c
 43719  015886  0E64               	movlw	100
 43720  015888  6E09               	movwf	i2___awdiv@divisor,c
 43721  01588A  504D               	movf	i2scale@scl,w,c
 43722  01588C  6E07               	movwf	i2___awdiv@dividend,c
 43723  01588E  6A08               	clrf	i2___awdiv@dividend+1,c
 43724  015890  BE07               	btfsc	i2___awdiv@dividend,7,c
 43725  015892  0608               	decf	i2___awdiv@dividend+1,f,c
 43726  015894  EC3F  F0D8         	call	i2___awdiv	;wreg free
 43727  015898  0E12               	movlw	18
 43728  01589A  2607               	addwf	?i2___awdiv,f,c
 43729  01589C  5007               	movf	?i2___awdiv,w,c
 43730  01589E  0D04               	mullw	4
 43731  0158A0  0EF3               	movlw	low __npowers_
 43732  0158A2  24F3               	addwf	prodl,w,c
 43733  0158A4  6EF6               	movwf	tblptrl,c
 43734  0158A6  0EE4               	movlw	high __npowers_
 43735  0158A8  20F4               	addwfc	prodh,w,c
 43736  0158AA  6EF7               	movwf	tblptrh,c
 43737  0158AC                     	if	1	;There are 3 active tblptr bytes
 43738  0158AC  6AF8               	clrf	tblptru,c
 43739  0158AE  0E00               	movlw	low (__mediumconst shr (0+16))
 43740  0158B0  22F8               	addwfc	tblptru,f,c
 43741  0158B2                     	endif
 43742  0158B2  0009               	tblrd		*+
 43743  0158B4  CFF5 F02C          	movff	tablat,i2___flmul@b
 43744  0158B8  0009               	tblrd		*+
 43745  0158BA  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 43746  0158BE  0009               	tblrd		*+
 43747  0158C0  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 43748  0158C4  000A               	tblrd		*-
 43749  0158C6  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 43750  0158CA  EC9C  F0B6         	call	i2___flmul	;wreg free
 43751  0158CE  C02C  F049         	movff	?i2___flmul,i2_scale$6418
 43752  0158D2  C02D  F04A         	movff	?i2___flmul+1,i2_scale$6418+1
 43753  0158D6  C02E  F04B         	movff	?i2___flmul+2,i2_scale$6418+2
 43754  0158DA  C02F  F04C         	movff	?i2___flmul+3,i2_scale$6418+3
 43755                           
 43756                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 43757  0158DE  C049  F02C         	movff	i2_scale$6418,i2___flmul@b
 43758  0158E2  C04A  F02D         	movff	i2_scale$6418+1,i2___flmul@b+1
 43759  0158E6  C04B  F02E         	movff	i2_scale$6418+2,i2___flmul@b+2
 43760  0158EA  C04C  F02F         	movff	i2_scale$6418+3,i2___flmul@b+3
 43761  0158EE  0E00               	movlw	0
 43762  0158F0  6E04               	movwf	i2___awmod@divisor+1,c
 43763  0158F2  0E0A               	movlw	10
 43764  0158F4  6E03               	movwf	i2___awmod@divisor,c
 43765  0158F6  504D               	movf	i2scale@scl,w,c
 43766  0158F8  6E01               	movwf	i2___awmod@dividend,c
 43767  0158FA  6A02               	clrf	i2___awmod@dividend+1,c
 43768  0158FC  BE01               	btfsc	i2___awmod@dividend,7,c
 43769  0158FE  0602               	decf	i2___awmod@dividend+1,f,c
 43770  015900  EC34  F0D9         	call	i2___awmod	;wreg free
 43771  015904  5001               	movf	?i2___awmod,w,c
 43772  015906  0D04               	mullw	4
 43773  015908  0EF3               	movlw	low __npowers_
 43774  01590A  24F3               	addwf	prodl,w,c
 43775  01590C  6EF6               	movwf	tblptrl,c
 43776  01590E  0EE4               	movlw	high __npowers_
 43777  015910  20F4               	addwfc	prodh,w,c
 43778  015912  6EF7               	movwf	tblptrh,c
 43779  015914                     	if	1	;There are 3 active tblptr bytes
 43780  015914  6AF8               	clrf	tblptru,c
 43781  015916  0E00               	movlw	low (__mediumconst shr (0+16))
 43782  015918  22F8               	addwfc	tblptru,f,c
 43783  01591A                     	endif
 43784  01591A  0009               	tblrd		*+
 43785  01591C  CFF5 F030          	movff	tablat,i2___flmul@a
 43786  015920  0009               	tblrd		*+
 43787  015922  CFF5 F031          	movff	tablat,i2___flmul@a+1
 43788  015926  0009               	tblrd		*+
 43789  015928  CFF5 F032          	movff	tablat,i2___flmul@a+2
 43790  01592C  000A               	tblrd		*-
 43791  01592E  CFF5 F033          	movff	tablat,i2___flmul@a+3
 43792  015932  EC9C  F0B6         	call	i2___flmul	;wreg free
 43793  015936  C02C  F045         	movff	?i2___flmul,?i2_scale
 43794  01593A  C02D  F046         	movff	?i2___flmul+1,?i2_scale+1
 43795  01593E  C02E  F047         	movff	?i2___flmul+2,?i2_scale+2
 43796  015942  C02F  F048         	movff	?i2___flmul+3,?i2_scale+3
 43797  015946  0012               	return	
 43798  015948                     i2l19548:
 43799                           
 43800                           ;doprnt.c: 440: else if(scl > 10)
 43801  015948  504D               	movf	i2scale@scl,w,c
 43802  01594A  0A80               	xorlw	128
 43803  01594C  0F75               	addlw	-139
 43804  01594E  A0D8               	btfss	status,0,c
 43805  015950  D051               	goto	i2l19554
 43806                           
 43807                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
 43808  015952  0E00               	movlw	0
 43809  015954  6E0A               	movwf	i2___awdiv@divisor+1,c
 43810  015956  0E0A               	movlw	10
 43811  015958  6E09               	movwf	i2___awdiv@divisor,c
 43812  01595A  504D               	movf	i2scale@scl,w,c
 43813  01595C  6E07               	movwf	i2___awdiv@dividend,c
 43814  01595E  6A08               	clrf	i2___awdiv@dividend+1,c
 43815  015960  BE07               	btfsc	i2___awdiv@dividend,7,c
 43816  015962  0608               	decf	i2___awdiv@dividend+1,f,c
 43817  015964  EC3F  F0D8         	call	i2___awdiv	;wreg free
 43818  015968  0E09               	movlw	9
 43819  01596A  2607               	addwf	?i2___awdiv,f,c
 43820  01596C  5007               	movf	?i2___awdiv,w,c
 43821  01596E  0D04               	mullw	4
 43822  015970  0EF3               	movlw	low __npowers_
 43823  015972  24F3               	addwf	prodl,w,c
 43824  015974  6EF6               	movwf	tblptrl,c
 43825  015976  0EE4               	movlw	high __npowers_
 43826  015978  20F4               	addwfc	prodh,w,c
 43827  01597A  6EF7               	movwf	tblptrh,c
 43828  01597C                     	if	1	;There are 3 active tblptr bytes
 43829  01597C  6AF8               	clrf	tblptru,c
 43830  01597E  0E00               	movlw	low (__mediumconst shr (0+16))
 43831  015980  22F8               	addwfc	tblptru,f,c
 43832  015982                     	endif
 43833  015982  0009               	tblrd		*+
 43834  015984  CFF5 F02C          	movff	tablat,i2___flmul@b
 43835  015988  0009               	tblrd		*+
 43836  01598A  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 43837  01598E  0009               	tblrd		*+
 43838  015990  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 43839  015994  000A               	tblrd		*-
 43840  015996  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 43841  01599A  0E00               	movlw	0
 43842  01599C  6E04               	movwf	i2___awmod@divisor+1,c
 43843  01599E  0E0A               	movlw	10
 43844  0159A0  6E03               	movwf	i2___awmod@divisor,c
 43845  0159A2  504D               	movf	i2scale@scl,w,c
 43846  0159A4  6E01               	movwf	i2___awmod@dividend,c
 43847  0159A6  6A02               	clrf	i2___awmod@dividend+1,c
 43848  0159A8  BE01               	btfsc	i2___awmod@dividend,7,c
 43849  0159AA  0602               	decf	i2___awmod@dividend+1,f,c
 43850  0159AC  EC34  F0D9         	call	i2___awmod	;wreg free
 43851  0159B0  5001               	movf	?i2___awmod,w,c
 43852  0159B2  0D04               	mullw	4
 43853  0159B4  0EF3               	movlw	low __npowers_
 43854  0159B6  24F3               	addwf	prodl,w,c
 43855  0159B8  6EF6               	movwf	tblptrl,c
 43856  0159BA  0EE4               	movlw	high __npowers_
 43857  0159BC  20F4               	addwfc	prodh,w,c
 43858  0159BE  6EF7               	movwf	tblptrh,c
 43859  0159C0                     	if	1	;There are 3 active tblptr bytes
 43860  0159C0  6AF8               	clrf	tblptru,c
 43861  0159C2  0E00               	movlw	low (__mediumconst shr (0+16))
 43862  0159C4  22F8               	addwfc	tblptru,f,c
 43863  0159C6                     	endif
 43864  0159C6  0009               	tblrd		*+
 43865  0159C8  CFF5 F030          	movff	tablat,i2___flmul@a
 43866  0159CC  0009               	tblrd		*+
 43867  0159CE  CFF5 F031          	movff	tablat,i2___flmul@a+1
 43868  0159D2  0009               	tblrd		*+
 43869  0159D4  CFF5 F032          	movff	tablat,i2___flmul@a+2
 43870  0159D8  000A               	tblrd		*-
 43871  0159DA  CFF5 F033          	movff	tablat,i2___flmul@a+3
 43872  0159DE  EC9C  F0B6         	call	i2___flmul	;wreg free
 43873  0159E2  C02C  F045         	movff	?i2___flmul,?i2_scale
 43874  0159E6  C02D  F046         	movff	?i2___flmul+1,?i2_scale+1
 43875  0159EA  C02E  F047         	movff	?i2___flmul+2,?i2_scale+2
 43876  0159EE  C02F  F048         	movff	?i2___flmul+3,?i2_scale+3
 43877  0159F2  0012               	return	
 43878  0159F4                     i2l19554:
 43879                           
 43880                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
 43881  0159F4  504D               	movf	i2scale@scl,w,c
 43882  0159F6  0D04               	mullw	4
 43883  0159F8  0EF3               	movlw	low __npowers_
 43884  0159FA  24F3               	addwf	prodl,w,c
 43885  0159FC  6EF6               	movwf	tblptrl,c
 43886  0159FE  0EE4               	movlw	high __npowers_
 43887  015A00  20F4               	addwfc	prodh,w,c
 43888  015A02  6EF7               	movwf	tblptrh,c
 43889  015A04                     	if	1	;There are 3 active tblptr bytes
 43890  015A04  6AF8               	clrf	tblptru,c
 43891  015A06  0E00               	movlw	low (__mediumconst shr (0+16))
 43892  015A08  22F8               	addwfc	tblptru,f,c
 43893  015A0A                     	endif
 43894  015A0A  0009               	tblrd		*+
 43895  015A0C  CFF5 F045          	movff	tablat,?i2_scale
 43896  015A10  0009               	tblrd		*+
 43897  015A12  CFF5 F046          	movff	tablat,?i2_scale+1
 43898  015A16  0009               	tblrd		*+
 43899  015A18  CFF5 F047          	movff	tablat,?i2_scale+2
 43900  015A1C  000A               	tblrd		*-
 43901  015A1E  CFF5 F048          	movff	tablat,?i2_scale+3
 43902  015A22  0012               	return	
 43903  015A24                     i2l19558:
 43904                           
 43905                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
 43906  015A24  504D               	movf	i2scale@scl,w,c
 43907  015A26  0A80               	xorlw	128
 43908  015A28  0F12               	addlw	-238
 43909  015A2A  A0D8               	btfss	status,0,c
 43910  015A2C  D091               	goto	i2l19566
 43911                           
 43912                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 43913  015A2E  0E00               	movlw	0
 43914  015A30  6E0A               	movwf	i2___awdiv@divisor+1,c
 43915  015A32  0E0A               	movlw	10
 43916  015A34  6E09               	movwf	i2___awdiv@divisor,c
 43917  015A36  0E00               	movlw	0
 43918  015A38  6E04               	movwf	i2___awmod@divisor+1,c
 43919  015A3A  0E64               	movlw	100
 43920  015A3C  6E03               	movwf	i2___awmod@divisor,c
 43921  015A3E  504D               	movf	i2scale@scl,w,c
 43922  015A40  6E01               	movwf	i2___awmod@dividend,c
 43923  015A42  6A02               	clrf	i2___awmod@dividend+1,c
 43924  015A44  BE01               	btfsc	i2___awmod@dividend,7,c
 43925  015A46  0602               	decf	i2___awmod@dividend+1,f,c
 43926  015A48  EC34  F0D9         	call	i2___awmod	;wreg free
 43927  015A4C  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 43928  015A50  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 43929  015A54  EC3F  F0D8         	call	i2___awdiv	;wreg free
 43930  015A58  0E09               	movlw	9
 43931  015A5A  2607               	addwf	?i2___awdiv,f,c
 43932  015A5C  5007               	movf	?i2___awdiv,w,c
 43933  015A5E  0D04               	mullw	4
 43934  015A60  0EBF               	movlw	low __powers_
 43935  015A62  24F3               	addwf	prodl,w,c
 43936  015A64  6EF6               	movwf	tblptrl,c
 43937  015A66  0EE4               	movlw	high __powers_
 43938  015A68  20F4               	addwfc	prodh,w,c
 43939  015A6A  6EF7               	movwf	tblptrh,c
 43940  015A6C                     	if	1	;There are 3 active tblptr bytes
 43941  015A6C  6AF8               	clrf	tblptru,c
 43942  015A6E  0E00               	movlw	low (__mediumconst shr (0+16))
 43943  015A70  22F8               	addwfc	tblptru,f,c
 43944  015A72                     	endif
 43945  015A72  0009               	tblrd		*+
 43946  015A74  CFF5 F030          	movff	tablat,i2___flmul@a
 43947  015A78  0009               	tblrd		*+
 43948  015A7A  CFF5 F031          	movff	tablat,i2___flmul@a+1
 43949  015A7E  0009               	tblrd		*+
 43950  015A80  CFF5 F032          	movff	tablat,i2___flmul@a+2
 43951  015A84  000A               	tblrd		*-
 43952  015A86  CFF5 F033          	movff	tablat,i2___flmul@a+3
 43953  015A8A  0E00               	movlw	0
 43954  015A8C  6E0A               	movwf	i2___awdiv@divisor+1,c
 43955  015A8E  0E64               	movlw	100
 43956  015A90  6E09               	movwf	i2___awdiv@divisor,c
 43957  015A92  504D               	movf	i2scale@scl,w,c
 43958  015A94  6E07               	movwf	i2___awdiv@dividend,c
 43959  015A96  6A08               	clrf	i2___awdiv@dividend+1,c
 43960  015A98  BE07               	btfsc	i2___awdiv@dividend,7,c
 43961  015A9A  0608               	decf	i2___awdiv@dividend+1,f,c
 43962  015A9C  EC3F  F0D8         	call	i2___awdiv	;wreg free
 43963  015AA0  0E12               	movlw	18
 43964  015AA2  2607               	addwf	?i2___awdiv,f,c
 43965  015AA4  5007               	movf	?i2___awdiv,w,c
 43966  015AA6  0D04               	mullw	4
 43967  015AA8  0EBF               	movlw	low __powers_
 43968  015AAA  24F3               	addwf	prodl,w,c
 43969  015AAC  6EF6               	movwf	tblptrl,c
 43970  015AAE  0EE4               	movlw	high __powers_
 43971  015AB0  20F4               	addwfc	prodh,w,c
 43972  015AB2  6EF7               	movwf	tblptrh,c
 43973  015AB4                     	if	1	;There are 3 active tblptr bytes
 43974  015AB4  6AF8               	clrf	tblptru,c
 43975  015AB6  0E00               	movlw	low (__mediumconst shr (0+16))
 43976  015AB8  22F8               	addwfc	tblptru,f,c
 43977  015ABA                     	endif
 43978  015ABA  0009               	tblrd		*+
 43979  015ABC  CFF5 F02C          	movff	tablat,i2___flmul@b
 43980  015AC0  0009               	tblrd		*+
 43981  015AC2  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 43982  015AC6  0009               	tblrd		*+
 43983  015AC8  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 43984  015ACC  000A               	tblrd		*-
 43985  015ACE  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 43986  015AD2  EC9C  F0B6         	call	i2___flmul	;wreg free
 43987  015AD6  C02C  F049         	movff	?i2___flmul,i2_scale$6418
 43988  015ADA  C02D  F04A         	movff	?i2___flmul+1,i2_scale$6418+1
 43989  015ADE  C02E  F04B         	movff	?i2___flmul+2,i2_scale$6418+2
 43990  015AE2  C02F  F04C         	movff	?i2___flmul+3,i2_scale$6418+3
 43991                           
 43992                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 43993  015AE6  C049  F02C         	movff	i2_scale$6418,i2___flmul@b
 43994  015AEA  C04A  F02D         	movff	i2_scale$6418+1,i2___flmul@b+1
 43995  015AEE  C04B  F02E         	movff	i2_scale$6418+2,i2___flmul@b+2
 43996  015AF2  C04C  F02F         	movff	i2_scale$6418+3,i2___flmul@b+3
 43997  015AF6  0E00               	movlw	0
 43998  015AF8  6E04               	movwf	i2___awmod@divisor+1,c
 43999  015AFA  0E0A               	movlw	10
 44000  015AFC  6E03               	movwf	i2___awmod@divisor,c
 44001  015AFE  504D               	movf	i2scale@scl,w,c
 44002  015B00  6E01               	movwf	i2___awmod@dividend,c
 44003  015B02  6A02               	clrf	i2___awmod@dividend+1,c
 44004  015B04  BE01               	btfsc	i2___awmod@dividend,7,c
 44005  015B06  0602               	decf	i2___awmod@dividend+1,f,c
 44006  015B08  EC34  F0D9         	call	i2___awmod	;wreg free
 44007  015B0C  5001               	movf	?i2___awmod,w,c
 44008  015B0E  0D04               	mullw	4
 44009  015B10  0EBF               	movlw	low __powers_
 44010  015B12  24F3               	addwf	prodl,w,c
 44011  015B14  6EF6               	movwf	tblptrl,c
 44012  015B16  0EE4               	movlw	high __powers_
 44013  015B18  20F4               	addwfc	prodh,w,c
 44014  015B1A  6EF7               	movwf	tblptrh,c
 44015  015B1C                     	if	1	;There are 3 active tblptr bytes
 44016  015B1C  6AF8               	clrf	tblptru,c
 44017  015B1E  0E00               	movlw	low (__mediumconst shr (0+16))
 44018  015B20  22F8               	addwfc	tblptru,f,c
 44019  015B22                     	endif
 44020  015B22  0009               	tblrd		*+
 44021  015B24  CFF5 F030          	movff	tablat,i2___flmul@a
 44022  015B28  0009               	tblrd		*+
 44023  015B2A  CFF5 F031          	movff	tablat,i2___flmul@a+1
 44024  015B2E  0009               	tblrd		*+
 44025  015B30  CFF5 F032          	movff	tablat,i2___flmul@a+2
 44026  015B34  000A               	tblrd		*-
 44027  015B36  CFF5 F033          	movff	tablat,i2___flmul@a+3
 44028  015B3A  EC9C  F0B6         	call	i2___flmul	;wreg free
 44029  015B3E  C02C  F045         	movff	?i2___flmul,?i2_scale
 44030  015B42  C02D  F046         	movff	?i2___flmul+1,?i2_scale+1
 44031  015B46  C02E  F047         	movff	?i2___flmul+2,?i2_scale+2
 44032  015B4A  C02F  F048         	movff	?i2___flmul+3,?i2_scale+3
 44033  015B4E  0012               	return	
 44034  015B50                     i2l19566:
 44035                           
 44036                           ;doprnt.c: 446: else if(scl > 10)
 44037  015B50  504D               	movf	i2scale@scl,w,c
 44038  015B52  0A80               	xorlw	128
 44039  015B54  0F75               	addlw	-139
 44040  015B56  A0D8               	btfss	status,0,c
 44041  015B58  D051               	goto	i2l19572
 44042                           
 44043                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
 44044  015B5A  0E00               	movlw	0
 44045  015B5C  6E0A               	movwf	i2___awdiv@divisor+1,c
 44046  015B5E  0E0A               	movlw	10
 44047  015B60  6E09               	movwf	i2___awdiv@divisor,c
 44048  015B62  504D               	movf	i2scale@scl,w,c
 44049  015B64  6E07               	movwf	i2___awdiv@dividend,c
 44050  015B66  6A08               	clrf	i2___awdiv@dividend+1,c
 44051  015B68  BE07               	btfsc	i2___awdiv@dividend,7,c
 44052  015B6A  0608               	decf	i2___awdiv@dividend+1,f,c
 44053  015B6C  EC3F  F0D8         	call	i2___awdiv	;wreg free
 44054  015B70  0E09               	movlw	9
 44055  015B72  2607               	addwf	?i2___awdiv,f,c
 44056  015B74  5007               	movf	?i2___awdiv,w,c
 44057  015B76  0D04               	mullw	4
 44058  015B78  0EBF               	movlw	low __powers_
 44059  015B7A  24F3               	addwf	prodl,w,c
 44060  015B7C  6EF6               	movwf	tblptrl,c
 44061  015B7E  0EE4               	movlw	high __powers_
 44062  015B80  20F4               	addwfc	prodh,w,c
 44063  015B82  6EF7               	movwf	tblptrh,c
 44064  015B84                     	if	1	;There are 3 active tblptr bytes
 44065  015B84  6AF8               	clrf	tblptru,c
 44066  015B86  0E00               	movlw	low (__mediumconst shr (0+16))
 44067  015B88  22F8               	addwfc	tblptru,f,c
 44068  015B8A                     	endif
 44069  015B8A  0009               	tblrd		*+
 44070  015B8C  CFF5 F02C          	movff	tablat,i2___flmul@b
 44071  015B90  0009               	tblrd		*+
 44072  015B92  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 44073  015B96  0009               	tblrd		*+
 44074  015B98  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 44075  015B9C  000A               	tblrd		*-
 44076  015B9E  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 44077  015BA2  0E00               	movlw	0
 44078  015BA4  6E04               	movwf	i2___awmod@divisor+1,c
 44079  015BA6  0E0A               	movlw	10
 44080  015BA8  6E03               	movwf	i2___awmod@divisor,c
 44081  015BAA  504D               	movf	i2scale@scl,w,c
 44082  015BAC  6E01               	movwf	i2___awmod@dividend,c
 44083  015BAE  6A02               	clrf	i2___awmod@dividend+1,c
 44084  015BB0  BE01               	btfsc	i2___awmod@dividend,7,c
 44085  015BB2  0602               	decf	i2___awmod@dividend+1,f,c
 44086  015BB4  EC34  F0D9         	call	i2___awmod	;wreg free
 44087  015BB8  5001               	movf	?i2___awmod,w,c
 44088  015BBA  0D04               	mullw	4
 44089  015BBC  0EBF               	movlw	low __powers_
 44090  015BBE  24F3               	addwf	prodl,w,c
 44091  015BC0  6EF6               	movwf	tblptrl,c
 44092  015BC2  0EE4               	movlw	high __powers_
 44093  015BC4  20F4               	addwfc	prodh,w,c
 44094  015BC6  6EF7               	movwf	tblptrh,c
 44095  015BC8                     	if	1	;There are 3 active tblptr bytes
 44096  015BC8  6AF8               	clrf	tblptru,c
 44097  015BCA  0E00               	movlw	low (__mediumconst shr (0+16))
 44098  015BCC  22F8               	addwfc	tblptru,f,c
 44099  015BCE                     	endif
 44100  015BCE  0009               	tblrd		*+
 44101  015BD0  CFF5 F030          	movff	tablat,i2___flmul@a
 44102  015BD4  0009               	tblrd		*+
 44103  015BD6  CFF5 F031          	movff	tablat,i2___flmul@a+1
 44104  015BDA  0009               	tblrd		*+
 44105  015BDC  CFF5 F032          	movff	tablat,i2___flmul@a+2
 44106  015BE0  000A               	tblrd		*-
 44107  015BE2  CFF5 F033          	movff	tablat,i2___flmul@a+3
 44108  015BE6  EC9C  F0B6         	call	i2___flmul	;wreg free
 44109  015BEA  C02C  F045         	movff	?i2___flmul,?i2_scale
 44110  015BEE  C02D  F046         	movff	?i2___flmul+1,?i2_scale+1
 44111  015BF2  C02E  F047         	movff	?i2___flmul+2,?i2_scale+2
 44112  015BF6  C02F  F048         	movff	?i2___flmul+3,?i2_scale+3
 44113  015BFA  0012               	return	
 44114  015BFC                     i2l19572:
 44115                           
 44116                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
 44117  015BFC  504D               	movf	i2scale@scl,w,c
 44118  015BFE  0D04               	mullw	4
 44119  015C00  0EBF               	movlw	low __powers_
 44120  015C02  24F3               	addwf	prodl,w,c
 44121  015C04  6EF6               	movwf	tblptrl,c
 44122  015C06  0EE4               	movlw	high __powers_
 44123  015C08  20F4               	addwfc	prodh,w,c
 44124  015C0A  6EF7               	movwf	tblptrh,c
 44125  015C0C                     	if	1	;There are 3 active tblptr bytes
 44126  015C0C  6AF8               	clrf	tblptru,c
 44127  015C0E  0E00               	movlw	low (__mediumconst shr (0+16))
 44128  015C10  22F8               	addwfc	tblptru,f,c
 44129  015C12                     	endif
 44130  015C12  0009               	tblrd		*+
 44131  015C14  CFF5 F045          	movff	tablat,?i2_scale
 44132  015C18  0009               	tblrd		*+
 44133  015C1A  CFF5 F046          	movff	tablat,?i2_scale+1
 44134  015C1E  0009               	tblrd		*+
 44135  015C20  CFF5 F047          	movff	tablat,?i2_scale+2
 44136  015C24  000A               	tblrd		*-
 44137  015C26  CFF5 F048          	movff	tablat,?i2_scale+3
 44138  015C2A  0012               	return		;funcret
 44139  015C2C                     __end_ofi2_scale:
 44140                           	opt callstack 0
 44141                           
 44142 ;; *************** function i2___awmod *****************
 44143 ;; Defined at:
 44144 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
 44145 ;; Parameters:    Size  Location     Type
 44146 ;;  dividend        2    0[COMRAM] int 
 44147 ;;  divisor         2    2[COMRAM] int 
 44148 ;; Auto vars:     Size  Location     Type
 44149 ;;  __awmod         1    5[COMRAM] unsigned char 
 44150 ;;  __awmod         1    4[COMRAM] unsigned char 
 44151 ;; Return value:  Size  Location     Type
 44152 ;;                  2    0[COMRAM] int 
 44153 ;; Registers used:
 44154 ;;		wreg, status,2, status,0
 44155 ;; Tracked objects:
 44156 ;;		On entry : 0/0
 44157 ;;		On exit  : 0/0
 44158 ;;		Unchanged: 0/0
 44159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44160 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44161 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44163 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44164 ;;Total ram usage:        6 bytes
 44165 ;; Hardware stack levels used:    1
 44166 ;; This function calls:
 44167 ;;		Nothing
 44168 ;; This function is called by:
 44169 ;;		i2_scale
 44170 ;; This function uses a non-reentrant model
 44171 ;;
 44172                           
 44173                           	psect	text182
 44174  01B268                     __ptext182:
 44175                           	opt callstack 0
 44176  01B268                     i2___awmod:
 44177                           	opt callstack 12
 44178                           
 44179                           ;incstack = 0
 44180  01B268  0E00               	movlw	0
 44181  01B26A  6E06               	movwf	i2___awmod@sign,c
 44182  01B26C  AE02               	btfss	i2___awmod@dividend+1,7,c
 44183  01B26E  D006               	goto	i2l18830
 44184  01B270  6C01               	negf	i2___awmod@dividend,c
 44185  01B272  1E02               	comf	i2___awmod@dividend+1,f,c
 44186  01B274  B0D8               	btfsc	status,0,c
 44187  01B276  2A02               	incf	i2___awmod@dividend+1,f,c
 44188  01B278  0E01               	movlw	1
 44189  01B27A  6E06               	movwf	i2___awmod@sign,c
 44190  01B27C                     i2l18830:
 44191  01B27C  AE04               	btfss	i2___awmod@divisor+1,7,c
 44192  01B27E  D004               	goto	i2l18834
 44193  01B280  6C03               	negf	i2___awmod@divisor,c
 44194  01B282  1E04               	comf	i2___awmod@divisor+1,f,c
 44195  01B284  B0D8               	btfsc	status,0,c
 44196  01B286  2A04               	incf	i2___awmod@divisor+1,f,c
 44197  01B288                     i2l18834:
 44198  01B288  5003               	movf	i2___awmod@divisor,w,c
 44199  01B28A  1004               	iorwf	i2___awmod@divisor+1,w,c
 44200  01B28C  B4D8               	btfsc	status,2,c
 44201  01B28E  D018               	goto	i2l18850
 44202  01B290  0E01               	movlw	1
 44203  01B292  6E05               	movwf	i2___awmod@counter,c
 44204  01B294  D004               	goto	i2l18840
 44205  01B296                     i2l18838:
 44206  01B296  90D8               	bcf	status,0,c
 44207  01B298  3603               	rlcf	i2___awmod@divisor,f,c
 44208  01B29A  3604               	rlcf	i2___awmod@divisor+1,f,c
 44209  01B29C  2A05               	incf	i2___awmod@counter,f,c
 44210  01B29E                     i2l18840:
 44211  01B29E  AE04               	btfss	i2___awmod@divisor+1,7,c
 44212  01B2A0  D7FA               	goto	i2l18838
 44213  01B2A2                     i2u2376_40:
 44214  01B2A2  5003               	movf	i2___awmod@divisor,w,c
 44215  01B2A4  5C01               	subwf	i2___awmod@dividend,w,c
 44216  01B2A6  5004               	movf	i2___awmod@divisor+1,w,c
 44217  01B2A8  5802               	subwfb	i2___awmod@dividend+1,w,c
 44218  01B2AA  A0D8               	btfss	status,0,c
 44219  01B2AC  D004               	goto	i2l18846
 44220  01B2AE  5003               	movf	i2___awmod@divisor,w,c
 44221  01B2B0  5E01               	subwf	i2___awmod@dividend,f,c
 44222  01B2B2  5004               	movf	i2___awmod@divisor+1,w,c
 44223  01B2B4  5A02               	subwfb	i2___awmod@dividend+1,f,c
 44224  01B2B6                     i2l18846:
 44225  01B2B6  90D8               	bcf	status,0,c
 44226  01B2B8  3204               	rrcf	i2___awmod@divisor+1,f,c
 44227  01B2BA  3203               	rrcf	i2___awmod@divisor,f,c
 44228  01B2BC  2E05               	decfsz	i2___awmod@counter,f,c
 44229  01B2BE  D7F1               	goto	i2u2376_40
 44230  01B2C0                     i2l18850:
 44231  01B2C0  5006               	movf	i2___awmod@sign,w,c
 44232  01B2C2  B4D8               	btfsc	status,2,c
 44233  01B2C4  D004               	goto	i2l18854
 44234  01B2C6  6C01               	negf	i2___awmod@dividend,c
 44235  01B2C8  1E02               	comf	i2___awmod@dividend+1,f,c
 44236  01B2CA  B0D8               	btfsc	status,0,c
 44237  01B2CC  2A02               	incf	i2___awmod@dividend+1,f,c
 44238  01B2CE                     i2l18854:
 44239  01B2CE  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 44240  01B2D2  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 44241  01B2D6  0012               	return		;funcret
 44242  01B2D8                     __end_ofi2___awmod:
 44243                           	opt callstack 0
 44244                           
 44245 ;; *************** function i2___awdiv *****************
 44246 ;; Defined at:
 44247 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
 44248 ;; Parameters:    Size  Location     Type
 44249 ;;  dividend        2    6[COMRAM] int 
 44250 ;;  divisor         2    8[COMRAM] int 
 44251 ;; Auto vars:     Size  Location     Type
 44252 ;;  __awdiv         2   12[COMRAM] int 
 44253 ;;  __awdiv         1   11[COMRAM] unsigned char 
 44254 ;;  __awdiv         1   10[COMRAM] unsigned char 
 44255 ;; Return value:  Size  Location     Type
 44256 ;;                  2    6[COMRAM] int 
 44257 ;; Registers used:
 44258 ;;		wreg, status,2, status,0
 44259 ;; Tracked objects:
 44260 ;;		On entry : 0/0
 44261 ;;		On exit  : 0/0
 44262 ;;		Unchanged: 0/0
 44263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44264 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44265 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44267 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44268 ;;Total ram usage:        8 bytes
 44269 ;; Hardware stack levels used:    1
 44270 ;; This function calls:
 44271 ;;		Nothing
 44272 ;; This function is called by:
 44273 ;;		i2_scale
 44274 ;;		i2__doprnt
 44275 ;; This function uses a non-reentrant model
 44276 ;;
 44277                           
 44278                           	psect	text183
 44279  01B07E                     __ptext183:
 44280                           	opt callstack 0
 44281  01B07E                     i2___awdiv:
 44282                           	opt callstack 12
 44283                           
 44284                           ;incstack = 0
 44285  01B07E  0E00               	movlw	0
 44286  01B080  6E0C               	movwf	i2___awdiv@sign,c
 44287  01B082  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 44288  01B084  D006               	goto	i2l18786
 44289  01B086  6C09               	negf	i2___awdiv@divisor,c
 44290  01B088  1E0A               	comf	i2___awdiv@divisor+1,f,c
 44291  01B08A  B0D8               	btfsc	status,0,c
 44292  01B08C  2A0A               	incf	i2___awdiv@divisor+1,f,c
 44293  01B08E  0E01               	movlw	1
 44294  01B090  6E0C               	movwf	i2___awdiv@sign,c
 44295  01B092                     i2l18786:
 44296  01B092  AE08               	btfss	i2___awdiv@dividend+1,7,c
 44297  01B094  D006               	goto	i2l18792
 44298  01B096  6C07               	negf	i2___awdiv@dividend,c
 44299  01B098  1E08               	comf	i2___awdiv@dividend+1,f,c
 44300  01B09A  B0D8               	btfsc	status,0,c
 44301  01B09C  2A08               	incf	i2___awdiv@dividend+1,f,c
 44302  01B09E  0E01               	movlw	1
 44303  01B0A0  1A0C               	xorwf	i2___awdiv@sign,f,c
 44304  01B0A2                     i2l18792:
 44305  01B0A2  0E00               	movlw	0
 44306  01B0A4  6E0E               	movwf	i2___awdiv@quotient+1,c
 44307  01B0A6  0E00               	movlw	0
 44308  01B0A8  6E0D               	movwf	i2___awdiv@quotient,c
 44309  01B0AA  5009               	movf	i2___awdiv@divisor,w,c
 44310  01B0AC  100A               	iorwf	i2___awdiv@divisor+1,w,c
 44311  01B0AE  B4D8               	btfsc	status,2,c
 44312  01B0B0  D01C               	goto	i2l18814
 44313  01B0B2  0E01               	movlw	1
 44314  01B0B4  6E0B               	movwf	i2___awdiv@counter,c
 44315  01B0B6  D004               	goto	i2l18800
 44316  01B0B8                     i2l18798:
 44317  01B0B8  90D8               	bcf	status,0,c
 44318  01B0BA  3609               	rlcf	i2___awdiv@divisor,f,c
 44319  01B0BC  360A               	rlcf	i2___awdiv@divisor+1,f,c
 44320  01B0BE  2A0B               	incf	i2___awdiv@counter,f,c
 44321  01B0C0                     i2l18800:
 44322  01B0C0  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 44323  01B0C2  D7FA               	goto	i2l18798
 44324  01B0C4                     i2u2370_40:
 44325  01B0C4  90D8               	bcf	status,0,c
 44326  01B0C6  360D               	rlcf	i2___awdiv@quotient,f,c
 44327  01B0C8  360E               	rlcf	i2___awdiv@quotient+1,f,c
 44328  01B0CA  5009               	movf	i2___awdiv@divisor,w,c
 44329  01B0CC  5C07               	subwf	i2___awdiv@dividend,w,c
 44330  01B0CE  500A               	movf	i2___awdiv@divisor+1,w,c
 44331  01B0D0  5808               	subwfb	i2___awdiv@dividend+1,w,c
 44332  01B0D2  A0D8               	btfss	status,0,c
 44333  01B0D4  D005               	goto	i2l18810
 44334  01B0D6  5009               	movf	i2___awdiv@divisor,w,c
 44335  01B0D8  5E07               	subwf	i2___awdiv@dividend,f,c
 44336  01B0DA  500A               	movf	i2___awdiv@divisor+1,w,c
 44337  01B0DC  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 44338  01B0DE  800D               	bsf	i2___awdiv@quotient,0,c
 44339  01B0E0                     i2l18810:
 44340  01B0E0  90D8               	bcf	status,0,c
 44341  01B0E2  320A               	rrcf	i2___awdiv@divisor+1,f,c
 44342  01B0E4  3209               	rrcf	i2___awdiv@divisor,f,c
 44343  01B0E6  2E0B               	decfsz	i2___awdiv@counter,f,c
 44344  01B0E8  D7ED               	goto	i2u2370_40
 44345  01B0EA                     i2l18814:
 44346  01B0EA  500C               	movf	i2___awdiv@sign,w,c
 44347  01B0EC  B4D8               	btfsc	status,2,c
 44348  01B0EE  D004               	goto	i2l18818
 44349  01B0F0  6C0D               	negf	i2___awdiv@quotient,c
 44350  01B0F2  1E0E               	comf	i2___awdiv@quotient+1,f,c
 44351  01B0F4  B0D8               	btfsc	status,0,c
 44352  01B0F6  2A0E               	incf	i2___awdiv@quotient+1,f,c
 44353  01B0F8                     i2l18818:
 44354  01B0F8  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 44355  01B0FC  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 44356  01B100  0012               	return		;funcret
 44357  01B102                     __end_ofi2___awdiv:
 44358                           	opt callstack 0
 44359                           
 44360 ;; *************** function i2_putch *****************
 44361 ;; Defined at:
 44362 ;;		line 182 in file "mcc_generated_files/eusart2.c"
 44363 ;; Parameters:    Size  Location     Type
 44364 ;;  txData          1    wreg     unsigned char 
 44365 ;; Auto vars:     Size  Location     Type
 44366 ;;  txData          1    1[COMRAM] unsigned char 
 44367 ;; Return value:  Size  Location     Type
 44368 ;;                  1    wreg      void 
 44369 ;; Registers used:
 44370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 44371 ;; Tracked objects:
 44372 ;;		On entry : 0/0
 44373 ;;		On exit  : 0/0
 44374 ;;		Unchanged: 0/0
 44375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44377 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44379 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44380 ;;Total ram usage:        1 bytes
 44381 ;; Hardware stack levels used:    1
 44382 ;; Hardware stack levels required when called:    1
 44383 ;; This function calls:
 44384 ;;		i2_EUSART2_Write
 44385 ;; This function is called by:
 44386 ;;		i2_printf
 44387 ;;		i2__doprnt
 44388 ;; This function uses a non-reentrant model
 44389 ;;
 44390                           
 44391                           	psect	text184
 44392  01C844                     __ptext184:
 44393                           	opt callstack 0
 44394  01C844                     i2_putch:
 44395                           	opt callstack 12
 44396                           
 44397                           ;incstack = 0
 44398                           ;i2putch@txData stored from wreg
 44399  01C844  6E02               	movwf	i2putch@txData,c
 44400                           
 44401                           ;eusart2.c: 184: EUSART2_Write(txData);
 44402  01C846  5002               	movf	i2putch@txData,w,c
 44403  01C848  ECA2  F0DB         	call	i2_EUSART2_Write
 44404  01C84C  0012               	return		;funcret
 44405  01C84E                     __end_ofi2_putch:
 44406                           	opt callstack 0
 44407                           
 44408 ;; *************** function i2_EUSART2_Write *****************
 44409 ;; Defined at:
 44410 ;;		line 153 in file "mcc_generated_files/eusart2.c"
 44411 ;; Parameters:    Size  Location     Type
 44412 ;;  txData          1    wreg     unsigned char 
 44413 ;; Auto vars:     Size  Location     Type
 44414 ;;  txData          1    0[COMRAM] unsigned char 
 44415 ;; Return value:  Size  Location     Type
 44416 ;;                  1    wreg      void 
 44417 ;; Registers used:
 44418 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 44419 ;; Tracked objects:
 44420 ;;		On entry : 0/0
 44421 ;;		On exit  : 0/0
 44422 ;;		Unchanged: 0/0
 44423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44425 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44427 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44428 ;;Total ram usage:        1 bytes
 44429 ;; Hardware stack levels used:    1
 44430 ;; This function calls:
 44431 ;;		Nothing
 44432 ;; This function is called by:
 44433 ;;		i2_putch
 44434 ;; This function uses a non-reentrant model
 44435 ;;
 44436                           
 44437                           	psect	text185
 44438  01B744                     __ptext185:
 44439                           	opt callstack 0
 44440  01B744                     i2_EUSART2_Write:
 44441                           	opt callstack 12
 44442                           
 44443                           ;incstack = 0
 44444                           ;i2EUSART2_Write@txData stored from wreg
 44445  01B744  6E01               	movwf	i2EUSART2_Write@txData,c
 44446                           
 44447                           ;eusart2.c: 155: while(0 == eusart2TxBufferRemaining)
 44448  01B746  D001               	goto	i2l18762
 44449  01B748                     i2l122:
 44450                           
 44451                           ; BSR set to: 1
 44452  01B748  0004               	clrwdt		;# 
 44453  01B74A                     i2l18762:
 44454  01B74A  0101               	movlb	1	; () banked
 44455  01B74C  518F               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 44456  01B74E  1190               	iorwf	(_eusart2TxBufferRemaining+1)& (0+255),w,b	;volatile
 44457  01B750  B4D8               	btfsc	status,2,c
 44458  01B752  D7FA               	goto	i2l122
 44459                           
 44460                           ; BSR set to: 1
 44461                           ;eusart2.c: 158: };eusart2.c: 160: if(0 == PIE3bits.TX2IE)
 44462  01B754  010E               	movlb	14	; () banked
 44463  01B756  BDC5               	btfsc	197,6,b	;volatile
 44464  01B758  D003               	goto	i2l124
 44465                           
 44466                           ; BSR set to: 14
 44467                           ;eusart2.c: 161: {;eusart2.c: 162: TX2REG = txData;
 44468  01B75A  C001  FE9A         	movff	i2EUSART2_Write@txData,3738	;volatile
 44469                           
 44470                           ;eusart2.c: 163: }
 44471  01B75E  D019               	goto	i2l18776
 44472  01B760                     i2l124:
 44473                           
 44474                           ; BSR set to: 14
 44475                           ;eusart2.c: 164: else;eusart2.c: 165: {;eusart2.c: 166: PIE3bits.TX2IE = 0;
 44476  01B760  9DC5               	bcf	197,6,b	;volatile
 44477                           
 44478                           ; BSR set to: 14
 44479                           ;eusart2.c: 167: eusart2TxBuffer[eusart2TxHead++] = txData;
 44480  01B762  0EC8               	movlw	low _eusart2TxBuffer
 44481  01B764  0101               	movlb	1	; () banked
 44482  01B766  2593               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
 44483  01B768  6ED9               	movwf	fsr2l,c
 44484  01B76A  0E04               	movlw	high _eusart2TxBuffer
 44485  01B76C  2194               	addwfc	(_eusart2TxHead+1)& (0+255),w,b	;volatile
 44486  01B76E  6EDA               	movwf	fsr2h,c
 44487  01B770  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 44488                           
 44489                           ; BSR set to: 1
 44490  01B774  4B93               	infsnz	_eusart2TxHead& (0+255),f,b	;volatile
 44491  01B776  2B94               	incf	(_eusart2TxHead+1)& (0+255),f,b	;volatile
 44492                           
 44493                           ; BSR set to: 1
 44494                           ;eusart2.c: 168: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 44495  01B778  0E00               	movlw	0
 44496  01B77A  5D93               	subwf	_eusart2TxHead& (0+255),w,b	;volatile
 44497  01B77C  0E04               	movlw	4
 44498  01B77E  5994               	subwfb	(_eusart2TxHead+1)& (0+255),w,b	;volatile
 44499  01B780  A0D8               	btfss	status,0,c
 44500  01B782  D004               	goto	i2l18774
 44501                           
 44502                           ; BSR set to: 1
 44503                           ;eusart2.c: 169: {;eusart2.c: 170: eusart2TxHead = 0;
 44504  01B784  0E00               	movlw	0
 44505  01B786  6F94               	movwf	(_eusart2TxHead+1)& (0+255),b	;volatile
 44506  01B788  0E00               	movlw	0
 44507  01B78A  6F93               	movwf	_eusart2TxHead& (0+255),b	;volatile
 44508  01B78C                     i2l18774:
 44509                           
 44510                           ; BSR set to: 1
 44511                           ;eusart2.c: 171: };eusart2.c: 172: eusart2TxBufferRemaining--;
 44512  01B78C  078F               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 44513  01B78E  A0D8               	btfss	status,0,c
 44514  01B790  0790               	decf	(_eusart2TxBufferRemaining+1)& (0+255),f,b	;volatile
 44515  01B792                     i2l18776:
 44516                           
 44517                           ;eusart2.c: 173: };eusart2.c: 174: PIE3bits.TX2IE = 1;
 44518  01B792  010E               	movlb	14	; () banked
 44519  01B794  8DC5               	bsf	197,6,b	;volatile
 44520                           
 44521                           ; BSR set to: 14
 44522  01B796  0012               	return		;funcret
 44523  01B798                     __end_ofi2_EUSART2_Write:
 44524                           	opt callstack 0
 44525                           
 44526 ;; *************** function i2_isdigit *****************
 44527 ;; Defined at:
 44528 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
 44529 ;; Parameters:    Size  Location     Type
 44530 ;;  c               1    wreg     unsigned char 
 44531 ;; Auto vars:     Size  Location     Type
 44532 ;;  c               1    2[COMRAM] unsigned char 
 44533 ;; Return value:  Size  Location     Type
 44534 ;;		None               void
 44535 ;; Registers used:
 44536 ;;		wreg, status,2, status,0
 44537 ;; Tracked objects:
 44538 ;;		On entry : 0/0
 44539 ;;		On exit  : 0/0
 44540 ;;		Unchanged: 0/0
 44541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44543 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44544 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44545 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44546 ;;Total ram usage:        3 bytes
 44547 ;; Hardware stack levels used:    1
 44548 ;; This function calls:
 44549 ;;		Nothing
 44550 ;; This function is called by:
 44551 ;;		i2__doprnt
 44552 ;; This function uses a non-reentrant model
 44553 ;;
 44554                           
 44555                           	psect	text186
 44556  01C4B4                     __ptext186:
 44557                           	opt callstack 0
 44558  01C4B4                     i2_isdigit:
 44559                           	opt callstack 13
 44560                           
 44561                           ; BSR set to: 14
 44562                           ;incstack = 0
 44563                           ;i2isdigit@c stored from wreg
 44564  01C4B4  6E03               	movwf	i2isdigit@c,c
 44565  01C4B6  0E00               	movlw	0
 44566  01C4B8  6E02               	movwf	i2_isdigit$5449,c
 44567  01C4BA  0E3A               	movlw	58
 44568  01C4BC  6003               	cpfslt	i2isdigit@c,c
 44569  01C4BE  D005               	goto	i2l19886
 44570  01C4C0  0E2F               	movlw	47
 44571  01C4C2  6403               	cpfsgt	i2isdigit@c,c
 44572  01C4C4  D002               	goto	i2l19886
 44573  01C4C6  0E01               	movlw	1
 44574  01C4C8  6E02               	movwf	i2_isdigit$5449,c
 44575  01C4CA                     i2l19886:
 44576  01C4CA  C002  F001         	movff	i2_isdigit$5449,??i2_isdigit
 44577  01C4CE  3001               	rrcf	??i2_isdigit,w,c
 44578  01C4D0  0012               	return		;funcret
 44579  01C4D2                     __end_ofi2_isdigit:
 44580                           	opt callstack 0
 44581                           
 44582 ;; *************** function i2_fround *****************
 44583 ;; Defined at:
 44584 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 44585 ;; Parameters:    Size  Location     Type
 44586 ;;  prec            1    wreg     unsigned char 
 44587 ;; Auto vars:     Size  Location     Type
 44588 ;;  prec            1   80[COMRAM] unsigned char 
 44589 ;; Return value:  Size  Location     Type
 44590 ;;                  4   68[COMRAM] unsigned char 
 44591 ;; Registers used:
 44592 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44593 ;; Tracked objects:
 44594 ;;		On entry : 0/0
 44595 ;;		On exit  : 0/0
 44596 ;;		Unchanged: 0/0
 44597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44598 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44599 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44601 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44602 ;;Total ram usage:       13 bytes
 44603 ;; Hardware stack levels used:    1
 44604 ;; Hardware stack levels required when called:    1
 44605 ;; This function calls:
 44606 ;;		i2___flmul
 44607 ;;		i2___lwdiv
 44608 ;;		i2___lwmod
 44609 ;; This function is called by:
 44610 ;;		i2__doprnt
 44611 ;; This function uses a non-reentrant model
 44612 ;;
 44613                           
 44614                           	psect	text187
 44615  017F48                     __ptext187:
 44616                           	opt callstack 0
 44617  017F48                     i2_fround:
 44618                           	opt callstack 12
 44619                           
 44620                           ;incstack = 0
 44621                           ;i2fround@prec stored from wreg
 44622  017F48  6E51               	movwf	i2fround@prec,c
 44623                           
 44624                           ;doprnt.c: 421: if(prec>=110)
 44625  017F4A  0E6D               	movlw	109
 44626  017F4C  6451               	cpfsgt	i2fround@prec,c
 44627  017F4E  D0B5               	goto	i2l19528
 44628                           
 44629                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 44630  017F50  0E00               	movlw	0
 44631  017F52  6E30               	movwf	i2___flmul@a,c
 44632  017F54  0E00               	movlw	0
 44633  017F56  6E31               	movwf	i2___flmul@a+1,c
 44634  017F58  0E00               	movlw	0
 44635  017F5A  6E32               	movwf	i2___flmul@a+2,c
 44636  017F5C  0E3F               	movlw	63
 44637  017F5E  6E33               	movwf	i2___flmul@a+3,c
 44638  017F60  0E00               	movlw	0
 44639  017F62  6E09               	movwf	i2___lwdiv@divisor+1,c
 44640  017F64  0E64               	movlw	100
 44641  017F66  6E08               	movwf	i2___lwdiv@divisor,c
 44642  017F68  C051  F006         	movff	i2fround@prec,i2___lwdiv@dividend
 44643  017F6C  6A07               	clrf	i2___lwdiv@dividend+1,c
 44644  017F6E  ECF5  F0DB         	call	i2___lwdiv	;wreg free
 44645  017F72  90D8               	bcf	status,0,c
 44646  017F74  3606               	rlcf	?i2___lwdiv,f,c
 44647  017F76  3607               	rlcf	?i2___lwdiv+1,f,c
 44648  017F78  90D8               	bcf	status,0,c
 44649  017F7A  3606               	rlcf	?i2___lwdiv,f,c
 44650  017F7C  3607               	rlcf	?i2___lwdiv+1,f,c
 44651  017F7E  0E48               	movlw	72
 44652  017F80  2606               	addwf	?i2___lwdiv,f,c
 44653  017F82  0E00               	movlw	0
 44654  017F84  2207               	addwfc	?i2___lwdiv+1,f,c
 44655  017F86  0EF3               	movlw	low __npowers_
 44656  017F88  2406               	addwf	?i2___lwdiv,w,c
 44657  017F8A  6EF6               	movwf	tblptrl,c
 44658  017F8C  0EE4               	movlw	high __npowers_
 44659  017F8E  2007               	addwfc	?i2___lwdiv+1,w,c
 44660  017F90  6EF7               	movwf	tblptrh,c
 44661  017F92                     	if	1	;There are 3 active tblptr bytes
 44662  017F92  6AF8               	clrf	tblptru,c
 44663  017F94  0E00               	movlw	low (__mediumconst shr (0+16))
 44664  017F96  22F8               	addwfc	tblptru,f,c
 44665  017F98                     	endif
 44666  017F98  0009               	tblrd		*+
 44667  017F9A  CFF5 F02C          	movff	tablat,i2___flmul@b
 44668  017F9E  0009               	tblrd		*+
 44669  017FA0  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 44670  017FA4  0009               	tblrd		*+
 44671  017FA6  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 44672  017FAA  000A               	tblrd		*-
 44673  017FAC  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 44674  017FB0  EC9C  F0B6         	call	i2___flmul	;wreg free
 44675  017FB4  C02C  F04D         	movff	?i2___flmul,i2_fround$6416
 44676  017FB8  C02D  F04E         	movff	?i2___flmul+1,i2_fround$6416+1
 44677  017FBC  C02E  F04F         	movff	?i2___flmul+2,i2_fround$6416+2
 44678  017FC0  C02F  F050         	movff	?i2___flmul+3,i2_fround$6416+3
 44679                           
 44680                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 44681  017FC4  0E00               	movlw	0
 44682  017FC6  6E09               	movwf	i2___lwdiv@divisor+1,c
 44683  017FC8  0E0A               	movlw	10
 44684  017FCA  6E08               	movwf	i2___lwdiv@divisor,c
 44685  017FCC  0E00               	movlw	0
 44686  017FCE  6E04               	movwf	i2___lwmod@divisor+1,c
 44687  017FD0  0E64               	movlw	100
 44688  017FD2  6E03               	movwf	i2___lwmod@divisor,c
 44689  017FD4  C051  F001         	movff	i2fround@prec,i2___lwmod@dividend
 44690  017FD8  6A02               	clrf	i2___lwmod@dividend+1,c
 44691  017FDA  EC66  F0DE         	call	i2___lwmod	;wreg free
 44692  017FDE  C001  F006         	movff	?i2___lwmod,i2___lwdiv@dividend
 44693  017FE2  C002  F007         	movff	?i2___lwmod+1,i2___lwdiv@dividend+1
 44694  017FE6  ECF5  F0DB         	call	i2___lwdiv	;wreg free
 44695  017FEA  90D8               	bcf	status,0,c
 44696  017FEC  3606               	rlcf	?i2___lwdiv,f,c
 44697  017FEE  3607               	rlcf	?i2___lwdiv+1,f,c
 44698  017FF0  90D8               	bcf	status,0,c
 44699  017FF2  3606               	rlcf	?i2___lwdiv,f,c
 44700  017FF4  3607               	rlcf	?i2___lwdiv+1,f,c
 44701  017FF6  0E24               	movlw	36
 44702  017FF8  2606               	addwf	?i2___lwdiv,f,c
 44703  017FFA  0E00               	movlw	0
 44704  017FFC  2207               	addwfc	?i2___lwdiv+1,f,c
 44705  017FFE  0EF3               	movlw	low __npowers_
 44706  018000  2406               	addwf	?i2___lwdiv,w,c
 44707  018002  6EF6               	movwf	tblptrl,c
 44708  018004  0EE4               	movlw	high __npowers_
 44709  018006  2007               	addwfc	?i2___lwdiv+1,w,c
 44710  018008  6EF7               	movwf	tblptrh,c
 44711  01800A                     	if	1	;There are 3 active tblptr bytes
 44712  01800A  6AF8               	clrf	tblptru,c
 44713  01800C  0E00               	movlw	low (__mediumconst shr (0+16))
 44714  01800E  22F8               	addwfc	tblptru,f,c
 44715  018010                     	endif
 44716  018010  0009               	tblrd		*+
 44717  018012  CFF5 F030          	movff	tablat,i2___flmul@a
 44718  018016  0009               	tblrd		*+
 44719  018018  CFF5 F031          	movff	tablat,i2___flmul@a+1
 44720  01801C  0009               	tblrd		*+
 44721  01801E  CFF5 F032          	movff	tablat,i2___flmul@a+2
 44722  018022  000A               	tblrd		*-
 44723  018024  CFF5 F033          	movff	tablat,i2___flmul@a+3
 44724  018028  C04D  F02C         	movff	i2_fround$6416,i2___flmul@b
 44725  01802C  C04E  F02D         	movff	i2_fround$6416+1,i2___flmul@b+1
 44726  018030  C04F  F02E         	movff	i2_fround$6416+2,i2___flmul@b+2
 44727  018034  C050  F02F         	movff	i2_fround$6416+3,i2___flmul@b+3
 44728  018038  EC9C  F0B6         	call	i2___flmul	;wreg free
 44729  01803C  C02C  F049         	movff	?i2___flmul,i2_fround$6417
 44730  018040  C02D  F04A         	movff	?i2___flmul+1,i2_fround$6417+1
 44731  018044  C02E  F04B         	movff	?i2___flmul+2,i2_fround$6417+2
 44732  018048  C02F  F04C         	movff	?i2___flmul+3,i2_fround$6417+3
 44733                           
 44734                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 44735  01804C  C049  F02C         	movff	i2_fround$6417,i2___flmul@b
 44736  018050  C04A  F02D         	movff	i2_fround$6417+1,i2___flmul@b+1
 44737  018054  C04B  F02E         	movff	i2_fround$6417+2,i2___flmul@b+2
 44738  018058  C04C  F02F         	movff	i2_fround$6417+3,i2___flmul@b+3
 44739  01805C  0E00               	movlw	0
 44740  01805E  6E04               	movwf	i2___lwmod@divisor+1,c
 44741  018060  0E0A               	movlw	10
 44742  018062  6E03               	movwf	i2___lwmod@divisor,c
 44743  018064  C051  F001         	movff	i2fround@prec,i2___lwmod@dividend
 44744  018068  6A02               	clrf	i2___lwmod@dividend+1,c
 44745  01806A  EC66  F0DE         	call	i2___lwmod	;wreg free
 44746  01806E  90D8               	bcf	status,0,c
 44747  018070  3601               	rlcf	?i2___lwmod,f,c
 44748  018072  3602               	rlcf	?i2___lwmod+1,f,c
 44749  018074  90D8               	bcf	status,0,c
 44750  018076  3601               	rlcf	?i2___lwmod,f,c
 44751  018078  3602               	rlcf	?i2___lwmod+1,f,c
 44752  01807A  0EF3               	movlw	low __npowers_
 44753  01807C  2401               	addwf	?i2___lwmod,w,c
 44754  01807E  6EF6               	movwf	tblptrl,c
 44755  018080  0EE4               	movlw	high __npowers_
 44756  018082  2002               	addwfc	?i2___lwmod+1,w,c
 44757  018084  6EF7               	movwf	tblptrh,c
 44758  018086                     	if	1	;There are 3 active tblptr bytes
 44759  018086  6AF8               	clrf	tblptru,c
 44760  018088  0E00               	movlw	low (__mediumconst shr (0+16))
 44761  01808A  22F8               	addwfc	tblptru,f,c
 44762  01808C                     	endif
 44763  01808C  0009               	tblrd		*+
 44764  01808E  CFF5 F030          	movff	tablat,i2___flmul@a
 44765  018092  0009               	tblrd		*+
 44766  018094  CFF5 F031          	movff	tablat,i2___flmul@a+1
 44767  018098  0009               	tblrd		*+
 44768  01809A  CFF5 F032          	movff	tablat,i2___flmul@a+2
 44769  01809E  000A               	tblrd		*-
 44770  0180A0  CFF5 F033          	movff	tablat,i2___flmul@a+3
 44771  0180A4  EC9C  F0B6         	call	i2___flmul	;wreg free
 44772  0180A8  C02C  F045         	movff	?i2___flmul,?i2_fround
 44773  0180AC  C02D  F046         	movff	?i2___flmul+1,?i2_fround+1
 44774  0180B0  C02E  F047         	movff	?i2___flmul+2,?i2_fround+2
 44775  0180B4  C02F  F048         	movff	?i2___flmul+3,?i2_fround+3
 44776  0180B8  0012               	return	
 44777  0180BA                     i2l19528:
 44778                           
 44779                           ;doprnt.c: 423: else if(prec > 10)
 44780  0180BA  0E0A               	movlw	10
 44781  0180BC  6451               	cpfsgt	i2fround@prec,c
 44782  0180BE  D071               	goto	i2l19534
 44783                           
 44784                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 44785  0180C0  0E00               	movlw	0
 44786  0180C2  6E30               	movwf	i2___flmul@a,c
 44787  0180C4  0E00               	movlw	0
 44788  0180C6  6E31               	movwf	i2___flmul@a+1,c
 44789  0180C8  0E00               	movlw	0
 44790  0180CA  6E32               	movwf	i2___flmul@a+2,c
 44791  0180CC  0E3F               	movlw	63
 44792  0180CE  6E33               	movwf	i2___flmul@a+3,c
 44793  0180D0  0E00               	movlw	0
 44794  0180D2  6E09               	movwf	i2___lwdiv@divisor+1,c
 44795  0180D4  0E0A               	movlw	10
 44796  0180D6  6E08               	movwf	i2___lwdiv@divisor,c
 44797  0180D8  C051  F006         	movff	i2fround@prec,i2___lwdiv@dividend
 44798  0180DC  6A07               	clrf	i2___lwdiv@dividend+1,c
 44799  0180DE  ECF5  F0DB         	call	i2___lwdiv	;wreg free
 44800  0180E2  90D8               	bcf	status,0,c
 44801  0180E4  3606               	rlcf	?i2___lwdiv,f,c
 44802  0180E6  3607               	rlcf	?i2___lwdiv+1,f,c
 44803  0180E8  90D8               	bcf	status,0,c
 44804  0180EA  3606               	rlcf	?i2___lwdiv,f,c
 44805  0180EC  3607               	rlcf	?i2___lwdiv+1,f,c
 44806  0180EE  0E24               	movlw	36
 44807  0180F0  2606               	addwf	?i2___lwdiv,f,c
 44808  0180F2  0E00               	movlw	0
 44809  0180F4  2207               	addwfc	?i2___lwdiv+1,f,c
 44810  0180F6  0EF3               	movlw	low __npowers_
 44811  0180F8  2406               	addwf	?i2___lwdiv,w,c
 44812  0180FA  6EF6               	movwf	tblptrl,c
 44813  0180FC  0EE4               	movlw	high __npowers_
 44814  0180FE  2007               	addwfc	?i2___lwdiv+1,w,c
 44815  018100  6EF7               	movwf	tblptrh,c
 44816  018102                     	if	1	;There are 3 active tblptr bytes
 44817  018102  6AF8               	clrf	tblptru,c
 44818  018104  0E00               	movlw	low (__mediumconst shr (0+16))
 44819  018106  22F8               	addwfc	tblptru,f,c
 44820  018108                     	endif
 44821  018108  0009               	tblrd		*+
 44822  01810A  CFF5 F02C          	movff	tablat,i2___flmul@b
 44823  01810E  0009               	tblrd		*+
 44824  018110  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 44825  018114  0009               	tblrd		*+
 44826  018116  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 44827  01811A  000A               	tblrd		*-
 44828  01811C  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 44829  018120  EC9C  F0B6         	call	i2___flmul	;wreg free
 44830  018124  C02C  F04D         	movff	?i2___flmul,i2_fround$6416
 44831  018128  C02D  F04E         	movff	?i2___flmul+1,i2_fround$6416+1
 44832  01812C  C02E  F04F         	movff	?i2___flmul+2,i2_fround$6416+2
 44833  018130  C02F  F050         	movff	?i2___flmul+3,i2_fround$6416+3
 44834                           
 44835                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 44836  018134  C04D  F02C         	movff	i2_fround$6416,i2___flmul@b
 44837  018138  C04E  F02D         	movff	i2_fround$6416+1,i2___flmul@b+1
 44838  01813C  C04F  F02E         	movff	i2_fround$6416+2,i2___flmul@b+2
 44839  018140  C050  F02F         	movff	i2_fround$6416+3,i2___flmul@b+3
 44840  018144  0E00               	movlw	0
 44841  018146  6E04               	movwf	i2___lwmod@divisor+1,c
 44842  018148  0E0A               	movlw	10
 44843  01814A  6E03               	movwf	i2___lwmod@divisor,c
 44844  01814C  C051  F001         	movff	i2fround@prec,i2___lwmod@dividend
 44845  018150  6A02               	clrf	i2___lwmod@dividend+1,c
 44846  018152  EC66  F0DE         	call	i2___lwmod	;wreg free
 44847  018156  90D8               	bcf	status,0,c
 44848  018158  3601               	rlcf	?i2___lwmod,f,c
 44849  01815A  3602               	rlcf	?i2___lwmod+1,f,c
 44850  01815C  90D8               	bcf	status,0,c
 44851  01815E  3601               	rlcf	?i2___lwmod,f,c
 44852  018160  3602               	rlcf	?i2___lwmod+1,f,c
 44853  018162  0EF3               	movlw	low __npowers_
 44854  018164  2401               	addwf	?i2___lwmod,w,c
 44855  018166  6EF6               	movwf	tblptrl,c
 44856  018168  0EE4               	movlw	high __npowers_
 44857  01816A  2002               	addwfc	?i2___lwmod+1,w,c
 44858  01816C  6EF7               	movwf	tblptrh,c
 44859  01816E                     	if	1	;There are 3 active tblptr bytes
 44860  01816E  6AF8               	clrf	tblptru,c
 44861  018170  0E00               	movlw	low (__mediumconst shr (0+16))
 44862  018172  22F8               	addwfc	tblptru,f,c
 44863  018174                     	endif
 44864  018174  0009               	tblrd		*+
 44865  018176  CFF5 F030          	movff	tablat,i2___flmul@a
 44866  01817A  0009               	tblrd		*+
 44867  01817C  CFF5 F031          	movff	tablat,i2___flmul@a+1
 44868  018180  0009               	tblrd		*+
 44869  018182  CFF5 F032          	movff	tablat,i2___flmul@a+2
 44870  018186  000A               	tblrd		*-
 44871  018188  CFF5 F033          	movff	tablat,i2___flmul@a+3
 44872  01818C  EC9C  F0B6         	call	i2___flmul	;wreg free
 44873  018190  C02C  F045         	movff	?i2___flmul,?i2_fround
 44874  018194  C02D  F046         	movff	?i2___flmul+1,?i2_fround+1
 44875  018198  C02E  F047         	movff	?i2___flmul+2,?i2_fround+2
 44876  01819C  C02F  F048         	movff	?i2___flmul+3,?i2_fround+3
 44877  0181A0  0012               	return	
 44878  0181A2                     i2l19534:
 44879                           
 44880                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
 44881  0181A2  5051               	movf	i2fround@prec,w,c
 44882  0181A4  0D04               	mullw	4
 44883  0181A6  0EF3               	movlw	low __npowers_
 44884  0181A8  24F3               	addwf	prodl,w,c
 44885  0181AA  6EF6               	movwf	tblptrl,c
 44886  0181AC  0EE4               	movlw	high __npowers_
 44887  0181AE  20F4               	addwfc	prodh,w,c
 44888  0181B0  6EF7               	movwf	tblptrh,c
 44889  0181B2                     	if	1	;There are 3 active tblptr bytes
 44890  0181B2  6AF8               	clrf	tblptru,c
 44891  0181B4  0E00               	movlw	low (__mediumconst shr (0+16))
 44892  0181B6  22F8               	addwfc	tblptru,f,c
 44893  0181B8                     	endif
 44894  0181B8  0009               	tblrd		*+
 44895  0181BA  CFF5 F02C          	movff	tablat,i2___flmul@b
 44896  0181BE  0009               	tblrd		*+
 44897  0181C0  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 44898  0181C4  0009               	tblrd		*+
 44899  0181C6  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 44900  0181CA  000A               	tblrd		*-
 44901  0181CC  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 44902  0181D0  0E00               	movlw	0
 44903  0181D2  6E30               	movwf	i2___flmul@a,c
 44904  0181D4  0E00               	movlw	0
 44905  0181D6  6E31               	movwf	i2___flmul@a+1,c
 44906  0181D8  0E00               	movlw	0
 44907  0181DA  6E32               	movwf	i2___flmul@a+2,c
 44908  0181DC  0E3F               	movlw	63
 44909  0181DE  6E33               	movwf	i2___flmul@a+3,c
 44910  0181E0  EC9C  F0B6         	call	i2___flmul	;wreg free
 44911  0181E4  C02C  F045         	movff	?i2___flmul,?i2_fround
 44912  0181E8  C02D  F046         	movff	?i2___flmul+1,?i2_fround+1
 44913  0181EC  C02E  F047         	movff	?i2___flmul+2,?i2_fround+2
 44914  0181F0  C02F  F048         	movff	?i2___flmul+3,?i2_fround+3
 44915  0181F4  0012               	return		;funcret
 44916  0181F6                     __end_ofi2_fround:
 44917                           	opt callstack 0
 44918                           
 44919 ;; *************** function i2___lwmod *****************
 44920 ;; Defined at:
 44921 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
 44922 ;; Parameters:    Size  Location     Type
 44923 ;;  dividend        2    0[COMRAM] unsigned int 
 44924 ;;  divisor         2    2[COMRAM] unsigned int 
 44925 ;; Auto vars:     Size  Location     Type
 44926 ;;  __lwmod         1    4[COMRAM] unsigned char 
 44927 ;; Return value:  Size  Location     Type
 44928 ;;                  2    0[COMRAM] unsigned int 
 44929 ;; Registers used:
 44930 ;;		wreg, status,2, status,0
 44931 ;; Tracked objects:
 44932 ;;		On entry : 0/0
 44933 ;;		On exit  : 0/0
 44934 ;;		Unchanged: 0/0
 44935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44936 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44937 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44939 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44940 ;;Total ram usage:        5 bytes
 44941 ;; Hardware stack levels used:    1
 44942 ;; This function calls:
 44943 ;;		Nothing
 44944 ;; This function is called by:
 44945 ;;		i2_fround
 44946 ;; This function uses a non-reentrant model
 44947 ;;
 44948                           
 44949                           	psect	text188
 44950  01BCCC                     __ptext188:
 44951                           	opt callstack 0
 44952  01BCCC                     i2___lwmod:
 44953                           	opt callstack 12
 44954                           
 44955                           ;incstack = 0
 44956  01BCCC  5003               	movf	i2___lwmod@divisor,w,c
 44957  01BCCE  1004               	iorwf	i2___lwmod@divisor+1,w,c
 44958  01BCD0  B4D8               	btfsc	status,2,c
 44959  01BCD2  D018               	goto	i2l3198
 44960  01BCD4  0E01               	movlw	1
 44961  01BCD6  6E05               	movwf	i2___lwmod@counter,c
 44962  01BCD8  D004               	goto	i2l18886
 44963  01BCDA                     i2l18884:
 44964  01BCDA  90D8               	bcf	status,0,c
 44965  01BCDC  3603               	rlcf	i2___lwmod@divisor,f,c
 44966  01BCDE  3604               	rlcf	i2___lwmod@divisor+1,f,c
 44967  01BCE0  2A05               	incf	i2___lwmod@counter,f,c
 44968  01BCE2                     i2l18886:
 44969  01BCE2  AE04               	btfss	i2___lwmod@divisor+1,7,c
 44970  01BCE4  D7FA               	goto	i2l18884
 44971  01BCE6                     i2u2383_40:
 44972  01BCE6  5003               	movf	i2___lwmod@divisor,w,c
 44973  01BCE8  5C01               	subwf	i2___lwmod@dividend,w,c
 44974  01BCEA  5004               	movf	i2___lwmod@divisor+1,w,c
 44975  01BCEC  5802               	subwfb	i2___lwmod@dividend+1,w,c
 44976  01BCEE  A0D8               	btfss	status,0,c
 44977  01BCF0  D004               	goto	i2l18892
 44978  01BCF2  5003               	movf	i2___lwmod@divisor,w,c
 44979  01BCF4  5E01               	subwf	i2___lwmod@dividend,f,c
 44980  01BCF6  5004               	movf	i2___lwmod@divisor+1,w,c
 44981  01BCF8  5A02               	subwfb	i2___lwmod@dividend+1,f,c
 44982  01BCFA                     i2l18892:
 44983  01BCFA  90D8               	bcf	status,0,c
 44984  01BCFC  3204               	rrcf	i2___lwmod@divisor+1,f,c
 44985  01BCFE  3203               	rrcf	i2___lwmod@divisor,f,c
 44986  01BD00  2E05               	decfsz	i2___lwmod@counter,f,c
 44987  01BD02  D7F1               	goto	i2u2383_40
 44988  01BD04                     i2l3198:
 44989  01BD04  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
 44990  01BD08  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
 44991  01BD0C  0012               	return		;funcret
 44992  01BD0E                     __end_ofi2___lwmod:
 44993                           	opt callstack 0
 44994                           
 44995 ;; *************** function i2___lwdiv *****************
 44996 ;; Defined at:
 44997 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
 44998 ;; Parameters:    Size  Location     Type
 44999 ;;  dividend        2    5[COMRAM] unsigned int 
 45000 ;;  divisor         2    7[COMRAM] unsigned int 
 45001 ;; Auto vars:     Size  Location     Type
 45002 ;;  __lwdiv         2   10[COMRAM] unsigned int 
 45003 ;;  __lwdiv         1    9[COMRAM] unsigned char 
 45004 ;; Return value:  Size  Location     Type
 45005 ;;                  2    5[COMRAM] unsigned int 
 45006 ;; Registers used:
 45007 ;;		wreg, status,2, status,0
 45008 ;; Tracked objects:
 45009 ;;		On entry : 0/0
 45010 ;;		On exit  : 0/0
 45011 ;;		Unchanged: 0/0
 45012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45013 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45014 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45016 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45017 ;;Total ram usage:        7 bytes
 45018 ;; Hardware stack levels used:    1
 45019 ;; This function calls:
 45020 ;;		Nothing
 45021 ;; This function is called by:
 45022 ;;		i2_fround
 45023 ;; This function uses a non-reentrant model
 45024 ;;
 45025                           
 45026                           	psect	text189
 45027  01B7EA                     __ptext189:
 45028                           	opt callstack 0
 45029  01B7EA                     i2___lwdiv:
 45030                           	opt callstack 12
 45031                           
 45032                           ;incstack = 0
 45033  01B7EA  0E00               	movlw	0
 45034  01B7EC  6E0C               	movwf	i2___lwdiv@quotient+1,c
 45035  01B7EE  0E00               	movlw	0
 45036  01B7F0  6E0B               	movwf	i2___lwdiv@quotient,c
 45037  01B7F2  5008               	movf	i2___lwdiv@divisor,w,c
 45038  01B7F4  1009               	iorwf	i2___lwdiv@divisor+1,w,c
 45039  01B7F6  B4D8               	btfsc	status,2,c
 45040  01B7F8  D01C               	goto	i2l3188
 45041  01B7FA  0E01               	movlw	1
 45042  01B7FC  6E0A               	movwf	i2___lwdiv@counter,c
 45043  01B7FE  D004               	goto	i2l18866
 45044  01B800                     i2l18864:
 45045  01B800  90D8               	bcf	status,0,c
 45046  01B802  3608               	rlcf	i2___lwdiv@divisor,f,c
 45047  01B804  3609               	rlcf	i2___lwdiv@divisor+1,f,c
 45048  01B806  2A0A               	incf	i2___lwdiv@counter,f,c
 45049  01B808                     i2l18866:
 45050  01B808  AE09               	btfss	i2___lwdiv@divisor+1,7,c
 45051  01B80A  D7FA               	goto	i2l18864
 45052  01B80C                     i2u2380_40:
 45053  01B80C  90D8               	bcf	status,0,c
 45054  01B80E  360B               	rlcf	i2___lwdiv@quotient,f,c
 45055  01B810  360C               	rlcf	i2___lwdiv@quotient+1,f,c
 45056  01B812  5008               	movf	i2___lwdiv@divisor,w,c
 45057  01B814  5C06               	subwf	i2___lwdiv@dividend,w,c
 45058  01B816  5009               	movf	i2___lwdiv@divisor+1,w,c
 45059  01B818  5807               	subwfb	i2___lwdiv@dividend+1,w,c
 45060  01B81A  A0D8               	btfss	status,0,c
 45061  01B81C  D005               	goto	i2l18876
 45062  01B81E  5008               	movf	i2___lwdiv@divisor,w,c
 45063  01B820  5E06               	subwf	i2___lwdiv@dividend,f,c
 45064  01B822  5009               	movf	i2___lwdiv@divisor+1,w,c
 45065  01B824  5A07               	subwfb	i2___lwdiv@dividend+1,f,c
 45066  01B826  800B               	bsf	i2___lwdiv@quotient,0,c
 45067  01B828                     i2l18876:
 45068  01B828  90D8               	bcf	status,0,c
 45069  01B82A  3209               	rrcf	i2___lwdiv@divisor+1,f,c
 45070  01B82C  3208               	rrcf	i2___lwdiv@divisor,f,c
 45071  01B82E  2E0A               	decfsz	i2___lwdiv@counter,f,c
 45072  01B830  D7ED               	goto	i2u2380_40
 45073  01B832                     i2l3188:
 45074  01B832  C00B  F006         	movff	i2___lwdiv@quotient,?i2___lwdiv
 45075  01B836  C00C  F007         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 45076  01B83A  0012               	return		;funcret
 45077  01B83C                     __end_ofi2___lwdiv:
 45078                           	opt callstack 0
 45079                           
 45080 ;; *************** function i2__tdiv_to_l_ *****************
 45081 ;; Defined at:
 45082 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
 45083 ;; Parameters:    Size  Location     Type
 45084 ;;  f1              4    0[COMRAM] float 
 45085 ;;  f2              4    4[COMRAM] float 
 45086 ;; Auto vars:     Size  Location     Type
 45087 ;;  _tdiv_to_l_     4   11[COMRAM] unsigned long 
 45088 ;;  _tdiv_to_l_     1   16[COMRAM] unsigned char 
 45089 ;;  _tdiv_to_l_     1   15[COMRAM] unsigned char 
 45090 ;; Return value:  Size  Location     Type
 45091 ;;                  4    0[COMRAM] unsigned long 
 45092 ;; Registers used:
 45093 ;;		wreg, status,2, status,0
 45094 ;; Tracked objects:
 45095 ;;		On entry : 0/0
 45096 ;;		On exit  : 0/0
 45097 ;;		Unchanged: 0/0
 45098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45099 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45100 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45101 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45102 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45103 ;;Total ram usage:       17 bytes
 45104 ;; Hardware stack levels used:    1
 45105 ;; This function calls:
 45106 ;;		Nothing
 45107 ;; This function is called by:
 45108 ;;		i2__doprnt
 45109 ;; This function uses a non-reentrant model
 45110 ;;
 45111                           
 45112                           	psect	text190
 45113  019EFA                     __ptext190:
 45114                           	opt callstack 0
 45115  019EFA                     i2__tdiv_to_l_:
 45116                           	opt callstack 13
 45117                           
 45118                           ;incstack = 0
 45119  019EFA  C003  F009         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 45120  019EFE  6A0A               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 45121  019F00  6A0B               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 45122  019F02  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 45123  019F04  3609               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 45124  019F06  E301               	bnc	u2509_41
 45125  019F08  800A               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 45126  019F0A                     u2509_41:
 45127  019F0A  5009               	movf	??i2__tdiv_to_l_,w,c
 45128  019F0C  6E11               	movwf	i2__tdiv_to_l_@exp1,c
 45129  019F0E  5011               	movf	i2__tdiv_to_l_@exp1,w,c
 45130  019F10  A4D8               	btfss	status,2,c
 45131  019F12  D009               	goto	i2l19760
 45132  019F14                     i2u2510_40:
 45133  019F14  0E00               	movlw	0
 45134  019F16  6E01               	movwf	?i2__tdiv_to_l_,c
 45135  019F18  0E00               	movlw	0
 45136  019F1A  6E02               	movwf	?i2__tdiv_to_l_+1,c
 45137  019F1C  0E00               	movlw	0
 45138  019F1E  6E03               	movwf	?i2__tdiv_to_l_+2,c
 45139  019F20  0E00               	movlw	0
 45140  019F22  6E04               	movwf	?i2__tdiv_to_l_+3,c
 45141  019F24  0012               	return	
 45142  019F26                     i2l19760:
 45143  019F26  C007  F009         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 45144  019F2A  6A0A               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 45145  019F2C  6A0B               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 45146  019F2E  3406               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 45147  019F30  3609               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 45148  019F32  E301               	bnc	u2511_41
 45149  019F34  800A               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 45150  019F36                     u2511_41:
 45151  019F36  5009               	movf	??i2__tdiv_to_l_,w,c
 45152  019F38  6E10               	movwf	i2__tdiv_to_l_@cntr,c
 45153  019F3A  5010               	movf	i2__tdiv_to_l_@cntr,w,c
 45154  019F3C  B4D8               	btfsc	status,2,c
 45155  019F3E  D7EA               	goto	i2u2510_40
 45156  019F40  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 45157  019F42  0EFF               	movlw	255
 45158  019F44  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 45159  019F46  0EFF               	movlw	255
 45160  019F48  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 45161  019F4A  0E00               	movlw	0
 45162  019F4C  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 45163  019F4E  8E06               	bsf	i2__tdiv_to_l_@f2+1,7,c
 45164  019F50  0EFF               	movlw	255
 45165  019F52  1605               	andwf	i2__tdiv_to_l_@f2,f,c
 45166  019F54  0EFF               	movlw	255
 45167  019F56  1606               	andwf	i2__tdiv_to_l_@f2+1,f,c
 45168  019F58  0E00               	movlw	0
 45169  019F5A  1607               	andwf	i2__tdiv_to_l_@f2+2,f,c
 45170  019F5C  0E00               	movlw	0
 45171  019F5E  6E0C               	movwf	i2__tdiv_to_l_@quot,c
 45172  019F60  0E00               	movlw	0
 45173  019F62  6E0D               	movwf	i2__tdiv_to_l_@quot+1,c
 45174  019F64  0E00               	movlw	0
 45175  019F66  6E0E               	movwf	i2__tdiv_to_l_@quot+2,c
 45176  019F68  0E00               	movlw	0
 45177  019F6A  6E0F               	movwf	i2__tdiv_to_l_@quot+3,c
 45178  019F6C  0E7F               	movlw	127
 45179  019F6E  5E11               	subwf	i2__tdiv_to_l_@exp1,f,c
 45180  019F70  5010               	movf	i2__tdiv_to_l_@cntr,w,c
 45181  019F72  0F98               	addlw	152
 45182  019F74  5E11               	subwf	i2__tdiv_to_l_@exp1,f,c
 45183  019F76  0E18               	movlw	24
 45184  019F78  6E10               	movwf	i2__tdiv_to_l_@cntr,c
 45185  019F7A                     i2l3040:
 45186  019F7A  90D8               	bcf	status,0,c
 45187  019F7C  360C               	rlcf	i2__tdiv_to_l_@quot,f,c
 45188  019F7E  360D               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 45189  019F80  360E               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 45190  019F82  360F               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 45191  019F84  5005               	movf	i2__tdiv_to_l_@f2,w,c
 45192  019F86  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 45193  019F88  5006               	movf	i2__tdiv_to_l_@f2+1,w,c
 45194  019F8A  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 45195  019F8C  5007               	movf	i2__tdiv_to_l_@f2+2,w,c
 45196  019F8E  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 45197  019F90  A0D8               	btfss	status,0,c
 45198  019F92  D007               	goto	i2l3041
 45199  019F94  5005               	movf	i2__tdiv_to_l_@f2,w,c
 45200  019F96  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 45201  019F98  5006               	movf	i2__tdiv_to_l_@f2+1,w,c
 45202  019F9A  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 45203  019F9C  5007               	movf	i2__tdiv_to_l_@f2+2,w,c
 45204  019F9E  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 45205  019FA0  800C               	bsf	i2__tdiv_to_l_@quot,0,c
 45206  019FA2                     i2l3041:
 45207  019FA2  90D8               	bcf	status,0,c
 45208  019FA4  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 45209  019FA6  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 45210  019FA8  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 45211  019FAA  2E10               	decfsz	i2__tdiv_to_l_@cntr,f,c
 45212  019FAC  D7E6               	goto	i2l3040
 45213  019FAE  AE11               	btfss	i2__tdiv_to_l_@exp1,7,c
 45214  019FB0  D00D               	goto	i2l19800
 45215  019FB2  5011               	movf	i2__tdiv_to_l_@exp1,w,c
 45216  019FB4  0A80               	xorlw	128
 45217  019FB6  0F97               	addlw	151
 45218  019FB8  A0D8               	btfss	status,0,c
 45219  019FBA  D7AC               	goto	i2u2510_40
 45220  019FBC                     i2l19796:
 45221  019FBC  90D8               	bcf	status,0,c
 45222  019FBE  320F               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 45223  019FC0  320E               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 45224  019FC2  320D               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 45225  019FC4  320C               	rrcf	i2__tdiv_to_l_@quot,f,c
 45226  019FC6  3E11               	incfsz	i2__tdiv_to_l_@exp1,f,c
 45227  019FC8  D7F9               	goto	i2l19796
 45228  019FCA  D00D               	goto	i2u2517_40
 45229  019FCC                     i2l19800:
 45230  019FCC  0E17               	movlw	23
 45231  019FCE  6411               	cpfsgt	i2__tdiv_to_l_@exp1,c
 45232  019FD0  D007               	goto	i2l19808
 45233  019FD2  D7A0               	goto	i2u2510_40
 45234  019FD4                     i2l19806:
 45235  019FD4  90D8               	bcf	status,0,c
 45236  019FD6  360C               	rlcf	i2__tdiv_to_l_@quot,f,c
 45237  019FD8  360D               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 45238  019FDA  360E               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 45239  019FDC  360F               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 45240  019FDE  0611               	decf	i2__tdiv_to_l_@exp1,f,c
 45241  019FE0                     i2l19808:
 45242  019FE0  5011               	movf	i2__tdiv_to_l_@exp1,w,c
 45243  019FE2  A4D8               	btfss	status,2,c
 45244  019FE4  D7F7               	goto	i2l19806
 45245  019FE6                     i2u2517_40:
 45246  019FE6  C00C  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 45247  019FEA  C00D  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 45248  019FEE  C00E  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 45249  019FF2  C00F  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 45250  019FF6  0012               	return		;funcret
 45251  019FF8                     __end_ofi2__tdiv_to_l_:
 45252                           	opt callstack 0
 45253                           
 45254 ;; *************** function i2__div_to_l_ *****************
 45255 ;; Defined at:
 45256 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
 45257 ;; Parameters:    Size  Location     Type
 45258 ;;  f1              4    0[COMRAM] unsigned long 
 45259 ;;  f2              4    4[COMRAM] unsigned long 
 45260 ;; Auto vars:     Size  Location     Type
 45261 ;;  _div_to_l_      4    8[COMRAM] unsigned long 
 45262 ;;  _div_to_l_      1   13[COMRAM] unsigned char 
 45263 ;;  _div_to_l_      1   12[COMRAM] unsigned char 
 45264 ;; Return value:  Size  Location     Type
 45265 ;;                  4    0[COMRAM] unsigned long 
 45266 ;; Registers used:
 45267 ;;		wreg, status,2, status,0
 45268 ;; Tracked objects:
 45269 ;;		On entry : 0/0
 45270 ;;		On exit  : 0/0
 45271 ;;		Unchanged: 0/0
 45272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45273 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45274 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45276 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45277 ;;Total ram usage:       14 bytes
 45278 ;; Hardware stack levels used:    1
 45279 ;; This function calls:
 45280 ;;		Nothing
 45281 ;; This function is called by:
 45282 ;;		i2__doprnt
 45283 ;; This function uses a non-reentrant model
 45284 ;;
 45285                           
 45286                           	psect	text191
 45287  01A1E2                     __ptext191:
 45288                           	opt callstack 0
 45289  01A1E2                     i2__div_to_l_:
 45290                           	opt callstack 13
 45291                           
 45292                           ;incstack = 0
 45293  01A1E2  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 45294  01A1E4  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 45295  01A1E6  6E0E               	movwf	i2__div_to_l_@exp1,c
 45296  01A1E8  500E               	movf	i2__div_to_l_@exp1,w,c
 45297  01A1EA  A4D8               	btfss	status,2,c
 45298  01A1EC  D009               	goto	i2l19610
 45299  01A1EE                     i2u2486_40:
 45300  01A1EE  0E00               	movlw	0
 45301  01A1F0  6E01               	movwf	?i2__div_to_l_,c
 45302  01A1F2  0E00               	movlw	0
 45303  01A1F4  6E02               	movwf	?i2__div_to_l_+1,c
 45304  01A1F6  0E00               	movlw	0
 45305  01A1F8  6E03               	movwf	?i2__div_to_l_+2,c
 45306  01A1FA  0E00               	movlw	0
 45307  01A1FC  6E04               	movwf	?i2__div_to_l_+3,c
 45308  01A1FE  0012               	return	
 45309  01A200                     i2l19610:
 45310  01A200  3407               	rlcf	i2__div_to_l_@f2+2,w,c
 45311  01A202  3408               	rlcf	i2__div_to_l_@f2+3,w,c
 45312  01A204  6E0D               	movwf	i2__div_to_l_@cntr,c
 45313  01A206  500D               	movf	i2__div_to_l_@cntr,w,c
 45314  01A208  B4D8               	btfsc	status,2,c
 45315  01A20A  D7F1               	goto	i2u2486_40
 45316  01A20C  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 45317  01A20E  0EFF               	movlw	255
 45318  01A210  1601               	andwf	i2__div_to_l_@f1,f,c
 45319  01A212  0EFF               	movlw	255
 45320  01A214  1602               	andwf	i2__div_to_l_@f1+1,f,c
 45321  01A216  0EFF               	movlw	255
 45322  01A218  1603               	andwf	i2__div_to_l_@f1+2,f,c
 45323  01A21A  0E00               	movlw	0
 45324  01A21C  1604               	andwf	i2__div_to_l_@f1+3,f,c
 45325  01A21E  8E07               	bsf	i2__div_to_l_@f2+2,7,c
 45326  01A220  0EFF               	movlw	255
 45327  01A222  1605               	andwf	i2__div_to_l_@f2,f,c
 45328  01A224  0EFF               	movlw	255
 45329  01A226  1606               	andwf	i2__div_to_l_@f2+1,f,c
 45330  01A228  0EFF               	movlw	255
 45331  01A22A  1607               	andwf	i2__div_to_l_@f2+2,f,c
 45332  01A22C  0E00               	movlw	0
 45333  01A22E  1608               	andwf	i2__div_to_l_@f2+3,f,c
 45334  01A230  0E00               	movlw	0
 45335  01A232  6E09               	movwf	i2__div_to_l_@quot,c
 45336  01A234  0E00               	movlw	0
 45337  01A236  6E0A               	movwf	i2__div_to_l_@quot+1,c
 45338  01A238  0E00               	movlw	0
 45339  01A23A  6E0B               	movwf	i2__div_to_l_@quot+2,c
 45340  01A23C  0E00               	movlw	0
 45341  01A23E  6E0C               	movwf	i2__div_to_l_@quot+3,c
 45342  01A240  0E7F               	movlw	127
 45343  01A242  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 45344  01A244  500D               	movf	i2__div_to_l_@cntr,w,c
 45345  01A246  0FA0               	addlw	160
 45346  01A248  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 45347  01A24A  0E20               	movlw	32
 45348  01A24C  6E0D               	movwf	i2__div_to_l_@cntr,c
 45349  01A24E                     i2l19630:
 45350  01A24E  90D8               	bcf	status,0,c
 45351  01A250  3609               	rlcf	i2__div_to_l_@quot,f,c
 45352  01A252  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 45353  01A254  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 45354  01A256  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 45355  01A258  5005               	movf	i2__div_to_l_@f2,w,c
 45356  01A25A  5C01               	subwf	i2__div_to_l_@f1,w,c
 45357  01A25C  5006               	movf	i2__div_to_l_@f2+1,w,c
 45358  01A25E  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 45359  01A260  5007               	movf	i2__div_to_l_@f2+2,w,c
 45360  01A262  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 45361  01A264  5008               	movf	i2__div_to_l_@f2+3,w,c
 45362  01A266  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 45363  01A268  A0D8               	btfss	status,0,c
 45364  01A26A  D009               	goto	i2l19638
 45365  01A26C  5005               	movf	i2__div_to_l_@f2,w,c
 45366  01A26E  5E01               	subwf	i2__div_to_l_@f1,f,c
 45367  01A270  5006               	movf	i2__div_to_l_@f2+1,w,c
 45368  01A272  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 45369  01A274  5007               	movf	i2__div_to_l_@f2+2,w,c
 45370  01A276  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 45371  01A278  5008               	movf	i2__div_to_l_@f2+3,w,c
 45372  01A27A  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 45373  01A27C  8009               	bsf	i2__div_to_l_@quot,0,c
 45374  01A27E                     i2l19638:
 45375  01A27E  90D8               	bcf	status,0,c
 45376  01A280  3601               	rlcf	i2__div_to_l_@f1,f,c
 45377  01A282  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 45378  01A284  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 45379  01A286  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 45380  01A288  2E0D               	decfsz	i2__div_to_l_@cntr,f,c
 45381  01A28A  D7E1               	goto	i2l19630
 45382  01A28C  AE0E               	btfss	i2__div_to_l_@exp1,7,c
 45383  01A28E  D00D               	goto	i2l19654
 45384  01A290  500E               	movf	i2__div_to_l_@exp1,w,c
 45385  01A292  0A80               	xorlw	128
 45386  01A294  0F9F               	addlw	159
 45387  01A296  A0D8               	btfss	status,0,c
 45388  01A298  D7AA               	goto	i2u2486_40
 45389  01A29A                     i2l19650:
 45390  01A29A  90D8               	bcf	status,0,c
 45391  01A29C  320C               	rrcf	i2__div_to_l_@quot+3,f,c
 45392  01A29E  320B               	rrcf	i2__div_to_l_@quot+2,f,c
 45393  01A2A0  320A               	rrcf	i2__div_to_l_@quot+1,f,c
 45394  01A2A2  3209               	rrcf	i2__div_to_l_@quot,f,c
 45395  01A2A4  3E0E               	incfsz	i2__div_to_l_@exp1,f,c
 45396  01A2A6  D7F9               	goto	i2l19650
 45397  01A2A8  D00D               	goto	i2u2492_40
 45398  01A2AA                     i2l19654:
 45399  01A2AA  0E1F               	movlw	31
 45400  01A2AC  640E               	cpfsgt	i2__div_to_l_@exp1,c
 45401  01A2AE  D007               	goto	i2l19662
 45402  01A2B0  D79E               	goto	i2u2486_40
 45403  01A2B2                     i2l19660:
 45404  01A2B2  90D8               	bcf	status,0,c
 45405  01A2B4  3609               	rlcf	i2__div_to_l_@quot,f,c
 45406  01A2B6  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 45407  01A2B8  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 45408  01A2BA  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 45409  01A2BC  060E               	decf	i2__div_to_l_@exp1,f,c
 45410  01A2BE                     i2l19662:
 45411  01A2BE  500E               	movf	i2__div_to_l_@exp1,w,c
 45412  01A2C0  A4D8               	btfss	status,2,c
 45413  01A2C2  D7F7               	goto	i2l19660
 45414  01A2C4                     i2u2492_40:
 45415  01A2C4  C009  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 45416  01A2C8  C00A  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 45417  01A2CC  C00B  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 45418  01A2D0  C00C  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 45419  01A2D4  0012               	return		;funcret
 45420  01A2D6                     __end_ofi2__div_to_l_:
 45421                           	opt callstack 0
 45422                           
 45423 ;; *************** function i2___wmul *****************
 45424 ;; Defined at:
 45425 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 45426 ;; Parameters:    Size  Location     Type
 45427 ;;  multiplier      2    0[COMRAM] unsigned int 
 45428 ;;  multiplicand    2    2[COMRAM] unsigned int 
 45429 ;; Auto vars:     Size  Location     Type
 45430 ;;  __wmul          2    4[COMRAM] unsigned int 
 45431 ;; Return value:  Size  Location     Type
 45432 ;;                  2    0[COMRAM] unsigned int 
 45433 ;; Registers used:
 45434 ;;		wreg, status,2, status,0, prodl, prodh
 45435 ;; Tracked objects:
 45436 ;;		On entry : 0/0
 45437 ;;		On exit  : 0/0
 45438 ;;		Unchanged: 0/0
 45439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45440 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45441 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45443 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45444 ;;Total ram usage:        6 bytes
 45445 ;; Hardware stack levels used:    1
 45446 ;; This function calls:
 45447 ;;		Nothing
 45448 ;; This function is called by:
 45449 ;;		i2__doprnt
 45450 ;; This function uses a non-reentrant model
 45451 ;;
 45452                           
 45453                           	psect	text192
 45454  01C322                     __ptext192:
 45455                           	opt callstack 0
 45456  01C322                     i2___wmul:
 45457                           	opt callstack 13
 45458                           
 45459                           ;incstack = 0
 45460  01C322  5001               	movf	i2___wmul@multiplier,w,c
 45461  01C324  0203               	mulwf	i2___wmul@multiplicand,c
 45462  01C326  CFF3 F005          	movff	prodl,i2___wmul@product
 45463  01C32A  CFF4 F006          	movff	prodh,i2___wmul@product+1
 45464  01C32E  5001               	movf	i2___wmul@multiplier,w,c
 45465  01C330  0204               	mulwf	i2___wmul@multiplicand+1,c
 45466  01C332  50F3               	movf	prodl,w,c
 45467  01C334  2606               	addwf	i2___wmul@product+1,f,c
 45468  01C336  5002               	movf	i2___wmul@multiplier+1,w,c
 45469  01C338  0203               	mulwf	i2___wmul@multiplicand,c
 45470  01C33A  50F3               	movf	prodl,w,c
 45471  01C33C  2606               	addwf	i2___wmul@product+1,f,c
 45472  01C33E  C005  F001         	movff	i2___wmul@product,?i2___wmul
 45473  01C342  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 45474  01C346  0012               	return		;funcret
 45475  01C348                     __end_ofi2___wmul:
 45476                           	opt callstack 0
 45477                           
 45478 ;; *************** function i2___llmod *****************
 45479 ;; Defined at:
 45480 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
 45481 ;; Parameters:    Size  Location     Type
 45482 ;;  dividend        4   13[COMRAM] unsigned long 
 45483 ;;  divisor         4   17[COMRAM] unsigned long 
 45484 ;; Auto vars:     Size  Location     Type
 45485 ;;  __llmod         1   21[COMRAM] unsigned char 
 45486 ;; Return value:  Size  Location     Type
 45487 ;;                  4   13[COMRAM] unsigned long 
 45488 ;; Registers used:
 45489 ;;		wreg, status,2, status,0
 45490 ;; Tracked objects:
 45491 ;;		On entry : 0/0
 45492 ;;		On exit  : 0/0
 45493 ;;		Unchanged: 0/0
 45494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45495 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45498 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45499 ;;Total ram usage:        9 bytes
 45500 ;; Hardware stack levels used:    1
 45501 ;; This function calls:
 45502 ;;		Nothing
 45503 ;; This function is called by:
 45504 ;;		_heartbeatTimerHandler
 45505 ;;		i2__doprnt
 45506 ;; This function uses a non-reentrant model
 45507 ;;
 45508                           
 45509                           	psect	text193
 45510  01B40C                     __ptext193:
 45511                           	opt callstack 0
 45512  01B40C                     i2___llmod:
 45513                           	opt callstack 14
 45514                           
 45515                           ;incstack = 0
 45516  01B40C  5012               	movf	i2___llmod@divisor,w,c
 45517  01B40E  1013               	iorwf	i2___llmod@divisor+1,w,c
 45518  01B410  1014               	iorwf	i2___llmod@divisor+2,w,c
 45519  01B412  1015               	iorwf	i2___llmod@divisor+3,w,c
 45520  01B414  B4D8               	btfsc	status,2,c
 45521  01B416  D024               	goto	i2l3117
 45522  01B418  0E01               	movlw	1
 45523  01B41A  6E16               	movwf	i2___llmod@counter,c
 45524  01B41C  D006               	goto	i2l19816
 45525  01B41E                     i2l19814:
 45526  01B41E  90D8               	bcf	status,0,c
 45527  01B420  3612               	rlcf	i2___llmod@divisor,f,c
 45528  01B422  3613               	rlcf	i2___llmod@divisor+1,f,c
 45529  01B424  3614               	rlcf	i2___llmod@divisor+2,f,c
 45530  01B426  3615               	rlcf	i2___llmod@divisor+3,f,c
 45531  01B428  2A16               	incf	i2___llmod@counter,f,c
 45532  01B42A                     i2l19816:
 45533  01B42A  AE15               	btfss	i2___llmod@divisor+3,7,c
 45534  01B42C  D7F8               	goto	i2l19814
 45535  01B42E                     i2u2519_40:
 45536  01B42E  5012               	movf	i2___llmod@divisor,w,c
 45537  01B430  5C0E               	subwf	i2___llmod@dividend,w,c
 45538  01B432  5013               	movf	i2___llmod@divisor+1,w,c
 45539  01B434  580F               	subwfb	i2___llmod@dividend+1,w,c
 45540  01B436  5014               	movf	i2___llmod@divisor+2,w,c
 45541  01B438  5810               	subwfb	i2___llmod@dividend+2,w,c
 45542  01B43A  5015               	movf	i2___llmod@divisor+3,w,c
 45543  01B43C  5811               	subwfb	i2___llmod@dividend+3,w,c
 45544  01B43E  A0D8               	btfss	status,0,c
 45545  01B440  D008               	goto	i2l19822
 45546  01B442  5012               	movf	i2___llmod@divisor,w,c
 45547  01B444  5E0E               	subwf	i2___llmod@dividend,f,c
 45548  01B446  5013               	movf	i2___llmod@divisor+1,w,c
 45549  01B448  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 45550  01B44A  5014               	movf	i2___llmod@divisor+2,w,c
 45551  01B44C  5A10               	subwfb	i2___llmod@dividend+2,f,c
 45552  01B44E  5015               	movf	i2___llmod@divisor+3,w,c
 45553  01B450  5A11               	subwfb	i2___llmod@dividend+3,f,c
 45554  01B452                     i2l19822:
 45555  01B452  90D8               	bcf	status,0,c
 45556  01B454  3215               	rrcf	i2___llmod@divisor+3,f,c
 45557  01B456  3214               	rrcf	i2___llmod@divisor+2,f,c
 45558  01B458  3213               	rrcf	i2___llmod@divisor+1,f,c
 45559  01B45A  3212               	rrcf	i2___llmod@divisor,f,c
 45560  01B45C  2E16               	decfsz	i2___llmod@counter,f,c
 45561  01B45E  D7E7               	goto	i2u2519_40
 45562  01B460                     i2l3117:
 45563  01B460  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 45564  01B464  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 45565  01B468  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 45566  01B46C  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 45567  01B470  0012               	return		;funcret
 45568  01B472                     __end_ofi2___llmod:
 45569                           	opt callstack 0
 45570                           
 45571 ;; *************** function i2___lldiv *****************
 45572 ;; Defined at:
 45573 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
 45574 ;; Parameters:    Size  Location     Type
 45575 ;;  dividend        4    0[COMRAM] unsigned long 
 45576 ;;  divisor         4    4[COMRAM] unsigned long 
 45577 ;; Auto vars:     Size  Location     Type
 45578 ;;  __lldiv         4    8[COMRAM] unsigned long 
 45579 ;;  __lldiv         1   12[COMRAM] unsigned char 
 45580 ;; Return value:  Size  Location     Type
 45581 ;;                  4    0[COMRAM] unsigned long 
 45582 ;; Registers used:
 45583 ;;		wreg, status,2, status,0
 45584 ;; Tracked objects:
 45585 ;;		On entry : 0/0
 45586 ;;		On exit  : 0/0
 45587 ;;		Unchanged: 0/0
 45588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45589 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45590 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45592 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45593 ;;Total ram usage:       13 bytes
 45594 ;; Hardware stack levels used:    1
 45595 ;; This function calls:
 45596 ;;		Nothing
 45597 ;; This function is called by:
 45598 ;;		i2__doprnt
 45599 ;; This function uses a non-reentrant model
 45600 ;;
 45601                           
 45602                           	psect	text194
 45603  01B102                     __ptext194:
 45604                           	opt callstack 0
 45605  01B102                     i2___lldiv:
 45606                           	opt callstack 13
 45607                           
 45608                           ;incstack = 0
 45609  01B102  0E00               	movlw	0
 45610  01B104  6E09               	movwf	i2___lldiv@quotient,c
 45611  01B106  0E00               	movlw	0
 45612  01B108  6E0A               	movwf	i2___lldiv@quotient+1,c
 45613  01B10A  0E00               	movlw	0
 45614  01B10C  6E0B               	movwf	i2___lldiv@quotient+2,c
 45615  01B10E  0E00               	movlw	0
 45616  01B110  6E0C               	movwf	i2___lldiv@quotient+3,c
 45617  01B112  5005               	movf	i2___lldiv@divisor,w,c
 45618  01B114  1006               	iorwf	i2___lldiv@divisor+1,w,c
 45619  01B116  1007               	iorwf	i2___lldiv@divisor+2,w,c
 45620  01B118  1008               	iorwf	i2___lldiv@divisor+3,w,c
 45621  01B11A  B4D8               	btfsc	status,2,c
 45622  01B11C  D02A               	goto	i2l2702
 45623  01B11E  0E01               	movlw	1
 45624  01B120  6E0D               	movwf	i2___lldiv@counter,c
 45625  01B122  D006               	goto	i2l19590
 45626  01B124                     i2l19588:
 45627  01B124  90D8               	bcf	status,0,c
 45628  01B126  3605               	rlcf	i2___lldiv@divisor,f,c
 45629  01B128  3606               	rlcf	i2___lldiv@divisor+1,f,c
 45630  01B12A  3607               	rlcf	i2___lldiv@divisor+2,f,c
 45631  01B12C  3608               	rlcf	i2___lldiv@divisor+3,f,c
 45632  01B12E  2A0D               	incf	i2___lldiv@counter,f,c
 45633  01B130                     i2l19590:
 45634  01B130  AE08               	btfss	i2___lldiv@divisor+3,7,c
 45635  01B132  D7F8               	goto	i2l19588
 45636  01B134                     i2u2484_40:
 45637  01B134  90D8               	bcf	status,0,c
 45638  01B136  3609               	rlcf	i2___lldiv@quotient,f,c
 45639  01B138  360A               	rlcf	i2___lldiv@quotient+1,f,c
 45640  01B13A  360B               	rlcf	i2___lldiv@quotient+2,f,c
 45641  01B13C  360C               	rlcf	i2___lldiv@quotient+3,f,c
 45642  01B13E  5005               	movf	i2___lldiv@divisor,w,c
 45643  01B140  5C01               	subwf	i2___lldiv@dividend,w,c
 45644  01B142  5006               	movf	i2___lldiv@divisor+1,w,c
 45645  01B144  5802               	subwfb	i2___lldiv@dividend+1,w,c
 45646  01B146  5007               	movf	i2___lldiv@divisor+2,w,c
 45647  01B148  5803               	subwfb	i2___lldiv@dividend+2,w,c
 45648  01B14A  5008               	movf	i2___lldiv@divisor+3,w,c
 45649  01B14C  5804               	subwfb	i2___lldiv@dividend+3,w,c
 45650  01B14E  A0D8               	btfss	status,0,c
 45651  01B150  D009               	goto	i2l19600
 45652  01B152  5005               	movf	i2___lldiv@divisor,w,c
 45653  01B154  5E01               	subwf	i2___lldiv@dividend,f,c
 45654  01B156  5006               	movf	i2___lldiv@divisor+1,w,c
 45655  01B158  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 45656  01B15A  5007               	movf	i2___lldiv@divisor+2,w,c
 45657  01B15C  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 45658  01B15E  5008               	movf	i2___lldiv@divisor+3,w,c
 45659  01B160  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 45660  01B162  8009               	bsf	i2___lldiv@quotient,0,c
 45661  01B164                     i2l19600:
 45662  01B164  90D8               	bcf	status,0,c
 45663  01B166  3208               	rrcf	i2___lldiv@divisor+3,f,c
 45664  01B168  3207               	rrcf	i2___lldiv@divisor+2,f,c
 45665  01B16A  3206               	rrcf	i2___lldiv@divisor+1,f,c
 45666  01B16C  3205               	rrcf	i2___lldiv@divisor,f,c
 45667  01B16E  2E0D               	decfsz	i2___lldiv@counter,f,c
 45668  01B170  D7E1               	goto	i2u2484_40
 45669  01B172                     i2l2702:
 45670  01B172  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 45671  01B176  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 45672  01B17A  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 45673  01B17E  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 45674  01B182  0012               	return		;funcret
 45675  01B184                     __end_ofi2___lldiv:
 45676                           	opt callstack 0
 45677                           
 45678 ;; *************** function i2___fltol *****************
 45679 ;; Defined at:
 45680 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
 45681 ;; Parameters:    Size  Location     Type
 45682 ;;  f1              4   77[COMRAM] unsigned long 
 45683 ;; Auto vars:     Size  Location     Type
 45684 ;;  __fltol         1   86[COMRAM] unsigned char 
 45685 ;;  __fltol         1   85[COMRAM] unsigned char 
 45686 ;; Return value:  Size  Location     Type
 45687 ;;                  4   77[COMRAM] long 
 45688 ;; Registers used:
 45689 ;;		wreg, status,2, status,0
 45690 ;; Tracked objects:
 45691 ;;		On entry : 0/0
 45692 ;;		On exit  : 0/0
 45693 ;;		Unchanged: 0/0
 45694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45695 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45696 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45697 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45698 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45699 ;;Total ram usage:       10 bytes
 45700 ;; Hardware stack levels used:    1
 45701 ;; This function calls:
 45702 ;;		Nothing
 45703 ;; This function is called by:
 45704 ;;		i2__doprnt
 45705 ;; This function uses a non-reentrant model
 45706 ;;
 45707                           
 45708                           	psect	text195
 45709  01A89A                     __ptext195:
 45710                           	opt callstack 0
 45711  01A89A                     i2___fltol:
 45712                           	opt callstack 13
 45713                           
 45714                           ;incstack = 0
 45715  01A89A  3450               	rlcf	i2___fltol@f1+2,w,c
 45716  01A89C  3451               	rlcf	i2___fltol@f1+3,w,c
 45717  01A89E  6E57               	movwf	i2___fltol@exp1,c
 45718  01A8A0  5057               	movf	i2___fltol@exp1,w,c
 45719  01A8A2  A4D8               	btfss	status,2,c
 45720  01A8A4  D009               	goto	i2l19716
 45721  01A8A6                     i2u2502_40:
 45722  01A8A6  0E00               	movlw	0
 45723  01A8A8  6E4E               	movwf	?i2___fltol,c
 45724  01A8AA  0E00               	movlw	0
 45725  01A8AC  6E4F               	movwf	?i2___fltol+1,c
 45726  01A8AE  0E00               	movlw	0
 45727  01A8B0  6E50               	movwf	?i2___fltol+2,c
 45728  01A8B2  0E00               	movlw	0
 45729  01A8B4  6E51               	movwf	?i2___fltol+3,c
 45730  01A8B6  0012               	return	
 45731  01A8B8                     i2l19716:
 45732  01A8B8  C04E  F052         	movff	i2___fltol@f1,??i2___fltol
 45733  01A8BC  C04F  F053         	movff	i2___fltol@f1+1,??i2___fltol+1
 45734  01A8C0  C050  F054         	movff	i2___fltol@f1+2,??i2___fltol+2
 45735  01A8C4  C051  F055         	movff	i2___fltol@f1+3,??i2___fltol+3
 45736  01A8C8  0E20               	movlw	32
 45737  01A8CA  D005               	goto	i2u2503_40
 45738  01A8CC                     i2u2503_45:
 45739  01A8CC  90D8               	bcf	status,0,c
 45740  01A8CE  3255               	rrcf	??i2___fltol+3,f,c
 45741  01A8D0  3254               	rrcf	??i2___fltol+2,f,c
 45742  01A8D2  3253               	rrcf	??i2___fltol+1,f,c
 45743  01A8D4  3252               	rrcf	??i2___fltol,f,c
 45744  01A8D6                     i2u2503_40:
 45745  01A8D6  2EE8               	decfsz	wreg,f,c
 45746  01A8D8  D7F9               	goto	i2u2503_45
 45747  01A8DA  5052               	movf	??i2___fltol,w,c
 45748  01A8DC  6E56               	movwf	i2___fltol@sign1,c
 45749  01A8DE  8E50               	bsf	i2___fltol@f1+2,7,c
 45750  01A8E0  0EFF               	movlw	255
 45751  01A8E2  164E               	andwf	i2___fltol@f1,f,c
 45752  01A8E4  0EFF               	movlw	255
 45753  01A8E6  164F               	andwf	i2___fltol@f1+1,f,c
 45754  01A8E8  0EFF               	movlw	255
 45755  01A8EA  1650               	andwf	i2___fltol@f1+2,f,c
 45756  01A8EC  0E00               	movlw	0
 45757  01A8EE  1651               	andwf	i2___fltol@f1+3,f,c
 45758  01A8F0  0E96               	movlw	150
 45759  01A8F2  5E57               	subwf	i2___fltol@exp1,f,c
 45760  01A8F4  AE57               	btfss	i2___fltol@exp1,7,c
 45761  01A8F6  D00D               	goto	i2l19736
 45762  01A8F8  5057               	movf	i2___fltol@exp1,w,c
 45763  01A8FA  0A80               	xorlw	128
 45764  01A8FC  0F97               	addlw	151
 45765  01A8FE  A0D8               	btfss	status,0,c
 45766  01A900  D7D2               	goto	i2u2502_40
 45767  01A902                     i2l19732:
 45768  01A902  90D8               	bcf	status,0,c
 45769  01A904  3251               	rrcf	i2___fltol@f1+3,f,c
 45770  01A906  3250               	rrcf	i2___fltol@f1+2,f,c
 45771  01A908  324F               	rrcf	i2___fltol@f1+1,f,c
 45772  01A90A  324E               	rrcf	i2___fltol@f1,f,c
 45773  01A90C  3E57               	incfsz	i2___fltol@exp1,f,c
 45774  01A90E  D7F9               	goto	i2l19732
 45775  01A910  D00D               	goto	i2u2507_40
 45776  01A912                     i2l19736:
 45777  01A912  0E1F               	movlw	31
 45778  01A914  6457               	cpfsgt	i2___fltol@exp1,c
 45779  01A916  D007               	goto	i2l19744
 45780  01A918  D7C6               	goto	i2u2502_40
 45781  01A91A                     i2l19742:
 45782  01A91A  90D8               	bcf	status,0,c
 45783  01A91C  364E               	rlcf	i2___fltol@f1,f,c
 45784  01A91E  364F               	rlcf	i2___fltol@f1+1,f,c
 45785  01A920  3650               	rlcf	i2___fltol@f1+2,f,c
 45786  01A922  3651               	rlcf	i2___fltol@f1+3,f,c
 45787  01A924  0657               	decf	i2___fltol@exp1,f,c
 45788  01A926                     i2l19744:
 45789  01A926  5057               	movf	i2___fltol@exp1,w,c
 45790  01A928  A4D8               	btfss	status,2,c
 45791  01A92A  D7F7               	goto	i2l19742
 45792  01A92C                     i2u2507_40:
 45793  01A92C  5056               	movf	i2___fltol@sign1,w,c
 45794  01A92E  B4D8               	btfsc	status,2,c
 45795  01A930  D008               	goto	i2l19750
 45796  01A932  1E51               	comf	i2___fltol@f1+3,f,c
 45797  01A934  1E50               	comf	i2___fltol@f1+2,f,c
 45798  01A936  1E4F               	comf	i2___fltol@f1+1,f,c
 45799  01A938  6C4E               	negf	i2___fltol@f1,c
 45800  01A93A  0E00               	movlw	0
 45801  01A93C  224F               	addwfc	i2___fltol@f1+1,f,c
 45802  01A93E  2250               	addwfc	i2___fltol@f1+2,f,c
 45803  01A940  2251               	addwfc	i2___fltol@f1+3,f,c
 45804  01A942                     i2l19750:
 45805  01A942  C04E  F04E         	movff	i2___fltol@f1,?i2___fltol
 45806  01A946  C04F  F04F         	movff	i2___fltol@f1+1,?i2___fltol+1
 45807  01A94A  C050  F050         	movff	i2___fltol@f1+2,?i2___fltol+2
 45808  01A94E  C051  F051         	movff	i2___fltol@f1+3,?i2___fltol+3
 45809  01A952  0012               	return		;funcret
 45810  01A954                     __end_ofi2___fltol:
 45811                           	opt callstack 0
 45812                           
 45813 ;; *************** function i2___fleq *****************
 45814 ;; Defined at:
 45815 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
 45816 ;; Parameters:    Size  Location     Type
 45817 ;;  ff1             4    0[COMRAM] long 
 45818 ;;  ff2             4    4[COMRAM] long 
 45819 ;; Auto vars:     Size  Location     Type
 45820 ;;		None
 45821 ;; Return value:  Size  Location     Type
 45822 ;;		None               void
 45823 ;; Registers used:
 45824 ;;		wreg, status,2, status,0
 45825 ;; Tracked objects:
 45826 ;;		On entry : 0/0
 45827 ;;		On exit  : 0/0
 45828 ;;		Unchanged: 0/0
 45829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45830 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45832 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45833 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45834 ;;Total ram usage:       12 bytes
 45835 ;; Hardware stack levels used:    1
 45836 ;; This function calls:
 45837 ;;		Nothing
 45838 ;; This function is called by:
 45839 ;;		i2__doprnt
 45840 ;; This function uses a non-reentrant model
 45841 ;;
 45842                           
 45843                           	psect	text196
 45844  01AEEA                     __ptext196:
 45845                           	opt callstack 0
 45846  01AEEA                     i2___fleq:
 45847                           	opt callstack 13
 45848                           
 45849                           ;incstack = 0
 45850  01AEEA  0E00               	movlw	0
 45851  01AEEC  1401               	andwf	i2___fleq@ff1,w,c
 45852  01AEEE  6E09               	movwf	??i2___fleq& (0+255),c
 45853  01AEF0  0E00               	movlw	0
 45854  01AEF2  1402               	andwf	i2___fleq@ff1+1,w,c
 45855  01AEF4  6E0A               	movwf	(??i2___fleq+1)& (0+255),c
 45856  01AEF6  0E80               	movlw	128
 45857  01AEF8  1403               	andwf	i2___fleq@ff1+2,w,c
 45858  01AEFA  6E0B               	movwf	(??i2___fleq+2)& (0+255),c
 45859  01AEFC  0E7F               	movlw	127
 45860  01AEFE  1404               	andwf	i2___fleq@ff1+3,w,c
 45861  01AF00  6E0C               	movwf	(??i2___fleq+3)& (0+255),c
 45862  01AF02  5009               	movf	??i2___fleq,w,c
 45863  01AF04  100A               	iorwf	??i2___fleq+1,w,c
 45864  01AF06  100B               	iorwf	??i2___fleq+2,w,c
 45865  01AF08  100C               	iorwf	??i2___fleq+3,w,c
 45866  01AF0A  A4D8               	btfss	status,2,c
 45867  01AF0C  D008               	goto	i2l19668
 45868  01AF0E  0E00               	movlw	0
 45869  01AF10  6E01               	movwf	i2___fleq@ff1,c
 45870  01AF12  0E00               	movlw	0
 45871  01AF14  6E02               	movwf	i2___fleq@ff1+1,c
 45872  01AF16  0E00               	movlw	0
 45873  01AF18  6E03               	movwf	i2___fleq@ff1+2,c
 45874  01AF1A  0E00               	movlw	0
 45875  01AF1C  6E04               	movwf	i2___fleq@ff1+3,c
 45876  01AF1E                     i2l19668:
 45877  01AF1E  0E00               	movlw	0
 45878  01AF20  1405               	andwf	i2___fleq@ff2,w,c
 45879  01AF22  6E09               	movwf	??i2___fleq& (0+255),c
 45880  01AF24  0E00               	movlw	0
 45881  01AF26  1406               	andwf	i2___fleq@ff2+1,w,c
 45882  01AF28  6E0A               	movwf	(??i2___fleq+1)& (0+255),c
 45883  01AF2A  0E80               	movlw	128
 45884  01AF2C  1407               	andwf	i2___fleq@ff2+2,w,c
 45885  01AF2E  6E0B               	movwf	(??i2___fleq+2)& (0+255),c
 45886  01AF30  0E7F               	movlw	127
 45887  01AF32  1408               	andwf	i2___fleq@ff2+3,w,c
 45888  01AF34  6E0C               	movwf	(??i2___fleq+3)& (0+255),c
 45889  01AF36  5009               	movf	??i2___fleq,w,c
 45890  01AF38  100A               	iorwf	??i2___fleq+1,w,c
 45891  01AF3A  100B               	iorwf	??i2___fleq+2,w,c
 45892  01AF3C  100C               	iorwf	??i2___fleq+3,w,c
 45893  01AF3E  A4D8               	btfss	status,2,c
 45894  01AF40  D008               	goto	i2l19672
 45895  01AF42  0E00               	movlw	0
 45896  01AF44  6E05               	movwf	i2___fleq@ff2,c
 45897  01AF46  0E00               	movlw	0
 45898  01AF48  6E06               	movwf	i2___fleq@ff2+1,c
 45899  01AF4A  0E00               	movlw	0
 45900  01AF4C  6E07               	movwf	i2___fleq@ff2+2,c
 45901  01AF4E  0E00               	movlw	0
 45902  01AF50  6E08               	movwf	i2___fleq@ff2+3,c
 45903  01AF52                     i2l19672:
 45904  01AF52  5005               	movf	i2___fleq@ff2,w,c
 45905  01AF54  1801               	xorwf	i2___fleq@ff1,w,c
 45906  01AF56  E10A               	bnz	i2u2495_40
 45907  01AF58  5006               	movf	i2___fleq@ff2+1,w,c
 45908  01AF5A  1802               	xorwf	i2___fleq@ff1+1,w,c
 45909  01AF5C  E107               	bnz	i2u2495_40
 45910  01AF5E  5007               	movf	i2___fleq@ff2+2,w,c
 45911  01AF60  1803               	xorwf	i2___fleq@ff1+2,w,c
 45912  01AF62  E104               	bnz	i2u2495_40
 45913  01AF64  5008               	movf	i2___fleq@ff2+3,w,c
 45914  01AF66  1804               	xorwf	i2___fleq@ff1+3,w,c
 45915  01AF68  B4D8               	btfsc	status,2,c
 45916  01AF6A  D002               	goto	i2l19676
 45917  01AF6C                     i2u2495_40:
 45918  01AF6C  90D8               	bcf	status,0,c
 45919  01AF6E  0012               	return	
 45920  01AF70                     i2l19676:
 45921  01AF70  80D8               	bsf	status,0,c
 45922  01AF72  0012               	return		;funcret
 45923  01AF74                     __end_ofi2___fleq:
 45924                           	opt callstack 0
 45925                           
 45926 ;; *************** function _ADCC_ThresholdISR *****************
 45927 ;; Defined at:
 45928 ;;		line 298 in file "mcc_generated_files/adcc.c"
 45929 ;; Parameters:    Size  Location     Type
 45930 ;;		None
 45931 ;; Auto vars:     Size  Location     Type
 45932 ;;		None
 45933 ;; Return value:  Size  Location     Type
 45934 ;;                  1    wreg      void 
 45935 ;; Registers used:
 45936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 45937 ;; Tracked objects:
 45938 ;;		On entry : 0/0
 45939 ;;		On exit  : 0/0
 45940 ;;		Unchanged: 0/0
 45941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45946 ;;Total ram usage:        0 bytes
 45947 ;; Hardware stack levels used:    1
 45948 ;; Hardware stack levels required when called:    3
 45949 ;; This function calls:
 45950 ;;		Absolute function
 45951 ;;		_ADCC_DefaultInterruptHandler
 45952 ;;		_ADC_PostProcessingHandler
 45953 ;; This function is called by:
 45954 ;;		_INTERRUPT_InterruptManagerHigh
 45955 ;; This function uses a non-reentrant model
 45956 ;;
 45957                           
 45958                           	psect	text197
 45959  01C2D4                     __ptext197:
 45960                           	opt callstack 0
 45961  01C2D4                     _ADCC_ThresholdISR:
 45962                           	opt callstack 13
 45963                           
 45964                           ;adcc.c: 301: PIR1bits.ADTIF = 0;
 45965                           
 45966                           ;incstack = 0
 45967  01C2D4  010E               	movlb	14	; () banked
 45968  01C2D6  93CB               	bcf	203,1,b	;volatile
 45969                           
 45970                           ; BSR set to: 14
 45971                           ;adcc.c: 303: if (ADCC_ADTI_InterruptHandler)
 45972  01C2D8  0100               	movlb	0	; () banked
 45973  01C2DA  51CC               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 45974  01C2DC  11CD               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 45975  01C2DE  11CE               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 45976  01C2E0  B4D8               	btfsc	status,2,c
 45977  01C2E2  0012               	return	
 45978                           
 45979                           ; BSR set to: 0
 45980                           ;adcc.c: 304: ADCC_ADTI_InterruptHandler();
 45981  01C2E4  D801               	call	i2u2753_48
 45982  01C2E6  0012               	return	
 45983  01C2E8                     i2u2753_48:
 45984  01C2E8  0005               	push	
 45985  01C2EA  6EFA               	movwf	pclath,c
 45986  01C2EC  51CC               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 45987  01C2EE  6EFD               	movwf	tosl,c
 45988  01C2F0  51CD               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 45989  01C2F2  6EFE               	movwf	tosh,c
 45990  01C2F4  51CE               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 45991  01C2F6  6EFF               	movwf	tosu,c
 45992  01C2F8  50FA               	movf	pclath,w,c
 45993  01C2FA  0012               	return		;indir
 45994  01C2FC                     __end_of_ADCC_ThresholdISR:
 45995                           	opt callstack 0
 45996                           
 45997 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 45998 ;; Defined at:
 45999 ;;		line 310 in file "mcc_generated_files/adcc.c"
 46000 ;; Parameters:    Size  Location     Type
 46001 ;;		None
 46002 ;; Auto vars:     Size  Location     Type
 46003 ;;		None
 46004 ;; Return value:  Size  Location     Type
 46005 ;;                  1    wreg      void 
 46006 ;; Registers used:
 46007 ;;		None
 46008 ;; Tracked objects:
 46009 ;;		On entry : 0/0
 46010 ;;		On exit  : 0/0
 46011 ;;		Unchanged: 0/0
 46012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46017 ;;Total ram usage:        0 bytes
 46018 ;; Hardware stack levels used:    1
 46019 ;; This function calls:
 46020 ;;		Nothing
 46021 ;; This function is called by:
 46022 ;;		_ADCC_Initialize
 46023 ;;		_ADCC_ThresholdISR
 46024 ;; This function uses a non-reentrant model
 46025 ;;
 46026                           
 46027                           	psect	text198
 46028  01C8AC                     __ptext198:
 46029                           	opt callstack 0
 46030  01C8AC                     _ADCC_DefaultInterruptHandler:
 46031                           	opt callstack 15
 46032                           
 46033                           ;incstack = 0
 46034  01C8AC  0012               	return		;funcret
 46035  01C8AE                     __end_of_ADCC_DefaultInterruptHandler:
 46036                           	opt callstack 0
 46037                           
 46038 ;; *************** function _ADC_PostProcessingHandler *****************
 46039 ;; Defined at:
 46040 ;;		line 13 in file "adc_postprocessing.c"
 46041 ;; Parameters:    Size  Location     Type
 46042 ;;		None
 46043 ;; Auto vars:     Size  Location     Type
 46044 ;;  i               1   26[BANK0 ] unsigned char 
 46045 ;;  i               1   25[BANK0 ] unsigned char 
 46046 ;;  current_adc_    1   24[BANK0 ] enum E9492
 46047 ;; Return value:  Size  Location     Type
 46048 ;;                  1    wreg      void 
 46049 ;; Registers used:
 46050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46051 ;; Tracked objects:
 46052 ;;		On entry : 0/0
 46053 ;;		On exit  : 0/0
 46054 ;;		Unchanged: 0/0
 46055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46057 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46059 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46060 ;;Total ram usage:       23 bytes
 46061 ;; Hardware stack levels used:    1
 46062 ;; Hardware stack levels required when called:    2
 46063 ;; This function calls:
 46064 ;;		_ADCC_GetConversionResult
 46065 ;;		_ADCC_GetCurrentCountofConversions
 46066 ;;		_ADCC_GetFilterValue
 46067 ;;		_ADCC_HasAccumulatorOverflowed
 46068 ;;		_ADCC_StopConversion
 46069 ;;		_TMR2_StartTimer
 46070 ;;		_fabs
 46071 ;;		i2___fladd
 46072 ;;		i2___fldiv
 46073 ;;		i2___flge
 46074 ;;		i2___flmul
 46075 ;;		i2___flsub
 46076 ;;		i2___xxtofl
 46077 ;; This function is called by:
 46078 ;;		_main
 46079 ;;		_ADCC_ThresholdISR
 46080 ;; This function uses a non-reentrant model
 46081 ;;
 46082                           
 46083                           	psect	text199
 46084  014082                     __ptext199:
 46085                           	opt callstack 0
 46086  014082                     _ADC_PostProcessingHandler:
 46087                           	opt callstack 13
 46088                           
 46089                           ;adc_postprocessing.c: 16: ADCC_StopConversion();
 46090                           
 46091                           ;incstack = 0
 46092  014082  EC49  F0E4         	call	_ADCC_StopConversion	;wreg free
 46093                           
 46094                           ;adc_postprocessing.c: 19: adcc_channel_t current_adc_channel = ADPCH;
 46095  014086  CF5F F078          	movff	3935,ADC_PostProcessingHandler@current_adc_channel	;volatile
 46096                           
 46097                           ;adc_postprocessing.c: 22: switch (current_adc_channel) {
 46098  01408A  EF52  F0A4         	goto	i2l21106
 46099  01408E                     i2l21022:
 46100                           
 46101                           ; BSR set to: 0
 46102                           ;adc_postprocessing.c: 26: adc_results.avss_adc_result = (ADCC_GetConversionResult()) * 
      +                          (5.0/1023.0);
 46103  01408E  EC43  F0E3         	call	_ADCC_GetConversionResult	;wreg free
 46104  014092  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 46105  014096  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 46106  01409A  6A07               	clrf	i2___xxtofl@val+2,c
 46107  01409C  6A08               	clrf	i2___xxtofl@val+3,c
 46108  01409E  0E00               	movlw	0
 46109  0140A0  ECCC  F0CD         	call	i2___xxtofl
 46110  0140A4  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 46111  0140A8  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 46112  0140AC  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 46113  0140B0  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 46114  0140B4  0E0A               	movlw	10
 46115  0140B6  6E30               	movwf	i2___flmul@a,c
 46116  0140B8  0E28               	movlw	40
 46117  0140BA  6E31               	movwf	i2___flmul@a+1,c
 46118  0140BC  0EA0               	movlw	160
 46119  0140BE  6E32               	movwf	i2___flmul@a+2,c
 46120  0140C0  0E3B               	movlw	59
 46121  0140C2  6E33               	movwf	i2___flmul@a+3,c
 46122  0140C4  EC9C  F0B6         	call	i2___flmul	;wreg free
 46123  0140C8  C02C  F0DD         	movff	?i2___flmul,_adc_results
 46124  0140CC  C02D  F0DE         	movff	?i2___flmul+1,_adc_results+1
 46125  0140D0  C02E  F0DF         	movff	?i2___flmul+2,_adc_results+2
 46126  0140D4  C02F  F0E0         	movff	?i2___flmul+3,_adc_results+3
 46127                           
 46128                           ;adc_postprocessing.c: 28: next_adc_channel = channel_FVR_buf1;
 46129  0140D8  0E3F               	movlw	63
 46130  0140DA  D3DE               	goto	L50
 46131  0140DC                     i2l21026:
 46132                           
 46133                           ; BSR set to: 0
 46134                           ;adc_postprocessing.c: 35: adc_results.fvr_adc_result = (ADCC_GetConversionResult()) * (
      +                          5.0/1023.0) + adc_results.avss_adc_result;
 46135  0140DC  0E0A               	movlw	10
 46136  0140DE  6E30               	movwf	i2___flmul@a,c
 46137  0140E0  0E28               	movlw	40
 46138  0140E2  6E31               	movwf	i2___flmul@a+1,c
 46139  0140E4  0EA0               	movlw	160
 46140  0140E6  6E32               	movwf	i2___flmul@a+2,c
 46141  0140E8  0E3B               	movlw	59
 46142  0140EA  6E33               	movwf	i2___flmul@a+3,c
 46143  0140EC  EC43  F0E3         	call	_ADCC_GetConversionResult	;wreg free
 46144  0140F0  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 46145  0140F4  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 46146  0140F8  6A07               	clrf	i2___xxtofl@val+2,c
 46147  0140FA  6A08               	clrf	i2___xxtofl@val+3,c
 46148  0140FC  0E00               	movlw	0
 46149  0140FE  ECCC  F0CD         	call	i2___xxtofl
 46150  014102  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 46151  014106  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 46152  01410A  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 46153  01410E  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 46154  014112  EC9C  F0B6         	call	i2___flmul	;wreg free
 46155  014116  C02C  F052         	movff	?i2___flmul,i2___fladd@b
 46156  01411A  C02D  F053         	movff	?i2___flmul+1,i2___fladd@b+1
 46157  01411E  C02E  F054         	movff	?i2___flmul+2,i2___fladd@b+2
 46158  014122  C02F  F055         	movff	?i2___flmul+3,i2___fladd@b+3
 46159  014126  C0DD  F056         	movff	_adc_results,i2___fladd@a
 46160  01412A  C0DE  F057         	movff	_adc_results+1,i2___fladd@a+1
 46161  01412E  C0DF  F058         	movff	_adc_results+2,i2___fladd@a+2
 46162  014132  C0E0  F059         	movff	_adc_results+3,i2___fladd@a+3
 46163  014136  EC53  F0BB         	call	i2___fladd	;wreg free
 46164  01413A  C052  F0E1         	movff	?i2___fladd,_adc_results+4
 46165  01413E  C053  F0E2         	movff	?i2___fladd+1,_adc_results+5
 46166  014142  C054  F0E3         	movff	?i2___fladd+2,_adc_results+6
 46167  014146  C055  F0E4         	movff	?i2___fladd+3,_adc_results+7
 46168                           
 46169                           ;adc_postprocessing.c: 36: adc_result_scaling = 4.096/adc_results.fvr_adc_result;
 46170  01414A  0E6F               	movlw	111
 46171  01414C  6E13               	movwf	i2___fldiv@b,c
 46172  01414E  0E12               	movlw	18
 46173  014150  6E14               	movwf	i2___fldiv@b+1,c
 46174  014152  0E83               	movlw	131
 46175  014154  6E15               	movwf	i2___fldiv@b+2,c
 46176  014156  0E40               	movlw	64
 46177  014158  6E16               	movwf	i2___fldiv@b+3,c
 46178  01415A  C0E1  F017         	movff	_adc_results+4,i2___fldiv@a
 46179  01415E  C0E2  F018         	movff	_adc_results+5,i2___fldiv@a+1
 46180  014162  C0E3  F019         	movff	_adc_results+6,i2___fldiv@a+2
 46181  014166  C0E4  F01A         	movff	_adc_results+7,i2___fldiv@a+3
 46182  01416A  EC85  F0C3         	call	i2___fldiv	;wreg free
 46183  01416E  C013  F0C1         	movff	?i2___fldiv,_adc_result_scaling
 46184  014172  C014  F0C2         	movff	?i2___fldiv+1,_adc_result_scaling+1
 46185  014176  C015  F0C3         	movff	?i2___fldiv+2,_adc_result_scaling+2
 46186  01417A  C016  F0C4         	movff	?i2___fldiv+3,_adc_result_scaling+3
 46187                           
 46188                           ;adc_postprocessing.c: 38: if (adc_results.fvr_adc_result > 5.0 || adc_results.fvr_adc_r
      +                          esult < 3.9) {
 46189  01417E  0E00               	movlw	0
 46190  014180  6E01               	movwf	i2___flge@ff1,c
 46191  014182  0E00               	movlw	0
 46192  014184  6E02               	movwf	i2___flge@ff1+1,c
 46193  014186  0EA0               	movlw	160
 46194  014188  6E03               	movwf	i2___flge@ff1+2,c
 46195  01418A  0E40               	movlw	64
 46196  01418C  6E04               	movwf	i2___flge@ff1+3,c
 46197  01418E  C0E1  F005         	movff	_adc_results+4,i2___flge@ff2
 46198  014192  C0E2  F006         	movff	_adc_results+5,i2___flge@ff2+1
 46199  014196  C0E3  F007         	movff	_adc_results+6,i2___flge@ff2+2
 46200  01419A  C0E4  F008         	movff	_adc_results+7,i2___flge@ff2+3
 46201  01419E  ECC0  F0D2         	call	i2___flge	;wreg free
 46202  0141A2  A0D8               	btfss	status,0,c
 46203  0141A4  D014               	goto	i2u2705_40
 46204  0141A6  C0E1  F001         	movff	_adc_results+4,i2___flge@ff1
 46205  0141AA  C0E2  F002         	movff	_adc_results+5,i2___flge@ff1+1
 46206  0141AE  C0E3  F003         	movff	_adc_results+6,i2___flge@ff1+2
 46207  0141B2  C0E4  F004         	movff	_adc_results+7,i2___flge@ff1+3
 46208  0141B6  0E9A               	movlw	154
 46209  0141B8  6E05               	movwf	i2___flge@ff2,c
 46210  0141BA  0E99               	movlw	153
 46211  0141BC  6E06               	movwf	i2___flge@ff2+1,c
 46212  0141BE  0E79               	movlw	121
 46213  0141C0  6E07               	movwf	i2___flge@ff2+2,c
 46214  0141C2  0E40               	movlw	64
 46215  0141C4  6E08               	movwf	i2___flge@ff2+3,c
 46216  0141C6  ECC0  F0D2         	call	i2___flge	;wreg free
 46217  0141CA  B0D8               	btfsc	status,0,c
 46218  0141CC  D003               	goto	i2l1581
 46219  0141CE                     i2u2705_40:
 46220                           
 46221                           ;adc_postprocessing.c: 40: error_handler.FVR_ADC_error_flag = 1;
 46222  0141CE  0E01               	movlw	1
 46223  0141D0  0100               	movlb	0	; () banked
 46224  0141D2  6FB9               	movwf	_error_handler& (0+255),b
 46225  0141D4                     i2l1581:
 46226                           
 46227                           ;adc_postprocessing.c: 42: };adc_postprocessing.c: 44: next_adc_channel = POS5_ADC;
 46228  0141D4  0E04               	movlw	4
 46229  0141D6  D360               	goto	L50
 46230  0141D8                     i2l21036:
 46231                           
 46232                           ; BSR set to: 0
 46233                           ;adc_postprocessing.c: 49: adc_results.pos5_adc_result = (((ADCC_GetFilterValue()) * (5.
      +                          0/1023.0)) * 2.0 - adc_results.avss_adc_result) * adc_result_scaling;
 46234  0141D8  0E0A               	movlw	10
 46235  0141DA  6E30               	movwf	i2___flmul@a,c
 46236  0141DC  0E28               	movlw	40
 46237  0141DE  6E31               	movwf	i2___flmul@a+1,c
 46238  0141E0  0EA0               	movlw	160
 46239  0141E2  6E32               	movwf	i2___flmul@a+2,c
 46240  0141E4  0E3B               	movlw	59
 46241  0141E6  6E33               	movwf	i2___flmul@a+3,c
 46242  0141E8  EC39  F0E3         	call	_ADCC_GetFilterValue	;wreg free
 46243  0141EC  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 46244  0141F0  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 46245  0141F4  6A07               	clrf	i2___xxtofl@val+2,c
 46246  0141F6  6A08               	clrf	i2___xxtofl@val+3,c
 46247  0141F8  0E00               	movlw	0
 46248  0141FA  ECCC  F0CD         	call	i2___xxtofl
 46249  0141FE  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 46250  014202  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 46251  014206  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 46252  01420A  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 46253  01420E  EC9C  F0B6         	call	i2___flmul	;wreg free
 46254  014212  C02C  F07B         	movff	?i2___flmul,_ADC_PostProcessingHandler$6411
 46255  014216  C02D  F07C         	movff	?i2___flmul+1,_ADC_PostProcessingHandler$6411+1
 46256  01421A  C02E  F07D         	movff	?i2___flmul+2,_ADC_PostProcessingHandler$6411+2
 46257  01421E  C02F  F07E         	movff	?i2___flmul+3,_ADC_PostProcessingHandler$6411+3
 46258                           
 46259                           ;adc_postprocessing.c: 49: adc_results.pos5_adc_result = (((ADCC_GetFilterValue()) * (5.
      +                          0/1023.0)) * 2.0 - adc_results.avss_adc_result) * adc_result_scaling;
 46260  014222  C0DD  F068         	movff	_adc_results,i2___flsub@a
 46261  014226  C0DE  F069         	movff	_adc_results+1,i2___flsub@a+1
 46262  01422A  C0DF  F06A         	movff	_adc_results+2,i2___flsub@a+2
 46263  01422E  C0E0  F06B         	movff	_adc_results+3,i2___flsub@a+3
 46264  014232  0E00               	movlw	0
 46265  014234  6E30               	movwf	i2___flmul@a,c
 46266  014236  0E00               	movlw	0
 46267  014238  6E31               	movwf	i2___flmul@a+1,c
 46268  01423A  0E00               	movlw	0
 46269  01423C  6E32               	movwf	i2___flmul@a+2,c
 46270  01423E  0E40               	movlw	64
 46271  014240  6E33               	movwf	i2___flmul@a+3,c
 46272  014242  C07B  F02C         	movff	_ADC_PostProcessingHandler$6411,i2___flmul@b
 46273  014246  C07C  F02D         	movff	_ADC_PostProcessingHandler$6411+1,i2___flmul@b+1
 46274  01424A  C07D  F02E         	movff	_ADC_PostProcessingHandler$6411+2,i2___flmul@b+2
 46275  01424E  C07E  F02F         	movff	_ADC_PostProcessingHandler$6411+3,i2___flmul@b+3
 46276  014252  EC9C  F0B6         	call	i2___flmul	;wreg free
 46277  014256  C02C  F064         	movff	?i2___flmul,i2___flsub@b
 46278  01425A  C02D  F065         	movff	?i2___flmul+1,i2___flsub@b+1
 46279  01425E  C02E  F066         	movff	?i2___flmul+2,i2___flsub@b+2
 46280  014262  C02F  F067         	movff	?i2___flmul+3,i2___flsub@b+3
 46281  014266  EC52  F0DD         	call	i2___flsub	;wreg free
 46282  01426A  C064  F07F         	movff	?i2___flsub,_ADC_PostProcessingHandler$6412
 46283  01426E  C065  F080         	movff	?i2___flsub+1,_ADC_PostProcessingHandler$6412+1
 46284  014272  C066  F081         	movff	?i2___flsub+2,_ADC_PostProcessingHandler$6412+2
 46285  014276  C067  F082         	movff	?i2___flsub+3,_ADC_PostProcessingHandler$6412+3
 46286                           
 46287                           ;adc_postprocessing.c: 49: adc_results.pos5_adc_result = (((ADCC_GetFilterValue()) * (5.
      +                          0/1023.0)) * 2.0 - adc_results.avss_adc_result) * adc_result_scaling;
 46288  01427A  C07F  F02C         	movff	_ADC_PostProcessingHandler$6412,i2___flmul@b
 46289  01427E  C080  F02D         	movff	_ADC_PostProcessingHandler$6412+1,i2___flmul@b+1
 46290  014282  C081  F02E         	movff	_ADC_PostProcessingHandler$6412+2,i2___flmul@b+2
 46291  014286  C082  F02F         	movff	_ADC_PostProcessingHandler$6412+3,i2___flmul@b+3
 46292  01428A  C0C1  F030         	movff	_adc_result_scaling,i2___flmul@a
 46293  01428E  C0C2  F031         	movff	_adc_result_scaling+1,i2___flmul@a+1
 46294  014292  C0C3  F032         	movff	_adc_result_scaling+2,i2___flmul@a+2
 46295  014296  C0C4  F033         	movff	_adc_result_scaling+3,i2___flmul@a+3
 46296  01429A  EC9C  F0B6         	call	i2___flmul	;wreg free
 46297  01429E  C02C  F0E5         	movff	?i2___flmul,_adc_results+8
 46298  0142A2  C02D  F0E6         	movff	?i2___flmul+1,_adc_results+9
 46299  0142A6  C02E  F0E7         	movff	?i2___flmul+2,_adc_results+10
 46300  0142AA  C02F  F0E8         	movff	?i2___flmul+3,_adc_results+11
 46301                           
 46302                           ;adc_postprocessing.c: 51: next_adc_channel = POS12_ADC;
 46303  0142AE  0E00               	movlw	0
 46304  0142B0  D2F3               	goto	L50
 46305  0142B2                     i2l21040:
 46306                           
 46307                           ; BSR set to: 0
 46308                           ;adc_postprocessing.c: 55: adc_results.pos12_adc_result = (((ADCC_GetFilterValue()) * (a
      +                          dc_results.pos5_adc_result/1023.0)) * 2.96078 - adc_results.avss_adc_result) * adc_resul
      +                          t_scaling;
 46309  0142B2  0E00               	movlw	0
 46310  0142B4  6E17               	movwf	i2___fldiv@a,c
 46311  0142B6  0EC0               	movlw	192
 46312  0142B8  6E18               	movwf	i2___fldiv@a+1,c
 46313  0142BA  0E7F               	movlw	127
 46314  0142BC  6E19               	movwf	i2___fldiv@a+2,c
 46315  0142BE  0E44               	movlw	68
 46316  0142C0  6E1A               	movwf	i2___fldiv@a+3,c
 46317  0142C2  C0E5  F013         	movff	_adc_results+8,i2___fldiv@b
 46318  0142C6  C0E6  F014         	movff	_adc_results+9,i2___fldiv@b+1
 46319  0142CA  C0E7  F015         	movff	_adc_results+10,i2___fldiv@b+2
 46320  0142CE  C0E8  F016         	movff	_adc_results+11,i2___fldiv@b+3
 46321  0142D2  EC85  F0C3         	call	i2___fldiv	;wreg free
 46322  0142D6  C013  F030         	movff	?i2___fldiv,i2___flmul@a
 46323  0142DA  C014  F031         	movff	?i2___fldiv+1,i2___flmul@a+1
 46324  0142DE  C015  F032         	movff	?i2___fldiv+2,i2___flmul@a+2
 46325  0142E2  C016  F033         	movff	?i2___fldiv+3,i2___flmul@a+3
 46326  0142E6  EC39  F0E3         	call	_ADCC_GetFilterValue	;wreg free
 46327  0142EA  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 46328  0142EE  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 46329  0142F2  6A07               	clrf	i2___xxtofl@val+2,c
 46330  0142F4  6A08               	clrf	i2___xxtofl@val+3,c
 46331  0142F6  0E00               	movlw	0
 46332  0142F8  ECCC  F0CD         	call	i2___xxtofl
 46333  0142FC  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 46334  014300  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 46335  014304  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 46336  014308  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 46337  01430C  EC9C  F0B6         	call	i2___flmul	;wreg free
 46338  014310  C02C  F07B         	movff	?i2___flmul,_ADC_PostProcessingHandler$6411
 46339  014314  C02D  F07C         	movff	?i2___flmul+1,_ADC_PostProcessingHandler$6411+1
 46340  014318  C02E  F07D         	movff	?i2___flmul+2,_ADC_PostProcessingHandler$6411+2
 46341  01431C  C02F  F07E         	movff	?i2___flmul+3,_ADC_PostProcessingHandler$6411+3
 46342                           
 46343                           ;adc_postprocessing.c: 55: adc_results.pos12_adc_result = (((ADCC_GetFilterValue()) * (a
      +                          dc_results.pos5_adc_result/1023.0)) * 2.96078 - adc_results.avss_adc_result) * adc_resul
      +                          t_scaling;
 46344  014320  C0DD  F068         	movff	_adc_results,i2___flsub@a
 46345  014324  C0DE  F069         	movff	_adc_results+1,i2___flsub@a+1
 46346  014328  C0DF  F06A         	movff	_adc_results+2,i2___flsub@a+2
 46347  01432C  C0E0  F06B         	movff	_adc_results+3,i2___flsub@a+3
 46348  014330  0E6B               	movlw	107
 46349  014332  6E30               	movwf	i2___flmul@a,c
 46350  014334  0E7D               	movlw	125
 46351  014336  6E31               	movwf	i2___flmul@a+1,c
 46352  014338  0E3D               	movlw	61
 46353  01433A  6E32               	movwf	i2___flmul@a+2,c
 46354  01433C  0E40               	movlw	64
 46355  01433E  6E33               	movwf	i2___flmul@a+3,c
 46356  014340  C07B  F02C         	movff	_ADC_PostProcessingHandler$6411,i2___flmul@b
 46357  014344  C07C  F02D         	movff	_ADC_PostProcessingHandler$6411+1,i2___flmul@b+1
 46358  014348  C07D  F02E         	movff	_ADC_PostProcessingHandler$6411+2,i2___flmul@b+2
 46359  01434C  C07E  F02F         	movff	_ADC_PostProcessingHandler$6411+3,i2___flmul@b+3
 46360  014350  EC9C  F0B6         	call	i2___flmul	;wreg free
 46361  014354  C02C  F064         	movff	?i2___flmul,i2___flsub@b
 46362  014358  C02D  F065         	movff	?i2___flmul+1,i2___flsub@b+1
 46363  01435C  C02E  F066         	movff	?i2___flmul+2,i2___flsub@b+2
 46364  014360  C02F  F067         	movff	?i2___flmul+3,i2___flsub@b+3
 46365  014364  EC52  F0DD         	call	i2___flsub	;wreg free
 46366  014368  C064  F07F         	movff	?i2___flsub,_ADC_PostProcessingHandler$6412
 46367  01436C  C065  F080         	movff	?i2___flsub+1,_ADC_PostProcessingHandler$6412+1
 46368  014370  C066  F081         	movff	?i2___flsub+2,_ADC_PostProcessingHandler$6412+2
 46369  014374  C067  F082         	movff	?i2___flsub+3,_ADC_PostProcessingHandler$6412+3
 46370                           
 46371                           ;adc_postprocessing.c: 55: adc_results.pos12_adc_result = (((ADCC_GetFilterValue()) * (a
      +                          dc_results.pos5_adc_result/1023.0)) * 2.96078 - adc_results.avss_adc_result) * adc_resul
      +                          t_scaling;
 46372  014378  C07F  F02C         	movff	_ADC_PostProcessingHandler$6412,i2___flmul@b
 46373  01437C  C080  F02D         	movff	_ADC_PostProcessingHandler$6412+1,i2___flmul@b+1
 46374  014380  C081  F02E         	movff	_ADC_PostProcessingHandler$6412+2,i2___flmul@b+2
 46375  014384  C082  F02F         	movff	_ADC_PostProcessingHandler$6412+3,i2___flmul@b+3
 46376  014388  C0C1  F030         	movff	_adc_result_scaling,i2___flmul@a
 46377  01438C  C0C2  F031         	movff	_adc_result_scaling+1,i2___flmul@a+1
 46378  014390  C0C3  F032         	movff	_adc_result_scaling+2,i2___flmul@a+2
 46379  014394  C0C4  F033         	movff	_adc_result_scaling+3,i2___flmul@a+3
 46380  014398  EC9C  F0B6         	call	i2___flmul	;wreg free
 46381  01439C  C02C  F0E9         	movff	?i2___flmul,_adc_results+12
 46382  0143A0  C02D  F0EA         	movff	?i2___flmul+1,_adc_results+13
 46383  0143A4  C02E  F0EB         	movff	?i2___flmul+2,_adc_results+14
 46384  0143A8  C02F  F0EC         	movff	?i2___flmul+3,_adc_results+15
 46385                           
 46386                           ;adc_postprocessing.c: 57: next_adc_channel = POS12_ISNS_ADC;
 46387  0143AC  0E01               	movlw	1
 46388  0143AE  D274               	goto	L50
 46389  0143B0                     i2l21044:
 46390                           
 46391                           ; BSR set to: 0
 46392                           ;adc_postprocessing.c: 62: pos12_isns_average_buffer[pos12_isns_average_index] = (((ADCC
      +                          _GetFilterValue()) * (adc_results.pos5_adc_result/1023.0)) * 0.501002004 - adc_results.a
      +                          vss_adc_result) * adc_result_scaling;
 46393  0143B0  0E00               	movlw	0
 46394  0143B2  6E17               	movwf	i2___fldiv@a,c
 46395  0143B4  0EC0               	movlw	192
 46396  0143B6  6E18               	movwf	i2___fldiv@a+1,c
 46397  0143B8  0E7F               	movlw	127
 46398  0143BA  6E19               	movwf	i2___fldiv@a+2,c
 46399  0143BC  0E44               	movlw	68
 46400  0143BE  6E1A               	movwf	i2___fldiv@a+3,c
 46401  0143C0  C0E5  F013         	movff	_adc_results+8,i2___fldiv@b
 46402  0143C4  C0E6  F014         	movff	_adc_results+9,i2___fldiv@b+1
 46403  0143C8  C0E7  F015         	movff	_adc_results+10,i2___fldiv@b+2
 46404  0143CC  C0E8  F016         	movff	_adc_results+11,i2___fldiv@b+3
 46405  0143D0  EC85  F0C3         	call	i2___fldiv	;wreg free
 46406  0143D4  C013  F030         	movff	?i2___fldiv,i2___flmul@a
 46407  0143D8  C014  F031         	movff	?i2___fldiv+1,i2___flmul@a+1
 46408  0143DC  C015  F032         	movff	?i2___fldiv+2,i2___flmul@a+2
 46409  0143E0  C016  F033         	movff	?i2___fldiv+3,i2___flmul@a+3
 46410  0143E4  EC39  F0E3         	call	_ADCC_GetFilterValue	;wreg free
 46411  0143E8  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 46412  0143EC  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 46413  0143F0  6A07               	clrf	i2___xxtofl@val+2,c
 46414  0143F2  6A08               	clrf	i2___xxtofl@val+3,c
 46415  0143F4  0E00               	movlw	0
 46416  0143F6  ECCC  F0CD         	call	i2___xxtofl
 46417  0143FA  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 46418  0143FE  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 46419  014402  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 46420  014406  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 46421  01440A  EC9C  F0B6         	call	i2___flmul	;wreg free
 46422  01440E  C02C  F07B         	movff	?i2___flmul,_ADC_PostProcessingHandler$6411
 46423  014412  C02D  F07C         	movff	?i2___flmul+1,_ADC_PostProcessingHandler$6411+1
 46424  014416  C02E  F07D         	movff	?i2___flmul+2,_ADC_PostProcessingHandler$6411+2
 46425  01441A  C02F  F07E         	movff	?i2___flmul+3,_ADC_PostProcessingHandler$6411+3
 46426                           
 46427                           ;adc_postprocessing.c: 62: pos12_isns_average_buffer[pos12_isns_average_index] = (((ADCC
      +                          _GetFilterValue()) * (adc_results.pos5_adc_result/1023.0)) * 0.501002004 - adc_results.a
      +                          vss_adc_result) * adc_result_scaling;
 46428  01441E  C0DD  F068         	movff	_adc_results,i2___flsub@a
 46429  014422  C0DE  F069         	movff	_adc_results+1,i2___flsub@a+1
 46430  014426  C0DF  F06A         	movff	_adc_results+2,i2___flsub@a+2
 46431  01442A  C0E0  F06B         	movff	_adc_results+3,i2___flsub@a+3
 46432  01442E  0EAB               	movlw	171
 46433  014430  6E30               	movwf	i2___flmul@a,c
 46434  014432  0E41               	movlw	65
 46435  014434  6E31               	movwf	i2___flmul@a+1,c
 46436  014436  0E00               	movlw	0
 46437  014438  6E32               	movwf	i2___flmul@a+2,c
 46438  01443A  0E3F               	movlw	63
 46439  01443C  6E33               	movwf	i2___flmul@a+3,c
 46440  01443E  C07B  F02C         	movff	_ADC_PostProcessingHandler$6411,i2___flmul@b
 46441  014442  C07C  F02D         	movff	_ADC_PostProcessingHandler$6411+1,i2___flmul@b+1
 46442  014446  C07D  F02E         	movff	_ADC_PostProcessingHandler$6411+2,i2___flmul@b+2
 46443  01444A  C07E  F02F         	movff	_ADC_PostProcessingHandler$6411+3,i2___flmul@b+3
 46444  01444E  EC9C  F0B6         	call	i2___flmul	;wreg free
 46445  014452  C02C  F064         	movff	?i2___flmul,i2___flsub@b
 46446  014456  C02D  F065         	movff	?i2___flmul+1,i2___flsub@b+1
 46447  01445A  C02E  F066         	movff	?i2___flmul+2,i2___flsub@b+2
 46448  01445E  C02F  F067         	movff	?i2___flmul+3,i2___flsub@b+3
 46449  014462  EC52  F0DD         	call	i2___flsub	;wreg free
 46450  014466  C064  F07F         	movff	?i2___flsub,_ADC_PostProcessingHandler$6412
 46451  01446A  C065  F080         	movff	?i2___flsub+1,_ADC_PostProcessingHandler$6412+1
 46452  01446E  C066  F081         	movff	?i2___flsub+2,_ADC_PostProcessingHandler$6412+2
 46453  014472  C067  F082         	movff	?i2___flsub+3,_ADC_PostProcessingHandler$6412+3
 46454                           
 46455                           ;adc_postprocessing.c: 62: pos12_isns_average_buffer[pos12_isns_average_index] = (((ADCC
      +                          _GetFilterValue()) * (adc_results.pos5_adc_result/1023.0)) * 0.501002004 - adc_results.a
      +                          vss_adc_result) * adc_result_scaling;
 46456  014476  C07F  F02C         	movff	_ADC_PostProcessingHandler$6412,i2___flmul@b
 46457  01447A  C080  F02D         	movff	_ADC_PostProcessingHandler$6412+1,i2___flmul@b+1
 46458  01447E  C081  F02E         	movff	_ADC_PostProcessingHandler$6412+2,i2___flmul@b+2
 46459  014482  C082  F02F         	movff	_ADC_PostProcessingHandler$6412+3,i2___flmul@b+3
 46460  014486  C0C1  F030         	movff	_adc_result_scaling,i2___flmul@a
 46461  01448A  C0C2  F031         	movff	_adc_result_scaling+1,i2___flmul@a+1
 46462  01448E  C0C3  F032         	movff	_adc_result_scaling+2,i2___flmul@a+2
 46463  014492  C0C4  F033         	movff	_adc_result_scaling+3,i2___flmul@a+3
 46464  014496  EC9C  F0B6         	call	i2___flmul	;wreg free
 46465  01449A  0100               	movlb	0	; () banked
 46466  01449C  51D6               	movf	_pos12_isns_average_index& (0+255),w,b
 46467  01449E  0D04               	mullw	4
 46468  0144A0  0E40               	movlw	low _pos12_isns_average_buffer
 46469  0144A2  24F3               	addwf	prodl,w,c
 46470  0144A4  6ED9               	movwf	fsr2l,c
 46471  0144A6  0E04               	movlw	high _pos12_isns_average_buffer
 46472  0144A8  20F4               	addwfc	prodh,w,c
 46473  0144AA  6EDA               	movwf	fsr2h,c
 46474  0144AC  C02C  FFDE         	movff	?i2___flmul,postinc2
 46475  0144B0  C02D  FFDE         	movff	?i2___flmul+1,postinc2
 46476  0144B4  C02E  FFDE         	movff	?i2___flmul+2,postinc2
 46477  0144B8  C02F  FFDE         	movff	?i2___flmul+3,postinc2
 46478                           
 46479                           ; BSR set to: 0
 46480                           ;adc_postprocessing.c: 63: pos12_isns_average_index++;
 46481  0144BC  2BD6               	incf	_pos12_isns_average_index& (0+255),f,b
 46482                           
 46483                           ; BSR set to: 0
 46484                           ;adc_postprocessing.c: 66: if (pos12_isns_average_index == 16) {
 46485  0144BE  0E10               	movlw	16
 46486  0144C0  19D6               	xorwf	_pos12_isns_average_index& (0+255),w,b
 46487  0144C2  A4D8               	btfss	status,2,c
 46488  0144C4  D057               	goto	i2l21066
 46489                           
 46490                           ; BSR set to: 0
 46491                           ;adc_postprocessing.c: 67: pos12_isns_average_index = 0;
 46492  0144C6  0E00               	movlw	0
 46493  0144C8  6FD6               	movwf	_pos12_isns_average_index& (0+255),b
 46494                           
 46495                           ;adc_postprocessing.c: 69: adc_results.pos12_isns_adc_result = 0.0;
 46496  0144CA  0E00               	movlw	0
 46497  0144CC  6FED               	movwf	(_adc_results+16)& (0+255),b
 46498  0144CE  0E00               	movlw	0
 46499  0144D0  6FEE               	movwf	(_adc_results+17)& (0+255),b
 46500  0144D2  0E00               	movlw	0
 46501  0144D4  6FEF               	movwf	(_adc_results+18)& (0+255),b
 46502  0144D6  0E00               	movlw	0
 46503  0144D8  6FF0               	movwf	(_adc_results+19)& (0+255),b
 46504                           
 46505                           ;adc_postprocessing.c: 70: for (uint8_t i = 0; i < 16; i++) {
 46506  0144DA  0E00               	movlw	0
 46507  0144DC  6F79               	movwf	ADC_PostProcessingHandler@i& (0+255),b
 46508  0144DE                     i2l21058:
 46509                           
 46510                           ; BSR set to: 0
 46511                           ;adc_postprocessing.c: 71: adc_results.pos12_isns_adc_result += fabs(pos12_isns_average_
      +                          buffer[i]);
 46512  0144DE  C0ED  F052         	movff	_adc_results+16,i2___fladd@b
 46513  0144E2  C0EE  F053         	movff	_adc_results+17,i2___fladd@b+1
 46514  0144E6  C0EF  F054         	movff	_adc_results+18,i2___fladd@b+2
 46515  0144EA  C0F0  F055         	movff	_adc_results+19,i2___fladd@b+3
 46516  0144EE  5179               	movf	ADC_PostProcessingHandler@i& (0+255),w,b
 46517  0144F0  0D04               	mullw	4
 46518  0144F2  0E40               	movlw	low _pos12_isns_average_buffer
 46519  0144F4  24F3               	addwf	prodl,w,c
 46520  0144F6  6ED9               	movwf	fsr2l,c
 46521  0144F8  0E04               	movlw	high _pos12_isns_average_buffer
 46522  0144FA  20F4               	addwfc	prodh,w,c
 46523  0144FC  6EDA               	movwf	fsr2h,c
 46524  0144FE  CFDE F005          	movff	postinc2,fabs@d
 46525  014502  CFDE F006          	movff	postinc2,fabs@d+1
 46526  014506  CFDE F007          	movff	postinc2,fabs@d+2
 46527  01450A  CFDE F008          	movff	postinc2,fabs@d+3
 46528  01450E  EC7C  F0DF         	call	_fabs	;wreg free
 46529  014512  C005  F056         	movff	?_fabs,i2___fladd@a
 46530  014516  C006  F057         	movff	?_fabs+1,i2___fladd@a+1
 46531  01451A  C007  F058         	movff	?_fabs+2,i2___fladd@a+2
 46532  01451E  C008  F059         	movff	?_fabs+3,i2___fladd@a+3
 46533  014522  EC53  F0BB         	call	i2___fladd	;wreg free
 46534  014526  C052  F0ED         	movff	?i2___fladd,_adc_results+16
 46535  01452A  C053  F0EE         	movff	?i2___fladd+1,_adc_results+17
 46536  01452E  C054  F0EF         	movff	?i2___fladd+2,_adc_results+18
 46537  014532  C055  F0F0         	movff	?i2___fladd+3,_adc_results+19
 46538  014536  0100               	movlb	0	; () banked
 46539  014538  2B79               	incf	ADC_PostProcessingHandler@i& (0+255),f,b
 46540                           
 46541                           ; BSR set to: 0
 46542  01453A  0E0F               	movlw	15
 46543  01453C  6579               	cpfsgt	ADC_PostProcessingHandler@i& (0+255),b
 46544  01453E  D7CF               	goto	i2l21058
 46545                           
 46546                           ; BSR set to: 0
 46547                           ;adc_postprocessing.c: 72: };adc_postprocessing.c: 73: adc_results.pos12_isns_adc_result
      +                           /= (float) 16;
 46548  014540  C0ED  F013         	movff	_adc_results+16,i2___fldiv@b
 46549  014544  C0EE  F014         	movff	_adc_results+17,i2___fldiv@b+1
 46550  014548  C0EF  F015         	movff	_adc_results+18,i2___fldiv@b+2
 46551  01454C  C0F0  F016         	movff	_adc_results+19,i2___fldiv@b+3
 46552  014550  0E00               	movlw	0
 46553  014552  6E17               	movwf	i2___fldiv@a,c
 46554  014554  0E00               	movlw	0
 46555  014556  6E18               	movwf	i2___fldiv@a+1,c
 46556  014558  0E80               	movlw	128
 46557  01455A  6E19               	movwf	i2___fldiv@a+2,c
 46558  01455C  0E41               	movlw	65
 46559  01455E  6E1A               	movwf	i2___fldiv@a+3,c
 46560  014560  EC85  F0C3         	call	i2___fldiv	;wreg free
 46561  014564  C013  F0ED         	movff	?i2___fldiv,_adc_results+16
 46562  014568  C014  F0EE         	movff	?i2___fldiv+1,_adc_results+17
 46563  01456C  C015  F0EF         	movff	?i2___fldiv+2,_adc_results+18
 46564  014570  C016  F0F0         	movff	?i2___fldiv+3,_adc_results+19
 46565  014574                     i2l21066:
 46566                           
 46567                           ;adc_postprocessing.c: 74: };adc_postprocessing.c: 76: next_adc_channel = QI_ISNS_ADC;
 46568  014574  0E05               	movlw	5
 46569  014576  D190               	goto	L50
 46570  014578                     i2l21068:
 46571                           
 46572                           ; BSR set to: 0
 46573                           ;adc_postprocessing.c: 81: qi_isns_average_buffer[qi_isns_average_index] = (((ADCC_GetFi
      +                          lterValue()) * (adc_results.pos5_adc_result/1023.0)) * 1.004016064 - adc_results.avss_ad
      +                          c_result) * adc_result_scaling;
 46574  014578  0E00               	movlw	0
 46575  01457A  6E17               	movwf	i2___fldiv@a,c
 46576  01457C  0EC0               	movlw	192
 46577  01457E  6E18               	movwf	i2___fldiv@a+1,c
 46578  014580  0E7F               	movlw	127
 46579  014582  6E19               	movwf	i2___fldiv@a+2,c
 46580  014584  0E44               	movlw	68
 46581  014586  6E1A               	movwf	i2___fldiv@a+3,c
 46582  014588  C0E5  F013         	movff	_adc_results+8,i2___fldiv@b
 46583  01458C  C0E6  F014         	movff	_adc_results+9,i2___fldiv@b+1
 46584  014590  C0E7  F015         	movff	_adc_results+10,i2___fldiv@b+2
 46585  014594  C0E8  F016         	movff	_adc_results+11,i2___fldiv@b+3
 46586  014598  EC85  F0C3         	call	i2___fldiv	;wreg free
 46587  01459C  C013  F030         	movff	?i2___fldiv,i2___flmul@a
 46588  0145A0  C014  F031         	movff	?i2___fldiv+1,i2___flmul@a+1
 46589  0145A4  C015  F032         	movff	?i2___fldiv+2,i2___flmul@a+2
 46590  0145A8  C016  F033         	movff	?i2___fldiv+3,i2___flmul@a+3
 46591  0145AC  EC39  F0E3         	call	_ADCC_GetFilterValue	;wreg free
 46592  0145B0  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 46593  0145B4  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 46594  0145B8  6A07               	clrf	i2___xxtofl@val+2,c
 46595  0145BA  6A08               	clrf	i2___xxtofl@val+3,c
 46596  0145BC  0E00               	movlw	0
 46597  0145BE  ECCC  F0CD         	call	i2___xxtofl
 46598  0145C2  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 46599  0145C6  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 46600  0145CA  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 46601  0145CE  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 46602  0145D2  EC9C  F0B6         	call	i2___flmul	;wreg free
 46603  0145D6  C02C  F07B         	movff	?i2___flmul,_ADC_PostProcessingHandler$6411
 46604  0145DA  C02D  F07C         	movff	?i2___flmul+1,_ADC_PostProcessingHandler$6411+1
 46605  0145DE  C02E  F07D         	movff	?i2___flmul+2,_ADC_PostProcessingHandler$6411+2
 46606  0145E2  C02F  F07E         	movff	?i2___flmul+3,_ADC_PostProcessingHandler$6411+3
 46607                           
 46608                           ;adc_postprocessing.c: 81: qi_isns_average_buffer[qi_isns_average_index] = (((ADCC_GetFi
      +                          lterValue()) * (adc_results.pos5_adc_result/1023.0)) * 1.004016064 - adc_results.avss_ad
      +                          c_result) * adc_result_scaling;
 46609  0145E6  C0DD  F068         	movff	_adc_results,i2___flsub@a
 46610  0145EA  C0DE  F069         	movff	_adc_results+1,i2___flsub@a+1
 46611  0145EE  C0DF  F06A         	movff	_adc_results+2,i2___flsub@a+2
 46612  0145F2  C0E0  F06B         	movff	_adc_results+3,i2___flsub@a+3
 46613  0145F6  0E99               	movlw	153
 46614  0145F8  6E30               	movwf	i2___flmul@a,c
 46615  0145FA  0E83               	movlw	131
 46616  0145FC  6E31               	movwf	i2___flmul@a+1,c
 46617  0145FE  0E80               	movlw	128
 46618  014600  6E32               	movwf	i2___flmul@a+2,c
 46619  014602  0E3F               	movlw	63
 46620  014604  6E33               	movwf	i2___flmul@a+3,c
 46621  014606  C07B  F02C         	movff	_ADC_PostProcessingHandler$6411,i2___flmul@b
 46622  01460A  C07C  F02D         	movff	_ADC_PostProcessingHandler$6411+1,i2___flmul@b+1
 46623  01460E  C07D  F02E         	movff	_ADC_PostProcessingHandler$6411+2,i2___flmul@b+2
 46624  014612  C07E  F02F         	movff	_ADC_PostProcessingHandler$6411+3,i2___flmul@b+3
 46625  014616  EC9C  F0B6         	call	i2___flmul	;wreg free
 46626  01461A  C02C  F064         	movff	?i2___flmul,i2___flsub@b
 46627  01461E  C02D  F065         	movff	?i2___flmul+1,i2___flsub@b+1
 46628  014622  C02E  F066         	movff	?i2___flmul+2,i2___flsub@b+2
 46629  014626  C02F  F067         	movff	?i2___flmul+3,i2___flsub@b+3
 46630  01462A  EC52  F0DD         	call	i2___flsub	;wreg free
 46631  01462E  C064  F07F         	movff	?i2___flsub,_ADC_PostProcessingHandler$6412
 46632  014632  C065  F080         	movff	?i2___flsub+1,_ADC_PostProcessingHandler$6412+1
 46633  014636  C066  F081         	movff	?i2___flsub+2,_ADC_PostProcessingHandler$6412+2
 46634  01463A  C067  F082         	movff	?i2___flsub+3,_ADC_PostProcessingHandler$6412+3
 46635                           
 46636                           ;adc_postprocessing.c: 81: qi_isns_average_buffer[qi_isns_average_index] = (((ADCC_GetFi
      +                          lterValue()) * (adc_results.pos5_adc_result/1023.0)) * 1.004016064 - adc_results.avss_ad
      +                          c_result) * adc_result_scaling;
 46637  01463E  C07F  F02C         	movff	_ADC_PostProcessingHandler$6412,i2___flmul@b
 46638  014642  C080  F02D         	movff	_ADC_PostProcessingHandler$6412+1,i2___flmul@b+1
 46639  014646  C081  F02E         	movff	_ADC_PostProcessingHandler$6412+2,i2___flmul@b+2
 46640  01464A  C082  F02F         	movff	_ADC_PostProcessingHandler$6412+3,i2___flmul@b+3
 46641  01464E  C0C1  F030         	movff	_adc_result_scaling,i2___flmul@a
 46642  014652  C0C2  F031         	movff	_adc_result_scaling+1,i2___flmul@a+1
 46643  014656  C0C3  F032         	movff	_adc_result_scaling+2,i2___flmul@a+2
 46644  01465A  C0C4  F033         	movff	_adc_result_scaling+3,i2___flmul@a+3
 46645  01465E  EC9C  F0B6         	call	i2___flmul	;wreg free
 46646  014662  0100               	movlb	0	; () banked
 46647  014664  51D5               	movf	_qi_isns_average_index& (0+255),w,b
 46648  014666  0D04               	mullw	4
 46649  014668  0E00               	movlw	low _qi_isns_average_buffer
 46650  01466A  24F3               	addwf	prodl,w,c
 46651  01466C  6ED9               	movwf	fsr2l,c
 46652  01466E  0E04               	movlw	high _qi_isns_average_buffer
 46653  014670  20F4               	addwfc	prodh,w,c
 46654  014672  6EDA               	movwf	fsr2h,c
 46655  014674  C02C  FFDE         	movff	?i2___flmul,postinc2
 46656  014678  C02D  FFDE         	movff	?i2___flmul+1,postinc2
 46657  01467C  C02E  FFDE         	movff	?i2___flmul+2,postinc2
 46658  014680  C02F  FFDE         	movff	?i2___flmul+3,postinc2
 46659                           
 46660                           ; BSR set to: 0
 46661                           ;adc_postprocessing.c: 82: qi_isns_average_index++;
 46662  014684  2BD5               	incf	_qi_isns_average_index& (0+255),f,b
 46663                           
 46664                           ; BSR set to: 0
 46665                           ;adc_postprocessing.c: 85: if (qi_isns_average_index == 16) {
 46666  014686  0E10               	movlw	16
 46667  014688  19D5               	xorwf	_qi_isns_average_index& (0+255),w,b
 46668  01468A  A4D8               	btfss	status,2,c
 46669  01468C  D057               	goto	i2l21090
 46670                           
 46671                           ; BSR set to: 0
 46672                           ;adc_postprocessing.c: 86: qi_isns_average_index = 0;
 46673  01468E  0E00               	movlw	0
 46674  014690  6FD5               	movwf	_qi_isns_average_index& (0+255),b
 46675                           
 46676                           ;adc_postprocessing.c: 88: adc_results.qi_isns_adc_result = 0.0;
 46677  014692  0E00               	movlw	0
 46678  014694  6FF1               	movwf	(_adc_results+20)& (0+255),b
 46679  014696  0E00               	movlw	0
 46680  014698  6FF2               	movwf	(_adc_results+21)& (0+255),b
 46681  01469A  0E00               	movlw	0
 46682  01469C  6FF3               	movwf	(_adc_results+22)& (0+255),b
 46683  01469E  0E00               	movlw	0
 46684  0146A0  6FF4               	movwf	(_adc_results+23)& (0+255),b
 46685                           
 46686                           ;adc_postprocessing.c: 89: for (uint8_t i = 0; i < 16; i++) {
 46687  0146A2  0E00               	movlw	0
 46688  0146A4  6F7A               	movwf	ADC_PostProcessingHandler@i_3557& (0+255),b
 46689  0146A6                     i2l21082:
 46690                           
 46691                           ; BSR set to: 0
 46692                           ;adc_postprocessing.c: 90: adc_results.qi_isns_adc_result += fabs(qi_isns_average_buffer
      +                          [i]);
 46693  0146A6  C0F1  F052         	movff	_adc_results+20,i2___fladd@b
 46694  0146AA  C0F2  F053         	movff	_adc_results+21,i2___fladd@b+1
 46695  0146AE  C0F3  F054         	movff	_adc_results+22,i2___fladd@b+2
 46696  0146B2  C0F4  F055         	movff	_adc_results+23,i2___fladd@b+3
 46697  0146B6  517A               	movf	ADC_PostProcessingHandler@i_3557& (0+255),w,b
 46698  0146B8  0D04               	mullw	4
 46699  0146BA  0E00               	movlw	low _qi_isns_average_buffer
 46700  0146BC  24F3               	addwf	prodl,w,c
 46701  0146BE  6ED9               	movwf	fsr2l,c
 46702  0146C0  0E04               	movlw	high _qi_isns_average_buffer
 46703  0146C2  20F4               	addwfc	prodh,w,c
 46704  0146C4  6EDA               	movwf	fsr2h,c
 46705  0146C6  CFDE F005          	movff	postinc2,fabs@d
 46706  0146CA  CFDE F006          	movff	postinc2,fabs@d+1
 46707  0146CE  CFDE F007          	movff	postinc2,fabs@d+2
 46708  0146D2  CFDE F008          	movff	postinc2,fabs@d+3
 46709  0146D6  EC7C  F0DF         	call	_fabs	;wreg free
 46710  0146DA  C005  F056         	movff	?_fabs,i2___fladd@a
 46711  0146DE  C006  F057         	movff	?_fabs+1,i2___fladd@a+1
 46712  0146E2  C007  F058         	movff	?_fabs+2,i2___fladd@a+2
 46713  0146E6  C008  F059         	movff	?_fabs+3,i2___fladd@a+3
 46714  0146EA  EC53  F0BB         	call	i2___fladd	;wreg free
 46715  0146EE  C052  F0F1         	movff	?i2___fladd,_adc_results+20
 46716  0146F2  C053  F0F2         	movff	?i2___fladd+1,_adc_results+21
 46717  0146F6  C054  F0F3         	movff	?i2___fladd+2,_adc_results+22
 46718  0146FA  C055  F0F4         	movff	?i2___fladd+3,_adc_results+23
 46719  0146FE  0100               	movlb	0	; () banked
 46720  014700  2B7A               	incf	ADC_PostProcessingHandler@i_3557& (0+255),f,b
 46721                           
 46722                           ; BSR set to: 0
 46723  014702  0E0F               	movlw	15
 46724  014704  657A               	cpfsgt	ADC_PostProcessingHandler@i_3557& (0+255),b
 46725  014706  D7CF               	goto	i2l21082
 46726                           
 46727                           ; BSR set to: 0
 46728                           ;adc_postprocessing.c: 91: };adc_postprocessing.c: 92: adc_results.qi_isns_adc_result /=
      +                           (float) 16;
 46729  014708  C0F1  F013         	movff	_adc_results+20,i2___fldiv@b
 46730  01470C  C0F2  F014         	movff	_adc_results+21,i2___fldiv@b+1
 46731  014710  C0F3  F015         	movff	_adc_results+22,i2___fldiv@b+2
 46732  014714  C0F4  F016         	movff	_adc_results+23,i2___fldiv@b+3
 46733  014718  0E00               	movlw	0
 46734  01471A  6E17               	movwf	i2___fldiv@a,c
 46735  01471C  0E00               	movlw	0
 46736  01471E  6E18               	movwf	i2___fldiv@a+1,c
 46737  014720  0E80               	movlw	128
 46738  014722  6E19               	movwf	i2___fldiv@a+2,c
 46739  014724  0E41               	movlw	65
 46740  014726  6E1A               	movwf	i2___fldiv@a+3,c
 46741  014728  EC85  F0C3         	call	i2___fldiv	;wreg free
 46742  01472C  C013  F0F1         	movff	?i2___fldiv,_adc_results+20
 46743  014730  C014  F0F2         	movff	?i2___fldiv+1,_adc_results+21
 46744  014734  C015  F0F3         	movff	?i2___fldiv+2,_adc_results+22
 46745  014738  C016  F0F4         	movff	?i2___fldiv+3,_adc_results+23
 46746  01473C                     i2l21090:
 46747                           
 46748                           ;adc_postprocessing.c: 93: };adc_postprocessing.c: 95: next_adc_channel = channel_Temp;
 46749  01473C  0E3D               	movlw	61
 46750  01473E  D0AC               	goto	L50
 46751  014740                     i2l21092:
 46752                           
 46753                           ; BSR set to: 0
 46754                           ;adc_postprocessing.c: 99: adc_results.die_temp_adc_result = ((0.659 - (5.0 / 4.0) * (1.
      +                          0 - ADCC_GetFilterValue()/1023.0)) / .00132) - 40.0 + temp_adc_offset;
 46755  014740  0E00               	movlw	0
 46756  014742  6E30               	movwf	i2___flmul@a,c
 46757  014744  0E00               	movlw	0
 46758  014746  6E31               	movwf	i2___flmul@a+1,c
 46759  014748  0EA0               	movlw	160
 46760  01474A  6E32               	movwf	i2___flmul@a+2,c
 46761  01474C  0E3F               	movlw	63
 46762  01474E  6E33               	movwf	i2___flmul@a+3,c
 46763  014750  0E00               	movlw	0
 46764  014752  6E17               	movwf	i2___fldiv@a,c
 46765  014754  0EC0               	movlw	192
 46766  014756  6E18               	movwf	i2___fldiv@a+1,c
 46767  014758  0E7F               	movlw	127
 46768  01475A  6E19               	movwf	i2___fldiv@a+2,c
 46769  01475C  0E44               	movlw	68
 46770  01475E  6E1A               	movwf	i2___fldiv@a+3,c
 46771  014760  EC39  F0E3         	call	_ADCC_GetFilterValue	;wreg free
 46772  014764  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 46773  014768  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 46774  01476C  6A07               	clrf	i2___xxtofl@val+2,c
 46775  01476E  6A08               	clrf	i2___xxtofl@val+3,c
 46776  014770  0E00               	movlw	0
 46777  014772  ECCC  F0CD         	call	i2___xxtofl
 46778  014776  C005  F013         	movff	?i2___xxtofl,i2___fldiv@b
 46779  01477A  C006  F014         	movff	?i2___xxtofl+1,i2___fldiv@b+1
 46780  01477E  C007  F015         	movff	?i2___xxtofl+2,i2___fldiv@b+2
 46781  014782  C008  F016         	movff	?i2___xxtofl+3,i2___fldiv@b+3
 46782  014786  EC85  F0C3         	call	i2___fldiv	;wreg free
 46783  01478A  C013  F068         	movff	?i2___fldiv,i2___flsub@a
 46784  01478E  C014  F069         	movff	?i2___fldiv+1,i2___flsub@a+1
 46785  014792  C015  F06A         	movff	?i2___fldiv+2,i2___flsub@a+2
 46786  014796  C016  F06B         	movff	?i2___fldiv+3,i2___flsub@a+3
 46787  01479A  0E00               	movlw	0
 46788  01479C  0100               	movlb	0	; () banked
 46789  01479E  6F64               	movwf	i2___flsub@b& (0+255),b
 46790  0147A0  0E00               	movlw	0
 46791  0147A2  6F65               	movwf	(i2___flsub@b+1)& (0+255),b
 46792  0147A4  0E80               	movlw	128
 46793  0147A6  6F66               	movwf	(i2___flsub@b+2)& (0+255),b
 46794  0147A8  0E3F               	movlw	63
 46795  0147AA  6F67               	movwf	(i2___flsub@b+3)& (0+255),b
 46796  0147AC  EC52  F0DD         	call	i2___flsub	;wreg free
 46797  0147B0  C064  F02C         	movff	?i2___flsub,i2___flmul@b
 46798  0147B4  C065  F02D         	movff	?i2___flsub+1,i2___flmul@b+1
 46799  0147B8  C066  F02E         	movff	?i2___flsub+2,i2___flmul@b+2
 46800  0147BC  C067  F02F         	movff	?i2___flsub+3,i2___flmul@b+3
 46801  0147C0  EC9C  F0B6         	call	i2___flmul	;wreg free
 46802  0147C4  C02C  F06C         	movff	?i2___flmul,_ADC_PostProcessingHandler$6413
 46803  0147C8  C02D  F06D         	movff	?i2___flmul+1,_ADC_PostProcessingHandler$6413+1
 46804  0147CC  C02E  F06E         	movff	?i2___flmul+2,_ADC_PostProcessingHandler$6413+2
 46805  0147D0  C02F  F06F         	movff	?i2___flmul+3,_ADC_PostProcessingHandler$6413+3
 46806                           
 46807                           ;adc_postprocessing.c: 99: adc_results.die_temp_adc_result = ((0.659 - (5.0 / 4.0) * (1.
      +                          0 - ADCC_GetFilterValue()/1023.0)) / .00132) - 40.0 + temp_adc_offset;
 46808  0147D4  0EDA               	movlw	218
 46809  0147D6  6E17               	movwf	i2___fldiv@a,c
 46810  0147D8  0E03               	movlw	3
 46811  0147DA  6E18               	movwf	i2___fldiv@a+1,c
 46812  0147DC  0EAD               	movlw	173
 46813  0147DE  6E19               	movwf	i2___fldiv@a+2,c
 46814  0147E0  0E3A               	movlw	58
 46815  0147E2  6E1A               	movwf	i2___fldiv@a+3,c
 46816  0147E4  C06C  F068         	movff	_ADC_PostProcessingHandler$6413,i2___flsub@a
 46817  0147E8  C06D  F069         	movff	_ADC_PostProcessingHandler$6413+1,i2___flsub@a+1
 46818  0147EC  C06E  F06A         	movff	_ADC_PostProcessingHandler$6413+2,i2___flsub@a+2
 46819  0147F0  C06F  F06B         	movff	_ADC_PostProcessingHandler$6413+3,i2___flsub@a+3
 46820  0147F4  0E39               	movlw	57
 46821  0147F6  0100               	movlb	0	; () banked
 46822  0147F8  6F64               	movwf	i2___flsub@b& (0+255),b
 46823  0147FA  0EB4               	movlw	180
 46824  0147FC  6F65               	movwf	(i2___flsub@b+1)& (0+255),b
 46825  0147FE  0E28               	movlw	40
 46826  014800  6F66               	movwf	(i2___flsub@b+2)& (0+255),b
 46827  014802  0E3F               	movlw	63
 46828  014804  6F67               	movwf	(i2___flsub@b+3)& (0+255),b
 46829  014806  EC52  F0DD         	call	i2___flsub	;wreg free
 46830  01480A  C064  F013         	movff	?i2___flsub,i2___fldiv@b
 46831  01480E  C065  F014         	movff	?i2___flsub+1,i2___fldiv@b+1
 46832  014812  C066  F015         	movff	?i2___flsub+2,i2___fldiv@b+2
 46833  014816  C067  F016         	movff	?i2___flsub+3,i2___fldiv@b+3
 46834  01481A  EC85  F0C3         	call	i2___fldiv	;wreg free
 46835  01481E  C013  F070         	movff	?i2___fldiv,_ADC_PostProcessingHandler$6414
 46836  014822  C014  F071         	movff	?i2___fldiv+1,_ADC_PostProcessingHandler$6414+1
 46837  014826  C015  F072         	movff	?i2___fldiv+2,_ADC_PostProcessingHandler$6414+2
 46838  01482A  C016  F073         	movff	?i2___fldiv+3,_ADC_PostProcessingHandler$6414+3
 46839                           
 46840                           ;adc_postprocessing.c: 99: adc_results.die_temp_adc_result = ((0.659 - (5.0 / 4.0) * (1.
      +                          0 - ADCC_GetFilterValue()/1023.0)) / .00132) - 40.0 + temp_adc_offset;
 46841  01482E  0E00               	movlw	0
 46842  014830  6E56               	movwf	i2___fladd@a,c
 46843  014832  0E00               	movlw	0
 46844  014834  6E57               	movwf	i2___fladd@a+1,c
 46845  014836  0E20               	movlw	32
 46846  014838  6E58               	movwf	i2___fladd@a+2,c
 46847  01483A  0EC2               	movlw	194
 46848  01483C  6E59               	movwf	i2___fladd@a+3,c
 46849  01483E  C070  F052         	movff	_ADC_PostProcessingHandler$6414,i2___fladd@b
 46850  014842  C071  F053         	movff	_ADC_PostProcessingHandler$6414+1,i2___fladd@b+1
 46851  014846  C072  F054         	movff	_ADC_PostProcessingHandler$6414+2,i2___fladd@b+2
 46852  01484A  C073  F055         	movff	_ADC_PostProcessingHandler$6414+3,i2___fladd@b+3
 46853  01484E  EC53  F0BB         	call	i2___fladd	;wreg free
 46854  014852  C052  F074         	movff	?i2___fladd,_ADC_PostProcessingHandler$6415
 46855  014856  C053  F075         	movff	?i2___fladd+1,_ADC_PostProcessingHandler$6415+1
 46856  01485A  C054  F076         	movff	?i2___fladd+2,_ADC_PostProcessingHandler$6415+2
 46857  01485E  C055  F077         	movff	?i2___fladd+3,_ADC_PostProcessingHandler$6415+3
 46858                           
 46859                           ;adc_postprocessing.c: 99: adc_results.die_temp_adc_result = ((0.659 - (5.0 / 4.0) * (1.
      +                          0 - ADCC_GetFilterValue()/1023.0)) / .00132) - 40.0 + temp_adc_offset;
 46860  014862  C074  F052         	movff	_ADC_PostProcessingHandler$6415,i2___fladd@b
 46861  014866  C075  F053         	movff	_ADC_PostProcessingHandler$6415+1,i2___fladd@b+1
 46862  01486A  C076  F054         	movff	_ADC_PostProcessingHandler$6415+2,i2___fladd@b+2
 46863  01486E  C077  F055         	movff	_ADC_PostProcessingHandler$6415+3,i2___fladd@b+3
 46864  014872  0EB8               	movlw	184
 46865  014874  6E56               	movwf	i2___fladd@a,c
 46866  014876  0E0E               	movlw	14
 46867  014878  6E57               	movwf	i2___fladd@a+1,c
 46868  01487A  0EBC               	movlw	188
 46869  01487C  6E58               	movwf	i2___fladd@a+2,c
 46870  01487E  0E43               	movlw	67
 46871  014880  6E59               	movwf	i2___fladd@a+3,c
 46872  014882  EC53  F0BB         	call	i2___fladd	;wreg free
 46873  014886  C052  F0F5         	movff	?i2___fladd,_adc_results+24
 46874  01488A  C053  F0F6         	movff	?i2___fladd+1,_adc_results+25
 46875  01488E  C054  F0F7         	movff	?i2___fladd+2,_adc_results+26
 46876  014892  C055  F0F8         	movff	?i2___fladd+3,_adc_results+27
 46877                           
 46878                           ;adc_postprocessing.c: 101: next_adc_channel = channel_VSS;
 46879  014896  0E3C               	movlw	60
 46880  014898                     L50:
 46881  014898  0100               	movlb	0	; () banked
 46882  01489A  6FFC               	movwf	_next_adc_channel& (0+255),b
 46883                           
 46884                           ;adc_postprocessing.c: 102: break;
 46885  01489C  D01C               	goto	i2l21108
 46886  01489E                     i2l21102:
 46887                           
 46888                           ; BSR set to: 0
 46889                           ;adc_postprocessing.c: 107: error_handler.ADC_general_error_flag = 1;
 46890  01489E  0E01               	movlw	1
 46891  0148A0  6FBA               	movwf	(_error_handler+1)& (0+255),b
 46892                           
 46893                           ;adc_postprocessing.c: 108: break;
 46894  0148A2  D019               	goto	i2l21108
 46895  0148A4                     i2l21106:
 46896  0148A4  0100               	movlb	0	; () banked
 46897  0148A6  5178               	movf	ADC_PostProcessingHandler@current_adc_channel& (0+255),w,b
 46898                           
 46899                           ; Switch size 1, requested type "simple"
 46900                           ; Number of cases is 7, Range of values is 0 to 63
 46901                           ; switch strategies available:
 46902                           ; Name         Instructions Cycles
 46903                           ; simple_byte           22    12 (average)
 46904                           ;	Chosen strategy is simple_byte
 46905  0148A8  0A00               	xorlw	0	; case 0
 46906  0148AA  B4D8               	btfsc	status,2,c
 46907  0148AC  D502               	goto	i2l21040
 46908  0148AE  0A01               	xorlw	1	; case 1
 46909  0148B0  B4D8               	btfsc	status,2,c
 46910  0148B2  D57E               	goto	i2l21044
 46911  0148B4  0A05               	xorlw	5	; case 4
 46912  0148B6  B4D8               	btfsc	status,2,c
 46913  0148B8  D48F               	goto	i2l21036
 46914  0148BA  0A01               	xorlw	1	; case 5
 46915  0148BC  B4D8               	btfsc	status,2,c
 46916  0148BE  D65C               	goto	i2l21068
 46917  0148C0  0A39               	xorlw	57	; case 60
 46918  0148C2  B4D8               	btfsc	status,2,c
 46919  0148C4  EF47  F0A0         	goto	i2l21022
 46920  0148C8  0A01               	xorlw	1	; case 61
 46921  0148CA  B4D8               	btfsc	status,2,c
 46922  0148CC  D739               	goto	i2l21092
 46923  0148CE  0A02               	xorlw	2	; case 63
 46924  0148D0  B4D8               	btfsc	status,2,c
 46925  0148D2  D404               	goto	i2l21026
 46926  0148D4  D7E4               	goto	i2l21102
 46927  0148D6                     i2l21108:
 46928                           
 46929                           ; BSR set to: 0
 46930                           ;adc_postprocessing.c: 112: if (ADCC_GetCurrentCountofConversions() != 255) {
 46931  0148D6  EC4B  F0E4         	call	_ADCC_GetCurrentCountofConversions	;wreg free
 46932  0148DA  0AFF               	xorlw	255
 46933  0148DC  B4D8               	btfsc	status,2,c
 46934  0148DE  D003               	goto	i2l21112
 46935                           
 46936                           ;adc_postprocessing.c: 113: error_handler.ADC_general_error_flag = 1;
 46937  0148E0  0E01               	movlw	1
 46938  0148E2  0100               	movlb	0	; () banked
 46939  0148E4  6FBA               	movwf	(_error_handler+1)& (0+255),b
 46940  0148E6                     i2l21112:
 46941                           
 46942                           ;adc_postprocessing.c: 114: };adc_postprocessing.c: 116: if (ADCC_HasAccumulatorOverflow
      +                          ed()) {
 46943  0148E6  EC08  F0E4         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 46944  0148EA  0900               	iorlw	0
 46945  0148EC  B4D8               	btfsc	status,2,c
 46946  0148EE  D003               	goto	i2l21116
 46947                           
 46948                           ;adc_postprocessing.c: 117: error_handler.ADC_general_error_flag = 1;
 46949  0148F0  0E01               	movlw	1
 46950  0148F2  0100               	movlb	0	; () banked
 46951  0148F4  6FBA               	movwf	(_error_handler+1)& (0+255),b
 46952  0148F6                     i2l21116:
 46953                           
 46954                           ;adc_postprocessing.c: 118: };adc_postprocessing.c: 121: adc_calculations.input_power = 
      +                          adc_results.pos12_adc_result * adc_results.pos12_isns_adc_result;
 46955  0148F6  C0E9  F02C         	movff	_adc_results+12,i2___flmul@b
 46956  0148FA  C0EA  F02D         	movff	_adc_results+13,i2___flmul@b+1
 46957  0148FE  C0EB  F02E         	movff	_adc_results+14,i2___flmul@b+2
 46958  014902  C0EC  F02F         	movff	_adc_results+15,i2___flmul@b+3
 46959  014906  C0ED  F030         	movff	_adc_results+16,i2___flmul@a
 46960  01490A  C0EE  F031         	movff	_adc_results+17,i2___flmul@a+1
 46961  01490E  C0EF  F032         	movff	_adc_results+18,i2___flmul@a+2
 46962  014912  C0F0  F033         	movff	_adc_results+19,i2___flmul@a+3
 46963  014916  EC9C  F0B6         	call	i2___flmul	;wreg free
 46964  01491A  C02C  F2BE         	movff	?i2___flmul,_adc_calculations
 46965  01491E  C02D  F2BF         	movff	?i2___flmul+1,_adc_calculations+1
 46966  014922  C02E  F2C0         	movff	?i2___flmul+2,_adc_calculations+2
 46967  014926  C02F  F2C1         	movff	?i2___flmul+3,_adc_calculations+3
 46968                           
 46969                           ;adc_postprocessing.c: 122: adc_calculations.output_power = adc_results.pos5_adc_result 
      +                          * adc_results.qi_isns_adc_result;
 46970  01492A  C0E5  F02C         	movff	_adc_results+8,i2___flmul@b
 46971  01492E  C0E6  F02D         	movff	_adc_results+9,i2___flmul@b+1
 46972  014932  C0E7  F02E         	movff	_adc_results+10,i2___flmul@b+2
 46973  014936  C0E8  F02F         	movff	_adc_results+11,i2___flmul@b+3
 46974  01493A  C0F1  F030         	movff	_adc_results+20,i2___flmul@a
 46975  01493E  C0F2  F031         	movff	_adc_results+21,i2___flmul@a+1
 46976  014942  C0F3  F032         	movff	_adc_results+22,i2___flmul@a+2
 46977  014946  C0F4  F033         	movff	_adc_results+23,i2___flmul@a+3
 46978  01494A  EC9C  F0B6         	call	i2___flmul	;wreg free
 46979  01494E  C02C  F2C2         	movff	?i2___flmul,_adc_calculations+4
 46980  014952  C02D  F2C3         	movff	?i2___flmul+1,_adc_calculations+5
 46981  014956  C02E  F2C4         	movff	?i2___flmul+2,_adc_calculations+6
 46982  01495A  C02F  F2C5         	movff	?i2___flmul+3,_adc_calculations+7
 46983                           
 46984                           ;adc_postprocessing.c: 123: adc_calculations.efficiency = (adc_calculations.output_power
      +                           / adc_calculations.input_power) * 100.0;
 46985  01495E  C2BE  F017         	movff	_adc_calculations,i2___fldiv@a
 46986  014962  C2BF  F018         	movff	_adc_calculations+1,i2___fldiv@a+1
 46987  014966  C2C0  F019         	movff	_adc_calculations+2,i2___fldiv@a+2
 46988  01496A  C2C1  F01A         	movff	_adc_calculations+3,i2___fldiv@a+3
 46989  01496E  C2C2  F013         	movff	_adc_calculations+4,i2___fldiv@b
 46990  014972  C2C3  F014         	movff	_adc_calculations+5,i2___fldiv@b+1
 46991  014976  C2C4  F015         	movff	_adc_calculations+6,i2___fldiv@b+2
 46992  01497A  C2C5  F016         	movff	_adc_calculations+7,i2___fldiv@b+3
 46993  01497E  EC85  F0C3         	call	i2___fldiv	;wreg free
 46994  014982  C013  F02C         	movff	?i2___fldiv,i2___flmul@b
 46995  014986  C014  F02D         	movff	?i2___fldiv+1,i2___flmul@b+1
 46996  01498A  C015  F02E         	movff	?i2___fldiv+2,i2___flmul@b+2
 46997  01498E  C016  F02F         	movff	?i2___fldiv+3,i2___flmul@b+3
 46998  014992  0E00               	movlw	0
 46999  014994  6E30               	movwf	i2___flmul@a,c
 47000  014996  0E00               	movlw	0
 47001  014998  6E31               	movwf	i2___flmul@a+1,c
 47002  01499A  0EC8               	movlw	200
 47003  01499C  6E32               	movwf	i2___flmul@a+2,c
 47004  01499E  0E42               	movlw	66
 47005  0149A0  6E33               	movwf	i2___flmul@a+3,c
 47006  0149A2  EC9C  F0B6         	call	i2___flmul	;wreg free
 47007  0149A6  C02C  F2C6         	movff	?i2___flmul,_adc_calculations+8
 47008  0149AA  C02D  F2C7         	movff	?i2___flmul+1,_adc_calculations+9
 47009  0149AE  C02E  F2C8         	movff	?i2___flmul+2,_adc_calculations+10
 47010  0149B2  C02F  F2C9         	movff	?i2___flmul+3,_adc_calculations+11
 47011                           
 47012                           ;adc_postprocessing.c: 126: if (adc_calculations.efficiency > 99.0) adc_calculations.eff
      +                          iciency = 99.0;
 47013  0149B6  0E00               	movlw	0
 47014  0149B8  6E01               	movwf	i2___flge@ff1,c
 47015  0149BA  0E00               	movlw	0
 47016  0149BC  6E02               	movwf	i2___flge@ff1+1,c
 47017  0149BE  0EC6               	movlw	198
 47018  0149C0  6E03               	movwf	i2___flge@ff1+2,c
 47019  0149C2  0E42               	movlw	66
 47020  0149C4  6E04               	movwf	i2___flge@ff1+3,c
 47021  0149C6  C2C6  F005         	movff	_adc_calculations+8,i2___flge@ff2
 47022  0149CA  C2C7  F006         	movff	_adc_calculations+9,i2___flge@ff2+1
 47023  0149CE  C2C8  F007         	movff	_adc_calculations+10,i2___flge@ff2+2
 47024  0149D2  C2C9  F008         	movff	_adc_calculations+11,i2___flge@ff2+3
 47025  0149D6  ECC0  F0D2         	call	i2___flge	;wreg free
 47026  0149DA  B0D8               	btfsc	status,0,c
 47027  0149DC  D009               	goto	i2l21126
 47028  0149DE  0E00               	movlw	0
 47029  0149E0  0102               	movlb	2	; () banked
 47030  0149E2  6FC6               	movwf	(_adc_calculations+8)& (0+255),b
 47031  0149E4  0E00               	movlw	0
 47032  0149E6  6FC7               	movwf	(_adc_calculations+9)& (0+255),b
 47033  0149E8  0EC6               	movlw	198
 47034  0149EA  6FC8               	movwf	(_adc_calculations+10)& (0+255),b
 47035  0149EC  0E42               	movlw	66
 47036  0149EE  6FC9               	movwf	(_adc_calculations+11)& (0+255),b
 47037  0149F0                     i2l21126:
 47038                           
 47039                           ;adc_postprocessing.c: 129: TMR2_StartTimer();
 47040  0149F0  EC34  F0E4         	call	_TMR2_StartTimer	;wreg free
 47041  0149F4  0012               	return		;funcret
 47042  0149F6                     __end_of_ADC_PostProcessingHandler:
 47043                           	opt callstack 0
 47044                           
 47045 ;; *************** function i2___xxtofl *****************
 47046 ;; Defined at:
 47047 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
 47048 ;; Parameters:    Size  Location     Type
 47049 ;;  sign            1    wreg     unsigned char 
 47050 ;;  val             4    4[COMRAM] long 
 47051 ;; Auto vars:     Size  Location     Type
 47052 ;;  sign            1   12[COMRAM] unsigned char 
 47053 ;;  __xxtofl        4   14[COMRAM] unsigned long 
 47054 ;;  __xxtofl        1   13[COMRAM] unsigned char 
 47055 ;; Return value:  Size  Location     Type
 47056 ;;                  4    4[COMRAM] unsigned char 
 47057 ;; Registers used:
 47058 ;;		wreg, status,2, status,0
 47059 ;; Tracked objects:
 47060 ;;		On entry : 0/0
 47061 ;;		On exit  : 0/0
 47062 ;;		Unchanged: 0/0
 47063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47064 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47065 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47066 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47067 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47068 ;;Total ram usage:       14 bytes
 47069 ;; Hardware stack levels used:    1
 47070 ;; This function calls:
 47071 ;;		Nothing
 47072 ;; This function is called by:
 47073 ;;		_ADC_PostProcessingHandler
 47074 ;;		i2__doprnt
 47075 ;; This function uses a non-reentrant model
 47076 ;;
 47077                           
 47078                           	psect	text200
 47079  019B98                     __ptext200:
 47080                           	opt callstack 0
 47081  019B98                     i2___xxtofl:
 47082                           	opt callstack 13
 47083                           
 47084                           ;incstack = 0
 47085                           ;i2___xxtofl@sign stored from wreg
 47086  019B98  6E0D               	movwf	i2___xxtofl@sign,c
 47087  019B9A  500D               	movf	i2___xxtofl@sign,w,c
 47088  019B9C  A4D8               	btfss	status,2,c
 47089  019B9E  AE08               	btfss	i2___xxtofl@val+3,7,c
 47090  019BA0  D01A               	goto	i2l3352
 47091  019BA2  C005  F009         	movff	i2___xxtofl@val,??i2___xxtofl
 47092  019BA6  C006  F00A         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 47093  019BAA  C007  F00B         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 47094  019BAE  C008  F00C         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 47095  019BB2  1E09               	comf	??i2___xxtofl,f,c
 47096  019BB4  1E0A               	comf	??i2___xxtofl+1,f,c
 47097  019BB6  1E0B               	comf	??i2___xxtofl+2,f,c
 47098  019BB8  1E0C               	comf	??i2___xxtofl+3,f,c
 47099  019BBA  2A09               	incf	??i2___xxtofl,f,c
 47100  019BBC  0E00               	movlw	0
 47101  019BBE  220A               	addwfc	??i2___xxtofl+1,f,c
 47102  019BC0  220B               	addwfc	??i2___xxtofl+2,f,c
 47103  019BC2  220C               	addwfc	??i2___xxtofl+3,f,c
 47104  019BC4  C009  F00F         	movff	??i2___xxtofl,i2___xxtofl@arg
 47105  019BC8  C00A  F010         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 47106  019BCC  C00B  F011         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 47107  019BD0  C00C  F012         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 47108  019BD4  D008               	goto	i2l19838
 47109  019BD6                     i2l3352:
 47110  019BD6  C005  F00F         	movff	i2___xxtofl@val,i2___xxtofl@arg
 47111  019BDA  C006  F010         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 47112  019BDE  C007  F011         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 47113  019BE2  C008  F012         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 47114  019BE6                     i2l19838:
 47115  019BE6  5005               	movf	i2___xxtofl@val,w,c
 47116  019BE8  1006               	iorwf	i2___xxtofl@val+1,w,c
 47117  019BEA  1007               	iorwf	i2___xxtofl@val+2,w,c
 47118  019BEC  1008               	iorwf	i2___xxtofl@val+3,w,c
 47119  019BEE  A4D8               	btfss	status,2,c
 47120  019BF0  D009               	goto	i2l19844
 47121  019BF2  0E00               	movlw	0
 47122  019BF4  6E05               	movwf	?i2___xxtofl,c
 47123  019BF6  0E00               	movlw	0
 47124  019BF8  6E06               	movwf	?i2___xxtofl+1,c
 47125  019BFA  0E00               	movlw	0
 47126  019BFC  6E07               	movwf	?i2___xxtofl+2,c
 47127  019BFE  0E00               	movlw	0
 47128  019C00  6E08               	movwf	?i2___xxtofl+3,c
 47129  019C02  0012               	return	
 47130  019C04                     i2l19844:
 47131  019C04  0E96               	movlw	150
 47132  019C06  6E0E               	movwf	i2___xxtofl@exp,c
 47133  019C08  D006               	goto	i2l19848
 47134  019C0A                     i2l19846:
 47135  019C0A  2A0E               	incf	i2___xxtofl@exp,f,c
 47136  019C0C  90D8               	bcf	status,0,c
 47137  019C0E  3212               	rrcf	i2___xxtofl@arg+3,f,c
 47138  019C10  3211               	rrcf	i2___xxtofl@arg+2,f,c
 47139  019C12  3210               	rrcf	i2___xxtofl@arg+1,f,c
 47140  019C14  320F               	rrcf	i2___xxtofl@arg,f,c
 47141  019C16                     i2l19848:
 47142  019C16  0E00               	movlw	0
 47143  019C18  140F               	andwf	i2___xxtofl@arg,w,c
 47144  019C1A  6E09               	movwf	??i2___xxtofl& (0+255),c
 47145  019C1C  0E00               	movlw	0
 47146  019C1E  1410               	andwf	i2___xxtofl@arg+1,w,c
 47147  019C20  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 47148  019C22  0E00               	movlw	0
 47149  019C24  1411               	andwf	i2___xxtofl@arg+2,w,c
 47150  019C26  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 47151  019C28  0EFE               	movlw	254
 47152  019C2A  1412               	andwf	i2___xxtofl@arg+3,w,c
 47153  019C2C  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 47154  019C2E  5009               	movf	??i2___xxtofl,w,c
 47155  019C30  100A               	iorwf	??i2___xxtofl+1,w,c
 47156  019C32  100B               	iorwf	??i2___xxtofl+2,w,c
 47157  019C34  100C               	iorwf	??i2___xxtofl+3,w,c
 47158  019C36  B4D8               	btfsc	status,2,c
 47159  019C38  D00D               	goto	i2l3359
 47160  019C3A  D7E7               	goto	i2l19846
 47161  019C3C                     i2l19850:
 47162  019C3C  2A0E               	incf	i2___xxtofl@exp,f,c
 47163  019C3E  0E01               	movlw	1
 47164  019C40  260F               	addwf	i2___xxtofl@arg,f,c
 47165  019C42  0E00               	movlw	0
 47166  019C44  2210               	addwfc	i2___xxtofl@arg+1,f,c
 47167  019C46  2211               	addwfc	i2___xxtofl@arg+2,f,c
 47168  019C48  2212               	addwfc	i2___xxtofl@arg+3,f,c
 47169  019C4A  90D8               	bcf	status,0,c
 47170  019C4C  3212               	rrcf	i2___xxtofl@arg+3,f,c
 47171  019C4E  3211               	rrcf	i2___xxtofl@arg+2,f,c
 47172  019C50  3210               	rrcf	i2___xxtofl@arg+1,f,c
 47173  019C52  320F               	rrcf	i2___xxtofl@arg,f,c
 47174  019C54                     i2l3359:
 47175  019C54  0E00               	movlw	0
 47176  019C56  140F               	andwf	i2___xxtofl@arg,w,c
 47177  019C58  6E09               	movwf	??i2___xxtofl& (0+255),c
 47178  019C5A  0E00               	movlw	0
 47179  019C5C  1410               	andwf	i2___xxtofl@arg+1,w,c
 47180  019C5E  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 47181  019C60  0E00               	movlw	0
 47182  019C62  1411               	andwf	i2___xxtofl@arg+2,w,c
 47183  019C64  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 47184  019C66  0EFF               	movlw	255
 47185  019C68  1412               	andwf	i2___xxtofl@arg+3,w,c
 47186  019C6A  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 47187  019C6C  5009               	movf	??i2___xxtofl,w,c
 47188  019C6E  100A               	iorwf	??i2___xxtofl+1,w,c
 47189  019C70  100B               	iorwf	??i2___xxtofl+2,w,c
 47190  019C72  100C               	iorwf	??i2___xxtofl+3,w,c
 47191  019C74  B4D8               	btfsc	status,2,c
 47192  019C76  D007               	goto	i2l19858
 47193  019C78  D7E1               	goto	i2l19850
 47194  019C7A                     i2l19856:
 47195  019C7A  060E               	decf	i2___xxtofl@exp,f,c
 47196  019C7C  90D8               	bcf	status,0,c
 47197  019C7E  360F               	rlcf	i2___xxtofl@arg,f,c
 47198  019C80  3610               	rlcf	i2___xxtofl@arg+1,f,c
 47199  019C82  3611               	rlcf	i2___xxtofl@arg+2,f,c
 47200  019C84  3612               	rlcf	i2___xxtofl@arg+3,f,c
 47201  019C86                     i2l19858:
 47202  019C86  BE11               	btfsc	i2___xxtofl@arg+2,7,c
 47203  019C88  D003               	goto	i2u2527_40
 47204  019C8A  0E02               	movlw	2
 47205  019C8C  600E               	cpfslt	i2___xxtofl@exp,c
 47206  019C8E  D7F5               	goto	i2l19856
 47207  019C90                     i2u2527_40:
 47208  019C90  A00E               	btfss	i2___xxtofl@exp,0,c
 47209  019C92  9E11               	bcf	i2___xxtofl@arg+2,7,c
 47210  019C94  90D8               	bcf	status,0,c
 47211  019C96  320E               	rrcf	i2___xxtofl@exp,f,c
 47212  019C98  C00E  F009         	movff	i2___xxtofl@exp,??i2___xxtofl
 47213  019C9C  6A0A               	clrf	(??i2___xxtofl+1)& (0+255),c
 47214  019C9E  6A0B               	clrf	(??i2___xxtofl+2)& (0+255),c
 47215  019CA0  6A0C               	clrf	(??i2___xxtofl+3)& (0+255),c
 47216  019CA2  C009  F00C         	movff	??i2___xxtofl,??i2___xxtofl+3
 47217  019CA6  6A0B               	clrf	??i2___xxtofl+2,c
 47218  019CA8  6A0A               	clrf	??i2___xxtofl+1,c
 47219  019CAA  6A09               	clrf	??i2___xxtofl,c
 47220  019CAC  5009               	movf	??i2___xxtofl,w,c
 47221  019CAE  120F               	iorwf	i2___xxtofl@arg,f,c
 47222  019CB0  500A               	movf	??i2___xxtofl+1,w,c
 47223  019CB2  1210               	iorwf	i2___xxtofl@arg+1,f,c
 47224  019CB4  500B               	movf	??i2___xxtofl+2,w,c
 47225  019CB6  1211               	iorwf	i2___xxtofl@arg+2,f,c
 47226  019CB8  500C               	movf	??i2___xxtofl+3,w,c
 47227  019CBA  1212               	iorwf	i2___xxtofl@arg+3,f,c
 47228  019CBC  500D               	movf	i2___xxtofl@sign,w,c
 47229  019CBE  A4D8               	btfss	status,2,c
 47230  019CC0  AE08               	btfss	i2___xxtofl@val+3,7,c
 47231  019CC2  D001               	goto	i2l19874
 47232  019CC4  8E12               	bsf	i2___xxtofl@arg+3,7,c
 47233  019CC6                     i2l19874:
 47234  019CC6  C00F  F005         	movff	i2___xxtofl@arg,?i2___xxtofl
 47235  019CCA  C010  F006         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 47236  019CCE  C011  F007         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 47237  019CD2  C012  F008         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 47238  019CD6  0012               	return		;funcret
 47239  019CD8                     __end_ofi2___xxtofl:
 47240                           	opt callstack 0
 47241                           
 47242 ;; *************** function i2___flsub *****************
 47243 ;; Defined at:
 47244 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 47245 ;; Parameters:    Size  Location     Type
 47246 ;;  b               4    4[BANK0 ] unsigned char 
 47247 ;;  a               4    8[BANK0 ] unsigned char 
 47248 ;; Auto vars:     Size  Location     Type
 47249 ;;		None
 47250 ;; Return value:  Size  Location     Type
 47251 ;;                  4    4[BANK0 ] unsigned char 
 47252 ;; Registers used:
 47253 ;;		wreg, status,2, status,0, cstack
 47254 ;; Tracked objects:
 47255 ;;		On entry : 0/0
 47256 ;;		On exit  : 0/0
 47257 ;;		Unchanged: 0/0
 47258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47259 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47262 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47263 ;;Total ram usage:        8 bytes
 47264 ;; Hardware stack levels used:    1
 47265 ;; Hardware stack levels required when called:    1
 47266 ;; This function calls:
 47267 ;;		i2___fladd
 47268 ;; This function is called by:
 47269 ;;		_ADC_PostProcessingHandler
 47270 ;;		i2__doprnt
 47271 ;; This function uses a non-reentrant model
 47272 ;;
 47273                           
 47274                           	psect	text201
 47275  01BAA4                     __ptext201:
 47276                           	opt callstack 0
 47277  01BAA4                     i2___flsub:
 47278                           	opt callstack 12
 47279                           
 47280                           ;incstack = 0
 47281  01BAA4  0E00               	movlw	0
 47282  01BAA6  0100               	movlb	0	; () banked
 47283  01BAA8  1B68               	xorwf	i2___flsub@a& (0+255),f,b
 47284  01BAAA  0E00               	movlw	0
 47285  01BAAC  1B69               	xorwf	(i2___flsub@a+1)& (0+255),f,b
 47286  01BAAE  0E00               	movlw	0
 47287  01BAB0  1B6A               	xorwf	(i2___flsub@a+2)& (0+255),f,b
 47288  01BAB2  0E80               	movlw	128
 47289  01BAB4  1B6B               	xorwf	(i2___flsub@a+3)& (0+255),f,b
 47290                           
 47291                           ; BSR set to: 0
 47292  01BAB6  C064  F052         	movff	i2___flsub@b,i2___fladd@b
 47293  01BABA  C065  F053         	movff	i2___flsub@b+1,i2___fladd@b+1
 47294  01BABE  C066  F054         	movff	i2___flsub@b+2,i2___fladd@b+2
 47295  01BAC2  C067  F055         	movff	i2___flsub@b+3,i2___fladd@b+3
 47296  01BAC6  C068  F056         	movff	i2___flsub@a,i2___fladd@a
 47297  01BACA  C069  F057         	movff	i2___flsub@a+1,i2___fladd@a+1
 47298  01BACE  C06A  F058         	movff	i2___flsub@a+2,i2___fladd@a+2
 47299  01BAD2  C06B  F059         	movff	i2___flsub@a+3,i2___fladd@a+3
 47300  01BAD6  EC53  F0BB         	call	i2___fladd	;wreg free
 47301  01BADA  C052  F064         	movff	?i2___fladd,?i2___flsub
 47302  01BADE  C053  F065         	movff	?i2___fladd+1,?i2___flsub+1
 47303  01BAE2  C054  F066         	movff	?i2___fladd+2,?i2___flsub+2
 47304  01BAE6  C055  F067         	movff	?i2___fladd+3,?i2___flsub+3
 47305  01BAEA  0012               	return		;funcret
 47306  01BAEC                     __end_ofi2___flsub:
 47307                           	opt callstack 0
 47308                           
 47309 ;; *************** function i2___fladd *****************
 47310 ;; Defined at:
 47311 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 47312 ;; Parameters:    Size  Location     Type
 47313 ;;  b               4   81[COMRAM] unsigned char 
 47314 ;;  a               4   85[COMRAM] unsigned char 
 47315 ;; Auto vars:     Size  Location     Type
 47316 ;;  __fladd         1    3[BANK0 ] unsigned char 
 47317 ;;  __fladd         1    2[BANK0 ] unsigned char 
 47318 ;;  __fladd         1    1[BANK0 ] unsigned char 
 47319 ;;  __fladd         1    0[BANK0 ] unsigned char 
 47320 ;; Return value:  Size  Location     Type
 47321 ;;                  4   81[COMRAM] unsigned char 
 47322 ;; Registers used:
 47323 ;;		wreg, status,2, status,0
 47324 ;; Tracked objects:
 47325 ;;		On entry : 0/0
 47326 ;;		On exit  : 0/0
 47327 ;;		Unchanged: 0/0
 47328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47329 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47330 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47331 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47332 ;;      Totals:        12       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47333 ;;Total ram usage:       16 bytes
 47334 ;; Hardware stack levels used:    1
 47335 ;; This function calls:
 47336 ;;		Nothing
 47337 ;; This function is called by:
 47338 ;;		_ADC_PostProcessingHandler
 47339 ;;		_heartbeatTimerHandler
 47340 ;;		i2__doprnt
 47341 ;;		i2___flsub
 47342 ;; This function uses a non-reentrant model
 47343 ;;
 47344                           
 47345                           	psect	text202
 47346  0176A6                     __ptext202:
 47347                           	opt callstack 0
 47348  0176A6                     i2___fladd:
 47349                           	opt callstack 14
 47350                           
 47351                           ;incstack = 0
 47352  0176A6  5055               	movf	i2___fladd@b+3,w,c
 47353  0176A8  0B80               	andlw	128
 47354  0176AA  0100               	movlb	0	; () banked
 47355  0176AC  6F60               	movwf	i2___fladd@signs& (0+255),b
 47356  0176AE  5055               	movf	i2___fladd@b+3,w,c
 47357  0176B0  2455               	addwf	i2___fladd@b+3,w,c
 47358  0176B2  6F62               	movwf	i2___fladd@bexp& (0+255),b
 47359                           
 47360                           ; BSR set to: 0
 47361  0176B4  BE54               	btfsc	i2___fladd@b+2,7,c
 47362                           
 47363                           ; BSR set to: 0
 47364  0176B6  8162               	bsf	i2___fladd@bexp& (0+255),0,b
 47365                           
 47366                           ; BSR set to: 0
 47367  0176B8  5162               	movf	i2___fladd@bexp& (0+255),w,b
 47368  0176BA  B4D8               	btfsc	status,2,c
 47369  0176BC  D00D               	goto	i2l18912
 47370                           
 47371                           ; BSR set to: 0
 47372  0176BE  2962               	incf	i2___fladd@bexp& (0+255),w,b
 47373  0176C0  A4D8               	btfss	status,2,c
 47374  0176C2  D008               	goto	i2l18908
 47375                           
 47376                           ; BSR set to: 0
 47377  0176C4  0E00               	movlw	0
 47378  0176C6  6E52               	movwf	i2___fladd@b,c
 47379  0176C8  0E00               	movlw	0
 47380  0176CA  6E53               	movwf	i2___fladd@b+1,c
 47381  0176CC  0E00               	movlw	0
 47382  0176CE  6E54               	movwf	i2___fladd@b+2,c
 47383  0176D0  0E00               	movlw	0
 47384  0176D2  6E55               	movwf	i2___fladd@b+3,c
 47385  0176D4                     i2l18908:
 47386                           
 47387                           ; BSR set to: 0
 47388  0176D4  8E54               	bsf	i2___fladd@b+2,7,c
 47389  0176D6  D006               	goto	L51
 47390  0176D8                     i2l18912:
 47391                           
 47392                           ; BSR set to: 0
 47393  0176D8  0E00               	movlw	0
 47394  0176DA  6E52               	movwf	i2___fladd@b,c
 47395  0176DC  0E00               	movlw	0
 47396  0176DE  6E53               	movwf	i2___fladd@b+1,c
 47397  0176E0  0E00               	movlw	0
 47398  0176E2  6E54               	movwf	i2___fladd@b+2,c
 47399  0176E4                     L51:
 47400  0176E4  0E00               	movlw	0
 47401  0176E6  6E55               	movwf	i2___fladd@b+3,c
 47402                           
 47403                           ; BSR set to: 0
 47404  0176E8  5059               	movf	i2___fladd@a+3,w,c
 47405  0176EA  0B80               	andlw	128
 47406  0176EC  6F61               	movwf	i2___fladd@aexp& (0+255),b
 47407                           
 47408                           ; BSR set to: 0
 47409  0176EE  5160               	movf	i2___fladd@signs& (0+255),w,b
 47410  0176F0  1961               	xorwf	i2___fladd@aexp& (0+255),w,b
 47411  0176F2  A4D8               	btfss	status,2,c
 47412                           
 47413                           ; BSR set to: 0
 47414  0176F4  8D60               	bsf	i2___fladd@signs& (0+255),6,b
 47415                           
 47416                           ; BSR set to: 0
 47417  0176F6  5059               	movf	i2___fladd@a+3,w,c
 47418  0176F8  2459               	addwf	i2___fladd@a+3,w,c
 47419  0176FA  6F61               	movwf	i2___fladd@aexp& (0+255),b
 47420                           
 47421                           ; BSR set to: 0
 47422  0176FC  BE58               	btfsc	i2___fladd@a+2,7,c
 47423                           
 47424                           ; BSR set to: 0
 47425  0176FE  8161               	bsf	i2___fladd@aexp& (0+255),0,b
 47426                           
 47427                           ; BSR set to: 0
 47428  017700  5161               	movf	i2___fladd@aexp& (0+255),w,b
 47429  017702  B4D8               	btfsc	status,2,c
 47430  017704  D00D               	goto	i2l18936
 47431                           
 47432                           ; BSR set to: 0
 47433  017706  2961               	incf	i2___fladd@aexp& (0+255),w,b
 47434  017708  A4D8               	btfss	status,2,c
 47435  01770A  D008               	goto	i2l18932
 47436                           
 47437                           ; BSR set to: 0
 47438  01770C  0E00               	movlw	0
 47439  01770E  6E56               	movwf	i2___fladd@a,c
 47440  017710  0E00               	movlw	0
 47441  017712  6E57               	movwf	i2___fladd@a+1,c
 47442  017714  0E00               	movlw	0
 47443  017716  6E58               	movwf	i2___fladd@a+2,c
 47444  017718  0E00               	movlw	0
 47445  01771A  6E59               	movwf	i2___fladd@a+3,c
 47446  01771C                     i2l18932:
 47447                           
 47448                           ; BSR set to: 0
 47449  01771C  8E58               	bsf	i2___fladd@a+2,7,c
 47450  01771E  D006               	goto	L52
 47451  017720                     i2l18936:
 47452                           
 47453                           ; BSR set to: 0
 47454  017720  0E00               	movlw	0
 47455  017722  6E56               	movwf	i2___fladd@a,c
 47456  017724  0E00               	movlw	0
 47457  017726  6E57               	movwf	i2___fladd@a+1,c
 47458  017728  0E00               	movlw	0
 47459  01772A  6E58               	movwf	i2___fladd@a+2,c
 47460  01772C                     L52:
 47461  01772C  0E00               	movlw	0
 47462  01772E  6E59               	movwf	i2___fladd@a+3,c
 47463                           
 47464                           ; BSR set to: 0
 47465  017730  5162               	movf	i2___fladd@bexp& (0+255),w,b
 47466  017732  5D61               	subwf	i2___fladd@aexp& (0+255),w,b
 47467  017734  B0D8               	btfsc	status,0,c
 47468  017736  D022               	goto	i2l18974
 47469                           
 47470                           ; BSR set to: 0
 47471  017738  AD60               	btfss	i2___fladd@signs& (0+255),6,b
 47472  01773A  D002               	goto	i2l18944
 47473                           
 47474                           ; BSR set to: 0
 47475  01773C  0E80               	movlw	128
 47476  01773E  1B60               	xorwf	i2___fladd@signs& (0+255),f,b
 47477  017740                     i2l18944:
 47478                           
 47479                           ; BSR set to: 0
 47480  017740  C062  F063         	movff	i2___fladd@bexp,i2___fladd@grs
 47481                           
 47482                           ; BSR set to: 0
 47483  017744  C061  F062         	movff	i2___fladd@aexp,i2___fladd@bexp
 47484                           
 47485                           ; BSR set to: 0
 47486  017748  C063  F061         	movff	i2___fladd@grs,i2___fladd@aexp
 47487                           
 47488                           ; BSR set to: 0
 47489  01774C  C052  F063         	movff	i2___fladd@b,i2___fladd@grs
 47490                           
 47491                           ; BSR set to: 0
 47492  017750  C056  F052         	movff	i2___fladd@a,i2___fladd@b
 47493                           
 47494                           ; BSR set to: 0
 47495  017754  C063  F056         	movff	i2___fladd@grs,i2___fladd@a
 47496                           
 47497                           ; BSR set to: 0
 47498  017758  C053  F063         	movff	i2___fladd@b+1,i2___fladd@grs
 47499                           
 47500                           ; BSR set to: 0
 47501  01775C  C057  F053         	movff	i2___fladd@a+1,i2___fladd@b+1
 47502                           
 47503                           ; BSR set to: 0
 47504  017760  C063  F057         	movff	i2___fladd@grs,i2___fladd@a+1
 47505                           
 47506                           ; BSR set to: 0
 47507  017764  C054  F063         	movff	i2___fladd@b+2,i2___fladd@grs
 47508                           
 47509                           ; BSR set to: 0
 47510  017768  C058  F054         	movff	i2___fladd@a+2,i2___fladd@b+2
 47511                           
 47512                           ; BSR set to: 0
 47513  01776C  C063  F058         	movff	i2___fladd@grs,i2___fladd@a+2
 47514                           
 47515                           ; BSR set to: 0
 47516  017770  C055  F063         	movff	i2___fladd@b+3,i2___fladd@grs
 47517                           
 47518                           ; BSR set to: 0
 47519  017774  C059  F055         	movff	i2___fladd@a+3,i2___fladd@b+3
 47520                           
 47521                           ; BSR set to: 0
 47522  017778  C063  F059         	movff	i2___fladd@grs,i2___fladd@a+3
 47523  01777C                     i2l18974:
 47524                           
 47525                           ; BSR set to: 0
 47526  01777C  0E00               	movlw	0
 47527  01777E  6F63               	movwf	i2___fladd@grs& (0+255),b
 47528                           
 47529                           ; BSR set to: 0
 47530  017780  5162               	movf	i2___fladd@bexp& (0+255),w,b
 47531  017782  C061  F05A         	movff	i2___fladd@aexp,??i2___fladd
 47532  017786  6A5B               	clrf	(??i2___fladd+1)& (0+255),c
 47533  017788  5E5A               	subwf	??i2___fladd,f,c
 47534  01778A  0E00               	movlw	0
 47535  01778C  5A5B               	subwfb	??i2___fladd+1,f,c
 47536  01778E  BE5B               	btfsc	??i2___fladd+1,7,c
 47537  017790  D02C               	goto	i2l3226
 47538  017792  505B               	movf	??i2___fladd+1,w,c
 47539  017794  E104               	bnz	i2u2394_40
 47540  017796  0E1A               	movlw	26
 47541  017798  5C5A               	subwf	??i2___fladd,w,c
 47542  01779A  A0D8               	btfss	status,0,c
 47543  01779C  D026               	goto	i2l3226
 47544  01779E                     i2u2394_40:
 47545                           
 47546                           ; BSR set to: 0
 47547  01779E  5052               	movf	i2___fladd@b,w,c
 47548  0177A0  1053               	iorwf	i2___fladd@b+1,w,c
 47549  0177A2  1054               	iorwf	i2___fladd@b+2,w,c
 47550  0177A4  1055               	iorwf	i2___fladd@b+3,w,c
 47551  0177A6  B4D8               	btfsc	status,2,c
 47552  0177A8  D002               	goto	i2u2395_40
 47553  0177AA  0E01               	movlw	1
 47554  0177AC  D001               	goto	i2u2396_40
 47555  0177AE                     i2u2395_40:
 47556  0177AE  0E00               	movlw	0
 47557  0177B0                     i2u2396_40:
 47558  0177B0  6F63               	movwf	i2___fladd@grs& (0+255),b
 47559                           
 47560                           ; BSR set to: 0
 47561  0177B2  0E00               	movlw	0
 47562  0177B4  6E52               	movwf	i2___fladd@b,c
 47563  0177B6  0E00               	movlw	0
 47564  0177B8  6E53               	movwf	i2___fladd@b+1,c
 47565  0177BA  0E00               	movlw	0
 47566  0177BC  6E54               	movwf	i2___fladd@b+2,c
 47567  0177BE  0E00               	movlw	0
 47568  0177C0  6E55               	movwf	i2___fladd@b+3,c
 47569                           
 47570                           ; BSR set to: 0
 47571  0177C2  C061  F062         	movff	i2___fladd@aexp,i2___fladd@bexp
 47572  0177C6  D015               	goto	i2u2399_40
 47573  0177C8                     i2l3227:
 47574                           
 47575                           ; BSR set to: 0
 47576  0177C8  A163               	btfss	i2___fladd@grs& (0+255),0,b
 47577  0177CA  D005               	goto	i2l18986
 47578                           
 47579                           ; BSR set to: 0
 47580  0177CC  90D8               	bcf	status,0,c
 47581  0177CE  3163               	rrcf	i2___fladd@grs& (0+255),w,b
 47582  0177D0  0901               	iorlw	1
 47583  0177D2  6F63               	movwf	i2___fladd@grs& (0+255),b
 47584  0177D4  D002               	goto	i2l18988
 47585  0177D6                     i2l18986:
 47586                           
 47587                           ; BSR set to: 0
 47588  0177D6  90D8               	bcf	status,0,c
 47589  0177D8  3363               	rrcf	i2___fladd@grs& (0+255),f,b
 47590  0177DA                     i2l18988:
 47591                           
 47592                           ; BSR set to: 0
 47593  0177DA  B052               	btfsc	i2___fladd@b,0,c
 47594                           
 47595                           ; BSR set to: 0
 47596  0177DC  8F63               	bsf	i2___fladd@grs& (0+255),7,b
 47597                           
 47598                           ; BSR set to: 0
 47599  0177DE  3455               	rlcf	i2___fladd@b+3,w,c
 47600  0177E0  3255               	rrcf	i2___fladd@b+3,f,c
 47601  0177E2  3254               	rrcf	i2___fladd@b+2,f,c
 47602  0177E4  3253               	rrcf	i2___fladd@b+1,f,c
 47603  0177E6  3252               	rrcf	i2___fladd@b,f,c
 47604                           
 47605                           ; BSR set to: 0
 47606  0177E8  2B62               	incf	i2___fladd@bexp& (0+255),f,b
 47607  0177EA                     i2l3226:
 47608                           
 47609                           ; BSR set to: 0
 47610  0177EA  5161               	movf	i2___fladd@aexp& (0+255),w,b
 47611  0177EC  5D62               	subwf	i2___fladd@bexp& (0+255),w,b
 47612  0177EE  A0D8               	btfss	status,0,c
 47613  0177F0  D7EB               	goto	i2l3227
 47614  0177F2                     i2u2399_40:
 47615                           
 47616                           ; BSR set to: 0
 47617  0177F2  BD60               	btfsc	i2___fladd@signs& (0+255),6,b
 47618  0177F4  D028               	goto	i2l19020
 47619                           
 47620                           ; BSR set to: 0
 47621  0177F6  5162               	movf	i2___fladd@bexp& (0+255),w,b
 47622  0177F8  A4D8               	btfss	status,2,c
 47623  0177FA  D009               	goto	i2l19002
 47624                           
 47625                           ; BSR set to: 0
 47626  0177FC  0E00               	movlw	0
 47627  0177FE  6E52               	movwf	?i2___fladd,c
 47628  017800  0E00               	movlw	0
 47629  017802  6E53               	movwf	?i2___fladd+1,c
 47630  017804  0E00               	movlw	0
 47631  017806  6E54               	movwf	?i2___fladd+2,c
 47632  017808  0E00               	movlw	0
 47633  01780A  6E55               	movwf	?i2___fladd+3,c
 47634  01780C  0012               	return	
 47635  01780E                     i2l19002:
 47636                           
 47637                           ; BSR set to: 0
 47638  01780E  5056               	movf	i2___fladd@a,w,c
 47639  017810  2652               	addwf	i2___fladd@b,f,c
 47640  017812  5057               	movf	i2___fladd@a+1,w,c
 47641  017814  2253               	addwfc	i2___fladd@b+1,f,c
 47642  017816  5058               	movf	i2___fladd@a+2,w,c
 47643  017818  2254               	addwfc	i2___fladd@b+2,f,c
 47644  01781A  5059               	movf	i2___fladd@a+3,w,c
 47645  01781C  2255               	addwfc	i2___fladd@b+3,f,c
 47646                           
 47647                           ; BSR set to: 0
 47648  01781E  A055               	btfss	i2___fladd@b+3,0,c
 47649  017820  D071               	goto	i2u2412_40
 47650                           
 47651                           ; BSR set to: 0
 47652  017822  A163               	btfss	i2___fladd@grs& (0+255),0,b
 47653  017824  D005               	goto	i2l19010
 47654                           
 47655                           ; BSR set to: 0
 47656  017826  90D8               	bcf	status,0,c
 47657  017828  3163               	rrcf	i2___fladd@grs& (0+255),w,b
 47658  01782A  0901               	iorlw	1
 47659  01782C  6F63               	movwf	i2___fladd@grs& (0+255),b
 47660  01782E  D002               	goto	i2l19012
 47661  017830                     i2l19010:
 47662                           
 47663                           ; BSR set to: 0
 47664  017830  90D8               	bcf	status,0,c
 47665  017832  3363               	rrcf	i2___fladd@grs& (0+255),f,b
 47666  017834                     i2l19012:
 47667                           
 47668                           ; BSR set to: 0
 47669  017834  B052               	btfsc	i2___fladd@b,0,c
 47670                           
 47671                           ; BSR set to: 0
 47672  017836  8F63               	bsf	i2___fladd@grs& (0+255),7,b
 47673                           
 47674                           ; BSR set to: 0
 47675  017838  3455               	rlcf	i2___fladd@b+3,w,c
 47676  01783A  3255               	rrcf	i2___fladd@b+3,f,c
 47677  01783C  3254               	rrcf	i2___fladd@b+2,f,c
 47678  01783E  3253               	rrcf	i2___fladd@b+1,f,c
 47679  017840  3252               	rrcf	i2___fladd@b,f,c
 47680                           
 47681                           ; BSR set to: 0
 47682  017842  2B62               	incf	i2___fladd@bexp& (0+255),f,b
 47683  017844  D05F               	goto	i2u2412_40
 47684  017846                     i2l19020:
 47685                           
 47686                           ; BSR set to: 0
 47687  017846  5056               	movf	i2___fladd@a,w,c
 47688  017848  5C52               	subwf	i2___fladd@b,w,c
 47689  01784A  5057               	movf	i2___fladd@a+1,w,c
 47690  01784C  5853               	subwfb	i2___fladd@b+1,w,c
 47691  01784E  5058               	movf	i2___fladd@a+2,w,c
 47692  017850  5854               	subwfb	i2___fladd@b+2,w,c
 47693  017852  5055               	movf	i2___fladd@b+3,w,c
 47694  017854  0A80               	xorlw	128
 47695  017856  6E5A               	movwf	??i2___fladd& (0+255),c
 47696  017858  5059               	movf	i2___fladd@a+3,w,c
 47697  01785A  0A80               	xorlw	128
 47698  01785C  585A               	subwfb	??i2___fladd& (0+255),w,c
 47699  01785E  B0D8               	btfsc	status,0,c
 47700  017860  D025               	goto	i2l19030
 47701                           
 47702                           ; BSR set to: 0
 47703  017862  5052               	movf	i2___fladd@b,w,c
 47704  017864  5C56               	subwf	i2___fladd@a,w,c
 47705  017866  6E5A               	movwf	??i2___fladd& (0+255),c
 47706  017868  5053               	movf	i2___fladd@b+1,w,c
 47707  01786A  5857               	subwfb	i2___fladd@a+1,w,c
 47708  01786C  6E5B               	movwf	(??i2___fladd+1)& (0+255),c
 47709  01786E  5054               	movf	i2___fladd@b+2,w,c
 47710  017870  5858               	subwfb	i2___fladd@a+2,w,c
 47711  017872  6E5C               	movwf	(??i2___fladd+2)& (0+255),c
 47712  017874  5055               	movf	i2___fladd@b+3,w,c
 47713  017876  5859               	subwfb	i2___fladd@a+3,w,c
 47714  017878  6E5D               	movwf	(??i2___fladd+3)& (0+255),c
 47715  01787A  0EFF               	movlw	255
 47716  01787C  245A               	addwf	??i2___fladd,w,c
 47717  01787E  6E52               	movwf	i2___fladd@b,c
 47718  017880  0EFF               	movlw	255
 47719  017882  205B               	addwfc	??i2___fladd+1,w,c
 47720  017884  6E53               	movwf	i2___fladd@b+1,c
 47721  017886  0EFF               	movlw	255
 47722  017888  205C               	addwfc	??i2___fladd+2,w,c
 47723  01788A  6E54               	movwf	i2___fladd@b+2,c
 47724  01788C  0EFF               	movlw	255
 47725  01788E  205D               	addwfc	??i2___fladd+3,w,c
 47726  017890  6E55               	movwf	i2___fladd@b+3,c
 47727  017892  0E80               	movlw	128
 47728  017894  1B60               	xorwf	i2___fladd@signs& (0+255),f,b
 47729                           
 47730                           ; BSR set to: 0
 47731  017896  6D63               	negf	i2___fladd@grs& (0+255),b
 47732                           
 47733                           ; BSR set to: 0
 47734  017898  5163               	movf	i2___fladd@grs& (0+255),w,b
 47735  01789A  A4D8               	btfss	status,2,c
 47736  01789C  D00F               	goto	i2l3242
 47737                           
 47738                           ; BSR set to: 0
 47739  01789E  0E01               	movlw	1
 47740  0178A0  2652               	addwf	i2___fladd@b,f,c
 47741  0178A2  0E00               	movlw	0
 47742  0178A4  2253               	addwfc	i2___fladd@b+1,f,c
 47743  0178A6  2254               	addwfc	i2___fladd@b+2,f,c
 47744  0178A8  2255               	addwfc	i2___fladd@b+3,f,c
 47745  0178AA  D008               	goto	i2l3242
 47746  0178AC                     i2l19030:
 47747                           
 47748                           ; BSR set to: 0
 47749  0178AC  5056               	movf	i2___fladd@a,w,c
 47750  0178AE  5E52               	subwf	i2___fladd@b,f,c
 47751  0178B0  5057               	movf	i2___fladd@a+1,w,c
 47752  0178B2  5A53               	subwfb	i2___fladd@b+1,f,c
 47753  0178B4  5058               	movf	i2___fladd@a+2,w,c
 47754  0178B6  5A54               	subwfb	i2___fladd@b+2,f,c
 47755  0178B8  5059               	movf	i2___fladd@a+3,w,c
 47756  0178BA  5A55               	subwfb	i2___fladd@b+3,f,c
 47757  0178BC                     i2l3242:
 47758                           
 47759                           ; BSR set to: 0
 47760  0178BC  5052               	movf	i2___fladd@b,w,c
 47761  0178BE  1053               	iorwf	i2___fladd@b+1,w,c
 47762  0178C0  1054               	iorwf	i2___fladd@b+2,w,c
 47763  0178C2  1055               	iorwf	i2___fladd@b+3,w,c
 47764  0178C4  A4D8               	btfss	status,2,c
 47765  0178C6  D01C               	goto	i2l19054
 47766                           
 47767                           ; BSR set to: 0
 47768  0178C8  5163               	movf	i2___fladd@grs& (0+255),w,b
 47769  0178CA  A4D8               	btfss	status,2,c
 47770  0178CC  D019               	goto	i2l19054
 47771                           
 47772                           ; BSR set to: 0
 47773  0178CE  0E00               	movlw	0
 47774  0178D0  6E52               	movwf	?i2___fladd,c
 47775  0178D2  0E00               	movlw	0
 47776  0178D4  6E53               	movwf	?i2___fladd+1,c
 47777  0178D6  0E00               	movlw	0
 47778  0178D8  6E54               	movwf	?i2___fladd+2,c
 47779  0178DA  0E00               	movlw	0
 47780  0178DC  6E55               	movwf	?i2___fladd+3,c
 47781  0178DE  0012               	return	
 47782  0178E0                     i2l19038:
 47783                           
 47784                           ; BSR set to: 0
 47785  0178E0  90D8               	bcf	status,0,c
 47786  0178E2  3652               	rlcf	i2___fladd@b,f,c
 47787  0178E4  3653               	rlcf	i2___fladd@b+1,f,c
 47788  0178E6  3654               	rlcf	i2___fladd@b+2,f,c
 47789  0178E8  3655               	rlcf	i2___fladd@b+3,f,c
 47790                           
 47791                           ; BSR set to: 0
 47792  0178EA  BF63               	btfsc	i2___fladd@grs& (0+255),7,b
 47793                           
 47794                           ; BSR set to: 0
 47795  0178EC  8052               	bsf	i2___fladd@b,0,c
 47796                           
 47797                           ; BSR set to: 0
 47798  0178EE  A163               	btfss	i2___fladd@grs& (0+255),0,b
 47799  0178F0  D002               	goto	i2l19048
 47800                           
 47801                           ; BSR set to: 0
 47802  0178F2  80D8               	bsf	status,0,c
 47803  0178F4  D001               	goto	L53
 47804  0178F6                     i2l19048:
 47805                           
 47806                           ; BSR set to: 0
 47807  0178F6  90D8               	bcf	status,0,c
 47808  0178F8                     L53:
 47809  0178F8  3763               	rlcf	i2___fladd@grs& (0+255),f,b
 47810                           
 47811                           ; BSR set to: 0
 47812  0178FA  5162               	movf	i2___fladd@bexp& (0+255),w,b
 47813  0178FC  A4D8               	btfss	status,2,c
 47814                           
 47815                           ; BSR set to: 0
 47816  0178FE  0762               	decf	i2___fladd@bexp& (0+255),f,b
 47817  017900                     i2l19054:
 47818                           
 47819                           ; BSR set to: 0
 47820  017900  AE54               	btfss	i2___fladd@b+2,7,c
 47821  017902  D7EE               	goto	i2l19038
 47822  017904                     i2u2412_40:
 47823                           
 47824                           ; BSR set to: 0
 47825  017904  0E00               	movlw	0
 47826  017906  6F61               	movwf	i2___fladd@aexp& (0+255),b
 47827                           
 47828                           ; BSR set to: 0
 47829  017908  AF63               	btfss	i2___fladd@grs& (0+255),7,b
 47830  01790A  D00B               	goto	i2l3251
 47831                           
 47832                           ; BSR set to: 0
 47833  01790C  C063  F05A         	movff	i2___fladd@grs,??i2___fladd
 47834  017910  0E7F               	movlw	127
 47835  017912  165A               	andwf	??i2___fladd,f,c
 47836  017914  B4D8               	btfsc	status,2,c
 47837  017916  D003               	goto	i2l3252
 47838  017918                     i2u2414_40:
 47839                           
 47840                           ; BSR set to: 0
 47841  017918  0E01               	movlw	1
 47842  01791A  6F61               	movwf	i2___fladd@aexp& (0+255),b
 47843  01791C  D002               	goto	i2l3251
 47844  01791E                     i2l3252:
 47845                           
 47846                           ; BSR set to: 0
 47847  01791E  B052               	btfsc	i2___fladd@b,0,c
 47848  017920  D7FB               	goto	i2u2414_40
 47849  017922                     i2l3251:
 47850                           
 47851                           ; BSR set to: 0
 47852  017922  5161               	movf	i2___fladd@aexp& (0+255),w,b
 47853  017924  B4D8               	btfsc	status,2,c
 47854  017926  D020               	goto	i2l19074
 47855                           
 47856                           ; BSR set to: 0
 47857  017928  0E01               	movlw	1
 47858  01792A  2652               	addwf	i2___fladd@b,f,c
 47859  01792C  0E00               	movlw	0
 47860  01792E  2253               	addwfc	i2___fladd@b+1,f,c
 47861  017930  2254               	addwfc	i2___fladd@b+2,f,c
 47862  017932  2255               	addwfc	i2___fladd@b+3,f,c
 47863                           
 47864                           ; BSR set to: 0
 47865  017934  A055               	btfss	i2___fladd@b+3,0,c
 47866  017936  D018               	goto	i2l19074
 47867                           
 47868                           ; BSR set to: 0
 47869  017938  C052  F05A         	movff	i2___fladd@b,??i2___fladd
 47870  01793C  C053  F05B         	movff	i2___fladd@b+1,??i2___fladd+1
 47871  017940  C054  F05C         	movff	i2___fladd@b+2,??i2___fladd+2
 47872  017944  C055  F05D         	movff	i2___fladd@b+3,??i2___fladd+3
 47873  017948  345D               	rlcf	??i2___fladd+3,w,c
 47874  01794A  325D               	rrcf	??i2___fladd+3,f,c
 47875  01794C  325C               	rrcf	??i2___fladd+2,f,c
 47876  01794E  325B               	rrcf	??i2___fladd+1,f,c
 47877  017950  325A               	rrcf	??i2___fladd,f,c
 47878  017952  C05A  F052         	movff	??i2___fladd,i2___fladd@b
 47879  017956  C05B  F053         	movff	??i2___fladd+1,i2___fladd@b+1
 47880  01795A  C05C  F054         	movff	??i2___fladd+2,i2___fladd@b+2
 47881  01795E  C05D  F055         	movff	??i2___fladd+3,i2___fladd@b+3
 47882  017962  2962               	incf	i2___fladd@bexp& (0+255),w,b
 47883  017964  A4D8               	btfss	status,2,c
 47884                           
 47885                           ; BSR set to: 0
 47886  017966  2B62               	incf	i2___fladd@bexp& (0+255),f,b
 47887  017968                     i2l19074:
 47888                           
 47889                           ; BSR set to: 0
 47890  017968  2962               	incf	i2___fladd@bexp& (0+255),w,b
 47891  01796A  B4D8               	btfsc	status,2,c
 47892  01796C  D003               	goto	i2u2420_40
 47893                           
 47894                           ; BSR set to: 0
 47895  01796E  5162               	movf	i2___fladd@bexp& (0+255),w,b
 47896  017970  A4D8               	btfss	status,2,c
 47897  017972  D00D               	goto	i2l19082
 47898  017974                     i2u2420_40:
 47899                           
 47900                           ; BSR set to: 0
 47901  017974  0E00               	movlw	0
 47902  017976  6E52               	movwf	i2___fladd@b,c
 47903  017978  0E00               	movlw	0
 47904  01797A  6E53               	movwf	i2___fladd@b+1,c
 47905  01797C  0E00               	movlw	0
 47906  01797E  6E54               	movwf	i2___fladd@b+2,c
 47907  017980  0E00               	movlw	0
 47908  017982  6E55               	movwf	i2___fladd@b+3,c
 47909  017984  5162               	movf	i2___fladd@bexp& (0+255),w,b
 47910  017986  A4D8               	btfss	status,2,c
 47911  017988  D002               	goto	i2l19082
 47912                           
 47913                           ; BSR set to: 0
 47914  01798A  0E00               	movlw	0
 47915  01798C  6F60               	movwf	i2___fladd@signs& (0+255),b
 47916  01798E                     i2l19082:
 47917                           
 47918                           ; BSR set to: 0
 47919  01798E  A162               	btfss	i2___fladd@bexp& (0+255),0,b
 47920  017990  D002               	goto	i2l19086
 47921                           
 47922                           ; BSR set to: 0
 47923  017992  8E54               	bsf	i2___fladd@b+2,7,c
 47924  017994  D001               	goto	i2l19088
 47925  017996                     i2l19086:
 47926                           
 47927                           ; BSR set to: 0
 47928  017996  9E54               	bcf	i2___fladd@b+2,7,c
 47929  017998                     i2l19088:
 47930                           
 47931                           ; BSR set to: 0
 47932  017998  90D8               	bcf	status,0,c
 47933  01799A  3162               	rrcf	i2___fladd@bexp& (0+255),w,b
 47934  01799C  6E55               	movwf	i2___fladd@b+3,c
 47935                           
 47936                           ; BSR set to: 0
 47937  01799E  BF60               	btfsc	i2___fladd@signs& (0+255),7,b
 47938                           
 47939                           ; BSR set to: 0
 47940  0179A0  8E55               	bsf	i2___fladd@b+3,7,c
 47941                           
 47942                           ; BSR set to: 0
 47943  0179A2  C052  F052         	movff	i2___fladd@b,?i2___fladd
 47944  0179A6  C053  F053         	movff	i2___fladd@b+1,?i2___fladd+1
 47945  0179AA  C054  F054         	movff	i2___fladd@b+2,?i2___fladd+2
 47946  0179AE  C055  F055         	movff	i2___fladd@b+3,?i2___fladd+3
 47947                           
 47948                           ; BSR set to: 0
 47949  0179B2  0012               	return		;funcret
 47950  0179B4                     __end_ofi2___fladd:
 47951                           	opt callstack 0
 47952                           
 47953 ;; *************** function i2___flmul *****************
 47954 ;; Defined at:
 47955 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
 47956 ;; Parameters:    Size  Location     Type
 47957 ;;  b               4   43[COMRAM] unsigned char 
 47958 ;;  a               4   47[COMRAM] unsigned char 
 47959 ;; Auto vars:     Size  Location     Type
 47960 ;;  __flmul         4   62[COMRAM] struct .
 47961 ;;  __flmul         4   57[COMRAM] unsigned long 
 47962 ;;  __flmul         2   66[COMRAM] struct .
 47963 ;;  __flmul         1   61[COMRAM] unsigned char 
 47964 ;;  __flmul         1   56[COMRAM] unsigned char 
 47965 ;;  __flmul         1   55[COMRAM] unsigned char 
 47966 ;; Return value:  Size  Location     Type
 47967 ;;                  4   43[COMRAM] unsigned char 
 47968 ;; Registers used:
 47969 ;;		wreg, status,2, status,0, prodl, prodh
 47970 ;; Tracked objects:
 47971 ;;		On entry : 0/0
 47972 ;;		On exit  : 0/0
 47973 ;;		Unchanged: 0/0
 47974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47975 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47976 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47977 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47978 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47979 ;;Total ram usage:       25 bytes
 47980 ;; Hardware stack levels used:    1
 47981 ;; This function calls:
 47982 ;;		Nothing
 47983 ;; This function is called by:
 47984 ;;		_ADC_PostProcessingHandler
 47985 ;;		i2_fround
 47986 ;;		i2_scale
 47987 ;;		i2__doprnt
 47988 ;; This function uses a non-reentrant model
 47989 ;;
 47990                           
 47991                           	psect	text203
 47992  016D38                     __ptext203:
 47993                           	opt callstack 0
 47994  016D38                     i2___flmul:
 47995                           	opt callstack 12
 47996                           
 47997                           ; BSR set to: 0
 47998                           ;incstack = 0
 47999  016D38  502F               	movf	i2___flmul@b+3,w,c
 48000  016D3A  0B80               	andlw	128
 48001  016D3C  6E38               	movwf	i2___flmul@sign,c
 48002  016D3E  502F               	movf	i2___flmul@b+3,w,c
 48003  016D40  242F               	addwf	i2___flmul@b+3,w,c
 48004  016D42  6E3E               	movwf	i2___flmul@bexp,c
 48005  016D44  BE2E               	btfsc	i2___flmul@b+2,7,c
 48006  016D46  803E               	bsf	i2___flmul@bexp,0,c
 48007  016D48  503E               	movf	i2___flmul@bexp,w,c
 48008  016D4A  B4D8               	btfsc	status,2,c
 48009  016D4C  D00D               	goto	i2l19112
 48010  016D4E  283E               	incf	i2___flmul@bexp,w,c
 48011  016D50  A4D8               	btfss	status,2,c
 48012  016D52  D008               	goto	i2l19110
 48013  016D54  0E00               	movlw	0
 48014  016D56  6E2C               	movwf	i2___flmul@b,c
 48015  016D58  0E00               	movlw	0
 48016  016D5A  6E2D               	movwf	i2___flmul@b+1,c
 48017  016D5C  0E00               	movlw	0
 48018  016D5E  6E2E               	movwf	i2___flmul@b+2,c
 48019  016D60  0E00               	movlw	0
 48020  016D62  6E2F               	movwf	i2___flmul@b+3,c
 48021  016D64                     i2l19110:
 48022  016D64  8E2E               	bsf	i2___flmul@b+2,7,c
 48023  016D66  D008               	goto	i2l19114
 48024  016D68                     i2l19112:
 48025  016D68  0E00               	movlw	0
 48026  016D6A  6E2C               	movwf	i2___flmul@b,c
 48027  016D6C  0E00               	movlw	0
 48028  016D6E  6E2D               	movwf	i2___flmul@b+1,c
 48029  016D70  0E00               	movlw	0
 48030  016D72  6E2E               	movwf	i2___flmul@b+2,c
 48031  016D74  0E00               	movlw	0
 48032  016D76  6E2F               	movwf	i2___flmul@b+3,c
 48033  016D78                     i2l19114:
 48034  016D78  5033               	movf	i2___flmul@a+3,w,c
 48035  016D7A  0B80               	andlw	128
 48036  016D7C  1A38               	xorwf	i2___flmul@sign,f,c
 48037  016D7E  5033               	movf	i2___flmul@a+3,w,c
 48038  016D80  2433               	addwf	i2___flmul@a+3,w,c
 48039  016D82  6E39               	movwf	i2___flmul@aexp,c
 48040  016D84  BE32               	btfsc	i2___flmul@a+2,7,c
 48041  016D86  8039               	bsf	i2___flmul@aexp,0,c
 48042  016D88  5039               	movf	i2___flmul@aexp,w,c
 48043  016D8A  B4D8               	btfsc	status,2,c
 48044  016D8C  D00D               	goto	i2l19130
 48045  016D8E  2839               	incf	i2___flmul@aexp,w,c
 48046  016D90  A4D8               	btfss	status,2,c
 48047  016D92  D008               	goto	i2l19128
 48048  016D94  0E00               	movlw	0
 48049  016D96  6E30               	movwf	i2___flmul@a,c
 48050  016D98  0E00               	movlw	0
 48051  016D9A  6E31               	movwf	i2___flmul@a+1,c
 48052  016D9C  0E00               	movlw	0
 48053  016D9E  6E32               	movwf	i2___flmul@a+2,c
 48054  016DA0  0E00               	movlw	0
 48055  016DA2  6E33               	movwf	i2___flmul@a+3,c
 48056  016DA4                     i2l19128:
 48057  016DA4  8E32               	bsf	i2___flmul@a+2,7,c
 48058  016DA6  D008               	goto	i2l3311
 48059  016DA8                     i2l19130:
 48060  016DA8  0E00               	movlw	0
 48061  016DAA  6E30               	movwf	i2___flmul@a,c
 48062  016DAC  0E00               	movlw	0
 48063  016DAE  6E31               	movwf	i2___flmul@a+1,c
 48064  016DB0  0E00               	movlw	0
 48065  016DB2  6E32               	movwf	i2___flmul@a+2,c
 48066  016DB4  0E00               	movlw	0
 48067  016DB6  6E33               	movwf	i2___flmul@a+3,c
 48068  016DB8                     i2l3311:
 48069  016DB8  5039               	movf	i2___flmul@aexp,w,c
 48070  016DBA  B4D8               	btfsc	status,2,c
 48071  016DBC  D003               	goto	i2u2431_40
 48072  016DBE  503E               	movf	i2___flmul@bexp,w,c
 48073  016DC0  A4D8               	btfss	status,2,c
 48074  016DC2  D009               	goto	i2l19138
 48075  016DC4                     i2u2431_40:
 48076  016DC4  0E00               	movlw	0
 48077  016DC6  6E2C               	movwf	?i2___flmul,c
 48078  016DC8  0E00               	movlw	0
 48079  016DCA  6E2D               	movwf	?i2___flmul+1,c
 48080  016DCC  0E00               	movlw	0
 48081  016DCE  6E2E               	movwf	?i2___flmul+2,c
 48082  016DD0  0E00               	movlw	0
 48083  016DD2  6E2F               	movwf	?i2___flmul+3,c
 48084  016DD4  0012               	return	
 48085  016DD6                     i2l19138:
 48086  016DD6  5032               	movf	i2___flmul@a+2,w,c
 48087  016DD8  022C               	mulwf	i2___flmul@b,c
 48088  016DDA  CFF3 F043          	movff	prodl,i2___flmul@temp
 48089  016DDE  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48090  016DE2  5043               	movf	i2___flmul@temp,w,c
 48091  016DE4  6E3A               	movwf	i2___flmul@grs,c
 48092  016DE6  6A3B               	clrf	i2___flmul@grs+1,c
 48093  016DE8  6A3C               	clrf	i2___flmul@grs+2,c
 48094  016DEA  6A3D               	clrf	i2___flmul@grs+3,c
 48095  016DEC  5044               	movf	i2___flmul@temp+1,w,c
 48096  016DEE  6E3F               	movwf	i2___flmul@prod,c
 48097  016DF0  6A40               	clrf	i2___flmul@prod+1,c
 48098  016DF2  6A41               	clrf	i2___flmul@prod+2,c
 48099  016DF4  6A42               	clrf	i2___flmul@prod+3,c
 48100  016DF6  5031               	movf	i2___flmul@a+1,w,c
 48101  016DF8  022D               	mulwf	i2___flmul@b+1,c
 48102  016DFA  CFF3 F043          	movff	prodl,i2___flmul@temp
 48103  016DFE  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48104  016E02  5043               	movf	i2___flmul@temp,w,c
 48105  016E04  263A               	addwf	i2___flmul@grs,f,c
 48106  016E06  0E00               	movlw	0
 48107  016E08  223B               	addwfc	i2___flmul@grs+1,f,c
 48108  016E0A  223C               	addwfc	i2___flmul@grs+2,f,c
 48109  016E0C  223D               	addwfc	i2___flmul@grs+3,f,c
 48110  016E0E  5044               	movf	i2___flmul@temp+1,w,c
 48111  016E10  263F               	addwf	i2___flmul@prod,f,c
 48112  016E12  0E00               	movlw	0
 48113  016E14  2240               	addwfc	i2___flmul@prod+1,f,c
 48114  016E16  2241               	addwfc	i2___flmul@prod+2,f,c
 48115  016E18  2242               	addwfc	i2___flmul@prod+3,f,c
 48116  016E1A  5030               	movf	i2___flmul@a,w,c
 48117  016E1C  022E               	mulwf	i2___flmul@b+2,c
 48118  016E1E  CFF3 F043          	movff	prodl,i2___flmul@temp
 48119  016E22  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48120  016E26  5043               	movf	i2___flmul@temp,w,c
 48121  016E28  263A               	addwf	i2___flmul@grs,f,c
 48122  016E2A  0E00               	movlw	0
 48123  016E2C  223B               	addwfc	i2___flmul@grs+1,f,c
 48124  016E2E  223C               	addwfc	i2___flmul@grs+2,f,c
 48125  016E30  223D               	addwfc	i2___flmul@grs+3,f,c
 48126  016E32  5044               	movf	i2___flmul@temp+1,w,c
 48127  016E34  263F               	addwf	i2___flmul@prod,f,c
 48128  016E36  0E00               	movlw	0
 48129  016E38  2240               	addwfc	i2___flmul@prod+1,f,c
 48130  016E3A  2241               	addwfc	i2___flmul@prod+2,f,c
 48131  016E3C  2242               	addwfc	i2___flmul@prod+3,f,c
 48132  016E3E  C03C  F03D         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 48133  016E42  C03B  F03C         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 48134  016E46  C03A  F03B         	movff	i2___flmul@grs,i2___flmul@grs+1
 48135  016E4A  6A3A               	clrf	i2___flmul@grs,c
 48136  016E4C  5030               	movf	i2___flmul@a,w,c
 48137  016E4E  022D               	mulwf	i2___flmul@b+1,c
 48138  016E50  CFF3 F043          	movff	prodl,i2___flmul@temp
 48139  016E54  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48140  016E58  5043               	movf	i2___flmul@temp,w,c
 48141  016E5A  263A               	addwf	i2___flmul@grs,f,c
 48142  016E5C  5044               	movf	i2___flmul@temp+1,w,c
 48143  016E5E  223B               	addwfc	i2___flmul@grs+1,f,c
 48144  016E60  0E00               	movlw	0
 48145  016E62  223C               	addwfc	i2___flmul@grs+2,f,c
 48146  016E64  0E00               	movlw	0
 48147  016E66  223D               	addwfc	i2___flmul@grs+3,f,c
 48148  016E68  5031               	movf	i2___flmul@a+1,w,c
 48149  016E6A  022C               	mulwf	i2___flmul@b,c
 48150  016E6C  CFF3 F043          	movff	prodl,i2___flmul@temp
 48151  016E70  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48152  016E74  5043               	movf	i2___flmul@temp,w,c
 48153  016E76  263A               	addwf	i2___flmul@grs,f,c
 48154  016E78  5044               	movf	i2___flmul@temp+1,w,c
 48155  016E7A  223B               	addwfc	i2___flmul@grs+1,f,c
 48156  016E7C  0E00               	movlw	0
 48157  016E7E  223C               	addwfc	i2___flmul@grs+2,f,c
 48158  016E80  0E00               	movlw	0
 48159  016E82  223D               	addwfc	i2___flmul@grs+3,f,c
 48160  016E84  C03C  F03D         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 48161  016E88  C03B  F03C         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 48162  016E8C  C03A  F03B         	movff	i2___flmul@grs,i2___flmul@grs+1
 48163  016E90  6A3A               	clrf	i2___flmul@grs,c
 48164  016E92  5030               	movf	i2___flmul@a,w,c
 48165  016E94  022C               	mulwf	i2___flmul@b,c
 48166  016E96  CFF3 F043          	movff	prodl,i2___flmul@temp
 48167  016E9A  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48168  016E9E  5043               	movf	i2___flmul@temp,w,c
 48169  016EA0  263A               	addwf	i2___flmul@grs,f,c
 48170  016EA2  5044               	movf	i2___flmul@temp+1,w,c
 48171  016EA4  223B               	addwfc	i2___flmul@grs+1,f,c
 48172  016EA6  0E00               	movlw	0
 48173  016EA8  223C               	addwfc	i2___flmul@grs+2,f,c
 48174  016EAA  0E00               	movlw	0
 48175  016EAC  223D               	addwfc	i2___flmul@grs+3,f,c
 48176  016EAE  5032               	movf	i2___flmul@a+2,w,c
 48177  016EB0  022D               	mulwf	i2___flmul@b+1,c
 48178  016EB2  CFF3 F043          	movff	prodl,i2___flmul@temp
 48179  016EB6  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48180  016EBA  5043               	movf	i2___flmul@temp,w,c
 48181  016EBC  263F               	addwf	i2___flmul@prod,f,c
 48182  016EBE  5044               	movf	i2___flmul@temp+1,w,c
 48183  016EC0  2240               	addwfc	i2___flmul@prod+1,f,c
 48184  016EC2  0E00               	movlw	0
 48185  016EC4  2241               	addwfc	i2___flmul@prod+2,f,c
 48186  016EC6  0E00               	movlw	0
 48187  016EC8  2242               	addwfc	i2___flmul@prod+3,f,c
 48188  016ECA  5031               	movf	i2___flmul@a+1,w,c
 48189  016ECC  022E               	mulwf	i2___flmul@b+2,c
 48190  016ECE  CFF3 F043          	movff	prodl,i2___flmul@temp
 48191  016ED2  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48192  016ED6  5043               	movf	i2___flmul@temp,w,c
 48193  016ED8  263F               	addwf	i2___flmul@prod,f,c
 48194  016EDA  5044               	movf	i2___flmul@temp+1,w,c
 48195  016EDC  2240               	addwfc	i2___flmul@prod+1,f,c
 48196  016EDE  0E00               	movlw	0
 48197  016EE0  2241               	addwfc	i2___flmul@prod+2,f,c
 48198  016EE2  0E00               	movlw	0
 48199  016EE4  2242               	addwfc	i2___flmul@prod+3,f,c
 48200  016EE6  5032               	movf	i2___flmul@a+2,w,c
 48201  016EE8  022E               	mulwf	i2___flmul@b+2,c
 48202  016EEA  CFF3 F043          	movff	prodl,i2___flmul@temp
 48203  016EEE  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48204  016EF2  5043               	movf	i2___flmul@temp,w,c
 48205  016EF4  6E34               	movwf	??i2___flmul& (0+255),c
 48206  016EF6  5044               	movf	i2___flmul@temp+1,w,c
 48207  016EF8  6E35               	movwf	(??i2___flmul+1)& (0+255),c
 48208  016EFA  6A36               	clrf	(??i2___flmul+2)& (0+255),c
 48209  016EFC  6A37               	clrf	(??i2___flmul+3)& (0+255),c
 48210  016EFE  C036  F037         	movff	??i2___flmul+2,??i2___flmul+3
 48211  016F02  C035  F036         	movff	??i2___flmul+1,??i2___flmul+2
 48212  016F06  C034  F035         	movff	??i2___flmul,??i2___flmul+1
 48213  016F0A  6A34               	clrf	??i2___flmul,c
 48214  016F0C  5034               	movf	??i2___flmul,w,c
 48215  016F0E  263F               	addwf	i2___flmul@prod,f,c
 48216  016F10  5035               	movf	??i2___flmul+1,w,c
 48217  016F12  2240               	addwfc	i2___flmul@prod+1,f,c
 48218  016F14  5036               	movf	??i2___flmul+2,w,c
 48219  016F16  2241               	addwfc	i2___flmul@prod+2,f,c
 48220  016F18  5037               	movf	??i2___flmul+3,w,c
 48221  016F1A  2242               	addwfc	i2___flmul@prod+3,f,c
 48222  016F1C  C03A  F034         	movff	i2___flmul@grs,??i2___flmul
 48223  016F20  C03B  F035         	movff	i2___flmul@grs+1,??i2___flmul+1
 48224  016F24  C03C  F036         	movff	i2___flmul@grs+2,??i2___flmul+2
 48225  016F28  C03D  F037         	movff	i2___flmul@grs+3,??i2___flmul+3
 48226  016F2C  0E19               	movlw	25
 48227  016F2E  D005               	goto	i2u2432_40
 48228  016F30                     i2u2432_45:
 48229  016F30  90D8               	bcf	status,0,c
 48230  016F32  3237               	rrcf	??i2___flmul+3,f,c
 48231  016F34  3236               	rrcf	??i2___flmul+2,f,c
 48232  016F36  3235               	rrcf	??i2___flmul+1,f,c
 48233  016F38  3234               	rrcf	??i2___flmul,f,c
 48234  016F3A                     i2u2432_40:
 48235  016F3A  2EE8               	decfsz	wreg,f,c
 48236  016F3C  D7F9               	goto	i2u2432_45
 48237  016F3E  5034               	movf	??i2___flmul,w,c
 48238  016F40  263F               	addwf	i2___flmul@prod,f,c
 48239  016F42  5035               	movf	??i2___flmul+1,w,c
 48240  016F44  2240               	addwfc	i2___flmul@prod+1,f,c
 48241  016F46  5036               	movf	??i2___flmul+2,w,c
 48242  016F48  2241               	addwfc	i2___flmul@prod+2,f,c
 48243  016F4A  5037               	movf	??i2___flmul+3,w,c
 48244  016F4C  2242               	addwfc	i2___flmul@prod+3,f,c
 48245  016F4E  C03C  F03D         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 48246  016F52  C03B  F03C         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 48247  016F56  C03A  F03B         	movff	i2___flmul@grs,i2___flmul@grs+1
 48248  016F5A  6A3A               	clrf	i2___flmul@grs,c
 48249  016F5C  5039               	movf	i2___flmul@aexp,w,c
 48250  016F5E  C03E  F034         	movff	i2___flmul@bexp,??i2___flmul
 48251  016F62  6A35               	clrf	(??i2___flmul+1)& (0+255),c
 48252  016F64  2634               	addwf	??i2___flmul,f,c
 48253  016F66  0E00               	movlw	0
 48254  016F68  2235               	addwfc	??i2___flmul+1,f,c
 48255  016F6A  0E82               	movlw	130
 48256  016F6C  2434               	addwf	??i2___flmul,w,c
 48257  016F6E  6E43               	movwf	i2___flmul@temp,c
 48258  016F70  0EFF               	movlw	255
 48259  016F72  2035               	addwfc	??i2___flmul+1,w,c
 48260  016F74  6E44               	movwf	i2___flmul@temp+1,c
 48261  016F76  D00F               	goto	i2l19186
 48262  016F78                     i2l19180:
 48263  016F78  90D8               	bcf	status,0,c
 48264  016F7A  363F               	rlcf	i2___flmul@prod,f,c
 48265  016F7C  3640               	rlcf	i2___flmul@prod+1,f,c
 48266  016F7E  3641               	rlcf	i2___flmul@prod+2,f,c
 48267  016F80  3642               	rlcf	i2___flmul@prod+3,f,c
 48268  016F82  BE3D               	btfsc	i2___flmul@grs+3,7,c
 48269  016F84  803F               	bsf	i2___flmul@prod,0,c
 48270  016F86  90D8               	bcf	status,0,c
 48271  016F88  363A               	rlcf	i2___flmul@grs,f,c
 48272  016F8A  363B               	rlcf	i2___flmul@grs+1,f,c
 48273  016F8C  363C               	rlcf	i2___flmul@grs+2,f,c
 48274  016F8E  363D               	rlcf	i2___flmul@grs+3,f,c
 48275  016F90  0643               	decf	i2___flmul@temp,f,c
 48276  016F92  A0D8               	btfss	status,0,c
 48277  016F94  0644               	decf	i2___flmul@temp+1,f,c
 48278  016F96                     i2l19186:
 48279  016F96  AE41               	btfss	i2___flmul@prod+2,7,c
 48280  016F98  D7EF               	goto	i2l19180
 48281  016F9A  0E00               	movlw	0
 48282  016F9C  6E39               	movwf	i2___flmul@aexp,c
 48283  016F9E  AE3D               	btfss	i2___flmul@grs+3,7,c
 48284  016FA0  D017               	goto	i2l3320
 48285  016FA2  0EFF               	movlw	255
 48286  016FA4  143A               	andwf	i2___flmul@grs,w,c
 48287  016FA6  6E34               	movwf	??i2___flmul& (0+255),c
 48288  016FA8  0EFF               	movlw	255
 48289  016FAA  143B               	andwf	i2___flmul@grs+1,w,c
 48290  016FAC  6E35               	movwf	(??i2___flmul+1)& (0+255),c
 48291  016FAE  0EFF               	movlw	255
 48292  016FB0  143C               	andwf	i2___flmul@grs+2,w,c
 48293  016FB2  6E36               	movwf	(??i2___flmul+2)& (0+255),c
 48294  016FB4  0E7F               	movlw	127
 48295  016FB6  143D               	andwf	i2___flmul@grs+3,w,c
 48296  016FB8  6E37               	movwf	(??i2___flmul+3)& (0+255),c
 48297  016FBA  5034               	movf	??i2___flmul,w,c
 48298  016FBC  1035               	iorwf	??i2___flmul+1,w,c
 48299  016FBE  1036               	iorwf	??i2___flmul+2,w,c
 48300  016FC0  1037               	iorwf	??i2___flmul+3,w,c
 48301  016FC2  B4D8               	btfsc	status,2,c
 48302  016FC4  D003               	goto	i2l3321
 48303  016FC6                     i2u2436_40:
 48304  016FC6  0E01               	movlw	1
 48305  016FC8  6E39               	movwf	i2___flmul@aexp,c
 48306  016FCA  D002               	goto	i2l3320
 48307  016FCC                     i2l3321:
 48308  016FCC  B03F               	btfsc	i2___flmul@prod,0,c
 48309  016FCE  D7FB               	goto	i2u2436_40
 48310  016FD0                     i2l3320:
 48311  016FD0  5039               	movf	i2___flmul@aexp,w,c
 48312  016FD2  B4D8               	btfsc	status,2,c
 48313  016FD4  D01F               	goto	i2l19206
 48314  016FD6  0E01               	movlw	1
 48315  016FD8  263F               	addwf	i2___flmul@prod,f,c
 48316  016FDA  0E00               	movlw	0
 48317  016FDC  2240               	addwfc	i2___flmul@prod+1,f,c
 48318  016FDE  2241               	addwfc	i2___flmul@prod+2,f,c
 48319  016FE0  2242               	addwfc	i2___flmul@prod+3,f,c
 48320  016FE2  A042               	btfss	i2___flmul@prod+3,0,c
 48321  016FE4  D017               	goto	i2l19206
 48322  016FE6  C03F  F034         	movff	i2___flmul@prod,??i2___flmul
 48323  016FEA  C040  F035         	movff	i2___flmul@prod+1,??i2___flmul+1
 48324  016FEE  C041  F036         	movff	i2___flmul@prod+2,??i2___flmul+2
 48325  016FF2  C042  F037         	movff	i2___flmul@prod+3,??i2___flmul+3
 48326  016FF6  3437               	rlcf	??i2___flmul+3,w,c
 48327  016FF8  3237               	rrcf	??i2___flmul+3,f,c
 48328  016FFA  3236               	rrcf	??i2___flmul+2,f,c
 48329  016FFC  3235               	rrcf	??i2___flmul+1,f,c
 48330  016FFE  3234               	rrcf	??i2___flmul,f,c
 48331  017000  C034  F03F         	movff	??i2___flmul,i2___flmul@prod
 48332  017004  C035  F040         	movff	??i2___flmul+1,i2___flmul@prod+1
 48333  017008  C036  F041         	movff	??i2___flmul+2,i2___flmul@prod+2
 48334  01700C  C037  F042         	movff	??i2___flmul+3,i2___flmul@prod+3
 48335  017010  4A43               	infsnz	i2___flmul@temp,f,c
 48336  017012  2A44               	incf	i2___flmul@temp+1,f,c
 48337  017014                     i2l19206:
 48338  017014  BE44               	btfsc	i2___flmul@temp+1,7,c
 48339  017016  D00D               	goto	i2l19210
 48340  017018  5044               	movf	i2___flmul@temp+1,w,c
 48341  01701A  E103               	bnz	i2u2440_40
 48342  01701C  2843               	incf	i2___flmul@temp,w,c
 48343  01701E  A0D8               	btfss	status,0,c
 48344  017020  D008               	goto	i2l19210
 48345  017022                     i2u2440_40:
 48346  017022  0E00               	movlw	0
 48347  017024  6E3F               	movwf	i2___flmul@prod,c
 48348  017026  0E00               	movlw	0
 48349  017028  6E40               	movwf	i2___flmul@prod+1,c
 48350  01702A  0E80               	movlw	128
 48351  01702C  6E41               	movwf	i2___flmul@prod+2,c
 48352  01702E  0E7F               	movlw	127
 48353  017030  D020               	goto	L54
 48354  017032                     i2l19210:
 48355  017032  BE44               	btfsc	i2___flmul@temp+1,7,c
 48356  017034  D005               	goto	i2u2441_40
 48357  017036  5044               	movf	i2___flmul@temp+1,w,c
 48358  017038  E10E               	bnz	i2l3328
 48359  01703A  0443               	decf	i2___flmul@temp,w,c
 48360  01703C  B0D8               	btfsc	status,0,c
 48361  01703E  D00B               	goto	i2l3328
 48362  017040                     i2u2441_40:
 48363  017040  0E00               	movlw	0
 48364  017042  6E3F               	movwf	i2___flmul@prod,c
 48365  017044  0E00               	movlw	0
 48366  017046  6E40               	movwf	i2___flmul@prod+1,c
 48367  017048  0E00               	movlw	0
 48368  01704A  6E41               	movwf	i2___flmul@prod+2,c
 48369  01704C  0E00               	movlw	0
 48370  01704E  6E42               	movwf	i2___flmul@prod+3,c
 48371  017050  0E00               	movlw	0
 48372  017052  6E38               	movwf	i2___flmul@sign,c
 48373  017054  D00F               	goto	i2l19222
 48374  017056                     i2l3328:
 48375  017056  C043  F03E         	movff	i2___flmul@temp,i2___flmul@bexp
 48376  01705A  0EFF               	movlw	255
 48377  01705C  163F               	andwf	i2___flmul@prod,f,c
 48378  01705E  0EFF               	movlw	255
 48379  017060  1640               	andwf	i2___flmul@prod+1,f,c
 48380  017062  0E7F               	movlw	127
 48381  017064  1641               	andwf	i2___flmul@prod+2,f,c
 48382  017066  0E00               	movlw	0
 48383  017068  1642               	andwf	i2___flmul@prod+3,f,c
 48384  01706A  B03E               	btfsc	i2___flmul@bexp,0,c
 48385  01706C  8E41               	bsf	i2___flmul@prod+2,7,c
 48386  01706E  90D8               	bcf	status,0,c
 48387  017070  303E               	rrcf	i2___flmul@bexp,w,c
 48388  017072                     L54:
 48389  017072  6E42               	movwf	i2___flmul@prod+3,c
 48390  017074                     i2l19222:
 48391  017074  5038               	movf	i2___flmul@sign,w,c
 48392  017076  1242               	iorwf	i2___flmul@prod+3,f,c
 48393  017078  C03F  F02C         	movff	i2___flmul@prod,?i2___flmul
 48394  01707C  C040  F02D         	movff	i2___flmul@prod+1,?i2___flmul+1
 48395  017080  C041  F02E         	movff	i2___flmul@prod+2,?i2___flmul+2
 48396  017084  C042  F02F         	movff	i2___flmul@prod+3,?i2___flmul+3
 48397  017088  0012               	return		;funcret
 48398  01708A                     __end_ofi2___flmul:
 48399                           	opt callstack 0
 48400                           
 48401 ;; *************** function i2___flge *****************
 48402 ;; Defined at:
 48403 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
 48404 ;; Parameters:    Size  Location     Type
 48405 ;;  ff1             4    0[COMRAM] unsigned char 
 48406 ;;  ff2             4    4[COMRAM] unsigned char 
 48407 ;; Auto vars:     Size  Location     Type
 48408 ;;		None
 48409 ;; Return value:  Size  Location     Type
 48410 ;;		None               void
 48411 ;; Registers used:
 48412 ;;		wreg, status,2, status,0
 48413 ;; Tracked objects:
 48414 ;;		On entry : 0/0
 48415 ;;		On exit  : 0/0
 48416 ;;		Unchanged: 0/0
 48417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48418 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48420 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48421 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48422 ;;Total ram usage:       12 bytes
 48423 ;; Hardware stack levels used:    1
 48424 ;; This function calls:
 48425 ;;		Nothing
 48426 ;; This function is called by:
 48427 ;;		_ADC_PostProcessingHandler
 48428 ;;		i2__doprnt
 48429 ;; This function uses a non-reentrant model
 48430 ;;
 48431                           
 48432                           	psect	text204
 48433  01A580                     __ptext204:
 48434                           	opt callstack 0
 48435  01A580                     i2___flge:
 48436                           	opt callstack 13
 48437                           
 48438                           ;incstack = 0
 48439  01A580  0E00               	movlw	0
 48440  01A582  1401               	andwf	i2___flge@ff1,w,c
 48441  01A584  6E09               	movwf	??i2___flge& (0+255),c
 48442  01A586  0E00               	movlw	0
 48443  01A588  1402               	andwf	i2___flge@ff1+1,w,c
 48444  01A58A  6E0A               	movwf	(??i2___flge+1)& (0+255),c
 48445  01A58C  0E80               	movlw	128
 48446  01A58E  1403               	andwf	i2___flge@ff1+2,w,c
 48447  01A590  6E0B               	movwf	(??i2___flge+2)& (0+255),c
 48448  01A592  0E7F               	movlw	127
 48449  01A594  1404               	andwf	i2___flge@ff1+3,w,c
 48450  01A596  6E0C               	movwf	(??i2___flge+3)& (0+255),c
 48451  01A598  5009               	movf	??i2___flge,w,c
 48452  01A59A  100A               	iorwf	??i2___flge+1,w,c
 48453  01A59C  100B               	iorwf	??i2___flge+2,w,c
 48454  01A59E  100C               	iorwf	??i2___flge+3,w,c
 48455  01A5A0  A4D8               	btfss	status,2,c
 48456  01A5A2  D008               	goto	i2l19684
 48457  01A5A4  0E00               	movlw	0
 48458  01A5A6  6E01               	movwf	i2___flge@ff1,c
 48459  01A5A8  0E00               	movlw	0
 48460  01A5AA  6E02               	movwf	i2___flge@ff1+1,c
 48461  01A5AC  0E00               	movlw	0
 48462  01A5AE  6E03               	movwf	i2___flge@ff1+2,c
 48463  01A5B0  0E00               	movlw	0
 48464  01A5B2  6E04               	movwf	i2___flge@ff1+3,c
 48465  01A5B4                     i2l19684:
 48466  01A5B4  0E00               	movlw	0
 48467  01A5B6  1405               	andwf	i2___flge@ff2,w,c
 48468  01A5B8  6E09               	movwf	??i2___flge& (0+255),c
 48469  01A5BA  0E00               	movlw	0
 48470  01A5BC  1406               	andwf	i2___flge@ff2+1,w,c
 48471  01A5BE  6E0A               	movwf	(??i2___flge+1)& (0+255),c
 48472  01A5C0  0E80               	movlw	128
 48473  01A5C2  1407               	andwf	i2___flge@ff2+2,w,c
 48474  01A5C4  6E0B               	movwf	(??i2___flge+2)& (0+255),c
 48475  01A5C6  0E7F               	movlw	127
 48476  01A5C8  1408               	andwf	i2___flge@ff2+3,w,c
 48477  01A5CA  6E0C               	movwf	(??i2___flge+3)& (0+255),c
 48478  01A5CC  5009               	movf	??i2___flge,w,c
 48479  01A5CE  100A               	iorwf	??i2___flge+1,w,c
 48480  01A5D0  100B               	iorwf	??i2___flge+2,w,c
 48481  01A5D2  100C               	iorwf	??i2___flge+3,w,c
 48482  01A5D4  A4D8               	btfss	status,2,c
 48483  01A5D6  D008               	goto	i2l19688
 48484  01A5D8  0E00               	movlw	0
 48485  01A5DA  6E05               	movwf	i2___flge@ff2,c
 48486  01A5DC  0E00               	movlw	0
 48487  01A5DE  6E06               	movwf	i2___flge@ff2+1,c
 48488  01A5E0  0E00               	movlw	0
 48489  01A5E2  6E07               	movwf	i2___flge@ff2+2,c
 48490  01A5E4  0E00               	movlw	0
 48491  01A5E6  6E08               	movwf	i2___flge@ff2+3,c
 48492  01A5E8                     i2l19688:
 48493  01A5E8  AE04               	btfss	i2___flge@ff1+3,7,c
 48494  01A5EA  D009               	goto	i2l19692
 48495  01A5EC  6C01               	negf	i2___flge@ff1,c
 48496  01A5EE  1E02               	comf	i2___flge@ff1+1,f,c
 48497  01A5F0  B0D8               	btfsc	status,0,c
 48498  01A5F2  2A02               	incf	i2___flge@ff1+1,f,c
 48499  01A5F4  1E03               	comf	i2___flge@ff1+2,f,c
 48500  01A5F6  B0D8               	btfsc	status,0,c
 48501  01A5F8  2A03               	incf	i2___flge@ff1+2,f,c
 48502  01A5FA  0E80               	movlw	128
 48503  01A5FC  5604               	subfwb	i2___flge@ff1+3,f,c
 48504  01A5FE                     i2l19692:
 48505  01A5FE  AE08               	btfss	i2___flge@ff2+3,7,c
 48506  01A600  D009               	goto	i2l2953
 48507  01A602  6C05               	negf	i2___flge@ff2,c
 48508  01A604  1E06               	comf	i2___flge@ff2+1,f,c
 48509  01A606  B0D8               	btfsc	status,0,c
 48510  01A608  2A06               	incf	i2___flge@ff2+1,f,c
 48511  01A60A  1E07               	comf	i2___flge@ff2+2,f,c
 48512  01A60C  B0D8               	btfsc	status,0,c
 48513  01A60E  2A07               	incf	i2___flge@ff2+2,f,c
 48514  01A610  0E80               	movlw	128
 48515  01A612  5608               	subfwb	i2___flge@ff2+3,f,c
 48516  01A614                     i2l2953:
 48517  01A614  0E00               	movlw	0
 48518  01A616  1A01               	xorwf	i2___flge@ff1,f,c
 48519  01A618  0E00               	movlw	0
 48520  01A61A  1A02               	xorwf	i2___flge@ff1+1,f,c
 48521  01A61C  0E00               	movlw	0
 48522  01A61E  1A03               	xorwf	i2___flge@ff1+2,f,c
 48523  01A620  0E80               	movlw	128
 48524  01A622  1A04               	xorwf	i2___flge@ff1+3,f,c
 48525  01A624  0E00               	movlw	0
 48526  01A626  1A05               	xorwf	i2___flge@ff2,f,c
 48527  01A628  0E00               	movlw	0
 48528  01A62A  1A06               	xorwf	i2___flge@ff2+1,f,c
 48529  01A62C  0E00               	movlw	0
 48530  01A62E  1A07               	xorwf	i2___flge@ff2+2,f,c
 48531  01A630  0E80               	movlw	128
 48532  01A632  1A08               	xorwf	i2___flge@ff2+3,f,c
 48533  01A634  5005               	movf	i2___flge@ff2,w,c
 48534  01A636  5C01               	subwf	i2___flge@ff1,w,c
 48535  01A638  5006               	movf	i2___flge@ff2+1,w,c
 48536  01A63A  5802               	subwfb	i2___flge@ff1+1,w,c
 48537  01A63C  5007               	movf	i2___flge@ff2+2,w,c
 48538  01A63E  5803               	subwfb	i2___flge@ff1+2,w,c
 48539  01A640  5008               	movf	i2___flge@ff2+3,w,c
 48540  01A642  5804               	subwfb	i2___flge@ff1+3,w,c
 48541  01A644  B0D8               	btfsc	status,0,c
 48542  01A646  D002               	goto	i2l19698
 48543  01A648  90D8               	bcf	status,0,c
 48544  01A64A  0012               	return	
 48545  01A64C                     i2l19698:
 48546  01A64C  80D8               	bsf	status,0,c
 48547  01A64E  0012               	return		;funcret
 48548  01A650                     __end_ofi2___flge:
 48549                           	opt callstack 0
 48550                           
 48551 ;; *************** function i2___fldiv *****************
 48552 ;; Defined at:
 48553 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
 48554 ;; Parameters:    Size  Location     Type
 48555 ;;  b               4   18[COMRAM] unsigned char 
 48556 ;;  a               4   22[COMRAM] unsigned char 
 48557 ;; Auto vars:     Size  Location     Type
 48558 ;;  __fldiv         4   37[COMRAM] unsigned long 
 48559 ;;  __fldiv         4   30[COMRAM] unsigned long 
 48560 ;;  __fldiv         2   35[COMRAM] int 
 48561 ;;  __fldiv         1   42[COMRAM] unsigned char 
 48562 ;;  __fldiv         1   41[COMRAM] unsigned char 
 48563 ;;  __fldiv         1   34[COMRAM] unsigned char 
 48564 ;; Return value:  Size  Location     Type
 48565 ;;                  4   18[COMRAM] unsigned char 
 48566 ;; Registers used:
 48567 ;;		wreg, status,2, status,0
 48568 ;; Tracked objects:
 48569 ;;		On entry : 0/0
 48570 ;;		On exit  : 0/0
 48571 ;;		Unchanged: 0/0
 48572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48573 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48574 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48575 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48576 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48577 ;;Total ram usage:       25 bytes
 48578 ;; Hardware stack levels used:    1
 48579 ;; This function calls:
 48580 ;;		Nothing
 48581 ;; This function is called by:
 48582 ;;		_ADC_PostProcessingHandler
 48583 ;; This function uses a non-reentrant model
 48584 ;;
 48585                           
 48586                           	psect	text205
 48587  01870A                     __ptext205:
 48588                           	opt callstack 0
 48589  01870A                     i2___fldiv:
 48590                           	opt callstack 14
 48591                           
 48592                           ;incstack = 0
 48593  01870A  5016               	movf	i2___fldiv@b+3,w,c
 48594  01870C  0B80               	andlw	128
 48595  01870E  6E23               	movwf	i2___fldiv@sign,c
 48596  018710  5016               	movf	i2___fldiv@b+3,w,c
 48597  018712  2416               	addwf	i2___fldiv@b+3,w,c
 48598  018714  6E2A               	movwf	i2___fldiv@bexp,c
 48599  018716  BE15               	btfsc	i2___fldiv@b+2,7,c
 48600  018718  802A               	bsf	i2___fldiv@bexp,0,c
 48601  01871A  502A               	movf	i2___fldiv@bexp,w,c
 48602  01871C  B4D8               	btfsc	status,2,c
 48603  01871E  D00D               	goto	i2l14748
 48604  018720  282A               	incf	i2___fldiv@bexp,w,c
 48605  018722  A4D8               	btfss	status,2,c
 48606  018724  D008               	goto	i2l14744
 48607  018726  0E00               	movlw	0
 48608  018728  6E13               	movwf	i2___fldiv@b,c
 48609  01872A  0E00               	movlw	0
 48610  01872C  6E14               	movwf	i2___fldiv@b+1,c
 48611  01872E  0E00               	movlw	0
 48612  018730  6E15               	movwf	i2___fldiv@b+2,c
 48613  018732  0E00               	movlw	0
 48614  018734  6E16               	movwf	i2___fldiv@b+3,c
 48615  018736                     i2l14744:
 48616  018736  8E15               	bsf	i2___fldiv@b+2,7,c
 48617  018738  D006               	goto	L55
 48618  01873A                     i2l14748:
 48619  01873A  0E00               	movlw	0
 48620  01873C  6E13               	movwf	i2___fldiv@b,c
 48621  01873E  0E00               	movlw	0
 48622  018740  6E14               	movwf	i2___fldiv@b+1,c
 48623  018742  0E00               	movlw	0
 48624  018744  6E15               	movwf	i2___fldiv@b+2,c
 48625  018746                     L55:
 48626  018746  0E00               	movlw	0
 48627  018748  6E16               	movwf	i2___fldiv@b+3,c
 48628  01874A  501A               	movf	i2___fldiv@a+3,w,c
 48629  01874C  0B80               	andlw	128
 48630  01874E  1A23               	xorwf	i2___fldiv@sign,f,c
 48631  018750  501A               	movf	i2___fldiv@a+3,w,c
 48632  018752  241A               	addwf	i2___fldiv@a+3,w,c
 48633  018754  6E2B               	movwf	i2___fldiv@aexp,c
 48634  018756  BE19               	btfsc	i2___fldiv@a+2,7,c
 48635  018758  802B               	bsf	i2___fldiv@aexp,0,c
 48636  01875A  502B               	movf	i2___fldiv@aexp,w,c
 48637  01875C  B4D8               	btfsc	status,2,c
 48638  01875E  D00D               	goto	i2l14768
 48639  018760  282B               	incf	i2___fldiv@aexp,w,c
 48640  018762  A4D8               	btfss	status,2,c
 48641  018764  D008               	goto	i2l14764
 48642  018766  0E00               	movlw	0
 48643  018768  6E17               	movwf	i2___fldiv@a,c
 48644  01876A  0E00               	movlw	0
 48645  01876C  6E18               	movwf	i2___fldiv@a+1,c
 48646  01876E  0E00               	movlw	0
 48647  018770  6E19               	movwf	i2___fldiv@a+2,c
 48648  018772  0E00               	movlw	0
 48649  018774  6E1A               	movwf	i2___fldiv@a+3,c
 48650  018776                     i2l14764:
 48651  018776  8E19               	bsf	i2___fldiv@a+2,7,c
 48652  018778  D006               	goto	L56
 48653  01877A                     i2l14768:
 48654  01877A  0E00               	movlw	0
 48655  01877C  6E17               	movwf	i2___fldiv@a,c
 48656  01877E  0E00               	movlw	0
 48657  018780  6E18               	movwf	i2___fldiv@a+1,c
 48658  018782  0E00               	movlw	0
 48659  018784  6E19               	movwf	i2___fldiv@a+2,c
 48660  018786                     L56:
 48661  018786  0E00               	movlw	0
 48662  018788  6E1A               	movwf	i2___fldiv@a+3,c
 48663  01878A  5017               	movf	i2___fldiv@a,w,c
 48664  01878C  1018               	iorwf	i2___fldiv@a+1,w,c
 48665  01878E  1019               	iorwf	i2___fldiv@a+2,w,c
 48666  018790  101A               	iorwf	i2___fldiv@a+3,w,c
 48667  018792  A4D8               	btfss	status,2,c
 48668  018794  D017               	goto	i2l14782
 48669  018796  0E00               	movlw	0
 48670  018798  6E13               	movwf	i2___fldiv@b,c
 48671  01879A  0E00               	movlw	0
 48672  01879C  6E14               	movwf	i2___fldiv@b+1,c
 48673  01879E  0E00               	movlw	0
 48674  0187A0  6E15               	movwf	i2___fldiv@b+2,c
 48675  0187A2  0E00               	movlw	0
 48676  0187A4  6E16               	movwf	i2___fldiv@b+3,c
 48677  0187A6  0E80               	movlw	128
 48678  0187A8  1215               	iorwf	i2___fldiv@b+2,f,c
 48679  0187AA  0E7F               	movlw	127
 48680  0187AC  1216               	iorwf	i2___fldiv@b+3,f,c
 48681  0187AE                     i2l14776:
 48682  0187AE  5023               	movf	i2___fldiv@sign,w,c
 48683  0187B0  1216               	iorwf	i2___fldiv@b+3,f,c
 48684  0187B2  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 48685  0187B6  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 48686  0187BA  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 48687  0187BE  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 48688  0187C2  0012               	return	
 48689  0187C4                     i2l14782:
 48690  0187C4  502A               	movf	i2___fldiv@bexp,w,c
 48691  0187C6  A4D8               	btfss	status,2,c
 48692  0187C8  D009               	goto	i2l14790
 48693  0187CA  0E00               	movlw	0
 48694  0187CC  6E13               	movwf	?i2___fldiv,c
 48695  0187CE  0E00               	movlw	0
 48696  0187D0  6E14               	movwf	?i2___fldiv+1,c
 48697  0187D2  0E00               	movlw	0
 48698  0187D4  6E15               	movwf	?i2___fldiv+2,c
 48699  0187D6  0E00               	movlw	0
 48700  0187D8  6E16               	movwf	?i2___fldiv+3,c
 48701  0187DA  0012               	return	
 48702  0187DC                     i2l14790:
 48703  0187DC  502B               	movf	i2___fldiv@aexp,w,c
 48704  0187DE  C02A  F01B         	movff	i2___fldiv@bexp,??i2___fldiv
 48705  0187E2  6A1C               	clrf	(??i2___fldiv+1)& (0+255),c
 48706  0187E4  5E1B               	subwf	??i2___fldiv,f,c
 48707  0187E6  0E00               	movlw	0
 48708  0187E8  5A1C               	subwfb	??i2___fldiv+1,f,c
 48709  0187EA  0E7F               	movlw	127
 48710  0187EC  241B               	addwf	??i2___fldiv,w,c
 48711  0187EE  6E24               	movwf	i2___fldiv@new_exp,c
 48712  0187F0  0E00               	movlw	0
 48713  0187F2  201C               	addwfc	??i2___fldiv+1,w,c
 48714  0187F4  6E25               	movwf	i2___fldiv@new_exp+1,c
 48715  0187F6  C013  F01F         	movff	i2___fldiv@b,i2___fldiv@rem
 48716  0187FA  C014  F020         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 48717  0187FE  C015  F021         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 48718  018802  C016  F022         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 48719  018806  0E00               	movlw	0
 48720  018808  6E13               	movwf	i2___fldiv@b,c
 48721  01880A  0E00               	movlw	0
 48722  01880C  6E14               	movwf	i2___fldiv@b+1,c
 48723  01880E  0E00               	movlw	0
 48724  018810  6E15               	movwf	i2___fldiv@b+2,c
 48725  018812  0E00               	movlw	0
 48726  018814  6E16               	movwf	i2___fldiv@b+3,c
 48727  018816  0E00               	movlw	0
 48728  018818  6E26               	movwf	i2___fldiv@grs,c
 48729  01881A  0E00               	movlw	0
 48730  01881C  6E27               	movwf	i2___fldiv@grs+1,c
 48731  01881E  0E00               	movlw	0
 48732  018820  6E28               	movwf	i2___fldiv@grs+2,c
 48733  018822  0E00               	movlw	0
 48734  018824  6E29               	movwf	i2___fldiv@grs+3,c
 48735  018826  0E00               	movlw	0
 48736  018828  6E2B               	movwf	i2___fldiv@aexp,c
 48737  01882A  D028               	goto	i2l3281
 48738  01882C                     i2l14800:
 48739  01882C  502B               	movf	i2___fldiv@aexp,w,c
 48740  01882E  B4D8               	btfsc	status,2,c
 48741  018830  D011               	goto	i2l14808
 48742  018832  90D8               	bcf	status,0,c
 48743  018834  361F               	rlcf	i2___fldiv@rem,f,c
 48744  018836  3620               	rlcf	i2___fldiv@rem+1,f,c
 48745  018838  3621               	rlcf	i2___fldiv@rem+2,f,c
 48746  01883A  3622               	rlcf	i2___fldiv@rem+3,f,c
 48747  01883C  90D8               	bcf	status,0,c
 48748  01883E  3613               	rlcf	i2___fldiv@b,f,c
 48749  018840  3614               	rlcf	i2___fldiv@b+1,f,c
 48750  018842  3615               	rlcf	i2___fldiv@b+2,f,c
 48751  018844  3616               	rlcf	i2___fldiv@b+3,f,c
 48752  018846  BE29               	btfsc	i2___fldiv@grs+3,7,c
 48753  018848  8013               	bsf	i2___fldiv@b,0,c
 48754  01884A  90D8               	bcf	status,0,c
 48755  01884C  3626               	rlcf	i2___fldiv@grs,f,c
 48756  01884E  3627               	rlcf	i2___fldiv@grs+1,f,c
 48757  018850  3628               	rlcf	i2___fldiv@grs+2,f,c
 48758  018852  3629               	rlcf	i2___fldiv@grs+3,f,c
 48759  018854                     i2l14808:
 48760  018854  5017               	movf	i2___fldiv@a,w,c
 48761  018856  5C1F               	subwf	i2___fldiv@rem,w,c
 48762  018858  5018               	movf	i2___fldiv@a+1,w,c
 48763  01885A  5820               	subwfb	i2___fldiv@rem+1,w,c
 48764  01885C  5019               	movf	i2___fldiv@a+2,w,c
 48765  01885E  5821               	subwfb	i2___fldiv@rem+2,w,c
 48766  018860  501A               	movf	i2___fldiv@a+3,w,c
 48767  018862  5822               	subwfb	i2___fldiv@rem+3,w,c
 48768  018864  A0D8               	btfss	status,0,c
 48769  018866  D009               	goto	i2l14814
 48770  018868  8C29               	bsf	i2___fldiv@grs+3,6,c
 48771  01886A  5017               	movf	i2___fldiv@a,w,c
 48772  01886C  5E1F               	subwf	i2___fldiv@rem,f,c
 48773  01886E  5018               	movf	i2___fldiv@a+1,w,c
 48774  018870  5A20               	subwfb	i2___fldiv@rem+1,f,c
 48775  018872  5019               	movf	i2___fldiv@a+2,w,c
 48776  018874  5A21               	subwfb	i2___fldiv@rem+2,f,c
 48777  018876  501A               	movf	i2___fldiv@a+3,w,c
 48778  018878  5A22               	subwfb	i2___fldiv@rem+3,f,c
 48779  01887A                     i2l14814:
 48780  01887A  2A2B               	incf	i2___fldiv@aexp,f,c
 48781  01887C                     i2l3281:
 48782  01887C  0E19               	movlw	25
 48783  01887E  642B               	cpfsgt	i2___fldiv@aexp,c
 48784  018880  D7D5               	goto	i2l14800
 48785  018882  501F               	movf	i2___fldiv@rem,w,c
 48786  018884  1020               	iorwf	i2___fldiv@rem+1,w,c
 48787  018886  1021               	iorwf	i2___fldiv@rem+2,w,c
 48788  018888  1022               	iorwf	i2___fldiv@rem+3,w,c
 48789  01888A  B4D8               	btfsc	status,2,c
 48790  01888C  D011               	goto	i2l14826
 48791  01888E  8026               	bsf	i2___fldiv@grs,0,c
 48792  018890  D00F               	goto	i2l14826
 48793  018892                     i2l14820:
 48794  018892  90D8               	bcf	status,0,c
 48795  018894  3613               	rlcf	i2___fldiv@b,f,c
 48796  018896  3614               	rlcf	i2___fldiv@b+1,f,c
 48797  018898  3615               	rlcf	i2___fldiv@b+2,f,c
 48798  01889A  3616               	rlcf	i2___fldiv@b+3,f,c
 48799  01889C  BE29               	btfsc	i2___fldiv@grs+3,7,c
 48800  01889E  8013               	bsf	i2___fldiv@b,0,c
 48801  0188A0  90D8               	bcf	status,0,c
 48802  0188A2  3626               	rlcf	i2___fldiv@grs,f,c
 48803  0188A4  3627               	rlcf	i2___fldiv@grs+1,f,c
 48804  0188A6  3628               	rlcf	i2___fldiv@grs+2,f,c
 48805  0188A8  3629               	rlcf	i2___fldiv@grs+3,f,c
 48806  0188AA  0624               	decf	i2___fldiv@new_exp,f,c
 48807  0188AC  A0D8               	btfss	status,0,c
 48808  0188AE  0625               	decf	i2___fldiv@new_exp+1,f,c
 48809  0188B0                     i2l14826:
 48810  0188B0  AE15               	btfss	i2___fldiv@b+2,7,c
 48811  0188B2  D7EF               	goto	i2l14820
 48812  0188B4  0E00               	movlw	0
 48813  0188B6  6E2B               	movwf	i2___fldiv@aexp,c
 48814  0188B8  AE29               	btfss	i2___fldiv@grs+3,7,c
 48815  0188BA  D017               	goto	i2l3292
 48816  0188BC  0EFF               	movlw	255
 48817  0188BE  1426               	andwf	i2___fldiv@grs,w,c
 48818  0188C0  6E1B               	movwf	??i2___fldiv& (0+255),c
 48819  0188C2  0EFF               	movlw	255
 48820  0188C4  1427               	andwf	i2___fldiv@grs+1,w,c
 48821  0188C6  6E1C               	movwf	(??i2___fldiv+1)& (0+255),c
 48822  0188C8  0EFF               	movlw	255
 48823  0188CA  1428               	andwf	i2___fldiv@grs+2,w,c
 48824  0188CC  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 48825  0188CE  0E7F               	movlw	127
 48826  0188D0  1429               	andwf	i2___fldiv@grs+3,w,c
 48827  0188D2  6E1E               	movwf	(??i2___fldiv+3)& (0+255),c
 48828  0188D4  501B               	movf	??i2___fldiv,w,c
 48829  0188D6  101C               	iorwf	??i2___fldiv+1,w,c
 48830  0188D8  101D               	iorwf	??i2___fldiv+2,w,c
 48831  0188DA  101E               	iorwf	??i2___fldiv+3,w,c
 48832  0188DC  B4D8               	btfsc	status,2,c
 48833  0188DE  D003               	goto	i2l3293
 48834  0188E0                     i2u1789_40:
 48835  0188E0  0E01               	movlw	1
 48836  0188E2  6E2B               	movwf	i2___fldiv@aexp,c
 48837  0188E4  D002               	goto	i2l3292
 48838  0188E6                     i2l3293:
 48839  0188E6  B013               	btfsc	i2___fldiv@b,0,c
 48840  0188E8  D7FB               	goto	i2u1789_40
 48841  0188EA                     i2l3292:
 48842  0188EA  502B               	movf	i2___fldiv@aexp,w,c
 48843  0188EC  B4D8               	btfsc	status,2,c
 48844  0188EE  D01F               	goto	i2l14846
 48845  0188F0  0E01               	movlw	1
 48846  0188F2  2613               	addwf	i2___fldiv@b,f,c
 48847  0188F4  0E00               	movlw	0
 48848  0188F6  2214               	addwfc	i2___fldiv@b+1,f,c
 48849  0188F8  2215               	addwfc	i2___fldiv@b+2,f,c
 48850  0188FA  2216               	addwfc	i2___fldiv@b+3,f,c
 48851  0188FC  A016               	btfss	i2___fldiv@b+3,0,c
 48852  0188FE  D017               	goto	i2l14846
 48853  018900  C013  F01B         	movff	i2___fldiv@b,??i2___fldiv
 48854  018904  C014  F01C         	movff	i2___fldiv@b+1,??i2___fldiv+1
 48855  018908  C015  F01D         	movff	i2___fldiv@b+2,??i2___fldiv+2
 48856  01890C  C016  F01E         	movff	i2___fldiv@b+3,??i2___fldiv+3
 48857  018910  341E               	rlcf	??i2___fldiv+3,w,c
 48858  018912  321E               	rrcf	??i2___fldiv+3,f,c
 48859  018914  321D               	rrcf	??i2___fldiv+2,f,c
 48860  018916  321C               	rrcf	??i2___fldiv+1,f,c
 48861  018918  321B               	rrcf	??i2___fldiv,f,c
 48862  01891A  C01B  F013         	movff	??i2___fldiv,i2___fldiv@b
 48863  01891E  C01C  F014         	movff	??i2___fldiv+1,i2___fldiv@b+1
 48864  018922  C01D  F015         	movff	??i2___fldiv+2,i2___fldiv@b+2
 48865  018926  C01E  F016         	movff	??i2___fldiv+3,i2___fldiv@b+3
 48866  01892A  4A24               	infsnz	i2___fldiv@new_exp,f,c
 48867  01892C  2A25               	incf	i2___fldiv@new_exp+1,f,c
 48868  01892E                     i2l14846:
 48869  01892E  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 48870  018930  D010               	goto	i2l14850
 48871  018932  5025               	movf	i2___fldiv@new_exp+1,w,c
 48872  018934  E103               	bnz	i2u1793_40
 48873  018936  2824               	incf	i2___fldiv@new_exp,w,c
 48874  018938  A0D8               	btfss	status,0,c
 48875  01893A  D00B               	goto	i2l14850
 48876  01893C                     i2u1793_40:
 48877  01893C  0E00               	movlw	0
 48878  01893E  6E25               	movwf	i2___fldiv@new_exp+1,c
 48879  018940  6824               	setf	i2___fldiv@new_exp,c
 48880  018942  0E00               	movlw	0
 48881  018944  6E13               	movwf	i2___fldiv@b,c
 48882  018946  0E00               	movlw	0
 48883  018948  6E14               	movwf	i2___fldiv@b+1,c
 48884  01894A  0E00               	movlw	0
 48885  01894C  6E15               	movwf	i2___fldiv@b+2,c
 48886  01894E  0E00               	movlw	0
 48887  018950  6E16               	movwf	i2___fldiv@b+3,c
 48888  018952                     i2l14850:
 48889  018952  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 48890  018954  D005               	goto	i2u1794_40
 48891  018956  5025               	movf	i2___fldiv@new_exp+1,w,c
 48892  018958  E111               	bnz	i2l14854
 48893  01895A  0424               	decf	i2___fldiv@new_exp,w,c
 48894  01895C  B0D8               	btfsc	status,0,c
 48895  01895E  D00E               	goto	i2l14854
 48896  018960                     i2u1794_40:
 48897  018960  0E00               	movlw	0
 48898  018962  6E25               	movwf	i2___fldiv@new_exp+1,c
 48899  018964  0E00               	movlw	0
 48900  018966  6E24               	movwf	i2___fldiv@new_exp,c
 48901  018968  0E00               	movlw	0
 48902  01896A  6E13               	movwf	i2___fldiv@b,c
 48903  01896C  0E00               	movlw	0
 48904  01896E  6E14               	movwf	i2___fldiv@b+1,c
 48905  018970  0E00               	movlw	0
 48906  018972  6E15               	movwf	i2___fldiv@b+2,c
 48907  018974  0E00               	movlw	0
 48908  018976  6E16               	movwf	i2___fldiv@b+3,c
 48909  018978  0E00               	movlw	0
 48910  01897A  6E23               	movwf	i2___fldiv@sign,c
 48911  01897C                     i2l14854:
 48912  01897C  C024  F02A         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 48913  018980  A02A               	btfss	i2___fldiv@bexp,0,c
 48914  018982  D002               	goto	i2l14860
 48915  018984  8E15               	bsf	i2___fldiv@b+2,7,c
 48916  018986  D001               	goto	i2l14862
 48917  018988                     i2l14860:
 48918  018988  9E15               	bcf	i2___fldiv@b+2,7,c
 48919  01898A                     i2l14862:
 48920  01898A  90D8               	bcf	status,0,c
 48921  01898C  302A               	rrcf	i2___fldiv@bexp,w,c
 48922  01898E  6E16               	movwf	i2___fldiv@b+3,c
 48923  018990  D70E               	goto	i2l14776
 48924  018992                     __end_ofi2___fldiv:
 48925                           	opt callstack 0
 48926                           
 48927 ;; *************** function _fabs *****************
 48928 ;; Defined at:
 48929 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fabs.c"
 48930 ;; Parameters:    Size  Location     Type
 48931 ;;  d               4    4[COMRAM] unsigned char 
 48932 ;; Auto vars:     Size  Location     Type
 48933 ;;		None
 48934 ;; Return value:  Size  Location     Type
 48935 ;;                  4    4[COMRAM] unsigned char 
 48936 ;; Registers used:
 48937 ;;		wreg, status,2, status,0, cstack
 48938 ;; Tracked objects:
 48939 ;;		On entry : 0/0
 48940 ;;		On exit  : 0/0
 48941 ;;		Unchanged: 0/0
 48942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48943 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48946 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48947 ;;Total ram usage:        4 bytes
 48948 ;; Hardware stack levels used:    1
 48949 ;; Hardware stack levels required when called:    1
 48950 ;; This function calls:
 48951 ;;		i2___flneg
 48952 ;; This function is called by:
 48953 ;;		_ADC_PostProcessingHandler
 48954 ;; This function uses a non-reentrant model
 48955 ;;
 48956                           
 48957                           	psect	text206
 48958  01BEF8                     __ptext206:
 48959                           	opt callstack 0
 48960  01BEF8                     _fabs:
 48961                           	opt callstack 13
 48962                           
 48963                           ;incstack = 0
 48964  01BEF8  AE08               	btfss	fabs@d+3,7,c
 48965  01BEFA  D013               	goto	i2l3375
 48966  01BEFC  C005  F001         	movff	fabs@d,i2___flneg@f1
 48967  01BF00  C006  F002         	movff	fabs@d+1,i2___flneg@f1+1
 48968  01BF04  C007  F003         	movff	fabs@d+2,i2___flneg@f1+2
 48969  01BF08  C008  F004         	movff	fabs@d+3,i2___flneg@f1+3
 48970  01BF0C  ECAF  F0E0         	call	i2___flneg	;wreg free
 48971  01BF10  C001  F005         	movff	?i2___flneg,?_fabs
 48972  01BF14  C002  F006         	movff	?i2___flneg+1,?_fabs+1
 48973  01BF18  C003  F007         	movff	?i2___flneg+2,?_fabs+2
 48974  01BF1C  C004  F008         	movff	?i2___flneg+3,?_fabs+3
 48975  01BF20  0012               	return	
 48976  01BF22                     i2l3375:
 48977  01BF22  C005  F005         	movff	fabs@d,?_fabs
 48978  01BF26  C006  F006         	movff	fabs@d+1,?_fabs+1
 48979  01BF2A  C007  F007         	movff	fabs@d+2,?_fabs+2
 48980  01BF2E  C008  F008         	movff	fabs@d+3,?_fabs+3
 48981  01BF32  0012               	return		;funcret
 48982  01BF34                     __end_of_fabs:
 48983                           	opt callstack 0
 48984                           
 48985 ;; *************** function i2___flneg *****************
 48986 ;; Defined at:
 48987 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
 48988 ;; Parameters:    Size  Location     Type
 48989 ;;  f1              4    0[COMRAM] unsigned char 
 48990 ;; Auto vars:     Size  Location     Type
 48991 ;;		None
 48992 ;; Return value:  Size  Location     Type
 48993 ;;                  4    0[COMRAM] unsigned char 
 48994 ;; Registers used:
 48995 ;;		wreg, status,2, status,0
 48996 ;; Tracked objects:
 48997 ;;		On entry : 0/0
 48998 ;;		On exit  : 0/0
 48999 ;;		Unchanged: 0/0
 49000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49001 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49004 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49005 ;;Total ram usage:        4 bytes
 49006 ;; Hardware stack levels used:    1
 49007 ;; This function calls:
 49008 ;;		Nothing
 49009 ;; This function is called by:
 49010 ;;		_fabs
 49011 ;;		i2__doprnt
 49012 ;; This function uses a non-reentrant model
 49013 ;;
 49014                           
 49015                           	psect	text207
 49016  01C15E                     __ptext207:
 49017                           	opt callstack 0
 49018  01C15E                     i2___flneg:
 49019                           	opt callstack 13
 49020                           
 49021                           ;incstack = 0
 49022  01C15E  5001               	movf	i2___flneg@f1,w,c
 49023  01C160  1002               	iorwf	i2___flneg@f1+1,w,c
 49024  01C162  1003               	iorwf	i2___flneg@f1+2,w,c
 49025  01C164  1004               	iorwf	i2___flneg@f1+3,w,c
 49026  01C166  B4D8               	btfsc	status,2,c
 49027  01C168  D008               	goto	i2l19706
 49028  01C16A  0E00               	movlw	0
 49029  01C16C  1A01               	xorwf	i2___flneg@f1,f,c
 49030  01C16E  0E00               	movlw	0
 49031  01C170  1A02               	xorwf	i2___flneg@f1+1,f,c
 49032  01C172  0E00               	movlw	0
 49033  01C174  1A03               	xorwf	i2___flneg@f1+2,f,c
 49034  01C176  0E80               	movlw	128
 49035  01C178  1A04               	xorwf	i2___flneg@f1+3,f,c
 49036  01C17A                     i2l19706:
 49037  01C17A  C001  F001         	movff	i2___flneg@f1,?i2___flneg
 49038  01C17E  C002  F002         	movff	i2___flneg@f1+1,?i2___flneg+1
 49039  01C182  C003  F003         	movff	i2___flneg@f1+2,?i2___flneg+2
 49040  01C186  C004  F004         	movff	i2___flneg@f1+3,?i2___flneg+3
 49041  01C18A  0012               	return		;funcret
 49042  01C18C                     __end_ofi2___flneg:
 49043                           	opt callstack 0
 49044                           
 49045 ;; *************** function _TMR2_StartTimer *****************
 49046 ;; Defined at:
 49047 ;;		line 114 in file "mcc_generated_files/tmr2.c"
 49048 ;; Parameters:    Size  Location     Type
 49049 ;;		None
 49050 ;; Auto vars:     Size  Location     Type
 49051 ;;		None
 49052 ;; Return value:  Size  Location     Type
 49053 ;;                  1    wreg      void 
 49054 ;; Registers used:
 49055 ;;		cstack
 49056 ;; Tracked objects:
 49057 ;;		On entry : 0/0
 49058 ;;		On exit  : 0/0
 49059 ;;		Unchanged: 0/0
 49060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49065 ;;Total ram usage:        0 bytes
 49066 ;; Hardware stack levels used:    1
 49067 ;; Hardware stack levels required when called:    1
 49068 ;; This function calls:
 49069 ;;		_TMR2_Start
 49070 ;; This function is called by:
 49071 ;;		_ADC_PostProcessingHandler
 49072 ;; This function uses a non-reentrant model
 49073 ;;
 49074                           
 49075                           	psect	text208
 49076  01C868                     __ptext208:
 49077                           	opt callstack 0
 49078  01C868                     _TMR2_StartTimer:
 49079                           	opt callstack 13
 49080                           
 49081                           ;tmr2.c: 116: TMR2_Start();
 49082                           
 49083                           ;incstack = 0
 49084  01C868  EC47  F0E4         	call	_TMR2_Start	;wreg free
 49085  01C86C  0012               	return		;funcret
 49086  01C86E                     __end_of_TMR2_StartTimer:
 49087                           	opt callstack 0
 49088                           
 49089 ;; *************** function _TMR2_Start *****************
 49090 ;; Defined at:
 49091 ;;		line 108 in file "mcc_generated_files/tmr2.c"
 49092 ;; Parameters:    Size  Location     Type
 49093 ;;		None
 49094 ;; Auto vars:     Size  Location     Type
 49095 ;;		None
 49096 ;; Return value:  Size  Location     Type
 49097 ;;                  1    wreg      void 
 49098 ;; Registers used:
 49099 ;;		None
 49100 ;; Tracked objects:
 49101 ;;		On entry : 0/0
 49102 ;;		On exit  : 0/0
 49103 ;;		Unchanged: 0/0
 49104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49109 ;;Total ram usage:        0 bytes
 49110 ;; Hardware stack levels used:    1
 49111 ;; This function calls:
 49112 ;;		Nothing
 49113 ;; This function is called by:
 49114 ;;		_TMR2_StartTimer
 49115 ;; This function uses a non-reentrant model
 49116 ;;
 49117                           
 49118                           	psect	text209
 49119  01C88E                     __ptext209:
 49120                           	opt callstack 0
 49121  01C88E                     _TMR2_Start:
 49122                           	opt callstack 13
 49123                           
 49124                           ;tmr2.c: 111: T2CONbits.TMR2ON = 1;
 49125                           
 49126                           ;incstack = 0
 49127  01C88E  8EBD               	bsf	4029,7,c	;volatile
 49128  01C890  0012               	return		;funcret
 49129  01C892                     __end_of_TMR2_Start:
 49130                           	opt callstack 0
 49131                           
 49132 ;; *************** function _ADCC_StopConversion *****************
 49133 ;; Defined at:
 49134 ;;		line 162 in file "mcc_generated_files/adcc.c"
 49135 ;; Parameters:    Size  Location     Type
 49136 ;;		None
 49137 ;; Auto vars:     Size  Location     Type
 49138 ;;		None
 49139 ;; Return value:  Size  Location     Type
 49140 ;;                  1    wreg      void 
 49141 ;; Registers used:
 49142 ;;		None
 49143 ;; Tracked objects:
 49144 ;;		On entry : 0/0
 49145 ;;		On exit  : 0/0
 49146 ;;		Unchanged: 0/0
 49147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49152 ;;Total ram usage:        0 bytes
 49153 ;; Hardware stack levels used:    1
 49154 ;; This function calls:
 49155 ;;		Nothing
 49156 ;; This function is called by:
 49157 ;;		_ADC_PostProcessingHandler
 49158 ;; This function uses a non-reentrant model
 49159 ;;
 49160                           
 49161                           	psect	text210
 49162  01C892                     __ptext210:
 49163                           	opt callstack 0
 49164  01C892                     _ADCC_StopConversion:
 49165                           	opt callstack 14
 49166                           
 49167                           ;adcc.c: 165: ADCON0bits.ADGO = 0;
 49168                           
 49169                           ;incstack = 0
 49170  01C892  9060               	bcf	3936,0,c	;volatile
 49171  01C894  0012               	return		;funcret
 49172  01C896                     __end_of_ADCC_StopConversion:
 49173                           	opt callstack 0
 49174                           
 49175 ;; *************** function _ADCC_HasAccumulatorOverflowed *****************
 49176 ;; Defined at:
 49177 ;;		line 216 in file "mcc_generated_files/adcc.c"
 49178 ;; Parameters:    Size  Location     Type
 49179 ;;		None
 49180 ;; Auto vars:     Size  Location     Type
 49181 ;;		None
 49182 ;; Return value:  Size  Location     Type
 49183 ;;                  1    wreg      unsigned char 
 49184 ;; Registers used:
 49185 ;;		wreg
 49186 ;; Tracked objects:
 49187 ;;		On entry : 0/0
 49188 ;;		On exit  : 0/0
 49189 ;;		Unchanged: 0/0
 49190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49195 ;;Total ram usage:        0 bytes
 49196 ;; Hardware stack levels used:    1
 49197 ;; This function calls:
 49198 ;;		Nothing
 49199 ;; This function is called by:
 49200 ;;		_ADC_PostProcessingHandler
 49201 ;; This function uses a non-reentrant model
 49202 ;;
 49203                           
 49204                           	psect	text211
 49205  01C810                     __ptext211:
 49206                           	opt callstack 0
 49207  01C810                     _ADCC_HasAccumulatorOverflowed:
 49208                           	opt callstack 14
 49209                           
 49210                           ;adcc.c: 219: return ADSTATbits.ADAOV;
 49211                           
 49212                           ;incstack = 0
 49213  01C810  AE65               	btfss	3941,7,c	;volatile
 49214  01C812  D002               	goto	i2u1608_40
 49215  01C814  0E01               	movlw	1
 49216  01C816  0012               	return	
 49217  01C818                     i2u1608_40:
 49218  01C818  0E00               	movlw	0
 49219  01C81A  0012               	return		;funcret
 49220  01C81C                     __end_of_ADCC_HasAccumulatorOverflowed:
 49221                           	opt callstack 0
 49222                           
 49223 ;; *************** function _ADCC_GetFilterValue *****************
 49224 ;; Defined at:
 49225 ;;		line 222 in file "mcc_generated_files/adcc.c"
 49226 ;; Parameters:    Size  Location     Type
 49227 ;;		None
 49228 ;; Auto vars:     Size  Location     Type
 49229 ;;		None
 49230 ;; Return value:  Size  Location     Type
 49231 ;;                  2    0[COMRAM] unsigned int 
 49232 ;; Registers used:
 49233 ;;		wreg, status,2, status,0
 49234 ;; Tracked objects:
 49235 ;;		On entry : 0/0
 49236 ;;		On exit  : 0/0
 49237 ;;		Unchanged: 0/0
 49238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49239 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49241 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49242 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49243 ;;Total ram usage:        4 bytes
 49244 ;; Hardware stack levels used:    1
 49245 ;; This function calls:
 49246 ;;		Nothing
 49247 ;; This function is called by:
 49248 ;;		_ADC_PostProcessingHandler
 49249 ;; This function uses a non-reentrant model
 49250 ;;
 49251                           
 49252                           	psect	text212
 49253  01C672                     __ptext212:
 49254                           	opt callstack 0
 49255  01C672                     _ADCC_GetFilterValue:
 49256                           	opt callstack 14
 49257                           
 49258                           ;adcc.c: 225: return ((uint16_t)((ADFLTRH << 8) + ADFLTRL));
 49259                           
 49260                           ;incstack = 0
 49261  01C672  5073               	movf	3955,w,c	;volatile
 49262  01C674  6E04               	movwf	(??_ADCC_GetFilterValue+1)& (0+255),c
 49263  01C676  6A03               	clrf	??_ADCC_GetFilterValue& (0+255),c
 49264  01C678  5072               	movf	3954,w,c	;volatile
 49265  01C67A  2403               	addwf	??_ADCC_GetFilterValue,w,c
 49266  01C67C  6E01               	movwf	?_ADCC_GetFilterValue,c
 49267  01C67E  0E00               	movlw	0
 49268  01C680  2004               	addwfc	??_ADCC_GetFilterValue+1,w,c
 49269  01C682  6E02               	movwf	?_ADCC_GetFilterValue+1,c
 49270  01C684  0012               	return		;funcret
 49271  01C686                     __end_of_ADCC_GetFilterValue:
 49272                           	opt callstack 0
 49273                           
 49274 ;; *************** function _ADCC_GetCurrentCountofConversions *****************
 49275 ;; Defined at:
 49276 ;;		line 198 in file "mcc_generated_files/adcc.c"
 49277 ;; Parameters:    Size  Location     Type
 49278 ;;		None
 49279 ;; Auto vars:     Size  Location     Type
 49280 ;;		None
 49281 ;; Return value:  Size  Location     Type
 49282 ;;                  1    wreg      unsigned char 
 49283 ;; Registers used:
 49284 ;;		wreg, status,2
 49285 ;; Tracked objects:
 49286 ;;		On entry : 0/0
 49287 ;;		On exit  : 0/0
 49288 ;;		Unchanged: 0/0
 49289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49294 ;;Total ram usage:        0 bytes
 49295 ;; Hardware stack levels used:    1
 49296 ;; This function calls:
 49297 ;;		Nothing
 49298 ;; This function is called by:
 49299 ;;		_ADC_PostProcessingHandler
 49300 ;; This function uses a non-reentrant model
 49301 ;;
 49302                           
 49303                           	psect	text213
 49304  01C896                     __ptext213:
 49305                           	opt callstack 0
 49306  01C896                     _ADCC_GetCurrentCountofConversions:
 49307                           	opt callstack 14
 49308                           
 49309                           ;adcc.c: 201: return ADCNT;
 49310                           
 49311                           ;incstack = 0
 49312  01C896  5067               	movf	3943,w,c	;volatile
 49313  01C898  0012               	return		;funcret
 49314  01C89A                     __end_of_ADCC_GetCurrentCountofConversions:
 49315                           	opt callstack 0
 49316                           
 49317 ;; *************** function _ADCC_GetConversionResult *****************
 49318 ;; Defined at:
 49319 ;;		line 130 in file "mcc_generated_files/adcc.c"
 49320 ;; Parameters:    Size  Location     Type
 49321 ;;		None
 49322 ;; Auto vars:     Size  Location     Type
 49323 ;;		None
 49324 ;; Return value:  Size  Location     Type
 49325 ;;                  2    0[COMRAM] unsigned int 
 49326 ;; Registers used:
 49327 ;;		wreg, status,2, status,0
 49328 ;; Tracked objects:
 49329 ;;		On entry : 0/0
 49330 ;;		On exit  : 0/0
 49331 ;;		Unchanged: 0/0
 49332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49333 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49335 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49336 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49337 ;;Total ram usage:        4 bytes
 49338 ;; Hardware stack levels used:    1
 49339 ;; This function calls:
 49340 ;;		Nothing
 49341 ;; This function is called by:
 49342 ;;		_ADC_PostProcessingHandler
 49343 ;; This function uses a non-reentrant model
 49344 ;;
 49345                           
 49346                           	psect	text214
 49347  01C686                     __ptext214:
 49348                           	opt callstack 0
 49349  01C686                     _ADCC_GetConversionResult:
 49350                           	opt callstack 14
 49351                           
 49352                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 49353                           
 49354                           ;incstack = 0
 49355  01C686  5064               	movf	3940,w,c	;volatile
 49356  01C688  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 49357  01C68A  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 49358  01C68C  5063               	movf	3939,w,c	;volatile
 49359  01C68E  2403               	addwf	??_ADCC_GetConversionResult,w,c
 49360  01C690  6E01               	movwf	?_ADCC_GetConversionResult,c
 49361  01C692  0E00               	movlw	0
 49362  01C694  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 49363  01C696  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 49364  01C698  0012               	return		;funcret
 49365  01C69A                     __end_of_ADCC_GetConversionResult:
 49366                           	opt callstack 0
 49367                           
 49368                           	psect	text215
 49369  000000                     __ptext215:
 49370                           	opt callstack 0
 49371                           
 49372                           	psect	rparam
 49373  0000                     
 49374                           	psect	temp
 49375  00005F                     btemp:
 49376                           	opt callstack 0
 49377  00005F                     	ds	1
 49378  0000                     int$flags	set	btemp
 49379  0000                     wtemp8	set	btemp+1
 49380  0000                     ttemp5	set	btemp+1
 49381  0000                     ttemp6	set	btemp+4
 49382  0000                     ttemp7	set	btemp+8
 49383                           tosu	equ	0xFFF
 49384                           tosh	equ	0xFFE
 49385                           tosl	equ	0xFFD
 49386                           stkptr	equ	0xFFC
 49387                           pclatu	equ	0xFFB
 49388                           pclath	equ	0xFFA
 49389                           pcl	equ	0xFF9
 49390                           tblptru	equ	0xFF8
 49391                           tblptrh	equ	0xFF7
 49392                           tblptrl	equ	0xFF6
 49393                           tablat	equ	0xFF5
 49394                           prodh	equ	0xFF4
 49395                           prodl	equ	0xFF3
 49396                           indf0	equ	0xFEF
 49397                           postinc0	equ	0xFEE
 49398                           postdec0	equ	0xFED
 49399                           preinc0	equ	0xFEC
 49400                           plusw0	equ	0xFEB
 49401                           fsr0h	equ	0xFEA
 49402                           fsr0l	equ	0xFE9
 49403                           wreg	equ	0xFE8
 49404                           indf1	equ	0xFE7
 49405                           postinc1	equ	0xFE6
 49406                           postdec1	equ	0xFE5
 49407                           preinc1	equ	0xFE4
 49408                           plusw1	equ	0xFE3
 49409                           fsr1h	equ	0xFE2
 49410                           fsr1l	equ	0xFE1
 49411                           bsr	equ	0xFE0
 49412                           indf2	equ	0xFDF
 49413                           postinc2	equ	0xFDE
 49414                           postdec2	equ	0xFDD
 49415                           preinc2	equ	0xFDC
 49416                           plusw2	equ	0xFDB
 49417                           fsr2h	equ	0xFDA
 49418                           fsr2l	equ	0xFD9
 49419                           status	equ	0xFD8


Data Sizes:
    Strings     6028
    Constant    948
    Data        38
    BSS         1610
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     89     158
    BANK1           256     97     187
    BANK2           256    190     256
    BANK3           256     47     256
    BANK4           256      8     200
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2printf@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> i2_putch(), putch(), Absolute function(), 

    i2printf@pb.ptr	PTR unsigned char  size(2) Largest target is 0
		 -> ftoa@buf(BANK3[17]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), 
		 -> OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), NULL(NULL[0]), 

    i2c2_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    i2c2_tr_queue.pTrFlag	PTR enum E9433 size(2) Largest target is 0
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    i2c2_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    OLED_updateHandler$6029	PTR const unsigned char  size(2) Largest target is 20
		 -> floatToEngineeringFormat@result(BANK3[20]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_300(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 16
		 -> terminalTextAttributes@print_string(BANK3[16]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 16
		 -> terminalTextAttributes@print_string(BANK3[16]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 68
		 -> line(BANK3[64]), OLED_RAM_Buffer.line3(BANK3[17]), OLED_RAM_Buffer.line2(BANK3[17]), OLED_RAM_Buffer.line1(BANK3[17]), 
		 -> OLED_RAM_Buffer.line0(BANK3[17]), OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@return_string(BANK3[40]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 68
		 -> line(BANK3[64]), OLED_RAM_Buffer.line3(BANK3[17]), OLED_RAM_Buffer.line2(BANK3[17]), OLED_RAM_Buffer.line1(BANK3[17]), 
		 -> OLED_RAM_Buffer.line0(BANK3[17]), OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@return_string(BANK3[40]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_190(CODE[12]), STR_189(CODE[13]), STR_188(CODE[16]), STR_187(CODE[14]), 
		 -> STR_186(CODE[15]), STR_185(CODE[16]), STR_184(CODE[10]), STR_183(CODE[16]), 
		 -> STR_181(CODE[13]), STR_179(CODE[11]), STR_178(CODE[2]), STR_177(CODE[2]), 
		 -> STR_176(CODE[16]), STR_175(CODE[2]), STR_174(CODE[2]), STR_172(CODE[13]), 
		 -> STR_171(CODE[15]), STR_170(CODE[2]), STR_169(CODE[2]), STR_167(CODE[13]), 
		 -> STR_166(CODE[15]), STR_165(CODE[2]), STR_164(CODE[2]), STR_162(CODE[2]), 
		 -> STR_161(CODE[2]), STR_160(CODE[13]), STR_159(CODE[2]), STR_153(CODE[13]), 
		 -> STR_152(CODE[2]), STR_151(CODE[2]), STR_149(CODE[2]), STR_137(CODE[14]), 
		 -> STR_136(CODE[2]), STR_135(CODE[2]), STR_133(CODE[11]), STR_132(CODE[13]), 
		 -> STR_131(CODE[2]), STR_130(CODE[2]), STR_129(CODE[9]), STR_128(CODE[11]), 
		 -> STR_127(CODE[14]), STR_126(CODE[2]), STR_125(CODE[2]), STR_123(CODE[12]), 
		 -> STR_122(CODE[2]), STR_121(CODE[2]), STR_119(CODE[14]), STR_118(CODE[2]), 
		 -> STR_117(CODE[2]), STR_115(CODE[10]), STR_114(CODE[2]), STR_113(CODE[2]), 
		 -> STR_111(CODE[9]), STR_110(CODE[2]), STR_109(CODE[2]), STR_107(CODE[13]), 
		 -> STR_106(CODE[12]), STR_105(CODE[2]), STR_104(CODE[2]), STR_102(CODE[13]), 
		 -> STR_101(CODE[14]), STR_100(CODE[2]), STR_99(CODE[2]), STR_97(CODE[13]), 
		 -> STR_96(CODE[2]), STR_95(CODE[2]), STR_93(CODE[13]), STR_92(CODE[12]), 
		 -> STR_91(CODE[2]), STR_90(CODE[2]), STR_88(CODE[14]), STR_87(CODE[2]), 
		 -> STR_86(CODE[2]), STR_84(CODE[13]), STR_83(CODE[2]), STR_82(CODE[2]), 
		 -> STR_80(CODE[14]), STR_79(CODE[2]), STR_78(CODE[2]), STR_77(CODE[15]), 
		 -> STR_76(CODE[16]), STR_75(CODE[14]), STR_74(CODE[11]), STR_73(CODE[14]), 
		 -> STR_72(CODE[15]), STR_71(CODE[16]), STR_70(CODE[10]), STR_69(CODE[16]), 
		 -> OLED_updateHandler@rev_id_str(BANK3[17]), STR_67(CODE[13]), OLED_updateHandler@dev_id_str(BANK3[17]), STR_65(CODE[11]), 
		 -> STR_64(CODE[16]), STR_63(CODE[16]), STR_62(CODE[14]), STR_42(CODE[10]), 
		 -> STR_41(CODE[11]), STR_40(CODE[11]), STR_39(CODE[15]), STR_38(CODE[11]), 
		 -> STR_37(CODE[10]), STR_36(CODE[11]), STR_35(CODE[10]), STR_34(CODE[10]), 
		 -> STR_33(CODE[10]), STR_22(CODE[10]), STR_21(CODE[6]), STR_20(CODE[14]), 
		 -> STR_19(CODE[9]), STR_18(CODE[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 68
		 -> OLED_RAM_Buffer(BANK3[68]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 68
		 -> OLED_RAM_Buffer(BANK3[68]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_228(CODE[5]), STR_226(CODE[25]), STR_222(CODE[22]), STR_221(CODE[14]), 
		 -> STR_219(CODE[18]), STR_217(CODE[17]), STR_215(CODE[17]), STR_199(CODE[15]), 
		 -> STR_197(CODE[6]), STR_194(CODE[6]), STR_191(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_328(CODE[2]), STR_327(CODE[3]), STR_326(CODE[3]), STR_325(CODE[3]), 
		 -> STR_324(CODE[3]), STR_323(CODE[3]), STR_322(CODE[3]), STR_321(CODE[3]), 
		 -> STR_320(CODE[3]), STR_319(CODE[3]), STR_318(CODE[2]), STR_317(CODE[3]), 
		 -> STR_316(CODE[3]), STR_315(CODE[3]), STR_314(CODE[3]), STR_313(CODE[3]), 
		 -> STR_312(CODE[3]), STR_311(CODE[3]), STR_310(CODE[3]), STR_309(CODE[3]), 
		 -> STR_308(CODE[2]), STR_307(CODE[2]), STR_306(CODE[2]), STR_305(CODE[2]), 
		 -> STR_304(CODE[2]), STR_303(CODE[2]), STR_302(CODE[2]), STR_301(CODE[2]), 
		 -> getStringSecondsAsTime@buff(BANK3[20]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 40
		 -> terminalTextAttributes@print_string(BANK3[16]), getStringSecondsAsTime@return_string(BANK3[40]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> terminalTextAttributes@print_string(BANK3[16]), getStringSecondsAsTime@return_string(BANK3[40]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_355(CODE[11]), STR_294(CODE[5]), STR_293(CODE[9]), STR_292(CODE[9]), 
		 -> STR_291(CODE[9]), STR_290(CODE[8]), STR_289(CODE[9]), STR_288(CODE[9]), 
		 -> STR_182(CODE[7]), STR_180(CODE[5]), STR_173(CODE[4]), STR_168(CODE[4]), 
		 -> STR_163(CODE[11]), STR_158(CODE[11]), STR_157(CODE[11]), STR_156(CODE[11]), 
		 -> STR_155(CODE[11]), STR_154(CODE[9]), STR_150(CODE[11]), STR_148(CODE[11]), 
		 -> STR_147(CODE[11]), STR_146(CODE[11]), STR_145(CODE[11]), STR_144(CODE[9]), 
		 -> STR_143(CODE[11]), STR_142(CODE[9]), STR_141(CODE[8]), STR_140(CODE[9]), 
		 -> STR_139(CODE[8]), STR_138(CODE[9]), STR_134(CODE[5]), STR_124(CODE[8]), 
		 -> STR_120(CODE[8]), STR_116(CODE[8]), STR_112(CODE[8]), STR_108(CODE[9]), 
		 -> STR_103(CODE[8]), STR_98(CODE[8]), STR_94(CODE[8]), STR_89(CODE[8]), 
		 -> STR_85(CODE[8]), STR_81(CODE[8]), STR_68(CODE[7]), STR_66(CODE[5]), 
		 -> STR_59(CODE[11]), STR_58(CODE[10]), STR_57(CODE[13]), STR_56(CODE[12]), 
		 -> STR_55(CODE[11]), STR_54(CODE[10]), STR_53(CODE[10]), STR_52(CODE[9]), 
		 -> STR_51(CODE[11]), STR_50(CODE[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK2[2]), ?_printf(BANK2[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), 
		 -> OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), 
		 -> OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 653
		 -> STR_352(CODE[60]), STR_351(CODE[24]), STR_350(CODE[24]), STR_349(CODE[24]), 
		 -> STR_348(CODE[27]), STR_347(CODE[20]), STR_346(CODE[35]), STR_345(CODE[34]), 
		 -> STR_344(CODE[37]), STR_343(CODE[34]), STR_342(CODE[36]), STR_341(CODE[35]), 
		 -> STR_340(CODE[33]), STR_339(CODE[35]), STR_338(CODE[20]), STR_337(CODE[23]), 
		 -> STR_336(CODE[20]), STR_335(CODE[22]), STR_334(CODE[21]), STR_333(CODE[19]), 
		 -> STR_332(CODE[21]), STR_331(CODE[27]), STR_330(CODE[18]), STR_329(CODE[11]), 
		 -> terminalTextAttributes@print_string(BANK3[16]), STR_299(CODE[4]), STR_298(CODE[4]), STR_297(CODE[4]), 
		 -> STR_296(CODE[4]), STR_295(CODE[5]), STR_287(CODE[41]), STR_286(CODE[96]), 
		 -> STR_285(CODE[62]), STR_284(CODE[34]), STR_283(CODE[52]), STR_282(CODE[56]), 
		 -> STR_281(CODE[55]), STR_280(CODE[27]), STR_279(CODE[65]), STR_278(CODE[40]), 
		 -> STR_277(CODE[64]), STR_276(CODE[42]), STR_275(CODE[36]), STR_274(CODE[63]), 
		 -> STR_273(CODE[61]), STR_272(CODE[47]), STR_271(CODE[60]), STR_270(CODE[59]), 
		 -> STR_269(CODE[20]), STR_268(CODE[56]), STR_267(CODE[52]), STR_266(CODE[23]), 
		 -> STR_265(CODE[45]), STR_264(CODE[44]), STR_263(CODE[23]), STR_262(CODE[48]), 
		 -> STR_261(CODE[52]), STR_260(CODE[58]), STR_259(CODE[35]), STR_258(CODE[32]), 
		 -> STR_257(CODE[64]), STR_256(CODE[30]), STR_255(CODE[31]), STR_254(CODE[63]), 
		 -> STR_253(CODE[33]), STR_252(CODE[35]), STR_251(CODE[37]), STR_250(CODE[40]), 
		 -> STR_249(CODE[28]), STR_248(CODE[46]), STR_247(CODE[31]), STR_246(CODE[52]), 
		 -> STR_245(CODE[14]), STR_244(CODE[28]), STR_243(CODE[50]), STR_242(CODE[29]), 
		 -> STR_241(CODE[36]), STR_240(CODE[45]), STR_239(CODE[88]), STR_238(CODE[37]), 
		 -> STR_237(CODE[3]), STR_236(CODE[30]), STR_235(CODE[46]), STR_234(CODE[39]), 
		 -> STR_233(CODE[62]), STR_232(CODE[57]), STR_231(CODE[653]), STR_230(CODE[22]), 
		 -> STR_229(CODE[3]), STR_227(CODE[29]), STR_225(CODE[3]), STR_224(CODE[47]), 
		 -> STR_223(CODE[3]), STR_220(CODE[24]), STR_218(CODE[23]), STR_216(CODE[23]), 
		 -> STR_214(CODE[3]), STR_213(CODE[3]), STR_212(CODE[54]), STR_211(CODE[3]), 
		 -> STR_210(CODE[56]), STR_209(CODE[3]), STR_208(CODE[60]), STR_207(CODE[61]), 
		 -> STR_206(CODE[3]), STR_205(CODE[62]), STR_204(CODE[3]), STR_203(CODE[50]), 
		 -> STR_202(CODE[3]), STR_201(CODE[45]), STR_200(CODE[3]), STR_198(CODE[54]), 
		 -> STR_196(CODE[4]), STR_195(CODE[5]), STR_193(CODE[4]), STR_192(CODE[5]), 
		 -> STR_12(CODE[28]), STR_11(CODE[23]), STR_10(CODE[47]), STR_9(CODE[30]), 
		 -> STR_8(CODE[46]), STR_7(CODE[39]), STR_6(CODE[62]), STR_5(CODE[57]), 
		 -> STR_4(CODE[39]), STR_3(CODE[44]), STR_2(CODE[52]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK2[2]), ?_printf(BANK2[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> i2_putch(), putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), 
		 -> OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), NULL(NULL[0]), 

    memmove@d1	PTR void  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), 

    memmove@s1	PTR const void  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_WriteInteger@s(COMRAM[20]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK2[2]), printf@ap(BANK2[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK2[2]), ?_printf(BANK2[2]), ftoa@buf(BANK3[17]), STR_353(CODE[7]), 
		 -> _doprnt@c(BANK2[1]), freqMeasConvert@qi_period(BANK1[4]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), 
		 -> OLED_updateHandler@dev_id_str(BANK3[17]), OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), getStringSecondsAsTime@return_string(BANK3[40]), 
		 -> STR_49(CODE[10]), STR_48(CODE[13]), STR_47(CODE[13]), STR_46(CODE[12]), 
		 -> STR_45(CODE[12]), STR_44(CODE[13]), STR_43(CODE[12]), STR_32(CODE[16]), 
		 -> STR_31(CODE[22]), STR_30(CODE[21]), STR_29(CODE[27]), STR_28(CODE[41]), 
		 -> STR_27(CODE[32]), STR_26(CODE[19]), STR_25(CODE[16]), STR_24(CODE[15]), 
		 -> STR_23(CODE[16]), STR_17(CODE[10]), STR_16(CODE[6]), STR_15(CODE[14]), 
		 -> STR_14(CODE[9]), STR_13(CODE[5]), LM73Convert@Ambient_Conv(BANK2[2]), LM73Convert@POS5_Conv(BANK2[2]), 
		 -> LM73Convert@QI_Conv(BANK2[2]), NULL(NULL[0]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 653
		 -> STR_355(CODE[11]), STR_352(CODE[60]), STR_351(CODE[24]), STR_350(CODE[24]), 
		 -> STR_349(CODE[24]), STR_348(CODE[27]), STR_347(CODE[20]), STR_346(CODE[35]), 
		 -> STR_345(CODE[34]), STR_344(CODE[37]), STR_343(CODE[34]), STR_342(CODE[36]), 
		 -> STR_341(CODE[35]), STR_340(CODE[33]), STR_339(CODE[35]), STR_338(CODE[20]), 
		 -> STR_337(CODE[23]), STR_336(CODE[20]), STR_335(CODE[22]), STR_334(CODE[21]), 
		 -> STR_333(CODE[19]), STR_332(CODE[21]), STR_331(CODE[27]), STR_330(CODE[18]), 
		 -> STR_329(CODE[11]), terminalTextAttributes@print_string(BANK3[16]), STR_299(CODE[4]), STR_298(CODE[4]), 
		 -> STR_297(CODE[4]), STR_296(CODE[4]), STR_295(CODE[5]), STR_294(CODE[5]), 
		 -> STR_293(CODE[9]), STR_292(CODE[9]), STR_291(CODE[9]), STR_290(CODE[8]), 
		 -> STR_289(CODE[9]), STR_288(CODE[9]), STR_287(CODE[41]), STR_286(CODE[96]), 
		 -> STR_285(CODE[62]), STR_284(CODE[34]), STR_283(CODE[52]), STR_282(CODE[56]), 
		 -> STR_281(CODE[55]), STR_280(CODE[27]), STR_279(CODE[65]), STR_278(CODE[40]), 
		 -> STR_277(CODE[64]), STR_276(CODE[42]), STR_275(CODE[36]), STR_274(CODE[63]), 
		 -> STR_273(CODE[61]), STR_272(CODE[47]), STR_271(CODE[60]), STR_270(CODE[59]), 
		 -> STR_269(CODE[20]), STR_268(CODE[56]), STR_267(CODE[52]), STR_266(CODE[23]), 
		 -> STR_265(CODE[45]), STR_264(CODE[44]), STR_263(CODE[23]), STR_262(CODE[48]), 
		 -> STR_261(CODE[52]), STR_260(CODE[58]), STR_259(CODE[35]), STR_258(CODE[32]), 
		 -> STR_257(CODE[64]), STR_256(CODE[30]), STR_255(CODE[31]), STR_254(CODE[63]), 
		 -> STR_253(CODE[33]), STR_252(CODE[35]), STR_251(CODE[37]), STR_250(CODE[40]), 
		 -> STR_249(CODE[28]), STR_248(CODE[46]), STR_247(CODE[31]), STR_246(CODE[52]), 
		 -> STR_245(CODE[14]), STR_244(CODE[28]), STR_243(CODE[50]), STR_242(CODE[29]), 
		 -> STR_241(CODE[36]), STR_240(CODE[45]), STR_239(CODE[88]), STR_238(CODE[37]), 
		 -> STR_237(CODE[3]), STR_236(CODE[30]), STR_235(CODE[46]), STR_234(CODE[39]), 
		 -> STR_233(CODE[62]), STR_232(CODE[57]), STR_231(CODE[653]), STR_230(CODE[22]), 
		 -> STR_229(CODE[3]), STR_227(CODE[29]), STR_225(CODE[3]), STR_224(CODE[47]), 
		 -> STR_223(CODE[3]), STR_220(CODE[24]), STR_218(CODE[23]), STR_216(CODE[23]), 
		 -> STR_214(CODE[3]), STR_213(CODE[3]), STR_212(CODE[54]), STR_211(CODE[3]), 
		 -> STR_210(CODE[56]), STR_209(CODE[3]), STR_208(CODE[60]), STR_207(CODE[61]), 
		 -> STR_206(CODE[3]), STR_205(CODE[62]), STR_204(CODE[3]), STR_203(CODE[50]), 
		 -> STR_202(CODE[3]), STR_201(CODE[45]), STR_200(CODE[3]), STR_198(CODE[54]), 
		 -> STR_196(CODE[4]), STR_195(CODE[5]), STR_193(CODE[4]), STR_192(CODE[5]), 
		 -> STR_182(CODE[7]), STR_180(CODE[5]), STR_173(CODE[4]), STR_168(CODE[4]), 
		 -> STR_163(CODE[11]), STR_158(CODE[11]), STR_157(CODE[11]), STR_156(CODE[11]), 
		 -> STR_155(CODE[11]), STR_154(CODE[9]), STR_150(CODE[11]), STR_148(CODE[11]), 
		 -> STR_147(CODE[11]), STR_146(CODE[11]), STR_145(CODE[11]), STR_144(CODE[9]), 
		 -> STR_143(CODE[11]), STR_142(CODE[9]), STR_141(CODE[8]), STR_140(CODE[9]), 
		 -> STR_139(CODE[8]), STR_138(CODE[9]), STR_134(CODE[5]), STR_124(CODE[8]), 
		 -> STR_120(CODE[8]), STR_116(CODE[8]), STR_112(CODE[8]), STR_108(CODE[9]), 
		 -> STR_103(CODE[8]), STR_98(CODE[8]), STR_94(CODE[8]), STR_89(CODE[8]), 
		 -> STR_85(CODE[8]), STR_81(CODE[8]), STR_68(CODE[7]), STR_66(CODE[5]), 
		 -> STR_59(CODE[11]), STR_58(CODE[10]), STR_57(CODE[13]), STR_56(CODE[12]), 
		 -> STR_55(CODE[11]), STR_54(CODE[10]), STR_53(CODE[10]), STR_52(CODE[9]), 
		 -> STR_51(CODE[11]), STR_50(CODE[10]), STR_12(CODE[28]), STR_11(CODE[23]), 
		 -> STR_10(CODE[47]), STR_9(CODE[30]), STR_8(CODE[46]), STR_7(CODE[39]), 
		 -> STR_6(CODE[62]), STR_5(CODE[57]), STR_4(CODE[39]), STR_3(CODE[44]), 
		 -> STR_2(CODE[52]), STR_1(CODE[4]), 

    S4915__prbuf$func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    S4915__prbuf$ptr	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), 
		 -> OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), 
		 -> OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 6
		 -> sprintf@pb(BANK2[5]), printf@pb(BANK2[5]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 16
		 -> terminalTextAttributes@print_string(BANK3[16]), 

    floatToEngineeringFormat@res	PTR unsigned char  size(2) Largest target is 20
		 -> floatToEngineeringFormat@result(BANK3[20]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), 

    sp__floatToEngineeringFormat	PTR unsigned char  size(2) Largest target is 20
		 -> floatToEngineeringFormat@result(BANK3[20]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 68
		 -> OLED_RAM_Buffer(BANK3[68]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK3[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_WriteInteger@s(COMRAM[20]), 

    OLED_WriteString@s	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), OLED_RAM_Buffer(BANK3[68]), STR_61(CODE[1]), STR_60(CODE[1]), 
		 -> OLED_WriteInteger@s(COMRAM[20]), 

    sp__memmove	PTR void  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), 

    OLED_PutChar@input_base	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    sp__getStringSecondsAsTime	PTR unsigned char  size(2) Largest target is 40
		 -> getStringSecondsAsTime@return_string(BANK3[40]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 40
		 -> terminalTextAttributes@print_string(BANK3[16]), getStringSecondsAsTime@return_string(BANK3[40]), 

    sp__getDeviceIDString	PTR inline unsigned char  size(2) Largest target is 13
		 -> STR_49(CODE[10]), STR_48(CODE[13]), STR_47(CODE[13]), STR_46(CODE[12]), 
		 -> STR_45(CODE[12]), STR_44(CODE[13]), STR_43(CODE[12]), 

    sp__getCauseOfResetStringSmall	PTR inline unsigned char  size(2) Largest target is 15
		 -> STR_42(CODE[10]), STR_41(CODE[11]), STR_40(CODE[11]), STR_39(CODE[15]), 
		 -> STR_38(CODE[11]), STR_37(CODE[10]), STR_36(CODE[11]), STR_35(CODE[10]), 
		 -> STR_34(CODE[10]), STR_33(CODE[10]), 

    getCauseOfResetStringSmall@strings	PTR unsigned char [9] size(2) Largest target is 15
		 -> STR_41(CODE[11]), STR_40(CODE[11]), STR_39(CODE[15]), STR_38(CODE[11]), 
		 -> STR_37(CODE[10]), STR_36(CODE[11]), STR_35(CODE[10]), STR_34(CODE[10]), 
		 -> STR_33(CODE[10]), 

    getCauseOfResetString@strings	PTR unsigned char [9] size(2) Largest target is 41
		 -> STR_31(CODE[22]), STR_30(CODE[21]), STR_29(CODE[27]), STR_28(CODE[41]), 
		 -> STR_27(CODE[32]), STR_26(CODE[19]), STR_25(CODE[16]), STR_24(CODE[15]), 
		 -> STR_23(CODE[16]), 

    sp__getNXQChargeStateStringCaps	PTR unsigned char  size(2) Largest target is 14
		 -> STR_22(CODE[10]), STR_21(CODE[6]), STR_20(CODE[14]), STR_19(CODE[9]), 
		 -> STR_18(CODE[5]), 

    sp__getNXQChargeStateString	PTR unsigned char  size(2) Largest target is 14
		 -> STR_17(CODE[10]), STR_16(CODE[6]), STR_15(CODE[14]), STR_14(CODE[9]), 
		 -> STR_13(CODE[5]), 

    sp__getCauseOfResetString	PTR inline unsigned char  size(2) Largest target is 41
		 -> STR_32(CODE[16]), STR_31(CODE[22]), STR_30(CODE[21]), STR_29(CODE[27]), 
		 -> STR_28(CODE[41]), STR_27(CODE[32]), STR_26(CODE[19]), STR_25(CODE[16]), 
		 -> STR_24(CODE[15]), STR_23(CODE[16]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIErrorTimerHandler(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIErrorTimerHandler(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    I2C2_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73TempSensorInitialize@output_data_array(BANK2[2]), 
		 -> NULL(NULL[0]), 

    I2C2_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    I2C2_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterWrite@trBlock(BANK1[5]), 

    I2C2_MasterReadTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 18
		 -> LM73_temp_results(BANK2[18]), 

    I2C2_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    I2C2_MasterReadTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), 

    i2c2_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    i2c2_object.pTrTail.pTrFlag	PTR enum E9433 size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    i2c2_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    I2C2_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    I2C2_MasterTRBInsert@pflag	PTR enum E9433 size(2) Largest target is 1
		 -> I2C_STATUS(BANK1[1]), 

    I2C2_MasterRead@pflag	PTR enum E9433 size(2) Largest target is 1
		 -> I2C_STATUS(BANK1[1]), 

    I2C2_MasterRead@pdata	PTR unsigned char  size(2) Largest target is 18
		 -> LM73_temp_results(BANK2[18]), 

    F10007.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    I2C2_MasterWrite@pflag	PTR enum E9433 size(2) Largest target is 1
		 -> I2C_STATUS(BANK1[1]), 

    I2C2_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73TempSensorInitialize@output_data_array(BANK2[2]), 
		 -> NULL(NULL[0]), 

    F10002.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    I2C2_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    p_i2c2_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    p_i2c2_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), NULL(NULL[0]), 

    i2c2_object.pTrHead.pTrFlag	PTR enum E9433 size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    i2c2_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    S2089$pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    p_i2c2_current.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    S2093$pTrFlag	PTR enum E9433 size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    p_i2c2_current.pTrFlag	PTR enum E9433 size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    S2093$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    p_i2c2_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    p_i2c2_current	PTR volatile struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK1[5]), NULL(NULL[0]), 

    S2104$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK1[5]), 

    i2c2_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK1[5]), 

    S2104$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK1[5]), 

    i2c2_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK1[5]), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIIdleChargedTimerHandler(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIIdleChargedTimerHandler(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_acquisitionTimerHandler(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_acquisitionTimerHandler(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerHandler(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerHandler(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_PostProcessingHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_PostProcessingHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    IOCBF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIChargeIOCHandler(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIChargeIOCHandler(), IOCBF3_DefaultInterruptHandler(), Absolute function(), 

    IOCBF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIIdleIOCHandler(), IOCBF2_DefaultInterruptHandler(), 

    IOCBF2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIIdleIOCHandler(), IOCBF2_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> rightCapTouchHandler(), INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> rightCapTouchHandler(), INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> leftCapTouchHandler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> leftCapTouchHandler(), INT1_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR1_ISR->i2_TMR1_WriteTimer
    _TMR0_ISR->_heartbeatTimerHandler
    _heartbeatTimerHandler->i2___fladd
    i2_TMR1_Reload->i2_TMR1_WriteTimer
    i2_TMR3_Reload->i2_TMR3_WriteTimer
    i2__doprnt->i2___fladd
    i2_scale->i2___flmul
    i2___awdiv->i2___awmod
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___flmul
    i2___lwdiv->i2___lwmod
    i2___llmod->i2___lldiv
    i2___fltol->i2_scale
    _ADC_PostProcessingHandler->i2___fladd
    i2___xxtofl->_ADCC_GetConversionResult
    i2___xxtofl->_ADCC_GetFilterValue
    i2___flsub->i2___fladd
    i2___fladd->i2_fround
    i2___flmul->i2___fldiv
    i2___fldiv->i2___xxtofl
    _fabs->i2___flneg

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _heartbeatTimerHandler->i2___fladd
    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2__doprnt
    i2__doprnt->i2___flsub
    _ADCC_ThresholdISR->_ADC_PostProcessingHandler
    _ADC_PostProcessingHandler->i2___flsub
    i2___flsub->i2___fladd

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _INTERRUPT_InterruptManagerLow->_CCP2_CaptureISR
    _TMR3_ISR->i1_TMR3_WriteTimer
    i1_TMR3_Reload->i1_TMR3_WriteTimer
    _ADC_acquisitionTimerHandler->_ADCC_StartConversion
    _I2C2_ISR->_I2C2_Stop
    _CCP2_CaptureISR->_CCP2_CallBack
    _CCP2_CallBack->_freqMeasConvert
    _freqMeasConvert->i1___flmul
    i1___flmul->i1___fldiv
    i1___fldiv->i1___fladd
    i1___fladd->i1___xxtofl

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminalTextAttributes
    _printErrorHandlerStatus->_terminalTextAttributes
    _printCurrentMeasurements->_terminalTextAttributes
    _terminalTextAttributesReset->_printf
    _terminalTextAttributes->_printf
    _getStringSecondsAsTime->_sprintf
    _getUserID->_FLASH_ReadWord
    _getDeviceIDString->_getDeviceID
    _clearUARTErrors->_updateErrorLEDs
    _clearI2CErrors->_updateErrorLEDs
    _clearADCErrors->_updateErrorLEDs
    _terminalSetCursorHome->_printf
    _terminalClearScreen->_printf
    _printf->_floatToEngineeringFormat
    _TMR3_Reload->_TMR3_WriteTimer
    _TMR1_Reload->_TMR1_WriteTimer
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR3_Initialize
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF3_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _OLED_updateHandler->_floatToEngineeringFormat
    _strcpy->_getCauseOfResetStringSmall
    _getYearsFromOnTime->___lldiv
    _getSecondsFromOnTime->___lldiv
    _getMinutesFromOnTime->___lldiv
    _getMinorRevisionID->_FLASH_ReadWord
    _getMajorRevisionID->_FLASH_ReadWord
    _getHoursFromOnTime->___lldiv
    _getDeviceID->_FLASH_ReadWord
    _FLASH_ReadWord->_FLASH_ReadByte
    _getDaysFromOnTime->___lldiv
    _floatToEngineeringFormat->_sprintf
    _sprintf->__doprnt
    __doprnt->___flsub
    _scale->___flmul
    ___awdiv->___awmod
    _putch->_EUSART2_Write
    _fround->___flmul
    ___lwdiv->___lwmod
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___xxtofl
    ___fladd->_fround
    _abs->___fltol
    _OLED_UpdateFromRAMBuffer->_OLED_WriteString
    _OLED_YX->_OLED_Command
    _OLED_WriteString->_OLED_PutChar
    _OLED_Init->_OLED_Command
    _OLED_Command->_I2C2_MasterWrite
    _OLED_Clear->_OLED_PutChar
    _OLED_PutChar->_I2C2_MasterWrite
    _LM73TempSensorInitialize->_I2C2_MasterWrite
    _LM73AcquisitionHandler->_LM73Convert
    _LM73Convert->___xxtofl
    ___xxtofl->_abs
    ___flmul->___awdiv
    _I2C2_MasterWrite->_I2C2_MasterWriteTRBBuild
    _I2C2_MasterRead->_I2C2_MasterReadTRBBuild

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_terminal_ringBufferPull
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminalTextAttributes
    _printErrorHandlerStatus->_terminalTextAttributes
    _printCurrentMeasurements->_terminalTextAttributes
    _printf->_getStringSecondsAsTime

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_terminal_ringBufferPull

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 2208012
                                              6 BANK4      2     2      0
       _ADCC_SetADTIInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
         _IOCBF2_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
             _LM73AcquisitionHandler
           _LM73TempSensorInitialize
                         _OLED_Clear
                          _OLED_Init
                 _OLED_updateHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                        _TMR1_Reload
           _TMR1_SetInterruptHandler
                     _TMR1_StopTimer
           _TMR2_SetInterruptHandler
                        _TMR3_Reload
           _TMR3_SetInterruptHandler
                     _TMR3_StopTimer
                     _TMR5_StopTimer
                    _TMR5_WriteTimer
              _freqMeasStartCaptures
                    _getCauseOfReset
              _getCauseOfResetString
           _printCurrentMeasurements
                             _printf
                _terminalClearScreen
              _terminalSetCursorHome
             _terminalTextAttributes
        _terminalTextAttributesReset
            _terminal_ringBufferPull
                    _updateErrorLEDs
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              7     7      0 1064715
                                             46 BANK3      1     1      0
                                              0 BANK4      6     6      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                        6     4      2 1063537
                                            186 BANK2      4     2      2
                                             44 BANK3      2     2      0
                     _clearADCErrors
                     _clearI2CErrors
                    _clearUARTErrors
              _getCauseOfResetString
                        _getDeviceID
                  _getDeviceIDString
                 _getMajorRevisionID
                 _getMinorRevisionID
             _getStringSecondsAsTime
                          _getUserID
           _printCurrentMeasurements
            _printErrorHandlerStatus
                             _printf
                             _strcmp
                             _strlen
             _terminalTextAttributes
        _terminalTextAttributesReset
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               7     3      4    2113
                                              0 BANK2      7     3      4
 ---------------------------------------------------------------------------------
 (3) _printErrorHandlerStatus                              0     0      0  258526
                        _getADCError
                        _getI2CError
                       _getUARTError
                             _printf
             _terminalTextAttributes
        _terminalTextAttributesReset
 ---------------------------------------------------------------------------------
 (3) _printCurrentMeasurements                             0     0      0  445489
                            ___fldiv
           _floatToEngineeringFormat
            _getNXQChargeStateString
             _getStringSecondsAsTime
                             _printf
             _terminalTextAttributes
        _terminalTextAttributesReset
 ---------------------------------------------------------------------------------
 (3) _terminalTextAttributesReset                          0     0      0   79257
                             _printf
 ---------------------------------------------------------------------------------
 (3) _terminalTextAttributes                              20    18      2  100012
                                            184 BANK2      2     0      2
                                             26 BANK3     18    18      0
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (4) _strncpy                                              8     2      6     472
                                              0 BANK2      8     2      6
 ---------------------------------------------------------------------------------
 (4) _getStringSecondsAsTime                              35    31      4   93830
                                            159 BANK2      8     4      4
                                              0 BANK3     26    26      0
                            ___lldiv
                             ___wmul
                            _sprintf
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strcat                                               6     2      4    6083
                                              0 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 (4) _getNXQChargeStateString                              2     0      2       0
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (3) _getUserID                                            8     6      2     884
                                             11 BANK2      8     6      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getDeviceIDString                                    4     2      2     121
                                             13 BANK2      4     2      2
                        _getDeviceID (ARG)
 ---------------------------------------------------------------------------------
 (3) _getCauseOfResetString                                3     1      2      62
                                              0 BANK2      3     1      2
 ---------------------------------------------------------------------------------
 (3) _clearUARTErrors                                      0     0      0       0
                    _updateErrorLEDs
 ---------------------------------------------------------------------------------
 (3) _clearI2CErrors                                       0     0      0       0
                    _updateErrorLEDs
 ---------------------------------------------------------------------------------
 (3) _clearADCErrors                                       0     0      0       0
                    _updateErrorLEDs
 ---------------------------------------------------------------------------------
 (1) _updateErrorLEDs                                      1     1      0       0
                                              0 BANK2      1     1      0
                        _getADCError
                        _getI2CError
                       _getUARTError
 ---------------------------------------------------------------------------------
 (2) _getUARTError                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getI2CError                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getADCError                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      37
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminalSetCursorHome                                0     0      0   79257
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminalClearScreen                                  0     0      0   79257
                             _printf
 ---------------------------------------------------------------------------------
 (4) _printf                                              15     7      8   79257
                                            169 BANK2     15     7      8
                            ___fldiv (ARG)
                            __doprnt
           _floatToEngineeringFormat (ARG)
              _getCauseOfResetString (ARG)
                        _getDeviceID (ARG)
                  _getDeviceIDString (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
            _getNXQChargeStateString (ARG)
             _getStringSecondsAsTime (ARG)
                          _getUserID (ARG)
 ---------------------------------------------------------------------------------
 (1) _getCauseOfReset                                      1     1      0      58
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _freqMeasStartCaptures                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR5_WriteTimer                                      2     0      2     304
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR5_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR3_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR3_Reload                                          0     0      0     269
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR3_WriteTimer                                      2     0      2     269
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_Reload                                          0     0      0     269
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_WriteTimer                                      2     0      2     269
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2141
                    _ADCC_Initialize
                    _CCP2_Initialize
                 _EUSART2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
                    _I2C2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0       0
                                              0 BANK2      2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0     211
                                              3 BANK2      2     2      0
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     211
                                              3 BANK2      2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     422
         _IOCBF2_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF3_SetInterruptHandler                           3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (3) _IOCBF2_SetInterruptHandler                           3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     422
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (1) _OLED_updateHandler                                  38    38      0  238879
                                            169 BANK2      2     2      0
                                              0 BANK3     36    36      0
           _OLED_UpdateFromRAMBuffer
           _floatToEngineeringFormat
         _getCauseOfResetStringSmall
                  _getDaysFromOnTime
                        _getDeviceID
                 _getHoursFromOnTime
                 _getMajorRevisionID
                 _getMinorRevisionID
               _getMinutesFromOnTime
        _getNXQChargeStateStringCaps
               _getSecondsFromOnTime
                 _getYearsFromOnTime
                            _sprintf
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4   18109
                                              3 BANK2      6     2      4
         _getCauseOfResetStringSmall (ARG)
        _getNXQChargeStateStringCaps (ARG)
 ---------------------------------------------------------------------------------
 (2) _getYearsFromOnTime                                   5     1      4    4325
                                             13 BANK2      5     1      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _getSecondsFromOnTime                                13     9      4    8199
                                             13 BANK2     13     9      4
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _getNXQChargeStateStringCaps                          2     0      2       0
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (2) _getMinutesFromOnTime                                12     8      4    8041
                                             13 BANK2     12     8      4
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _getMinorRevisionID                                   2     2      0     819
                                             11 BANK2      2     2      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMajorRevisionID                                   5     5      0     819
                                             11 BANK2      5     5      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (2) _getHoursFromOnTime                                  11     7      4    7883
                                             13 BANK2     11     7      4
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _getDeviceID                                          2     0      2     785
                                             11 BANK2      2     0      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (4) _FLASH_ReadWord                                       7     3      4     785
                                              4 BANK2      7     3      4
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (5) _FLASH_ReadByte                                       4     0      4     363
                                              0 BANK2      4     0      4
 ---------------------------------------------------------------------------------
 (2) _getDaysFromOnTime                                   10     6      4    7635
                                             13 BANK2     10     6      4
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _getCauseOfResetStringSmall                           3     1      2      62
                                              0 BANK2      3     1      2
 ---------------------------------------------------------------------------------
 (4) _floatToEngineeringFormat                            10     6      4   88840
                                            159 BANK2     10     6      4
                            ___fldiv
                             ___fleq
                             ___flge
                            ___fltol
                           ___xxtofl
                                _abs
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             19     7     12   77536
                                            140 BANK2     19     7     12
                            ___fldiv (ARG)
                            __doprnt
                  _getDaysFromOnTime (ARG)
                        _getDeviceID (ARG)
                 _getHoursFromOnTime (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
               _getMinutesFromOnTime (ARG)
               _getSecondsFromOnTime (ARG)
                 _getYearsFromOnTime (ARG)
 ---------------------------------------------------------------------------------
 (5) __doprnt                                             57    51      6   66922
                                             84 BANK2     56    50      6
                   Absolute function *
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch *
                              _scale
 ---------------------------------------------------------------------------------
 (6) _scale                                                9     5      4   12018
                                             39 BANK2      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4    1513
                                              0 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4    1705
                                              6 BANK2      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      93
                                              1 BANK2      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART2_Write                                        1     1      0      62
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              3     3      0      99
                                              0 BANK2      3     3      0
 ---------------------------------------------------------------------------------
 (6) _fround                                              13     9      4   10494
                                             39 BANK2     13     9      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     912
                                              0 BANK2      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4    1061
                                              5 BANK2      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (6) __tdiv_to_l_                                         17     9      8     634
                                              0 BANK2     17     9      8
 ---------------------------------------------------------------------------------
 (6) __div_to_l_                                          14     6      8     634
                                              0 BANK2     14     6      8
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    3152
                                              0 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8    1062
                                             13 BANK2      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8    4201
                                              0 BANK2     13     5      8
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     845
                                             48 BANK2     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    5515
                                             76 BANK2      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    4322
                                             52 BANK2     16     8      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     284
                                              0 BANK2      4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    2216
                                              0 BANK2     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     950
                                              0 BANK2     12     4      8
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             58 BANK2      4     2      2
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4293
                                              0 BANK2     25    17      8
 ---------------------------------------------------------------------------------
 (2) _OLED_UpdateFromRAMBuffer                             4     4      0   14918
                                             35 BANK2      4     4      0
                   _OLED_WriteString
                            _OLED_YX
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     940
                                              0 BANK2      4     2      2
 ---------------------------------------------------------------------------------
 (3) _OLED_YX                                              5     4      1    6177
                                             20 BANK2      5     4      1
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (3) _OLED_WriteString                                     2     0      2    7405
                                             33 BANK2      2     0      2
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (1) _OLED_Init                                            0     0      0    5724
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (4) _OLED_Command                                         4     4      0    5724
                                             16 BANK2      4     4      0
                   _I2C2_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _OLED_Clear                                           4     4      0    6756
                                             33 BANK2      4     4      0
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (4) _OLED_PutChar                                        17    17      0    6620
                                             16 BANK2     17    17      0
                   _I2C2_MasterWrite
                            _memmove
 ---------------------------------------------------------------------------------
 (5) _memmove                                             12     6      6     791
                                              0 BANK2     12     6      6
 ---------------------------------------------------------------------------------
 (1) _LM73TempSensorInitialize                             3     3      0    6046
                                             16 BANK2      3     3      0
                   _I2C2_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _LM73AcquisitionHandler                               0     0      0   18361
                    _I2C2_MasterRead
                   _I2C2_MasterWrite
                        _LM73Convert
 ---------------------------------------------------------------------------------
 (2) _LM73Convert                                          9     9      0   10436
                                             76 BANK2      9     9      0
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    1710
                                             62 BANK2     14    10      4
                            ___flmul (ARG)
                            ___fltol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    8171
                                             14 BANK2     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (5) _I2C2_MasterWrite                                     7     0      7    5567
                                              9 BANK2      7     0      7
               _I2C2_MasterTRBInsert
           _I2C2_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (6) _I2C2_MasterWriteTRBBuild                             9     2      7     546
                                              0 BANK2      9     2      7
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterRead                                      7     0      7    2358
                                              9 BANK2      7     0      7
            _I2C2_MasterReadTRBBuild
               _I2C2_MasterTRBInsert
 ---------------------------------------------------------------------------------
 (6) _I2C2_MasterTRBInsert                                 6     2      4     546
                                              0 BANK2      6     2      4
   _I2C2_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (7) _I2C2_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C2_MasterReadTRBBuild                              9     2      7     577
                                              0 BANK2      9     2      7
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerLow                        9     9      0    5634
                                             88 BANK1      9     9      0
                    _CCP2_CaptureISR
               _I2C2_BusCollisionISR
                           _I2C2_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR3_ISR                                            0     0      0     280
                   Absolute function *
          _QIIdleChargedTimerHandler *
       _TMR3_DefaultInterruptHandler *
                  i1_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (11) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _QIIdleChargedTimerHandler                           0     0      0     140
                      i1_TMR3_Reload
                   i1_TMR3_StopTimer
 ---------------------------------------------------------------------------------
 (12) i1_TMR3_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i1_TMR3_Reload                                       0     0      0     140
                  i1_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (11) i1_TMR3_WriteTimer                                   2     0      2     140
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR2_ISR                                            0     0      0      22
                   Absolute function *
        _ADC_acquisitionTimerHandler *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_acquisitionTimerHandler                         0     0      0      22
              _ADCC_ClearAccumulator
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
                     _TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (12) _TMR2_StopTimer                                      0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (13) _TMR2_Stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADCC_StartConversion                                1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADCC_ClearAccumulator                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C2_ISR                                            2     2      0      31
                                              3 BANK1      2     2      0
              _I2C2_FunctionComplete
                          _I2C2_Stop
 ---------------------------------------------------------------------------------
 (11) _I2C2_Stop                                           3     3      0      31
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (11) _I2C2_FunctionComplete                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C2_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _CCP2_CaptureISR                                     2     2      0    5301
                                             86 BANK1      2     2      0
                      _CCP2_CallBack
 ---------------------------------------------------------------------------------
 (11) _CCP2_CallBack                                       2     0      2    5254
                                             84 BANK1      2     0      2
                    _freqMeasConvert
 ---------------------------------------------------------------------------------
 (12) _freqMeasConvert                                     4     4      0    5156
                                             80 BANK1      4     4      0
                          i1___fladd
                          i1___fldiv
                          i1___flmul
                         i1___xxtofl
 ---------------------------------------------------------------------------------
 (13) i1___xxtofl                                         14    10      4     348
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (13) i1___flmul                                          25    17      8    1518
                                             55 BANK1     25    17      8
                          i1___fladd (ARG)
                          i1___fldiv (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) i1___fldiv                                          25    17      8    1225
                                             30 BANK1     25    17      8
                          i1___fladd (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) i1___fladd                                          16     8      8    2036
                                             14 BANK1     16     8      8
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManagerHigh                     12    12      0   60547
                                             77 BANK0     12    12      0
                   Absolute function *
                  _ADCC_ThresholdISR
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0     280
                   Absolute function *
                _QIErrorTimerHandler *
       _TMR1_DefaultInterruptHandler *
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _QIErrorTimerHandler                                 0     0      0     140
                      i2_TMR1_Reload
                   i2_TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (17) i2_TMR1_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0    4154
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
              _heartbeatTimerHandler *
 ---------------------------------------------------------------------------------
 (16) _heartbeatTimerHandler                               1     1      0    4154
                                             93 COMRAM     1     1      0
                          i2___fladd
                          i2___llmod
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _PIN_MANAGER_IOC                                     0     0      0     368
                         _IOCBF2_ISR
                         _IOCBF3_ISR
 ---------------------------------------------------------------------------------
 (16) _IOCBF3_ISR                                          0     0      0     254
                   Absolute function *
     _IOCBF3_DefaultInterruptHandler *
                 _QIChargeIOCHandler *
 ---------------------------------------------------------------------------------
 (17) _QIChargeIOCHandler                                  0     0      0     254
                    _TMR3_StartTimer
                      i2_TMR1_Reload
                      i2_TMR3_Reload
 ---------------------------------------------------------------------------------
 (17) i2_TMR1_Reload                                       0     0      0     140
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (16) i2_TMR1_WriteTimer                                   2     0      2     140
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _IOCBF3_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _IOCBF2_ISR                                          0     0      0     114
                   Absolute function *
     _IOCBF2_DefaultInterruptHandler *
                   _QIIdleIOCHandler *
 ---------------------------------------------------------------------------------
 (17) _QIIdleIOCHandler                                    0     0      0     114
                    _TMR1_StartTimer
                    _TMR3_StartTimer
                      i2_TMR3_Reload
 ---------------------------------------------------------------------------------
 (18) i2_TMR3_Reload                                       0     0      0     114
                  i2_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (19) i2_TMR3_WriteTimer                                   2     0      2     114
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _TMR3_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _TMR1_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _IOCBF2_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
               _rightCapTouchHandler *
 ---------------------------------------------------------------------------------
 (17) _rightCapTouchHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                _leftCapTouchHandler *
 ---------------------------------------------------------------------------------
 (17) _leftCapTouchHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_Receive_ISR                                 0     0      0   39568
                           i2_printf
 ---------------------------------------------------------------------------------
 (16) i2_printf                                            9     7      2   39568
                                             68 BANK0      9     7      2
                          i2__doprnt
 ---------------------------------------------------------------------------------
 (17) i2__doprnt                                          57    51      6   39040
                                             12 BANK0     56    50      6
                   Absolute function *
                          i2___awdiv
                          i2___fladd
                           i2___fleq
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                          i2___lldiv
                          i2___llmod
                           i2___wmul
                         i2___xxtofl
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch *
                            i2_scale
 ---------------------------------------------------------------------------------
 (18) i2_scale                                             9     5      4    6850
                                             68 COMRAM     9     5      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (19) i2___awmod                                           6     2      4     853
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (19) i2___awdiv                                           8     4      4     935
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (18) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (19) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (18) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) i2_fround                                           13     9      4    5676
                                             68 COMRAM    13     9      4
                          i2___flmul
                          i2___lwdiv
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (19) i2___lwmod                                           5     1      4     442
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (19) i2___lwdiv                                           7     3      4     451
                                              5 COMRAM     7     3      4
                          i2___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (18) i2__tdiv_to_l_                                      17     9      8     524
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (18) i2__div_to_l_                                       14     6      8     524
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (18) i2___wmul                                            6     2      4     442
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) i2___llmod                                           9     1      8     582
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (18) i2___fltol                                          10     6      4     442
                                             77 COMRAM    10     6      4
                          i2___flmul (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___fleq                                           12     4      8     270
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (15) _ADCC_ThresholdISR                                   0     0      0   16177
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
          _ADC_PostProcessingHandler *
 ---------------------------------------------------------------------------------
 (16) _ADC_PostProcessingHandler                          23    23      0   16177
                                             12 BANK0     23    23      0
           _ADCC_GetConversionResult
  _ADCC_GetCurrentCountofConversions
                _ADCC_GetFilterValue
      _ADCC_HasAccumulatorOverflowed
                _ADCC_StopConversion
                    _TMR2_StartTimer
                               _fabs
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flsub
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (18) i2___xxtofl                                         14    10      4     756
                                              4 COMRAM    14    10      4
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___flsub                                           8     0      8    4127
                                              4 BANK0      8     0      8
                _ADCC_GetFilterValue (ARG)
                          i2___fladd
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___fladd                                          16     8      8    3572
                                             81 COMRAM    12     4      8
                                              0 BANK0      4     4      0
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                               _fabs (ARG)
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (19) i2___flmul                                          25    17      8    4433
                                             43 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___fldiv (ARG)
                          i2___lwdiv (ARG)
                          i2___lwmod (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___flge                                           12     4      8     686
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (17) i2___fldiv                                          25    17      8    1589
                                             18 COMRAM    25    17      8
                _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) _fabs                                                4     0      4     408
                                              4 COMRAM     4     0      4
                          i2___flneg
 ---------------------------------------------------------------------------------
 (18) i2___flneg                                           4     0      4     135
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (17) _TMR2_StartTimer                                     0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (18) _TMR2_Start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ADCC_StopConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ADCC_HasAccumulatorOverflowed                       0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetFilterValue                                 4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetCurrentCountofConversions                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADTIInterruptHandler
   _INT1_SetInterruptHandler
   _INT2_SetInterruptHandler
   _IOCBF2_SetInterruptHandler
   _IOCBF3_SetInterruptHandler
   _LM73AcquisitionHandler
     _I2C2_MasterRead
       _I2C2_MasterReadTRBBuild
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
     _I2C2_MasterWrite
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
       _I2C2_MasterWriteTRBBuild
     _LM73Convert
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___xxtofl
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
   _LM73TempSensorInitialize
     _I2C2_MasterWrite
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
       _I2C2_MasterWriteTRBBuild
   _OLED_Clear
     _OLED_PutChar
       _I2C2_MasterWrite
         _I2C2_MasterTRBInsert
           _I2C2_WaitForLastPacketToComplete
         _I2C2_MasterWriteTRBBuild
       _memmove
   _OLED_Init
     _OLED_Command
       _I2C2_MasterWrite
         _I2C2_MasterTRBInsert
           _I2C2_WaitForLastPacketToComplete
         _I2C2_MasterWriteTRBBuild
   _OLED_updateHandler
     _OLED_UpdateFromRAMBuffer
       _OLED_WriteString
         _OLED_PutChar
           _I2C2_MasterWrite
             _I2C2_MasterTRBInsert
               _I2C2_WaitForLastPacketToComplete
             _I2C2_MasterWriteTRBBuild
           _memmove
       _OLED_YX
         _OLED_Command
           _I2C2_MasterWrite
             _I2C2_MasterTRBInsert
               _I2C2_WaitForLastPacketToComplete
             _I2C2_MasterWriteTRBBuild
       _strlen
     _floatToEngineeringFormat
       ___fldiv
       ___fleq
       ___flge
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___xxtofl
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
       _abs
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
       _sprintf
         ___fldiv (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _getDaysFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getHoursFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinutesFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getSecondsFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getYearsFromOnTime (ARG)
           ___lldiv
     _getCauseOfResetStringSmall
     _getDaysFromOnTime
       ___lldiv
       ___wmul
     _getDeviceID
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getHoursFromOnTime
       ___lldiv
       ___wmul
     _getMajorRevisionID
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getMinorRevisionID
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getMinutesFromOnTime
       ___lldiv
       ___wmul
     _getNXQChargeStateStringCaps
     _getSecondsFromOnTime
       ___lldiv
       ___wmul
     _getYearsFromOnTime
       ___lldiv
     _sprintf
       ___fldiv (ARG)
       __doprnt (ARG)
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       _getDaysFromOnTime (ARG)
         ___lldiv
         ___wmul
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getHoursFromOnTime (ARG)
         ___lldiv
         ___wmul
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinutesFromOnTime (ARG)
         ___lldiv
         ___wmul
       _getSecondsFromOnTime (ARG)
         ___lldiv
         ___wmul
       _getYearsFromOnTime (ARG)
         ___lldiv
     _strcpy
       _getCauseOfResetStringSmall (ARG)
       _getNXQChargeStateStringCaps (ARG)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _CCP2_Initialize
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _FVR_Initialize
     _I2C2_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF2_SetInterruptHandler
       _IOCBF3_SetInterruptHandler
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
   _TMR0_SetInterruptHandler
   _TMR1_Reload
     _TMR1_WriteTimer
   _TMR1_SetInterruptHandler
   _TMR1_StopTimer
   _TMR2_SetInterruptHandler
   _TMR3_Reload
     _TMR3_WriteTimer
   _TMR3_SetInterruptHandler
   _TMR3_StopTimer
   _TMR5_StopTimer
   _TMR5_WriteTimer
   _freqMeasStartCaptures
   _getCauseOfReset
   _getCauseOfResetString
   _printCurrentMeasurements
     ___fldiv
     _floatToEngineeringFormat
       ___fldiv
       ___fleq
       ___flge
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___xxtofl
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
       _abs
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
       _sprintf
         ___fldiv (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _getDaysFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getHoursFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinutesFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getSecondsFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getYearsFromOnTime (ARG)
           ___lldiv
     _getNXQChargeStateString
     _getStringSecondsAsTime
       ___lldiv
       ___wmul
       _sprintf
         ___fldiv (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _getDaysFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getHoursFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinutesFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getSecondsFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getYearsFromOnTime (ARG)
           ___lldiv
       _strcat
       _strlen
     _printf
       ___fldiv (ARG)
       __doprnt (ARG)
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       _floatToEngineeringFormat (ARG)
         ___fldiv
         ___fleq
         ___flge
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___xxtofl
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _abs
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getNXQChargeStateString (ARG)
       _getStringSecondsAsTime (ARG)
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
     _terminalTextAttributes
       _printf
         ___fldiv (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _floatToEngineeringFormat (ARG)
           ___fldiv
           ___fleq
           ___flge
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
           _sprintf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getNXQChargeStateString (ARG)
         _getStringSecondsAsTime (ARG)
           ___lldiv
           ___wmul
           _sprintf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
           _strcat
           _strlen
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _strcat
       _strncpy
     _terminalTextAttributesReset
       _printf
         ___fldiv (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _floatToEngineeringFormat (ARG)
           ___fldiv
           ___fleq
           ___flge
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
           _sprintf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getNXQChargeStateString (ARG)
         _getStringSecondsAsTime (ARG)
           ___lldiv
           ___wmul
           _sprintf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
           _strcat
           _strlen
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
   _printf
     ___fldiv (ARG)
     __doprnt (ARG)
       Absolute function(Fake) *
       ___awdiv *
         ___awmod (ARG)
       ___fladd *
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq *
       ___flge *
       ___flmul *
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___flneg *
       ___flsub *
         ___fladd
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
       ___fltol *
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___lldiv *
       ___llmod *
         ___lldiv (ARG)
       ___wmul *
       ___xxtofl *
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
       __div_to_l_ *
       __tdiv_to_l_ *
       _fround *
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit *
       _putch *
         _EUSART2_Write
       _scale *
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     _floatToEngineeringFormat (ARG)
       ___fldiv
       ___fleq
       ___flge
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___xxtofl
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
       _abs
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
       _sprintf
         ___fldiv (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _getDaysFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getHoursFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinutesFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getSecondsFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getYearsFromOnTime (ARG)
           ___lldiv
     _getCauseOfResetString (ARG)
     _getDeviceID (ARG)
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getDeviceIDString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
     _getMajorRevisionID (ARG)
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getMinorRevisionID (ARG)
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getNXQChargeStateString (ARG)
     _getStringSecondsAsTime (ARG)
       ___lldiv
       ___wmul
       _sprintf
         ___fldiv (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _getDaysFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getHoursFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinutesFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getSecondsFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getYearsFromOnTime (ARG)
           ___lldiv
       _strcat
       _strlen
     _getUserID (ARG)
       _FLASH_ReadWord
         _FLASH_ReadByte
   _terminalClearScreen
     _printf
       ___fldiv (ARG)
       __doprnt (ARG)
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       _floatToEngineeringFormat (ARG)
         ___fldiv
         ___fleq
         ___flge
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___xxtofl
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _abs
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getNXQChargeStateString (ARG)
       _getStringSecondsAsTime (ARG)
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
   _terminalSetCursorHome
     _printf
       ___fldiv (ARG)
       __doprnt (ARG)
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       _floatToEngineeringFormat (ARG)
         ___fldiv
         ___fleq
         ___flge
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___xxtofl
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _abs
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getNXQChargeStateString (ARG)
       _getStringSecondsAsTime (ARG)
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
   _terminalTextAttributes
     _printf
       ___fldiv (ARG)
       __doprnt (ARG)
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       _floatToEngineeringFormat (ARG)
         ___fldiv
         ___fleq
         ___flge
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___xxtofl
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _abs
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getNXQChargeStateString (ARG)
       _getStringSecondsAsTime (ARG)
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
     _strcat
     _strncpy
   _terminalTextAttributesReset
     _printf
       ___fldiv (ARG)
       __doprnt (ARG)
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       _floatToEngineeringFormat (ARG)
         ___fldiv
         ___fleq
         ___flge
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___xxtofl
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _abs
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getNXQChargeStateString (ARG)
       _getStringSecondsAsTime (ARG)
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _clearADCErrors
         _updateErrorLEDs
           _getADCError
           _getI2CError
           _getUARTError
       _clearI2CErrors
         _updateErrorLEDs
           _getADCError
           _getI2CError
           _getUARTError
       _clearUARTErrors
         _updateErrorLEDs
           _getADCError
           _getI2CError
           _getUARTError
       _getCauseOfResetString
       _getDeviceID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getStringSecondsAsTime
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _printCurrentMeasurements
         ___fldiv
         _floatToEngineeringFormat
           ___fldiv
           ___fleq
           ___flge
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
           _sprintf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
         _getNXQChargeStateString
         _getStringSecondsAsTime
           ___lldiv
           ___wmul
           _sprintf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
           _strcat
           _strlen
         _printf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _floatToEngineeringFormat (ARG)
             ___fldiv
             ___fleq
             ___flge
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
             _sprintf
               ___fldiv (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getNXQChargeStateString (ARG)
           _getStringSecondsAsTime (ARG)
             ___lldiv
             ___wmul
             _sprintf
               ___fldiv (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
             _strcat
             _strlen
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _terminalTextAttributes
           _printf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _floatToEngineeringFormat (ARG)
               ___fldiv
               ___fleq
               ___flge
               ___fltol
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
               _sprintf
                 ___fldiv (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getNXQChargeStateString (ARG)
             _getStringSecondsAsTime (ARG)
               ___lldiv
               ___wmul
               _sprintf
                 ___fldiv (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
               _strcat
               _strlen
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _strcat
           _strncpy
         _terminalTextAttributesReset
           _printf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _floatToEngineeringFormat (ARG)
               ___fldiv
               ___fleq
               ___flge
               ___fltol
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
               _sprintf
                 ___fldiv (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getNXQChargeStateString (ARG)
             _getStringSecondsAsTime (ARG)
               ___lldiv
               ___wmul
               _sprintf
                 ___fldiv (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
               _strcat
               _strlen
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
       _printErrorHandlerStatus
         _getADCError
         _getI2CError
         _getUARTError
         _printf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _floatToEngineeringFormat (ARG)
             ___fldiv
             ___fleq
             ___flge
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
             _sprintf
               ___fldiv (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getNXQChargeStateString (ARG)
           _getStringSecondsAsTime (ARG)
             ___lldiv
             ___wmul
             _sprintf
               ___fldiv (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
             _strcat
             _strlen
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _terminalTextAttributes
           _printf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _floatToEngineeringFormat (ARG)
               ___fldiv
               ___fleq
               ___flge
               ___fltol
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
               _sprintf
                 ___fldiv (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getNXQChargeStateString (ARG)
             _getStringSecondsAsTime (ARG)
               ___lldiv
               ___wmul
               _sprintf
                 ___fldiv (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
               _strcat
               _strlen
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _strcat
           _strncpy
         _terminalTextAttributesReset
           _printf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _floatToEngineeringFormat (ARG)
               ___fldiv
               ___fleq
               ___flge
               ___fltol
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
               _sprintf
                 ___fldiv (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getNXQChargeStateString (ARG)
             _getStringSecondsAsTime (ARG)
               ___lldiv
               ___wmul
               _sprintf
                 ___fldiv (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
               _strcat
               _strlen
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
       _printf
         ___fldiv (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _floatToEngineeringFormat (ARG)
           ___fldiv
           ___fleq
           ___flge
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
           _sprintf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getNXQChargeStateString (ARG)
         _getStringSecondsAsTime (ARG)
           ___lldiv
           ___wmul
           _sprintf
             ___fldiv (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
           _strcat
           _strlen
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _strcmp
       _strlen
       _terminalTextAttributes
         _printf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _floatToEngineeringFormat (ARG)
             ___fldiv
             ___fleq
             ___flge
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
             _sprintf
               ___fldiv (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getNXQChargeStateString (ARG)
           _getStringSecondsAsTime (ARG)
             ___lldiv
             ___wmul
             _sprintf
               ___fldiv (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
             _strcat
             _strlen
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _strcat
         _strncpy
       _terminalTextAttributesReset
         _printf
           ___fldiv (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _floatToEngineeringFormat (ARG)
             ___fldiv
             ___fleq
             ___flge
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
             _sprintf
               ___fldiv (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getNXQChargeStateString (ARG)
           _getStringSecondsAsTime (ARG)
             ___lldiv
             ___wmul
             _sprintf
               ___fldiv (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
             _strcat
             _strlen
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
     _strlen
   _updateErrorLEDs
     _getADCError
     _getI2CError
     _getUARTError

 _INTERRUPT_InterruptManagerLow (ROOT)
   _CCP2_CaptureISR
     _CCP2_CallBack
       _freqMeasConvert
         i1___fladd
           i1___xxtofl (ARG)
         i1___fldiv
           i1___fladd (ARG)
             i1___xxtofl (ARG)
           i1___xxtofl (ARG)
         i1___flmul
           i1___fladd (ARG)
             i1___xxtofl (ARG)
           i1___fldiv (ARG)
             i1___fladd (ARG)
               i1___xxtofl (ARG)
             i1___xxtofl (ARG)
           i1___xxtofl (ARG)
         i1___xxtofl
   _I2C2_BusCollisionISR
   _I2C2_ISR
     _I2C2_FunctionComplete
     _I2C2_Stop
   _TMR2_ISR
     Absolute function(Fake) *
     _ADC_acquisitionTimerHandler *
       _ADCC_ClearAccumulator
       _ADCC_DischargeSampleCapacitor
       _ADCC_StartConversion
       _TMR2_StopTimer
         _TMR2_Stop
     _TMR2_DefaultInterruptHandler *
   _TMR3_ISR
     Absolute function(Fake) *
     _QIIdleChargedTimerHandler *
       i1_TMR3_Reload
         i1_TMR3_WriteTimer
       i1_TMR3_StopTimer
     _TMR3_DefaultInterruptHandler *
     i1_TMR3_WriteTimer *

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADC_PostProcessingHandler *
       _ADCC_GetConversionResult
       _ADCC_GetCurrentCountofConversions
       _ADCC_GetFilterValue
       _ADCC_HasAccumulatorOverflowed
       _ADCC_StopConversion
       _TMR2_StartTimer
         _TMR2_Start
       _fabs
         i2___flneg
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         _fabs (ARG)
           i2___flneg
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv
             i2___lwmod (ARG)
           i2___lwmod
       i2___fldiv
         _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flge
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___lwdiv (ARG)
           i2___lwmod (ARG)
         i2___lwmod (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flsub
         _ADCC_GetFilterValue (ARG)
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           _fabs (ARG)
             i2___flneg
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___lwdiv (ARG)
                 i2___lwmod (ARG)
               i2___lwmod (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv
               i2___lwmod (ARG)
             i2___lwmod
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2__doprnt
         Absolute function(Fake) *
         i2___awdiv *
           i2___awmod (ARG)
         i2___fladd *
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           _fabs (ARG)
             i2___flneg
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___lwdiv (ARG)
                 i2___lwmod (ARG)
               i2___lwmod (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv
               i2___lwmod (ARG)
             i2___lwmod
         i2___fleq *
         i2___flge *
         i2___flmul *
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg *
         i2___flsub *
           _ADCC_GetFilterValue (ARG)
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             _fabs (ARG)
               i2___flneg
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___lwdiv (ARG)
                 i2___lwmod (ARG)
               i2___lwmod (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___lwdiv (ARG)
                   i2___lwmod (ARG)
                 i2___lwmod (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___lwdiv
                 i2___lwmod (ARG)
               i2___lwmod
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___fltol *
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___lwdiv (ARG)
                 i2___lwmod (ARG)
               i2___lwmod (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___lldiv *
         i2___llmod *
           i2___lldiv (ARG)
         i2___wmul *
         i2___xxtofl *
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2__div_to_l_ *
         i2__tdiv_to_l_ *
         i2_fround *
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv
             i2___lwmod (ARG)
           i2___lwmod
         i2_isdigit *
         i2_putch *
           i2_EUSART2_Write
         i2_scale *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
   _EUSART2_Transmit_ISR *
   _INT1_ISR *
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
       _leftCapTouchHandler *
   _INT2_ISR *
     _INT2_CallBack
       Absolute function(Fake) *
       _INT2_DefaultInterruptHandler *
       _rightCapTouchHandler *
   _PIN_MANAGER_IOC *
     _IOCBF2_ISR
       Absolute function(Fake) *
       _IOCBF2_DefaultInterruptHandler *
       _QIIdleIOCHandler *
         _TMR1_StartTimer
         _TMR3_StartTimer
         i2_TMR3_Reload
           i2_TMR3_WriteTimer
     _IOCBF3_ISR
       Absolute function(Fake) *
       _IOCBF3_DefaultInterruptHandler *
       _QIChargeIOCHandler *
         _TMR3_StartTimer
         i2_TMR1_Reload
           i2_TMR1_WriteTimer
         i2_TMR3_Reload
           i2_TMR3_WriteTimer
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _heartbeatTimerHandler *
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         _fabs (ARG)
           i2___flneg
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv
             i2___lwmod (ARG)
           i2___lwmod
       i2___llmod
         i2___lldiv (ARG)
   _TMR1_ISR *
     Absolute function(Fake) *
     _QIErrorTimerHandler *
       i2_TMR1_Reload
         i2_TMR1_WriteTimer
       i2_TMR1_StopTimer
     _TMR1_DefaultInterruptHandler *
     i2_TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0     400      35       27.5%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      8      C8      14       78.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100     2F     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     BE     100      10      100.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     61      BB       8       73.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     59      9E       5       98.8%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     47F       6        0.0%
DATA                 0      0     87F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Mar 12 14:17:11 2019

                              _temp_adc_offset E86F               __end_of_TMR2_SetInterruptHandler C736  
                                 ___fldiv@aexp 0218                                   ___fldiv@bexp 0217  
                                  i1___fladd@a 0112                                    i1___fladd@b 010E  
             ??_IOCBF3_DefaultInterruptHandler 0001                ?_IOCBF3_DefaultInterruptHandler 0001  
                                 ___fldiv@sign 0210                           ??_OLED_updateHandler 02A9  
                    _QIIdleChargedTimerHandler C474                          __end_ofi1_TMR3_Reload C7C2  
                                  i1___fldiv@a 0122                                    i1___fldiv@b 011E  
                                  __CFG_CP$OFF 000000                          ?_I2C2_MasterTRBInsert 0200  
                                 ___awdiv@sign 020B                                    i1___flmul@a 013B  
                                  i1___flmul@b 0137                         __end_of_FVR_Initialize C804  
                        _freqMeasStartCaptures C81C                 __size_of_heartbeatTimerHandler 0162  
                                           bsr 000FE0                            ___wmul@multiplicand 0202  
                           i2___lwdiv@dividend 0006                  __end_of_heartbeatTimerHandler 97C0  
                            ??_TMR5_WriteTimer 0202                 I2C2_MasterReadTRBBuild@address 0205  
                                   i1___xxtofl 9A54                                            l122 B6A0  
                                          l115 BD50                                            l124 B6B8  
                                          _PR2 000FBC                                   __CFG_CPD$OFF 000000  
                     ?_printErrorHandlerStatus 0001                                    i2___fladd@a 0056  
                                  i2___fladd@b 0052                      _pos12_isns_average_buffer 0440  
                              _timer1ReloadVal 0189                                            _abs C1B6  
                                  i2___fldiv@a 0017                                    i2___fldiv@b 0013  
                    __end_of_getDeviceIDString AD36                        __size_of_PMD_Initialize 001C  
                                 ___awmod@sign 0205              __size_of_LM73TempSensorInitialize 0238  
                       ??_rightCapTouchHandler 0001                                   __CFG_IDLOC0$ 00000D  
                                   i2___xxtofl 9B98                                   __CFG_IDLOC1$ 00000E  
                                 __CFG_IDLOC2$ 00000A                                   __CFG_IDLOC3$ 00000D  
                                 __CFG_IDLOC4$ 00000B                                   __CFG_IDLOC5$ 00000E  
                                 __CFG_IDLOC6$ 00000E                                   __CFG_IDLOC7$ 00000F  
                              _TMR2_Initialize C03E                                            prod 000FF3  
                    ?_LM73TempSensorInitialize 0001                                            tosl 000FFD  
                                          wreg 000FE8                                    i2___flmul@a 0030  
                                i1___fladd@grs 011D                                    i2___flmul@b 002C  
                                  i2___flsub@a 0068                                    i2___flsub@b 0064  
                 __end_of_getSecondsFromOnTime 965E                                   ___flmul@aexp 021B  
                                 ___flmul@bexp 0220                       __end_of_OLED_WriteString B69A  
                             OLED_Command@temp 0210                                   ___flmul@sign 021A  
                                 ___flmul@temp 0225                                   ___flmul@prod 0221  
                                 __CFG_LVP$OFF 000000                                  _INT1_CallBack C36C  
                                 __CFG_ZCD$OFF 000000                                  i1___fldiv@grs 0131  
                                i1___fldiv@rem 012A                               __end_of_I2C2_ISR 8E8C  
                                 ___fltol@exp1 0239                                           ?_abs 023A  
                                         l2042 3644                                           l1340 7BF6  
                                         l3040 9E7C                                           l2224 5006  
                                         l2216 942E                                           l3041 9EA4  
                                         l2209 9352                                           l2235 52CA  
                                         l2227 504C                                           l1339 7B04  
                              _timer3ReloadVal 018D                                           l3117 B32E  
                                         l3311 6712                                           l3320 692A  
                                         l1392 8FAC                                           l2248 6684  
                                         l3321 6926                                           l1641 B610  
                                         l1633 B5F0                                           l3242 72A0  
                                         l3226 71CE                                           l3251 7306  
                                         l3227 71AC                                           l2523 0B8A  
                                         l1643 B618                                           l1635 B5F8  
              ??_ADCC_DischargeSampleCapacitor 0100                                           l3252 7302  
                                         l2525 0B58                                           l1645 B620  
                                         l1637 B600                                           l2702 B06C  
                                         l2606 1314                                           l1639 B608  
                                         l3328 69B0                                           l3352 9952  
                                         l2640 14FC                                           l2608 12E2  
                                         l2288 A188                                           l3281 836A  
                                         l2642 14CA                                           l3371 C1D6  
                                         l2491 096A                                           l3292 83D8  
                                         l3188 B73A                                           l2556 0D78  
                                         l3293 83D4                                           l3198 BBF8  
                         _ADCC_StartConversion C7C2                                           l3359 99D0  
                                         l2577 10B4                                           l2489 099C  
                                         l1972 A730                                           l2953 A544  
                        __size_ofi2__div_to_l_ 00F4                                           STR_1 FFC7  
                                         STR_2 F1A8                                           STR_3 F3DF  
                                         STR_4 F4D7                                           STR_5 EF54  
                                         STR_6 ED73                                           STR_7 F4FE  
                                         STR_8 F32B                                           STR_9 F7D3  
                              __end_of_OLED_YX BC46                                    ?_OLED_Clear 0001  
                                         _LATA 000F83                                           _LATB 000F84  
                                         _LATC 000F85                                           _T2PR 000FBC  
                                         _PMD0 000EE1                                           _PMD1 000EE2  
                                         _PMD2 000EE3                                           _PMD3 000EE4  
                                         _PMD4 000EE5                                           _PMD5 000EE6  
                                         _TMR2 000FBB                          ??_leftCapTouchHandler 0001  
                                         _WPUA 000F10                                           _WPUB 000F18  
                                         _WPUC 000F20                                           _WPUE 000F2D  
                                _INT2_CallBack C348                          ??_EUSART2_Receive_ISR 005E  
                                 i2___flge@ff1 0001                                   i2___flge@ff2 0005  
                                __CFG_FCMEN$ON 000000                                  _EUSART2_Write B69A  
              ??_ADCC_HasAccumulatorOverflowed 0001                       ??_LM73AcquisitionHandler 0255  
                                 i2___fleq@ff1 0001                                   i2___fleq@ff2 0005  
                                         abs@a 023A                                           _fabs BEF8  
                         __end_of_getUARTError C85C                        __end_of_CCP2_Initialize C3B2  
                                         _main 79B4                                    i2__doprnt@c 00A3  
                                         _line 0344                                    i2__doprnt@f 006E  
                                i1___flmul@grs 0144                         OLED_Command@data_array 0212  
                                ?_EUSART2_Read 0001                                           fsr0h 000FEA  
                                         fsr1h 000FE2                             i2___lwdiv@quotient 000B  
                                         indf0 000FEF                                           fsr2h 000FDA  
                                         fsr0l 000FE9                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                                         btemp 005F                 __size_of_ADCC_ClearAccumulator 0006  
                                 i2___flneg@f1 0001                                _OLED_RAM_Buffer 0300  
            __size_of_INT2_SetInterruptHandler 000E                    I2C2_MasterReadTRBBuild@ptrb 0200  
                __end_of_ADCC_ClearAccumulator C868                                 _clearI2CErrors C4D2  
                    ?_INT2_SetInterruptHandler 0200                     __size_ofi2_TMR3_WriteTimer 001C  
                                         prodh 000FF4                                           prodl 000FF3  
                               i1___fladd@aexp 011B                             _QIChargeIOCHandler C50A  
                               i1___fladd@bexp 011C                                           start 00A2  
                              _timer5ReloadVal 018B                              ??_clearUARTErrors 0201  
                                 i2___fltol@f1 004E                                 _clearADCErrors C6CE  
                              ___fldiv@new_exp 0211                                __end_ofi2_scale 5C2C  
                 __end_of_EUSART2_Transmit_ISR BBBE                                _TMR3_Initialize B88C  
                              __end_ofi2_putch C84E                     ??_TMR1_SetInterruptHandler 0203  
                                __CFG_CSWEN$ON 000000                            _QIErrorTimerHandler C5F4  
                                 ___param_bank 000000                        __end_of_updateErrorLEDs BB32  
                         __size_of_getI2CError 0028                                  __CFG_SCANE$ON 000000  
                        __end_ofi2_TMR1_Reload C7DE                           __size_of_getADCError 0016  
                     __size_ofi2_EUSART2_Write 0054                            ?_QIChargeIOCHandler 0001  
                                        ??_abs 023C                             __size_of_OLED_Init 0098  
                        __end_ofi2_TMR3_Reload C7EC                        __end_of_TMR0_Initialize C1B6  
                     ?_getNXQChargeStateString 0200                               __end_of_INT1_ISR C844  
                             __end_of_INT2_ISR C83A                                 i1___fldiv@aexp 0136  
                               i1___fldiv@bexp 0135                                     _i2c2_state 00DB  
               ??_TMR0_DefaultInterruptHandler 0001                                ?_FVR_Initialize 0001  
                         getUserID@inputUserID 0211                 __size_of_OSCILLATOR_Initialize 0018  
                               i1___fldiv@sign 012E                            __size_of_IOCBF2_ISR 002A  
                          __size_of_IOCBF3_ISR 002A                  __end_of_OSCILLATOR_Initialize C5DE  
                                        l20010 ACC8                                          l20004 ACBE  
                                        l20022 ACDC                                          l20030 ACE6  
                                        l20102 9376                                          l20016 ACD2  
                                        l20120 9402                                          l20112 93D6  
                                        l20104 9398                                          l21002 B5B2  
                                        l20130 9474                                          l20124 9418  
                                        l20116 93EC                                          l20134 94C0  
                                        l20072 B644                                          l21008 B5BE  
                                        l21016 B5CA                                          l20128 9452  
                                        l20080 B83E                                          l20082 B846  
                                        l20076 B670                                          l22100 3D42  
                                        l22020 38A4                                          l21300 4AAE  
                                        l22102 3D7C                                          l22030 39E4  
                                        l21310 4BAA                                          l21240 9D22  
                                        l21224 9CEC                                          l21136 C0F6  
                                        l22112 3DB2                                          l22024 3954  
                                        l22016 37F2                                          l22008 3726  
                      _I2C2_MasterReadTRBBuild B798                                          l22210 8EFC  
                                        l21234 9D08                                          l22050 3B16  
                                        l22042 3A4E                                          l20098 933C  
                                        l22212 8F1E                                          l21260 9D76  
                                        l21252 9D50                                          l21236 9D1A  
                                        l21228 9CF4                                          l22060 3BF2  
                                        l22036 3A44                                          l21270 9D92  
                                        l21246 9D36                                          l21326 4CBC  
                                        l21318 4C7C                                          l22310 A12C  
                                        l22302 A0FE                                          l21264 9D7E  
                                        l21248 9D48                                          l22128 3E22  
                                        l22080 3C96                                          l22072 3C5A  
                                        l22056 3BA4                                          l21352 4D6A  
                                        l21328 4CC2                                          l22226 8F54  
                                        l21258 9D64                                          l22082 3CD0  
                                        l22066 3C50                                          l21370 4EFA  
                                        l21338 4D04                                          l22314 A14A  
                                        l22324 90CA                                          l22260 902E  
                                        l22244 8FD6                                          l22228 8F76  
                                        l21284 B9D6                                          l22180 3FA2  
                                        l22164 3F40                                          l22148 3EDE  
                                        l22092 3D06                                          l21620 C3E8  
                                        l21356 4DC6                                          l21348 4D46  
                                        l21292 4A34                                          l22316 A16A  
                                        l22422 92E4                                          l22406 928C  
                                        l22342 912C                                          l22190 8E92  
                                        l21286 B9E0                                          l22182 3FA8  
                                        l20734 BD52                                          l21374 4F5E  
                                        l21366 4E0A                                          l22408 92AE  
                                        l22360 91A6                                          l22344 914E  
                                        l22328 90F6                                          l21712 2EB2  
                                        l20744 BD7A                                          l21296 4A6E  
                                        l20922 B9BE                                          l22290 90BC  
                                        l22274 9064                                          l22258 900C  
                                        l22186 3FB4                                          l22276 9086  
                                        l22196 8EC6                                          l21812 3186  
                                        l21732 2F6E                                          l22620 7C80  
                                        l22390 9234                                          l22374 91DC  
                                        l22358 9184                                          l20934 C428  
                                        l21646 B628                                          l20960 8AE6  
                                        l22392 9256                                          l22376 91FE  
                                        l17120 7104                                          l18000 026E  
                                        l21920 3498                                          l21904 3426  
                                        l20946 8A12                                          l18010 02B6  
                                        l22570 7AF6                                          l21684 BDDC  
                                        l17204 722A                                          l17116 7100  
                                        l21836 3234                                          l21828 31F8  
                                        l21780 30A2                                          l21764 3032  
                                        l21748 2FD0                                          l20974 8BBA  
                                        l21678 BDD4                                          l17222 72C4  
                                        l17214 7290                                          l18102 06CA  
                                        l18022 031E                                          l18006 02A6  
                                        l20990 B59A                                          l21838 3258  
                                        l17312 66FE                                          l17232 72DA  
                                        l17128 7124                                          l17064 B6A2  
                                        l18200 0AC4                                          l18040 0406  
                                        l18024 0328                                          l18032 038E  
                                        l18008 02B0                                          l20984 B58E  
                                        l21952 357C                                          l21936 350A  
                                        l21872 333A                                          l21864 32FE  
                                        l21848 328C                                          l21696 2E40  
                                        l22744 AD06                                          l22584 7C02  
                                        l17322 6730                                          l17314 6702  
                                        l17170 71BA                                          l18114 0780  
                                        l18106 0714                                          l18050 048E  
                                        l18034 03A2                                          l18018 0308  
                                        l21874 335E                                          l20898 C408  
                                        l22746 AD1C                                          l17172 71BE  
                                        l17092 70B8                                          l17500 B710  
                                        l17076 B6E4                                          l17420 AF8A  
                                        l18300 100C                                          l18220 0B64  
                                        l18204 0AEE                                          l18132 088C  
                                        l18028 0364                                          l18060 051C  
                                        l20996 B5A6                                          l21892 33CE  
                                        l21884 3392                                          l21796 3114  
                                        l22748 AD2C                                          l17406 69CE  
                                        l17270 737A                                          l17238 72E4  
                                        l17158 7160                                          l17510 B730  
                                        l17078 B6EA                                          l18310 1068  
                                        l18302 1014                                          l18230 0BCA  
                                        l18214 0B2A                                          l18206 0AF6  
                                        l18150 08F8                                          l18134 0890  
                                        l18118 07AE                                          l18054 04A0  
                                        l18046 0456                                          l21894 33F2  
                                        l17272 737C                                          l17096 70BC  
                                        l17520 BBD6                                          l17600 C3CC  
                                        l17432 AFB0                                          l18320 10EA  
                                        l18312 109A                                          l18128 0814  
                                        l18304 101E                                          l18048 046A  
                                        l21968 35EE                                          l17370 68F0  
                                        l17266 7372                                          l17258 734C  
                                        l17194 7214                                          l17186 71F2  
                                        l17610 9E28                                          l17434 AFB8  
                                        l17426 AF9A                                          l18330 113C  
                                        l18322 111E                                          l18250 0D22  
                                        l18242 0CAE                                          l18234 0BE6  
                                        l18170 0976                                          l18154 0912  
                                        l18146 08CE                                          l18090 061C  
                                        l18074 0590                                          l18066 0532  
                                        l18058 04A6                                          l21986 3678  
                                        l21978 362E                                          l17364 68D2  
                                        l17196 7218                                          l17452 AFF0  
                                        l17444 AFD8                                          l18404 12EE  
                                        l18244 0CDA                                          l18180 09DC  
                                        l18164 093C                                          l21996 36B8  
                                        l19300 6284                                          l17390 696E  
                                        l17294 66BE                                          l17710 A0C2  
                                        l17526 BBEE                                          l17518 BBCE  
                                        l17550 7EF4                                          l18414 1354  
                                        l18430 13F8                                          l18342 117A  
                                        l18270 0DC6                                          l18262 0D7C  
                                        l18254 0D4C                                          l18246 0CE6  
                                        l18182 09F8                                          l21998 36F2  
                                        l19302 629A                                          l19310 62DC  
                                        l17296 66C2                                          l17544 7E06  
                                        l17448 AFE2                                          l17480 B246  
                                        l17472 B226                                          l17464 B20C  
                                        l18440 1466                                          l18424 13C4  
                                        l18416 1370                                          l18344 117E  
                                        l18360 11D2                                          l18328 1138  
                                        l18256 0D54                                          l18192 0A6E  
                                        l18184 0A08                                          l19304 62B0  
                                        l19312 6312                                          l18514 B96E  
                                        l17394 698C                                          l17298 66D2  
                                        l17706 A0B2                                          l17650 9ECE  
                                        l17474 B22E                                          l17570 55D0  
                                        l18418 137E                                          l18290 0F9A  
                                        l18274 0DF0                                          l18194 0A76  
                                        l18098 069C                                          l19322 B532  
                                        l19306 62C6                                          l19250 6040  
                                        ?_fabs 0005                                          l17732 B01E  
                                        l17716 A0CA                                          l17484 B250  
                                        l17468 B218                                          l17564 5520  
                                        l18436 143C                                          l18428 13EE  
                                        l18380 1256                                          l18364 11F2  
                                        l18292 0FA6                                          l18196 0A88  
                                        l18188 0A44                                          l19340 B556  
                                        l19404 5ED8                                          l18620 B394  
                                        l19252 6056                                          l17902 9A42  
                                        l18710 8380                                          l17822 A848  
                                        l17806 A7FE                                          l17734 B02A  
                                        l17718 A0D6                                          l17646 9EBE  
                                        l17582 5734                                          l17574 5600  
                                        l18470 15DC                                          l18454 14D6  
                                        l18382 125E                                          l18374 1234  
                                        l18358 11BC                                          l18286 0F1A  
                                        l18278 0E52                                          l19510 6646  
                                        l19502 655E                                          l18526 C5F0  
                                        l18550 C258                                          l19334 B54A  
                                        l19414 5F36                                          l19406 5EF4  
                                        l18614 B378                                          l19270 6120  
                                        l19254 606C                                          l19246 6014  
                                        l19262 60AE                                          l19238 5FDC  
                                        l19440 B3D4                                          l18704 8368  
                                        l17840 A888                                          l17832 A860  
                                        l17744 B05E                                          l17656 9ED6  
                                        l17488 B25E                                          l18464 153C  
                                        l18448 149C                                          l18368 1212  
                                        l18296 0FE2                                          l18288 0F46  
                                        l19328 B53E                                          l19424 5F94  
                                        l19416 5F52                                          l19408 5F0A  
                                        l18616 B384                                          l18608 B34A  
                                        l19280 6198                                          l19272 6138  
                                        l19256 6082                                          l19248 602A  
                                        l19264 60D8                                          l18634 8224  
                                        l17762 AEC8                                          l17834 A86C  
                                        l17826 A858                                          l17850 B2F8  
                                        l17666 A018                                          l17658 9EE2  
                                        l17498 B708                                          l18482 16A2  
                                        l18386 1282                                          l19506 65D2  
                                        l19346 B562                                          l19354 B56E  
                                        l19426 5FB0                                          l19418 5F68  
                                        l19362 5C48                                          l19290 6216  
                                        l19282 61B0                                          l19274 6150  
                                        l19266 60F0                                          l19258 6098  
                                        l17932 ABD8                                          l18556 C13A  
                                        l18740 8440                                          l18716 839E  
                                        l17588 57E4                                          l18484 16BE  
                                        l18476 1650                                          l18468 155A  
                                        l18388 128A                                          l18580 B4FC  
                                        l19428 5FC6                                          l19292 622C  
                                        l19276 6168                                          l19268 6108  
                                        l17934 ABE4                                          l18558 C140  
                                        l18750 8476                                          l18654 8264  
                                        l18638 8228                                          l17766 AEE6  
                                        l17758 AE94                                          l17782 A52E  
                                        l17774 A4E4                                          l17694 A096  
                                        l17686 A066                                          l18478 1666  
                                        l18486 16CC                                          l18398 12B4  
                                        l17942 0004                                          l18574 B4DC  
                                        l19358 5C34                                          l19294 6242  
                                        l19278 6180                                          l19286 61C8  
                                        l17928 ABC4                                          l17872 9980  
                                        l18592 AA86                                          l18752 8478  
                                        l18744 846A                                          l18736 841C  
                                        l18680 82CA                                          l18672 82B2  
                                        l17856 B320                                          l17848 B2EC  
                                        l17952 0078                                          l18576 B4E2  
                                        l19384 5E1C                                          l19296 6258  
                                        l19288 61FE                                          l17874 9986  
                                        l17866 9962                                          l18690 831A  
                                        l18666 829C                                          l18658 8268  
                                        l17778 A518                                          l17970 010C  
                                        l17954 008A                                          l17962 009E  
                                        l19490 6402                                          l18578 B4F2  
                                        l19394 5E7A                                          l19386 5E38  
                                        l19298 626E                                          l17884 99F6  
                                        l17876 9992                                          l18588 AA50  
                                        l19468 A7A6                                          l17788 A57C  
                                        l17796 C11E                                          l17956 0090  
                                        l17948 004A                                          l19396 5E96  
                                        l19388 5E4E                                          l17886 9A02  
                                        l17878 99B8                                          l17990 0254  
                                        l17958 0096                                          l19494 6476  
                                        l19398 5EAC                                  ___fltol@sign1 0238  
                                        l17984 01D4                                          l18698 8342  
                                        l17994 0262                                          l19498 64EA  
                                        l17996 0266                                          l17988 0228  
                                        l19940 4FDC                                          l17998 026A  
                                        l19928 C096                                          l19960 5288  
                                        l19952 524A                                          l19936 4FB4  
                                        l19954 5268                     __size_of_getDaysFromOnTime 0090  
                                        l19992 ACAA                                          l19986 ACA0  
                                        l19998 ACB4                                          _ADACQ 000F5C  
                                        _ADCAP 000F5D                                          _ADACT 000F56  
                              __end_of___fladd 7398                                          ?_main 0001  
                                        _ADCLK 000F57                                          _ADCNT 000F67  
                                        _ADPCH 000F5F                                __end_of___fldiv 8480  
                                        _ADREF 000F58                                __end_of___awdiv AFFA  
                              __end_of___flneg C130                                          _ADPRE 000F5E  
                                        STR_10 F2CE                                          STR_11 F9D7  
                                        STR_20 FCC5                                          STR_12 F863  
                                        STR_13 FFAE                                          STR_21 FF84  
                                        STR_14 FF31                                          STR_22 FEBA  
                                        STR_30 FA70                                          STR_15 FCD3  
                                        STR_31 FA30                                          STR_23 FBA2  
                                        STR_32 FBA2                                          STR_16 FF8A  
                                        STR_40 FE3E                                          STR_24 FC1C  
                                        STR_17 FEC4                                          STR_41 FE49  
                                        STR_33 FEBA                                          STR_25 FBB2  
                                        STR_42 FEBA                                          STR_18 FFA9  
                                        STR_50 FE7E                                          STR_34 FEB0  
                                        STR_26 FAE8                                          STR_19 FD26  
                                        STR_51 FE1D                                          STR_43 FDC4  
                                        STR_35 FEA6                                          STR_27 F467  
                                        STR_52 FF28                                          STR_44 FD63  
                                        STR_36 FE54                                          STR_28 F45E  
                              __end_of___awmod B268                                          STR_53 FE92  
                                        STR_45 FDAC                                          STR_37 FE60  
                                        STR_29 F8D0                                          STR_54 FE88  
                                        STR_70 FE74                                          STR_46 FDB8  
                                        STR_62 FC47                                          STR_38 FE5F  
                                        STR_55 FE28                                          STR_47 FD49  
                                        STR_71 FB92                                          STR_63 FB82  
                                        STR_39 FC0D                                          STR_56 FDA0  
                                        STR_48 FD56                                          STR_80 FC55  
                                        STR_72 FBFE                                          STR_64 FB72  
                                        _ADRPT 000F66                                          STR_49 FEBA  
                                        STR_81 FF52                                          STR_65 FDE6  
                                        STR_57 FD3C                                          STR_73 FCA9  
                                        STR_90 FDAA                                          STR_82 FDAA  
                                        STR_66 FF9F                                          STR_58 FE9C  
                                        STR_74 FDF1                                          STR_91 FDAA  
                                        STR_83 FDAA                                          STR_59 FE33  
                                        STR_67 FCE1                                          STR_75 FCB7  
                                        STR_68 FF71                                          STR_92 FD88  
                                        STR_84 FCEE                                          STR_76 FB52  
                                        STR_85 FF52                                          STR_93 FD22  
                                        STR_77 FBE0                                          STR_69 FB62  
                            __end_of_I2C2_Stop BC8A                                          STR_86 FDAA  
                                        STR_78 FDAA                                          STR_94 FF42  
                                        STR_95 FDAA                                          STR_87 FDAA  
                                        STR_79 FDAA                                          STR_96 FDAA  
                                        STR_88 FC9B                                __end_of___flmul 69E4  
                                        STR_89 FF42                                          STR_97 FD15  
                                        STR_98 FF5A                                          STR_99 FDAA  
                              __end_of___flsub BAA4                                __end_of___fltol A89A  
                              _TMR1_StartTimer C88A                                __end_of___lldiv B07E  
                                        _T1CLK 000FD2                                          u21000 6920  
                                        u21100 AFBC                                ___awdiv@divisor 0208  
                                        u21040 697C                                          u21200 B714  
                                        u22000 024A                                          _T1CON 000FCF  
                              __end_of___llmod B340                                          u21050 699A  
                                        u21230 BBDA                                          u22030 02E4  
                                        u22007 0240                                          _T3CLK 000FCC  
                                        u20600 7194                                          u21160 B232  
                                        u22040 02EA                                          _T2CON 000FBD  
                                        u22130 03FC                                          u21500 A0DC  
                                        u22140 0440                                          u22037 02DA  
                                        u20630 71D6                                          u21430 9EE8  
                                        u23030 1400                                          u21351 9E0C  
                                        u21520 B02E                                          u21440 A006  
                                        u21360 9E16                                          u22240 06DA  
                                        u22160 04D6                                          u22128 03C8  
                                        _T3CON 000FC9                                          u22137 03F2  
                                        u22129 03FE                                          u23018 13AE  
                                        u22250 0726                                          u21371 9E38  
                                        u22147 0436                                          u20580 7182  
                                        u23108 14B4                                          u23060 1476  
                                        u23220 C5EC                                          u23300 B526  
                                        u20590 7192                                          u21630 A7EC  
                                        u21710 B2FC                                          u22167 04CC  
                                        _T5CLK 000FC6                                          u21560 AEE2  
                                        u20840 7358                                          u20760 72E8  
                                        u21640 A81C                                          u22280 0780  
                                        u23170 16DE                                          u23058 1426  
                                        u22098 034E                                          u23307 B51C  
                                        u20780 72FC                                          u23180 170E  
                                        u23148 1526                                          u22620 0D62  
                                        u22428 09C6                                          u21900 00C0  
                                        _T2HLT 000FBE                                          u21645 A812  
                                        u20950 671E                                          u23190 171A  
                                        u22630 0D72                                          u23270 C254  
                                        u20960 6894                                          u21680 A872  
                                        u23168 168C                                          u22528 0B42  
                                        u22480 0B04                                          u22448 0A2E  
                                        u21920 00FA                                          _T5CON 000FC3  
                                        u23610 842A                                          u22618 0D0C  
                                        u23187 1704                                          u21907 00B6  
                                        u23620 844E                                          u22388 0954  
                                        u21940 0156                                          u20965 688A  
                                        u21790 9A0C                                          u22718 0FCC  
                                        u22478 0AAE                                          u21950 0192  
                                        u21927 00F0                                          u24600 B404  
                                        u22568 0BB4                                          u21960 019A  
                                        u25400 5278                                          u23570 83CE  
                                        u21970 01BC                                          u21947 014C  
                                        u24620 A72C                                          u22668 0DB0  
                                        u22588 0C96                                          u27005 8A70  
                                        u21957 0188                                          u21990 020C  
                               __CFG_DEBUG$OFF 000000                                          u28000 8EF6  
                                        u25440 B666                                          u22688 0F02  
                                        u27025 8B44                                          u21977 01B2  
                                        u25425 BEAC                                          u25450 B692  
                                        u21898 0034                                          u25435 BC30  
                                        u22948 12CC                                          u25380 523A  
                                        u21997 0202                                          u25447 B65C  
                                        u28120 8FA6                                          u24680 A7D6  
                                        u25480 B880                                          u25457 B688  
                              __end_of___lwdiv B744                                          u28300 90B6  
                                        u28060 8F4E                                          u22988 133E  
                                        u27340 4BF8                                          u28310 A122  
                                        u28240 905E                                          u27280 BA0A  
                   _ADCC_ADTI_InterruptHandler 00CC                                          u28410 9126  
                                        u28180 9006                                          u27287 BA00  
                                        u28530 91D6                                          u27900 3B26  
                                        u27820 3616                                          _T2TMR 000FBB  
               __size_of_I2C2_FunctionComplete 001A                                          u28710 92DE  
                                        u28470 917E                                          u27760 BDF4  
                                        u27840 36A0                                          i1l250 007A  
                                        u28650 9286                                          u27770 BE06  
                                        _T2RST 000FC0                                          i1l251 0070  
                                        u29187 79C8                                          u27860 3806  
                                        i1l245 004C                                          u28590 922E  
                                        u27870 38B6                                          i1l247 0058  
                                        u27880 3964                                          i1l249 0064  
                                        u26985 899C                                __end_of___lwmod BC02  
                                        i2l122 B748                                          u27890 3A7A  
                                        i2l124 B760                                          i2l230 A438  
                                        i2l144 AB08                                          i2l136 BBB8  
                                        i2l232 A444                                          i2l224 A404  
                                        i2l234 A450                                          i2l226 A410  
                                        i2l235 A47A                                          i2l236 A470  
                                        i2l228 A41C                                          i1l940 8CB0  
                                        i1l943 8CBC                                          i1l953 8D76  
                                        i1l937 8C50                                          i1l971 8E22  
                                        i1l963 8DB8                                          i1l948 8CF8  
                                        i1l949 8D0A                                          i1l966 8DD4  
                                        i1l967 8DEA                                          i1l959 8D84  
                              ___awdiv@counter 020A                  __end_of_I2C2_FunctionComplete C5AC  
                                        _OSCEN 000EDC                                          _TMR0H 000FD4  
                                        _TMR1H 000FCE                                          _TMR0L 000FD3  
                     _OLED_UpdateFromRAMBuffer 9CD8                                          _TMR3H 000FC8  
                                        _TMR1L 000FCD                                          _TMR3L 000FC7  
                                        _TMR5H 000FC2                                          _TMR5L 000FC1  
                                 i2__div_to_l_ A1E2                                __end_of__doprnt 1724  
                                        _TRISA 000F88                                          _TRISB 000F89  
                                        _TRISC 000F8A              __size_of_TMR0_SetInterruptHandler 000E  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000              __size_of_TMR3_SetInterruptHandler 000E  
                    ?_TMR0_SetInterruptHandler 0200                        terminalTextAttributes@i 03FC  
                                __CFG_WRT3$OFF 000000                                  __CFG_PWRTE$ON 000000  
                         ?_QIErrorTimerHandler 0001                                  __CFG_WRT4$OFF 000000  
                                i2___fladd@grs 0063                                  __CFG_WRT5$OFF 000000  
                                __CFG_WRT6$OFF 000000                                  __CFG_WRT7$OFF 000000  
                    ?_TMR3_SetInterruptHandler 0200                                 __CFG_EBTR0$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                                 __CFG_EBTR4$OFF 000000  
                               __CFG_EBTR5$OFF 000000                                 __CFG_EBTR6$OFF 000000  
                             __end_of_TMR0_ISR C2D4                                 __CFG_EBTR7$OFF 000000  
                             __end_of_TMR1_ISR C03E                               __end_of_TMR2_ISR C2AC  
                                __CFG_WRTB$OFF 000000                               __end_of_TMR3_ISR C00A  
                         _getMinutesFromOnTime 97C0                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                       __end_of_QIIdleIOCHandler C672  
                               ?_INT1_CallBack 0001                               ?_CCP2_CaptureISR 0001  
                       __size_of_CCP2_CallBack 0040                                 __CFG_EBTRB$OFF 000000  
                                   i2isdigit@c 0003                      ??_terminal_ringBufferPull 03FF  
               ??_TMR3_DefaultInterruptHandler 0100                        __end_of_PIN_MANAGER_IOC C65E  
                              __end_of_dpowers E86F                             __size_of_TMR2_Stop 0004  
                                  ?_TMR2_Start 0001                                          fabs@d 0005  
                                   i2scale@scl 004D                 ??_INT1_DefaultInterruptHandler 0001  
                               i1___flmul@aexp 0148                                 i1___flmul@bexp 0149  
                                 i2__doprnt@ap 0070                                   i2__doprnt@cp 008B  
                        ?_ADCC_StartConversion 0001                           ??_QIChargeIOCHandler 0003  
                                 i2__doprnt@pb 006C                                          _scale 53E0  
                              __end_of_isdigit C3D4                                __end_of_memmove AAB8  
                                i2___fldiv@grs 0026                             __CFG_MCLRE$EXTMCLR 000000  
                                i2___fldiv@rem 001F                                 i1___flmul@sign 0143  
                               i1___flmul@temp 014E                                 i1___flmul@prod 014A  
                                        _putch C636                                 ?_INT2_CallBack 0001  
                 I2C2_MasterReadTRBBuild@pdata 0202                       _INT1_SetInterruptHandler C77C  
                      __end_of_TMR1_Initialize B92C                                 ?_EUSART2_Write 0001  
                                        pclath 000FFA                               __end_ofi2___flge A650  
                             __end_ofi2___fleq AF74                                          tablat 000FF5  
                     __end_ofi1_TMR3_StopTimer C87E                         __end_of_clearI2CErrors C4EE  
                             __end_ofi2___wmul C348                                          plusw2 000FDB  
                               ??_EUSART2_Read 0200                   __size_of_ADCC_GetFilterValue 0014  
                                        ttemp5 0060                                          ttemp6 0063  
                                        ttemp7 0067                                          status 000FD8  
                      __end_of_temp_adc_offset E873                         __end_of_clearADCErrors C6DE  
                                        wtemp8 0060                                __end_of_sprintf BA5C  
                           __size_ofi1___fladd 030E                    getCauseOfResetStringSmall@r 0202  
                           __size_ofi1___fldiv 028A                                  i2___flmul@grs 003A  
                              _TMR2_StartTimer C868                                i1___fladd@signs 011A  
                           __size_ofi1___flmul 0354                                __end_of_strncpy B3A6  
                             __end_ofi2_fround 81F6                                _TMR1_WriteTimer C414  
               ?_INTERRUPT_InterruptManagerLow 0001                             __size_ofi2___fladd 030E  
                           __size_ofi2___fldiv 0288                             __size_ofi2___awdiv 0084  
                           __size_ofi2___flneg 002E                             __size_ofi2___awmod 0070  
                            getUserID@IDOffset 0212                             __size_ofi2___flmul 0352  
                           __size_ofi2___flsub 0048                             __size_ofi2___fltol 00BA  
                           __size_ofi2___lldiv 0082                             __size_ofi2___llmod 0066  
                             __end_ofi2_printf BEF8                             __size_ofi2___lwdiv 0052  
                           __size_ofi2___lwmod 0042                   ??_getCauseOfResetStringSmall 0202  
        __end_of_EUSART2_SetTxInterruptHandler C798         __size_of_EUSART2_SetTxInterruptHandler 000E  
                _EUSART2_SetTxInterruptHandler C78A                                _TMR5_Initialize BE44  
                            ??_I2C2_MasterRead 0210                             __size_ofi2__doprnt 1718  
                            ??_I2C2_Initialize 0200                                __initialization A954  
               __size_of_terminalSetCursorHome 0010                        getStringSecondsAsTime@i 03E5  
                __end_of_terminalSetCursorHome C6EE                              i2___lldiv@divisor 0005  
                                 __end_of_fabs BF34                                   __end_of_main 7C86  
                       ??_I2C2_MasterTRBInsert 0204                              i2___lldiv@counter 000D  
                                   i2printf@ap 00A6                                     i2printf@pb 00A8  
                       ?_freqMeasStartCaptures 0001                          __end_of_ringBufferLUT 4F8A  
                      FLASH_ReadByte@flashAddr 0200                        __end_of_TMR2_Initialize C070  
                           __size_ofi2_isdigit 001E                           __size_of_getDeviceID 0020  
                             __end_of_OledFont E847                            __size_of_OLED_Clear 003E  
              getYearsFromOnTime@input_seconds 020D                                         ??_fabs 0009  
             __end_of_I2C2_MasterWriteTRBBuild BB78                       _TMR2_SetInterruptHandler C728  
                                       ??_main 04C6                                    ?i1___xxtofl 0100  
                                  _i2c2_object 0161                                _TMR3_StartTimer C886  
                                __activetblptr 000003                        __size_of_FLASH_ReadByte 001A  
                        _TMR3_InterruptHandler 0171                           __size_of_LM73Convert 0284  
                      __size_of_FLASH_ReadWord 0042                       ??_getStringSecondsAsTime 02A3  
                   __size_of_getDeviceIDString 0098                           __size_of__tdiv_to_l_ 0100  
                        ??_QIErrorTimerHandler 0003                                    ?i2___xxtofl 0005  
                 ?_getNXQChargeStateStringCaps 0200                                      ??_OLED_YX 0215  
                        ?_getMinutesFromOnTime 020D                    __size_of_getYearsFromOnTime 0030  
                                       _ADACCH 000F71                                         _ADACCL 000F70  
                   __end_of_EUSART2_Initialize B1F6                   ??_IOCBF2_SetInterruptHandler 0203  
                                       _ADCON0 000F60                                         _ADCON1 000F59  
                                       _ADCON2 000F5A                                         _ADCON3 000F5B  
                     _eusart2TxBufferRemaining 018F                                         _ADERRH 000F6F  
                                       _ADERRL 000F6E                               ___llmod@dividend 020D  
                                       _ADLTHH 000F6B                                         ?_scale 0227  
                                       STR_100 FDAA                                         _ADLTHL 000F6A  
                                       STR_101 FC8D                                         STR_110 FDAA  
                                       STR_102 FD22                                         STR_103 FF5A  
                                       STR_111 FF04                                         STR_200 F29C  
                                       STR_104 FDAA                                         STR_120 FF4A  
                                       STR_112 FF4A                                         STR_121 FDAA  
                                       STR_113 FDAA                                         STR_105 FDAA  
                                       STR_201 F386                                         STR_202 F29C  
                                       STR_130 FDAA                                         STR_122 FDAA  
                                       STR_114 FDAA                                         STR_106 FD94  
                                       STR_210 EFFD                                         _ADRESH 000F64  
                                       STR_211 F29C                                         STR_131 FDAA  
                                       STR_107 FD22                                         STR_115 FE6A  
                                       STR_123 FD7C                                         STR_203 F1DC  
                                       STR_204 F29C                                         STR_124 FF4A  
                                       STR_116 FF4A                                         STR_300 FFF8  
                                       STR_140 FF16                                         STR_108 FEFB  
                                       STR_132 FD08                                         STR_220 F94C  
                                       STR_212 F0A2                                         STR_213 F29C  
                                       STR_125 FDAA                                         STR_117 FDAA  
                                       STR_109 FDAA                                         STR_301 FFCC  
                                       STR_133 FDFC                                         STR_141 FF62  
                                       STR_221 FC39                                         STR_205 ED35  
                                       STR_214 F29C                                         STR_206 F29C  
                                       STR_126 FDAA                                         STR_118 FDAA  
                                       STR_302 FFCF                                         STR_150 FE07  
                                       STR_142 FF16                                         STR_310 FFCE  
                                       STR_134 FFA4                                         STR_222 FA1A  
                                       STR_230 FA04                                         _ADRESL 000F63  
                                       STR_223 F29C                                         STR_151 FDAA  
                                       STR_135 FDAA                                         STR_303 FFE1  
                                       STR_311 FFD4                                         STR_143 FE12  
                                       STR_127 FC7F                                         STR_119 FC71  
                                       STR_215 FB41                                         STR_207 EDEE  
                                       STR_231 E873                                         STR_240 F2D0  
                                       STR_232 EF54                                         STR_152 FDAA  
                                       STR_136 FDAA                                         STR_304 FFE7  
                                       STR_160 FD22                                         STR_144 FF16  
                                       STR_312 FFDA                                         STR_320 FFD1  
                                       STR_128 FDFC                                         STR_216 F9A9  
                                       STR_224 F29F                                         STR_208 EEA3  
                                       STR_225 F29C                                         STR_209 F29C  
                                       STR_233 ED73                                         STR_161 FDAA  
                                       STR_305 FFF3                                         STR_145 FE12  
                                       STR_313 FFE0                                         STR_321 FFD7  
                                       STR_129 FF1F                                         STR_153 FCFB  
                                       STR_137 FC63                                         STR_217 FB30  
                                       STR_241 F5DC                                         STR_234 F4FE  
                                       STR_170 FDAA                                         STR_162 FDAA  
                                       STR_154 FF16                                         STR_306 FFFB  
                                       STR_314 FFE6                                         STR_322 FFDD  
                                       STR_138 FF0D                                         STR_146 FE07  
                                       STR_330 FAFB                                         STR_218 F9C0  
                                       STR_226 F8EB                                         STR_242 F7F1  
                                       STR_250 F4AF                                         STR_235 F32B  
                                       STR_307 FFCC                                         STR_163 FE07  
                                       STR_155 FE12                                         STR_147 FE12  
                                       STR_315 FFEC                                         STR_323 FFE3  
                                       STR_139 FF62                                         STR_171 FBEF  
                                       STR_219 FB0D                                         STR_331 F87F  
                                       STR_227 F80E                                         STR_251 F56F  
                                       STR_243 F20E                                         STR_236 F7D3  
                                       STR_164 FDAA                                         STR_180 FF9F  
                                       STR_172 FD22                                         STR_156 FE07  
                                       STR_148 FE07                                         STR_308 FFFD  
                                       STR_316 FFF2                                         STR_324 FFE9  
                                       STR_228 FF9A                                         STR_332 FA46  
                                       STR_244 F847                                         STR_340 F715  
                                       STR_252 F68C                                         STR_260 EF1A  
                                       STR_237 F29C                                         STR_229 F29C  
                                       STR_165 FDAA                                         STR_149 FDAA  
                                       STR_317 FFF2                                         STR_181 FCE1  
                                       STR_157 FE12                                         STR_325 FFEF  
                                       STR_309 FFCB                                         STR_173 FFC3  
                                       STR_245 FC2B                                         STR_333 FAD5  
                                       STR_253 F736                                         STR_341 F646  
                                       STR_261 F10C                                         STR_174 FDAA  
                                       STR_318 FFFD                                         STR_182 FF71  
                                       STR_158 FE07                                         STR_326 FFF5  
                                       STR_190 FD70                                         STR_166 FBD1  
                                       STR_334 FA5B                                         STR_350 F91C  
                                       STR_342 F594                                         STR_238 F54A  
                                       STR_262 F240                                         STR_246 F140  
                                       STR_270 EEDF                                         STR_254 ECB8  
                                       STR_175 FDAA                                         STR_159 FDAA  
                                       STR_327 FDB5                                         STR_319 FDB5  
                                       STR_183 FB62                                         STR_167 FD22  
                                       STR_191 FE43                                         STR_335 F9EE  
                                       STR_263 F97B                                         STR_351 F904  
                                       STR_247 F796                                         STR_255 F777  
                                       STR_343 F6AF                                         STR_271 EE67  
                                       STR_239 EB60                                         STR_176 FB72  
                                       STR_328 FEE7                                         STR_184 FE74  
                                       STR_168 FFBF                                         STR_192 FF95  
                                       STR_336 FA99                                         STR_280 F8B5  
                                       STR_256 F7B5                                         STR_344 F525  
                                       STR_264 F3B3                                         STR_248 F2FD  
                                       STR_272 F270                                         STR_352 EE2B  
                                       STR_177 FDAA                                         STR_169 FDAA  
                                       STR_185 FB92                                         STR_193 FFBB  
                                       STR_353 FF6A                                         STR_329 FDDB  
                                       STR_337 F964                                         STR_249 F82B  
                                       STR_345 F6D1                                         STR_265 F359  
                                       STR_281 F035                                         STR_273 EDB1  
                                       STR_257 EBF9                                         STR_178 FDAA  
                                       STR_186 FBFE                                         STR_194 FF7E  
                                       STR_290 FF3A                                         STR_354 FB1F  
                                       STR_338 FAAD                                         STR_266 F992  
                                       STR_258 F757                                         STR_346 F600  
                                       STR_282 EFC5                                         STR_274 EC79  
                                       STR_187 FC47                                         STR_179 FDE6  
                                       STR_195 FF95                                         STR_291 FEE0  
                                       STR_355 FDD0                                         STR_347 FA85  
                                       STR_259 F669                                         STR_339 F623  
                                       STR_275 F5B8                                         STR_267 F174  
                                       STR_283 F0D8                                         STR_196 FFBB  
                                       STR_188 FB82                                         STR_292 FEF2  
                                       STR_348 F89A                                         STR_284 F6F3  
                                       STR_276 F40B                                         STR_268 EF8D  
                                       _CCPR2H 000FA7                                         STR_197 FF78  
                                       STR_293 FEE9                                         STR_189 FD2F  
                                       STR_269 FAC1                                         STR_349 F934  
                                       STR_285 ECF7                                         STR_277 EC39  
                                       STR_294 FF90                                         STR_278 F487  
                                       STR_198 F06C                                         STR_286 EB00  
                                       STR_295 FF95                                         STR_199 FBC2  
                                       STR_287 F435                                         STR_279 EBB8  
                                       STR_296 FFBB                                         STR_288 FECE  
                                       _CCPR2L 000FA6                                         STR_289 FED7  
                                       STR_298 FFB3                                         STR_299 FFB7  
                                       _ADSTAT 000F65                                         _ADUTHH 000F6D  
                             ___awdiv@dividend 0206                                         _ADUTHL 000F6C  
                                       _ANSELA 000F11                                         ?_putch 0001  
                                       _ANSELB 000F19                                         _ANSELC 000F21  
                                       _T0CON0 000FD5                                         _T0CON1 000FD6  
                                       _T1GATE 000FD1                                         _T1GCON 000FD0  
                                       _T3GATE 000FCB                                         _T3GCON 000FCA  
                            __end_of_OLED_Init ADCE                                         _T5GATE 000FC5  
                                       _T5GCON 000FC4                                         _RC2REG 000E99  
                                       _RB4PPS 000EF3                                         _RC2STA 000E9D  
                                       _RB5PPS 000EF4                        TMR1_WriteTimer@timerVal 0200  
                                       _RC4PPS 000EFB                   __end_of_I2C2_BusCollisionISR C810  
                                       i1l1069 BD20                                         _ODCONA 000F0F  
                                       _ODCONB 000F17                                         i1l1515 C47E  
                                       _ODCONC 000F1F                                         i1l3311 6A66  
                                       i1l3320 6C7E                                         i1l3321 6C7A  
                                       i1l3242 75AE                                         i1l3226 74DC  
                                       i1l3251 7614                                         i1l3227 74BA  
                                       i1l3252 7610                                         i1l3328 6D04  
                                       i1l3352 9A96       __end_of_I2C2_WaitForLastPacketToComplete C830  
    __size_of_I2C2_WaitForLastPacketToComplete 000A              ?_I2C2_WaitForLastPacketToComplete 0001  
           ??_I2C2_WaitForLastPacketToComplete 0200               _I2C2_WaitForLastPacketToComplete C826  
                                       i1l3281 85F4                                         i1l3292 8662  
                      __end_of_TMR3_Initialize B8DC                                         i1l3293 865E  
                                       i1l3359 9B14                                         i2l3040 9F7A  
                                       i2l3041 9FA2                                         i2l3117 B460  
                                       i2l1621 C630                                         i2l3311 6DB8  
                                       i2l3320 6FD0                                         i2l3321 6FCC  
                                       i2l1625 C61A                                         i2l3242 78BC  
                                       i2l3226 77EA                                         i2l3251 7922  
                                       i2l3227 77C8                                         i2l2523 22A8  
                                       i2l3252 791E                                         i2l1581 41D4  
                                       i2l2525 2276                                         i2l2702 B172  
                                       i2l2606 2A2E                                         i2l3328 7056  
                                       i2l3352 9BD6                                         i2l2640 2C16  
                                       i2l2608 29FC                                         i2l1808 976C  
                                       i2l3281 887C                                         i2l1809 97A6  
                                       i2l2642 2BE4                                         i2l2491 2088  
                                       i2l3292 88EA                                         i2l3188 B832  
                                       i2l2556 2494                                         i2l3293 88E6  
                                       i2l3198 BD04                                         i2l3375 BF22  
                                       i2l3359 9C54                                         i2l2577 27CE  
                                       i2l2489 20BA                                         i2l2953 A614  
                                       _TABLAT 000FF5                                  i2putch@txData 0002  
                                       _FVRCON 000F31                                      ??i2_scale 0049  
                  ?_getCauseOfResetStringSmall 0200                                         _OSCFRQ 000EDE  
                              ?_clearI2CErrors 0001                                  ?_OLED_Command 0001  
                                       _NVMDAT 000F80                                      ??i2_putch 0002  
                                       _RX2PPS 000E8D                               _adc_calculations 02BE  
                                       _TX2REG 000E9A                                         _TX2STA 000E9E  
              __size_of_LM73AcquisitionHandler 022C                               ?_CCP2_Initialize 0001  
                              ?_clearADCErrors 0001                                _freqMeasConvert A650  
                             __end_of___xxtofl 9A54                          I2C2_MasterRead@length 020B  
                    __size_ofi2_TMR1_StopTimer 0004          __end_of_ADCC_DischargeSampleCapacitor C856  
       __size_of_ADCC_DischargeSampleCapacitor 0008                  _ADCC_DischargeSampleCapacitor C84E  
                   ??_ADCC_GetConversionResult 0003                         __size_ofi2__tdiv_to_l_ 00FE  
                              _TMR3_WriteTimer C3F4                                 i2___fladd@aexp 0061  
                               i2___fladd@bexp 0062                                  ?_OLED_PutChar 0001  
        __end_of_ADCC_HasAccumulatorOverflowed C81C         __size_of_ADCC_HasAccumulatorOverflowed 000C  
                _ADCC_HasAccumulatorOverflowed C810                                 __CFG_XINST$OFF 000000  
                                 __doprnt$6033 025E                                   __doprnt$4980 026D  
                                 __doprnt$4981 026F                                   __doprnt$4982 0271  
                                 __doprnt$4975 0263                                   __doprnt$4976 0265  
                                 __doprnt$4977 0267                                   __doprnt$4978 0269  
                                 __doprnt$4979 026B                               __end_of__powers_ E4F3  
                                 i2_scale$6418 0049           __end_of_TMR1_DefaultInterruptHandler C8A2  
        __size_of_TMR1_DefaultInterruptHandler 0002                   _TMR1_DefaultInterruptHandler C8A0  
                                _CCP2_CallBack BD0E                __end_of_terminal_ringBufferPull A1E2  
                         _getSecondsFromOnTime 94E4                                         ___flge A4AE  
                                       ___fleq AE5E                               ?_updateErrorLEDs 0001  
                      __end_of_TMR1_StartTimer C88E                                   ?_TMR1_Reload 0001  
                            _ADCC_ThresholdISR C2D4                                      ??___fladd 023C  
                                       ___wmul C25C                                      ??___fldiv 0208  
                                    ??___awdiv 020A                                      ??___flneg 0204  
                               _p_i2c2_current 00D1                                 __CFG_STVREN$ON 000000  
                                    ??___awmod 0204                              __end_of_TMR2_Stop C882  
                                    ??___flmul 0216                      ??_I2C2_MasterReadTRBBuild 0207  
                                    ??___flsub 0254                                      ??___fltol 0234  
                                    ??___lldiv 0208                                      ??___llmod 0215  
                                 ?_TMR3_Reload 0001                                      ??___lwdiv 0209  
                                    ??___lwmod 0204                            __size_of_TMR2_Start 0004  
                    i2TMR3_WriteTimer@timerVal 0001                                      ??__doprnt 025A  
                             ?_TMR0_Initialize 0001                             ?_ADCC_ThresholdISR 0001  
                                i2__doprnt@idx 007A                                         _fround 7C86  
                                i2__doprnt@len 008D                                      ?_I2C2_ISR 0001  
                                i2__doprnt@val 0099                                         clear_0 A9B4  
                                       clear_1 A9C6                                         clear_2 A9D2  
                                       clear_3 A9DE                                         clear_4 A9EA  
                                       clear_5 A9FA                           _eusart2RxStringReady 07E8  
                             ___awdiv@quotient 020C                                 i2___fldiv@aexp 002B  
                               i2___fldiv@bexp 002A                                ___awmod@divisor 0202  
                               i2___fldiv@sign 0023                                   __doprnt@flag 0289  
                     I2C2_Stop@completion_code 0102                                ___awmod@counter 0204  
                                       _printf BE08                                   __doprnt@eexp 0277  
                                 __doprnt@fval 027D            __size_of_IOCBF2_SetInterruptHandler 000E  
                                 __doprnt@prec 0287                                         _strcat B4D2  
                                       _strcmp B83C                  I2C2_MasterReadTRBBuild@length 0204  
                                       _strcpy B9CC                                         _strlen C130  
                               i2___awdiv@sign 000C                              __end_ofi1___fladd 76A6  
                 getCauseOfResetString@strings 01A9                              __end_ofi1___fldiv 870A  
                              _ADCC_Initialize B472                              __end_ofi1___flmul 6D38  
                            ??i2_EUSART2_Write 0001                                 _PMD_Initialize C4EE  
         __end_of_INT2_DefaultInterruptHandler C8AA          __size_of_INT2_DefaultInterruptHandler 0002  
                 _INT2_DefaultInterruptHandler C8A8                        FLASH_ReadWord@flashAddr 0204  
                            __end_ofi2___fladd 79B4                                      ??_isdigit 0200  
                                    ??_memmove 0206                              __end_ofi2___fldiv 8992  
                            __end_ofi2___awdiv B102                              __end_ofi2___flneg C18C  
                              ??_INT1_CallBack 0001                              __end_ofi2___awmod B2D8  
                            __end_ofi2___flmul 708A                              __end_ofi2___flsub BAEC  
                            __end_ofi2___fltol A954                              __end_ofi2___lldiv B184  
                          ??_ADCC_ThresholdISR 005E                              __end_ofi2___llmod B472  
                            __end_ofi2___lwdiv B83C                                   __mediumconst E4BE  
                            __end_ofi2___lwmod BD0E                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                          _ADCC_StopConversion C892                           _EUSART2_Transmit_ISR BB78  
                            __end_ofi2__doprnt 2E3C                         ??_ADCC_StartConversion 0100  
                              ??_INT2_CallBack 0001                                 i2___awmod@sign 0006  
                        __size_of_getUARTError 0006                        __end_of_TMR2_StartTimer C86E  
                              ??_EUSART2_Write 0200       TMR1_SetInterruptHandler@InterruptHandler 0200  
     TMR3_SetInterruptHandler@InterruptHandler 0200       TMR2_SetInterruptHandler@InterruptHandler 0200  
     TMR0_SetInterruptHandler@InterruptHandler 0200   ADCC_SetADTIInterruptHandler@InterruptHandler 0200  
   IOCBF3_SetInterruptHandler@InterruptHandler 0200     IOCBF2_SetInterruptHandler@InterruptHandler 0200  
     INT2_SetInterruptHandler@InterruptHandler 0200       INT1_SetInterruptHandler@InterruptHandler 0200  
                             ?_PIN_MANAGER_IOC 0001                                      ??_sprintf 0298  
                      __end_of_TMR1_WriteTimer C434                                 i2___flmul@aexp 0039  
                               i2___flmul@bexp 003E                                      ??_strncpy 0206  
                                 ??_IOCBF2_ISR 0003                                 i2___flmul@sign 0038  
                               i2___flmul@temp 0043                                   ??_IOCBF3_ISR 0003  
                               i2___flmul@prod 003F                  __size_of_INTERRUPT_Initialize 0020  
                              _eusart2RxBuffer 0480                               _OLED_update_flag 02D6  
                                   ___flge@ff1 0200                                     ___flge@ff2 0204  
                               ??_OLED_Command 0210                               ?_TMR1_Initialize 0001  
                      __end_of_TMR5_Initialize BE80                                   ___xxtofl@arg 0248  
                            __end_ofi2_isdigit C4D2                                   ___xxtofl@exp 0247  
              ?_INTERRUPT_InterruptManagerHigh 0001               ??_INTERRUPT_InterruptManagerHigh 00AD  
                             _OLED_update_time 00FB                              _SYSTEM_Initialize BD8C  
                                 ___xxtofl@val 023E                                     ___fleq@ff1 0200  
                                   ___fleq@ff2 0204                                _eusart2TxBuffer 04C8  
                                   __accesstop 0060                        __end_of__initialization AA00  
                               i2___fltol@exp1 0057                                      ?_INT1_ISR 0001  
                                   ___flneg@f1 0200                                      ?_INT2_ISR 0001  
                       _qi_isns_average_buffer 0400                             ?_SYSTEM_Initialize 0001  
                          __size_ofi1___xxtofl 0144                                  ___rparam_used 000001  
    __end_of_ADCC_GetCurrentCountofConversions C89A     __size_of_ADCC_GetCurrentCountofConversions 0004  
          ??_ADCC_GetCurrentCountofConversions 0001             ?_ADCC_GetCurrentCountofConversions 0001  
            _ADCC_GetCurrentCountofConversions C896                                     ___fltol@f1 0230  
                            ?_I2C2_MasterWrite 0209                                _TMR5_WriteTimer C3D4  
                               ??_OLED_PutChar 0210                             i2__tdiv_to_l_@exp1 0011  
                            i2___llmod@divisor 0012                             i2__tdiv_to_l_@cntr 0010  
                    __end_of_ADCC_ThresholdISR C2FC                                 ?_CCP2_CallBack 0154  
    LM73TempSensorInitialize@output_data_array 0210                              i2___llmod@counter 0016  
                         ?_ADCC_StopConversion 0001                             i2__tdiv_to_l_@quot 000C  
            terminal_ringBufferPull@charNumber 04C0                            __size_ofi2___xxtofl 0140  
                        ?_getSecondsFromOnTime 020D                   ?_ADC_acquisitionTimerHandler 0001  
                           ??_I2C2_MasterWrite 0210                     __end_of_getMajorRevisionID BEBC  
                           i2___lwmod@dividend 0001                                 __pcstackCOMRAM 0001  
                           i2___lldiv@dividend 0001               __end_of_LM73TempSensorInitialize 90C4  
                  __size_of_getHoursFromOnTime 00F0                                   __pidataBANK0 C89A  
                                 __pidataBANK1 C69A                                   __pidataBANK2 C6AC  
                          ??_SYSTEM_Initialize 0205                        __end_of_TMR3_StartTimer C88A  
                                    ?_TMR0_ISR 0001                                      ?_TMR1_ISR 0001  
                                    ?_TMR2_ISR 0001                  ?_TMR1_DefaultInterruptHandler 0001  
                                    ?_TMR3_ISR 0001                                  __end_of_scale 5814  
               ?_EUSART2_SetTxInterruptHandler 0200                                 _i2c2_trb_count 00DA  
                                __end_of_putch C64A                                     ??_I2C2_ISR 0103  
                             ?_TMR2_Initialize 0001                       __size_of_getCauseOfReset 005A  
                               _QI_charge_time 02D2                         __end_of_PMD_Initialize C50A  
                       _LM73AcquisitionHandler 90C4                          _getCauseOfResetString C070  
                           __end_of_IOCBF2_ISR C234                                      ?i2___flge 0001  
                           __end_of_IOCBF3_ISR C20A                                      ?i2___fleq 0001  
                         __end_of_EUSART2_Read BD8C                                   _getUARTError C856  
                                    ?i2___wmul 0001                                  i2__tdiv_to_l_ 9EFA  
                  __size_of_EXT_INT_Initialize 0038                                     __div_to_l_ 9FF8  
                       ??_getMinutesFromOnTime 0211                       _printCurrentMeasurements 4F8A  
              __size_of_getStringSecondsAsTime 03A6                             __size_of_getUserID 0034  
                                    ?i2_fround 0045                          ?_EUSART2_Transmit_ISR 0001  
                  __size_of_getMinorRevisionID 0026               __end_of_INT2_SetInterruptHandler C77C  
                  __end_of_terminalClearScreen C6FE                       _I2C2_MasterWriteTRBBuild BB32  
                ?_INT2_DefaultInterruptHandler 0001                                      ?i2_printf 00A4  
       __end_of_IOCBF3_DefaultInterruptHandler C8A6        __size_of_IOCBF3_DefaultInterruptHandler 0002  
               _IOCBF3_DefaultInterruptHandler C8A4                    ADCC_StartConversion@channel 0100  
                            ?_OLED_WriteString 0221                                _clearUARTErrors C7EC  
                                   __doprnt@ap 0258                                     __doprnt@cp 0273  
                 I2C2_MasterWriteTRBBuild@ptrb 0200                                     __doprnt@pb 0254  
                      __end_of_freqMeasConvert A71A                                __div_to_l_@exp1 020D  
                              __div_to_l_@cntr 020C                                        ??_scale 022B  
                    __end_of_SYSTEM_Initialize BDCA                                __div_to_l_@quot 0208  
                      __end_of_TMR3_WriteTimer C414                                        ??_putch 0201  
                           i2___lldiv@quotient 0009                                   ??_OLED_Clear 0221  
                           ??_OLED_WriteString 0223                                  _eusart2RxHead 00DC  
                                _eusart2TxHead 0193                                     __pbssBANK0 00B9  
                                   __pbssBANK1 0161                                     __pbssBANK2 02BE  
                                   __pbssBANK3 0300                                     __pbssBANK4 0400  
                                _eusart2RxTail 0198                                  _eusart2TxTail 0191  
                             i2__tdiv_to_l_@f1 0001                               i2__tdiv_to_l_@f2 0005  
                             ?_TMR3_Initialize 0001               __size_of_printErrorHandlerStatus 01F4  
              getHoursFromOnTime@input_seconds 020D                                     ??_INT1_ISR 0001  
                                   ??_INT2_ISR 0001                                 i1___xxtofl@arg 010A  
                     _floatToEngineeringFormat 6338                                 i1___xxtofl@exp 0109  
                               i1___xxtofl@val 0100                                  __div_to_l_@f1 0200  
                                __div_to_l_@f2 0204                              _freq_meas_results 0168  
                        EUSART2_Read@readValue 0200                          ??_ADCC_StopConversion 0001  
         __size_of_getNXQChargeStateStringCaps 005C                               ??_FVR_Initialize 0200  
                    getMinutesFromOnTime@hours 0218                                  _error_handler 00B9  
                    getMinutesFromOnTime@years 0216                                        ?___flge 0200  
                                      ?___fleq 0200               __end_of_TMR0_SetInterruptHandler C752  
               ?_ADCC_DischargeSampleCapacitor 0001              terminal_ringBufferPull@index_4740 04C2  
                   ??_OLED_UpdateFromRAMBuffer 0223               __end_of_TMR3_SetInterruptHandler C728  
                                      ?___wmul 0200                               ?_TMR1_StartTimer 0001  
                                   ??_TMR0_ISR 005F                                     ??_TMR1_ISR 0003  
                              __CFG_PPS1WAY$ON 000000                                     ??_TMR2_ISR 0101  
                                   ??_TMR3_ISR 0102                        __end_of_ADCC_Initialize B4D2  
                  __size_of_OLED_updateHandler 1246                                        _CCP2CAP 000FA9  
                                      _CCP2CON 000FA8                 ?_ADCC_HasAccumulatorOverflowed 0001  
                                      _ADFLTRH 000F73                                        _ADFLTRL 000F72  
                                      _CCP2PPS 000EB0                                        ?_fround 0227  
                                      _ADPREVH 000F62                                        _ADPREVL 000F61  
         __end_of_ADCC_SetADTIInterruptHandler C7B4          __size_of_ADCC_SetADTIInterruptHandler 000E  
                 _ADCC_SetADTIInterruptHandler C7A6             OLED_UpdateFromRAMBuffer@char_index 0223  
                                      _ADSTPTH 000F69                                        _ADSTPTL 000F68  
                         _I2C2_BusCollisionISR C804                                        ?_printf 02A9  
                              ?_PMD_Initialize 0001                            _ADCC_GetFilterValue C672  
            getCauseOfResetStringSmall@strings 02ED                                 ?i2__tdiv_to_l_ 0001  
                                   ??i2___flge 0009                             __end_of_OLED_Clear BE08  
                                   ??i2___fleq 0009                                        ?_strcat 0200  
                                      ?_strcmp 0200                                        ?_strcpy 0203  
                                      ?_strlen 0200                                 _FLASH_ReadByte C55E  
                      __size_of_TMR1_StopTimer 0004                                     ??i2___wmul 0005  
                               _FLASH_ReadWord BC8A                          _heartbeatTimerHandler 965E  
                   ??_INT1_SetInterruptHandler 0203                                        i1l13320 7412  
                                      i1l13404 7538                                        i1l13316 740E  
                                      i1l13500 84AE                                        u2511_41 9F36  
                                      i1l13422 75D2                                        i1l13414 759E  
                                      i1l13432 75E8                                        i1l13328 7432  
                                      i1l13520 84EE                                        i1l13504 84B2  
                                      i1l13370 74C8                                        i1l13610 86F4  
                                      i1l13602 86A6                                        i1l13372 74CC  
                                      i1l13292 73C6                                        i1l13532 8526  
                                      i1l13524 84F2                                        i1l21524 8D9A  
                                      i1l13470 7688                                        i1l13438 75F2  
                                      i1l13358 746E                                        i1l13606 86CA  
                                      i1l15126 BD10                                        i1l21550 8DFE  
                                      i1l21534 8DBE                                        i1l13472 768A  
                                      i1l13296 73CA                                        i1l13616 8700  
                                      i1l13640 6A16                                        i1l15136 BD3C  
                                      i1l21464 8CA0                                        i1l13466 7680  
                                      i1l13458 765A                                        i1l13394 7522  
                                      i1l13386 7500                                        i1l13618 8702  
                                      i1l13570 85F2                                        i1l13546 8554  
                                      i1l13538 853C                                        i1l13714 6C44  
                                      i1l13642 6A26                                        i1l21562 8E2A  
                                      i1l21546 8DF4                                        i1l21482 8CF2  
                                      i1l15242 C48A                                        i1l13396 7526  
                                      i1l13564 85CC                                        i1l13556 85A4  
                                      i1l13708 6C26                                        i1l20916 C5A6  
                                      i1l20908 BC84                                        i1l21564 8E30  
                                      i1l21476 8CCE                                        i1l21468 8CB4  
                                      i1l21572 8E44                                        i1l13582 8628  
                                      i1l13750 6D22                                        i1l13734 6CC2  
                                      i1l13638 6A12                                        i1l21566 8E38  
                                      i1l13576 860A                                        i1l13656 6A52  
                                      i1l21496 8D3C                                        i1l13738 6CE0  
                                      i1l13666 6A84                                        i1l13658 6A56  
                                      i1l13770 9ACA                                        i1l13762 9AA6  
                                      i1l13780 9B3A                                        i1l13772 9AD6  
                                      i1l13782 9B46                                        i1l13774 9AFC  
                                      i1l12966 C4A8                                        i1l13768 9AC4  
                                      i1l13798 9B86                                        i2l20202 19C6  
                                      i2l12202 C538                                        _INT1PPS 000EA2  
                                      i2l20220 1A48                                        i2l20204 19D0  
                                      u2509_41 9F0A                                        i2l21102 489E  
                                      i2l21022 408E                                        i2l20310 1E9E  
                                      i2l20302 1E32                                        i2l20230 1AC2  
                                      i2l20214 1A28                                        i2l20206 19D6  
                                      i2l20150 17AE                                        i2l21112 48E6  
                                      i2l21040 42B2                                        i2l20400 220C  
                                      i2l20224 1A84                                        i2l20152 17B4  
                                      i2l20144 176E                                        i2l21026 40DC  
                                      i2l21106 48A4                                        i2l20410 2248  
                                      i2l20402 2214                                        i2l20314 1ECC  
                                      i2l20250 1BC0                                        i2l20242 1B76  
                                      i2l20218 1A3E                                        i2l20154 17BA  
                                      i2l20138 1728                                        _INT2PPS 000EA3  
                                      i2l21116 48F6                                        i2l21044 43B0  
                                      i2l21036 41D8                                        i2l21108 48D6  
                                      i2l20324 1F34                                        i2l20500 2738  
                                      i2l20244 1B8A                                        i2l20236 1B26  
                                      i2l20228 1AAE                                        i2l20180 18F6  
                                      i2l20148 179C                                        i2l21126 49F0  
                                      i2l20430 2304                                        i2l20350 2030  
                                      i2l20334 1FB0                                        i2l20270 1CB0  
                                      i2l20262 1C52                                        i2l20246 1BAE  
                                      i2l20190 1982                                        i2l20254 1BC6  
                                      i2l20166 1830                                        i2l20158 17C2  
                                      i2l20600 2A08                                        i2l20416 2282  
                                      i2l20440 23F6                                        i2l20360 205A  
                                      i2l20328 1FAC                                        i2l20256 1C3C  
                                      i2l20192 1986                                        i2l20184 1948  
                                      i2l21082 46A6                                        i2l21090 473C  
                                      i2l21058 44DE                                        i2l21066 4574  
                                      i2l20610 2A6E                                        i2l20530 2856  
                                      i2l20506 2782                                        i2l20450 2468  
                                      i2l20442 2402                                        i2l20426 22E8  
                                      i2l20346 2016                                        i2l20194 198A  
                                      i2l20186 1974                                        i2l21162 975A  
                                      i2l21154 9702                                        i2l21146 96AA  
                                      i2l21092 4740                                        i2l21068 4578  
                                      i2l20620 2ADE                                        i2l20612 2A8A  
                                      i2l20524 2852                                        i2l20516 2804  
                                      i2l20508 27B4                                        i2l20452 2470  
                                      i2l20380 2126                                        i2l20196 198E  
                                      i2l21412 AB0C                                        i2l21404 AAE6  
                                      i2l12188 C554                                        i2l21156 9714  
                                      i2l21148 96BC                                        i2l20614 2A98  
                                      i2l20518 2838                                        i2l20470 250C  
                                      i2l20446 243E                                        i2l20438 23CA  
                                      i2l20366 2094                                        i2l20390 2194  
                                      i2l20294 1DB8                                        i2l20286 1D3A  
                                      i2l20632 2B56                                        i2l20624 2B08  
                                      i2l20560 290C                                        i2l20544 2898  
                                      i2l20392 21A6                                        i2l20384 2162  
                                      i2l20376 20FA                                        i2l20650 2BF0  
                                      i2l20626 2B12                                        i2l20570 294E  
                                      i2l20538 2894                                        i2l20554 28D6  
                                      i2l20482 2634                                        i2l20474 256E  
                                      i2l20466 24E2                                        i2l20458 2498  
                                      i2l20378 2116                                        i2l20298 1DE6  
                                      i2l21426 AB54                                        i2l20660 2C56  
                                      i2l20644 2BB6                                        i2l20636 2B80  
                                      i2l20564 292C                                        i2l20556 28EC  
                                      i2l20492 26FC                                        i2l20484 2660  
                                      i2l20396 21E2                                        i2l20388 218C  
                                      i2l20582 299C                                        i2l20486 26B4  
                                      i2l20680 2DD6                                        i2l20672 2D68  
                                      i2l20664 2C74                                        i2l20584 29A4  
                                      i2l20576 2970                                        i2l20496 2726  
                                      i2l20488 26C0                                        i2l20666 2CF4  
                                      i2l20674 2D7E                                        i2l20682 2DE4  
                                      i2l20594 29CE                                        i2l20578 2978  
                                      i2l20498 272E                                        i2l15250 C600  
                                      i2l21396 AAC8                                        i2l20678 2DBA  
                                      i2l14800 882C                                        i2l14820 8892  
                                      i2l14814 887A                                        i2l14808 8854  
                                      i2l14744 8736                                        i2l14850 8952  
                                      i2l14826 88B0                                        i2l19010 7830  
                                      i2l19002 780E                                        i2l15650 BBB2  
                                      i2l14860 8988                                        i2l14764 8776  
                                      i2l14748 873A                                        i2l19012 7834  
                                      i2l19020 7846                                        i2l14862 898A  
                                      i2l14854 897C                                        i2l14846 892E  
                                      i2l14790 87DC                                        i2l14782 87C4  
                                      i2l19110 6D64                                        i2l19030 78AC  
                                      i2l13982 C518                                        i2l14776 87AE  
                                      i2l14768 877A                                        i2l19112 6D68  
                                      i2l19210 7032                                        i2l19130 6DA8  
                                      i2l19114 6D78                                        i2l19222 7074  
                                      i2l19206 7014                                        i2l19038 78E0  
                                      i2l19054 7900                                        i2l19128 6DA4  
                                      i2l19048 78F6                                        i2l19138 6DD6  
                                      i2l19082 798E                                        i2l19074 7968  
                                      i2l19180 6F78                                        i2l19086 7996  
                                      i2l19088 7998                                        i2l19600 B164  
                                      i2l18800 B0C0                                        i2l19186 6F96  
                                      i2l19610 A200                                        i2l18810 B0E0  
                                      i2l19630 A24E                                        i2l19534 81A2  
                                      i2l18814 B0EA                                        i2l18830 B27C  
                                      i2l18912 76D8                                        i2l19800 9FCC  
                                      i2l19528 80BA                                        i2l18840 B29E  
                 ?_terminalTextAttributesReset 0001                                        i2l19706 C17A  
                                      i2l19650 A29A                                        i2l18762 B74A  
                                      i2l18818 B0F8                                        i2l18850 B2C0  
                                      i2l18834 B288                                        i2l19554 59F4  
                                      i2l18932 771C                                        i2l18908 76D4  
                                      i2l19732 A902                                        i2l19716 A8B8  
                                      i2l19660 A2B2                                        i2l19572 5BFC  
                                      i2l19548 5948                                        i2l19750 A942  
                                      i2l19742 A91A                                        i2l19590 B130  
                                      i2l19822 B452                                        i2l19814 B41E  
                                      i2l19662 A2BE                                        i2l19654 A2AA  
                                      i2l19638 A27E                                        i2l19806 9FD4  
                                      i2l18774 B78C                                        i2l18854 B2CE  
                                      i2l18846 B2B6                                        i2l18838 B296  
                                      i2l19566 5B50                                        i2l19558 5A24  
                                      i2l18944 7740                                        i2l18936 7720  
                                      i2l19672 AF52                                        i2l19744 A926  
                                      i2l19736 A912                                        i2l19816 B42A  
                                      i2l19808 9FE0                                        i2l19760 9F26  
                                      i2l18864 B800                                        i2l18776 B792  
                                      i2l18792 B0A2                                        i2l19850 9C3C  
                                      i2l18866 B808                                        i2l18786 B092  
                                      i2l19692 A5FE                                        i2l19684 A5B4  
                                      i2l19844 9C04                                        i2l19676 AF70  
                                      i2l19668 AF1E                                        i2l19588 B124  
                                      i2l18876 B828                                        i2l18892 BCFA  
                                      i2l18884 BCDA                                        i2l18974 777C  
                                      i2l19846 9C0A                                        i2l19838 9BE6  
                                      i2l18886 BCE2                                        i2l18798 B0B8  
                                      i2l19688 A5E8                                        i2l19856 9C7A  
                                      i2l19848 9C16                                        i2l19698 A64C  
                                      i2l18986 77D6                                        i2l19874 9CC6  
                                      i2l19858 9C86                                        i2l18988 77DA  
                                      i2l19796 9FBC                                        i2l19886 C4CA  
                                    ?___xxtofl 023E              I2C2_ISR@i2c_10bit_address_restart 00D8  
                                      _SP2BRGH 000E9C                                     ??i2_fround 0049  
                                      _SP2BRGL 000E9B                                        _OLED_YX BC02  
                  __end_of_leftCapTouchHandler C636                                        _OSCCON1 000ED8  
                                      _OSCCON3 000EDA                         I2C2_MasterRead@address 020C  
                  __end_of_EUSART2_Receive_ISR AB5C             __end_of_IOCBF2_SetInterruptHandler C76E  
                   _IOCBF2_SetInterruptHandler C760                                        _TBLPTRH 000FF7  
                                      _TBLPTRL 000FF6                                        _TBLPTRU 000FF8  
                                    _I2C2_Stop BC46                  _live_measurement_request_flag 02D9  
                                   ??i2_printf 005E                                        _NVMADRH 000F7F  
                                      _NVMADRL 000F7E                                        _OSCTUNE 000EDD  
                                      _NVMCON2 000F82                                        _SSP2ADD 000E93  
                __size_of_rightCapTouchHandler 0016                       getMinutesFromOnTime@days 0217  
                                      _SLRCONA 000F0E                                        _SLRCONB 000F16  
                                      _SLRCONC 000F1E                                        _SSP2BUF 000E92  
                                 ??_TMR2_Start 0001                        __size_of_TMR2_StopTimer 0006  
                            ?_QIIdleIOCHandler 0001               __size_of_getNXQChargeStateString 005C  
                             ?_TMR2_StartTimer 0001                  getStringSecondsAsTime@minutes 03EA  
                getStringSecondsAsTime@seconds 03E6                                _I2C2_MasterRead B97C  
                             ?_TMR1_WriteTimer 0200                        __end_of_TMR5_WriteTimer C3F4  
                              _I2C2_Initialize BF6C                             ??_QIIdleIOCHandler 0003  
                       __size_ofi1_TMR3_Reload 000E                                        i2_scale 5814  
                             ?_TMR5_Initialize 0001                         I2C2_MasterRead@trBlock 0199  
                         ?_ADCC_GetFilterValue 0001                                        i2_putch C844  
                            ?i1_TMR3_StopTimer 0001                        __size_of_TMR3_StopTimer 0004  
                             i2_TMR1_StopTimer C882                                ??_CCP2_CallBack 0156  
                              i2___fladd@signs 0060                         _getStringSecondsAsTime 5C2C  
                                ??_getI2CError 0200                             ??i1_TMR3_StopTimer 0100  
          getStringSecondsAsTime@input_seconds 029F                         ??_getSecondsFromOnTime 0211  
                                ??_getADCError 0200                              __end_of__npowers_ E527  
                                      __Hparam 0000                        ??_freqMeasStartCaptures 0200  
                   __size_of_ADCC_ThresholdISR 0028                                     _scale$6032 022B  
                                      __Lparam 0000                              __end_of_getUserID BFD6  
                        _ADCC_ClearAccumulator C862                     ??_TMR2_SetInterruptHandler 0203  
                     ??_terminalTextAttributes 02BA                     __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
                              __size_of___flge 00D2                                __size_of___fleq 008C  
                                      ___fladd 708A                                        ___fldiv 81F6  
                      getHoursFromOnTime@hours 0215                                        ___awdiv AF74  
                                      ___flneg C100                                        ___awmod B1F6  
                                      ___flmul 6690                                 i2__doprnt$6419 0076  
                             ?_TMR3_StartTimer 0001                                 i2__doprnt$4980 0085  
                               i2__doprnt$4981 0087                                 i2__doprnt$4982 0089  
                               i2__doprnt$4975 007B                                 i2__doprnt$4976 007D  
                                      ___flsub BA5C                                 i2__doprnt$4977 007F  
                               i2__doprnt$4978 0081                                        ___fltol A7DE  
                               i2__doprnt$4979 0083                                        ___lldiv AFFA  
                              __size_of___wmul 0028                        getHoursFromOnTime@years 0216  
                                      ___llmod B2D8                                        ___lwdiv B6F0  
                                      ___lwmod BBBE                         __end_of_FLASH_ReadByte C578  
                                      __doprnt 0000                         ?_getCauseOfResetString 0200  
                           __end_of_TMR2_Start C892                          ?_I2C2_BusCollisionISR 0001  
                         __size_of_TMR1_Reload 000E                         __end_of_FLASH_ReadWord BCCC  
                                      __pcinit A954                                __size_of_fround 02C2  
                                      __ramtop 0F00                           __end_of_OLED_Command B40C  
                     _LM73TempSensorInitialize 8E8C                      I2C2_MasterTRBInsert@count 0205  
                         __size_of_TMR3_Reload 000E                                   ??i1___xxtofl 0104  
                                      __ptext0 79B4                                        __ptext1 A0EE  
                                      __ptext2 49F6                                        __ptext3 B83C  
                                      __ptext4 92F0                                        __ptext5 4F8A  
                                      __ptext6 C6BE                                        __ptext7 5FD2  
                                      __ptext8 B340                                        __ptext9 5C2C  
                    I2C2_MasterTRBInsert@pflag 0202                                __size_of_printf 003C  
                      __end_of_clearUARTErrors C7F8                 ??_TMR1_DefaultInterruptHandler 0001  
                ?_ADCC_SetADTIInterruptHandler 0200                        __size_of_TMR5_StopTimer 0004  
                              __size_of_strcat 005E                                __size_of_strcmp 0050  
                                i2_fround$6416 004D                                  i2_fround$6417 0049  
                              __size_of_strcpy 0048                                __size_of_strlen 002E  
                            __end_of_hexpowers E547                                      _T1CONbits 000FCF  
                       getCauseOfResetString@r 0202                                    ?__div_to_l_ 0200  
                                      _dpowers E847                          _OSCILLATOR_Initialize C5C6  
                       ??_EUSART2_Transmit_ISR 0001                                      _T2CONbits 000FBD  
                                 __size_of_abs 002A                                   i2fround@prec 0051  
                                      _isdigit C3B2                                 i2__doprnt@flag 00A1  
                                 ??i2___xxtofl 0009                                        _memmove AA0A  
                               i2__doprnt@eexp 008F                                     ??___xxtofl 0242  
                                    _T3CONbits 000FC9                                 i2__doprnt@fval 0095  
                             ___awmod@dividend 0200                                 i2__doprnt@prec 009F  
            __size_of_TMR1_SetInterruptHandler 000E                           __end_of_OLED_PutChar A7DE  
                     ??_PIN_MANAGER_Initialize 0203                      ?_TMR1_SetInterruptHandler 0200  
                                    _T2HLTbits 000FBE                                      _IOCBFbits 000F12  
                                    _T5CONbits 000FC3                              ??_getCauseOfReset 0200  
                                   ?_I2C2_Stop 0001                                _LM73_start_flag 02D8  
                                    _IOCBNbits 000F13                          _I2C2_FunctionComplete C592  
                ??_terminalTextAttributesReset 02B8                                      _IOCBPbits 000F14  
         __size_of_ADC_acquisitionTimerHandler 001A                               ??_clearI2CErrors 0201  
                             ??_clearADCErrors 0201                     __size_of_SYSTEM_Initialize 003E  
                             ?_freqMeasConvert 0001                                        _sprintf BA14  
                                __doprnt@width 0285                          i2EUSART2_Write@txData 0001  
                  __size_of_QIChargeIOCHandler 001C                                 __pintcode_body A3C6  
                                      _strncpy B340                           end_of_initialization AA00  
                             ?_TMR3_WriteTimer 0200                                        ftoa@buf 03C0  
                       __size_ofi2_TMR1_Reload 000E                                      _T2RSTbits 000FC0  
                     _INT2_SetInterruptHandler C76E                 ??_INT2_DefaultInterruptHandler 0001  
                        ??_ADCC_GetFilterValue 0003                                      _PCON0bits 000FD7  
                       __size_ofi2_TMR3_Reload 000E                                        int_func A3C6  
                          i2___wmul@multiplier 0001                                      i1u1514_20 7490  
                                    i1u1515_20 74A0                                      i1u1540_20 7666  
                                    i1u1532_20 75F6                                      i1u1516_20 74A2  
                                    i1u1534_20 760A                                      i1u1519_20 74E4  
                                    i1u1560_20 8658                                      i1u1564_20 86B4  
                                    i1u1565_20 86D8                                      i1u1574_20 6A72  
                                    i1u1583_20 6CD0                                      i1u1575_20 6BE8  
                                    i1u1575_25 6BDE                                      i1u1584_20 6CEE  
                                    i1u1592_20 9B50                       __size_of_CCP2_CaptureISR 001A  
                                    i1u1579_20 6C74                                 i2___xxtofl@arg 000F  
                                    _OLED_Init AD36                                      i1u1894_28 BFF6  
                                    i1u1879_28 C298                                 i2___xxtofl@exp 000E  
                               i2___xxtofl@val 0005                                      i2u2420_40 7974  
                                    i2u2412_40 7904                                      i2u2414_40 7918  
                                    i2u2502_40 A8A6                                      i2u2510_40 9F14  
                                    i2u2431_40 6DC4                                      i2u2503_40 A8D6  
                                    i2u2503_45 A8CC                                      i2u1608_40 C818  
                                    i2u2440_40 7022                                      i2u2432_40 6F3A  
                                    i2u2600_40 1E9E                                      i2u2432_45 6F30  
                                    i2u2441_40 7040                                      i2u2370_40 B0C4  
                                    i2u2507_40 A92C                                      i2u2610_48 2072  
                                    i2u2603_40 1FEC                                      i2u2436_40 6FC6  
                                    i2u2380_40 B80C                                      i2u2620_40 2222  
                                    i2u1803_48 C21A                                      i2u1803_49 C22E  
                                    i2u2517_40 9FE6                                      i2u1805_48 C1F0  
                                    i2u1805_49 C204                                      i2u2527_40 9C90  
                                    i2u2519_40 B42E                                      i2u2383_40 BCE6  
                                    i2u2630_48 23B2                                      i2u2614_48 20E4  
                                    i2u2376_40 B2A2                                      i2u2720_40 9724  
                                    i2u2705_40 41CE                                      i2u2640_48 261C  
                                    i2u2624_48 2260                                      i2u2616_48 214C  
                                    i2u2394_40 779E                                      i2u2634_40 247E  
                                    i2u2633_48 2428                                      i2u2562_40 17E4  
                                    i2u2561_48 1758                                      i2u2714_40 9666  
                                    i2u2714_46 9668                                      i2u2562_47 17DA  
                                    i2u2395_40 77AE                                      i2u2635_40 248E  
                                    i2u2571_40 192C                                      i2u2571_47 1922  
                                    i2u2396_40 77B0                                      i2u2484_40 B134  
                                    i2u2492_40 A2C4                                      i2u2643_48 26E6  
                                    i2u2619_48 21CC                                      i2u2572_40 196A  
                                    i2u2564_40 181E                                      i2u2716_40 969A  
                                    i2u2572_47 1960                                      i2u2564_47 1814  
                                    i2u2628_48 22D2                                      i2u2486_40 A1EE  
                                    i2u2581_48 1A6E                                      i2u2566_40 1878  
                                    i2u2718_40 96CC                                      i2u2566_47 186E  
                                    i2u2399_40 77F2                                      i2u2495_40 AF6C  
                                    i2u2670_48 2A58                                      i2u2638_48 24CC  
                                    i2u2575_40 1A04                                      i2u2567_40 18B4  
                                    i2u2575_47 19FA                                      i2u2567_47 18AA  
                                    i2u2576_40 1A0A                                      i2u2568_40 18BC  
                                    i2u2751_48 C2C0                                      i2u1871_48 C02A  
                                    i2u1793_40 893C                                      i2u2585_40 1B1C  
                                    i2u2584_48 1AE8                                      i2u2569_40 18DE  
                                    i2u2584_49 1B1E                                      i2u2585_47 1B12  
                                    i2u2569_47 18D4                                      i2u1794_40 8960  
                                    i2u2753_48 C2E8                                      i2u2690_40 2E26  
                                    i2u2673_48 2AC8                                      i2u2586_40 1B60  
                              ___lldiv@divisor 0204                                      i2u2690_47 2E1C  
                                    i2u2586_47 1B56                                      i2u2691_40 2E32  
                                    i2u2682_48 2BCE                                      i2u2675_40 2B1A  
                                    i2u2666_48 29E6                                      i2u2747_40 AAFC  
                                    i2u2596_40 1DF8                                      i2u2588_40 1BF6  
                           __end_ofi1___xxtofl 9B98                                      i2u2588_47 1BEC  
                                    i2u1789_40 88E0                                      i2u2597_40 1E44  
                                    i2u2678_40 2B90                                      i2u2677_48 2B40  
                                    i2u1797_48 C37C                                      i2u2686_48 2C40  
                                    i2u1799_48 C358                                      i2u2689_40 2DF6  
                                    i2u2688_48 2DA4                                      i2u2880_48 A426  
                                    i2u2887_48 A45A                                ___lldiv@counter 020C  
                           _EUSART2_Initialize B184                    getDeviceIDString@inputDevID 020D  
                              i2_EUSART2_Write B744                                  ??_getDeviceID 020D  
                        I2C2_MasterWrite@pdata 0209                             _p_i2c2_trb_current 00D3  
                        I2C2_MasterWrite@pflag 020E                                        printf@f 02A9  
                           __end_ofi2___xxtofl 9CD8                                        postdec1 000FE5  
                                      postdec2 000FDD                         I2C2_ISR@i2c_bytes_left 00D9  
                                      postinc0 000FEE                                        postinc2 000FDE  
                        __size_of_EUSART2_Read 003E                ADC_PostProcessingHandler@i_3557 007A  
                             ?_ADCC_Initialize 0001                                 __tdiv_to_l_@f1 0200  
                               __tdiv_to_l_@f2 0204                          _terminalSetCursorHome C6DE  
                          __end_of_getI2CError C25C                                ??i2__tdiv_to_l_ 0009  
                __size_of_I2C2_MasterTRBInsert 00A2                                        strcmp@r 0206  
                  __end_of_QIErrorTimerHandler C60A                          __CFG_WDTCPS$WDTCPS_11 000000  
                              ?_FLASH_ReadByte 0200                            ?_EUSART2_Initialize 0001  
                                i1_TMR3_Reload C7B4                                  ??_LM73Convert 024C  
                          __end_of_getADCError C5F4                                        strlen@s 0200  
                 terminal_ringBufferPull@index 04C4                                  ??__tdiv_to_l_ 0208  
                              ?_FLASH_ReadWord 0204                       _TMR0_SetInterruptHandler C744  
                       ?_heartbeatTimerHandler 0001                     CCP2_CallBack@capturedValue 0154  
                        _INT1_InterruptHandler 0186                                      _PORTBbits 000F8E  
                                    _TMR2_Stop C87E                       _TMR3_SetInterruptHandler C71A  
                           LM73Convert@QI_Conv 024F                         getDaysFromOnTime@years 0216  
                            __size_of_I2C2_ISR 0276                     __end_of_getYearsFromOnTime C0D0  
                     ?_terminal_ringBufferPull 0001                        __end_of_I2C2_MasterRead B9CC  
                                  ___fladd@grs 0243                        _IOCBF2_InterruptHandler 017A  
                      __end_of_I2C2_Initialize BFA2                           __CFG_WDTCCS$LFINTOSC 000000  
                                ___xxtofl@sign 0246                                      i1___fladd 7398  
                                    i1___fldiv 8480                               _next_adc_channel 00FC  
                                    i1___flmul 69E4                                    ___fldiv@grs 0213  
                                  ___fldiv@rem 020C                                i2___fltol@sign1 0056  
                 ??_IOCBF3_SetInterruptHandler 0203                                      i2___fladd 76A6  
                                    i2___fldiv 870A                                      i2___awdiv B07E  
                                    i2___flneg C15E                                      i2___awmod B268  
                                    i2___flmul 6D38                                      i2___flsub BAA4  
                                    i2___fltol A89A                               __CFG_FEXTOSC$OFF 000000  
                            i2___lwdiv@divisor 0008                                      i2___lldiv B102  
                                    i2___llmod B40C                                      i2___lwdiv B7EA  
                                    i2___lwmod BCCC                              i2___lwdiv@counter 000A  
                             ?_TMR5_WriteTimer 0200                           ??_EUSART2_Initialize 0203  
                      _printErrorHandlerStatus 92F0                                      i2__doprnt 1724  
                  getMinutesFromOnTime@minutes 0215                        TMR5_WriteTimer@timerVal 0200  
                  getSecondsFromOnTime@minutes 0219                    getSecondsFromOnTime@seconds 0215  
                       __size_of_ringBufferLUT 0594                              OLED_WriteString@s 0221  
                                  ___flmul@grs 021C                                    _CCP2CONbits 000FA8  
                                 _EUSART2_Read BD4E                             i2___llmod@dividend 000E  
                                   ?_OLED_Init 0001                             i2___awdiv@dividend 0007  
                       ?_ADCC_ClearAccumulator 0001                                      i2_isdigit C4B4  
         __size_of_terminalTextAttributesReset 0010                            __size_of__div_to_l_ 00F6  
                            __size_of_INT1_ISR 000A                             _adc_result_scaling 00C1  
                            __size_of_INT2_ISR 000A         terminalTextAttributes@foreground_color 03EB  
              __size_of_terminalTextAttributes 0366                        ?_LM73AcquisitionHandler 0001  
                   ??_printCurrentMeasurements 02BA                       __size_of_CCP2_Initialize 0022  
                 __end_of_INTERRUPT_Initialize C454           __end_of_TMR2_DefaultInterruptHandler C8A0  
        __size_of_TMR2_DefaultInterruptHandler 0002                   _TMR2_DefaultInterruptHandler C89E  
                       ??_I2C2_BusCollisionISR 0100                 ??_ADCC_DefaultInterruptHandler 0001  
                               __end_of___flge A580                                 __end_of___fleq AEEA  
                               ?i1_TMR3_Reload 0001                                  i2_TMR1_Reload C7D0  
                    i2TMR1_WriteTimer@timerVal 0001                     ??_I2C2_MasterWriteTRBBuild 0207  
                               __end_of___wmul C284             __size_of_ADC_PostProcessingHandler 0974  
                                i2_TMR3_Reload C7DE                              __size_of_TMR0_ISR 0028  
                            __size_of_TMR1_ISR 0034                              __size_of_TMR2_ISR 0028  
                   ?_ADC_PostProcessingHandler 0001                              __size_of_TMR3_ISR 0034  
                               _TMR1_StopTimer C876            __size_of_IOCBF3_SetInterruptHandler 000E  
                                   ?_TMR2_Stop 0001                         ?_OSCILLATOR_Initialize 0001  
                                __pbitbssBANK0 07E8                            __end_of_getDeviceID C474  
                               __end_of_fround 7F48              __size_of_ADCC_GetConversionResult 0014  
                    __size_of_I2C2_MasterWrite 0050                               ?_clearUARTErrors 0001  
                    ?_ADCC_GetConversionResult 0001                       __size_of_updateErrorLEDs 0046  
                             i2___wmul@product 0005                                 __end_of_printf BE44  
                                  _adc_results 00DD                             _getMajorRevisionID BE80  
                               __end_of_strcat B530                                 __end_of_strcmp B88C  
                               __end_of_strcpy BA14                                 __end_of_strlen C15E  
                       ?_I2C2_FunctionComplete 0001                              __size_ofi2___flge 00D0  
                          start_initialization A954                              __size_ofi2___fleq 008A  
                           i2___awdiv@quotient 000D                              __size_ofi2___wmul 0026  
                          __end_of_LM73Convert 8C16                                    ??_I2C2_Stop 0100  
                     __size_of_TMR0_Initialize 002A                __size_of_PIN_MANAGER_Initialize 00A0  
                          __end_of__tdiv_to_l_ 9EFA                        _getNXQChargeStateString B530  
                                  __end_of_abs C1E0                          __end_of_INT1_CallBack C390  
                   ??_floatToEngineeringFormat 02A3                                     ?i1___fladd 010E  
                               _TMR2_StopTimer C85C                                     ?i1___fldiv 011E  
                                   ?i1___flmul 0137                                      i2printf@f 00A4  
      OLED_UpdateFromRAMBuffer@char_index_4304 0224        OLED_UpdateFromRAMBuffer@char_index_4305 0225  
      OLED_UpdateFromRAMBuffer@char_index_4306 0226                                     ?i2___fladd 0052  
EUSART2_SetRxInterruptHandler@interruptHandler 0200  EUSART2_SetTxInterruptHandler@interruptHandler 0200  
                                   ?i2___fldiv 0013                              __size_ofi2_fround 02AE  
                                   ?i2___awdiv 0007                                     ?i2___flneg 0001  
                                   ?i2___awmod 0001                                     ?i2___flmul 002C  
                                   ?i2___flsub 0064                                     ?i2___fltol 004E  
                                   ?i2___lldiv 0001                                     ?i2___llmod 000E  
                __size_of_ADCC_StartConversion 000E                            ?_getMajorRevisionID 0001  
                                  putch@txData 0201                                     ?i2___lwdiv 0006  
                        __end_of_INT2_CallBack C36C                                     ?i2___lwmod 0001  
                            __size_ofi2_printf 003C                          __end_of_EUSART2_Write B6F0  
                               _device_on_time 00C5                                     ?i2__doprnt 006C  
                      __end_ofi2_EUSART2_Write B798                                 _TMR3_StopTimer C872  
                              ___llmod@divisor 0211                              _LM73_temp_results 02DB  
                              ___llmod@counter 0215                               _nxq_charge_state 0195  
              I2C2_MasterWriteTRBBuild@address 0205                       __size_of_PIN_MANAGER_IOC 0014  
                                   ?i2_isdigit 0001                           I2C2_MasterRead@pdata 0209  
                     ?_I2C2_MasterReadTRBBuild 0200                           I2C2_MasterRead@pflag 020E  
                   __end_of_getHoursFromOnTime A3C6                                    _getI2CError C234  
                             __CFG_LPBOREN$OFF 000000                                    _getADCError C5DE  
                    __size_of_OLED_WriteString 0058                 __end_of_LM73AcquisitionHandler 92F0  
                     __size_of_TMR1_Initialize 0050                 _ADC_PostProcessingHandler$6411 007B  
               _ADC_PostProcessingHandler$6412 007F                 _ADC_PostProcessingHandler$6413 006C  
               _ADC_PostProcessingHandler$6414 0070                 _ADC_PostProcessingHandler$6415 0074  
                                     ??___flge 0208                          __size_of_OLED_Command 0066  
                                     ??___fleq 0208                               ??_PMD_Initialize 0200  
                       ?_terminalSetCursorHome 0001                                       ??___wmul 0204  
                            ??_CCP2_CaptureISR 0156                  I2C2_MasterWriteTRBBuild@pdata 0202  
                               ?i2_TMR1_Reload 0001                           I2C2_ISR@pi2c_buf_ptr 00CF  
                                  _CCPTMRSbits 000FAE                           ??_getMajorRevisionID 020B  
                                   OLED_YX@Row 0218                                    __doprnt@idx 0262  
                                  __doprnt@len 0275                                    __doprnt@val 0281  
                       __end_of_TMR1_StopTimer C87A                                    __pdataBANK0 00FB  
                                  __pdataBANK1 01A9                                    __pdataBANK2 02ED  
                               ?i2_TMR3_Reload 0001                                       ??_fround 022B  
                                _ringBufferLUT 49F6                     __end_of_EXT_INT_Initialize BF6C  
                ?_TMR2_DefaultInterruptHandler 0001                          __size_of_OLED_PutChar 00C4  
                                     ??_printf 02B1              getCauseOfReset@return_reset_cause 0200  
                               _TMR5_StopTimer C86E                       getSecondsFromOnTime@days 0217  
                                     ??_strcat 0204                                       ??_strcmp 0204  
                                     ??_strcpy 0207                                       ??_strlen 0202  
            __end_of_ADC_PostProcessingHandler 49F6                     __end_of_getMinorRevisionID C322  
                                    ___fladd@a 0238                                      ___fladd@b 0234  
                     __end_ofi2_TMR1_StopTimer C886                                     fround@prec 0233  
                               _eusart2RxCount 0197                                  ?i2__div_to_l_ 0001  
                                    ___fldiv@a 0204                                      ___fldiv@b 0200  
                                  __pbssBIGRAM 04C8            __end_of_getNXQChargeStateStringCaps B5E8  
                  _getNXQChargeStateStringCaps B58C                         __end_of_TMR2_StopTimer C862  
                             ?_I2C2_MasterRead 0209                          _qi_isns_average_index 00D5  
                                    ___flmul@a 0212                                      ___flmul@b 020E  
                             ?_I2C2_Initialize 0001                                      ___flsub@a 0250  
                                    ___flsub@b 024C                                       ?_OLED_YX 0214  
                                __pcstackBANK0 0060                                  __pcstackBANK1 0100  
                                __pcstackBANK2 0200                                  __pcstackBANK3 03D1  
                                __pcstackBANK4 04C0                   _live_measurement_enable_flag 00D7  
                       _terminalTextAttributes 5FD2                       __size_of_TMR2_Initialize 0032  
                __size_of_getMinutesFromOnTime 0150                    ?_IOCBF2_SetInterruptHandler 0200  
                            i2___lwmod@divisor 0003                      ??_printErrorHandlerStatus 02BA  
                            __size_of___xxtofl 0144                              i2___lwmod@counter 0005  
                                 _isdigit$5449 0201             __size_of_QIIdleChargedTimerHandler 0020  
                          EUSART2_Write@txData 0200                     ?_QIIdleChargedTimerHandler 0001  
                                _i2c2_tr_queue 01A3                         __end_of_TMR3_StopTimer C876  
                              i1___xxtofl@sign 0108                           _freq_meas_start_flag 02DA  
                ??_getNXQChargeStateStringCaps 0202                    __end_of_ADCC_StopConversion C896  
                      ?_getStringSecondsAsTime 029F                                       ?i2_scale 0045  
              ??_EUSART2_SetRxInterruptHandler 0203                   __size_of_terminalClearScreen 0010  
                                     ?i2_putch 0001                                      __doprnt@c 028B  
                                    __doprnt@f 0256                          _INT2_InterruptHandler 0183  
                                 _OLED_Command B3A6                              i1___fldiv@new_exp 012F  
                                  ??_OLED_Init 0214                          _TMR0_InterruptHandler 00C9  
                                    __pnvBANK2 02FF                    getMinorRevisionID@REVID_RAW 020B  
                      _IOCBF3_InterruptHandler 0177                     ??_LM73TempSensorInitialize 0210  
                             ___lwdiv@dividend 0205                         _PIN_MANAGER_Initialize ABFE  
                 __end_of_rightCapTouchHandler C620               ??_IOCBF2_DefaultInterruptHandler 0001  
              ?_IOCBF2_DefaultInterruptHandler 0001                                   _OLED_PutChar A71A  
                   __end_of_OLED_updateHandler 4082                       __size_of_TMR3_Initialize 0050  
                    __size_of_QIIdleIOCHandler 0014                        ??_getCauseOfResetString 0202  
                              ??i1_TMR3_Reload 0102                 __size_of_freqMeasStartCaptures 000A  
                                    __pintcode 0008                  __end_of_freqMeasStartCaptures C826  
                                  _getDeviceID C454               __end_of_TMR1_SetInterruptHandler C744  
                                __pmediumconst E4BE                                       ?___fladd 0234  
                                     ?___fldiv 0200                                       ?___awdiv 0206  
                                    __ptext100 C1B6                                      __ptext101 81F6  
                                    __ptext110 AA0A                                      __ptext102 9CD8  
                                     ?___flneg 0200                                      __ptext111 8E8C  
                                    __ptext103 C130                                      __ptext200 9B98  
                                    __ptext120 C826                                      __ptext112 90C4  
                                    __ptext104 BC02                                      __ptext201 BAA4  
                                    __ptext121 B798                                      __ptext113 8992  
                                    __ptext105 B642                                      __ptext210 C892  
                                    __ptext202 76A6                                      __ptext130 C578  
                                    __ptext114 9910                                      __ptext106 AD36  
                                    __ptext211 C810                                      __ptext203 6D38  
                                    __ptext131 C89E                                      __ptext123 BFD6  
                                    __ptext115 6690                                      __ptext107 B3A6  
                                    __ptext212 C672                                      __ptext204 A580  
                                    __ptext140 C804                                      __ptext132 C85C  
                                    __ptext124 C474                                      __ptext116 B92C  
                                    __ptext108 BDCA                                      __ptext213 C896  
                                    __ptext205 870A                                      __ptext141 C5AC  
                                    __ptext133 C87E                                      __ptext125 C89C  
                                    __ptext117 BB32                                      __ptext109 A71A  
                                    __ptext214 C686                                      __ptext206 BEF8  
                                    __ptext150 C5F4                                      __ptext142 BD0E  
                                    __ptext134 C7C2                                      __ptext126 C87A  
                                    __ptext118 B97C                                      __ptext215 0000  
                                    __ptext207 C15E                                      __ptext151 C8A0  
                                    __ptext143 A650                                      __ptext135 C84E  
                                    __ptext127 C7B4                                      __ptext119 AB5C  
                                    __ptext208 C868                                      __ptext160 C7D0  
                                    __ptext152 C882                                      __ptext144 9A54  
                                    __ptext136 C862                                      __ptext128 C494  
                                    __ptext209 C88E                                      __ptext161 C526  
                                    __ptext153 C2AC                                      __ptext145 69E4  
                                    __ptext137 8C16                                      __ptext129 C284  
                                    __ptext170 C348                                      __ptext162 C20A  
                                    __ptext154 C8A2                                      __ptext146 8480  
                                    __ptext138 BC46                                      __ptext171 C8A8  
                                    __ptext163 C8A6                                      __ptext155 965E  
                                    __ptext147 7398                                      __ptext139 C592  
                                    __ptext180 1724                                      __ptext172 C60A  
                                    __ptext164 C65E                                      __ptext156 C64A  
                                    __ptext181 5814                                      __ptext173 C83A  
                                    __ptext165 C7DE                                      __ptext157 C1E0  
                                    __ptext149 C00A                                      __ptext190 9EFA  
                                    __ptext182 B268                                      __ptext174 C36C  
                                    __ptext166 C542                                      __ptext158 C8A4  
                                    __ptext191 A1E2                                      __ptext183 B07E  
                                    __ptext175 C8AA                                      __ptext167 C886  
                                    __ptext159 C50A                                      __ptext192 C322  
                                    __ptext184 C844                                      __ptext176 C620  
                                    __ptext168 C88A                                      __ptext193 B40C  
                                    __ptext185 B744                                      __ptext177 BB78  
                                    __ptext169 C830                                      __ptext194 B102  
                                    __ptext186 C4B4                                      __ptext178 AAB8  
                                    __ptext195 A89A                                      __ptext187 7F48  
                                    __ptext179 BEBC                                       ?___awmod 0200  
                                    __ptext196 AEEA                                      __ptext188 BCCC  
                                    __ptext197 C2D4                                      __ptext189 B7EA  
                                    __ptext198 C8AC                                      __ptext199 4082  
                                     ?___flmul 020E                                       ?___flsub 024C  
                                     ?___fltol 0230                                       ?___lldiv 0200  
                                     ?___llmod 020D                                      __npowers_ E4F3  
                                     ?___lwdiv 0205                                _getCauseOfReset B5E8  
                                     ?___lwmod 0200                                 ?_ringBufferLUT 02BA  
                                    _getUserID BFA2                                ?_TMR1_StopTimer 0001  
                       __end_of_TMR5_StopTimer C872              _EUSART2_TxDefaultInterruptHandler 0180  
                                     ?__doprnt 0254                         OLED_PutChar@data_array 0214  
                                  __pintcodelo 0018                                       _I2C2_ISR 8C16  
                    __size_ofi1_TMR3_StopTimer 0004                                    _LM73Convert 8992  
                                  __tdiv_to_l_ 9DFA                                    ??_TMR2_Stop 0100  
                               ??i2__div_to_l_ 0009                                   ??__div_to_l_ 0208  
                                     _BAUD2CON 000E9F                              ??_CCP2_Initialize 0200  
                    ??_getNXQChargeStateString 0202                     ??_INT2_SetInterruptHandler 0203  
                     __size_of_TMR1_StartTimer 0004                                       ?_isdigit 0001  
                  floatToEngineeringFormat@mag 02A3                                       ?_memmove 0200  
                  floatToEngineeringFormat@res 02A7                                ?_TMR2_StopTimer 0001  
                  getStringSecondsAsTime@hours 03E9                    getStringSecondsAsTime@years 03E7  
                             __CFG_WDTE$NSLEEP 000000             __end_of_IOCBF3_SetInterruptHandler C760  
                   _IOCBF3_SetInterruptHandler C752                                    ??i1___fladd 0116  
                       getHoursFromOnTime@days 0217                                    ??i1___fldiv 0126  
                                  ??i1___flmul 013F                                      _hexpowers E527  
            __size_of_OLED_UpdateFromRAMBuffer 0122                      ?_OLED_UpdateFromRAMBuffer 0001  
                             ___lwdiv@quotient 020A                        _OLED_updateHandler$6029 03F3  
                                  ??i2___fladd 005A                                    ??i2___fldiv 001B  
                                  ??i2___awdiv 000B                                    ??i2___flneg 0005  
                                  ??i2___awmod 0005                                       ?_sprintf 028C  
                                  ??i2___flmul 0034                                    ??i2___flsub 005E  
                                  ??i2___fltol 0052                              ??_updateErrorLEDs 0200  
                                  ??i2___lldiv 0009                                       _T2CLKCON 000FBF  
                               __size_of_scale 0434                                    ??i2___llmod 0016  
               __end_of_getStringSecondsAsTime 5FD2                                       ?_strncpy 0200  
                                  ??i2___lwdiv 000A                                    ??i2___lwmod 0005  
                               __size_of_putch 0014                           _INTERRUPT_Initialize C434  
                              ?_TMR3_StopTimer 0001                                    ??i2__doprnt 0072  
            __end_of_QIIdleChargedTimerHandler C494                __end_of_I2C2_MasterReadTRBBuild B7EA  
                            ??_TMR0_Initialize 0203                   __size_of_leftCapTouchHandler 0016  
                 __size_of_EUSART2_Receive_ISR 00A4                       _pos12_isns_average_index 00D6  
                                     _INT1_ISR C83A                                       _INT2_ISR C830  
                               ___wmul@product 0204                               i2__doprnt@tmpval 0091  
                             ?i2_EUSART2_Write 0001                                       _LATBbits 000F84  
                                     _LATCbits 000F85              __size_of_INT1_SetInterruptHandler 000E  
                    ?_INT1_SetInterruptHandler 0200                                    strncpy@from 0202  
                                     _IPR0bits 000EBA                                       _IPR1bits 000EBB  
                                     _PIE0bits 000EC2                                       _IPR3bits 000EBD  
                                     _PIE1bits 000EC3                                       _IPR4bits 000EBE  
                                  strncpy@size 0204                                       _PIE3bits 000EC5  
                                     _IPR6bits 000EC0                                       _PIE4bits 000EC6  
                                     _PIE6bits 000EC8                                    ??i2_isdigit 0001  
                     __size_of_TMR2_StartTimer 0006                            __CFG_BORV$VBOR_2P45 000000  
                     __size_of_TMR1_WriteTimer 0020            __end_of_ADC_acquisitionTimerHandler C592  
                  _ADC_acquisitionTimerHandler C578                          __end_of_CCP2_CallBack BD4E  
                   ??_TMR0_SetInterruptHandler 0203                                       _PIR0bits 000ECA  
                                     _PIR1bits 000ECB                             __end_of__div_to_l_ A0EE  
                             ??_FLASH_ReadByte 0204                                       _PIR3bits 000ECD  
                                     _PIR4bits 000ECE                                ??i2_TMR1_Reload 0003  
                   ??_TMR3_SetInterruptHandler 0203                                       _PIR6bits 000ED0  
                                     _PIR7bits 000ED1                __end_of_printErrorHandlerStatus 94E4  
                             ??_FLASH_ReadWord 0208                       __size_of_TMR5_Initialize 003C  
                __size_of_getSecondsFromOnTime 017A               __end_of_printCurrentMeasurements 53E0  
                                ??_TMR1_Reload 0202                              i2___fldiv@new_exp 0024  
                 OLED_updateHandler@dev_id_str 03D1                                ??i2_TMR3_Reload 0003  
                                     _SSP2CON1 000E96                                       _SSP2CON3 000E98  
                                     _TMR0_ISR C2AC                        ??_heartbeatTimerHandler 005E  
                                     _TMR1_ISR C00A                                  ??_TMR3_Reload 0202  
                                     _TMR2_ISR C284                                       _TMR3_ISR BFD6  
                        getDaysFromOnTime@days 0215                                       _SSP2STAT 000E95  
                            ??_PIN_MANAGER_IOC 0003                                i2__div_to_l_@f1 0001  
                              i2__div_to_l_@f2 0005                                     ?_getUserID 020B  
                      getYearsFromOnTime@years 0211                                ?_TMR5_StopTimer 0001  
                I2C2_MasterTRBInsert@ptrb_list 0200                  ??_ADC_acquisitionTimerHandler 0101  
                            ??_TMR1_Initialize 0203                                     _ADCON0bits 000F60  
                                   _ADCON1bits 000F59                                     _ADCON2bits 000F5A  
                                     i2___flge A580                                     _ADCON3bits 000F5B  
                                     i2___fleq AEEA                              ___wmul@multiplier 0200  
                             _I2C2_MasterWrite B92C                                       i2___wmul C322  
                      __size_of_FVR_Initialize 000C              getMinutesFromOnTime@input_seconds 020D  
                     __size_of_TMR3_StartTimer 0004                 ??_TMR2_DefaultInterruptHandler 0100  
            __size_of_TMR2_SetInterruptHandler 000E                              i2___awdiv@divisor 0009  
                                     i2_fround 7F48               __end_of_floatToEngineeringFormat 6690  
                    ?_TMR2_SetInterruptHandler 0200                                     _I2C_STATUS 01A8  
                            i2___awdiv@counter 000B                     __end_of_QIChargeIOCHandler C526  
 ADC_PostProcessingHandler@current_adc_channel 0078                    __end_of_ADCC_GetFilterValue C686  
                __size_of_EUSART2_Transmit_ISR 0046            __size_of_getCauseOfResetStringSmall 0030  
                                     i2_printf BEBC                               __size_of_OLED_YX 0044  
                                    copy_data0 A968                                      copy_data1 A988  
                 __end_of_I2C2_MasterTRBInsert ABFE                          ?_INTERRUPT_Initialize 0001  
                           i2___awmod@dividend 0001            getStringSecondsAsTime@return_string 0384  
                      ??_ADCC_ClearAccumulator 0100                              i1_TMR3_WriteTimer C494  
                           _getYearsFromOnTime C0A0                              ??_TMR2_Initialize 0203  
             __size_of_terminal_ringBufferPull 00F4                               __size_ofi2_scale 0418  
                                     _OledFont E547                               __size_ofi2_putch 000A  
              __end_of_getNXQChargeStateString B58C                             ?i1_TMR3_WriteTimer 0100  
                      __end_of_getCauseOfReset B642                       __size_of_freqMeasConvert 00CA  
                                   _ADSTATbits 000F65                                       __Hrparam 0000  
             __end_of_ADCC_GetConversionResult C69A                       freqMeasConvert@qi_period 0150  
        __end_of_EUSART2_SetRxInterruptHandler C7A6         __size_of_EUSART2_SetRxInterruptHandler 000E  
                _EUSART2_SetRxInterruptHandler C798                       __size_of_TMR3_WriteTimer 0020  
                       OLED_PutChar@input_base 021D                               _OLED_WriteString B642  
                            i2_TMR1_WriteTimer C526                            ?_getYearsFromOnTime 020D  
                                     __Lrparam 0000                             __CFG_BOREN$SBORDIS 000000  
               I2C2_MasterWriteTRBBuild@length 0204                                ??_ringBufferLUT 02BC  
                           ?i2_TMR1_WriteTimer 0001                            ??i1_TMR3_WriteTimer 0102  
                      LM73Convert@Ambient_Conv 0253              getSecondsFromOnTime@input_seconds 020D  
                      ??_OSCILLATOR_Initialize 0200                                      memmove@d1 0200  
                                    memmove@s1 0202                 getDaysFromOnTime@input_seconds 020D  
                             __size_of___fladd 030E                               __size_of___fldiv 028A  
                             __size_of___awdiv 0086                               __size_of___flneg 0030  
                             __size_of___awmod 0072                               __size_of___flmul 0354  
                             __size_of___flsub 0048                               __size_of___fltol 00BC  
                        i2___wmul@multiplicand 0003                               __size_of___lldiv 0084  
                             __size_of___llmod 0068                               __size_of___lwdiv 0054  
                             __size_of___lwmod 0044                        ??_I2C2_FunctionComplete 0100  
                             __size_of__doprnt 1724                                    _fround$6030 022F  
                                  _fround$6031 022B                    ??_ADC_PostProcessingHandler 005E  
                            ??_TMR3_Initialize 0203                       _TMR1_SetInterruptHandler C736  
                        __end_ofi2__tdiv_to_l_ 9FF8                                  ?_getUARTError 0001  
                              _putch$intlevel0 C63C                            __end_of_TMR1_Reload C71A  
                          ??i2_TMR1_WriteTimer 0003            __end_of_terminalTextAttributesReset C6CE  
                  _terminalTextAttributesReset C6BE                          _TMR1_InterruptHandler 016E  
                          __end_of_TMR3_Reload C70C                                       ___xxtofl 9910  
                                   _T0CON0bits 000FD5                       __size_of_ADCC_Initialize 0060  
                                   strcat@from 0202                ??_INTERRUPT_InterruptManagerLow 0158  
                             __size_of_isdigit 0022                           ??_getYearsFromOnTime 0211  
                 __size_of_QIErrorTimerHandler 0016                               __size_of_memmove 00AE  
                    getSecondsFromOnTime@hours 0218                                ___lwdiv@divisor 0207  
                    getSecondsFromOnTime@years 0216                                ___lwdiv@counter 0209  
                         _rightCapTouchHandler C60A                                       __ptext10 B4D2  
                                     __ptext11 B530                                       __ptext20 C234  
                                     __ptext12 BFA2                                       __ptext21 C5DE  
                                     __ptext13 AC9E                                     _T1GCONbits 000FD0  
                                     __ptext30 C872                                       __ptext22 BD4E  
                                     __ptext14 C070                                       __ptext31 C6FE  
                                     __ptext23 C6DE                                       __ptext15 C7EC  
                                     __ptext40 C03E                                       __ptext32 C3F4  
                                     __ptext24 C6EE                                       __ptext16 C4D2  
                                     __ptext41 C728                                       __ptext33 C876  
                                     __ptext25 BE08                                       __ptext17 C6CE  
                                     __ptext50 C5C6                                       __ptext42 B8DC  
                                     __ptext34 C70C                                       __ptext26 B5E8  
                                     __ptext18 BAEC                                       __ptext51 C434  
                                     __ptext43 C736                                       __ptext35 C414  
                                     __ptext27 C81C                                       __ptext19 C856  
                                     __ptext60 C390                                       __ptext52 BF6C  
                                     __ptext44 C18C                                       __ptext36 BD8C  
                                     __ptext28 C3D4                                       __ptext61 B472  
                                     __ptext53 C7F8                                       __ptext45 C744  
                                     __ptext37 BE44                                       __ptext29 C86E  
                                     __ptext70 BE80                                       __ptext62 C7A6  
                                     __ptext54 BF34                                       __ptext46 C4EE  
                                     __ptext38 B88C                                       __ptext71 A2D6  
                                     __ptext63 2E3C                                       __ptext55 C76E  
                                     __ptext47 ABFE                                       __ptext39 C71A  
                                     __ptext80 53E0                                       __ptext72 C454  
                                     __ptext64 B9CC                                       __ptext56 C77C  
                                     __ptext48 C752                                       __ptext81 B1F6  
                                     __ptext73 BC8A                                       __ptext65 C0A0  
                                     __ptext57 B184                                       __ptext49 C760  
                                     __ptext90 9FF8                                       __ptext82 AF74  
                                     __ptext74 C55E                                       __ptext66 94E4  
                                     __ptext58 C78A                                       __ptext91 C25C  
                                     __ptext83 C636                                       __ptext75 ADCE  
                                     __ptext67 B58C                                       __ptext59 C798  
                                     __ptext92 B2D8                                       __ptext84 B69A  
                                     __ptext76 C0D0                                       __ptext68 97C0  
                                     __ptext93 AFFA                                       __ptext85 C3B2  
                                     __ptext77 6338                                       __ptext69 C2FC  
                                     __ptext94 A7DE                                       __ptext86 7C86  
                                     __ptext78 BA14                                       __ptext95 BA5C  
                                     __ptext87 BBBE                                       __ptext79 0000  
                                     __ptext96 708A                                       __ptext88 B6F0  
                                     __ptext97 C100                                       __ptext89 9DFA  
                                     __ptext98 A4AE                                       __ptext99 AE5E  
                                     __powers_ E4BF                      __end_ofi1_TMR3_WriteTimer C4B4  
                                 _SSP2CON1bits 000E96                                   _SSP2CON2bits 000E97  
                          ringBufferLUT@userID 03FD                              ??_TMR1_StartTimer 0001  
                             __size_of_sprintf 0048                                     _IOCBF2_ISR C20A  
                                   _IOCBF3_ISR C1E0                                     _T3GCONbits 000FCA  
          floatToEngineeringFormat@input_value 029F                     getStringSecondsAsTime@days 03E8  
                   getStringSecondsAsTime@buff 03D1                        TMR3_WriteTimer@timerVal 0200  
                             __size_of_strncpy 0066                    __size_of_EUSART2_Initialize 0072  
                                   strcpy@from 0205                                 i2_isdigit$5449 0002  
                              _CCP2_CaptureISR C5AC                                  __size_of_fabs 003C  
                                __size_of_main 02D2                                     _T5GCONbits 000FC4  
                 OLED_updateHandler@rev_id_str 03E2                                  OLED_Clear@col 0223  
                    __end_ofi2_TMR1_WriteTimer C542                           __end_ofi2__div_to_l_ A2D6  
                                OLED_Clear@row 0221           __end_of_TMR0_DefaultInterruptHandler C8A4  
        __size_of_TMR0_DefaultInterruptHandler 0002                   _TMR0_DefaultInterruptHandler C8A2  
                              i2__doprnt@width 009D                                  OLED_YX@Column 0214  
                         __CFG_WDTCWS$WDTCWS_7 000000                        __size_of_clearI2CErrors 001C  
                      ??_terminalSetCursorHome 02B8                                   ?_getI2CError 0001  
                      I2C2_MasterWrite@address 020C          terminalTextAttributes@input_attribute 02B9  
                                 ?_getADCError 0001                        __size_of_clearADCErrors 0010  
                     __size_of_TMR5_WriteTimer 0020                                 OLED_PutChar@ch 0220  
                            i2_TMR3_WriteTimer C542                               _QIIdleIOCHandler C65E  
                                   _RC2STAbits 000E9D                      i1TMR3_WriteTimer@timerVal 0100  
                 __end_of_ADCC_StartConversion C7D0                                       int$flags 005F  
                           ?i2_TMR3_WriteTimer 0001                                    ??_getUserID 020D  
                            ??_TMR2_StartTimer 0001                        I2C2_MasterWrite@trBlock 019E  
                            ??_TMR1_WriteTimer 0202                               i1_TMR3_StopTimer C87A  
                               ??_getUARTError 0200                                 __doprnt@tmpval 0279  
         __end_of_TMR3_DefaultInterruptHandler C89E          __size_of_TMR3_DefaultInterruptHandler 0002  
                 _TMR3_DefaultInterruptHandler C89C                  __size_of_I2C2_BusCollisionISR 000C  
                          _terminalClearScreen C6EE           __end_of_INT1_DefaultInterruptHandler C8AC  
        __size_of_INT1_DefaultInterruptHandler 0002                   _INT1_DefaultInterruptHandler C8AA  
                            ??_TMR5_Initialize 0200                             _getHoursFromOnTime A2D6  
                      ?_terminalTextAttributes 02B8               __size_of_I2C2_MasterReadTRBBuild 0052  
                            i2___awmod@divisor 0003                            ??i2_TMR3_WriteTimer 0003  
                            i2___awmod@counter 0005                              ?i2_TMR1_StopTimer 0001  
                            _getDaysFromOnTime ADCE                                     _INTCONbits 000FF2  
                                  _NVMCON1bits 000F81                                     _FVRCONbits 000F31  
                        ?_rightCapTouchHandler 0001                             ??i2_TMR1_StopTimer 0001  
                           ?_getDaysFromOnTime 020D                                       isdigit@c 0202  
                       ??_INTERRUPT_Initialize 0200                            ?_getHoursFromOnTime 020D  
            __size_of_printCurrentMeasurements 0456                                       memmove@d 0208  
                                     memmove@n 0204                                       memmove@s 020A  
                                     scale@scl 022F                      ?_printCurrentMeasurements 0001  
                           _EXT_INT_Initialize BF34                       __size_of_clearUARTErrors 000C  
            __size_of_I2C2_MasterWriteTRBBuild 0046                    ??_QIIdleChargedTimerHandler 0102  
                    ?_I2C2_MasterWriteTRBBuild 0200           __end_of_ADCC_DefaultInterruptHandler C8AE  
        __size_of_ADCC_DefaultInterruptHandler 0002                   _ADCC_DefaultInterruptHandler C8AC  
                            ??_TMR3_StartTimer 0001                                       intlevel1 0000  
                                     intlevel2 0000                                     _OLED_Clear BDCA  
                                    sprintf@ap 0298                                      sprintf@pb 029A  
                             __tdiv_to_l_@exp1 0210                                      sprintf@wh 028C  
                             __tdiv_to_l_@cntr 020F                                     _OLED_Frame 02D7  
                           _getMinorRevisionID C2FC             __end_of_getCauseOfResetStringSmall C100  
                   _getCauseOfResetStringSmall C0D0                               __tdiv_to_l_@quot 020B  
                              i2___xxtofl@sign 000D                      _ADC_PostProcessingHandler 4082  
                         ?_terminalClearScreen 0001                            ??_getDaysFromOnTime 0211  
               floatToEngineeringFormat@result 03AC                               ___lwmod@dividend 0200  
                          I2C2_ISR@i2c_address 00F9                               ___lldiv@dividend 0200  
                      ?_PIN_MANAGER_Initialize 0001                              __CFG_CLKOUTEN$OFF 000000  
                          ?_EXT_INT_Initialize 0001                      __end_ofi2_TMR3_WriteTimer C55E  
                         LM73Convert@POS5_Conv 0251                                    _reset_cause 02FF  
                             ?_getCauseOfReset 0001                               ??_TMR1_StopTimer 0200  
                 __end_of_getMinutesFromOnTime 9910                            ?_getMinorRevisionID 0001  
                                    strncpy@cp 0206                                      strncpy@to 0200  
            __size_of_floatToEngineeringFormat 0358                  ?_TMR0_DefaultInterruptHandler 0001  
                    ?_floatToEngineeringFormat 029F                                _CCP2_Initialize C390  
                         ??_getHoursFromOnTime 0211                                   ?_getDeviceID 020B  
                       I2C2_MasterWrite@length 020B                                _QI_current_edge 0196  
                                  _TMR1_Reload C70C                                       printf@ap 02B1  
                                     printf@pb 02B3                         __size_of_INT1_CallBack 0024  
           terminalTextAttributes@print_string 03EC                 __size_of_getCauseOfResetString 0030  
                                  _TMR3_Reload C6FE                  __end_of_getCauseOfResetString C0A0  
                  __size_of_getMajorRevisionID 003C                       _ADCC_GetConversionResult C686  
                            ??_freqMeasConvert 0150                 ?_EUSART2_SetRxInterruptHandler 0200  
             __end_of_OLED_UpdateFromRAMBuffer 9DFA                           _I2C2_MasterTRBInsert AB5C  
                             ??_TMR2_StopTimer 0100                              ??_TMR3_WriteTimer 0202  
       terminalTextAttributes@background_color 02B8                         __size_of_INT2_CallBack 0024  
                                 ?_LM73Convert 0001                 __end_of_terminalTextAttributes 6338  
                                 ?__tdiv_to_l_ 0200                            _leftCapTouchHandler C620  
                       __size_of_EUSART2_Write 0056                            _EUSART2_Receive_ISR AAB8  
                              _updateErrorLEDs BAEC                      __end_of_getDaysFromOnTime AE5E  
       __end_of_INTERRUPT_InterruptManagerHigh A4AE        __size_of_INTERRUPT_InterruptManagerHigh A4A6  
               _INTERRUPT_InterruptManagerHigh 0008                    getMajorRevisionID@REVID_RAW 020E  
                               _FVR_Initialize C7F8                           ??_EXT_INT_Initialize 0203  
                        CCP2_CaptureISR@module 0156                                       sprintf@f 028E  
                                     strcat@cp 0204                  ?_TMR3_DefaultInterruptHandler 0001  
                                     strcat@to 0200                  ?_INT1_DefaultInterruptHandler 0001  
                                     strcmp@s1 0200                                       strcmp@s2 0202  
                                   _SSP2DATPPS 000E90                              ringBufferLUT@line 02BA  
                             ___lldiv@quotient 0208                             _OLED_updateHandler 2E3C  
                                   _SSP2CLKPPS 000E8F                                ___lwmod@divisor 0202  
       __end_of_IOCBF2_DefaultInterruptHandler C8A8        __size_of_IOCBF2_DefaultInterruptHandler 0002  
               _IOCBF2_DefaultInterruptHandler C8A6                                _TMR0_Initialize C18C  
                                     strcpy@cp 0207                                       strlen@cp 0202  
                                     strcpy@to 0203                           ??_getMinorRevisionID 020B  
                              ___lwmod@counter 0204                               ??_TMR3_StopTimer 0200  
             __end_of_INT1_SetInterruptHandler C78A                        __end_of_CCP2_CaptureISR C5C6  
                            _getDeviceIDString AC9E                    ?_IOCBF3_SetInterruptHandler 0200  
                                   _TMR2_Start C88E                                     _TX2STAbits 000E9E  
                                ___fladd@signs 0240                     __size_ofi1_TMR3_WriteTimer 0020  
                          ?_OLED_updateHandler 0001                             ?_getDeviceIDString 020D  
        __end_of_INTERRUPT_InterruptManagerLow 00A2         __size_of_INTERRUPT_InterruptManagerLow 008A  
                _INTERRUPT_InterruptManagerLow 0018                                    ?_IOCBF2_ISR 0001  
                                  ?_IOCBF3_ISR 0001                 ??_ADCC_SetADTIInterruptHandler 0203  
               __end_of_PIN_MANAGER_Initialize AC9E                              ??_ADCC_Initialize 0203  
                        ??_terminalClearScreen 02B8                              i2__div_to_l_@exp1 000E  
                     __size_of_I2C2_MasterRead 0050                              i2__div_to_l_@cntr 000D  
                      _terminal_ringBufferPull A0EE                           ?_leftCapTouchHandler 0001  
                     __size_of_I2C2_Initialize 0036                ??_EUSART2_SetTxInterruptHandler 0203  
                            i2__div_to_l_@quot 0009                           ?_EUSART2_Receive_ISR 0001  
                                 ___fladd@aexp 0241                                   ___fladd@bexp 0242  
                ?_ADCC_DefaultInterruptHandler 0001                     ADC_PostProcessingHandler@i 0079  
                           __size_of_I2C2_Stop 0044                                _PIN_MANAGER_IOC C64A  
                     __end_of_I2C2_MasterWrite B97C                          _TMR2_InterruptHandler 0174  
                   __size_ofi2_TMR1_WriteTimer 001C                            ??_getDeviceIDString 020F  
                              _TMR1_Initialize B8DC              _EUSART2_RxDefaultInterruptHandler 017D  
                             ??_TMR5_StopTimer 0200                   __size_of_ADCC_StopConversion 0004  
